/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 06:17:54 GMT 2019
 */

package com.lts.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.lts.io.ArchiveScanner;
import com.lts.io.DirectoryScanner;
import com.lts.io.ImprovedFile;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.FileDescriptor;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.SequenceInputStream;
import java.util.Collection;
import java.util.HashMap;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ArchiveScanner_ESTest extends ArchiveScanner_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      archiveScanner0.myTempdir = null;
      Vector<String> vector0 = new Vector<String>();
      archiveScanner0.dirsIncluded = vector0;
      String[] stringArray0 = new String[1];
      archiveScanner0.setBasedir("ERz");
      stringArray0[0] = "OhkN~mYQ|v&X";
      archiveScanner0.setExcludes(stringArray0);
      Vector<Object> vector1 = new Vector<Object>();
      Vector<BufferedInputStream> vector2 = new Vector<BufferedInputStream>();
      archiveScanner0.filesNotIncluded = vector2;
      archiveScanner0.dirsNotIncluded = vector1;
      archiveScanner0.addDefaultExcludes();
      archiveScanner0.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      HashMap<InputStream, String> hashMap0 = new HashMap<InputStream, String>(2);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(bufferedInputStream0, bufferedInputStream0);
      hashMap0.put(sequenceInputStream0, "OhkN~mYQ|v&X");
      Collection<String> collection0 = hashMap0.values();
      vector0.addAll(collection0);
      archiveScanner0.setExcludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      vector0.iterator();
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory((File) null, "OhkN~mYQ|v&X", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ImprovedFile improvedFile0 = null;
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      archiveScanner0.myTempdir = null;
      Vector<String> vector0 = new Vector<String>();
      archiveScanner0.dirsIncluded = vector0;
      Vector<Object> vector1 = new Vector<Object>();
      Vector<BufferedInputStream> vector2 = new Vector<BufferedInputStream>();
      archiveScanner0.filesNotIncluded = vector2;
      archiveScanner0.dirsNotIncluded = vector1;
      archiveScanner0.addDefaultExcludes();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "OhkN~mYQ|v&X";
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.setExcludes(stringArray0);
      String[] stringArray1 = new String[3];
      stringArray1[0] = "|R&9";
      stringArray1[1] = ";,&{.jar";
      stringArray1[2] = "(L0AV?-[]-0zsyhvZ";
      archiveScanner0.setIncludes(stringArray1);
      archiveScanner0.setIncludes(stringArray1);
      Vector<Integer> vector3 = new Vector<Integer>();
      System.setCurrentTimeMillis(1040L);
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive((File) null, "|R&9");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.9909065731902369
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ImprovedFile improvedFile0 = null;
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      ArchiveScanner archiveScanner1 = new ArchiveScanner((ImprovedFile) null);
      archiveScanner1.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      Vector<Object> vector0 = new Vector<Object>();
      Object object0 = new Object();
      vector0.add(object0);
      archiveScanner1.addDefaultExcludes();
      String[] stringArray0 = new String[2];
      stringArray0[0] = ".zip";
      stringArray0[1] = "{rjA.jar";
      archiveScanner1.setIncludes(stringArray0);
      archiveScanner0.setExcludes(archiveScanner1.DEFAULT_ARCHIVE_EXTENSIONS);
      Vector<String> vector1 = new Vector<String>();
      archiveScanner1.dirsNotIncluded = vector1;
      // Undeclared exception!
      try { 
        archiveScanner1.processDirectory((File) null, ".zip", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      archiveScanner0.myTempdir = null;
      Vector<String> vector0 = new Vector<String>();
      archiveScanner0.dirsIncluded = vector0;
      String[] stringArray0 = new String[1];
      stringArray0[0] = "OhkN~mYQ|v&X";
      archiveScanner0.setExcludes(stringArray0);
      Vector<Object> vector1 = new Vector<Object>();
      Vector<BufferedInputStream> vector2 = new Vector<BufferedInputStream>();
      archiveScanner0.filesNotIncluded = vector2;
      archiveScanner0.dirsNotIncluded = vector1;
      archiveScanner0.addDefaultExcludes();
      archiveScanner0.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      HashMap<InputStream, String> hashMap0 = new HashMap<InputStream, String>(2);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(bufferedInputStream0, bufferedInputStream0);
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.setIncludes(stringArray0);
      Vector<Integer> vector3 = new Vector<Integer>();
      System.setCurrentTimeMillis(0);
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive((File) null, "OhkN~mYQ|v&X");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ImprovedFile improvedFile0 = null;
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      archiveScanner0.myTempdir = null;
      Vector<String> vector0 = new Vector<String>();
      archiveScanner0.dirsIncluded = vector0;
      String[] stringArray0 = new String[2];
      stringArray0[0] = "OhkN~mYQ|v&X";
      stringArray0[1] = "OhkN~mYQ|v&X";
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.setIncludes(stringArray0);
      ArchiveScanner archiveScanner1 = new ArchiveScanner((ImprovedFile) null);
      archiveScanner1.setExcludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      System.setCurrentTimeMillis(1000000L);
      archiveScanner1.setIncludes(stringArray0);
      archiveScanner1.setExcludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      archiveScanner1.setIncludes(stringArray0);
      archiveScanner0.setIncludes(archiveScanner1.DEFAULT_ARCHIVE_EXTENSIONS);
      Vector<Integer> vector1 = new Vector<Integer>();
      System.setCurrentTimeMillis(1000000L);
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive((File) null, "U_%G8kqH*vb_)");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "Error trying to list files in archive, .jar";
      stringArray0[1] = "Error trying to list files in archive, .jar";
      stringArray0[2] = "Error trying to list files in archive, .jar";
      stringArray0[3] = "tti@LB";
      stringArray0[4] = "jZfsC.jar";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Error trying to list files in archive, .jar");
      stringArray0[5] = ".jar";
      stringArray0[6] = "com.lts.io.IOUtilities";
      Vector<Integer> vector0 = new Vector<Integer>();
      archiveScanner0.filesExcluded = vector0;
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.setExcludes(stringArray0);
      System.setCurrentTimeMillis(1);
      archiveScanner0.processArchive((File) null, "Error trying to list files in archive, .jar");
      ArchiveScanner archiveScanner1 = new ArchiveScanner((ImprovedFile) null);
      archiveScanner1.excludes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      archiveScanner1.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      System.setCurrentTimeMillis(0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.7490906203903505
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      archiveScanner0.filesNotIncluded = null;
      String[] stringArray0 = new String[4];
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.dirsNotIncluded = vector0;
      stringArray0[0] = "Could not remove the destination file, ";
      stringArray0[1] = "OhkN~mYQ|v&X";
      stringArray0[2] = "OhkN~mYQ|v&X";
      stringArray0[3] = "OhkN~mYQ|v&X";
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.setExcludes(stringArray0);
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory((File) null, "OhkN~mYQ|v&X", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      File file0 = MockFile.createTempFile("&YM(5'&P@%", "{rjA");
      file0.mkdirs();
      FileSystemHandling.shouldAllThrowIOExceptions();
      File file1 = ImprovedFile.createTempFileName("sBcxA+s(:qI.jar.jar", "[JjbvRUg?{NZNt", file0);
      File file2 = file1.getAbsoluteFile();
      ImprovedFile.createTempFileName("", "&YM(5'&P@%", file1);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ImprovedFile improvedFile0 = new ImprovedFile("&YM(5'&P@%");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "&YM(5'&P@%";
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.setExcludes(stringArray0);
      String[] stringArray1 = new String[5];
      file1.setExecutable(true, true);
      stringArray1[0] = "{rjA";
      stringArray1[1] = "[JjbvRUg?{NZNt";
      stringArray1[2] = "{rjA";
      stringArray1[3] = "[JjbvRUg?{NZNt";
      stringArray1[4] = "&YM(5'&P@%";
      archiveScanner0.setIncludes(stringArray1);
      Vector<BufferedInputStream> vector0 = new Vector<BufferedInputStream>();
      archiveScanner0.filesIncluded = vector0;
      ImprovedFile improvedFile1 = new ImprovedFile("&YM(5'&P@%", "&YM(5'&P@%0 Y0m_T9`Q.jar");
      file2.setWritable(true, true);
      // Undeclared exception!
      try { 
        archiveScanner0.processFile("&YM(5'&P@%");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ImprovedFile improvedFile0 = null;
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "qx(S9b|MjJDWh$";
      stringArray0[1] = "qx(S9b|MjJDWh$";
      stringArray0[2] = "qx(S9b|MjJDWh$";
      archiveScanner0.excludes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      stringArray0[3] = "qx(S9b|MjJDWh$";
      stringArray0[4] = "qx(S9b|MjJDWh$";
      stringArray0[5] = "qx(S9b|MjJDWh$";
      stringArray0[6] = "qx(S9b|MjJDWh$";
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.setIncludes(stringArray0);
      Vector<Integer> vector0 = new Vector<Integer>();
      archiveScanner0.dirsExcluded = vector0;
      archiveScanner0.setExcludes(stringArray0);
      System.setCurrentTimeMillis(1);
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory((File) null, "qx(S9b|MjJDWh$", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ImprovedFile improvedFile0 = null;
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      archiveScanner0.filesNotIncluded = null;
      String[] stringArray0 = new String[4];
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.dirsNotIncluded = vector0;
      stringArray0[0] = "Could not remove the destination file, ";
      stringArray0[1] = "qx(S9b|MjJDWh$k";
      stringArray0[2] = "qx(S9b|MjJDWh$k";
      stringArray0[3] = "qx(S9b|MjJDWh$k";
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.setExcludes(stringArray0);
      System.setCurrentTimeMillis(1);
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive((File) null, "qx(S9b|MjJDWh$k");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      File file0 = MockFile.createTempFile("<liS:M?cvbf3\"P:9", "<liS:M?cvbf3\"P:9");
      file0.getAbsolutePath();
      file0.setReadOnly();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("sBcxA+s(:qI.jar.jar281320.S`hwJ)\\[jZ|~HB?:[");
      file0.toURL();
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "[6jbavRUg?{6Zt");
      FileSystemHandling.shouldAllThrowIOExceptions();
      File file1 = ImprovedFile.createTempFileName("sBcxA+s(:qI.jar.jar", "S`hwJ)[jZ|~HB?:[", (File) null);
      File file2 = file1.getAbsoluteFile();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ImprovedFile improvedFile0 = new ImprovedFile("<liS:M?cvbf3\"P:9");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      file2.delete();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "S`hwJ)[jZ|~HB?:[";
      archiveScanner0.setExcludes(stringArray0);
      String[] stringArray1 = new String[5];
      file2.delete();
      stringArray1[0] = "<liS:M?cvbf3\"P:9";
      stringArray1[1] = "[6jbavRUg?{6Zt";
      stringArray1[2] = "<liS:M?cvbf3\"P:9";
      stringArray1[3] = "[6jbavRUg?{6Zt";
      stringArray1[4] = "/tmp/<liS:M?cvbf3\"P:90<liS:M?cvbf3\"P:9";
      archiveScanner0.setIncludes(stringArray1);
      file1.toURL();
      ImprovedFile improvedFile1 = new ImprovedFile("/tmp/<liS:M?cvbf3\"P:90<liS:M?cvbf3\"P:9", "&YM(5'&P@%0 Y0m_T9`Q.jar");
      file2.setWritable(true, true);
      // Undeclared exception!
      try { 
        archiveScanner0.processFile("<liS:M?cvbf3\"P:9");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ImprovedFile improvedFile0 = null;
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      archiveScanner0.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      archiveScanner0.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      Vector<InputStream> vector0 = new Vector<InputStream>();
      DirectoryScanner.matchPath("b/r$So?Z+]Y7NY,e.", "WZ)[3:/6\"");
      archiveScanner0.filesIncluded = vector0;
      archiveScanner0.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      ArchiveScanner archiveScanner1 = new ArchiveScanner((ImprovedFile) null);
      archiveScanner1.setExcludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      System.setCurrentTimeMillis((-2915L));
      Vector<String> vector1 = new Vector<String>();
      archiveScanner0.dirsExcluded = vector1;
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive((File) null, "com.lts.pest.swing.PestTree");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.4471627089619605
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile(";,&{");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("!%JF/.jar/!%JF0T");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "!%JF");
      ImprovedFile improvedFile1 = new ImprovedFile((File) null, "!%JF");
      DirectoryScanner.matchPatternStart(";,&{", "!%JF");
      Vector<Integer> vector0 = new Vector<Integer>();
      Integer[] integerArray0 = new Integer[4];
      Integer integer0 = new Integer(4359);
      integerArray0[1] = integer0;
      Integer integer1 = new Integer(2647);
      integerArray0[2] = integer1;
      Integer integer2 = new Integer(1953);
      integerArray0[3] = integer2;
      vector0.toArray(integerArray0);
      Integer integer3 = new Integer(4);
      vector0.add(integer3);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("!%JF");
      FileSystemHandling.createFolder(evoSuiteFile1);
      ImprovedFile improvedFile2 = new ImprovedFile("!%JF", ".ar");
      improvedFile0.deleteOnExit();
      improvedFile2.deleteOnExit();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile2);
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(improvedFile1, ".ar", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String string0 = "";
      ImprovedFile improvedFile0 = new ImprovedFile("");
      improvedFile0.mkdir();
      ImprovedFile improvedFile1 = improvedFile0.createTempDir();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile1);
      improvedFile1.toURL();
      archiveScanner0.scandir(improvedFile1, "", false);
      improvedFile0.deleteDirectory();
      String[] stringArray0 = new String[12];
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream("");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      String string0 = "RiTt<{";
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-60);
      byteArray0[1] = (byte)13;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ImprovedFile improvedFile0 = new ImprovedFile("RiTt<{", "RiTt<{");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      ImprovedFile improvedFile1 = improvedFile0.createTempDir();
      ImprovedFile improvedFile2 = new ImprovedFile(improvedFile1, "RiTt<{");
      improvedFile2.renameTo(improvedFile1);
      improvedFile1.createNewFile();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ImprovedFile improvedFile3 = new ImprovedFile("(Ex_Z@@fbe9E&?mxS");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "(Ex_Z@@fbe9E&?mxS");
      improvedFile1.setWritable(false, true);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile2);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Vector<BufferedInputStream> vector0 = new Vector<BufferedInputStream>();
      archiveScanner0.toFileType(improvedFile1);
      try { 
        ImprovedFile.createTempDirectory("(Ex_Z@@fbe9E&?mxS", "Error trying to copy file to staging directory.  Input file: ", (File) improvedFile3);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Could not create directory, (Ex_Z@@fbe9E&?mxS, before creating temp directory with prefix (Ex_Z@@fbe9E&?mxS, suffix Error trying to copy file to staging directory.  Input file: 
         //
         verifyException("com.lts.io.ImprovedFile", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      archiveScanner0.myTempdir = null;
      Vector<String> vector0 = new Vector<String>();
      archiveScanner0.dirsIncluded = vector0;
      String[] stringArray0 = new String[1];
      stringArray0[0] = "OhkN~mYQ|v&X";
      archiveScanner0.setExcludes(stringArray0);
      Vector<Object> vector1 = new Vector<Object>();
      Vector<BufferedInputStream> vector2 = new Vector<BufferedInputStream>();
      archiveScanner0.filesNotIncluded = vector2;
      archiveScanner0.dirsNotIncluded = vector1;
      archiveScanner0.addDefaultExcludes();
      archiveScanner0.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      HashMap<InputStream, String> hashMap0 = new HashMap<InputStream, String>(2);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(bufferedInputStream0, bufferedInputStream0);
      hashMap0.put(sequenceInputStream0, "OhkN~mYQ|v&X");
      Collection<String> collection0 = hashMap0.values();
      vector0.addAll(collection0);
      archiveScanner0.processFile("fKHnc@7>TXNwW");
      assertEquals(0, ArchiveScanner.FILE);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.4399756932787802
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      File file0 = MockFile.createTempFile("&YM(5'&P@%", "]Ejj");
      file0.getAbsolutePath();
      File file1 = ImprovedFile.createTempFileName("[JjbvaUg?\"NZNH", "ShwJ)[jZ|~HB:[", file0);
      byte[] byteArray0 = new byte[9];
      byteArray0[2] = (byte)6;
      byteArray0[3] = (byte) (-48);
      byteArray0[4] = (byte)75;
      byteArray0[5] = (byte) (-20);
      byteArray0[6] = (byte)1;
      byteArray0[7] = (byte)73;
      file0.renameTo(file1);
      file1.getCanonicalFile();
      byteArray0[8] = (byte)117;
      ImprovedFile improvedFile0 = new ImprovedFile("2?^#_`\"%|$S0kHw?");
      file0.setWritable(false, false);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 46, (-226851835));
      MockFile mockFile0 = new MockFile("[JjbvaUg?\"NZNH", "[JjbvaUg?\"NZNH");
      byteArrayInputStream0.read(byteArray0);
      byteArrayInputStream0.skip(0L);
      improvedFile0.copyFrom((InputStream) byteArrayInputStream0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      Vector<BufferedInputStream> vector0 = new Vector<BufferedInputStream>();
      archiveScanner0.toFileType(file0);
      MockFile mockFile1 = new MockFile(file0, "&YM(5'&P@%");
      assertFalse(mockFile1.equals((Object)mockFile0));
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.432813901625505
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      File file0 = MockFile.createTempFile("&YM(5'&P@%", "Ejj");
      file0.getAbsolutePath();
      File file1 = ImprovedFile.createTempFileName("[JjbvaUg?{NZNH", "ShwJ)[jZ|~HB:[", file0);
      byte[] byteArray0 = new byte[9];
      byteArray0[2] = (byte)6;
      byteArray0[3] = (byte) (-48);
      byteArray0[4] = (byte)75;
      byteArray0[5] = (byte) (-20);
      byteArray0[6] = (byte)1;
      byteArray0[7] = (byte)73;
      file0.renameTo(file1);
      file1.getCanonicalFile();
      byteArray0[8] = (byte)117;
      file0.createNewFile();
      ImprovedFile improvedFile0 = new ImprovedFile("2?^#_`\"%|$S0kHw?");
      file0.setWritable(false, false);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 46, (-226851835));
      MockFile mockFile0 = new MockFile("[JjbvaUg?{NZNH", "[JjbvaUg?{NZNH");
      byteArrayInputStream0.skip(0L);
      improvedFile0.copyFrom((InputStream) byteArrayInputStream0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      Vector<BufferedInputStream> vector0 = new Vector<BufferedInputStream>();
      archiveScanner0.toFileType(file0);
      MockFile mockFile1 = new MockFile(file0, "&YM(5'&P@%");
      assertFalse(mockFile1.equals((Object)mockFile0));
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile(";,&{");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("!%JF/.jar/!%JF0T");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "!%JF");
      ImprovedFile improvedFile1 = new ImprovedFile((File) null, "!%JF");
      improvedFile0.renameTo(improvedFile1);
      String string0 = "[JjbvR\\Ug?{NZNt281320.S`hwJ)\\[jZ|~HB?:[.jar.jar.jar.jar";
      MockFile mockFile0 = new MockFile("[JjbvRUg?{NZNt281320.S`hwJ)[jZ|~HB?:[.jar.jar.jar.jar");
      mockFile0.getCanonicalFile();
      ImprovedFile improvedFile2 = new ImprovedFile("6*");
      improvedFile1.setWritable(false, false);
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)1, 419);
      MockFile mockFile1 = new MockFile("0v5xhO", "6*");
      byteArrayInputStream0.read(byteArray0);
      byteArrayInputStream0.skip((-1));
      improvedFile2.copyFrom((InputStream) byteArrayInputStream0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      Vector<BufferedInputStream> vector0 = new Vector<BufferedInputStream>();
      // Undeclared exception!
      try { 
        archiveScanner0.toFileType((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.432813901625505
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      File file0 = MockFile.createTempFile("&YM(5'&P@%", "{jjA");
      File file1 = ImprovedFile.createTempFileName("[JjbvaUg?{NZNH", "ShwJ)[jZ|~HB:[", file0);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-105);
      byteArray0[2] = (byte)6;
      byteArray0[3] = (byte) (-48);
      byteArray0[4] = (byte)75;
      byteArray0[5] = (byte) (-9);
      byteArray0[6] = (byte)1;
      byteArray0[7] = (byte)73;
      file0.renameTo(file1);
      file1.getCanonicalFile();
      byteArray0[8] = (byte)111;
      file0.createNewFile();
      ImprovedFile improvedFile0 = new ImprovedFile("2?^#_`\"%|$S0kHw?");
      file0.setWritable(false, false);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 46, (-226851848));
      byteArrayInputStream0.skip(0L);
      improvedFile0.copyFrom((InputStream) byteArrayInputStream0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Vector<BufferedInputStream> vector0 = new Vector<BufferedInputStream>();
      archiveScanner0.toFileType(file0);
      MockFile mockFile0 = new MockFile(file0, "&YM(5'&P@%");
      assertFalse(mockFile0.equals((Object)file0));
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("!%JF/.jar/!%JF0T");
      FileSystemHandling.createFolder(evoSuiteFile0);
      Vector<Integer> vector0 = new Vector<Integer>();
      int int0 = 6;
      Integer integer0 = new Integer(6);
      vector0.add(integer0);
      int int1 = 4;
      Integer integer1 = new Integer(4);
      Integer integer2 = new Integer(6);
      Integer integer3 = new Integer(1953);
      Integer[] integerArray0 = new Integer[5];
      integerArray0[0] = integer0;
      integerArray0[1] = integer1;
      Integer integer4 = new Integer(int1);
      Integer integer5 = new Integer(1953);
      Integer[] integerArray1 = new Integer[6];
      integerArray1[0] = integer4;
      integerArray1[1] = integer5;
      integerArray1[2] = integer0;
      integerArray1[3] = integer3;
      integerArray1[4] = integer0;
      integerArray1[5] = integer0;
      vector0.toArray(integerArray1);
      Integer integer6 = new Integer(42);
      vector0.add((Integer) int0);
      ImprovedFile improvedFile0 = new ImprovedFile(".jar", ".jar");
      improvedFile0.deleteOnExit();
      improvedFile0.deleteOnExit();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      try { 
        archiveScanner0.scandir(improvedFile0, "com.lts.util.TreeNode", true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // IO error scanning directory /home/ubuntu/termite/projects/78_caloriecount/.jar/.jar
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("e:[0.jar.jar");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[6];
      stringArray0[0] = ".zip";
      stringArray0[1] = "S`hwJ)[jZ|~HB?:[";
      stringArray0[3] = "$qCJp?Y<bNn";
      stringArray0[4] = "{rjA";
      stringArray0[5] = "e:[0.jar.jar";
      boolean boolean0 = archiveScanner0.isArchive(improvedFile0);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      ArchiveScanner archiveScanner1 = new ArchiveScanner((ImprovedFile) null);
      archiveScanner1.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      archiveScanner1.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      archiveScanner1.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      archiveScanner0.includes = archiveScanner1.DEFAULT_ARCHIVE_EXTENSIONS;
      ArchiveScanner archiveScanner2 = new ArchiveScanner((ImprovedFile) null);
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner2.filesExcluded = vector0;
      archiveScanner0.setExcludes(archiveScanner1.DEFAULT_ARCHIVE_EXTENSIONS);
      DirectoryScanner.matchPatternStart("<MRbi\"1\"d", "<MRbi\"1\"d");
      archiveScanner1.setIncludes(archiveScanner1.DEFAULT_ARCHIVE_EXTENSIONS);
      // Undeclared exception!
      try { 
        archiveScanner1.scanArchive((File) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.archive.AbstractNestedArchive", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      File file0 = MockFile.createTempFile("&YM(5'&P@%", "&YM(5'&P@%");
      Integer integer0 = new Integer(256);
      Integer integer1 = new Integer(256);
      Vector<Integer> vector0 = new Vector<Integer>();
      Integer integer2 = new Integer(256);
      vector0.add(integer2);
      Integer[] integerArray0 = new Integer[5];
      integerArray0[0] = integer0;
      Vector<Integer> vector1 = new Vector<Integer>();
      Integer integer3 = new Integer((-226851848));
      Integer integer4 = new Integer((-226851848));
      file0.mkdir();
      vector0.add(integer4);
      Integer[] integerArray1 = new Integer[2];
      integerArray1[0] = integer3;
      vector0.toArray(integerArray1);
      Integer integer5 = new Integer((int) integer2);
      Integer integer6 = new Integer((-2095));
      vector0.add(integer6);
      Integer integer7 = new Integer((int) integerArray0[0]);
      Integer integer8 = new Integer((-172262769));
      vector1.add(integer8);
      ImprovedFile improvedFile0 = new ImprovedFile(file0, "{rjA");
      improvedFile0.getAbsolutePath();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.isArchive(file0);
      System.setCurrentTimeMillis((long) integer2);
      System.setCurrentTimeMillis(504L);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      ArchiveScanner archiveScanner1 = new ArchiveScanner((ImprovedFile) null);
      archiveScanner1.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      archiveScanner1.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      archiveScanner1.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      archiveScanner0.includes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      archiveScanner0.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      ArchiveScanner archiveScanner2 = new ArchiveScanner((ImprovedFile) null);
      archiveScanner2.setExcludes(archiveScanner0.includes);
      System.setCurrentTimeMillis(2);
      archiveScanner2.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      archiveScanner0.setExcludes(archiveScanner1.DEFAULT_ARCHIVE_EXTENSIONS);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "y[ke,8?rN89Z ?`";
      stringArray0[1] = "|R&9";
      stringArray0[2] = "8{Y@fC$Hj6*Cr]";
      stringArray0[3] = ".war";
      stringArray0[6] = "8{Y@fC$Hj6*Cr]";
      ImprovedFile improvedFile0 = new ImprovedFile((File) null, ")2I2^'");
      improvedFile0.getAbsolutePath();
      ArchiveScanner archiveScanner3 = new ArchiveScanner((ImprovedFile) null);
      // Undeclared exception!
      try { 
        archiveScanner1.isArchive((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Integer integer0 = new Integer(256);
      Integer integer1 = new Integer(256);
      Vector<Integer> vector0 = new Vector<Integer>();
      Integer integer2 = new Integer(256);
      vector0.add(integer2);
      Integer[] integerArray0 = new Integer[11];
      integerArray0[0] = integer0;
      integerArray0[1] = integer0;
      Integer integer3 = new Integer((-195318624));
      vector0.add(integer3);
      integerArray0[2] = integer2;
      integerArray0[3] = integer0;
      integerArray0[4] = integer1;
      vector0.toArray(integerArray0);
      Integer integer4 = new Integer(0);
      Integer integer5 = new Integer((-2651));
      vector0.add(integer5);
      ImprovedFile improvedFile0 = new ImprovedFile((String) null, "[JjbvRUg?{NZNt281320.S`hwJ)[jZ|~HB?:[.jar.jar.jar");
      improvedFile0.deleteOnExit();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      try { 
        archiveScanner0.scanArchive(improvedFile0, "");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error trying to list archive, [JjbvRUg?{NZNt281320.S`hwJ)[jZ|~HB?:[.jar.jar.jar
         //
         verifyException("com.lts.io.archive.AbstractNestedArchive", e);
      }
  }
}
