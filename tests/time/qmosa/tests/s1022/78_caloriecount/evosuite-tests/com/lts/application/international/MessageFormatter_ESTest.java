/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 06:31:46 GMT 2019
 */

package com.lts.application.international;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.lts.LTSException;
import com.lts.application.ApplicationException;
import com.lts.application.international.MessageFormatter;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PrintWriter;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.io.StringWriter;
import java.util.Collection;
import java.util.Enumeration;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.PropertyResourceBundle;
import java.util.ResourceBundle;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MessageFormatter_ESTest extends MessageFormatter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      linkedList0.push("UME,_");
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.addBundle((ResourceBundle) null);
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      Locale locale1 = Locale.TRADITIONAL_CHINESE;
      messageFormatter0.temp();
      locale0.getDisplayScript(locale1);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)110;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0, 1, 846);
      ByteArrayInputStream byteArrayInputStream3 = new ByteArrayInputStream(byteArray0, 1321, (-2070787801));
      byteArrayInputStream0.read(byteArray0);
      PipedInputStream pipedInputStream1 = new PipedInputStream();
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) "";
      // Undeclared exception!
      try { 
        messageFormatter0.formatMessage("", objectArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = "]T9PAjeWfkiPU1B#b5";
      ApplicationException applicationException0 = new ApplicationException("qIxMC|KMLoIzyAU`2u");
      ApplicationException applicationException1 = new ApplicationException(applicationException0, "java.properties");
      applicationException0.addSuppressed(applicationException1);
      MockThrowable mockThrowable0 = new MockThrowable("resources.messages.standard");
      ApplicationException applicationException2 = new ApplicationException("resources.messages.standard");
      StringWriter stringWriter0 = new StringWriter(5);
      StringWriter stringWriter1 = new StringWriter(79);
      ApplicationException applicationException3 = new ApplicationException("--Z^ !s5_zD[R.:()", applicationException2);
      applicationException3.getSuppressed();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter1, false);
      mockPrintWriter0.println(1.0);
      LTSException.createStackTrace((PrintWriter) mockPrintWriter0);
      applicationException0.printStackTrace((PrintWriter) mockPrintWriter0);
      Throwable throwable0 = applicationException2.fillInStackTrace();
      ApplicationException applicationException4 = new ApplicationException(applicationException3, "critial.question.quit", applicationException3, applicationException3);
      applicationException0.addSuppressed(throwable0);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) "java.properties";
      // Undeclared exception!
      try { 
        messageFormatter0.formatMessage("resources.messages.standard", objectArray0, (ResourceBundle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Object object0 = new Object();
      StringReader stringReader0 = new StringReader("Q'VKp%&e(");
      Object object1 = new Object();
      ApplicationException applicationException0 = new ApplicationException("not impleeted");
      Object object2 = new Object();
      Object object3 = new Object();
      MockThrowable mockThrowable0 = new MockThrowable();
      // Undeclared exception!
      try { 
        messageFormatter0.initializeResourceBundle((List) null, (List) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.948720592834763
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = object2;
      Object object3 = new Object();
      Object[] objectArray1 = new Object[13];
      objectArray1[0] = object0;
      objectArray1[2] = object0;
      objectArray1[3] = object0;
      objectArray1[4] = object3;
      objectArray1[5] = object1;
      objectArray1[6] = object2;
      List list0 = MessageFormatter.buildList(objectArray1);
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.initializeResourceBundle(list0, list0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Object cannot be cast to java.lang.String
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.710027779724208
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.push("]T9PAjeWfkiPU1B#b5");
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      MessageFormatter messageFormatter1 = new MessageFormatter();
      ClassLoader classLoader1 = classLoader0.getParent();
      // Undeclared exception!
      try { 
        messageFormatter1.initializeResourceBundle((List<String>) linkedList0, (List<String>) linkedList0, (Locale) null, classLoader1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ResourceBundle", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.7741057932992024
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      dataInputStream0.skipBytes((-3835));
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(dataInputStream0);
      messageFormatter0.formatMessage("]T9PjeWfkPU1B#b5", (Object[]) null, (ResourceBundle) propertyResourceBundle0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage("F1mhC^;4C0vAa");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassLoader.getSystemClassLoader();
      Object object0 = new Object();
      Locale locale0 = Locale.ITALIAN;
      Object object1 = new Object();
      StringReader stringReader0 = new StringReader("com.lts.application.errors.vfsNotSupported");
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(stringReader0);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) "com.lts.application.errors.vfsNotSupported";
      Object object2 = new Object();
      objectArray0[1] = object2;
      objectArray0[2] = object1;
      String string0 = messageFormatter0.formatMessage("com.lts.application.errors.vfsNotSupported", objectArray0, (ResourceBundle) propertyResourceBundle0);
      assertEquals("", string0);
      assertNotNull(string0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Object[] objectArray0 = new Object[7];
      Object object0 = new Object();
      objectArray0[0] = object0;
      objectArray0[1] = (Object) messageFormatter0;
      objectArray0[2] = (Object) messageFormatter0;
      objectArray0[3] = (Object) "critical.com.lts.application.errors.resourceBundle.load";
      objectArray0[4] = (Object) messageFormatter0;
      objectArray0[5] = (Object) messageFormatter0;
      objectArray0[6] = (Object) "critical.com.lts.application.errors.resourceBundle.load";
      StringReader stringReader0 = new StringReader("com.lts.application.errors.vfsNotSupported");
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(stringReader0);
      String string0 = messageFormatter0.formatMessage("critical.com.lts.application.errors.resourceBundle.load", objectArray0, (ResourceBundle) propertyResourceBundle0);
      assertNull(string0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add((String) null);
      Locale locale0 = Locale.CHINA;
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.createLoadException(linkedList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      // Undeclared exception!
      try { 
        messageFormatter0.tryLoad((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ResourceBundle", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.022248870579868
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.addBundle((ResourceBundle) null);
      Locale locale0 = Locale.KOREA;
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ClassLoader classLoader1 = classLoader0.getParent();
      try { 
        messageFormatter0.initializeResourceBundle((List<String>) linkedList0, (List<String>) linkedList0, locale0, classLoader1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Could not find any resource bundle give names: ; and resource path: 
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ApplicationException applicationException0 = new ApplicationException("q");
      ApplicationException applicationException1 = new ApplicationException(applicationException0, "q");
      applicationException0.getException();
      ApplicationException applicationException2 = new ApplicationException("--Z^ !s5_zD[R.:()", "critial.question.quit", "]T9PAjeWfkPU1B#b5");
      StringReader stringReader0 = new StringReader("q");
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(stringReader0);
      ApplicationException applicationException3 = new ApplicationException("8A9z", propertyResourceBundle0);
      StringWriter stringWriter0 = new StringWriter(79);
      StringWriter stringWriter1 = stringWriter0.append('<');
      Throwable[] throwableArray0 = applicationException2.getSuppressed();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter1, false);
      applicationException0.printStackTrace((PrintWriter) mockPrintWriter0);
      applicationException1.fillInStackTrace();
      char[] charArray0 = new char[4];
      charArray0[0] = '<';
      charArray0[1] = '<';
      charArray0[2] = '<';
      charArray0[3] = '<';
      List list0 = MessageFormatter.buildList(throwableArray0);
      assertEquals(0, list0.size());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ClassLoader.getSystemClassLoader();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale locale0 = Locale.KOREA;
      Locale locale1 = locale0.stripExtensions();
      List<String> list0 = ResourceBundle.Control.FORMAT_PROPERTIES;
      List<String> list1 = ResourceBundle.Control.FORMAT_PROPERTIES;
      ResourceBundle.Control.getControl(list0);
      ResourceBundle.Control resourceBundle_Control0 = ResourceBundle.Control.getNoFallbackControl(list1);
      List<Locale> list2 = resourceBundle_Control0.getCandidateLocales("critcal.error.unknown", locale1);
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      linkedList3.spliterator();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      List<Locale> list3 = Locale.filter((List<Locale.LanguageRange>) linkedList3, (Collection<Locale>) list2, locale_FilteringMode0);
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list3);
      LinkedList<Locale.LanguageRange> linkedList4 = new LinkedList<Locale.LanguageRange>();
      MessageFormatter.buildList((Object[]) null);
      Locale locale2 = Locale.SIMPLIFIED_CHINESE;
      assertEquals("CN", locale2.getCountry());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      LinkedList<List<String>> linkedList0 = new LinkedList<List<String>>();
      ApplicationException applicationException0 = messageFormatter0.createLoadException(linkedList0);
      assertEquals("critical.com.lts.application.errors.resourceBundle.load", applicationException0.getKey());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Object[] objectArray0 = new Object[6];
      Object object0 = new Object();
      objectArray0[0] = object0;
      Object object1 = new Object();
      objectArray0[1] = object1;
      Object object2 = new Object();
      objectArray0[2] = object2;
      Object object3 = new Object();
      objectArray0[3] = object3;
      Object object4 = new Object();
      objectArray0[4] = object4;
      Object object5 = new Object();
      objectArray0[5] = object5;
      MessageFormatter.buildList(objectArray0);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      ApplicationException applicationException0 = new ApplicationException("");
      messageFormatter0.myLastException = (Throwable) applicationException0;
      Locale locale0 = Locale.ITALIAN;
      ApplicationException applicationException1 = (ApplicationException)messageFormatter0.getLastException();
      assertEquals("", applicationException1.getKey());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ClassLoader classLoader1 = ClassLoader.getSystemClassLoader();
      ClassLoader.getSystemClassLoader();
      classLoader1.clearAssertionStatus();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Could not create repository temp dir, ");
      classLoader1.setDefaultAssertionStatus(false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      ClassLoader classLoader2 = classLoader0.getParent();
      classLoader2.setDefaultAssertionStatus(false);
      classLoader0.clearAssertionStatus();
      classLoader0.setPackageAssertionStatus("", false);
      classLoader2.setDefaultAssertionStatus(true);
      classLoader0.setDefaultAssertionStatus(false);
      ClassLoader.getSystemClassLoader();
      ClassLoader.getSystemClassLoader();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      List<String> list0 = null;
      // Undeclared exception!
      try { 
        messageFormatter0.initializeResourceBundle((List<String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ApplicationException applicationException0 = new ApplicationException("");
      ApplicationException applicationException1 = new ApplicationException("--Z^ !s5_zD[R.:()");
      applicationException0.addSuppressed(applicationException1);
      MockThrowable mockThrowable0 = new MockThrowable("");
      StringWriter stringWriter0 = new StringWriter(79);
      StringWriter stringWriter1 = new StringWriter(1517);
      applicationException1.getSuppressed();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0, true);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0, true);
      LTSException.createStackTrace((PrintWriter) mockPrintWriter1);
      applicationException0.printStackTrace((PrintWriter) mockPrintWriter0);
      StringWriter stringWriter2 = new StringWriter(1517);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add("com.lts.pest.tree.IdTreeNode");
      Locale.forLanguageTag("com.lts.pest.tree.IdTreeNode");
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.createLoadException(linkedList0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to com.lts.application.international.MessageFormatter$LoadBundleError
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.initializeResourceBundle();
      // Undeclared exception!
      try { 
        messageFormatter0.tryLoad("com.lFs.pest.dt.IdTree");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      String string0 = "{W:^A 8`";
      Object[] objectArray0 = new Object[0];
      try { 
        messageFormatter0.getMessage("{W:^A 8`", objectArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      MockThrowable mockThrowable0 = new MockThrowable("resources.messages.standard");
      MockThrowable mockThrowable1 = new MockThrowable("resources.messages.standard", mockThrowable0);
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage((Throwable) mockThrowable1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ApplicationException applicationException0 = new ApplicationException("");
      ApplicationException applicationException1 = new ApplicationException(applicationException0, "");
      applicationException0.addSuppressed(applicationException1);
      Object object0 = new Object();
      ApplicationException applicationException2 = new ApplicationException("--Z^ !s5_zD[R.:()", "critial.question.quit", "]T9PAjeWfkiPU1B#b5");
      StringWriter stringWriter0 = new StringWriter(79);
      StringWriter stringWriter1 = new StringWriter('<');
      applicationException2.getSuppressed();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter1, false);
      LTSException.createStackTrace((PrintWriter) mockPrintWriter0);
      applicationException0.printStackTrace((PrintWriter) mockPrintWriter0);
      ApplicationException applicationException3 = new ApplicationException(applicationException0, "--Z^ !s5_zD[R.:()", stringWriter0, "--Z^ !s5_zD[R.:()");
      applicationException3.addSuppressed(applicationException2);
      ClassLoader.getSystemClassLoader();
      Object object1 = new Object();
      ApplicationException applicationException4 = new ApplicationException(applicationException0, "", applicationException0, (Object) null, "--Z^ !s5_zD[R.:()");
      applicationException4.getLocalizedMessage();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0, 25);
      Object object2 = new Object();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage((Throwable) applicationException3);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "m6S<L~<L)T");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "com.lts.swing.menu.MenuBuilder");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "E@");
      ClassLoader.getSystemClassLoader();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)31;
      byteArray0[1] = (byte) (-68);
      byteArray0[2] = (byte) (-67);
      byteArray0[3] = (byte)39;
      byteArray0[4] = (byte)126;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.markSupported();
      byteArrayInputStream1.read(byteArray0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      pipedInputStream0.markSupported();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0, (byte)126);
      Object object0 = new Object();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.addResourceBundles();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.8742830984023096
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add("*[>9");
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      Locale locale0 = Locale.KOREA;
      Locale locale1 = locale0.stripExtensions();
      List<String> list0 = ResourceBundle.Control.FORMAT_PROPERTIES;
      List<String> list1 = ResourceBundle.Control.FORMAT_PROPERTIES;
      ResourceBundle.Control resourceBundle_Control0 = ResourceBundle.Control.getNoFallbackControl(list1);
      List<Locale> list2 = resourceBundle_Control0.getCandidateLocales("d^_\"f|/", locale1);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      List<Locale> list3 = Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) list2, locale_FilteringMode0);
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      List<Locale> list4 = Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) list3, locale_FilteringMode1);
      Locale.lookup(linkedList1, list4);
      Locale locale2 = Locale.GERMAN;
      Locale locale3 = Locale.GERMAN;
      List<Locale> list5 = resourceBundle_Control0.getCandidateLocales("oA", locale3);
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      linkedList0.clone();
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList4 = new LinkedList<Locale.LanguageRange>();
      linkedList2.spliterator();
      Locale.filter((List<Locale.LanguageRange>) linkedList3, (Collection<Locale>) list5, locale_FilteringMode0);
      LinkedList<Locale.LanguageRange> linkedList5 = new LinkedList<Locale.LanguageRange>();
      Locale.filter((List<Locale.LanguageRange>) linkedList2, (Collection<Locale>) list2);
      Locale.filter((List<Locale.LanguageRange>) linkedList5, (Collection<Locale>) list5);
      locale1.getUnicodeLocaleKeys();
      locale1.clone();
      LinkedList<Locale.LanguageRange> linkedList6 = new LinkedList<Locale.LanguageRange>();
      List<String> list6 = ResourceBundle.Control.FORMAT_CLASS;
      MessageFormatter messageFormatter0 = new MessageFormatter();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      classLoader0.getParent();
      try { 
        messageFormatter0.initializeResourceBundle(list0, list6, locale0, classLoader0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Could not find any resource bundle give names: java.class; and resource path: java.properties
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.4399756932787802
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "]T9PAjeWfkPU1B#b5");
      LinkedList<String> linkedList0 = new LinkedList<String>();
      messageFormatter0.listToString(linkedList0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      Locale locale0 = Locale.US;
      // Undeclared exception!
      try { 
        messageFormatter0.tryLoad("/", "/");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ResourceBundle", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.5935041414150646
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      List<String> list0 = ResourceBundle.Control.FORMAT_DEFAULT;
      messageFormatter0.listToString(list0);
      String string0 = ":uIts8y;v@OBks";
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      linkedList0.spliterator();
      List<String> list1 = ResourceBundle.Control.FORMAT_PROPERTIES;
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage(":uIts8y;v@OBks", (Object) ":uIts8y;v@OBks", (Object) list1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.1562371055889518
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add("*[>9");
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      Locale locale0 = Locale.KOREA;
      Locale locale1 = locale0.stripExtensions();
      List<String> list0 = ResourceBundle.Control.FORMAT_PROPERTIES;
      ResourceBundle.Control resourceBundle_Control0 = ResourceBundle.Control.getNoFallbackControl(list0);
      List<Locale> list1 = resourceBundle_Control0.getCandidateLocales("d^_\"f|/", locale1);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      List<Locale> list2 = Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) list1, locale_FilteringMode0);
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      List<Locale> list3 = Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) list2, locale_FilteringMode1);
      Locale.lookup(linkedList1, list3);
      Locale locale2 = Locale.GERMAN;
      List<Locale> list4 = resourceBundle_Control0.getCandidateLocales("/;0Trp(rn+?z&V;:>", locale2);
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      linkedList0.clone();
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      linkedList1.spliterator();
      Locale.FilteringMode locale_FilteringMode2 = Locale.FilteringMode.EXTENDED_FILTERING;
      List<Locale> list5 = Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) list4, locale_FilteringMode2);
      LinkedList<Locale.LanguageRange> linkedList4 = new LinkedList<Locale.LanguageRange>();
      Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) list5);
      linkedList0.add("com.lts.util.CollectionUtils$3");
      linkedList0.add("*[>9");
      MessageFormatter messageFormatter0 = new MessageFormatter();
      try { 
        messageFormatter0.initializeResourceBundle((List<String>) linkedList0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Could not find any resource bundle give names: messages; and resource path: *[>9, com.lts.util.CollectionUtils$3, *[>9
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "m6S<L~<L)T");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "com.lts.swing.menu.MenuBuilder");
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "E@");
      ClassLoader.getSystemClassLoader();
      ClassLoader.getSystemClassLoader();
      ApplicationException applicationException0 = new ApplicationException("m6S<L~<L)T", classLoader0);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.getLastException();
      // Undeclared exception!
      try { 
        applicationException0.addSuppressed((Throwable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Cannot suppress a null exception.
         //
         verifyException("java.lang.Throwable", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.1800610118783306
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add("E<|plqHPjUykGym");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      ClassLoader.getSystemClassLoader();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "resources.messages.standard");
      ClassLoader.getSystemClassLoader();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      LinkedList<String> linkedList1 = new LinkedList<String>();
      linkedList1.add("");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      try { 
        messageFormatter0.initializeResourceBundle((List<String>) linkedList1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Could not find any resource bundle give names: messages; and resource path: 
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.6868977693384444
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Object object0 = new Object();
      StringReader stringReader0 = new StringReader("Q'VKp%&e(");
      messageFormatter0.listToString((List<String>) null);
      Object object1 = new Object();
      ApplicationException applicationException0 = new ApplicationException("not impleeted");
      Object object2 = new Object();
      Object object3 = new Object();
      MockThrowable mockThrowable0 = new MockThrowable();
      messageFormatter0.temp();
      // Undeclared exception!
      try { 
        messageFormatter0.tryLoad("/", "not impleeted");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ResourceBundle", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.9366147725931562
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ApplicationException applicationException0 = new ApplicationException("qIxMC|KMLoIzyAU`2u");
      ApplicationException applicationException1 = new ApplicationException(applicationException0, "java.properties");
      applicationException0.addSuppressed(applicationException1);
      MockThrowable mockThrowable0 = new MockThrowable("resources.messages.standard");
      ApplicationException applicationException2 = new ApplicationException("loadingResources", "--Z^ !s5_zD[R.:()", "criti}l.question.quit");
      StringWriter stringWriter0 = new StringWriter(5);
      StringWriter stringWriter1 = new StringWriter(79);
      ApplicationException applicationException3 = new ApplicationException("loadingResources");
      applicationException3.getSuppressed();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter1, false);
      LTSException.createStackTrace((PrintWriter) mockPrintWriter0);
      applicationException0.printStackTrace((PrintWriter) mockPrintWriter0);
      applicationException2.fillInStackTrace();
      ApplicationException applicationException4 = new ApplicationException(applicationException3, "criti}l.question.quit", applicationException3, applicationException3);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      applicationException2.addSuppressed(applicationException3);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      String string0 = MessageFormatter.DEFAULT_BUNDLE;
      LinkedList<Integer> linkedList1 = new LinkedList<Integer>();
      try { 
        messageFormatter0.initializeResourceBundle((List) linkedList1, (List) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Could not find any resource bundle give names: null; and resource path: 
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      List list0 = messageFormatter0.loadCriticalBundles();
      assertTrue(list0.isEmpty());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      MockThrowable mockThrowable0 = new MockThrowable("resources.messages.standard");
      StringWriter stringWriter0 = new StringWriter(79);
      StringWriter stringWriter1 = new StringWriter(79);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0, true);
      Object[] objectArray0 = new Object[0];
      mockPrintWriter0.printf("ucsH]9lg)*fxti[", objectArray0);
      mockPrintWriter0.println();
      LTSException.createStackTrace((PrintWriter) mockPrintWriter0);
      Locale locale0 = Locale.ROOT;
      locale0.clone();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.listResources((String) null, classLoader0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add("*[>9");
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      Locale locale0 = Locale.KOREA;
      Locale locale1 = locale0.stripExtensions();
      List<String> list0 = ResourceBundle.Control.FORMAT_PROPERTIES;
      ResourceBundle.Control resourceBundle_Control0 = ResourceBundle.Control.getNoFallbackControl(list0);
      List<Locale> list1 = resourceBundle_Control0.getCandidateLocales("d^_\"f|/", locale1);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      List<Locale> list2 = Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) list1, locale_FilteringMode0);
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      List<Locale> list3 = Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) list2, locale_FilteringMode1);
      Locale.lookup(linkedList1, list3);
      Locale locale2 = Locale.GERMAN;
      List<Locale> list4 = resourceBundle_Control0.getCandidateLocales("/;0Trp(rn+?z&V;:>", locale2);
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      linkedList0.clone();
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList4 = new LinkedList<Locale.LanguageRange>();
      linkedList1.spliterator();
      Locale.FilteringMode locale_FilteringMode2 = Locale.FilteringMode.EXTENDED_FILTERING;
      List<Locale> list5 = Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) list4, locale_FilteringMode2);
      LinkedList<Locale.LanguageRange> linkedList5 = new LinkedList<Locale.LanguageRange>();
      Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) list5);
      locale0.getUnicodeLocaleKeys();
      locale1.clone();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.listResources("*[>9", classLoader0);
      List list6 = messageFormatter0.listResources("*[>9", classLoader0);
      assertEquals(0, list6.size());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ApplicationException applicationException0 = new ApplicationException("");
      ApplicationException applicationException1 = new ApplicationException(applicationException0, "SO^P%");
      applicationException0.addSuppressed(applicationException1);
      MockThrowable mockThrowable0 = new MockThrowable("--Z^ !s5_zD[R.:()");
      MessageFormatter.LoadBundleError messageFormatter_LoadBundleError0 = new MessageFormatter.LoadBundleError("l!:6Y9Q*'", applicationException0);
      ApplicationException applicationException2 = new ApplicationException("", "critial.question.quit", messageFormatter_LoadBundleError0);
      StringWriter stringWriter0 = new StringWriter(79);
      StringWriter stringWriter1 = new StringWriter(0);
      applicationException2.getSuppressed();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0, false);
      LTSException.createStackTrace((PrintWriter) mockPrintWriter0);
      applicationException0.printStackTrace((PrintWriter) mockPrintWriter0);
      Throwable throwable0 = applicationException0.fillInStackTrace();
      ApplicationException applicationException3 = new ApplicationException(throwable0, "]T9PAjeWfkiPU1B#b5", applicationException1, "]T9PAjeWfkiPU1B#b5");
      applicationException2.addSuppressed(throwable0);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      try { 
        messageFormatter0.formatMessage((String) null, (Object[]) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte) (-117);
      byteArray0[2] = (byte)6;
      byteArray0[3] = (byte)12;
      byteArray0[4] = (byte)2;
      byteArray0[5] = (byte)47;
      byteArray0[6] = (byte) (-76);
      byteArray0[7] = (byte)25;
      byteArray0[8] = (byte)19;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(byteArrayInputStream0);
      Integer integer0 = new Integer(47);
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage("om.lFs.estd.IdTree", (Object) null, (Object) propertyResourceBundle0, (Object) integer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ApplicationException applicationException0 = new ApplicationException("");
      ApplicationException applicationException1 = new ApplicationException("--Z^ !s5_zD[R.:()");
      applicationException0.addSuppressed(applicationException1);
      MockThrowable mockThrowable0 = new MockThrowable("");
      StringWriter stringWriter0 = new StringWriter(79);
      StringWriter stringWriter1 = new StringWriter(1517);
      Throwable[] throwableArray0 = applicationException1.getSuppressed();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0, true);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0, true);
      LTSException.createStackTrace((PrintWriter) mockPrintWriter1);
      applicationException0.printStackTrace((PrintWriter) mockPrintWriter0);
      applicationException1.fillInStackTrace();
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[7];
      StackTraceElement stackTraceElement0 = new StackTraceElement("vKfJ_0zj^.", "--Z^ !s5_zD[R.:()", "] h,", 1517);
      stackTraceElementArray0[0] = stackTraceElement0;
      StackTraceElement stackTraceElement1 = new StackTraceElement("+[dYS", "}qkti 'DbCmQa", "KtR]m ", 2);
      stackTraceElementArray0[1] = stackTraceElement1;
      StackTraceElement stackTraceElement2 = new StackTraceElement("] h,", "}qkti 'DbCmQa", "Y", 664);
      stackTraceElementArray0[2] = stackTraceElement2;
      StackTraceElement stackTraceElement3 = new StackTraceElement("] h,", "vKfJ_0zj^.", ".", 664);
      stackTraceElementArray0[3] = stackTraceElement3;
      StackTraceElement stackTraceElement4 = new StackTraceElement("Y", "}qkti 'DbCmQa", "[", 256);
      stackTraceElementArray0[4] = stackTraceElement4;
      StackTraceElement stackTraceElement5 = new StackTraceElement(", ", ".", "", 256);
      stackTraceElementArray0[5] = stackTraceElement5;
      StackTraceElement stackTraceElement6 = new StackTraceElement(" o*Q]M'2wW5+#$f~p6-", "+[dYS", "KtR]m ", 589);
      stackTraceElementArray0[6] = stackTraceElement6;
      applicationException0.setStackTrace(stackTraceElementArray0);
      MockThrowable mockThrowable1 = new MockThrowable("+[dYS");
      ApplicationException applicationException2 = new ApplicationException(mockThrowable1, "KtR]m ", applicationException1, stringWriter1);
      applicationException0.addSuppressed(applicationException1);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      LTSException.createStackTrace((PrintWriter) mockPrintWriter1);
      try { 
        messageFormatter0.formatMessage("MX<@8T2B", throwableArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }
}
