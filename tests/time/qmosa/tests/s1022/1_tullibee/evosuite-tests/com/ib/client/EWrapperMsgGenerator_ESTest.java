/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 06:18:10 GMT 2019
 */

package com.ib.client;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ib.client.Contract;
import com.ib.client.ContractDetails;
import com.ib.client.EWrapperMsgGenerator;
import com.ib.client.Execution;
import com.ib.client.Order;
import com.ib.client.OrderState;
import com.ib.client.UnderComp;
import java.util.Comparator;
import java.util.Vector;
import java.util.function.Predicate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class EWrapperMsgGenerator_ESTest extends EWrapperMsgGenerator_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Vector<Object> vector0 = new Vector<Object>();
      Contract contract0 = new Contract(13, "L/Chw$98pqAk:B$~I", "u`mT", "u`mT", (-819), "L/Chw$98pqAk:B$~I", "u`mT", "u`mT", "L/Chw$98pqAk:B$~I", "L/Chw$98pqAk:B$~I", vector0, "L/Chw$9s8pqAk:B$~I", false, "L/Chw$9s8pqAk:B$~I", "OptionAskExchStr");
      Order order0 = new Order();
      String string0 = EWrapperMsgGenerator.tickOptionComputation(2146714665, 1394, 2.147483647E9, 0.0, 2, 2.147483647E9);
      assertEquals("id=2146714665  unknown: vol = 2.147483647E9 delta = 0.0", string0);
      
      contract0.m_secIdType = null;
      order0.m_overridePercentageConstraints = false;
      String string1 = EWrapperMsgGenerator.tickOptionComputation(0, 13, 3, 1.7976931348623157E308, 1394, (-3719.6384919));
      assertEquals("id=0  modelOptComp: vol = 3.0 delta = N/A: modelPrice = 1394.0: pvDividend = N/A", string1);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickOptionComputation(718, 13, 2482.822608789642, 4005.423905899873, (-1.0), 4142.0);
      assertEquals("id=718  modelOptComp: vol = 2482.822608789642 delta = N/A: modelPrice = N/A: pvDividend = 4142.0", string0);
      
      String string1 = EWrapperMsgGenerator.tickOptionComputation((-819), 139, (-462.0687), (-6690.5), (-1798.240564761), 718);
      assertEquals("id=-819  unknown: vol = N/A delta = N/A", string1);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.5179872908529677
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Vector<Object> vector0 = new Vector<Object>();
      Object object0 = new Object();
      vector0.add(object0);
      Contract contract0 = new Contract((-2489), "l~7:t", "BAG", "8<$,", (-1105), "Wx=:&rXE]nT'", "lE[Bs4+[oL", "L/Chw$98pqAk:B$~I", "8<$,", "", vector0, "BAG", false, " scaleInitLevelSize=", "V0H@Nh-Zv@q");
      Order order0 = new Order();
      OrderState orderState0 = new OrderState();
      EWrapperMsgGenerator.openOrder(16, contract0, order0, orderState0);
      String string0 = EWrapperMsgGenerator.tickPrice(0, Integer.MAX_VALUE, 127.1, (-2888));
      assertEquals("id=0  unknown=127.1  canAutoExecute", string0);
      
      EWrapperMsgGenerator.openOrderEnd();
      String string1 = EWrapperMsgGenerator.orderStatus(16, (String) null, 1, 0, 0, 2, 0, 1.7976931348623157E308, (-2489), "couponType = ");
      assertEquals("order status: orderId=16 clientId=-2489 permId=2 status=null filled=1 remaining=0 avgFillPrice=0.0 lastFillPrice=1.7976931348623157E308 parent Id=0 whyHeld=couponType = ", string1);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Vector<Object> vector0 = new Vector<Object>();
      Contract contract0 = new Contract(13, "L/Chw$98pqAk:B$~I", "u`mT", "u`mT", (-819), "L/Chw$98pqAk:B$~I", "u`mT", "u`mT", "L/Chw$98pqAk:B$~I", "  It does not support API scanner subscription.", vector0, "L/Chw$9s8pqAk:B$~I", false, "L/Chw$9s8pqAk:B$~I", "OptionAskExchStr");
      Order order0 = new Order();
      String string0 = EWrapperMsgGenerator.tickOptionComputation((-2553), 2143897453, 0.0, 1.7976931348623157E308, 1.7976931348623157E308, (-379.59));
      assertEquals("id=-2553  unknown: vol = 0.0 delta = N/A", string0);
      
      String string1 = EWrapperMsgGenerator.tickOptionComputation((-1969722709), Integer.MAX_VALUE, Integer.MAX_VALUE, (-1248.241), 1.7976931348623157E308, 1.7976931348623157E308);
      assertEquals("id=-1969722709  unknown: vol = 2.147483647E9 delta = N/A", string1);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.3401196061221263
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      EWrapperMsgGenerator.tickOptionComputation(718, 13, 2482.822608789642, 4005.423905899873, (-1.0), 4142.0);
      EWrapperMsgGenerator.tickOptionComputation(718, 2829, 85.5252957, (-1787.89876723051), 2021.275, 1.0);
      EWrapperMsgGenerator.tickSnapshotEnd(718);
      EWrapperMsgGenerator.updateMktDepthL2((-2147483647), 48, "id=718  modelOptComp: vol = 2482.822608789642 delta = N/A: modelPrice = N/A: pvDividend = 4142.0", (-931), 718, (-462.0687), (-1178));
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.scannerData((-2146511981), 2146316135, (ContractDetails) null, "updateMktDepth: -2147483647 48 id=718  modelOptComp: vol = 2482.822608789642 delta = N/A: modelPrice = N/A: pvDividend = 4142.0 -931 718 -462.0687 -1178", "id=718 =============== end ===============", "id=718  unknown: vol = 85.5252957 delta = N/A", "id=718  modelOptComp: vol = 2482.822608789642 delta = N/A: modelPrice = N/A: pvDividend = 4142.0");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Vector<Object> vector0 = new Vector<Object>();
      Object object0 = new Object();
      vector0.add(object0);
      String string0 = EWrapperMsgGenerator.tickOptionComputation(3669, (-2489), (-1873.0), 2344.1762603108414, 887.1574821247, 1.0);
      assertEquals("id=3669  unknown: vol = N/A delta = N/A", string0);
      
      String string1 = EWrapperMsgGenerator.tickOptionComputation((-658), (-1105), 1.0, 1.0, (-1409.91314831), (-2102.24237));
      assertEquals("id=-658  unknown: vol = 1.0 delta = 1.0", string1);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.2248830687452417
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Vector<Object> vector0 = new Vector<Object>();
      Object object0 = new Object();
      vector0.add(object0);
      Contract contract0 = new Contract((-2489), "l~7:t", "BAG", "8<$,", (-1105), "Wx=:&rXE]nT'", "lE[Bs4+[oL", "L/Chw$98pqAk:B$~I", "8<$,", "D5;, |E9{A4BzBOO1", vector0, "BAG", false, " scaleInitLevelSize=", "V0H@Nh-Zv@q");
      Order order0 = new Order();
      OrderState orderState0 = new OrderState();
      EWrapperMsgGenerator.openOrder((-501), contract0, order0, orderState0);
      String string0 = EWrapperMsgGenerator.tickString(0, '?', (String) null);
      assertEquals("id=0  unknown=null", string0);
      
      String string1 = EWrapperMsgGenerator.openOrderEnd();
      assertEquals(" =============== end ===============", string1);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      int int0 = 4142;
      EWrapperMsgGenerator.tickOptionComputation(1096, 4142, 4142, (-0.8369720601009691), 4142, 2482.78873);
      Order order0 = new Order();
      order0.m_algoStrategy = "sS\"( \"%b";
      order0.m_origin = 1096;
      OrderState orderState0 = new OrderState("bidPrice", (String) null, (String) null, "fHKsqMK@p\"O/>>B", 1067.1634690072592, 1.7976931348623157E308, 0.0, "id=1096  unknown: vol = 4142.0 delta = -0.8369720601009691", "");
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.openOrder(4142, (Contract) null, order0, orderState0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.5179872908529677
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Vector<Object> vector0 = new Vector<Object>();
      Contract contract0 = new Contract((-2489), "l~7:t", "BAG", "8<$,", (-1105), "Wx=:&rXE]nT'", "lE[Bs4+[oL", "L/Chw$98pqAk:B$~I", "8<$,", "", vector0, "BAG", false, " scaleInitLevelSize=", "V0H@Nh-Zv@q");
      Predicate<Object> predicate0 = Predicate.isEqual((Object) " scaleInitLevelSize=");
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate1.and(predicate0);
      Predicate<Object> predicate3 = predicate2.or(predicate1);
      vector0.removeIf(predicate3);
      Order order0 = new Order();
      OrderState orderState0 = new OrderState();
      EWrapperMsgGenerator.openOrder(16, contract0, order0, orderState0);
      String string0 = EWrapperMsgGenerator.tickPrice(0, Integer.MAX_VALUE, 127.1, (-2888));
      assertEquals("id=0  unknown=127.1  canAutoExecute", string0);
      
      ContractDetails contractDetails0 = new ContractDetails(contract0, "S`[n(}", "L/Chw$98pqAk:B$~I", 0, (String) null, "BAG", 535, "a.", "V0H@Nh-Zv@q", (String) null, "BOND", (String) null, "", (String) null, " scaleInitLevelSize=");
      String string1 = EWrapperMsgGenerator.tickSize((-1105), (-2888), (-1544));
      assertEquals("id=-1105  unknown=-1544", string1);
      
      ContractDetails contractDetails1 = new ContractDetails();
      String string2 = EWrapperMsgGenerator.scannerData(49, 1, contractDetails1, (String) null, "  It does not support snapshot market data requests.", "(;XGrr/A%Ap^?i3QBr_", "OptionCallOpenInterest");
      assertEquals("id = 49 rank=1 symbol=null secType=null expiry=null strike=0.0 right=null exchange=null currency=null localSymbol=null marketName=null tradingClass=null distance=null benchmark=  It does not support snapshot market data requests. projection=(;XGrr/A%Ap^?i3QBr_ legsStr=OptionCallOpenInterest", string2);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      EWrapperMsgGenerator.orderStatus(0, "e#QxX^s?@aEl)}P", 0, 0, 0.0, 0, 0, 137.0, 0, "|K8bvg/7r-Q1y\u0005:-%");
      EWrapperMsgGenerator.receiveFA(0, "order status: orderId=0 clientId=0 permId=0 status=e#QxX^s?@aEl)}P filled=0 remaining=0 avgFillPrice=0.0 lastFillPrice=137.0 parent Id=0 whyHeld=|K8bvg/7r-Q1y\u0005:-%");
      int int0 = 0;
      Vector<String> vector0 = new Vector<String>();
      Contract contract0 = new Contract(0, "", "", "", 0.0, "e#QxX^s?@aEl)}P", "ASWMBpJE~701b_!rq", "", "ASWMBpJE~701b_!rq", "", vector0, "com.ib.client.Order", false, "", "");
      UnderComp underComp0 = contract0.m_underComp;
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.deltaNeutralValidation(0, (UnderComp) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Vector<String> vector0 = new Vector<String>();
      Order order0 = new Order();
      order0.m_delta = 504.09661248469;
      order0.m_nbboPriceCap = (double) 472;
      String string0 = EWrapperMsgGenerator.tickOptionComputation(1, 1394, 1.7976931348623157E308, 1.7976931348623157E308, 1647.9321216, 1.7976931348623157E308);
      assertEquals("id=1  unknown: vol = N/A delta = N/A", string0);
      
      String string1 = EWrapperMsgGenerator.updateMktDepth((-2145541981), (-443), (-1233), (-2458), 1288.88014021, 1420);
      assertEquals("updateMktDepth: -2145541981 -443 -1233 -2458 1288.88014021 1420", string1);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.5981863871455344
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Vector<Object> vector0 = new Vector<Object>();
      vector0.addElement("lE[Bs4+[oL");
      Object object0 = new Object();
      vector0.add(object0);
      String string0 = EWrapperMsgGenerator.tickOptionComputation(2144861567, (-1105), 2144861567, (-5158.0322045), 2144861567, (-1437.379));
      assertEquals("id=2144861567  unknown: vol = 2.144861567E9 delta = N/A", string0);
      
      String string1 = EWrapperMsgGenerator.tickSnapshotEnd(13);
      assertEquals("id=13 =============== end ===============", string1);
      
      String string2 = EWrapperMsgGenerator.updateMktDepthL2((-3098), 2145692137, "L/Chw$98pqAk:B$~I", 882, 13, 2548.53691493669, 10);
      assertEquals("updateMktDepth: -3098 2145692137 L/Chw$98pqAk:B$~I 882 13 2548.53691493669 10", string2);
      
      String string3 = EWrapperMsgGenerator.updateMktDepth((-31), 1478, (-2131), 1478, (-1.0), (-2150));
      assertEquals("updateMktDepth: -31 1478 -2131 1478 -1.0 -2150", string3);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.contractDetailsEnd(178);
      assertEquals("reqId = 178 =============== end ===============", string0);
      
      String string1 = EWrapperMsgGenerator.historicalData(10, "reqId = 178 =============== end ===============", 178, 178, (-1242.45285), 1.0, (-828), (-1793557110), 707.0, true);
      assertEquals("id=10 date = reqId = 178 =============== end =============== open=178.0 high=178.0 low=-1242.45285 close=1.0 volume=-828 count=-1793557110 WAP=707.0 hasGaps=true", string1);
      
      String string2 = EWrapperMsgGenerator.scannerDataEnd(2657);
      assertEquals("id = 2657 =============== end ===============", string2);
      
      String string3 = EWrapperMsgGenerator.realtimeBar(2147067310, 1000L, 707.0, 178, 2657, (-1242.45285), (-828), 1.7976931348623157E308, 2147067310);
      assertEquals("id=2147067310 time = 1000 open=707.0 high=178.0 low=2657.0 close=-1242.45285 volume=-828 count=2147067310 WAP=1.7976931348623157E308", string3);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      EWrapperMsgGenerator.openOrderEnd();
      Contract contract0 = null;
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.contractMsg((Contract) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.realtimeBar(614, 1L, 1.7976931348623157E308, (-1.0), 2121.3, 1.7976931348623157E308, (-476L), 333.194668, (-1364));
      assertEquals("id=614 time = 1 open=1.7976931348623157E308 high=-1.0 low=2121.3 close=1.7976931348623157E308 volume=-476 count=-1364 WAP=333.194668", string0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      EWrapperMsgGenerator.updateAccountTime("i2BmLW5Mf}`SWaL ??");
      int int0 = 783;
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.updatePortfolio((Contract) null, 783, 1.7976931348623157E308, 1.7976931348623157E308, 1.7976931348623157E308, 0.0, 1.7976931348623157E308, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.5231918705451206
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      EWrapperMsgGenerator.updateAccountTime(")TSp[*[<^~~");
      double double0 = 1.0;
      EWrapperMsgGenerator.tickPrice(3448, 3448, 1.0, 3448);
      EWrapperMsgGenerator.tickGeneric(3448, 0, 0);
      String string0 = "`E]uu[|,LY=8";
      EWrapperMsgGenerator.accountDownloadEnd("`E]uu[|,LY=8");
      EWrapperMsgGenerator.tickPrice(0, 0, (-1693.955525856), 0);
      int int0 = 3;
      int int1 = 2432;
      EWrapperMsgGenerator.orderStatus(3, "`E]uu[|,LY=8", 3448, 3448, 1.0, (-2040), 2432, 1.0, 0, "accountDownloadEnd: `E]uu[|,LY=8");
      EWrapperMsgGenerator.accountDownloadEnd("id=3448  bidSize=0.0");
      EWrapperMsgGenerator.tickGeneric(0, 3448, (-2084.0198244182));
      EWrapperMsgGenerator.tickSnapshotEnd(3448);
      double double1 = 3036.238033034821;
      EWrapperMsgGenerator.tickGeneric(0, 1061, 3036.238033034821);
      EWrapperMsgGenerator.scannerDataEnd(2432);
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.fundamentalData(915, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.9289738521096165
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Vector<Object> vector0 = new Vector<Object>();
      Contract contract0 = new Contract();
      UnderComp underComp0 = contract0.m_underComp;
      contract0.m_underComp = null;
      String string0 = EWrapperMsgGenerator.tickPrice(0, 0, (-948.823939), 0);
      assertEquals("id=0  bidSize=-948.823939  noAutoExecute", string0);
      
      String string1 = EWrapperMsgGenerator.tickOptionComputation(0, 0, 3319.67586274, 4142.0, (-1837.5), 2319);
      assertEquals("id=0  bidSize: vol = 3319.67586274 delta = N/A", string1);
      
      String string2 = EWrapperMsgGenerator.tickOptionComputation(2319, (-2463), 1506, 1954.31978809684, (-6.021194892225068), (-3222.2));
      assertEquals("id=2319  unknown: vol = 1506.0 delta = N/A", string2);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.042632211710285
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickOptionComputation((-21), 21, 0.0, (-1.0), (-560.67314197759), 1.7976931348623157E308);
      assertEquals("id=-21  AvgVolume: vol = 0.0 delta = -1.0", string0);
      
      String string1 = EWrapperMsgGenerator.tickSize(2146746491, (-1619), 21);
      assertEquals("id=2146746491  unknown=21", string1);
      
      String string2 = EWrapperMsgGenerator.tickSnapshotEnd((-127));
      assertEquals("id=-127 =============== end ===============", string2);
      
      Contract contract0 = new Contract();
      Order order0 = new Order();
      OrderState orderState0 = new OrderState();
      orderState0.m_warningText = "  It does not support real time bars.";
      Order order1 = new Order();
      String string3 = EWrapperMsgGenerator.tickPrice(0, 0, 3432.1468, Integer.MAX_VALUE);
      assertEquals("id=0  bidSize=3432.1468  canAutoExecute", string3);
      
      EWrapperMsgGenerator.openOrderEnd();
      String string4 = EWrapperMsgGenerator.updateMktDepth(737, (-805), 1610612736, 0, Integer.MAX_VALUE, (-805));
      assertEquals("updateMktDepth: 737 -805 1610612736 0 2.147483647E9 -805", string4);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Vector<Object> vector0 = new Vector<Object>();
      Contract contract0 = new Contract((-819), "8<$,", "L/Chw$98pqAk:B$~I", "L/Chw$98pqAk:B$~I", (-819), "Wx=:&rXE]nT'", "V0H@Nh-Zv@q", "L/Chw$98pqAk:B$~I", "OptionAskExchStr", "OptionAskExchStr", vector0, "Wx=:&rXE]nT'", false, "OptionAskExchStr", "L/Chw$98pqAk:B$~I");
      Order order0 = new Order();
      OrderState orderState0 = new OrderState();
      EWrapperMsgGenerator.openOrder((-819), contract0, order0, orderState0);
      ContractDetails contractDetails0 = new ContractDetails(contract0, (String) null, "G?,9wa", 1.7976931348623157E308, "L/Chw$98pqAk:B$~I", (String) null, 0, "L/Chw$98pqAk:B$~I", "52WeekLow", (String) null, (String) null, "L/Chw$98pqAk:B$~I", "", "NdS\"ZClV23", "Wx=:&rXE]nT'");
      assertFalse(contractDetails0.m_putable);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Vector<Object> vector0 = new Vector<Object>();
      Object object0 = new Object();
      vector0.add(object0);
      Contract contract0 = new Contract((-2489), "l~7:t", "Wx=:&rXE]nT'", "8<$,", (-1105), "Wx=:&rXE]nT'", "lE[Bs4+[oL", "L/Chw$98pqAk:B$~I", "8<$,", "D5;, |E9{A4BzBOO1", vector0, "Wx=:&rXE]nT'", false, " scaleInitLevelSize=", "PP7]");
      EWrapperMsgGenerator.tickPrice(13, 32, (-462.0687), (-966));
      ContractDetails contractDetails0 = new ContractDetails(contract0, "a-UBa", "8<$,", 5602.39969, (String) null, " scaleInitLevelSize=", (-966), "", "openEFP", "OptionAskExchStr", "7Z%r,%<2jQt{e", " outsideRth=", "L/Chw$98pqAk:B$~I", (String) null, "");
      assertEquals(5602.39969, contractDetails0.m_minTick, 0.01);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Contract contract0 = new Contract();
      contract0.m_multiplier = " discretionaryAmt=";
      contract0.m_localSymbol = "*NfBGfe#j=|B'<UT)";
      contract0.m_localSymbol = "!z<";
      String string0 = EWrapperMsgGenerator.updatePortfolio(contract0, 0, 0.0, 0, 0.0, 963.3885497, 0.0, (String) null);
      assertNotNull(string0);
      assertEquals("updatePortfolio: conid = 0\nsymbol = null\nsecType = null\nexpiry = null\nstrike = 0.0\nright = null\nmultiplier =  discretionaryAmt=\nexchange = null\nprimaryExch = null\ncurrency = null\nlocalSymbol = !z<\n0 0.0 0.0 0.0 963.3885497 0.0 null", string0);
      
      ContractDetails contractDetails0 = new ContractDetails();
      String string1 = EWrapperMsgGenerator.scannerData(0, 0, contractDetails0, (String) null, "\"tQgy", "x0{jZQ+", (String) null);
      assertEquals("id = 0 rank=0 symbol=null secType=null expiry=null strike=0.0 right=null exchange=null currency=null localSymbol=null marketName=null tradingClass=null distance=null benchmark=\"tQgy projection=x0{jZQ+ legsStr=null", string1);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      EWrapperMsgGenerator.fundamentalData((-183113197), "y1,QO%]2-4X");
      String string0 = EWrapperMsgGenerator.tickString((-183113197), (-183113197), "S`[n(}");
      assertEquals("id=-183113197  unknown=S`[n(}", string0);
      
      String string1 = EWrapperMsgGenerator.tickPrice((-2145960420), (-183113197), (-21.0), (-183113197));
      assertEquals("id=-2145960420  unknown=-21.0  canAutoExecute", string1);
      
      UnderComp underComp0 = new UnderComp();
      underComp0.m_conId = 634;
      underComp0.m_delta = 1606.25213971;
      underComp0.m_conId = 12;
      underComp0.m_conId = 3040;
      underComp0.m_delta = (-21.0);
      underComp0.m_conId = 634;
      String string2 = EWrapperMsgGenerator.deltaNeutralValidation((-2145960420), underComp0);
      assertEquals("id = -2145960420 underComp.conId =634 underComp.delta =-21.0 underComp.price =0.0", string2);
      
      String string3 = EWrapperMsgGenerator.fundamentalData(10, "auctionImbalance");
      assertEquals("id  = 10 len = 16\nauctionImbalance", string3);
      
      Contract contract0 = new Contract();
      String string4 = EWrapperMsgGenerator.updatePortfolio(contract0, (-2795), (-2992.04892539), (-21.0), (-1.0), 3040, 634, "id=-2145960420  unknown=-21.0  canAutoExecute");
      assertEquals("updatePortfolio: conid = 0\nsymbol = null\nsecType = null\nexpiry = null\nstrike = 0.0\nright = null\nmultiplier = null\nexchange = null\nprimaryExch = null\ncurrency = null\nlocalSymbol = null\n-2795 -2992.04892539 -21.0 -1.0 3040.0 634.0 id=-2145960420  unknown=-21.0  canAutoExecute", string4);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickOptionComputation(109, 109, 109, 109, 109, (-1.0));
      assertEquals("id=109  unknown: vol = 109.0 delta = N/A", string0);
      
      ContractDetails contractDetails0 = new ContractDetails();
      contractDetails0.m_marketName = null;
      contractDetails0.m_cusip = null;
      contractDetails0.m_timeZoneId = ">ayFS*.ci";
      ContractDetails contractDetails1 = new ContractDetails(contractDetails0.m_summary, (String) null, "- Cc{J1\"IE]h@/<jS", 0, "", "'&/pA4}>3mN!r", 46, ">ayFS*.ci", (String) null, "/r{", "", "localSymbol = ", "", "", (String) null);
      UnderComp underComp0 = new UnderComp();
      String string1 = EWrapperMsgGenerator.deltaNeutralValidation(48, underComp0);
      assertEquals("id = 48 underComp.conId =0 underComp.delta =0.0 underComp.price =0.0", string1);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.7697590704283859
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickOptionComputation((-819), (-819), 2482.78873, (-819), 2482.78873, 2482.78873);
      assertEquals("id=-819  unknown: vol = 2482.78873 delta = N/A", string0);
      
      String string1 = EWrapperMsgGenerator.tickPrice((-819), (-1714), 0.0, (-2629));
      assertEquals("id=-819  unknown=0.0  canAutoExecute", string1);
      
      String string2 = EWrapperMsgGenerator.tickSize((-2629), (-819), (-1714));
      assertEquals("id=-2629  unknown=-1714", string2);
      
      String string3 = EWrapperMsgGenerator.tickOptionComputation((-1702), (-1714), (-1702), (-44.505679), 13, 1.0);
      assertEquals("id=-1702  unknown: vol = N/A delta = N/A", string3);
      
      String string4 = EWrapperMsgGenerator.tickOptionComputation((-1702), 1, 0.0, 2755.322714988, (-1702), (-2629));
      assertEquals("id=-1702  bidPrice: vol = 0.0 delta = N/A", string4);
      
      String string5 = EWrapperMsgGenerator.tickSnapshotEnd(13);
      assertEquals("id=13 =============== end ===============", string5);
      
      String string6 = EWrapperMsgGenerator.orderStatus((-536), "UCLR4J<2-HVtxub+g}", (-2629), 17, (-2262.78362), (-536), 78, 2283.19543008982, 1, "id=-1702  bidPrice: vol = 0.0 delta = N/A");
      assertEquals("order status: orderId=-536 clientId=1 permId=-536 status=UCLR4J<2-HVtxub+g} filled=-2629 remaining=17 avgFillPrice=-2262.78362 lastFillPrice=2283.19543008982 parent Id=78 whyHeld=id=-1702  bidPrice: vol = 0.0 delta = N/A", string6);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.orderStatus(1, "Connection Closed", 1, 0, 1041.779214, 0, 496, 1041.779214, 1, "Connection Closed");
      assertEquals("order status: orderId=1 clientId=1 permId=0 status=Connection Closed filled=1 remaining=0 avgFillPrice=1041.779214 lastFillPrice=1041.779214 parent Id=496 whyHeld=Connection Closed", string0);
      
      String string1 = EWrapperMsgGenerator.tickPrice((-313), (-547), (-1.0), (-1327));
      assertEquals("id=-313  unknown=-1.0  canAutoExecute", string1);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Vector<Object> vector0 = new Vector<Object>();
      Contract contract0 = new Contract((-1264), "V0H@Nh-Zv@q", ")$2~Cb`j", "Wx=:&rXE]nT'", (-819), " equityWithLoan=", ")$2~Cb`j", "vmyE", (String) null, "Vnm", vector0, " faProfile=", false, " discretionaryAmt=", "/;Fh$/,");
      Order order0 = new Order();
      String string0 = EWrapperMsgGenerator.historicalData(2159, "", 795.14044, 0, 0.0, 0.0, 2, 13, (-4321.1628491943), true);
      assertEquals("id=2159 date =  open=795.14044 high=0.0 low=0.0 close=0.0 volume=2 count=13 WAP=-4321.1628491943 hasGaps=true", string0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.fundamentalData((-4797), "!z<");
      assertEquals("id  = -4797 len = 3\n!z<", string0);
      
      String string1 = EWrapperMsgGenerator.scannerDataEnd((-4797));
      assertEquals("id = -4797 =============== end ===============", string1);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      UnderComp underComp0 = new UnderComp();
      underComp0.m_delta = (-4255.09);
      underComp0.m_delta = 0.0;
      String string0 = EWrapperMsgGenerator.deltaNeutralValidation(0, underComp0);
      assertEquals("id = 0 underComp.conId =0 underComp.delta =0.0 underComp.price =0.0", string0);
      
      String string1 = EWrapperMsgGenerator.managedAccounts("id = 0 underComp.conId =0 underComp.delta =0.0 underComp.price =0.0");
      assertEquals("Connected : The list of managed accounts are : [id = 0 underComp.conId =0 underComp.delta =0.0 underComp.price =0.0]", string1);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.realtimeBar(1, 1, 1, 0.0, 1.7976931348623157E308, 1, 1, 0.0, 1);
      assertEquals("id=1 time = 1 open=1.0 high=0.0 low=1.7976931348623157E308 close=1.0 volume=1 count=1 WAP=0.0", string0);
      
      String string1 = EWrapperMsgGenerator.currentTime(841L);
      assertEquals("current time = 841 (Jan 1, 1970 12:14:01 AM)", string1);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickOptionComputation((-1418), (-1418), (-1418), 1836.8205, 1.7976931348623157E308, 1836.8205);
      assertEquals("id=-1418  unknown: vol = N/A delta = N/A", string0);
      
      String string1 = EWrapperMsgGenerator.updateMktDepthL2((-1418), (-2147483647), "id=-1418  unknown: vol = N/A delta = N/A", (-2147483647), (-2511), (-875.0514), 2146746491);
      assertEquals("updateMktDepth: -1418 -2147483647 id=-1418  unknown: vol = N/A delta = N/A -2147483647 -2511 -875.0514 2146746491", string1);
      
      String string2 = EWrapperMsgGenerator.tickString((-2511), (-2511), "id=-1418  unknown: vol = N/A delta = N/A");
      assertEquals("id=-2511  unknown=id=-1418  unknown: vol = N/A delta = N/A", string2);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Contract contract0 = new Contract();
      contract0.m_secId = "2i-Js#";
      ContractDetails contractDetails0 = new ContractDetails(contract0, "", (String) null, 3116, "2*a$q", " minCommission=", 647, "zM#HLD<.9W", "_}@uFdD^", " minCommission=", (String) null, "Connection Closed", "zM#HLD<.9W", (String) null, "");
      String string0 = EWrapperMsgGenerator.contractDetails(3116, contractDetails0);
      assertEquals("reqId = 3116 ===================================\n ---- Contract Details begin ----\nconid = 0\nsymbol = null\nsecType = null\nexpiry = null\nstrike = 0.0\nright = null\nmultiplier = null\nexchange = null\nprimaryExch = null\ncurrency = null\nlocalSymbol = null\nmarketName = \ntradingClass = null\nminTick = 3116.0\nprice magnifier = 0\norderTypes = 2*a$q\nvalidExchanges =  minCommission=\nunderConId = 647\nlongName = zM#HLD<.9W\ncontractMonth = _}@uFdD^\nindustry =  minCommission=\ncategory = null\nsubcategory = Connection Closed\ntimeZoneId = zM#HLD<.9W\ntradingHours = null\nliquidHours = \n ---- Contract Details End ----\n", string0);
      
      String string1 = EWrapperMsgGenerator.contractMsg(contractDetails0.m_summary);
      assertEquals("conid = 0\nsymbol = null\nsecType = null\nexpiry = null\nstrike = 0.0\nright = null\nmultiplier = null\nexchange = null\nprimaryExch = null\ncurrency = null\nlocalSymbol = null\n", string1);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.updateNewsBulletin((-1105), 14, "8<$,", " <8OGE+k]]?PS!{");
      assertEquals("MsgId=-1105 :: MsgType=14 :: Origin= <8OGE+k]]?PS!{ :: Message=8<$,", string0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      EWrapperMsgGenerator eWrapperMsgGenerator0 = new EWrapperMsgGenerator();
      String string0 = EWrapperMsgGenerator.tickGeneric(0, (-3756), 3271.6382999404755);
      assertEquals("id=0  unknown=3271.6382999404755", string0);
      
      String string1 = EWrapperMsgGenerator.updateNewsBulletin(0, 0, "SCANNER PARAMETERS:", "SCANNER PARAMETERS:");
      assertEquals("MsgId=0 :: MsgType=0 :: Origin=SCANNER PARAMETERS: :: Message=SCANNER PARAMETERS:", string1);
      
      String string2 = EWrapperMsgGenerator.contractDetailsEnd((-13));
      assertEquals("reqId = -13 =============== end ===============", string2);
      
      String string3 = EWrapperMsgGenerator.scannerParameters("~f^;}|");
      assertEquals("SCANNER PARAMETERS:\n~f^;}|", string3);
      
      String string4 = EWrapperMsgGenerator.tickSnapshotEnd(0);
      assertEquals("id=0 =============== end ===============", string4);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Vector<Integer> vector0 = new Vector<Integer>();
      Contract contract0 = new Contract(2917, "", "", " goodAfterTime=", 636.98778957532, "", "|EC)pKP*'kcs", "'MN+dB-\"b'?:]HQxv", "'MN+dB-\"b'?:]HQxv", "8X^7LbuAlt\"XP", vector0, " goodAfterTime=", false, " goodAfterTime=", "");
      Execution execution0 = new Execution(2917, 2917, "", "yEh~0'nXw=VnQcmPoD+", "|EC)pKP*'kcs", "j#BHC'k/3SIbPcx", "", 1, 0.0, (-4601), (-104), (-104), 918.61);
      String string0 = EWrapperMsgGenerator.execDetails(1882, contract0, execution0);
      assertEquals(" ---- Execution Details begin ----\nreqId = 1882\norderId = 2917\nclientId = 2917\nsymbol = \nsecType = \nexpiry =  goodAfterTime=\nstrike = 636.98778957532\nright = \ncontractExchange = 'MN+dB-\"b'?:]HQxv\ncurrency = 'MN+dB-\"b'?:]HQxv\nlocalSymbol = 8X^7LbuAlt\"XP\nexecId = \ntime = yEh~0'nXw=VnQcmPoD+\nacctNumber = |EC)pKP*'kcs\nexecutionExchange = j#BHC'k/3SIbPcx\nside = \nshares = 1\nprice = 0.0\npermId = -4601\nliquidation = -104\ncumQty = -104\navgPrice = 918.61\n ---- Execution Details end ----\n", string0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      int int0 = 0;
      EWrapperMsgGenerator.receiveFA(0, "com.ib.client.TagValue");
      EWrapperMsgGenerator.tickEFP(0, Integer.MAX_VALUE, (-1565.6), "com.ib.client.TagValue", (-1565.6), Integer.MAX_VALUE, "", (-1565.6), 1.7976931348623157E308);
      int int1 = 880;
      double double0 = 0.0;
      EWrapperMsgGenerator.tickOptionComputation(880, Integer.MAX_VALUE, 920.99, (-1565.6), 1.7976931348623157E308, 0.0);
      EWrapperMsgGenerator.nextValidId((-3183));
      int int2 = (-735);
      int int3 = (-3895);
      EWrapperMsgGenerator.tickEFP((-735), (-3895), (-212.42690236), "", (-1471.54902), 13, "id=0  unknown: basisPoints = -1565.6/com.ib.client.TagValue impliedFuture = -1565.6 holdDays = 2147483647 futureExpiry =  dividendImpact = -1565.6 dividends to expiry = 1.7976931348623157E308", (-212.42690236), Integer.MAX_VALUE);
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.bondContractDetails((-735), (ContractDetails) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.scannerDataEnd(0);
      assertEquals("id = 0 =============== end ===============", string0);
      
      String string1 = EWrapperMsgGenerator.nextValidId(0);
      assertEquals("Next Valid Order ID: 0", string1);
      
      String string2 = EWrapperMsgGenerator.scannerParameters("S??:`LK(;)MZG(");
      assertEquals("SCANNER PARAMETERS:\nS??:`LK(;)MZG(", string2);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.2407560846182575
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Vector<Object> vector0 = new Vector<Object>();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      vector0.removeAllElements();
      vector0.sort(comparator0);
      Contract contract0 = new Contract((-819), "8<$Tc,", "L/Chw$9s8pqAk:B$~I", "L/Chw$9s8pqAk:B$~I", (-819), "Wx=:&rXE]nT'", "V0H@Nh-Zv@q", "L/Chw$9s8pqAk:B$~I", "OptionAskExchStr", "OptionAskExchStr", vector0, "Wx=:&rXE]nT'", true, "OptionAskExchStr", "L/Chw$9s8pqAk:B$~I");
      Order order0 = new Order();
      String string0 = EWrapperMsgGenerator.tickOptionComputation(0, 3669, 2344.1762603108414, Integer.MAX_VALUE, 1.0, 0);
      assertEquals("id=0  unknown: vol = 2344.1762603108414 delta = N/A", string0);
      
      String string1 = EWrapperMsgGenerator.tickOptionComputation((-658), 2184, 1.7976931348623157E308, (-1100.6947185517158), 990.31069, (-1731.906957));
      assertEquals("id=-658  unknown: vol = N/A delta = N/A", string1);
      
      String string2 = EWrapperMsgGenerator.tickSnapshotEnd((-1177));
      assertEquals("id=-1177 =============== end ===============", string2);
      
      String string3 = EWrapperMsgGenerator.tickEFP((-1165), 0, Integer.MAX_VALUE, "", 1.0, 0, "@\"MUGc", 990.31069, 2344.1762603108414);
      assertEquals("id=-1165  bidSize: basisPoints = 2.147483647E9/ impliedFuture = 1.0 holdDays = 0 futureExpiry = @\"MUGc dividendImpact = 990.31069 dividends to expiry = 2344.1762603108414", string3);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Vector<Object> vector0 = new Vector<Object>();
      Object object0 = new Object();
      vector0.add(object0);
      String string0 = EWrapperMsgGenerator.tickOptionComputation((-2489), (-207), (-5076.48089781462), (-173.0605649), (-2489), (-902.33357334));
      assertEquals("id=-2489  unknown: vol = N/A delta = N/A", string0);
      
      String string1 = EWrapperMsgGenerator.tickOptionComputation(1769, 1610612736, (-2489), (-2489), 0.0, 752.1360499);
      assertEquals("id=1769  unknown: vol = N/A delta = N/A", string1);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Vector<Object> vector0 = new Vector<Object>();
      Object object0 = new Object();
      vector0.add((Object) "8<$,");
      vector0.add(object0);
      Order order0 = new Order();
      String string0 = EWrapperMsgGenerator.tickOptionComputation((-2146323301), 0, (-1270.1344214775968), 0.0, 0, 0.0);
      assertEquals("id=-2146323301  bidSize: vol = N/A delta = 0.0", string0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Vector<Object> vector0 = new Vector<Object>();
      Order order0 = new Order();
      OrderState orderState0 = new OrderState();
      String string0 = EWrapperMsgGenerator.tickOptionComputation((-2629), 359, (-2421.5453956435545), 1.7976931348623157E308, 0, 0.0);
      assertEquals("id=-2629  unknown: vol = N/A delta = N/A", string0);
      
      String string1 = EWrapperMsgGenerator.tickOptionComputation(0, 597, 752.1360499, 1.0, 1.7976931348623157E308, 1);
      assertEquals("id=0  unknown: vol = 752.1360499 delta = 1.0", string1);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.2407560846182575
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Vector<Object> vector0 = new Vector<Object>();
      Vector<String> vector1 = new Vector<String>();
      Contract contract0 = new Contract(27, "g+&W", "V0H@Nh-Zv@q", "8<$,", (-1105), "", "m:g`WkVg}LU>G<\"7", "8<$,", "", "l~7:t", vector0, "~;gvZ??aU}+", true, "shortable", "l~7:t");
      Order order0 = new Order();
      order0.m_volatility = (double) 27;
      String string0 = EWrapperMsgGenerator.tickOptionComputation(3, 866, 1019.59932, Integer.MAX_VALUE, 0, 1.7976931348623157E308);
      assertEquals("id=3  unknown: vol = 1019.59932 delta = N/A", string0);
      
      String string1 = EWrapperMsgGenerator.tickOptionComputation(0, (-1105), (-289.334753), (-2404.718707), (-3802.063387), 0.0);
      assertEquals("id=0  unknown: vol = N/A delta = N/A", string1);
      
      String string2 = EWrapperMsgGenerator.execDetailsEnd(1);
      assertEquals("reqId = 1 =============== end ===============", string2);
      
      String string3 = EWrapperMsgGenerator.orderStatus(485, (String) null, 0, (-561), Integer.MAX_VALUE, (-561), (-4784), 1527.5351207875, 0, "~;gvZ??aU}+");
      assertEquals("order status: orderId=485 clientId=0 permId=-561 status=null filled=0 remaining=-561 avgFillPrice=2.147483647E9 lastFillPrice=1527.5351207875 parent Id=-4784 whyHeld=~;gvZ??aU}+", string3);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.5981863871455346
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      EWrapperMsgGenerator.tickOptionComputation(1096, 4142, 4142, 0.0, 4142, 2482.78873);
      EWrapperMsgGenerator.tickSize(4142, 1096, 0);
      EWrapperMsgGenerator.tickSnapshotEnd(1096);
      ContractDetails contractDetails0 = new ContractDetails();
      contractDetails0.m_underConId = 78;
      EWrapperMsgGenerator.bondContractDetails(1667, contractDetails0);
      ContractDetails contractDetails1 = new ContractDetails();
      contractDetails0.m_underConId = (-273);
      contractDetails1.m_minTick = 1.0;
      contractDetails1.m_coupon = 221.649;
      ContractDetails contractDetails2 = new ContractDetails(contractDetails0.m_summary, " legsStr=", (String) null, 1437.0, (String) null, (String) null, 0, (String) null, "", (String) null, "low", (String) null, (String) null, (String) null, "V*sTc:%|C'6h");
      assertEquals(0.0, contractDetails2.m_coupon, 0.01);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickEFP(37, 2127781963, 2127781963, ": pvDividend = ", 2127781963, 37, "OptionPutVolume", 2127781963, (-815.4604592));
      assertEquals("id=37  unknown: basisPoints = 2.127781963E9/: pvDividend =  impliedFuture = 2.127781963E9 holdDays = 37 futureExpiry = OptionPutVolume dividendImpact = 2.127781963E9 dividends to expiry = -815.4604592", string0);
      
      String string1 = EWrapperMsgGenerator.updateAccountValue("/Chn*:=", (String) null, ": pvDividend = ", "OptionPutVolume");
      assertEquals("updateAccountValue: /Chn*:= null : pvDividend =  OptionPutVolume", string1);
      
      String string2 = EWrapperMsgGenerator.accountDownloadEnd(")Vr`GeAH");
      assertEquals("accountDownloadEnd: )Vr`GeAH", string2);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickEFP((-777), (-777), (-1105), "HS-VEUk}", 14, (-1105), "", 2294.530740334, 920.99);
      assertEquals("id=-777  unknown: basisPoints = -1105.0/HS-VEUk} impliedFuture = 14.0 holdDays = -1105 futureExpiry =  dividendImpact = 2294.530740334 dividends to expiry = 920.99", string0);
  }
}
