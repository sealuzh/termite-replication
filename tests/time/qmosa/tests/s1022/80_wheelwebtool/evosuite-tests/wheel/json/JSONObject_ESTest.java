/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 06:50:22 GMT 2019
 */

package wheel.json;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.StringWriter;
import java.io.Writer;
import java.nio.CharBuffer;
import java.util.Collection;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.json.JSONArray;
import wheel.json.JSONObject;
import wheel.json.JSONTokener;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JSONObject_ESTest extends JSONObject_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.644290269898527
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      JSONObject.quote("si[IiiGx+uyye;\"2E4h");
      Integer.toUnsignedString(2);
      Integer integer0 = new Integer(2);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "si[IiiGx+uyye;\"2E4h";
      stringArray0[1] = "si[IiiGx+uyye;\"2E4h";
      stringArray0[2] = "si[IiiGx+uyye;\"2E4h";
      stringArray0[3] = "si[IiiGx+uyye;\"2E4h";
      JSONObject jSONObject0 = new JSONObject((Object) "si[IiiGx+uyye;\"2E4h");
      jSONObject0.optLong((String) null);
      // Undeclared exception!
      jSONObject0.toString(1899);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.099297593821019
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String[] stringArray0 = new String[0];
      JSONObject jSONObject0 = new JSONObject((JSONObject) null, stringArray0);
      int int0 = 125;
      JSONObject jSONObject1 = jSONObject0.put("[", 0.0);
      try { 
        jSONObject1.put((String) null, false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.345258063241259
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String[] stringArray0 = new String[0];
      JSONObject jSONObject0 = new JSONObject((JSONObject) null, stringArray0);
      int int0 = 455;
      JSONObject jSONObject1 = jSONObject0.accumulate("] is not a JSONObject.", jSONObject0);
      String string0 = JSONObject.valueToString(jSONObject0, 22, 455);
      String string1 = "u";
      Object object0 = JSONObject.NULL;
      JSONObject.getNames(jSONObject0);
      Object object1 = new Object();
      Float float0 = new Float((double) int0);
      JSONObject.getNames((Object) float0);
      Integer integer0 = Integer.valueOf(string1);
      String string2 = "va";
      Integer.getInteger(string2);
      jSONObject1.optString(string1, string0);
      JSONObject jSONObject2 = new JSONObject(integer0);
      jSONObject0.optLong(string0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.042249673853091
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Byte byte0 = new Byte((byte)39);
      Byte.toUnsignedLong((byte)58);
      String[] stringArray0 = new String[3];
      Byte.toUnsignedInt((byte)58);
      stringArray0[1] = "*bp9)j7=";
      stringArray0[2] = "B7?dng";
      JSONObject jSONObject0 = new JSONObject(byte0, stringArray0);
      JSONObject jSONObject1 = jSONObject0.put("] is not a JSONArray.", (double) (byte)39);
      jSONObject0.toString((int) (byte)39);
      jSONObject0.optString("] is not a JSONArray.", "] is not a JSONArray.");
      jSONObject0.opt("{\"java.lang.String@0000000002\": java.lang.Double@0000000003}");
      jSONObject0.optLong("B7?dng");
      jSONObject0.toString((int) (byte)39);
      Byte.compare((byte)97, (byte) (-119));
      Boolean boolean0 = new Boolean("B7?dng");
      JSONObject.numberToString(byte0);
      JSONObject.quote("");
      JSONObject.doubleToString((byte) (-119));
      JSONObject.quote("wheel.json.JSONObject$1");
      JSONObject.doubleToString(216);
      jSONObject1.append("gethashCode", stringArray0[0]);
      jSONObject0.toString((int) (byte)58, (int) (byte) (-119));
      jSONObject0.accumulate("{\"java.lang.String@0000000002\": java.lang.Double@0000000003}", "gethashCode");
      JSONObject.quote("*bp9)j7=");
      JSONObject jSONObject2 = jSONObject1.optJSONObject((String) null);
      assertNull(jSONObject2);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.021155427771749
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "E'~U!1|:W|$75Tjq_9";
      stringArray0[1] = "3U~VOn";
      stringArray0[2] = "1M!Uy +NkyY";
      stringArray0[4] = "ma";
      stringArray0[5] = "max";
      JSONObject jSONObject1 = new JSONObject(jSONObject0, stringArray0);
      jSONObject1.accumulate("q_VyY+A/E?9W}8", "E'~U!1|:W|$75Tjq_9");
      jSONObject0.has("E'~U!1|:W|$75Tjq_9");
      JSONObject jSONObject2 = new JSONObject((Object) "max");
      jSONObject0.optLong("E'~U!1|:W|$75Tjq_9", 0L);
      jSONObject0.optDouble("(vLoO6y2\"Vht&{{", 388.0);
      jSONObject0.toString(8192);
      StringWriter stringWriter0 = new StringWriter();
      jSONObject2.write(stringWriter0);
      jSONObject0.put("0.0", (Object) "1M!Uy +NkyY");
      JSONObject.quote("0.0");
      try { 
        jSONObject0.getDouble("max");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"max\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.5303411751579277
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String[] stringArray0 = new String[0];
      JSONObject jSONObject0 = new JSONObject();
      String string0 = "] is] nt a SONObPct.";
      jSONObject0.optInt("] is] nt a SONObPct.");
      Integer integer0 = new Integer(0);
      Integer.toUnsignedString((-727));
      JSONObject.valueToString(integer0);
      jSONObject0.put("] is] nt a SONObPct.", (Map) null);
      // Undeclared exception!
      try { 
        JSONObject.getNames((JSONObject) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.0433986980553867
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Byte byte0 = new Byte((byte)39);
      Byte.toUnsignedLong((byte)58);
      Byte.toUnsignedInt((byte) (-32));
      String[] stringArray0 = new String[3];
      Byte.toUnsignedInt((byte)58);
      stringArray0[0] = "] is not a JSONArray.";
      stringArray0[1] = "*bpp)j7=";
      stringArray0[2] = "] is not a JSONArray.";
      JSONObject jSONObject0 = new JSONObject(byte0, stringArray0);
      JSONObject jSONObject1 = jSONObject0.put("] is not a JSONArray.", (double) (byte)39);
      jSONObject0.toString((int) (byte)39);
      jSONObject1.optString("*bpp)j7=", "] is not a JSONArray.");
      jSONObject1.opt("}");
      jSONObject1.optLong("] is not a JSONArray.");
      jSONObject1.toString(58);
      Byte.compare((byte)31, (byte)58);
      jSONObject1.isNull("DM$f6OhF:?Br2}");
      JSONObject.numberToString(byte0);
      JSONObject.doubleToString((byte)39);
      JSONObject.quote("java.lang.Short@00000000020");
      JSONObject.doubleToString((byte)31);
      jSONObject0.append("", jSONObject1);
      // Undeclared exception!
      jSONObject1.toString((int) (byte)31, (int) (byte)97);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      int int0 = (-822);
      Byte.toUnsignedInt((byte)79);
      String string0 = "gettrim";
      Byte byte0 = new Byte((byte)79);
      Byte.compare((byte)79, (byte)79);
      JSONObject.getNames((Object) byte0);
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject((JSONObject) null, (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.3558258304206885
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      HashMap<Object, JSONObject> hashMap0 = new HashMap<Object, JSONObject>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      jSONObject0.remove((String) null);
      Boolean boolean0 = Boolean.FALSE;
      Boolean.getBoolean("M{NK|WYzbT?PQ(qR6>");
      Boolean.logicalOr(true, true);
      StringWriter stringWriter0 = new StringWriter();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      Integer integer0 = new Integer((-1850));
      Integer.getInteger("M{NK|WYzbT?PQ(qR6>", integer0);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "M{NK|WYzbT?PQ(qR6>";
      stringArray0[1] = null;
      stringArray0[2] = "\t";
      stringArray0[3] = "M{NK|WYzbT?PQ(qR6>";
      stringArray0[4] = null;
      JSONObject jSONObject1 = new JSONObject(integer0, stringArray0);
      jSONObject0.toJSONArray((JSONArray) null);
      try { 
        jSONObject0.put((String) null, true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.130066099705928
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String[] stringArray0 = new String[0];
      JSONObject jSONObject0 = new JSONObject((JSONObject) null, stringArray0);
      jSONObject0.optInt("] is not a JSONObject.");
      Integer integer0 = new Integer(0);
      JSONObject.valueToString(integer0);
      JSONObject jSONObject1 = jSONObject0.put("] is not a JSONObject.", (Map) null);
      jSONObject0.optLong("wheel.json.JSONException", (long) 0);
      jSONObject1.keys();
      jSONObject0.toString();
      Integer integer1 = new Integer(0);
      StringWriter stringWriter0 = new StringWriter(0);
      StringWriter stringWriter1 = new StringWriter(0);
      Writer writer0 = jSONObject0.write(stringWriter1);
      JSONObject jSONObject2 = jSONObject0.accumulate("] is not a JSONObject.", writer0);
      JSONObject jSONObject3 = new JSONObject("isisNaN", stringArray0);
      jSONObject3.optInt("n`ukI:jsk#jaE*}Y", 0);
      jSONObject0.toString(0, 0);
      try { 
        jSONObject2.getBoolean("{\"java.lang.String@0000000005\": [\n{},\n\"java.io.StringWriter@0000000010\"\n]}");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"{\\\"java.lang.String@0000000005\\\": [\\n{},\\n\\\"java.io.StringWriter@0000000010\\\"\\n]}\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.8440547681956927
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = new JSONObject(jSONObject0);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "E'~U!1|:W|$75Tjq_9";
      stringArray0[1] = "3U~VOn";
      stringArray0[2] = "1M!Uy +NkyY";
      stringArray0[4] = "ma";
      stringArray0[5] = "max";
      JSONObject jSONObject2 = new JSONObject(jSONObject1, stringArray0);
      jSONObject0.has("E'~U!1|:W|$75Tjq_9");
      jSONObject1.optString("isjoin", "z<]K^d");
      jSONObject2.opt("getvalueOf");
      jSONObject0.optLong("ma");
      jSONObject0.toString(0);
      Byte.compare((byte)2, (byte)41);
      jSONObject1.isNull("is");
      try { 
        JSONObject.numberToString((Number) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null pointer
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.189452922640482
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      StringWriter stringWriter0 = new StringWriter(12);
      Float float0 = new Float((float) 12);
      JSONObject.numberToString(float0);
      jSONObject0.optDouble("] is not a JSONArray.", (double) 61);
      JSONObject jSONObject1 = jSONObject0.put("", (Object) null);
      try { 
        jSONObject1.getDouble("B7?dng");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"B7?dng\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "iscopyValueOf";
      stringArray0[1] = ")9";
      stringArray0[2] = "~s{4G";
      stringArray0[3] = "iscopyValueOf";
      stringArray0[4] = "val";
      String string0 = "sp";
      stringArray0[5] = "sp";
      stringArray0[6] = "\"s|(Nho?6s";
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject((Object) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.0416922378713083
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      StringWriter stringWriter0 = new StringWriter(12);
      Float float0 = new Float((float) 12);
      JSONObject.numberToString(float0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "] is not a JSONArray.";
      stringArray0[1] = "B7?dng";
      stringArray0[2] = "B7?dng";
      stringArray0[3] = "java.lang.Float@0000000002";
      JSONObject jSONObject1 = new JSONObject("] is not a JSONArray.", stringArray0);
      jSONObject1.put("S>>;@l c/0Tv#YZo", (double) 12);
      jSONObject1.toString(61);
      jSONObject1.optString("B7?dng", "] is not a JSONArray.");
      jSONObject0.opt("B7?dng");
      jSONObject0.optLong("] is not a JSONArray.");
      jSONObject1.toString(12);
      HashMap<Integer, Object> hashMap0 = new HashMap<Integer, Object>();
      JSONObject jSONObject2 = jSONObject0.put("B7?dng", (Map) hashMap0);
      JSONObject jSONObject3 = new JSONObject(jSONObject1, stringArray0);
      jSONObject3.length();
      try { 
        jSONObject2.get((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      Boolean.getBoolean("M{NK|WYzbT?PQ(qR6>");
      Boolean.logicalOr(true, true);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add("~~}~tBs^31}GYP#hzE");
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      LinkedList<Object> linkedList1 = new LinkedList<Object>();
      JSONObject.doubleToString((-2632.550581));
      JSONTokener jSONTokener0 = new JSONTokener("toH");
      JSONArray jSONArray1 = null;
      try {
        jSONArray1 = new JSONArray(jSONTokener0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONArray text must start with '[' at character 1 of toH
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.9257756732828546
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Integer integer0 = new Integer((-821));
      JSONObject jSONObject0 = new JSONObject(integer0);
      jSONObject0.optLong((String) null);
      Boolean boolean0 = new Boolean("{}");
      JSONObject.valueToString(boolean0);
      JSONObject jSONObject1 = jSONObject0.putOpt("", "java.lang.Boolean@0000000005");
      JSONObject.valueToString(jSONObject1);
      JSONObject.valueToString("java.lang.Boolean@0000000005");
      JSONObject jSONObject2 = jSONObject1.put("xiT", (Map) null);
      jSONObject0.optLong("issum", 0L);
      jSONObject1.keys();
      jSONObject2.toString();
      Integer.remainderUnsigned(21, (-3469));
      StringWriter stringWriter0 = new StringWriter(0);
      jSONObject1.write(stringWriter0);
      jSONObject2.accumulate("-JS8^2m6HX7YTa", "{}");
      int int0 = jSONObject2.optInt("{}", 110);
      assertEquals(4, jSONObject0.length());
      assertEquals(110, int0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.0510222179199133
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      String[] stringArray0 = new String[0];
      JSONObject jSONObject0 = new JSONObject((JSONObject) null, stringArray0);
      String string0 = "] is not a JSONObject.";
      jSONObject0.optInt("] is not a JSONObject.");
      Integer integer0 = new Integer(0);
      JSONObject.valueToString(integer0);
      JSONObject jSONObject1 = jSONObject0.put("] is not a JSONObject.", (Map) null);
      jSONObject0.optLong("wheel.json.JSONException", (long) 0);
      jSONObject1.keys();
      jSONObject0.toString();
      Integer integer1 = new Integer(0);
      StringWriter stringWriter0 = new StringWriter(0);
      jSONObject1.write(stringWriter0);
      JSONObject.quote("i+iH?+XV=");
      JSONObject.doubleToString(0L);
      try { 
        jSONObject1.append((String) null, jSONObject0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.6049403684294186
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      String[] stringArray0 = new String[0];
      JSONObject jSONObject0 = new JSONObject((JSONObject) null, stringArray0);
      Boolean boolean0 = Boolean.FALSE;
      boolean boolean1 = new Boolean("va");
      Boolean.logicalOr(true, true);
      StringWriter stringWriter0 = new StringWriter();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add("f.4nQJ1)");
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      JSONObject jSONObject1 = new JSONObject((Map) null);
      jSONObject1.putOpt("f.4nQJ1)", (Object) null);
      jSONObject0.optLong("getparseFloat", (-5123L));
      jSONObject0.put("val", (double) (-5123L));
      String[] stringArray1 = new String[2];
      stringArray1[0] = "f.4nQJ1)";
      stringArray1[1] = "f.4nQJ1)";
      JSONObject jSONObject2 = new JSONObject(jSONObject0, stringArray1);
      JSONObject.valueToString(jSONObject2);
      LinkedList<Object> linkedList1 = new LinkedList<Object>();
      JSONObject.doubleToString((-573L));
      JSONTokener jSONTokener0 = new JSONTokener("VXH?'akn$oVY!%.(B");
      JSONArray jSONArray1 = null;
      try {
        jSONArray1 = new JSONArray(jSONTokener0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONArray text must start with '[' at character 1 of VXH?'akn$oVY!%.(B
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.227103681398789
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Byte byte0 = new Byte((byte)39);
      Byte.toUnsignedLong((byte)44);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "] is not a JSONArray.";
      stringArray0[1] = "*bpp)j7=";
      stringArray0[2] = "B7?dng";
      JSONObject jSONObject0 = new JSONObject(byte0, stringArray0);
      JSONObject jSONObject1 = jSONObject0.put("] is not a JSONArray.", (double) (byte)39);
      jSONObject0.toString((int) (byte)39);
      jSONObject0.optString("a2H;Fk;R703/.", "] is not a JSONArray.");
      jSONObject0.opt("{\"java.lang.String@0000000002\": java.lang.Double@0000000003}");
      Byte.toUnsignedInt((byte)46);
      jSONObject0.optLong("ik");
      jSONObject0.toString((int) (byte)39);
      Byte.compare((byte)97, (byte) (-119));
      jSONObject0.isNull("(_&");
      JSONObject.numberToString(byte0);
      JSONObject.quote("");
      JSONObject.doubleToString((byte) (-119));
      JSONObject jSONObject2 = new JSONObject((Map) null);
      jSONObject2.accumulate("V<%yfv5b@}'H?$Y%Uo", "a2H;Fk;R703/.");
      jSONObject0.optInt("Q^Ley#}", 0);
      Object object0 = new Object();
      jSONObject1.putOpt("a2H;Fk;R703/.", object0);
      assertEquals(2, jSONObject1.length());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.7146171402741848
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      String[] stringArray0 = new String[0];
      JSONObject jSONObject0 = new JSONObject((JSONObject) null, stringArray0);
      jSONObject0.optInt("] is not a JSONObject.");
      jSONObject0.accumulate("] is not a JSONObject.", (Object) null);
      JSONObject.valueToString(jSONObject0, 22, 455);
      Object object0 = JSONObject.NULL;
      JSONObject.getNames(jSONObject0);
      Object object1 = new Object();
      Float float0 = new Float((double) 455);
      JSONObject.getNames((Object) float0);
      try { 
        Integer.valueOf("u");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"u\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.1050296313349124
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      HashMap<Object, JSONObject> hashMap0 = new HashMap<Object, JSONObject>();
      JSONObject jSONObject0 = new JSONObject();
      String string0 = null;
      Boolean boolean0 = Boolean.TRUE;
      hashMap0.replace((Object) boolean0, jSONObject0, jSONObject0);
      jSONObject0.remove((String) null);
      Boolean boolean1 = Boolean.FALSE;
      JSONObject jSONObject1 = jSONObject0.put("M{NK|WYzbT?PQ(qR6>", (Object) boolean1);
      jSONObject1.remove((String) null);
      try { 
        jSONObject1.accumulate((String) null, (Object) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.0136122233470277
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      HashMap<Object, JSONObject> hashMap0 = new HashMap<Object, JSONObject>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      jSONObject0.remove((String) null);
      Boolean boolean0 = Boolean.FALSE;
      jSONObject0.optInt("M{NK|WYzbT?PQ(qR6>");
      Integer integer0 = new Integer(0);
      Boolean boolean1 = Boolean.valueOf("_{Crgy/ ~0#:b+");
      JSONObject.valueToString(boolean1);
      JSONObject jSONObject1 = jSONObject0.put("M{NK|WYzbT?PQ(qR6>", (Map) hashMap0);
      jSONObject1.optLong("M{NK|WYzbT?PQ(qR6>", (long) 0);
      jSONObject0.keys();
      jSONObject0.toString();
      Boolean.logicalOr(false, false);
      Integer integer1 = new Integer(0);
      StringWriter stringWriter0 = new StringWriter(0);
      jSONObject1.write(stringWriter0);
      Boolean.getBoolean("getoUnsgnedLong");
      JSONObject jSONObject2 = jSONObject0.accumulate("{\"java.lang.String@0000000005\":wheel.json.JSONObject@0000000004}", boolean1);
      jSONObject2.optInt("{\"java.lang.String@0000000005\":wheel.json.JSONObject@0000000004}", 110);
      JSONObject.getNames(jSONObject0);
      jSONObject2.optJSONArray("getjoin");
      try { 
        jSONObject1.getBoolean("_{Crgy/ ~0#:b+");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"_{Crgy/ ~0#:b+\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.903295526755337
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Object object0 = new Object();
      JSONObject jSONObject0 = new JSONObject(object0);
      try { 
        jSONObject0.getLong("*R5:XyaA/ m$?");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"*R5:XyaA/ m$?\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.498029995317057
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      float float0 = (-327.5252F);
      Float float1 = new Float((-327.5252F));
      Float.min(0.0F, 0.0F);
      JSONObject jSONObject0 = new JSONObject(float1);
      String string0 = "{}";
      JSONObject jSONObject1 = jSONObject0.put("{}", (double) 0.0F);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      JSONObject jSONObject2 = new JSONObject("{}");
      JSONObject.getNames(jSONObject2);
      try { 
        jSONObject1.getBoolean("{}");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"{}\"] is not a Boolean.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.450477031911475
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      HashMap<Object, JSONObject> hashMap0 = new HashMap<Object, JSONObject>();
      JSONObject jSONObject0 = new JSONObject();
      String string0 = null;
      Boolean boolean0 = Boolean.TRUE;
      hashMap0.replace((Object) boolean0, jSONObject0, jSONObject0);
      jSONObject0.remove((String) null);
      String string1 = "M{N\\K|WYzbT?PQ(qR6>";
      Boolean boolean1 = Boolean.FALSE;
      JSONObject jSONObject1 = jSONObject0.put("M{NK|WYzbT?PQ(qR6>", (Object) boolean1);
      jSONObject1.remove((String) null);
      Boolean.getBoolean((String) null);
      Boolean.logicalOr(false, false);
      StringWriter stringWriter0 = new StringWriter();
      jSONObject1.write(stringWriter0);
      String string2 = "djcg/Yt=pNGS3";
      JSONObject.getNames(jSONObject1);
      try { 
        jSONObject0.getJSONObject("djcg/Yt=pNGS3");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"djcg/Yt=pNGS3\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Boolean boolean0 = Boolean.TRUE;
      JSONArray jSONArray0 = new JSONArray();
      Boolean boolean1 = Boolean.FALSE;
      Boolean.getBoolean((String) null);
      boolean boolean2 = Boolean.logicalOr(false, true);
      StringWriter stringWriter0 = new StringWriter();
      LinkedList<Short> linkedList0 = new LinkedList<Short>();
      linkedList0.spliterator();
      Short short0 = new Short((short) (-73));
      JSONObject.quote((String) null);
      Integer.toUnsignedString(1436);
      Boolean boolean3 = new Boolean("Vc\th<k");
      assertFalse(boolean3.equals((Object)boolean2));
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.5901347552006797
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Integer integer0 = new Integer((-821));
      JSONObject jSONObject0 = new JSONObject(integer0);
      Writer writer0 = null;
      // Undeclared exception!
      try { 
        jSONObject0.write((Writer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Boolean boolean0 = Boolean.TRUE;
      Boolean boolean1 = Boolean.FALSE;
      Boolean.getBoolean((String) null);
      Boolean.logicalOr(false, true);
      StringWriter stringWriter0 = new StringWriter();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      JSONObject.valueToString(jSONArray0);
      LinkedList<Object> linkedList1 = new LinkedList<Object>();
      char[] charArray0 = new char[7];
      charArray0[0] = 'h';
      charArray0[1] = 'h';
      charArray0[2] = 'h';
      charArray0[3] = 'h';
      charArray0[4] = 'h';
      charArray0[5] = 'h';
      charArray0[6] = 'h';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) charBuffer0);
      stringWriter1.write(2344);
      StringWriter stringWriter2 = stringWriter0.append('h');
      // Undeclared exception!
      try { 
        stringWriter2.write((String) null, 93, 93);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringWriter", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.7238004602164385
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      HashMap<Long, Double> hashMap0 = new HashMap<Long, Double>();
      JSONObject jSONObject0 = new JSONObject();
      HashMap<Boolean, JSONObject> hashMap1 = new HashMap<Boolean, JSONObject>();
      jSONObject0.put("Zso+wC+Io_=?jO", (Map) hashMap1);
      jSONObject0.putOpt((String) null, (Object) null);
      JSONObject.quote("Substring bounds error");
      Integer.toUnsignedString(2);
      Boolean boolean0 = new Boolean("2");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.5701381210391219
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      String string0 = null;
      Boolean boolean0 = Boolean.TRUE;
      Boolean boolean1 = Boolean.FALSE;
      Boolean.getBoolean((String) null);
      StringWriter stringWriter0 = new StringWriter();
      String string1 = "djcg/Yt=pNGS3";
      JSONObject.valueToString("djcg/Yt=pNGS3");
      JSONObject jSONObject0 = new JSONObject();
      try { 
        jSONObject0.getDouble("djcg/Yt=pNGS3");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"djcg/Yt=pNGS3\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.6366395121901443
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      HashMap<Long, Double> hashMap0 = new HashMap<Long, Double>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      JSONObject jSONObject1 = new JSONObject((Object) hashMap0);
      jSONObject1.optLong("wufBI<A_\"");
      String string0 = "#--(_ch";
      Boolean boolean0 = new Boolean("#--(_ch");
      String string1 = "";
      JSONObject jSONObject2 = jSONObject0.putOpt("wufBI<A_\"", hashMap0);
      JSONArray jSONArray0 = new JSONArray();
      JSONObject.valueToString(jSONArray0);
      JSONObject jSONObject3 = jSONObject2.put("gettoUppert_Case", (Map) hashMap0);
      jSONObject1.optLong("x]", 0L);
      jSONObject2.keys();
      jSONObject3.toString();
      Integer.remainderUnsigned((-3469), 61);
      StringWriter stringWriter0 = new StringWriter(3);
      try { 
        jSONArray0.getJSONObject(4);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONArray[4] not found.
         //
         verifyException("wheel.json.JSONArray", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=3.0916654820717206
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Byte byte0 = new Byte((byte)39);
      Byte.toUnsignedLong((byte)44);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "] is not a JSONArray.";
      stringArray0[1] = "*bpp)j7=";
      stringArray0[2] = "B7?dng";
      JSONObject jSONObject0 = new JSONObject(byte0, stringArray0);
      JSONObject jSONObject1 = jSONObject0.put("] is not a JSONArray.", (double) (byte)39);
      jSONObject0.toString((int) (byte)39);
      jSONObject0.optString("a2H;Fk;R703/.", "] is not a JSONArray.");
      jSONObject0.opt("{\"java.lang.String@0000000002\": java.lang.Double@0000000003}");
      jSONObject0.optLong("ik");
      jSONObject0.toString((int) (byte)39);
      Byte.compare((byte)97, (byte) (-119));
      HashMap<JSONObject, String> hashMap0 = new HashMap<JSONObject, String>();
      jSONObject0.put("] is not a JSONArray.", (Map) hashMap0);
      JSONObject jSONObject2 = new JSONObject(jSONObject1, stringArray0);
      jSONObject2.length();
      try { 
        jSONObject2.get("getjoin");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"getjoin\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.9179846283545965
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      HashMap<Object, JSONObject> hashMap0 = new HashMap<Object, JSONObject>();
      JSONObject jSONObject0 = new JSONObject();
      Boolean boolean0 = Boolean.TRUE;
      hashMap0.replace((Object) boolean0, jSONObject0, jSONObject0);
      jSONObject0.remove((String) null);
      Boolean boolean1 = Boolean.FALSE;
      JSONObject jSONObject1 = jSONObject0.put("M{NK|WYzbT?PQ(qR6>", (Object) boolean1);
      jSONObject1.remove((String) null);
      Boolean.getBoolean((String) null);
      Object object0 = JSONObject.NULL;
      JSONObject.getNames((Object) null);
      Object object1 = new Object();
      JSONObject.getNames((Object) "~");
      JSONObject jSONObject2 = new JSONObject(object0);
      JSONObject.getNames((Object) "~");
      JSONTokener jSONTokener0 = new JSONTokener((String) null);
      JSONObject jSONObject3 = null;
      try {
        jSONObject3 = new JSONObject(jSONTokener0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Double double0 = new Double((-1197.0));
      Double.sum(0.0, 0.0);
      Double.isFinite((-535.0));
      JSONObject.getNames((Object) double0);
      String string0 = "";
      String string1 = null;
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.278294358544559
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      HashMap<Object, JSONObject> hashMap0 = new HashMap<Object, JSONObject>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      String string0 = null;
      Boolean boolean0 = Boolean.TRUE;
      hashMap0.replace((Object) boolean0, jSONObject0, jSONObject0);
      JSONArray jSONArray0 = new JSONArray();
      hashMap0.put(jSONArray0, jSONObject0);
      jSONObject0.remove((String) null);
      String string1 = "M{N\\K|WYzbT?PQ(qR6>";
      Boolean boolean1 = Boolean.FALSE;
      JSONObject jSONObject1 = jSONObject0.put("M{NK|WYzbT?PQ(qR6>", (Object) boolean1);
      jSONObject1.remove((String) null);
      Boolean.getBoolean((String) null);
      Boolean.logicalOr(false, true);
      StringWriter stringWriter0 = new StringWriter();
      jSONObject1.write(stringWriter0);
      try { 
        jSONObject0.getDouble("M{NK|WYzbT?PQ(qR6>");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"M{NK|WYzbT?PQ(qR6>\"] is not a number.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.9488743844849944
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      String string0 = JSONObject.quote("si[IiiGx+uyye;T2E4h");
      Boolean boolean0 = Boolean.valueOf(false);
      String string1 = JSONObject.valueToString(boolean0, 2, 2);
      assertFalse(string1.equals((Object)string0));
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.845098765906964
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject((Object) "istoUpperCase");
      String[] stringArray0 = new String[8];
      stringArray0[0] = "istoUpperCase";
      stringArray0[3] = "istoUpperCase";
      stringArray0[4] = "gettrim";
      JSONObject.getNames((Object) "gettrim");
      stringArray0[5] = "istoUpperCase";
      JSONObject jSONObject1 = new JSONObject(jSONObject0, stringArray0);
      jSONObject1.toString();
      int int0 = (-1736);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      jSONObject1.put("istoUpperCase", (Collection) linkedList0);
      jSONObject1.optInt("istoUpperCase", (-1736));
      HashMap<Boolean, Double> hashMap0 = new HashMap<Boolean, Double>();
      jSONObject1.put("istoUpperCase", (Map) hashMap0);
      String string0 = null;
      try { 
        jSONObject0.getString((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.371343360616214
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      HashMap<Float, Integer> hashMap0 = new HashMap<Float, Integer>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      double double0 = jSONObject0.optDouble("m0ZPZw:xnpU]B4h", 0.0);
      assertEquals(0.0, double0, 0.01);
      
      Short short0 = new Short((short)1035);
      Object object0 = JSONObject.NULL;
      hashMap0.remove(object0);
      String string0 = jSONObject0.toString();
      assertEquals("{}", string0);
      
      jSONObject0.toString(2086);
      JSONObject jSONObject1 = jSONObject0.put("$]Z&@_<$\"~CF", (double) 2086);
      jSONObject1.optInt("8T)BI5TA.1Pm2tFW)~:", 13);
      String string1 = jSONObject1.toString(2086, 2086);
      assertFalse(string1.equals((Object)string0));
      
      String string2 = jSONObject1.toString();
      assertNotNull(string2);
      
      boolean boolean0 = jSONObject1.optBoolean("{}");
      assertFalse(boolean0);
      
      JSONArray jSONArray0 = jSONObject0.names();
      assertNotNull(jSONArray0);
      
      jSONObject1.optLong("{}");
      LinkedList<Double> linkedList0 = new LinkedList<Double>();
      jSONObject1.put("{\"java.lang.String@0000000003\": java.lang.Double@0000000004}", false);
      jSONObject0.put("8T)BI5TA.1Pm2tFW)~:", (Collection) linkedList0);
      int int0 = jSONObject1.optInt("sp");
      assertEquals(0, int0);
      
      JSONObject jSONObject2 = jSONObject1.put("m", true);
      String string3 = JSONObject.quote("{}");
      assertEquals("\"{}\"", string3);
      
      boolean boolean1 = jSONObject2.optBoolean("sp", false);
      assertFalse(boolean1);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.948472118718768
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      HashMap<Object, JSONObject> hashMap0 = new HashMap<Object, JSONObject>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      jSONObject0.remove((String) null);
      Boolean boolean0 = Boolean.FALSE;
      Boolean.getBoolean("M{NK|WYzbT?PQ(qR6>");
      Boolean.logicalOr(true, true);
      StringWriter stringWriter0 = new StringWriter();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add("~~}~tBs^31}GYP#hzE");
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      JSONObject jSONObject1 = new JSONObject((Map) hashMap0);
      jSONObject1.optLong("gethashCode", (-573L));
      JSONObject.valueToString(jSONObject1);
      LinkedList<Object> linkedList1 = new LinkedList<Object>();
      JSONObject.doubleToString(0.0);
      JSONObject jSONObject2 = jSONObject1.append("M{NK|WYzbT?PQ(qR6>", linkedList1);
      jSONObject2.toString(45, 3);
      JSONObject jSONObject3 = jSONObject2.accumulate("{\"java.lang.String@0000000006\": [[]]}", jSONArray0);
      JSONObject.quote("wheel.json.JSONObject@0000000003");
      JSONObject jSONObject4 = jSONObject3.putOpt("0", stringWriter0);
      boolean boolean1 = jSONObject4.isNull("lqq-Bvx&2?x^s{,-");
      assertEquals(3, jSONObject1.length());
      assertTrue(boolean1);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=3.0389576429269947
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Byte byte0 = new Byte((byte)39);
      Byte.toUnsignedLong((byte)44);
      String[] stringArray0 = new String[3];
      Byte.toUnsignedInt((byte)44);
      stringArray0[0] = "] is not a JSONArray.";
      stringArray0[1] = "*bpp)j7=";
      stringArray0[2] = "B7?dng";
      JSONObject jSONObject0 = new JSONObject(byte0, stringArray0);
      JSONObject jSONObject1 = jSONObject0.put("] is not a JSONArray.", (double) (byte)39);
      jSONObject0.toString((int) (byte)39);
      jSONObject0.optString("a2H;Fk;R703/.", "] is not a JSONArray.");
      jSONObject0.opt("{\"java.lang.String@0000000002\": java.lang.Double@0000000003}");
      jSONObject0.getString("] is not a JSONArray.");
      jSONObject0.optLong("ik");
      jSONObject0.toString((int) (byte)39);
      Byte.compare((byte)97, (byte) (-119));
      jSONObject0.isNull("(_&");
      JSONObject.numberToString(byte0);
      JSONObject.quote("");
      JSONObject.doubleToString((byte) (-119));
      String string0 = JSONObject.quote("wheel.json.JSONObject$1");
      JSONObject.doubleToString(216);
      jSONObject1.append("gethashCode", "] is not a JSONArray.");
      String string1 = jSONObject0.toString((int) (byte)44, (int) (byte) (-119));
      assertFalse(string1.equals((Object)string0));
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.1617439873448125
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Byte byte0 = new Byte((byte)39);
      Byte.toUnsignedLong((byte)58);
      String[] stringArray0 = new String[3];
      Byte.toUnsignedInt((byte)58);
      stringArray0[0] = "] is not a JSONArray.";
      stringArray0[1] = "*bpp)j7=";
      stringArray0[2] = "B7?dng";
      JSONObject jSONObject0 = new JSONObject(byte0, stringArray0);
      JSONObject jSONObject1 = jSONObject0.put("] is not a JSONArray.", (double) (byte)39);
      String string0 = jSONObject0.toString((int) (byte)39);
      jSONObject1.optString("*bpp)j7=", "] is not a JSONArray.");
      jSONObject1.opt("}");
      long long0 = jSONObject1.optLong("] is not a JSONArray.");
      assertEquals(39L, long0);
      
      String string1 = jSONObject1.toString(58);
      assertTrue(string1.equals((Object)string0));
      
      String[] stringArray1 = JSONObject.getNames((Object) "] is not a JSONArray.");
      assertNotNull(stringArray1);
      
      Boolean boolean0 = Boolean.valueOf(false);
      JSONObject jSONObject2 = new JSONObject(boolean0);
      double double0 = jSONObject2.optDouble("{\"java.lang.String@0000000002\": java.lang.Double@0000000003}");
      assertEquals(Double.NaN, double0, 0.01);
      assertEquals(1, jSONObject2.length());
      
      jSONObject0.optLong("}");
      Double double1 = new Double(39L);
      jSONObject0.append("B7?dng", double1);
      String[] stringArray2 = JSONObject.getNames(jSONObject0);
      assertEquals(2, stringArray2.length);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.3904718483192218
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      String[] stringArray0 = new String[0];
      JSONObject jSONObject0 = new JSONObject((JSONObject) null, stringArray0);
      int int0 = 125;
      JSONObject.valueToString(jSONObject0, 125, (-1443));
      Object object0 = new Object();
      JSONObject.getNames(object0);
      Object object1 = new Object();
      JSONObject.getNames((Object) "{}");
      JSONObject jSONObject1 = new JSONObject(object1);
      JSONObject.getNames(object1);
      JSONTokener jSONTokener0 = new JSONTokener("~");
      JSONObject jSONObject2 = null;
      try {
        jSONObject2 = new JSONObject(jSONTokener0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must begin with '{' at character 1 of ~
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Boolean boolean0 = Boolean.TRUE;
      Boolean boolean1 = Boolean.FALSE;
      Boolean.getBoolean((String) null);
      Boolean.logicalOr(false, true);
      StringWriter stringWriter0 = new StringWriter();
      String[] stringArray0 = new String[0];
      JSONObject jSONObject0 = new JSONObject("M{NK|WYzbT?PQ(qR6>", stringArray0);
      JSONObject jSONObject1 = new JSONObject(jSONObject0, stringArray0);
      String string0 = null;
      try { 
        jSONObject1.put((String) null, (Map) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.2496952695775096
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      HashMap<Float, Integer> hashMap0 = new HashMap<Float, Integer>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      String string0 = "m0ZPZw:xnpU]B4h";
      jSONObject0.optDouble("m0ZPZw:xnpU]B4h", 0.0);
      Short short0 = new Short((short)1035);
      JSONObject.valueToString(short0);
      Object object0 = JSONObject.NULL;
      hashMap0.remove(object0);
      int int0 = 2086;
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      JSONObject jSONObject1 = jSONObject0.put("in", (Object) "m0ZPZw:xnpU]B4h");
      String string1 = "d/)oW9QM(/l+fEB2:";
      jSONObject1.optJSONArray("java.lang.Short@0000000002");
      String string2 = ")j=]&\"\\(9|=A)";
      try { 
        jSONObject1.getInt(")j=]&\"(9|=A)");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\")j=]&\\\"(9|=A)\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=3.026757112186277
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      String[] stringArray0 = new String[0];
      JSONObject jSONObject0 = new JSONObject((JSONObject) null, stringArray0);
      jSONObject0.optInt("] is not a JSONObject.");
      Integer integer0 = new Integer(0);
      JSONObject.valueToString(integer0);
      JSONObject jSONObject1 = jSONObject0.put("] is not a JSONObject.", (Map) null);
      jSONObject0.optLong("wheel.json.JSONException", (long) 0);
      jSONObject1.keys();
      jSONObject0.toString();
      Integer integer1 = new Integer(0);
      StringWriter stringWriter0 = new StringWriter(0);
      StringWriter stringWriter1 = new StringWriter(0);
      Writer writer0 = jSONObject0.write(stringWriter1);
      jSONObject0.accumulate("] is not a JSONObject.", writer0);
      JSONObject jSONObject2 = new JSONObject("isisNaN", stringArray0);
      String string0 = "";
      try { 
        jSONObject0.getInt("null");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"null\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.8423943585863412
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Float float0 = new Float((-1.0));
      JSONObject jSONObject0 = new JSONObject();
      LinkedList<Float> linkedList0 = new LinkedList<Float>();
      jSONObject0.put("6ac", (Collection) linkedList0);
      try { 
        jSONObject0.getLong("G|bKZV");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"G|bKZV\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.398292868807916
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      int int0 = 12;
      StringWriter stringWriter0 = new StringWriter(12);
      Float float0 = new Float((float) 12);
      JSONObject.numberToString(float0);
      String string0 = "";
      jSONObject0.optBoolean("java.lang.Float@0000000002");
      HashMap<Boolean, Byte> hashMap0 = new HashMap<Boolean, Byte>();
      jSONObject0.put("$dbhDQ@}y", (Map) hashMap0);
      Float.max(12, (-1639.4749F));
      try { 
        jSONObject0.getInt("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.2528988420499507
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      HashMap<Long, Double> hashMap0 = new HashMap<Long, Double>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      JSONObject jSONObject1 = jSONObject0.put("X", 0L);
      jSONObject1.optLong("ZU3cVau", 0L);
      jSONObject0.put("Expected '", true);
      jSONObject0.optString("Z4 ");
      jSONObject0.put("Expected '", true);
      Long long0 = new Long(0L);
      Long.compareUnsigned(0L, 1L);
      double double0 = (-925.278091363);
      try { 
        Long.parseUnsignedLong("Expected '");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"Expected '\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.0914160776171182
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Boolean boolean0 = Boolean.TRUE;
      Boolean boolean1 = Boolean.FALSE;
      Boolean.getBoolean("F8c&_LMmL#b\"TApa/");
      Boolean.logicalOr(true, true);
      StringWriter stringWriter0 = new StringWriter();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      JSONObject.valueToString(linkedList0);
      LinkedList<Object> linkedList1 = new LinkedList<Object>();
      JSONObject.doubleToString(0.0);
      JSONTokener jSONTokener0 = new JSONTokener("7");
      JSONArray jSONArray1 = null;
      try {
        jSONArray1 = new JSONArray(jSONTokener0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONArray text must start with '[' at character 1 of 7
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.733132675009366
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      JSONObject.quote("/W-iD!'Vt@&OwHOr(");
      JSONObject.valueToString("\"/W-iD!'Vt@&OwHOr(\"", 69, 455);
      String string0 = "u";
      LinkedList<Short> linkedList0 = new LinkedList<Short>();
      linkedList0.spliterator();
      short short0 = (short) (-73);
      short short1 = (short) (-1242);
      Short short2 = new Short((short) (-1242));
      String[] stringArray0 = new String[5];
      stringArray0[0] = "\"java.lang.String@0000000001\"";
      stringArray0[1] = "~";
      stringArray0[2] = "~";
      stringArray0[3] = "~";
      stringArray0[4] = "u";
      JSONObject jSONObject0 = new JSONObject("/W-iD!'Vt@&OwHOr(", stringArray0);
      String string1 = "";
      try { 
        jSONObject0.getDouble("~");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"~\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.613129842728147
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      HashMap<Long, Double> hashMap0 = new HashMap<Long, Double>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      String string0 = "Substring bounds error";
      String[] stringArray0 = new String[1];
      stringArray0[0] = "ZU3cVau";
      JSONObject jSONObject1 = new JSONObject("ZU3cVau", stringArray0);
      String string1 = "";
      String string2 = "R)Y~u{";
      try { 
        jSONObject1.getDouble("R)Y~u{");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"R)Y~u{\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.3045793035087416
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      HashMap<Object, Double> hashMap0 = new HashMap<Object, Double>(13);
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      Float float0 = new Float(3525.726934349);
      Double double0 = new Double(Double.NaN);
      hashMap0.put(float0, double0);
      stringArray0[1] = "Z";
      stringArray0[2] = "] is not a Boolean.";
      jSONObject0.optBoolean("Expected a ',' or ']'");
      stringArray0[3] = "p0JV~u{VV";
      stringArray0[4] = "a>(3H]W1";
      stringArray0[5] = "4v)7wYwy@>>";
      stringArray0[6] = "`00MMvjO_a";
      stringArray0[7] = ";Az%j ";
      stringArray0[8] = "L;IoBM";
      JSONObject jSONObject1 = new JSONObject(jSONObject0, stringArray0);
      JSONObject.testValidity(";Az%j ");
      jSONObject1.optBoolean("`00MMvjO_a");
      try { 
        jSONObject1.getJSONArray((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.4260401460182885
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Integer integer0 = new Integer((-821));
      JSONObject jSONObject0 = new JSONObject(integer0);
      Integer.min(872, (-821));
      jSONObject0.optLong((String) null);
      Integer.toUnsignedString((-821));
      jSONObject0.optBoolean("/W_,B?i~I:-MW8${,z");
      String string0 = "getsum";
      JSONObject jSONObject1 = jSONObject0.put("getsum", 3258L);
      try { 
        jSONObject1.getJSONArray("4294966475");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"4294966475\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.6237180760658338
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      HashMap<Long, Double> hashMap0 = new HashMap<Long, Double>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      JSONObject.quote("Substring bounds error");
      Integer.toUnsignedString(2);
      boolean boolean0 = new Boolean("2");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.364493277486762
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      HashMap<Long, Double> hashMap0 = new HashMap<Long, Double>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      Integer integer0 = new Integer(8);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      JSONObject jSONObject1 = new JSONObject(jSONObject0, stringArray0);
      JSONObject jSONObject2 = new JSONObject(jSONObject1);
      jSONObject2.optBoolean("uf");
      assertEquals(1, jSONObject2.length());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      JSONObject.valueToString(object0);
      JSONArray jSONArray0 = null;
      try {
        jSONArray0 = new JSONArray((Object) "null");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONArray initial value should be a string or collection or array.
         //
         verifyException("wheel.json.JSONArray", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=3.2385754892177907
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Byte byte0 = new Byte((byte)39);
      Byte.toUnsignedLong((byte)58);
      String[] stringArray0 = new String[3];
      Byte.toUnsignedInt((byte)58);
      stringArray0[0] = "] is not a JSONArray.";
      stringArray0[1] = "*bpp)j7=";
      stringArray0[2] = "B7?dng";
      JSONObject jSONObject0 = new JSONObject(byte0, stringArray0);
      JSONObject jSONObject1 = jSONObject0.put("] is not a JSONArray.", (double) (byte)39);
      String string0 = jSONObject0.toString((int) (byte)39);
      jSONObject1.optString("*bpp)j7=", "] is not a JSONArray.");
      jSONObject1.opt("}");
      jSONObject1.optLong("] is not a JSONArray.");
      String string1 = jSONObject1.toString(58);
      assertTrue(string1.equals((Object)string0));
      
      Byte.compare((byte)31, (byte)58);
      boolean boolean0 = jSONObject1.isNull("DM$f6OhF:?Br2}");
      JSONObject.numberToString(byte0);
      int int0 = jSONObject1.optInt("] is not a JSONArray.");
      assertEquals(39, int0);
      
      JSONObject jSONObject2 = jSONObject1.put("Unterminated string", true);
      String string2 = JSONObject.quote("*bpp)j7=");
      assertEquals("\"*bpp)j7=\"", string2);
      
      boolean boolean1 = jSONObject2.optBoolean("wheel.json.JSONArray", true);
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=0.6237180760658338
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Boolean boolean0 = Boolean.TRUE;
      Boolean.getBoolean((String) null);
      StringWriter stringWriter0 = new StringWriter();
      JSONObject.valueToString((Object) null);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      JSONObject.quote("null");
      JSONTokener jSONTokener0 = new JSONTokener("null");
      JSONTokener jSONTokener1 = new JSONTokener("null");
      JSONArray jSONArray0 = null;
      try {
        jSONArray0 = new JSONArray(jSONTokener1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONArray text must start with '[' at character 1 of null
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Long long0 = new Long((-2951L));
      String[] stringArray0 = new String[4];
      stringArray0[0] = ">!^kJ`3i:T9lAk6A";
      stringArray0[1] = "xk&AuY";
      stringArray0[2] = "";
      stringArray0[3] = "";
      JSONObject jSONObject0 = new JSONObject(long0, stringArray0);
      boolean boolean0 = jSONObject0.has("");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("");
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject(jSONTokener0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must begin with '{' at character 0 of 
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.110917983067483
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      float float0 = (-327.5252F);
      Float float1 = new Float((-327.5252F));
      Float.min(0.0F, 0.0F);
      JSONObject jSONObject0 = new JSONObject(float1);
      String string0 = "{}";
      JSONObject jSONObject1 = jSONObject0.put("{}", 518.9508);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      JSONObject jSONObject2 = jSONObject1.put("J,/Ph.9`e('Sb=@", (Object) jSONArray0);
      jSONObject0.optJSONArray("{}");
      try { 
        jSONObject2.getInt("d/)oW9QM(/l+fEB2:");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"d/)oW9QM(/l+fEB2:\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.240708077338071
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      float float0 = (-327.5252F);
      Float float1 = new Float((-327.5252F));
      Float.min((-327.5252F), (-327.5252F));
      JSONObject jSONObject0 = new JSONObject(float1);
      String string0 = "{}";
      JSONObject jSONObject1 = jSONObject0.put("{}", 518.9508);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      jSONObject0.optJSONArray("{}");
      try { 
        jSONObject1.getBoolean("{}");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"{}\"] is not a Boolean.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.4986122886681095
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      String string0 = "}KdM5w@5#.qdJYD3N+*";
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject("}KdM5w@5#.qdJYD3N+*");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must begin with '{' at character 1 of }KdM5w@5#.qdJYD3N+*
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      String string0 = "}\"9y\"w1y";
      JSONTokener jSONTokener0 = new JSONTokener("}\"9y\"w1y");
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject(jSONTokener0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must begin with '{' at character 1 of }\"9y\"w1y
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=3.40663242960707
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      HashMap<Float, Integer> hashMap0 = new HashMap<Float, Integer>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      jSONObject0.optDouble("m0ZPZw:xnpU]B4h", 0.0);
      Short short0 = new Short((short)1035);
      Object object0 = JSONObject.NULL;
      hashMap0.remove(object0);
      jSONObject0.toString();
      jSONObject0.toString(2086);
      String string0 = "$]\\Z&@_<$\"~CF";
      JSONObject jSONObject1 = jSONObject0.put("$]Z&@_<$\"~CF", (double) 2086);
      jSONObject1.optInt("8T)BI5TA.1Pm2tFW)~:", 13);
      jSONObject1.toString(2086, 2086);
      jSONObject1.toString();
      jSONObject1.optBoolean("{}");
      jSONObject0.names();
      jSONObject1.optLong("{}");
      LinkedList<Double> linkedList0 = new LinkedList<Double>();
      Boolean boolean0 = new Boolean("$]Z&@_<$\"~CF");
      Boolean.logicalXor(true, true);
      Boolean.getBoolean((String) null);
      JSONObject.getNames((Object) boolean0);
      JSONTokener jSONTokener0 = new JSONTokener("sh");
      JSONTokener jSONTokener1 = new JSONTokener("{}");
      JSONObject jSONObject2 = new JSONObject(jSONTokener1);
      jSONObject0.optLong("getparseByte");
      Float float0 = new Float(0.0);
      JSONArray jSONArray0 = null;
      try {
        jSONArray0 = new JSONArray(float0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONArray initial value should be a string or collection or array.
         //
         verifyException("wheel.json.JSONArray", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.2322067503076204
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      HashMap<Long, Float> hashMap0 = new HashMap<Long, Float>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      try { 
        jSONObject0.getLong("wheel.json.JSONArray");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"wheel.json.JSONArray\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.636943584551386
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject((Object) "Unclosed comment");
      JSONObject.quote("Unclosed comment");
      jSONObject0.optInt("%|bmZP$ms4*`Z");
      // Undeclared exception!
      jSONObject0.toString(1530, (-2117));
  }

  /**
  //Test case number: 68
  /*Coverage entropy=3.039685047909719
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      Byte byte0 = new Byte((byte)39);
      Byte.toUnsignedLong((byte)44);
      String[] stringArray0 = new String[3];
      Byte.toUnsignedInt((byte)44);
      stringArray0[0] = "] is not a JSONArray.";
      stringArray0[1] = "*bpp)j7=";
      stringArray0[2] = "B7?dng";
      JSONObject jSONObject0 = new JSONObject(byte0, stringArray0);
      JSONObject jSONObject1 = jSONObject0.put("] is not a JSONArray.", (double) (byte)39);
      jSONObject0.toString((int) (byte)39);
      jSONObject0.optString("a2H;Fk;R703/.", "] is not a JSONArray.");
      jSONObject0.opt("{\"java.lang.String@0000000002\": java.lang.Double@0000000003}");
      assertEquals(1, jSONObject0.length());
      
      jSONObject0.getString("] is not a JSONArray.");
      jSONObject0.optLong("ik");
      jSONObject0.toString((int) (byte)39);
      Byte.toUnsignedLong((byte)18);
      Byte.compare((byte)97, (byte) (-119));
      jSONObject0.isNull("(_*c");
      JSONObject.numberToString(byte0);
      JSONObject.quote("");
      JSONObject.doubleToString((byte) (-119));
      JSONObject.quote("wheel.json.JSONObject$1");
      JSONObject.doubleToString(216);
      JSONObject jSONObject2 = jSONObject1.append("gethashCode", "] is not a JSONArray.");
      String string0 = jSONObject0.toString((int) (byte)44, (int) (byte) (-119));
      String string1 = jSONObject2.toString((int) (byte) (-119));
      assertTrue(string1.equals((Object)string0));
  }

  /**
  //Test case number: 69
  /*Coverage entropy=3.089256442633622
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      Byte byte0 = new Byte((byte)39);
      Byte.toUnsignedLong((byte)44);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "] is not a JSONArray.";
      stringArray0[1] = "*bpp)j7=";
      stringArray0[2] = "B7?dng";
      JSONObject jSONObject0 = new JSONObject(byte0, stringArray0);
      JSONObject jSONObject1 = jSONObject0.put("] is not a JSONArray.", (double) (byte)39);
      jSONObject0.toString((int) (byte)39);
      jSONObject0.optString("a2H;Fk;R703/.", "] is not a JSONArray.");
      jSONObject0.opt("{\"java.lang.String@0000000002\": java.lang.Double@0000000003}");
      jSONObject0.optLong("ik");
      jSONObject0.optBoolean("JU=");
      jSONObject1.put("V;Tdn$J'", 3258L);
      try { 
        jSONObject1.getJSONArray("getsum");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"getsum\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.8567266534724054
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      Double double0 = new Double(0.0);
      JSONObject jSONObject0 = new JSONObject(double0);
      String string0 = null;
      long long0 = 0L;
      Long long1 = new Long(0L);
      try { 
        jSONObject0.accumulate((String) null, long1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.9494837273589989
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      Float float0 = new Float((-1.0));
      JSONObject jSONObject0 = new JSONObject(float0);
      try { 
        jSONObject0.getLong("G|bKZV");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"G|bKZV\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.367826357320572
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      HashMap<Object, JSONObject> hashMap0 = new HashMap<Object, JSONObject>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      String string0 = null;
      Float.min(0.0F, 399.58603F);
      JSONObject jSONObject1 = new JSONObject(jSONObject0);
      String string1 = "{}";
      jSONObject0.put("{}", (-1617.6494587));
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      JSONObject jSONObject2 = new JSONObject("{}");
      String string2 = "istrim";
      try { 
        jSONObject0.getBoolean("istrim");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"istrim\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      Float float0 = new Float((-1.0));
      JSONObject jSONObject0 = new JSONObject();
      LinkedList<Short> linkedList0 = new LinkedList<Short>();
      jSONObject0.opt((String) null);
      try { 
        jSONObject0.put((String) null, (Collection) linkedList0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.492039959853774
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      HashMap<Object, JSONObject> hashMap0 = new HashMap<Object, JSONObject>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      jSONObject0.remove((String) null);
      Boolean boolean0 = Boolean.FALSE;
      jSONObject0.optInt("M{NK|WYzbT?PQ(qR6>");
      Integer integer0 = new Integer(0);
      String string0 = "_{Crgy/ ~0#:b+";
      Boolean boolean1 = Boolean.valueOf("_{Crgy/ ~0#:b+");
      JSONObject.valueToString(boolean1);
      jSONObject0.put("M{NK|WYzbT?PQ(qR6>", (Map) hashMap0);
      JSONObject jSONObject1 = jSONObject0.put("", false);
      String string1 = ":s t~}4%e[.";
      jSONObject1.optString(":s t~}4%e[.");
      jSONObject1.put("Z4 ", false);
      Long long0 = new Long((-3424L));
      Long.compareUnsigned(0L, (-3424L));
      try { 
        Long.parseUnsignedLong("M=@r+8<hrn");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"M=@r+8<hrn\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.5462065167684247
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      Integer integer0 = new Integer((-821));
      JSONObject jSONObject0 = new JSONObject(integer0);
      jSONObject0.optLong((String) null);
      Boolean boolean0 = new Boolean("{}");
      JSONObject.valueToString(boolean0);
      JSONObject jSONObject1 = jSONObject0.putOpt("", "java.lang.Boolean@0000000005");
      JSONObject.valueToString(jSONObject1);
      jSONObject1.has(".");
      JSONObject jSONObject2 = new JSONObject((Object) "java.lang.Boolean@0000000005");
      jSONObject2.optLong(":scgxH:pkTro;&#Bzr", 939L);
      jSONObject1.optDouble("|.V.*'cQ^cVV6ZA", 388.0);
      String string0 = null;
      try { 
        jSONObject0.put((String) null, (Object) ".");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.7214787039105834
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      Byte.toUnsignedLong((byte)44);
      String[] stringArray0 = new String[3];
      Byte.toUnsignedInt((byte)44);
      stringArray0[0] = "] is not a JSONArray.";
      stringArray0[1] = "*bpp)j7=";
      stringArray0[2] = "B7?dng";
      Integer integer0 = new Integer(7);
      Integer.getInteger("getwait", integer0);
      Integer.getInteger((String) null, integer0);
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.put("*bpp)j7=", true);
      assertEquals(1, jSONObject0.length());
  }
}
