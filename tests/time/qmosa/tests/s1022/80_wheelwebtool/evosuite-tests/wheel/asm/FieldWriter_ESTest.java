/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 30 08:39:53 GMT 2020
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.DataInputStream;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PushbackInputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.5859526183035508
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(214);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 6154, "dn&8a", "dn&8a", "dn&8a", "dn&8a");
      classWriter0.version = 292552767;
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3455);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 3098, "JSR/RET are not supported with computeFrames option", "#Z'&j|c", "", "#Z'&j|c");
      AnnotationVisitor annotationVisitor0 = fieldWriter0.visitAnnotation("", false);
      assertNotNull(annotationVisitor0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1921);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 184, "", "CxGx&e", (String) null, (Object) null);
      // Undeclared exception!
      try { 
        fieldWriter0.put((ByteVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1921);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 184, "", "CxGx&e", (String) null, (Object) null);
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(196);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 340, "dn&P*l8a", "dn&P*l8a", "dn&P*l8a", (Object) null);
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.7902679680745903
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(622);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 65535, "_xhD4U*vKq1<g,<7_N", "_xhD4U*vKq1<g,<7_N", "_xhD4U*vKq1<g,<7_N", (Object) null);
      Attribute attribute0 = new Attribute("_xhD4U*vKq1<g,<7_N");
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = new ByteVector(2268);
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1921);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 184, "", "{qk':bdSf(uW", (String) null, (Object) null);
      ByteVector byteVector0 = new ByteVector(1);
      byteVector0.length = 63;
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ByteVector", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1921);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(bufferedInputStream0);
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 1921, "dn&P*l8a", (String) null, "Code", pushbackInputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(196);
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 7, "RuntimeInvisibleAnnotations", "dn&8a", "QR", dataInputStream0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value java.io.DataInputStream@4bb6f1fc
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.6546695645285008
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ByteVector byteVector0 = new ByteVector(8);
      ClassWriter classWriter0 = new ClassWriter((-2264));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 8, "yjX,Jb^:t", "h)*JdI!^1", "%L0", "ConstantValue");
      fieldWriter0.visitAnnotation("JSR/RET are not supported with computeFraes option", false);
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.064315403907995
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(196);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "dn&8a", "dn&8a", "dn&8a", "dn&8a");
      fieldWriter0.visitAnnotation("dn&8a", true);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(127, byteArray0.length);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.4659992569610426
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1921);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 184, "", "{qk':bdSf(uW", (String) null, (Object) null);
      ByteVector byteVector0 = new ByteVector(1);
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.4361623253853443
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4096);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2264), "ConstantValue", "JSR/RET are not supported with computeFrames option", "ConstantValue", "ConstantValue");
      ByteVector byteVector0 = new ByteVector(1);
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.4361623253853443
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(214);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 6154, "dn&8a", "dn&8a", "dn&8a", "dn&8a");
      ByteVector byteVector0 = new ByteVector();
      classWriter0.version = 292552767;
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.8239592165010823
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(196);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "", "wheel.asm.ClassAdapter", "RuntimeVisibleAnnotations", "wheel.asm.ClassAdapter");
      Attribute attribute0 = new Attribute("E");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.5859526183035508
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(214);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 65535, "InnerClasses", "~QRU51Vzz&k\"(O", (String) null, "");
      int int0 = fieldWriter0.getSize();
      assertEquals(22, int0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.5859526183035508
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1921);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2493), "K9U^6 {1", "", "K9U^6 {1", "boolean");
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.5859526183035508
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(196);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 6120, "dn&8a", "dn&8a", "dn&8a", "dn&8a");
      classWriter0.version = 292552753;
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.5859526183035508
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(622);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 65535, "_xhD4U*vKq1<g,<7_N", "_xhD4U*vKq1<g,<7_N", "_xhD4U*vKq1<g,<7_N", (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(22, int0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.8239592165010823
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(196);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 6120, "dn&8a", "dn&8a", "33j/x2Z7s~}(@", "dn&8a");
      fieldWriter0.visitAnnotation("wheel.asm.AnnotationWriter", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(42, int0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(214);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 6154, "dn&8a", "dn&8a", "dn&8a", "dn&8a");
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 65535, "InnerClasses", "~QRU51Vzz&k\"(O", (String) null, "");
      assertFalse(fieldWriter1.equals((Object)fieldWriter0));
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(20);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "", "Synthetic", "5oE#T&;!Z>g4Wi^ %", "5oE#T&;!Z>g4Wi^ %");
      fieldWriter0.visitEnd();
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.5940241655824705
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(622);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 65535, "_xhD4U*vKq1<g,<7_N", "_xhD4U*vKq1<g,<7_N", "_xhD4U*vKq1<g,<7_N", (Object) null);
      Attribute attribute0 = new Attribute("_xhD4U*vKq1<g,<7_N");
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = new ByteVector(2268);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }
}
