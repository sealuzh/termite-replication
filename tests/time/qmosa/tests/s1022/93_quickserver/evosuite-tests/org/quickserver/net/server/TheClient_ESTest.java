/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 06:17:59 GMT 2019
 */

package org.quickserver.net.server;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.net.SocketException;
import java.nio.channels.SocketChannel;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.net.MockSocket;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;
import org.quickserver.net.qsadmin.CommandHandler;
import org.quickserver.net.qsadmin.Data;
import org.quickserver.net.server.Authenticator;
import org.quickserver.net.server.ClientAuthenticationHandler;
import org.quickserver.net.server.ClientBinaryHandler;
import org.quickserver.net.server.ClientCommandHandler;
import org.quickserver.net.server.ClientData;
import org.quickserver.net.server.ClientEvent;
import org.quickserver.net.server.ClientEventHandler;
import org.quickserver.net.server.ClientExtendedEventHandler;
import org.quickserver.net.server.ClientObjectHandler;
import org.quickserver.net.server.ClientWriteHandler;
import org.quickserver.net.server.QuickServer;
import org.quickserver.net.server.TheClient;
import org.quickserver.net.server.impl.DefaultClientEventHandler;
import org.quickserver.net.server.impl.NonBlockingClientHandler;
import org.quickserver.util.xmlreader.QSAdminServerConfig;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TheClient_ESTest extends TheClient_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.555632017870312
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      CommandHandler commandHandler0 = new CommandHandler();
      theClient0.setClientCommandHandler(commandHandler0);
      ClientCommandHandler clientCommandHandler0 = theClient0.getClientCommandHandler();
      theClient0.setClientCommandHandler(clientCommandHandler0);
      theClient0.toString();
      boolean boolean0 = theClient0.getCommunicationLogging();
      assertTrue(boolean0);
      
      theClient0.getSocketChannel();
      theClient0.getClientExtendedEventHandler();
      theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      String string0 = theClient0.toString();
      assertEquals("{TheClient no socket, Event: (ClientEvent-Run Blocking)}", string0);
      assertFalse(theClient0.getTrusted());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.879376754279852
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)125;
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "?Q_K$^C)Q+mv");
      theClient0.setTimeoutMsg("");
      String string0 = theClient0.toString();
      assertEquals("{TheClient no socket, Event: (ClientEvent-Run Blocking)}", string0);
      
      QuickServer quickServer0 = new QuickServer("?Q_K$^C)Q+mv", (byte)125);
      theClient0.setServer(quickServer0);
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "");
      QuickServer quickServer1 = new QuickServer((String) null);
      theClient0.setServer(quickServer1);
      theClient0.getClientObjectHandler();
      theClient0.setClientObjectHandler((ClientObjectHandler) null);
      theClient0.setClientAuthenticationHandler((ClientAuthenticationHandler) null);
      theClient0.getClientWriteHandler();
      theClient0.getClientExtendedEventHandler();
      theClient0.getTimeoutMsg();
      theClient0.getClientObjectHandler();
      theClient0.getClientCommandHandler();
      assertTrue(theClient0.getCommunicationLogging());
      assertFalse(theClient0.getTrusted());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.125543816101745
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getClientBinaryHandler();
      theClient0.toString();
      theClient0.setClientBinaryHandler((ClientBinaryHandler) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      TheClient theClient1 = new TheClient();
      theClient1.setMaxAuthTry(899);
      theClient0.getClientData();
      theClient0.getAuthenticator();
      theClient1.setAuthenticator((Authenticator) null);
      MockSocket mockSocket0 = new MockSocket();
      theClient1.setSocket(mockSocket0);
      theClient0.toString();
      theClient1.getSocket();
      theClient1.setAuthenticator((Authenticator) null);
      theClient1.getClientExtendedEventHandler();
      theClient1.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      assertEquals(899, theClient1.getMaxAuthTry());
      
      CommandHandler commandHandler0 = new CommandHandler();
      theClient0.setClientEventHandler(commandHandler0);
      theClient0.setCommunicationLogging(true);
      System.setCurrentTimeMillis(0L);
      theClient0.getAuthenticator();
      assertFalse(theClient0.getTrusted());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.2627848006711537
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getClientCommandHandler();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)124;
      byteArray0[1] = (byte) (-91);
      byteArray0[2] = (byte) (-69);
      byteArray0[3] = (byte)47;
      theClient0.setClientCommandHandler((ClientCommandHandler) null);
      ClientEvent clientEvent0 = ClientEvent.CLOSE_CON;
      theClient0.setClientEvent(clientEvent0);
      theClient0.getClientObjectHandler();
      theClient0.toString();
      theClient0.setTimeoutMsg("qv/d");
      theClient0.getAuthenticator();
      theClient0.setAuthenticator((Authenticator) null);
      theClient0.setTimeoutMsg("=o1ZOVWxqX8+");
      theClient0.getClientWriteHandler();
      theClient0.getSocket();
      theClient0.getClientExtendedEventHandler();
      theClient0.getClientObjectHandler();
      theClient0.getSocket();
      theClient0.getServer();
      String string0 = theClient0.toString();
      assertEquals("{TheClient no socket, Event: (ClientEvent-Close Connection)}", string0);
      
      theClient0.getSocket();
      theClient0.getTimeoutMsg();
      theClient0.getSocketChannel();
      theClient0.getClientCommandHandler();
      theClient0.getClientBinaryHandler();
      theClient0.getSocket();
      theClient0.getTimeoutMsg();
      theClient0.getClientWriteHandler();
      assertFalse(theClient0.getTrusted());
      assertTrue(theClient0.getCommunicationLogging());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.125543816101745
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getClientObjectHandler();
      theClient0.setClientObjectHandler((ClientObjectHandler) null);
      theClient0.setMaxAuthTry((-1));
      theClient0.getClientCommandHandler();
      theClient0.toString();
      theClient0.setTimeoutMsg("{TheClient no socket, Event: (ClientEvent-Run Blocking)}");
      theClient0.getClientCommandHandler();
      theClient0.getSocket();
      QuickServer quickServer0 = new QuickServer("{TheClient no socket, Event: (ClientEvent-Run Blocking)}");
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) null;
      objectArray0[1] = (Object) null;
      objectArray0[2] = (Object) "{TheClient no socket, Event: (ClientEvent-Run Blocking)}";
      objectArray0[3] = (Object) "{TheClient no socket, Event: (ClientEvent-Run Blocking)}";
      quickServer0.initService(objectArray0);
      quickServer0.setConsoleLoggingToMicro();
      theClient0.setServer(quickServer0);
      theClient0.getMaxAuthTry();
      theClient0.getSocketChannel();
      theClient0.getSocket();
      theClient0.getClientObjectHandler();
      System.setCurrentTimeMillis((-1));
      theClient0.getAuthenticator();
      theClient0.getClientObjectHandler();
      theClient0.getClientExtendedEventHandler();
      theClient0.getServer();
      assertEquals((-1), theClient0.getMaxAuthTry());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      MockSocket mockSocket0 = new MockSocket();
      mockSocket0.getLocalPort();
      theClient0.setSocket(mockSocket0);
      String string0 = theClient0.toString();
      assertFalse(theClient0.getTrusted());
      assertEquals("{TheClient Socket[unconnected], Event: (ClientEvent-Run Blocking)}", string0);
      assertTrue(theClient0.getCommunicationLogging());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.4875355522425155
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      assertFalse(theClient0.getTrusted());
      
      theClient0.setTrusted(true);
      theClient0.getClientBinaryHandler();
      theClient0.setTimeout(0);
      theClient0.getClientExtendedEventHandler();
      org.quickserver.net.qsadmin.Authenticator authenticator0 = new org.quickserver.net.qsadmin.Authenticator();
      theClient0.setClientAuthenticationHandler(authenticator0);
      theClient0.getMaxConnectionMsg();
      theClient0.getCommunicationLogging();
      theClient0.getClientEventHandler();
      theClient0.getSocketChannel();
      theClient0.setTrusted(true);
      theClient0.getAuthenticator();
      theClient0.getAuthenticator();
      theClient0.setAuthenticator((Authenticator) null);
      theClient0.getClientAuthenticationHandler();
      theClient0.getClientCommandHandler();
      theClient0.getMaxConnectionMsg();
      theClient0.setClientEventHandler((ClientEventHandler) null);
      theClient0.toString();
      theClient0.setMaxAuthTryMsg("");
      theClient0.getMaxAuthTryMsg();
      theClient0.getClientData();
      theClient0.getClientEventHandler();
      theClient0.getSocketChannel();
      theClient0.getAuthenticator();
      theClient0.getCommunicationLogging();
      theClient0.getAuthenticator();
      theClient0.setAuthenticator((Authenticator) null);
      theClient0.setMaxConnectionMsg((String) null);
      theClient0.getMaxConnectionMsg();
      assertTrue(theClient0.getTrusted());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.1952296882816973
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getClientBinaryHandler();
      String string0 = theClient0.toString();
      assertEquals("{TheClient no socket, Event: (ClientEvent-Run Blocking)}", string0);
      
      theClient0.setClientBinaryHandler((ClientBinaryHandler) null);
      theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient0.getClientObjectHandler();
      theClient0.setClientObjectHandler((ClientObjectHandler) null);
      theClient0.getClientWriteHandler();
      theClient0.setClientWriteHandler((ClientWriteHandler) null);
      DefaultClientEventHandler defaultClientEventHandler0 = new DefaultClientEventHandler();
      CommandHandler commandHandler0 = new CommandHandler();
      defaultClientEventHandler0.setClientCommandHandler(commandHandler0);
      TheClient theClient1 = new TheClient();
      theClient1.setClientEventHandler(commandHandler0);
      theClient1.getClientBinaryHandler();
      theClient1.setClientBinaryHandler((ClientBinaryHandler) null);
      theClient0.getAuthenticator();
      theClient0.setAuthenticator((Authenticator) null);
      theClient0.setMaxConnectionMsg("");
      theClient0.getMaxConnectionMsg();
      theClient1.getClientExtendedEventHandler();
      theClient1.getClientBinaryHandler();
      assertFalse(theClient1.getTrusted());
      assertTrue(theClient1.getCommunicationLogging());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.9687776175299367
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      DefaultClientEventHandler defaultClientEventHandler0 = new DefaultClientEventHandler();
      CommandHandler commandHandler0 = new CommandHandler();
      defaultClientEventHandler0.setClientCommandHandler(commandHandler0);
      theClient0.setClientEventHandler(defaultClientEventHandler0);
      theClient0.getClientBinaryHandler();
      theClient0.setClientBinaryHandler((ClientBinaryHandler) null);
      theClient0.getClientObjectHandler();
      theClient0.setClientObjectHandler((ClientObjectHandler) null);
      theClient0.getClientEventHandler();
      TheClient theClient1 = new TheClient();
      theClient1.setClientBinaryHandler((ClientBinaryHandler) null);
      theClient1.setCommunicationLogging(false);
      theClient1.getTimeout();
      theClient1.getClientBinaryHandler();
      theClient1.setTimeoutMsg((String) null);
      theClient0.getClientExtendedEventHandler();
      assertTrue(theClient0.getCommunicationLogging());
      
      theClient1.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      assertFalse(theClient1.getCommunicationLogging());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.3203928312357034
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getClientBinaryHandler();
      theClient0.getClientEvent();
      theClient0.getAuthenticator();
      theClient0.setAuthenticator((Authenticator) null);
      theClient0.toString();
      theClient0.setAuthenticator((Authenticator) null);
      theClient0.getClientExtendedEventHandler();
      theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient0.setTrusted(true);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      theClient0.getTimeout();
      CommandHandler commandHandler0 = new CommandHandler();
      theClient0.setClientEventHandler(commandHandler0);
      theClient0.setCommunicationLogging(false);
      theClient0.setClientBinaryHandler((ClientBinaryHandler) null);
      theClient0.getCommunicationLogging();
      theClient0.getAuthenticator();
      theClient0.getClientWriteHandler();
      theClient0.getServer();
      theClient0.getClientObjectHandler();
      assertFalse(theClient0.getCommunicationLogging());
      assertTrue(theClient0.getTrusted());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.1239058144637433
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.setMaxAuthTry(2639);
      theClient0.getTimeoutMsg();
      theClient0.getMaxAuthTry();
      theClient0.setMaxAuthTryMsg((String) null);
      theClient0.getClientObjectHandler();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      theClient0.setClientObjectHandler((ClientObjectHandler) null);
      theClient0.getClientWriteHandler();
      TheClient theClient1 = new TheClient();
      theClient1.setClientWriteHandler((ClientWriteHandler) null);
      DefaultClientEventHandler defaultClientEventHandler0 = new DefaultClientEventHandler();
      CommandHandler commandHandler0 = new CommandHandler();
      defaultClientEventHandler0.setClientCommandHandler(commandHandler0);
      TheClient theClient2 = new TheClient();
      theClient1.setClientEventHandler(commandHandler0);
      theClient2.getClientBinaryHandler();
      theClient0.setClientBinaryHandler((ClientBinaryHandler) null);
      assertEquals(2639, theClient0.getMaxAuthTry());
      
      theClient2.getClientExtendedEventHandler();
      theClient2.getClientCommandHandler();
      assertEquals(0, theClient2.getMaxAuthTry());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      TheClient theClient0 = new TheClient();
      theClient0.getAuthenticator();
      theClient0.setAuthenticator((Authenticator) null);
      theClient0.setMaxConnectionMsg("vts-1");
      theClient0.getMaxConnectionMsg();
      assertTrue(theClient0.getCommunicationLogging());
      assertFalse(theClient0.getTrusted());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.2590752087262675
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getClientBinaryHandler();
      theClient0.setClientBinaryHandler((ClientBinaryHandler) null);
      theClient0.setMaxAuthTry(1000);
      theClient0.setTimeout(1);
      theClient0.getClientExtendedEventHandler();
      org.quickserver.net.qsadmin.Authenticator authenticator0 = new org.quickserver.net.qsadmin.Authenticator();
      theClient0.setClientAuthenticationHandler(authenticator0);
      theClient0.getMaxConnectionMsg();
      theClient0.getCommunicationLogging();
      theClient0.getClientEventHandler();
      theClient0.getSocketChannel();
      theClient0.setTrusted(true);
      theClient0.getAuthenticator();
      theClient0.setAuthenticator((Authenticator) null);
      theClient0.getClientAuthenticationHandler();
      theClient0.getClientBinaryHandler();
      theClient0.setClientBinaryHandler((ClientBinaryHandler) null);
      boolean boolean0 = theClient0.getTrusted();
      assertEquals(1000, theClient0.getMaxAuthTry());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.4342348975337873
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getClientBinaryHandler();
      theClient0.setClientBinaryHandler((ClientBinaryHandler) null);
      theClient0.setMaxAuthTry(1000);
      theClient0.setTimeout(1);
      theClient0.getClientExtendedEventHandler();
      org.quickserver.net.qsadmin.Authenticator authenticator0 = new org.quickserver.net.qsadmin.Authenticator();
      theClient0.setClientAuthenticationHandler(authenticator0);
      theClient0.getMaxConnectionMsg();
      theClient0.getCommunicationLogging();
      theClient0.getClientEventHandler();
      theClient0.getSocketChannel();
      theClient0.setTrusted(true);
      theClient0.getAuthenticator();
      theClient0.setAuthenticator((Authenticator) null);
      theClient0.getClientAuthenticationHandler();
      theClient0.getClientWriteHandler();
      theClient0.setClientWriteHandler((ClientWriteHandler) null);
      DefaultClientEventHandler defaultClientEventHandler0 = new DefaultClientEventHandler();
      CommandHandler commandHandler0 = new CommandHandler();
      defaultClientEventHandler0.setClientCommandHandler(commandHandler0);
      TheClient theClient1 = new TheClient();
      theClient0.setClientEventHandler(commandHandler0);
      theClient1.getClientBinaryHandler();
      theClient1.setClientBinaryHandler((ClientBinaryHandler) null);
      theClient0.getClientExtendedEventHandler();
      theClient1.getClientCommandHandler();
      theClient0.getClientExtendedEventHandler();
      assertEquals(1, theClient0.getTimeout());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient0.getClientBinaryHandler();
      theClient0.setClientBinaryHandler((ClientBinaryHandler) null);
      boolean boolean0 = theClient0.getTrusted();
      assertFalse(boolean0);
      
      theClient0.getClientCommandHandler();
      assertTrue(theClient0.getCommunicationLogging());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.9676652704776565
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient0.getClientCommandHandler();
      theClient0.getMaxConnectionMsg();
      theClient0.getClientEventHandler();
      theClient0.setClientEventHandler((ClientEventHandler) null);
      theClient0.toString();
      theClient0.setMaxAuthTryMsg("|bKZVkrD7OXoBNI");
      theClient0.getMaxAuthTryMsg();
      TheClient theClient1 = new TheClient();
      theClient0.getClientBinaryHandler();
      theClient0.setClientBinaryHandler((ClientBinaryHandler) null);
      String string0 = theClient0.toString();
      assertEquals("{TheClient no socket, Event: (ClientEvent-Run Blocking)}", string0);
      
      theClient1.getClientExtendedEventHandler();
      assertTrue(theClient1.getCommunicationLogging());
      assertFalse(theClient1.getTrusted());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.380937795632014
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getAuthenticator();
      theClient0.getClientBinaryHandler();
      Data data0 = new Data();
      theClient0.setTimeout(32);
      data0.setLastAsked("");
      theClient0.setClientData(data0);
      theClient0.getClientEventHandler();
      theClient0.setClientEventHandler((ClientEventHandler) null);
      theClient0.getSocketChannel();
      theClient0.getClientData();
      theClient0.getClientObjectHandler();
      theClient0.setClientObjectHandler((ClientObjectHandler) null);
      theClient0.getClientAuthenticationHandler();
      theClient0.getAuthenticator();
      theClient0.setMaxAuthTryMsg("{TheClient ");
      theClient0.getAuthenticator();
      theClient0.setMaxAuthTryMsg("{TheClient ");
      theClient0.getMaxAuthTryMsg();
      theClient0.getClientExtendedEventHandler();
      theClient0.getMaxAuthTry();
      theClient0.setClientEventHandler((ClientEventHandler) null);
      theClient0.getClientCommandHandler();
      theClient0.setClientBinaryHandler((ClientBinaryHandler) null);
      theClient0.getClientCommandHandler();
      theClient0.setMaxAuthTryMsg("");
      theClient0.getClientAuthenticationHandler();
      theClient0.setTimeout(2330);
      assertEquals(2330, theClient0.getTimeout());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.784066574475527
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      QuickServer quickServer0 = new QuickServer();
      QSAdminServerConfig qSAdminServerConfig0 = new QSAdminServerConfig();
      qSAdminServerConfig0.setAuthenticator("Z^_rORCEaeK");
      quickServer0.configQuickServer(qSAdminServerConfig0);
      theClient0.setServer(quickServer0);
      QuickServer quickServer1 = theClient0.getServer();
      quickServer1.setApplicationJarPath("Z^_rORCEaeK");
      quickServer1.setQSAdminServerAuthenticator("");
      quickServer1.setRawCommunicationMaxLength(0);
      theClient0.setServer(quickServer1);
      theClient0.getClientWriteHandler();
      theClient0.getClientData();
      theClient0.setClientData((ClientData) null);
      theClient0.setMaxConnectionMsg("Z^_rORCEaeK");
      theClient0.setMaxAuthTry(0);
      theClient0.setTrusted(false);
      ClientEvent clientEvent0 = ClientEvent.RUN_BLOCKING;
      theClient0.setClientEvent(clientEvent0);
      theClient0.setTrusted(false);
      theClient0.setMaxConnectionMsg("");
      assertTrue(theClient0.getCommunicationLogging());
      assertEquals(0, theClient0.getMaxAuthTry());
      assertFalse(theClient0.getTrusted());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getClientObjectHandler();
      theClient0.setClientObjectHandler((ClientObjectHandler) null);
      theClient0.getClientWriteHandler();
      theClient0.setClientWriteHandler((ClientWriteHandler) null);
      theClient0.setCommunicationLogging(true);
      QuickServer quickServer0 = new QuickServer();
      theClient0.setServer(quickServer0);
      assertFalse(theClient0.getTrusted());
      assertTrue(theClient0.getCommunicationLogging());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.1218159503049137
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.setTimeout((-2554));
      theClient0.getAuthenticator();
      theClient0.setTimeoutMsg((String) null);
      ClientEvent clientEvent0 = theClient0.getClientEvent();
      theClient0.setMaxAuthTryMsg((String) null);
      theClient0.getClientExtendedEventHandler();
      boolean boolean0 = false;
      theClient0.setTrusted(false);
      theClient0.getMaxAuthTry();
      theClient0.getClientData();
      theClient0.getTimeout();
      theClient0.getClientAuthenticationHandler();
      theClient0.getServer();
      theClient0.getClientObjectHandler();
      CommandHandler commandHandler0 = new CommandHandler();
      NonBlockingClientHandler nonBlockingClientHandler0 = new NonBlockingClientHandler(25);
      nonBlockingClientHandler0.hasEvent(clientEvent0);
      try { 
        commandHandler0.handleCommand(nonBlockingClientHandler0, (String) null);
        fail("Expecting exception: SocketException");
      
      } catch(SocketException e) {
         //
         // Connection is no more open!
         //
         verifyException("org.quickserver.net.server.impl.BasicClientHandler", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.9676652704776565
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getClientExtendedEventHandler();
      theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient0.setMaxAuthTryMsg("Q?]R7");
      theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient0.getClientObjectHandler();
      theClient0.setClientObjectHandler((ClientObjectHandler) null);
      theClient0.getClientWriteHandler();
      theClient0.setClientWriteHandler((ClientWriteHandler) null);
      DefaultClientEventHandler defaultClientEventHandler0 = new DefaultClientEventHandler();
      CommandHandler commandHandler0 = new CommandHandler();
      defaultClientEventHandler0.setClientCommandHandler(commandHandler0);
      TheClient theClient1 = new TheClient();
      theClient1.setClientEventHandler(defaultClientEventHandler0);
      theClient1.getClientBinaryHandler();
      theClient0.setClientBinaryHandler((ClientBinaryHandler) null);
      System.setCurrentTimeMillis(500L);
      theClient1.getClientCommandHandler();
      assertFalse(theClient1.getTrusted());
      assertTrue(theClient1.getCommunicationLogging());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.485528191921338
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getClientBinaryHandler();
      theClient0.setClientBinaryHandler((ClientBinaryHandler) null);
      theClient0.setMaxAuthTry(1000);
      theClient0.setTimeout(1);
      theClient0.getClientExtendedEventHandler();
      org.quickserver.net.qsadmin.Authenticator authenticator0 = new org.quickserver.net.qsadmin.Authenticator();
      theClient0.setClientAuthenticationHandler(authenticator0);
      theClient0.getMaxConnectionMsg();
      theClient0.getCommunicationLogging();
      theClient0.getClientEventHandler();
      theClient0.getSocketChannel();
      theClient0.setTrusted(true);
      theClient0.getAuthenticator();
      theClient0.setAuthenticator((Authenticator) null);
      theClient0.getClientAuthenticationHandler();
      theClient0.getClientCommandHandler();
      theClient0.getMaxConnectionMsg();
      theClient0.setClientEventHandler((ClientEventHandler) null);
      theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient0.setTrusted(false);
      theClient0.getTimeout();
      CommandHandler commandHandler0 = new CommandHandler();
      theClient0.setClientEventHandler(commandHandler0);
      TheClient theClient1 = new TheClient();
      theClient0.setCommunicationLogging(false);
      assertFalse(theClient0.getTrusted());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.9720861369674885
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getClientBinaryHandler();
      String string0 = theClient0.toString();
      assertEquals("{TheClient no socket, Event: (ClientEvent-Run Blocking)}", string0);
      
      TheClient theClient1 = new TheClient();
      theClient0.getClientBinaryHandler();
      theClient1.setClientBinaryHandler((ClientBinaryHandler) null);
      TheClient theClient2 = new TheClient();
      theClient2.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient0.getClientObjectHandler();
      theClient1.setClientObjectHandler((ClientObjectHandler) null);
      theClient0.getClientWriteHandler();
      theClient1.setClientWriteHandler((ClientWriteHandler) null);
      DefaultClientEventHandler defaultClientEventHandler0 = new DefaultClientEventHandler();
      CommandHandler commandHandler0 = new CommandHandler();
      defaultClientEventHandler0.setClientCommandHandler(commandHandler0);
      TheClient theClient3 = new TheClient();
      theClient2.getClientEventHandler();
      theClient1.setClientEventHandler((ClientEventHandler) null);
      theClient2.getClientBinaryHandler();
      theClient0.setClientBinaryHandler((ClientBinaryHandler) null);
      System.setCurrentTimeMillis(1236L);
      theClient2.getClientCommandHandler();
      theClient0.getClientWriteHandler();
      assertTrue(theClient0.getCommunicationLogging());
      assertFalse(theClient0.getTrusted());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.0497978423100225
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getClientBinaryHandler();
      theClient0.toString();
      theClient0.setClientBinaryHandler((ClientBinaryHandler) null);
      theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient0.getClientObjectHandler();
      theClient0.setClientObjectHandler((ClientObjectHandler) null);
      theClient0.getClientWriteHandler();
      theClient0.setClientWriteHandler((ClientWriteHandler) null);
      DefaultClientEventHandler defaultClientEventHandler0 = new DefaultClientEventHandler();
      CommandHandler commandHandler0 = new CommandHandler();
      defaultClientEventHandler0.setClientCommandHandler(commandHandler0);
      TheClient theClient1 = new TheClient();
      theClient1.setClientEventHandler(commandHandler0);
      theClient1.getClientBinaryHandler();
      theClient1.setClientBinaryHandler((ClientBinaryHandler) null);
      theClient1.setMaxAuthTry(125);
      System.setCurrentTimeMillis(500L);
      theClient1.getClientCommandHandler();
      assertEquals(125, theClient1.getMaxAuthTry());
      
      theClient0.getTimeoutMsg();
      assertFalse(theClient0.getTrusted());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.9676652704776565
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getClientBinaryHandler();
      theClient0.getMaxAuthTryMsg();
      theClient0.setClientBinaryHandler((ClientBinaryHandler) null);
      theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient0.getClientObjectHandler();
      theClient0.setClientObjectHandler((ClientObjectHandler) null);
      theClient0.getClientWriteHandler();
      theClient0.setClientWriteHandler((ClientWriteHandler) null);
      DefaultClientEventHandler defaultClientEventHandler0 = new DefaultClientEventHandler();
      CommandHandler commandHandler0 = new CommandHandler();
      defaultClientEventHandler0.setClientCommandHandler(commandHandler0);
      TheClient theClient1 = new TheClient();
      theClient1.setClientEventHandler(commandHandler0);
      theClient1.getClientBinaryHandler();
      theClient1.getClientExtendedEventHandler();
      theClient1.getClientCommandHandler();
      assertTrue(theClient1.getCommunicationLogging());
      assertFalse(theClient1.getTrusted());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.323009262423563
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getClientData();
      theClient0.setClientEvent((ClientEvent) null);
      theClient0.setClientData((ClientData) null);
      theClient0.getClientEvent();
      TheClient theClient1 = new TheClient();
      theClient1.getClientBinaryHandler();
      theClient1.setClientBinaryHandler((ClientBinaryHandler) null);
      theClient0.getAuthenticator();
      theClient1.getAuthenticator();
      theClient0.setAuthenticator((Authenticator) null);
      theClient0.toString();
      theClient1.setAuthenticator((Authenticator) null);
      theClient1.getClientExtendedEventHandler();
      theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient1.setTrusted(true);
      theClient0.getTimeout();
      theClient0.setTrusted(true);
      theClient1.getTimeout();
      CommandHandler commandHandler0 = new CommandHandler();
      theClient1.setClientEventHandler(commandHandler0);
      TheClient theClient2 = new TheClient();
      theClient2.setCommunicationLogging(true);
      assertFalse(theClient2.getTrusted());
      
      theClient0.getClientObjectHandler();
      theClient1.getClientBinaryHandler();
      assertTrue(theClient1.getTrusted());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getSocketChannel();
      theClient0.setSocketChannel((SocketChannel) null);
      theClient0.getClientObjectHandler();
      assertFalse(theClient0.getTrusted());
      assertTrue(theClient0.getCommunicationLogging());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.051435843948024
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.toString();
      theClient0.setTrusted(true);
      theClient0.getClientBinaryHandler();
      theClient0.getClientEvent();
      theClient0.setClientBinaryHandler((ClientBinaryHandler) null);
      theClient0.getClientObjectHandler();
      theClient0.setClientObjectHandler((ClientObjectHandler) null);
      theClient0.getClientWriteHandler();
      theClient0.getClientWriteHandler();
      theClient0.setClientWriteHandler((ClientWriteHandler) null);
      assertTrue(theClient0.getTrusted());
      
      DefaultClientEventHandler defaultClientEventHandler0 = new DefaultClientEventHandler();
      CommandHandler commandHandler0 = new CommandHandler();
      defaultClientEventHandler0.setClientCommandHandler(commandHandler0);
      TheClient theClient1 = new TheClient();
      theClient1.getClientEventHandler();
      theClient1.setClientEventHandler((ClientEventHandler) null);
      theClient1.getClientBinaryHandler();
      theClient1.setClientBinaryHandler((ClientBinaryHandler) null);
      System.setCurrentTimeMillis(500L);
      theClient1.getClientCommandHandler();
      theClient1.toString();
      assertFalse(theClient1.getTrusted());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.9687776175299367
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getClientBinaryHandler();
      String string0 = theClient0.toString();
      assertEquals("{TheClient no socket, Event: (ClientEvent-Run Blocking)}", string0);
      
      theClient0.setClientBinaryHandler((ClientBinaryHandler) null);
      theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient0.getClientObjectHandler();
      theClient0.setClientObjectHandler((ClientObjectHandler) null);
      theClient0.getClientWriteHandler();
      theClient0.setClientWriteHandler((ClientWriteHandler) null);
      DefaultClientEventHandler defaultClientEventHandler0 = new DefaultClientEventHandler();
      CommandHandler commandHandler0 = new CommandHandler();
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      defaultClientEventHandler0.setClientCommandHandler(commandHandler0);
      TheClient theClient1 = new TheClient();
      theClient1.setClientEventHandler(commandHandler0);
      theClient1.getClientBinaryHandler();
      theClient1.setClientBinaryHandler((ClientBinaryHandler) null);
      theClient0.getClientExtendedEventHandler();
      theClient0.getClientData();
      assertFalse(theClient0.getTrusted());
      assertTrue(theClient0.getCommunicationLogging());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      MockSocket mockSocket0 = new MockSocket();
      theClient0.setSocket(mockSocket0);
      theClient0.setTimeout((-3008));
      assertEquals((-3008), theClient0.getTimeout());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=3.0497978423100225
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      ClientEvent clientEvent0 = ClientEvent.MAX_CON_BLOCKING;
      theClient0.setClientEvent(clientEvent0);
      theClient0.getClientBinaryHandler();
      String string0 = theClient0.toString();
      assertEquals("{TheClient no socket, Event: (ClientEvent-Max Connection Blocking)}", string0);
      
      theClient0.setClientBinaryHandler((ClientBinaryHandler) null);
      theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient0.getClientObjectHandler();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ">xR5:P1Xh>xXs0");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      theClient0.setClientObjectHandler((ClientObjectHandler) null);
      theClient0.getClientWriteHandler();
      theClient0.setClientWriteHandler((ClientWriteHandler) null);
      DefaultClientEventHandler defaultClientEventHandler0 = new DefaultClientEventHandler();
      CommandHandler commandHandler0 = new CommandHandler();
      defaultClientEventHandler0.setClientCommandHandler(commandHandler0);
      TheClient theClient1 = new TheClient();
      theClient1.setClientEventHandler(commandHandler0);
      theClient1.getClientBinaryHandler();
      theClient1.setClientBinaryHandler((ClientBinaryHandler) null);
      theClient0.getClientExtendedEventHandler();
      theClient1.getClientCommandHandler();
      assertFalse(theClient1.getTrusted());
      assertTrue(theClient1.getCommunicationLogging());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getClientAuthenticationHandler();
      TheClient theClient1 = new TheClient();
      theClient1.setClientAuthenticationHandler((ClientAuthenticationHandler) null);
      assertTrue(theClient1.getCommunicationLogging());
      assertFalse(theClient1.getTrusted());
  }
}
