/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 30 08:23:40 GMT 2020
 */

package org.firebirdsql.jdbc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.DataOutputStream;
import java.io.OutputStream;
import java.io.PipedOutputStream;
import java.util.LinkedList;
import java.util.List;
import java.util.concurrent.Callable;
import java.util.concurrent.ScheduledFuture;
import java.util.concurrent.ScheduledThreadPoolExecutor;
import java.util.concurrent.ThreadPoolExecutor;
import java.util.concurrent.TimeUnit;
import java.util.function.Predicate;
import java.util.function.UnaryOperator;
import javax.management.remote.JMXPrincipal;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.firebirdsql.gds.GDS;
import org.firebirdsql.gds.IscDbHandle;
import org.firebirdsql.gds.XSQLVAR;
import org.firebirdsql.gds.impl.GDSHelper;
import org.firebirdsql.gds.impl.GDSType;
import org.firebirdsql.gds.impl.jni.isc_blob_handle_impl;
import org.firebirdsql.gds.impl.wire.DatabaseParameterBufferImp;
import org.firebirdsql.gds.impl.wire.JavaGDSImpl;
import org.firebirdsql.gds.impl.wire.XdrOutputStream;
import org.firebirdsql.gds.impl.wire.isc_db_handle_impl;
import org.firebirdsql.gds.impl.wire.isc_stmt_handle_impl;
import org.firebirdsql.gds.impl.wire.isc_svc_handle_impl;
import org.firebirdsql.jca.FBManagedConnection;
import org.firebirdsql.jdbc.FBCachedFetcher;
import org.firebirdsql.jdbc.FBConnectionProperties;
import org.firebirdsql.jdbc.FBObjectListener;
import org.firebirdsql.jdbc.FBResultSet;
import org.firebirdsql.jdbc.FBSQLException;
import org.firebirdsql.jdbc.InternalTransactionCoordinator;
import org.firebirdsql.jdbc.field.FBBlobField;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FBCachedFetcher_ESTest extends FBCachedFetcher_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.8498981518685604
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-13);
      byteArray0[1] = (byte)11;
      byteArray0[2] = (byte) (-87);
      byteArray0[3] = (byte) (-13);
      byteArray0[4] = (byte) (-13);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      linkedList0.push((byte[][]) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      String string0 = "Jy j#B,iv{";
      // Undeclared exception!
      try { 
        fBCachedFetcher0.afterLast();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.2689129463881486
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener0 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      linkedList1.parallelStream();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.beforeFirst();
      UnaryOperator<byte[][]> unaryOperator0 = UnaryOperator.identity();
      fBCachedFetcher0.insertRow((byte[][]) null);
      linkedList0.replaceAll(unaryOperator0);
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.isEmpty();
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.isFirst();
      boolean boolean0 = fBCachedFetcher0.isFirst();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.089935099971897
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener0 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      linkedList2.parallelStream();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      UnaryOperator<byte[][]> unaryOperator0 = UnaryOperator.identity();
      fBCachedFetcher0.insertRow((byte[][]) null);
      linkedList0.replaceAll(unaryOperator0);
      fBCachedFetcher0.beforeFirst();
      // Undeclared exception!
      try { 
        fBCachedFetcher0.deleteRow();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.0141225292248675
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-20);
      byteArray0[1] = (byte) (-87);
      byteArray0[3] = (byte)84;
      byteArray0[4] = (byte)119;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte) (-96);
      byteArray0[7] = (byte)100;
      byteArray0[8] = (byte)97;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.setFetchSize((byte)84);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      fBCachedFetcher0.relative((byte)119);
      fBCachedFetcher0.getFetchSize();
      byte[][] byteArray1 = new byte[2][4];
      byteArray1[0] = byteArray0;
      byteArray1[1] = byteArray0;
      // Undeclared exception!
      try { 
        fBCachedFetcher0.insertRow(byteArray1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.2342678660790767
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-20);
      byteArray0[1] = (byte) (-87);
      byteArray0[2] = (byte) (-7);
      byteArray0[3] = (byte)84;
      byteArray0[4] = (byte)119;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte) (-96);
      byteArray0[7] = (byte)100;
      byteArray0[8] = (byte)97;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      fBCachedFetcher0.last();
      fBCachedFetcher0.relative(448);
      boolean boolean0 = fBCachedFetcher0.relative((byte)0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.0507057264557456
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener0 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      linkedList2.parallelStream();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      linkedList0.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      UnaryOperator<byte[][]> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator.identity();
      fBCachedFetcher0.insertRow((byte[][]) null);
      linkedList0.replaceAll(unaryOperator0);
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.next();
      fBCachedFetcher0.isEmpty();
      fBCachedFetcher0.isAfterLast();
      fBCachedFetcher0.absolute(3846);
      fBCachedFetcher0.next();
      fBCachedFetcher0.isEmpty();
      assertFalse(fBCachedFetcher0.isBeforeFirst());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.8438614379613667
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      linkedList2.parallelStream();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.absolute(1);
      fBCachedFetcher0.first();
      fBCachedFetcher0.first();
      boolean boolean0 = fBCachedFetcher0.first();
      assertTrue(fBCachedFetcher0.isFirst());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.711845135233912
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener0 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      linkedList2.parallelStream();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      LinkedList<byte[][]> linkedList3 = new LinkedList<byte[][]>();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList3);
      linkedList3.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      UnaryOperator<byte[][]> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator.identity();
      fBCachedFetcher0.insertRow((byte[][]) null);
      linkedList3.replaceAll(unaryOperator0);
      fBCachedFetcher0.deleteRow();
      LinkedList<byte[][]> linkedList4 = new LinkedList<byte[][]>();
      linkedList4.add((byte[][]) null);
      LinkedList<byte[][]> linkedList5 = new LinkedList<byte[][]>();
      FBResultSet fBResultSet1 = new FBResultSet(xSQLVARArray0, linkedList3);
      linkedList1.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList3, fBResultSet1);
      UnaryOperator<byte[][]> unaryOperator1 = UnaryOperator.identity();
      UnaryOperator.identity();
      fBCachedFetcher0.insertRow((byte[][]) null);
      linkedList2.replaceAll(unaryOperator1);
      // Undeclared exception!
      try { 
        fBCachedFetcher1.deleteRow();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.1085541816177145
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener0 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      linkedList2.parallelStream();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      linkedList0.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      UnaryOperator<byte[][]> unaryOperator0 = UnaryOperator.identity();
      fBCachedFetcher0.absolute(400);
      fBCachedFetcher0.insertRow((byte[][]) null);
      linkedList0.replaceAll(unaryOperator0);
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.next();
      fBCachedFetcher0.updateRow((byte[][]) null);
      assertEquals(2, fBCachedFetcher0.getRowNum());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.0140355237092673
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener0 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      linkedList2.parallelStream();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      linkedList0.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      UnaryOperator<byte[][]> unaryOperator0 = UnaryOperator.identity();
      fBCachedFetcher0.insertRow((byte[][]) null);
      linkedList0.replaceAll(unaryOperator0);
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.next();
      int int0 = fBCachedFetcher0.getRowNum();
      assertFalse(fBCachedFetcher0.isBeforeFirst());
      assertEquals(2, int0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.0507057264557456
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener0 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      linkedList2.parallelStream();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      linkedList0.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      UnaryOperator<byte[][]> unaryOperator0 = UnaryOperator.identity();
      fBCachedFetcher0.insertRow((byte[][]) null);
      linkedList0.replaceAll(unaryOperator0);
      fBCachedFetcher0.next();
      fBCachedFetcher0.absolute(48);
      boolean boolean0 = fBCachedFetcher0.previous();
      assertEquals(2, fBCachedFetcher0.getRowNum());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.4878167164014493
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener0 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      linkedList2.parallelStream();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      linkedList0.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      UnaryOperator.identity();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      LinkedList<byte[][]> linkedList3 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList3, fBResultSet0);
      fBCachedFetcher1.absolute(1083);
      boolean boolean0 = fBCachedFetcher0.absolute(114);
      assertFalse(fBCachedFetcher0.isBeforeFirst());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.1715460305537655
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener0 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      linkedList2.parallelStream();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      linkedList0.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.next();
      fBCachedFetcher0.absolute(48);
      boolean boolean0 = fBCachedFetcher0.previous();
      assertTrue(fBCachedFetcher0.isLast());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.923065784324152
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.pollLast();
      linkedList0.parallelStream();
      linkedList0.add((byte[][]) null);
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp0.deepCopy();
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener0 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-103);
      byteArray0[1] = (byte) (-69);
      byteArray0[2] = (byte) (-101);
      byteArray0[3] = (byte)18;
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.isLast();
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher1.updateRow((byte[][]) null);
      databaseParameterBufferImp1.addArgument((-1), byteArray0);
      databaseParameterBufferImp0.addArgument((-4116), " is not supported.");
      databaseParameterBufferImp1.deepCopy();
      FBCachedFetcher fBCachedFetcher2 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher2.absolute((-4116));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.9085352816435597
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener0 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList2);
      linkedList2.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      UnaryOperator<byte[][]> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator.identity();
      fBCachedFetcher0.insertRow((byte[][]) null);
      linkedList2.replaceAll(unaryOperator0);
      InternalTransactionCoordinator internalTransactionCoordinator0 = new InternalTransactionCoordinator();
      GDSType.getType("uQ]@|)i4tw/F");
      FBConnectionProperties fBConnectionProperties0 = new FBConnectionProperties();
      fBCachedFetcher0.deleteRow();
      boolean boolean0 = fBCachedFetcher0.isLast();
      assertTrue(fBCachedFetcher0.isAfterLast());
      assertTrue(fBCachedFetcher0.isEmpty());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.8734517375545654
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener0 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      linkedList2.parallelStream();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      linkedList0.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      UnaryOperator<byte[][]> unaryOperator0 = UnaryOperator.identity();
      fBCachedFetcher0.insertRow((byte[][]) null);
      linkedList0.replaceAll(unaryOperator0);
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.next();
      byte[][] byteArray0 = new byte[4][3];
      byte[] byteArray1 = new byte[5];
      byteArray1[0] = (byte)27;
      byteArray1[1] = (byte) (-70);
      byteArray1[2] = (byte) (-2);
      byteArray1[3] = (byte)73;
      byteArray1[4] = (byte) (-110);
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[9];
      byteArray2[0] = (byte) (-2);
      byteArray2[1] = (byte)27;
      byteArray2[2] = (byte) (-22);
      byteArray2[3] = (byte) (-110);
      byteArray2[4] = (byte) (-2);
      byteArray2[5] = (byte)27;
      byteArray2[6] = (byte)27;
      byteArray2[7] = (byte)73;
      byteArray2[8] = (byte) (-70);
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[7];
      byteArray3[0] = (byte)57;
      byteArray3[1] = (byte) (-22);
      byteArray3[2] = (byte) (-22);
      byteArray3[3] = (byte) (-70);
      byteArray3[4] = (byte) (-110);
      byteArray3[5] = (byte) (-70);
      byteArray3[6] = (byte) (-2);
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[1];
      byteArray4[0] = (byte) (-70);
      byteArray0[3] = byteArray4;
      fBCachedFetcher0.insertRow(byteArray0);
      assertEquals(2, fBCachedFetcher0.getRowNum());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.5247073930301436
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-20);
      byteArray0[1] = (byte) (-87);
      byteArray0[2] = (byte) (-13);
      byteArray0[3] = (byte)84;
      byteArray0[4] = (byte)119;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte) (-96);
      byteArray0[7] = (byte)100;
      byteArray0[8] = (byte)97;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      linkedList0.add((byte[][]) null);
      EvoSuiteFile evoSuiteFile0 = null;
      String string0 = null;
      linkedList0.add((byte[][]) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.last();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.7060571156426698
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener0 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      linkedList2.parallelStream();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      linkedList0.add((byte[][]) null);
      linkedList1.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList1, fBResultSet0);
      fBCachedFetcher0.last();
      fBCachedFetcher0.absolute((-1537));
      boolean boolean0 = fBCachedFetcher0.first();
      assertFalse(fBCachedFetcher0.isBeforeFirst());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.5247073930301436
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) linkedList0);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate1.or(predicate0);
      Predicate<Object> predicate3 = predicate1.and(predicate2);
      predicate2.negate();
      predicate2.negate();
      predicate2.or(predicate3);
      Object object0 = new Object();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Object object1 = new Object();
      predicate2.test(object1);
      predicate1.test(object0);
      predicate2.and(predicate1);
      linkedList0.removeIf(predicate2);
      FileSystemHandling.shouldAllThrowIOExceptions();
      linkedList0.parallelStream();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[][] byteArray0 = new byte[3][6];
      byte[] byteArray1 = new byte[0];
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[6];
      byteArray2[0] = (byte) (-34);
      byteArray2[1] = (byte)114;
      byteArray2[2] = (byte)114;
      byteArray2[3] = (byte)114;
      byteArray2[4] = (byte)114;
      byteArray2[5] = (byte)36;
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[2];
      byteArray2[3] = (byte) (-34);
      byteArray3[1] = (byte) (-34);
      byteArray0[2] = byteArray3;
      linkedList0.add(byteArray0);
      byte[] byteArray4 = new byte[7];
      byteArray4[0] = (byte) (-118);
      byteArray4[1] = (byte) (-118);
      byteArray4[5] = (byte) (-118);
      byteArray4[3] = (byte)10;
      byteArray4[1] = (byte) (-118);
      byteArray4[5] = (byte)114;
      byteArray4[6] = (byte) (-118);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        fBCachedFetcher0.last();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.pollLast();
      linkedList0.parallelStream();
      linkedList0.add((byte[][]) null);
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      byte[][] byteArray0 = new byte[5][3];
      byte[] byteArray1 = new byte[1];
      byteArray1[0] = (byte) (-30);
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[7];
      byteArray2[0] = (byte) (-30);
      byteArray2[1] = (byte) (-30);
      byteArray2[2] = (byte) (-113);
      byteArray2[3] = (byte) (-30);
      byteArray2[4] = (byte) (-30);
      byteArray2[5] = (byte) (-30);
      byteArray2[6] = (byte) (-30);
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[7];
      byteArray3[0] = (byte) (-113);
      byteArray3[1] = (byte) (-30);
      byteArray3[2] = (byte) (-46);
      byteArray3[3] = (byte)1;
      byteArray3[4] = (byte) (-113);
      byteArray3[5] = (byte) (-113);
      byteArray3[6] = (byte) (-113);
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[6];
      byteArray4[0] = (byte) (-113);
      byteArray4[1] = (byte) (-113);
      byteArray4[2] = (byte) (-113);
      byteArray4[3] = (byte) (-30);
      byteArray4[4] = (byte) (-113);
      byteArray4[5] = (byte)1;
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[1];
      byteArray5[0] = (byte)1;
      byteArray0[4] = byteArray5;
      linkedList0.add(byteArray0);
      databaseParameterBufferImp0.deepCopy();
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener0 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp1.deepCopy();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      int int0 = fBCachedFetcher0.getFetchSize();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.6792043316027068
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBManagedConnection fBManagedConnection0 = mock(FBManagedConnection.class, new ViolatedAssumptionAnswer());
      linkedList0.pollLast();
      byte[][] byteArray0 = new byte[6][1];
      linkedList0.add(byteArray0);
      isc_stmt_handle_impl.printRow(byteArray0);
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.isBeforeFirst();
      // Undeclared exception!
      try { 
        fBCachedFetcher0.beforeFirst();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.1285490048751514
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.isBeforeFirst();
      fBCachedFetcher0.last();
      fBCachedFetcher0.previous();
      fBCachedFetcher0.isAfterLast();
      fBCachedFetcher0.isLast();
      byte[][] byteArray0 = new byte[1][1];
      byte[] byteArray1 = new byte[4];
      byteArray1[0] = (byte)74;
      byteArray1[1] = (byte) (-5);
      byteArray1[2] = (byte)99;
      fBCachedFetcher0.close();
      byteArray1[3] = (byte)30;
      byteArray0[0] = byteArray1;
      // Undeclared exception!
      try { 
        fBCachedFetcher0.updateRow(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      fBCachedFetcher0.isLast();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "org.firebirdsql.jdbc.DummyCallableStatementMetaData");
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      // Undeclared exception!
      try { 
        fBCachedFetcher0.deleteRow();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.4254797046832537
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.parallelStream();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.next();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      fBCachedFetcher0.isAfterLast();
      fBCachedFetcher0.isLast();
      byte[][] byteArray0 = new byte[2][2];
      byte[] byteArray1 = new byte[7];
      byteArray1[0] = (byte)30;
      byteArray1[1] = (byte)30;
      byteArray1[2] = (byte)16;
      byteArray1[3] = (byte)30;
      byteArray1[4] = (byte)74;
      byteArray1[5] = (byte)0;
      byteArray1[6] = (byte)30;
      byteArray0[0] = byteArray1;
      FileSystemHandling.shouldAllThrowIOExceptions();
      fBCachedFetcher0.beforeFirst();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher1.previous();
      fBCachedFetcher0.isFirst();
      fBCachedFetcher0.relative((byte)30);
      // Undeclared exception!
      try { 
        fBCachedFetcher1.updateRow(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      XdrOutputStream xdrOutputStream0 = new XdrOutputStream((OutputStream) null);
      xdrOutputStream0.write((-859));
      byte[] byteArray0 = new byte[8];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      linkedList0.add((byte[][]) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      String string0 = null;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FBCachedFetcher fBCachedFetcher0 = null;
      try {
        fBCachedFetcher0 = new FBCachedFetcher((List<byte[][]>) null, (FBObjectListener.FetcherListener) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      isc_stmt_handle_impl0.setInsertCount(62);
      isc_svc_handle_impl isc_svc_handle_impl0 = new isc_svc_handle_impl();
      XdrOutputStream xdrOutputStream0 = isc_svc_handle_impl0.out;
      isc_db_handle_impl0.out = null;
      DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) null);
      XdrOutputStream xdrOutputStream1 = new XdrOutputStream((OutputStream) null);
      xdrOutputStream1.write((-859));
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      xdrOutputStream1.write((-859));
      isc_stmt_handle_impl isc_stmt_handle_impl1 = new isc_stmt_handle_impl();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      boolean boolean1 = fBCachedFetcher0.isEmpty();
      assertFalse(boolean1 == boolean0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.4142790651247086
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) linkedList0);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate1.or(predicate0);
      Predicate<Object> predicate3 = predicate1.and(predicate2);
      predicate2.negate();
      Predicate<Object> predicate4 = predicate2.negate();
      Predicate<Object> predicate5 = predicate1.and(predicate4);
      Predicate<Object> predicate6 = predicate5.or(predicate1);
      predicate0.and(predicate6);
      Predicate<Object> predicate7 = predicate2.or(predicate3);
      Object object0 = new Object();
      predicate7.negate();
      JMXPrincipal jMXPrincipal0 = new JMXPrincipal("XD");
      predicate3.test(jMXPrincipal0);
      predicate0.and(predicate7);
      Object object1 = new Object();
      linkedList0.add((byte[][]) null);
      predicate2.test(object1);
      predicate2.and(predicate1);
      linkedList0.parallelStream();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-118);
      byteArray0[5] = (byte) (-118);
      byteArray0[3] = (byte)10;
      byteArray0[3] = (byte) (-118);
      byteArray0[5] = (byte)114;
      byteArray0[6] = (byte) (-118);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.absolute((-1068));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.5247073930301436
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-20);
      byteArray0[1] = (byte) (-87);
      byteArray0[2] = (byte) (-13);
      byteArray0[3] = (byte)84;
      byteArray0[4] = (byte)119;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte) (-96);
      byteArray0[7] = (byte)100;
      byteArray0[8] = (byte)97;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      linkedList0.add((byte[][]) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.relative(448);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.2130075659799042
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-20);
      MockFile mockFile0 = new MockFile("TABLE_NAME");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      MockPrintStream mockPrintStream1 = new MockPrintStream(mockPrintStream0);
      MockPrintStream mockPrintStream2 = new MockPrintStream(mockPrintStream1, false);
      mockPrintStream2.println();
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream2);
      XdrOutputStream xdrOutputStream0 = new XdrOutputStream(mockPrintStream1);
      char[] charArray0 = new char[8];
      charArray0[0] = '>';
      charArray0[1] = '/';
      charArray0[2] = 'U';
      charArray0[3] = 'U';
      charArray0[4] = 'o';
      charArray0[5] = 'U';
      charArray0[6] = 'g';
      charArray0[7] = 'E';
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      mockPrintStream1.print(charArray0);
      xdrOutputStream0.writeBlobBuffer(byteArray0);
      xdrOutputStream0.write((int) (byte) (-20));
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      boolean boolean0 = fBCachedFetcher0.relative((byte) (-20));
      assertFalse(boolean0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.3296613488547582
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-20);
      byteArray0[1] = (byte) (-87);
      byteArray0[2] = (byte) (-13);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[][] byteArray1 = new byte[3][1];
      byte[] byteArray2 = new byte[8];
      byteArray2[0] = (byte) (-13);
      byteArray2[1] = (byte) (-13);
      byteArray2[2] = (byte) (-20);
      byteArray2[3] = (byte)0;
      byteArray2[4] = (byte) (-13);
      byteArray2[5] = (byte) (-13);
      byteArray2[6] = (byte) (-20);
      byteArray2[7] = (byte) (-13);
      byteArray1[0] = byteArray2;
      byteArray1[2] = byteArray0;
      linkedList0.push(byteArray1);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "4~w$:3j5k");
      // Undeclared exception!
      try { 
        fBCachedFetcher0.next();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.559581156259877
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      byte[][] byteArray0 = new byte[0][1];
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.offer(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      assertTrue(fBCachedFetcher0.isBeforeFirst());
      
      fBCachedFetcher0.updateRow(byteArray0);
      assertFalse(fBCachedFetcher0.isAfterLast());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      IscDbHandle iscDbHandle0 = javaGDSImpl0.createIscDbHandle();
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener0 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      GDSHelper gDSHelper0 = new GDSHelper((GDS) null, databaseParameterBufferImp0, iscDbHandle0, gDSHelper_GDSHelperErrorListener0);
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener1 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      GDSHelper gDSHelper1 = new GDSHelper((GDS) null, databaseParameterBufferImp0, iscDbHandle0, gDSHelper_GDSHelperErrorListener1);
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      FBCachedFetcher fBCachedFetcher0 = null;
      try {
        fBCachedFetcher0 = new FBCachedFetcher(gDSHelper0, (-1396), (-1396), isc_stmt_handle_impl0, (FBObjectListener.FetcherListener) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.8065071652616693
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      int int0 = 0;
      fBCachedFetcher0.first();
      fBCachedFetcher0.setFetchSize(0);
      fBCachedFetcher0.previous();
      fBCachedFetcher0.next();
      try { 
        fBCachedFetcher0.absolute(0);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // You cannot position to the row 0 with absolute() method.
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.2130075659799042
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) linkedList0);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate1.or(predicate0);
      Predicate<Object> predicate3 = predicate1.and(predicate2);
      predicate2.negate();
      Predicate<Object> predicate4 = predicate2.negate();
      Predicate<Object> predicate5 = predicate1.and(predicate4);
      Predicate<Object> predicate6 = predicate5.or(predicate1);
      predicate0.and(predicate6);
      Predicate<Object> predicate7 = predicate2.or(predicate3);
      Object object0 = new Object();
      predicate7.negate();
      JMXPrincipal jMXPrincipal0 = new JMXPrincipal("XD");
      predicate3.test(jMXPrincipal0);
      predicate0.and(predicate7);
      Object object1 = new Object();
      linkedList0.add((byte[][]) null);
      predicate2.test(object1);
      predicate2.and(predicate1);
      linkedList0.removeIf(predicate2);
      linkedList0.parallelStream();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-118);
      byteArray0[5] = (byte) (-118);
      byteArray0[3] = (byte)10;
      byteArray0[3] = (byte) (-118);
      byteArray0[5] = (byte)114;
      byteArray0[6] = (byte) (-118);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      assertTrue(fBCachedFetcher0.isEmpty());
      
      boolean boolean0 = fBCachedFetcher0.absolute((-1068));
      assertFalse(boolean0);
      assertFalse(fBCachedFetcher0.isAfterLast());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.3208883431493221
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-20);
      byteArray0[1] = (byte) (-87);
      byteArray0[2] = (byte) (-13);
      byteArray0[3] = (byte)84;
      byteArray0[4] = (byte)119;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte) (-96);
      byteArray0[7] = (byte)100;
      byteArray0[8] = (byte)97;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      linkedList0.add((byte[][]) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.previous();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.6417347121875212
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.setFetchSize(1381);
      byte[][] byteArray0 = new byte[0][1];
      // Undeclared exception!
      try { 
        fBCachedFetcher0.insertRow(byteArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.add((byte[][]) null);
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener0 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.setFetchSize((-1236));
      assertEquals((-1236), fBCachedFetcher0.getFetchSize());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.8407487285692812
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      fBCachedFetcher0.isAfterLast();
      fBCachedFetcher0.isLast();
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      isc_blob_handle_impl isc_blob_handle_impl0 = new isc_blob_handle_impl();
      isc_blob_handle_impl0.getTr();
      byte[][] byteArray0 = new byte[1][3];
      linkedList0.add(byteArray0);
      fBCachedFetcher0.previous();
      fBCachedFetcher0.isBeforeFirst();
      byte[][] byteArray1 = new byte[0][6];
      // Undeclared exception!
      try { 
        fBCachedFetcher0.insertRow(byteArray1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.4941751382893083
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-20);
      MockFile mockFile0 = new MockFile("TABLE_NAME");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      MockPrintStream mockPrintStream1 = new MockPrintStream(mockPrintStream0);
      MockFile mockFile1 = new MockFile("TABLE_NAME", "TABLE_NAME");
      MockPrintStream mockPrintStream2 = new MockPrintStream(mockFile0);
      MockPrintStream mockPrintStream3 = new MockPrintStream(mockPrintStream0);
      mockPrintStream3.println();
      MockPrintStream mockPrintStream4 = new MockPrintStream(mockPrintStream3, true);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream3);
      XdrOutputStream xdrOutputStream0 = new XdrOutputStream(dataOutputStream0);
      xdrOutputStream0.write(16384);
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.updateRow((byte[][]) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.5247073930301436
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) linkedList0);
      Predicate<Object> predicate1 = predicate0.or(predicate0);
      Predicate<Object> predicate2 = predicate0.and(predicate1);
      predicate1.negate();
      Predicate<Object> predicate3 = predicate1.negate();
      ThreadPoolExecutor.DiscardPolicy threadPoolExecutor_DiscardPolicy0 = new ThreadPoolExecutor.DiscardPolicy();
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(400, threadPoolExecutor_DiscardPolicy0);
      Callable<FBBlobField> callable0 = (Callable<FBBlobField>) mock(Callable.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(callable0).call();
      TimeUnit timeUnit0 = TimeUnit.MILLISECONDS;
      ScheduledFuture<FBBlobField> scheduledFuture0 = scheduledThreadPoolExecutor0.schedule(callable0, (long) 400, timeUnit0);
      predicate3.test(scheduledFuture0);
      Predicate<Object> predicate4 = predicate0.and(predicate3);
      Predicate<Object> predicate5 = predicate4.or(predicate0);
      predicate0.and(predicate5);
      Predicate<Object> predicate6 = predicate1.or(predicate2);
      Object object0 = new Object();
      predicate6.negate();
      JMXPrincipal jMXPrincipal0 = new JMXPrincipal("XD");
      predicate2.test(jMXPrincipal0);
      predicate0.and(predicate6);
      Object object1 = new Object();
      linkedList0.add((byte[][]) null);
      predicate1.test(object1);
      predicate1.and(predicate0);
      linkedList0.removeIf(predicate1);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-118);
      byteArray0[5] = (byte) (-118);
      byteArray0[3] = (byte)10;
      byteArray0[3] = (byte) (-118);
      byteArray0[5] = (byte)114;
      byteArray0[6] = (byte) (-118);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        fBCachedFetcher0.first();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }
}
