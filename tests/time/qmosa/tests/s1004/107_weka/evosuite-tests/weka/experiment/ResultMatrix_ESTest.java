/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 17:16:50 GMT 2019
 */

package weka.experiment;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import weka.experiment.ResultMatrix;
import weka.experiment.ResultMatrixCSV;
import weka.experiment.ResultMatrixGnuPlot;
import weka.experiment.ResultMatrixHTML;
import weka.experiment.ResultMatrixLatex;
import weka.experiment.ResultMatrixPlainText;
import weka.experiment.ResultMatrixSignificance;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ResultMatrix_ESTest extends ResultMatrix_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.0917558629288133
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(1, 1);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      int[] intArray0 = new int[6];
      int int0 = 26;
      intArray0[1] = 26;
      int int1 = (-2376);
      resultMatrixCSV0.setStdDev(17, 2, 17);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = null;
      try {
        resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2, (-1027));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.6800995567490262
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixPlainText0);
      resultMatrixPlainText0.assign(resultMatrixHTML0);
      resultMatrixPlainText0.rowNameWidthTipText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(97, 0);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixCSV0);
      int[] intArray0 = new int[3];
      resultMatrixHTML0.setStdDevPrec(1);
      intArray0[0] = 0;
      intArray0[1] = 26;
      intArray0[2] = 0;
      resultMatrixCSV0.setColOrder(intArray0);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixHTML1);
      ResultMatrixPlainText resultMatrixPlainText2 = new ResultMatrixPlainText(resultMatrixPlainText1);
      resultMatrixPlainText2.getRowName(288);
      resultMatrixPlainText2.getRevision();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText1);
      // Undeclared exception!
      try { 
        resultMatrixLatex0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.694631585231311
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.listOptions();
      resultMatrixHTML0.m_PrintRowNames = false;
      resultMatrixHTML0.toArray();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setStdDevWidth((-4368));
      resultMatrixPlainText0.isMean((-4107));
      int[] intArray0 = new int[3];
      intArray0[0] = 1;
      intArray0[1] = 1;
      intArray0[2] = 0;
      resultMatrixPlainText0.m_RankingWins = intArray0;
      resultMatrixPlainText0.getDisplayName();
      ResultMatrixSignificance resultMatrixSignificance0 = null;
      try {
        resultMatrixSignificance0 = new ResultMatrixSignificance(2, (-4368));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.4123950986743283
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setCountWidth(1);
      resultMatrixLatex0.listOptions();
      resultMatrixLatex0.setSize(0, 0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixLatex0);
      resultMatrixGnuPlot0.m_ColNameWidth = 3953;
      Vector<Integer> vector0 = new Vector<Integer>();
      resultMatrixGnuPlot0.addHeader(" ", "$circ$");
      resultMatrixGnuPlot0.listOptions();
      assertEquals(1, resultMatrixLatex0.getCountWidth());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.354459991834733
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(1, 1);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      int[] intArray0 = new int[6];
      intArray0[1] = 26;
      intArray0[2] = 0;
      intArray0[3] = 0;
      intArray0[4] = 2;
      intArray0[5] = 1;
      resultMatrixCSV0.setColOrder(intArray0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixCSV0);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixPlainText0);
      resultMatrixPlainText0.getRowName(0);
      resultMatrixPlainText0.getRevision();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      // Undeclared exception!
      try { 
        resultMatrixLatex0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.4418104767293602
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 0);
      String[] stringArray0 = new String[6];
      stringArray0[0] = " ";
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setCountWidth((-403));
      resultMatrixLatex0.listOptions();
      resultMatrixLatex0.getRevision();
      // Undeclared exception!
      try { 
        resultMatrixLatex0.setSize((-4724), 0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.931978976459278
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 0);
      String[] stringArray0 = new String[6];
      stringArray0[0] = " ";
      stringArray0[1] = "\tThe width of the counts (0 = optimal).\n\t(default: ";
      stringArray0[2] = " ";
      stringArray0[3] = ")";
      stringArray0[4] = ")";
      stringArray0[5] = "v";
      resultMatrixPlainText0.setOptions(stringArray0);
      resultMatrixPlainText0.RIGHT_PARENTHESES = resultMatrixPlainText0.RIGHT_PARENTHESES;
      resultMatrixPlainText0.getDefaultMeanWidth();
      assertEquals(5, resultMatrixPlainText0.getStdDevPrec());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.m_RemoveFilterName = false;
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixGnuPlot0);
      resultMatrixLatex0.doubleToString(269.4753082000807, 218);
      resultMatrixLatex0.getDefaultRemoveFilterName();
      resultMatrixLatex0.getEnumerateRowNames();
      resultMatrixLatex0.setShowAverage(false);
      resultMatrixLatex0.setStdDevPrec(0);
      resultMatrixLatex0.getSummaryTitle(0);
      resultMatrixLatex0.getStdDevPrec();
      resultMatrixLatex0.showStdDevTipText();
      resultMatrixLatex0.colNameWidthTipText();
      resultMatrixLatex0.getColName(0);
      resultMatrixLatex0.setSize(1480, 2);
      assertEquals(50, resultMatrixLatex0.getRowNameWidth());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.224703836330589
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setColNameWidth((-1813));
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      int[] intArray0 = new int[6];
      intArray0[0] = 1;
      intArray0[1] = 0;
      intArray0[2] = 1;
      intArray0[3] = 0;
      intArray0[4] = 1;
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(1, 0);
      boolean boolean0 = true;
      resultMatrixSignificance0.setPrintColNames(true);
      resultMatrixSignificance1.toStringSummary();
      ResultMatrixLatex resultMatrixLatex0 = null;
      try {
        resultMatrixLatex0 = new ResultMatrixLatex(2110, (-887));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.5415142912768593
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.toStringKey();
      resultMatrixLatex0.clearHeader();
      resultMatrixLatex0.getDisplayCol(1194);
      ResultMatrixSignificance resultMatrixSignificance0 = null;
      try {
        resultMatrixSignificance0 = new ResultMatrixSignificance(2, (-1182));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.5811311459009483
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.clearHeader();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setRemoveFilterName(true);
      resultMatrixSignificance0.getDisplayName();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "(";
      stringArray0[1] = "*";
      resultMatrixCSV0.doubleToString((-305.76855837249), 0);
      stringArray0[2] = "Significance only";
      resultMatrixSignificance0.m_ColNames = stringArray0;
      resultMatrixCSV0.getStdDev(0, (-273));
      resultMatrixSignificance0.setRemoveFilterName(true);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.doubleToString(2, 1441);
      resultMatrixLatex0.getDefaultEnumerateColNames();
      resultMatrixLatex0.getEnumerateRowNames();
      resultMatrixLatex0.setShowAverage(false);
      resultMatrixLatex0.setStdDevPrec((-273));
      resultMatrixLatex0.getSummaryTitle(2);
      int int0 = ResultMatrix.SIGNIFICANCE_WIN;
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      ResultMatrixLatex resultMatrixLatex2 = new ResultMatrixLatex(resultMatrixLatex1);
      resultMatrixLatex0.showStdDevTipText();
      resultMatrixLatex1.colNameWidthTipText();
      resultMatrixLatex2.getColName(2);
      // Undeclared exception!
      try { 
        resultMatrixLatex2.setSize(0, (-1967));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.124569933074272
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixLatex0);
      int int0 = (-225);
      resultMatrixLatex0.setShowStdDev(true);
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.setSize((-225), (-225));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.3439473967770397
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getDisplayName();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getRevision();
      resultMatrixSignificance0.getDefaultEnumerateColNames();
      assertFalse(resultMatrixSignificance0.getDefaultEnumerateRowNames());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.clear();
      assertEquals(0, resultMatrixGnuPlot0.getDefaultMeanWidth());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultStdDevPrec());
      assertFalse(resultMatrixGnuPlot0.getShowAverage());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.021495054456028
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixPlainText0);
      int int0 = resultMatrixSignificance1.getDefaultColNameWidth();
      assertEquals(0, int0);
      assertEquals(0, resultMatrixSignificance1.getMeanWidth());
      assertEquals(0, resultMatrixSignificance1.getStdDevWidth());
      assertEquals(2, resultMatrixSignificance1.getStdDevPrec());
      assertEquals(0, resultMatrixSignificance1.getSignificanceWidth());
      assertEquals(2, resultMatrixSignificance1.getMeanPrec());
      assertEquals(1, resultMatrixSignificance1.getRowCount());
      assertEquals(40, resultMatrixSignificance1.getRowNameWidth());
      assertEquals(0, resultMatrixSignificance1.getCountWidth());
      assertEquals(1, resultMatrixSignificance1.getColCount());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.61500743649705
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 0);
      boolean[] booleanArray0 = new boolean[5];
      booleanArray0[0] = true;
      booleanArray0[1] = false;
      int[] intArray0 = new int[9];
      intArray0[0] = 2;
      intArray0[1] = 0;
      intArray0[2] = 0;
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      resultMatrixCSV0.setColOrder(intArray0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixCSV0);
      resultMatrixPlainText0.getRowName(0);
      resultMatrixPlainText0.getRevision();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      // Undeclared exception!
      try { 
        resultMatrixLatex0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.3306556504471754
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(1, 1);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      resultMatrixCSV0.assign(resultMatrixHTML0);
      resultMatrixHTML0.getColName(2);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixLatex0.doubleToString(2, 2);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      resultMatrixPlainText0.getRowName(50);
      resultMatrixPlainText0.getRevision();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      // Undeclared exception!
      try { 
        resultMatrixLatex0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.9038600563502834
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 0);
      String[] stringArray0 = new String[6];
      stringArray0[0] = " ";
      stringArray0[1] = "\tThe width of the counts (0 = optimal).\n\t(default: ";
      stringArray0[2] = " ";
      stringArray0[3] = "rE9)cK:3'$s|?N3$J";
      stringArray0[4] = ")";
      stringArray0[5] = "v";
      resultMatrixPlainText0.setOptions(stringArray0);
      resultMatrixPlainText0.RIGHT_PARENTHESES = "rE9)cK:3'$s|?N3$J";
      resultMatrixPlainText0.getDefaultMeanWidth();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 893);
      int[] intArray0 = new int[2];
      intArray0[0] = 1;
      resultMatrixCSV0.doubleToString(Double.NaN, 0);
      intArray0[1] = 1;
      resultMatrixCSV0.setColOrder(intArray0);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixPlainText0);
      resultMatrixPlainText1.getRowName(2);
      ResultMatrixPlainText resultMatrixPlainText2 = new ResultMatrixPlainText(2057, 97);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.7929227449247334
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[][] intArrayArray0 = null;
      resultMatrixSignificance0.m_RemoveFilterName = true;
      resultMatrixSignificance0.setEnumerateRowNames(true);
      resultMatrixSignificance0.m_NonSigWins = null;
      resultMatrixSignificance0.getDefaultRowNameWidth();
      resultMatrixSignificance0.m_Significance = null;
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.m_PrintColNames = true;
      resultMatrixLatex0.toString();
      // Undeclared exception!
      try { 
        resultMatrixLatex0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.534168187209417
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setRowNameWidth(0);
      resultMatrixPlainText0.listOptions();
      resultMatrixPlainText0.setStdDevWidth(0);
      resultMatrixPlainText0.isMean(335);
      assertEquals(0, resultMatrixPlainText0.getRowNameWidth());
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(1, 335);
      String string0 = resultMatrixSignificance0.toStringKey();
      assertEquals("Key:\n(1) col0\n", string0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.534168187209417
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setRowNameWidth(0);
      resultMatrixPlainText0.listOptions();
      resultMatrixPlainText0.setStdDevWidth(0);
      resultMatrixPlainText0.isMean(354);
      assertEquals(0, resultMatrixPlainText0.getRowNameWidth());
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(1, 354);
      String string0 = resultMatrixSignificance0.toStringKey();
      assertEquals("Key:\n(1) col0\n", string0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.208676515886898
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[][] intArray0 = new int[9][9];
      int[] intArray1 = new int[7];
      intArray1[0] = 0;
      intArray1[1] = 1;
      intArray1[2] = 1;
      intArray1[3] = 0;
      intArray1[4] = 0;
      intArray1[5] = 1612;
      intArray1[6] = 1;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[8];
      intArray2[0] = (-315);
      intArray2[1] = 0;
      intArray2[2] = 0;
      intArray2[3] = 0;
      intArray2[4] = (-1);
      intArray2[5] = 2;
      intArray2[6] = 1;
      intArray2[7] = 1410;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[9];
      intArray3[0] = 0;
      intArray3[1] = 1612;
      intArray3[2] = 0;
      intArray3[3] = 0;
      intArray3[4] = (-315);
      intArray3[5] = (-315);
      intArray3[6] = (-315);
      intArray3[7] = 0;
      intArray3[8] = 0;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[8];
      intArray4[0] = 1410;
      intArray4[1] = (-1);
      intArray4[2] = 2;
      intArray4[3] = (-4743);
      intArray4[4] = (-1);
      intArray4[5] = 40;
      intArray4[6] = 0;
      intArray4[7] = 2;
      intArray0[3] = intArray4;
      int[] intArray5 = new int[4];
      intArray5[0] = 0;
      intArray5[1] = 0;
      intArray5[2] = 0;
      intArray5[3] = 2;
      intArray0[4] = intArray5;
      int[] intArray6 = new int[8];
      intArray6[0] = (-1045);
      intArray6[1] = 1141;
      intArray6[2] = (-1);
      intArray6[3] = 2;
      intArray6[4] = 0;
      intArray6[5] = 0;
      intArray6[6] = 1410;
      intArray6[7] = 0;
      intArray0[5] = intArray6;
      int[] intArray7 = new int[5];
      intArray7[0] = 0;
      intArray7[1] = 2;
      intArray7[2] = (-1);
      intArray7[3] = (-1);
      intArray7[4] = (-1);
      intArray0[6] = intArray7;
      int[] intArray8 = new int[2];
      intArray8[0] = (-1625);
      intArray8[1] = 0;
      intArray0[7] = intArray8;
      int[] intArray9 = new int[9];
      intArray9[0] = 0;
      intArray9[1] = 1;
      intArray9[2] = 0;
      intArray9[3] = 0;
      intArray9[4] = 0;
      intArray9[5] = 97;
      intArray9[6] = 1;
      intArray9[7] = 40;
      intArray9[8] = 0;
      intArray0[8] = intArray9;
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.setSummary(intArray0, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.9234438465715704
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      resultMatrixGnuPlot0.getDefaultRowNameWidth();
      boolean[] booleanArray0 = new boolean[4];
      booleanArray0[0] = false;
      booleanArray0[1] = false;
      booleanArray0[2] = false;
      booleanArray0[3] = false;
      resultMatrixGnuPlot0.m_RowHidden = booleanArray0;
      resultMatrixCSV0.m_ShowStdDev = false;
      resultMatrixGnuPlot0.setStdDevPrec(2);
      resultMatrixCSV0.isMean(2);
      resultMatrixCSV0.addHeader((String) null, ")");
      resultMatrixGnuPlot0.getOptions();
      resultMatrixCSV0.setStdDev((-2376), 0, 2);
      resultMatrixGnuPlot0.getDefaultStdDevWidth();
      resultMatrixGnuPlot0.isAverage(191);
      resultMatrixGnuPlot0.toStringKey();
      int[][] intArray0 = new int[5][3];
      int[] intArray1 = new int[4];
      intArray1[0] = 2;
      intArray1[1] = 1;
      intArray1[2] = 1;
      intArray1[3] = 0;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[1];
      intArray2[0] = 50;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[8];
      intArray3[0] = 0;
      intArray3[1] = 1;
      intArray3[2] = 40;
      intArray3[3] = 0;
      intArray3[4] = 50;
      intArray3[5] = 1;
      intArray3[6] = (-2376);
      intArray3[7] = 0;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[1];
      intArray4[0] = (-1069);
      intArray0[3] = intArray4;
      int[] intArray5 = new int[6];
      intArray5[0] = 0;
      intArray5[1] = 1;
      intArray5[2] = 1;
      intArray5[3] = 191;
      intArray5[4] = 2;
      intArray5[5] = 1199;
      intArray0[4] = intArray5;
      int[][] intArray6 = new int[7][2];
      intArray6[0] = intArray5;
      intArray6[2] = intArray2;
      intArray6[3] = intArray2;
      int[] intArray7 = new int[9];
      intArray7[0] = (-2376);
      intArray7[1] = 2;
      intArray7[2] = 2;
      intArray7[3] = 2;
      intArray7[4] = 2;
      intArray7[5] = 1;
      intArray7[6] = 1;
      intArray7[7] = 0;
      intArray7[8] = 2;
      intArray6[4] = intArray7;
      intArray6[5] = intArray3;
      int[] intArray8 = new int[3];
      intArray8[0] = 0;
      intArray8[1] = (-2376);
      intArray8[2] = 0;
      intArray6[6] = intArray8;
      // Undeclared exception!
      try { 
        resultMatrixCSV0.setSummary(intArray0, intArray6);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.9550970655275153
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      String[] stringArray0 = new String[0];
      ResultMatrixLatex.main(stringArray0);
      resultMatrixLatex0.getDefaultShowAverage();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(2, 0);
      int[] intArray0 = new int[9];
      intArray0[0] = 1;
      intArray0[1] = 2;
      intArray0[2] = 1;
      intArray0[3] = 0;
      intArray0[4] = 2;
      intArray0[5] = 0;
      intArray0[6] = 0;
      intArray0[7] = 40;
      intArray0[8] = 0;
      resultMatrixCSV0.setRowOrder(intArray0);
      resultMatrixCSV0.setStdDevPrec(1);
      resultMatrixCSV0.m_ColNames = stringArray0;
      resultMatrixCSV0.getSummaryTitle(2321);
      resultMatrixCSV0.m_StdDevPrec = 26;
      resultMatrixLatex0.m_PrintRowNames = false;
      Vector<String> vector0 = new Vector<String>();
      resultMatrixCSV0.m_HeaderValues = vector0;
      resultMatrixCSV0.toStringSummary();
      resultMatrixLatex0.toStringMatrix();
      resultMatrixLatex0.getEnumerateRowNames();
      vector0.add(0, "I[~G8beC8bEev|'");
      resultMatrixLatex0.doubleToString(3007.31769, 1);
      resultMatrixCSV0.getColName(0);
      // Undeclared exception!
      try { 
        resultMatrixCSV0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.840901545903529
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.clearHeader();
      resultMatrixLatex0.getColName(880);
      boolean boolean0 = resultMatrixLatex0.getDefaultShowAverage();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 178);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixGnuPlot0);
      resultMatrixGnuPlot1.getColName((-3261));
      resultMatrixGnuPlot1.getDefaultColNameWidth();
      resultMatrixLatex0.toStringRanking();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 0);
      resultMatrixSignificance0.getDefaultShowStdDev();
      resultMatrixGnuPlot0.getDefaultColNameWidth();
      resultMatrixLatex0.getRevision();
      resultMatrixGnuPlot1.meanPrecTipText();
      resultMatrixGnuPlot0.setOptions((String[]) null);
      assertFalse(resultMatrixGnuPlot0.getPrintRowNames());
      
      boolean boolean1 = resultMatrixSignificance0.getPrintColNames();
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.141379169300235
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      // Undeclared exception!
      try { 
        resultMatrixHTML0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.7501853048768914
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(26, 26);
      int int0 = 746;
      resultMatrixHTML0.setStdDevPrec(746);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.toStringKey();
      resultMatrixHTML0.getMeanWidth();
      resultMatrixGnuPlot0.toStringMatrix();
      // Undeclared exception!
      try { 
        resultMatrixHTML0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.9896619335473806
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(1, 0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      resultMatrixGnuPlot0.getDefaultRowNameWidth();
      boolean[] booleanArray0 = new boolean[4];
      booleanArray0[0] = false;
      booleanArray0[1] = false;
      booleanArray0[2] = false;
      booleanArray0[3] = false;
      resultMatrixGnuPlot0.m_RowHidden = booleanArray0;
      resultMatrixCSV0.m_ShowStdDev = true;
      resultMatrixGnuPlot0.setStdDevPrec(2);
      resultMatrixCSV0.isMean(2);
      resultMatrixCSV0.addHeader((String) null, "]");
      resultMatrixGnuPlot0.getOptions();
      resultMatrixCSV0.setStdDev((-2376), 0, 2);
      resultMatrixGnuPlot0.getDefaultStdDevWidth();
      resultMatrixGnuPlot0.isAverage(191);
      resultMatrixPlainText0.showAverageTipText();
      int[][] intArray0 = new int[5][3];
      int[] intArray1 = new int[4];
      intArray1[0] = 2;
      intArray1[0] = 1;
      intArray1[2] = 1;
      intArray1[3] = 0;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[1];
      intArray2[0] = 50;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[8];
      intArray3[0] = 0;
      intArray3[1] = 1;
      intArray3[2] = 40;
      intArray3[3] = 0;
      intArray3[4] = 50;
      intArray3[5] = 1;
      intArray3[6] = (-2376);
      intArray3[7] = 0;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[1];
      intArray4[0] = (-1069);
      intArray0[3] = intArray4;
      int[] intArray5 = new int[6];
      intArray5[0] = 0;
      intArray5[1] = 1;
      intArray5[2] = 1;
      intArray4[0] = 191;
      intArray5[4] = 2;
      intArray5[5] = 1199;
      intArray0[4] = intArray5;
      int[][] intArray6 = new int[7][2];
      intArray6[0] = intArray5;
      intArray6[1] = intArray3;
      intArray6[2] = intArray2;
      intArray6[3] = intArray2;
      int[] intArray7 = new int[9];
      intArray7[0] = (-2376);
      intArray7[1] = 2;
      intArray7[2] = 2;
      intArray7[3] = 2;
      intArray7[4] = 2;
      intArray7[5] = 1;
      intArray7[6] = 40;
      intArray7[7] = 0;
      intArray7[8] = 2;
      intArray6[4] = intArray7;
      intArray6[5] = intArray3;
      int[] intArray8 = new int[3];
      intArray8[0] = 0;
      intArray8[1] = (-2376);
      intArray8[2] = 0;
      intArray6[6] = intArray8;
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.539727916392947
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      int[] intArray0 = new int[4];
      intArray0[0] = 2;
      intArray0[1] = 0;
      resultMatrixPlainText0.m_RankingDiff = intArray0;
      resultMatrixLatex0.assign(resultMatrixPlainText0);
      resultMatrixLatex0.toStringKey();
      resultMatrixLatex0.m_StdDevPrec = (-3007);
      resultMatrixLatex0.clearHeader();
      resultMatrixLatex0.m_SignificanceWidth = 0;
      resultMatrixLatex0.getDisplayCol(0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 1);
      double[][] doubleArray0 = new double[2][5];
      double[] doubleArray1 = new double[8];
      doubleArray1[0] = (double) 0;
      doubleArray1[1] = 0.0;
      doubleArray1[2] = (double) 0;
      doubleArray1[3] = (double) 1;
      doubleArray1[4] = (double) 1;
      doubleArray1[5] = (double) 2;
      doubleArray1[6] = (double) 0;
      doubleArray1[7] = (double) 0;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[5];
      doubleArray2[0] = (double) 0;
      doubleArray2[1] = (double) 2;
      doubleArray2[2] = 0.0;
      doubleArray2[3] = (double) 2;
      doubleArray1[1] = (double) 2;
      doubleArray0[1] = doubleArray2;
      resultMatrixPlainText0.m_Mean = doubleArray0;
      resultMatrixSignificance0.setPrintColNames(false);
      resultMatrixSignificance0.m_PrintRowNames = false;
      resultMatrixSignificance0.toStringSummary();
      resultMatrixLatex0.assign(resultMatrixSignificance0);
      resultMatrixSignificance0.getDisplayName();
      resultMatrixLatex0.setMeanPrec(0);
      assertEquals(40, resultMatrixLatex0.getRowNameWidth());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.258486405864649
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(1, 1);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      resultMatrixCSV0.assign(resultMatrixHTML0);
      resultMatrixHTML0.getColName(2);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixLatex0.doubleToString(2, 2);
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      
      resultMatrixCSV0.getDefaultEnumerateRowNames();
      resultMatrixLatex0.m_StdDevWidth = (-3309);
      resultMatrixHTML0.toStringRanking();
      resultMatrixLatex0.listOptions();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      resultMatrixGnuPlot0.getDisplayName();
      resultMatrixLatex0.getDefaultPrintColNames();
      assertEquals(1, resultMatrixCSV0.getColCount());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.456929453296607
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setCountWidth(0);
      resultMatrixLatex0.listOptions();
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      
      resultMatrixLatex0.setSize(0, 0);
      resultMatrixLatex0.setPrintRowNames(true);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixLatex0);
      resultMatrixGnuPlot0.m_ColNameWidth = 3953;
      resultMatrixLatex0.m_PrintRowNames = true;
      Vector<Integer> vector0 = new Vector<Integer>();
      resultMatrixLatex0.m_HeaderKeys = vector0;
      resultMatrixGnuPlot0.addHeader("(", ") - ignored!");
      resultMatrixGnuPlot0.getRevision();
      resultMatrixGnuPlot0.listOptions();
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=4.0409035294152105
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.clearHeader();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      assertFalse(resultMatrixSignificance0.getRemoveFilterName());
      
      resultMatrixSignificance0.setRemoveFilterName(true);
      resultMatrixSignificance0.getDisplayName();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "(";
      stringArray0[1] = "*";
      resultMatrixCSV0.doubleToString((-305.76855837249), 0);
      stringArray0[2] = "Significance only";
      resultMatrixSignificance0.m_ColNames = stringArray0;
      resultMatrixCSV0.getStdDev(0, (-273));
      resultMatrixSignificance0.setRemoveFilterName(true);
      String[] stringArray1 = new String[7];
      stringArray1[0] = " ";
      stringArray1[1] = "*";
      stringArray1[2] = " ";
      stringArray1[3] = "Significance only";
      stringArray1[4] = " ";
      stringArray1[5] = "v";
      stringArray1[6] = "]";
      ResultMatrixSignificance.main(stringArray1);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(2, 1);
      resultMatrixHTML0.getDefaultPrintColNames();
      resultMatrixSignificance0.addHeader("[", "");
      assertFalse(resultMatrixSignificance0.getDefaultRemoveFilterName());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=3.2282744338409093
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[][] intArray0 = new int[8][3];
      int[] intArray1 = new int[2];
      intArray1[0] = 2;
      intArray1[1] = 1;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[5];
      intArray2[0] = 1;
      intArray2[1] = 2;
      intArray2[2] = 2230;
      intArray2[3] = 1;
      intArray2[4] = 1;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[6];
      intArray3[0] = 2230;
      intArray3[1] = 2230;
      intArray3[2] = 0;
      intArray3[3] = 1;
      intArray3[4] = 2230;
      intArray3[5] = 1;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[6];
      intArray4[0] = 1;
      intArray4[1] = 2;
      intArray4[2] = 2230;
      intArray4[3] = 0;
      intArray4[4] = 2;
      intArray4[5] = 0;
      intArray0[3] = intArray4;
      int[] intArray5 = new int[3];
      intArray5[0] = (-3005);
      intArray5[1] = 2230;
      intArray5[2] = 2230;
      intArray0[4] = intArray5;
      int[] intArray6 = new int[9];
      intArray6[0] = 0;
      intArray6[1] = 2230;
      intArray6[2] = 97;
      intArray6[3] = 0;
      intArray6[4] = 2230;
      intArray6[5] = 2230;
      intArray6[6] = 0;
      intArray6[7] = 2;
      intArray6[8] = (-3005);
      intArray0[5] = intArray6;
      int[] intArray7 = new int[0];
      intArray0[6] = intArray7;
      int[] intArray8 = new int[2];
      intArray8[0] = (-3005);
      intArray8[1] = 2230;
      intArray0[7] = intArray8;
      resultMatrixHTML0.m_Wins = intArray0;
      int int0 = resultMatrixHTML0.getStdDevWidth();
      assertEquals(0, int0);
      assertEquals(1, resultMatrixHTML0.getRowCount());
      assertFalse(resultMatrixHTML0.getShowAverage());
      assertEquals(1, resultMatrixHTML0.getColCount());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=3.733717186014311
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 0);
      resultMatrixSignificance0.setStdDevWidth(0);
      resultMatrixSignificance0.addHeader("", "o#8W+h/y_BG*N=O");
      resultMatrixSignificance0.m_CountWidth = 0;
      resultMatrixSignificance0.setPrintRowNames(false);
      resultMatrixSignificance0.m_ShowAverage = false;
      resultMatrixSignificance0.getDefaultRowNameWidth();
      resultMatrixSignificance0.getVisibleColCount();
      resultMatrixSignificance0.getEnumerateColNames();
      resultMatrixSignificance0.enumerateColNamesTipText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixSignificance0);
      Vector<Object> vector0 = new Vector<Object>();
      resultMatrixCSV0.m_HeaderValues = vector0;
      resultMatrixCSV0.TIE_STRING = " | ";
      resultMatrixCSV0.getDefaultRowNameWidth();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(40, 2);
      resultMatrixPlainText0.doubleToString(0, 0);
      resultMatrixPlainText0.RIGHT_PARENTHESES = "";
      resultMatrixPlainText0.getRevision();
      int int0 = 26;
      resultMatrixPlainText0.padString("o,f0PEX;b>", 2);
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        vector0.insertElementAt(object0, 2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2 > 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.4009131959918655
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setRowNameWidth(26);
      resultMatrixPlainText0.listOptions();
      resultMatrixPlainText0.setStdDevWidth(0);
      assertEquals(26, resultMatrixPlainText0.getRowNameWidth());
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setPrintColNames(true);
      resultMatrixSignificance0.toStringSummary();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(1, 327);
      resultMatrixLatex0.assign(resultMatrixSignificance0);
      resultMatrixSignificance0.getDisplayName();
      resultMatrixLatex0.setMeanPrec(40);
      assertEquals(1, resultMatrixLatex0.getRowCount());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.426416071541697
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      int[] intArray0 = new int[2];
      intArray0[1] = 0;
      resultMatrixPlainText0.m_RankingDiff = intArray0;
      resultMatrixLatex0.assign(resultMatrixPlainText0);
      resultMatrixLatex0.toStringKey();
      resultMatrixLatex0.m_StdDevPrec = (-3007);
      resultMatrixLatex0.m_SignificanceWidth = 0;
      resultMatrixLatex0.getDisplayCol(0);
      assertTrue(resultMatrixLatex0.getPrintColNames());
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 1);
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = (double) 0;
      int int0 = resultMatrixSignificance0.getColSize((String[][]) null, (-3007), false, false);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.355542154659827
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setColNameWidth(95);
      resultMatrixPlainText0.getColOrder();
      resultMatrixPlainText0.getVisibleColCount();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      String[][] stringArray0 = new String[0][1];
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.getColSize(stringArray0, 2104, false, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=3.8136480633353664
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      resultMatrixPlainText0.getDisplayName();
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
      
      String string0 = resultMatrixGnuPlot0.toStringMatrix();
      assertEquals("\n##################\n# file: plot.dat #\n##################\n# generated by WEKA 3.7.7\n# contains the data for the plot\n\n# key for the x-axis\n# 1 - row0\n\n# data for the plot\n1 ''\n#######\n# end #\n#######\n\n##################\n# file: plot.scr #\n##################\n# generated by WEKA 3.7.7\n# script to plot the data\n\n# display it in a window:\nset terminal x11\nset output\n\n# to display all data rows:\nset xrange [0:2]\n\n# axis labels, e.g.:\n#set xlabel \"Datasets\"\n#set ylabel \"Accuracy in %\"\n\n# the plot commands\nplot \"plot.dat\" using 1:2 with lines title \"col0\"\n\n# generate ps:\n#set terminal postscript\n#set output \"plot.ps\"\n#replot\n\n# generate png:\n#set terminal png size 800,600\n#set output \"plot.png\"\n#replot\n\n# wait for user to hit <Return>\npause -1\n#######\n# end #\n#######\n", string0);
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      resultMatrixGnuPlot0.setSignificanceWidth((-1934));
      resultMatrixHTML0.RIGHT_PARENTHESES = "Plain Text";
      resultMatrixHTML0.getDefaultPrintColNames();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixGnuPlot0.toStringSummary();
      resultMatrixPlainText0.m_EnumerateRowNames = false;
      resultMatrixSignificance0.getDefaultShowStdDev();
      resultMatrixGnuPlot0.LOSS_STRING = "v";
      resultMatrixPlainText0.getSignificanceCount(0, (-2041));
      resultMatrixPlainText0.getRevision();
      resultMatrixSignificance0.toStringRanking();
      resultMatrixHTML0.getDefaultMeanPrec();
      resultMatrixGnuPlot0.getEnumerateColNames();
      resultMatrixGnuPlot0.getCount(45);
      resultMatrixGnuPlot0.isSignificance(0);
      resultMatrixHTML0.getDefaultEnumerateColNames();
      resultMatrixSignificance0.getDisplayName();
      int int0 = resultMatrixHTML0.getMeanPrec();
      assertEquals(2, int0);
      
      resultMatrixPlainText0.clearRanking();
      resultMatrixPlainText0.setMean(0, (-1934), 178.37);
      assertTrue(resultMatrixPlainText0.getPrintColNames());
      assertEquals(50, resultMatrixGnuPlot0.getColNameWidth());
      assertEquals(50, resultMatrixPlainText0.getRowNameWidth());
      
      String[][] stringArray0 = new String[7][4];
      String[] stringArray1 = new String[0];
      stringArray0[0] = stringArray1;
      String[] stringArray2 = new String[0];
      stringArray0[1] = stringArray2;
      String[] stringArray3 = new String[7];
      stringArray3[0] = "";
      stringArray3[1] = "";
      stringArray3[2] = " ";
      stringArray3[3] = "v";
      stringArray3[4] = " ";
      stringArray3[5] = "*";
      stringArray3[6] = "*";
      stringArray0[2] = stringArray3;
      String[] stringArray4 = new String[9];
      stringArray4[0] = " ";
      stringArray4[1] = "v";
      stringArray4[2] = "*";
      stringArray4[3] = " ";
      stringArray4[4] = "v";
      stringArray4[5] = "";
      stringArray4[6] = " ";
      stringArray4[7] = "Significance only";
      stringArray4[8] = "";
      stringArray0[3] = stringArray4;
      String[] stringArray5 = new String[2];
      stringArray5[0] = "v";
      stringArray5[1] = "v";
      stringArray0[4] = stringArray5;
      String[] stringArray6 = new String[7];
      stringArray6[0] = " ";
      stringArray6[1] = "8034";
      stringArray6[2] = "";
      stringArray6[3] = "";
      stringArray6[4] = "v";
      stringArray6[5] = "\n3. cols numbered\n";
      stringArray6[6] = "*";
      stringArray0[5] = stringArray6;
      String[] stringArray7 = new String[9];
      stringArray7[0] = "v";
      stringArray7[1] = " ";
      stringArray7[2] = "v";
      stringArray7[3] = "Plain Text";
      stringArray7[4] = "";
      stringArray7[5] = "";
      stringArray7[6] = "";
      stringArray7[7] = " ";
      stringArray7[8] = "";
      stringArray0[6] = stringArray7;
      int int1 = resultMatrixSignificance0.getColSize(stringArray0, 1, false, false);
      assertEquals(0, int1);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.74002687155548
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getColName((-2713));
      resultMatrixGnuPlot0.setEnumerateColNames(false);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      resultMatrixHTML0.setSignificanceWidth(0);
      resultMatrixHTML0.getRowHidden(0);
      resultMatrixHTML0.getVisibleColCount();
      resultMatrixHTML0.toStringRanking();
      resultMatrixHTML0.padString("*", 2, true);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.toStringMatrix();
      resultMatrixGnuPlot1.setPrintColNames(false);
      resultMatrixGnuPlot0.enumerateColNamesTipText();
      resultMatrixGnuPlot1.enumerateColNamesTipText();
      assertFalse(resultMatrixGnuPlot1.getPrintColNames());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.754278911600227
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.m_EnumerateRowNames = true;
      resultMatrixSignificance0.getShowAverage();
      resultMatrixSignificance0.padString("\n3. cols numbered\n", (-1512), true);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixSignificance0);
      resultMatrixCSV0.setStdDevPrec((-1512));
      resultMatrixCSV0.globalInfo();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      resultMatrixHTML0.setSignificanceWidth(2);
      resultMatrixHTML0.toStringRanking();
      resultMatrixSignificance0.getOptions();
      assertTrue(resultMatrixSignificance0.getEnumerateRowNames());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.525737562622179
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setRowNameWidth(0);
      resultMatrixPlainText0.listOptions();
      resultMatrixPlainText0.setStdDevWidth(0);
      boolean[] booleanArray0 = new boolean[1];
      booleanArray0[0] = false;
      resultMatrixPlainText0.m_RowHidden = booleanArray0;
      resultMatrixPlainText0.doubleToString(354, 5);
      assertEquals(0, resultMatrixPlainText0.getRowNameWidth());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=3.8295809281709334
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setRowNameWidth(0);
      resultMatrixPlainText0.listOptions();
      resultMatrixPlainText0.setStdDevWidth(0);
      resultMatrixLatex0.doubleToString(1, 1103);
      resultMatrixLatex0.getDefaultRemoveFilterName();
      resultMatrixLatex0.getEnumerateRowNames();
      resultMatrixLatex0.setShowAverage(true);
      resultMatrixLatex0.setStdDevPrec(2305);
      resultMatrixLatex0.getSummaryTitle((-1037));
      resultMatrixLatex0.getStdDevPrec();
      resultMatrixLatex0.showStdDevTipText();
      resultMatrixLatex0.colNameWidthTipText();
      resultMatrixLatex0.getColName(1);
      resultMatrixLatex0.setSize(1, 1);
      assertTrue(resultMatrixLatex0.getShowAverage());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.7657316232144264
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setColNameWidth((-1813));
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      int[][] intArray0 = new int[1][9];
      int[] intArray1 = new int[6];
      intArray1[0] = 1;
      intArray1[1] = 0;
      intArray1[2] = 1;
      intArray1[3] = 0;
      intArray1[4] = 1;
      intArray1[5] = 1;
      intArray0[0] = intArray1;
      resultMatrixGnuPlot0.m_Significance = intArray0;
      resultMatrixSignificance0.toStringMatrix();
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.337588728123289
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int int0 = (-2713);
      resultMatrixGnuPlot0.getColName((-2713));
      resultMatrixGnuPlot0.setEnumerateColNames(false);
      resultMatrixGnuPlot0.setRowNameWidth(339);
      resultMatrixGnuPlot0.m_ShowStdDev = true;
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.getHeader("# file: plot.scr #\n");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=3.665637700732518
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[] intArray0 = new int[4];
      intArray0[0] = 0;
      intArray0[1] = 2;
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(47, 0);
      resultMatrixLatex0.doubleToString(2, 0);
      resultMatrixLatex0.getDefaultRemoveFilterName();
      resultMatrixLatex0.getEnumerateRowNames();
      resultMatrixLatex0.setStdDevPrec((-3101));
      resultMatrixLatex0.getSummaryTitle(47);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      resultMatrixLatex1.getStdDevPrec();
      resultMatrixLatex0.showStdDevTipText();
      resultMatrixLatex0.colNameWidthTipText();
      ResultMatrixLatex resultMatrixLatex2 = new ResultMatrixLatex(resultMatrixLatex0);
      resultMatrixLatex2.getColName(0);
      // Undeclared exception!
      resultMatrixLatex1.setSize(4539, 4);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=3.7686460473380157
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.listOptions();
      resultMatrixHTML0.m_PrintRowNames = true;
      assertEquals(1, resultMatrixHTML0.getColCount());
      
      resultMatrixHTML0.toArray();
      resultMatrixHTML0.setSignificanceWidth(0);
      resultMatrixHTML0.getRowHidden(0);
      resultMatrixHTML0.getVisibleColCount();
      resultMatrixHTML0.toStringKey();
      resultMatrixHTML0.m_Wins = null;
      resultMatrixHTML0.padString("", 0, true);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      String string0 = resultMatrixGnuPlot0.toStringMatrix();
      assertEquals("\n##################\n# file: plot.dat #\n##################\n# generated by WEKA 3.7.7\n# contains the data for the plot\n\n# key for the x-axis\n# 1 - row0\n\n# data for the plot\n1 ''\n#######\n# end #\n#######\n\n##################\n# file: plot.scr #\n##################\n# generated by WEKA 3.7.7\n# script to plot the data\n\n# display it in a window:\nset terminal x11\nset output\n\n# to display all data rows:\nset xrange [0:2]\n\n# axis labels, e.g.:\n#set xlabel \"Datasets\"\n#set ylabel \"Accuracy in %\"\n\n# the plot commands\nplot \"plot.dat\" using 1:2 with lines title \"col0\"\n\n# generate ps:\n#set terminal postscript\n#set output \"plot.ps\"\n#replot\n\n# generate png:\n#set terminal png size 800,600\n#set output \"plot.png\"\n#replot\n\n# wait for user to hit <Return>\npause -1\n#######\n# end #\n#######\n", string0);
      
      resultMatrixGnuPlot0.setPrintColNames(false);
      resultMatrixGnuPlot0.enumerateColNamesTipText();
      assertFalse(resultMatrixGnuPlot0.getPrintColNames());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=3.532947930463007
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setRowNameWidth(0);
      resultMatrixPlainText0.listOptions();
      resultMatrixPlainText0.setStdDevWidth(0);
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.doubleToString(354, (-3550));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=3.740055069629609
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 0);
      boolean[] booleanArray0 = new boolean[5];
      booleanArray0[0] = true;
      booleanArray0[1] = false;
      int[] intArray0 = new int[9];
      intArray0[0] = 2;
      intArray0[1] = 0;
      intArray0[3] = 2;
      intArray0[4] = 0;
      intArray0[5] = 2;
      intArray0[6] = 0;
      intArray0[7] = 1;
      intArray0[8] = 480;
      resultMatrixLatex0.m_RankingWins = intArray0;
      booleanArray0[2] = false;
      booleanArray0[3] = true;
      booleanArray0[4] = true;
      resultMatrixLatex0.m_ColHidden = booleanArray0;
      resultMatrixLatex0.m_RowHidden = booleanArray0;
      resultMatrixLatex0.doubleToString(0, 0);
      resultMatrixLatex0.getDefaultRemoveFilterName();
      resultMatrixLatex0.getEnumerateRowNames();
      resultMatrixLatex0.m_RemoveFilterName = false;
      resultMatrixLatex0.setShowAverage(false);
      resultMatrixLatex0.setStdDevPrec(0);
      resultMatrixLatex0.getSummaryTitle(4539);
      resultMatrixLatex0.getStdDevPrec();
      resultMatrixLatex0.showStdDevTipText();
      resultMatrixLatex0.colNameWidthTipText();
      resultMatrixLatex0.getColName((-3583));
      resultMatrixLatex0.setSize(0, 234);
      assertEquals(234, resultMatrixLatex0.getRowCount());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=4.102343679405782
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      resultMatrixPlainText0.setStdDevWidth(3);
      resultMatrixPlainText0.setEnumerateColNames(true);
      resultMatrixPlainText0.getDisplayName();
      resultMatrixPlainText0.getDefaultShowStdDev();
      ResultMatrixPlainText.main((String[]) null);
      resultMatrixGnuPlot0.setMeanWidth(1);
      resultMatrixGnuPlot0.setRowName(1, "*");
      resultMatrixGnuPlot0.setColNameWidth(0);
      int[][] intArray0 = new int[1][2];
      int[] intArray1 = new int[8];
      intArray1[0] = 2;
      intArray1[1] = 0;
      resultMatrixGnuPlot0.setEnumerateColNames(true);
      intArray1[2] = 0;
      intArray1[3] = 1;
      intArray1[4] = 0;
      intArray1[5] = 0;
      intArray1[6] = 0;
      intArray1[7] = 1;
      intArray0[0] = intArray1;
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.setRanking(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=3.9878578835046654
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 0);
      String[] stringArray0 = new String[6];
      stringArray0[0] = " ";
      stringArray0[1] = "\tThe width of the counts (0 = optimal).\n\t(default: ";
      stringArray0[2] = " ";
      stringArray0[3] = "rE9)cK:3'$s|?N3$J";
      stringArray0[4] = ")";
      stringArray0[5] = "v";
      resultMatrixPlainText0.setOptions(stringArray0);
      resultMatrixPlainText0.RIGHT_PARENTHESES = "rE9)cK:3'$s|?N3$J";
      resultMatrixPlainText0.getDefaultMeanWidth();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.m_RemoveFilterName = false;
      resultMatrixGnuPlot0.toStringMatrix();
      String string0 = "Z0[+?'On";
      int int0 = (-1278);
      int[][] intArray0 = new int[5][2];
      int[] intArray1 = new int[8];
      intArray1[0] = 1;
      intArray1[1] = 2;
      intArray1[2] = 1;
      intArray1[3] = 1;
      intArray1[4] = 0;
      intArray1[5] = 0;
      intArray1[6] = (-1278);
      intArray1[7] = 2;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[3];
      intArray2[0] = (-1278);
      intArray2[1] = 1;
      intArray2[2] = 0;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[2];
      intArray3[0] = 0;
      intArray3[1] = 2;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[9];
      intArray4[0] = (-1278);
      intArray4[1] = (-2864);
      intArray4[2] = 0;
      intArray4[3] = 0;
      intArray4[4] = 2;
      intArray4[5] = 2;
      intArray4[6] = (-1278);
      intArray4[7] = 2;
      intArray4[8] = 0;
      intArray0[3] = intArray4;
      int[] intArray5 = new int[0];
      intArray0[4] = intArray5;
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.setRanking(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=3.393814409041838
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      resultMatrixSignificance0.removeFilterName("m.eD8-9E+p,y$[vu4UV");
      resultMatrixPlainText0.getDisplayName();
      resultMatrixSignificance0.getDisplayName();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 0);
      // Undeclared exception!
      try { 
        resultMatrixLatex0.toStringMatrix();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=3.5347814165069216
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(3, 3);
      resultMatrixCSV0.m_StdDevWidth = 3;
      resultMatrixCSV0.toArray();
      resultMatrixCSV0.m_ColNames = null;
      int[] intArray0 = null;
      resultMatrixCSV0.m_RowOrder = null;
      // Undeclared exception!
      try { 
        resultMatrixCSV0.clear();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=3.483898930762199
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setColNameWidth(95);
      resultMatrixPlainText0.getColOrder();
      resultMatrixPlainText0.getVisibleColCount();
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.padString((String) null, 1, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=3.614869527346256
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.clearHeader();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setRemoveFilterName(true);
      int[][] intArray0 = new int[8][3];
      int[] intArray1 = new int[4];
      intArray1[0] = 3333;
      intArray1[1] = 2;
      intArray1[2] = 122;
      intArray1[3] = 2;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[4];
      intArray2[0] = 1;
      intArray2[1] = 2;
      intArray2[2] = 2;
      intArray2[3] = 0;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[6];
      intArray3[0] = 3333;
      intArray3[1] = 122;
      intArray3[2] = 13;
      intArray3[3] = 1;
      intArray3[4] = 2;
      intArray3[5] = 1;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[2];
      intArray4[0] = 1;
      intArray4[1] = 2;
      intArray0[3] = intArray4;
      int[] intArray5 = new int[7];
      intArray5[0] = 0;
      intArray5[1] = 122;
      intArray5[2] = 122;
      intArray5[3] = 3333;
      intArray5[4] = 3333;
      intArray5[5] = 122;
      intArray5[6] = 1;
      intArray0[4] = intArray5;
      int[] intArray6 = new int[9];
      intArray6[0] = 3;
      intArray6[1] = 2;
      intArray6[2] = 0;
      intArray6[3] = 1;
      intArray6[4] = 122;
      intArray6[5] = 122;
      intArray6[6] = 0;
      intArray6[7] = 0;
      intArray6[8] = 854;
      intArray0[5] = intArray6;
      int[] intArray7 = new int[8];
      intArray7[0] = 0;
      intArray7[1] = 1;
      intArray7[2] = 3333;
      intArray7[3] = 854;
      intArray7[4] = 1;
      intArray7[5] = 13;
      intArray7[6] = 854;
      intArray7[7] = 122;
      intArray0[6] = intArray7;
      int[] intArray8 = new int[3];
      intArray8[0] = 1398;
      intArray8[1] = 3;
      intArray8[2] = 3333;
      intArray0[7] = intArray8;
      resultMatrixSignificance0.m_Wins = intArray0;
      resultMatrixSignificance0.getDisplayName();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "(";
      stringArray0[1] = "*";
      resultMatrixCSV0.doubleToString((-305.76855837249), 0);
      stringArray0[2] = "Significance only";
      resultMatrixSignificance0.m_ColNames = stringArray0;
      resultMatrixCSV0.getStdDev(0, (-273));
      resultMatrixSignificance0.setRemoveFilterName(true);
      assertTrue(resultMatrixSignificance0.getRemoveFilterName());
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.doubleToString(2, 1441);
      resultMatrixLatex0.getDefaultRemoveFilterName();
      resultMatrixLatex0.getEnumerateRowNames();
      resultMatrixLatex0.setShowAverage(false);
      resultMatrixLatex0.setStdDevPrec((-273));
      resultMatrixLatex0.getSummaryTitle(2);
      resultMatrixLatex0.getStdDevPrec();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      ResultMatrixLatex resultMatrixLatex2 = new ResultMatrixLatex(resultMatrixLatex1);
      resultMatrixLatex0.showStdDevTipText();
      resultMatrixLatex1.colNameWidthTipText();
      resultMatrixLatex2.getColName(2);
      resultMatrixLatex1.setSize(0, 2);
      assertEquals(2, resultMatrixLatex1.getStdDevPrec());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=3.4752597533643903
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 0);
      resultMatrixHTML0.isStdDev(0);
      double[][] doubleArray0 = new double[0][3];
      resultMatrixHTML0.m_StdDev = doubleArray0;
      int int0 = resultMatrixHTML0.getDefaultSignificanceWidth();
      assertEquals(0, int0);
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      Vector<Integer> vector0 = new Vector<Integer>();
      resultMatrixPlainText0.m_HeaderValues = vector0;
      resultMatrixPlainText0.clearHeader();
      vector0.add((Integer) 2);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      resultMatrixCSV0.toStringSummary();
      assertTrue(resultMatrixCSV0.getEnumerateColNames());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(0, resultMatrixHTML0.getColCount());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertFalse(resultMatrixCSV0.getEnumerateRowNames());
      assertEquals(0, resultMatrixHTML0.getRowCount());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertFalse(resultMatrixCSV0.getShowStdDev());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=4.0972020133522
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getOptions();
      resultMatrixCSV0.setMeanWidth(894);
      resultMatrixCSV0.setEnumerateColNames(true);
      resultMatrixCSV0.getSummaryTitle((-287));
      resultMatrixCSV0.printColNamesTipText();
      resultMatrixCSV0.getDefaultPrintColNames();
      resultMatrixCSV0.removeFilterNameTipText();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(1, 231);
      resultMatrixLatex0.toArray();
      resultMatrixLatex0.RIGHT_PARENTHESES = "qlLX42x?]]_\"@";
      resultMatrixLatex0.getDefaultPrintColNames();
      resultMatrixCSV0.getMeanPrec();
      assertEquals(894, resultMatrixCSV0.getMeanWidth());
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.toStringMatrix();
      resultMatrixPlainText0.getDisplayName();
      resultMatrixPlainText0.toArray();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixPlainText0);
      Vector<Object> vector0 = new Vector<Object>();
      resultMatrixHTML0.m_HeaderValues = vector0;
      resultMatrixHTML0.toStringSummary();
      resultMatrixHTML0.getDefaultSignificanceWidth();
      resultMatrixPlainText0.setPrintRowNames(true);
      resultMatrixLatex0.setColOrder((int[]) null);
      assertEquals(2, resultMatrixLatex0.getDefaultStdDevPrec());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=4.023356350209722
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      resultMatrixSignificance0.getDefaultShowStdDev();
      resultMatrixSignificance0.setSignificanceWidth(1);
      resultMatrixGnuPlot0.m_EnumerateRowNames = true;
      resultMatrixGnuPlot0.toStringMatrix();
      resultMatrixGnuPlot0.isMean(2);
      resultMatrixGnuPlot0.setEnumerateRowNames(false);
      resultMatrixSignificance0.headerKeys();
      String[] stringArray0 = new String[5];
      resultMatrixGnuPlot0.m_PrintRowNames = false;
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "*";
      stringArray0[3] = "";
      stringArray0[4] = "v";
      ResultMatrixHTML.main(stringArray0);
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.setRanking((int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=3.3595348857422955
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      int int0 = 0;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(5, 0);
      resultMatrixSignificance0.toStringSummary();
      resultMatrixSignificance0.clearSummary();
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.getHeader("-summary data not set-");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=3.263816792415219
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setColNameWidth((-1813));
      int[][] intArray0 = new int[10][9];
      int[] intArray1 = new int[6];
      intArray1[0] = 1;
      intArray1[3] = 0;
      intArray0[0] = intArray1;
      resultMatrixGnuPlot0.m_Significance = intArray0;
      resultMatrixGnuPlot0.setSignificance(0, 0, 2922);
      int int0 = resultMatrixGnuPlot0.getStdDevWidth();
      assertEquals(0, int0);
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertEquals(50, resultMatrixGnuPlot0.getColNameWidth());
      assertEquals(0, resultMatrixGnuPlot0.getDefaultMeanWidth());
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultStdDevPrec());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=4.102343679405782
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      resultMatrixPlainText0.setStdDevWidth(3);
      resultMatrixPlainText0.setEnumerateColNames(true);
      resultMatrixPlainText0.getDisplayName();
      resultMatrixPlainText0.getDefaultShowStdDev();
      ResultMatrixPlainText.main((String[]) null);
      resultMatrixGnuPlot0.setMeanWidth(1);
      resultMatrixGnuPlot0.setRowName(1, "*");
      resultMatrixGnuPlot0.setColNameWidth(0);
      int[][] intArray0 = new int[1][2];
      resultMatrixGnuPlot0.setEnumerateColNames(true);
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.setRanking(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=3.3354179287499672
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 0);
      boolean[] booleanArray0 = new boolean[5];
      booleanArray0[0] = true;
      booleanArray0[1] = true;
      int[] intArray0 = new int[9];
      intArray0[0] = 2;
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 2;
      intArray0[4] = 0;
      intArray0[5] = 0;
      intArray0[6] = 0;
      intArray0[7] = 1;
      intArray0[8] = 480;
      resultMatrixLatex0.m_RankingWins = intArray0;
      booleanArray0[2] = false;
      booleanArray0[3] = true;
      booleanArray0[4] = true;
      resultMatrixLatex0.m_ColHidden = booleanArray0;
      ResultMatrixPlainText resultMatrixPlainText0 = null;
      try {
        resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=3.6165239930252433
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixPlainText0);
      resultMatrixPlainText0.assign(resultMatrixHTML0);
      String string0 = resultMatrixPlainText0.rowNameWidthTipText();
      assertEquals("The maximum width for the row names (0 = optimal).", string0);
      
      int[][] intArray0 = new int[9][9];
      int[] intArray1 = new int[8];
      intArray1[0] = 0;
      intArray1[1] = 0;
      intArray1[2] = 2;
      intArray1[3] = 2;
      intArray1[4] = 1;
      intArray1[5] = 1;
      intArray1[6] = 2;
      intArray1[7] = 2;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[7];
      intArray2[0] = 2;
      intArray2[1] = 0;
      intArray2[2] = 2;
      intArray2[3] = 2;
      intArray2[4] = 1;
      intArray2[5] = 2;
      intArray2[6] = 0;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[9];
      intArray3[0] = 0;
      intArray3[1] = 0;
      intArray3[2] = (-287);
      intArray3[3] = 2;
      intArray3[4] = 2;
      intArray3[5] = 2;
      intArray3[6] = 2;
      intArray3[7] = 2;
      intArray3[8] = 0;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[5];
      intArray4[0] = 0;
      intArray4[1] = (-3522);
      intArray4[2] = 0;
      intArray4[3] = 2;
      intArray4[4] = 1;
      intArray0[3] = intArray4;
      int[] intArray5 = new int[4];
      intArray5[0] = 1;
      intArray5[1] = 1;
      intArray5[2] = 1;
      intArray5[3] = 1;
      intArray0[4] = intArray5;
      int[] intArray6 = new int[8];
      intArray6[0] = 0;
      intArray6[1] = 1;
      intArray6[2] = 2;
      intArray6[3] = 0;
      intArray6[4] = (-287);
      intArray6[5] = 2;
      intArray6[6] = (-3522);
      intArray6[7] = 0;
      intArray0[5] = intArray6;
      int[] intArray7 = new int[6];
      intArray7[0] = 1;
      intArray7[1] = 2;
      intArray7[2] = 0;
      intArray7[3] = 0;
      intArray7[4] = 0;
      intArray7[5] = 2;
      intArray0[6] = intArray7;
      int[] intArray8 = new int[0];
      intArray0[7] = intArray8;
      int[] intArray9 = new int[4];
      intArray9[0] = (-3522);
      intArray9[1] = 1;
      intArray9[2] = 1;
      intArray9[3] = 102;
      intArray0[8] = intArray9;
      resultMatrixPlainText0.setRanking(intArray0);
      String string1 = resultMatrixHTML0.trimString("v", 0);
      assertEquals("v", string1);
      
      boolean boolean0 = resultMatrixHTML0.getRemoveFilterName();
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertFalse(boolean0);
      
      resultMatrixPlainText0.showAverageTipText();
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertFalse(resultMatrixPlainText0.getShowAverage());
      assertTrue(resultMatrixPlainText0.getPrintRowNames());
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
      assertEquals(0, resultMatrixPlainText0.getRowCount());
      assertEquals(0, resultMatrixPlainText0.getDefaultColNameWidth());
      assertEquals(0, resultMatrixPlainText0.getColCount());
      assertEquals(5, resultMatrixPlainText0.getCountWidth());
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
      assertEquals(25, resultMatrixPlainText0.getRowNameWidth());
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      assertTrue(resultMatrixPlainText0.getEnumerateColNames());
      assertFalse(resultMatrixPlainText0.getDefaultShowStdDev());
  }
}
