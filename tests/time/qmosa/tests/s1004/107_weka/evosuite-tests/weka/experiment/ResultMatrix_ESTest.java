/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 29 18:21:06 GMT 2020
 */

package weka.experiment;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import weka.experiment.ResultMatrix;
import weka.experiment.ResultMatrixCSV;
import weka.experiment.ResultMatrixGnuPlot;
import weka.experiment.ResultMatrixHTML;
import weka.experiment.ResultMatrixLatex;
import weka.experiment.ResultMatrixPlainText;
import weka.experiment.ResultMatrixSignificance;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ResultMatrix_ESTest extends ResultMatrix_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.476016844919104
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      stringArray0[1] = "*";
      resultMatrixPlainText0.setOptions(stringArray0);
      resultMatrixPlainText0.getDefaultMeanWidth();
      resultMatrixGnuPlot0.toStringMatrix();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      // Undeclared exception!
      try { 
        resultMatrixCSV0.setSummary((int[][]) null, (int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.2073041754320917
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(1, 1);
      resultMatrixGnuPlot0.addHeader("", (String) null);
      resultMatrixGnuPlot0.m_RowNameWidth = 1;
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.assign(resultMatrixGnuPlot0);
      resultMatrixHTML0.toStringMatrix();
      double double0 = resultMatrixHTML0.getMean((-923), 102);
      assertTrue(resultMatrixHTML0.getPrintColNames());
      assertEquals(0.0, double0, 0.01);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.5937797305700525
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      resultMatrixPlainText0.setStdDevWidth(3);
      resultMatrixPlainText0.setEnumerateColNames(true);
      resultMatrixPlainText0.getDisplayName();
      ResultMatrixPlainText.main((String[]) null);
      resultMatrixGnuPlot0.setMeanWidth(1);
      resultMatrixGnuPlot0.setRowName(1, "*");
      resultMatrixGnuPlot0.setColNameWidth(0);
      int[] intArray0 = new int[8];
      intArray0[0] = 2;
      intArray0[1] = 0;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      resultMatrixSignificance0.printRowNamesTipText();
      resultMatrixSignificance0.getVisibleColCount();
      resultMatrixSignificance0.getRowOrder();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      resultMatrixPlainText0.toStringKey();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixSignificance0);
      resultMatrixSignificance1.toStringRanking();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.toStringMatrix();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 0);
      resultMatrixLatex0.getDefaultEnumerateColNames();
      resultMatrixSignificance1.getDefaultStdDevWidth();
      resultMatrixSignificance0.toStringKey();
      assertEquals(1, resultMatrixGnuPlot0.getMeanWidth());
      
      ResultMatrixPlainText resultMatrixPlainText2 = new ResultMatrixPlainText(resultMatrixCSV0);
      resultMatrixPlainText2.listOptions();
      resultMatrixPlainText2.showAverageTipText();
      resultMatrixCSV0.getColNameWidth();
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.0538832708338006
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 0);
      String[] stringArray0 = new String[6];
      stringArray0[0] = " ";
      stringArray0[1] = "\tThe width of the counts (0 = optimal).\n\t(default: ";
      stringArray0[2] = " ";
      stringArray0[3] = "rE9)cK:3'$s|?N3$J";
      stringArray0[4] = ")";
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getColName(0);
      resultMatrixGnuPlot0.setEnumerateColNames(false);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot1.setRowNameWidth((-1172));
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot1.getHeader(")");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.5892088970051916
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      assertEquals(18, stringArray0.length);
      
      resultMatrixCSV0.setMeanWidth(894);
      resultMatrixCSV0.setEnumerateColNames(false);
      String string0 = resultMatrixCSV0.getSummaryTitle((-287));
      assertEquals("`", string0);
      
      resultMatrixCSV0.printColNamesTipText();
      resultMatrixCSV0.getDefaultPrintColNames();
      resultMatrixCSV0.removeFilterNameTipText();
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(1, 231);
      resultMatrixLatex0.toArray();
      resultMatrixLatex0.RIGHT_PARENTHESES = "qlLX42x?]]_\"@";
      resultMatrixLatex0.getDefaultPrintColNames();
      resultMatrixCSV0.getMeanPrec();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      String string1 = resultMatrixPlainText0.toStringMatrix();
      assertEquals("Dataset                   (1) col0 \n-----------------------------------\nrow0                       (0)    |\n-----------------------------------\n(v/ /*)                           |\n", string1);
      
      resultMatrixPlainText0.getDisplayName();
      resultMatrixPlainText0.toArray();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixPlainText0);
      Vector<Object> vector0 = new Vector<Object>();
      resultMatrixHTML0.m_EnumerateColNames = false;
      resultMatrixHTML0.setEnumerateColNames(false);
      resultMatrixHTML0.m_HeaderValues = vector0;
      resultMatrixHTML0.toStringSummary();
      int int0 = ResultMatrix.SIGNIFICANCE_TIE;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      resultMatrixGnuPlot0.getStdDev(231, 4);
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertTrue(resultMatrixGnuPlot0.getPrintColNames());
      assertEquals(5, resultMatrixGnuPlot0.getCountWidth());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      
      resultMatrixPlainText0.getPrintRowNames();
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      assertEquals(0, resultMatrixPlainText0.getColNameWidth());
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.515099302948161
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(1, 1);
      resultMatrixGnuPlot0.addHeader("", (String) null);
      resultMatrixGnuPlot0.m_RowNameWidth = 1;
      int[][] intArray0 = new int[4][5];
      int[] intArray1 = new int[7];
      intArray1[0] = 2;
      intArray1[1] = 1;
      intArray1[2] = 1;
      intArray1[3] = 1;
      intArray1[4] = 1;
      intArray1[5] = 0;
      intArray1[6] = 0;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[8];
      intArray2[0] = 2;
      intArray2[1] = 1;
      intArray2[2] = 2;
      intArray2[3] = 1;
      intArray2[4] = 19;
      intArray2[5] = 2;
      intArray2[6] = 1;
      intArray2[7] = 2;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[4];
      intArray3[0] = 1;
      intArray3[1] = 1;
      intArray3[2] = (-3560);
      intArray3[3] = 1;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[0];
      intArray0[3] = intArray4;
      resultMatrixGnuPlot0.m_NonSigWins = intArray0;
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      // Undeclared exception!
      try { 
        resultMatrixHTML0.assign(resultMatrixGnuPlot0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.4995897417555426
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setCountWidth((-1));
      resultMatrixLatex0.listOptions();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      int[] intArray0 = new int[1];
      intArray0[0] = 0;
      resultMatrixCSV0.setColOrder(intArray0);
      int[][] intArray1 = new int[9][1];
      resultMatrixCSV0.WIN_STRING = "\tThe width of the counts (0 = optimal).\n\t(default: ";
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      int[] intArray2 = new int[2];
      intArray2[0] = 26;
      intArray2[1] = 2;
      intArray1[3] = intArray2;
      intArray1[0] = intArray0;
      intArray1[5] = intArray0;
      intArray1[6] = intArray0;
      intArray1[7] = intArray0;
      intArray1[8] = intArray0;
      resultMatrixCSV0.setSummary(intArray1, intArray1);
      String[] stringArray0 = new String[9];
      resultMatrixLatex0.m_RankingWins = intArray0;
      stringArray0[0] = ")";
      stringArray0[1] = ")";
      stringArray0[2] = "$circ$";
      stringArray0[3] = "(";
      stringArray0[4] = "\tThe width of the counts (0 = optimal).\n\t(default: ";
      stringArray0[5] = " ";
      stringArray0[6] = "$\bullet$";
      resultMatrixCSV0.toStringMatrix();
      stringArray0[7] = "$\bullet$";
      stringArray0[8] = "$\bullet$";
      ResultMatrixGnuPlot.main(stringArray0);
      assertEquals(9, stringArray0.length);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.874519625657589
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(1, 1);
      resultMatrixGnuPlot0.addHeader("", (String) null);
      resultMatrixGnuPlot0.m_RowNameWidth = 1;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setPrintColNames(true);
      resultMatrixSignificance0.toStringSummary();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(1, 1);
      resultMatrixLatex0.assign(resultMatrixGnuPlot0);
      resultMatrixSignificance0.getDisplayName();
      resultMatrixLatex0.setMeanPrec((-312));
      String[][] stringArray0 = new String[0][7];
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.getColSize(stringArray0, 1, false, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.5953876386600654
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(8, 8);
      resultMatrixGnuPlot0.RIGHT_PARENTHESES = "<td align=\"right\">";
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      resultMatrixPlainText0.setStdDevWidth(3);
      resultMatrixPlainText0.setEnumerateColNames(true);
      resultMatrixPlainText0.getDisplayName();
      resultMatrixGnuPlot0.getDefaultEnumerateRowNames();
      ResultMatrixPlainText.main((String[]) null);
      resultMatrixGnuPlot0.setMeanWidth(1);
      resultMatrixGnuPlot0.setRowName(1, "*");
      resultMatrixGnuPlot0.setColNameWidth(0);
      int[][] intArray0 = new int[1][2];
      int[] intArray1 = new int[8];
      intArray1[0] = 2;
      intArray1[1] = 8;
      resultMatrixGnuPlot0.setEnumerateColNames(true);
      intArray1[2] = 0;
      intArray1[3] = 1;
      intArray1[4] = 8;
      intArray1[5] = 8;
      intArray1[6] = 0;
      intArray1[7] = 1;
      intArray0[0] = intArray1;
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.setRanking(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.2116234915689414
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.addHeader("", (String) null);
      resultMatrixGnuPlot0.m_RowNameWidth = (-18);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.assign(resultMatrixGnuPlot0);
      resultMatrixHTML0.toStringMatrix();
      resultMatrixGnuPlot0.setMeanPrec(2);
      assertEquals((-18), resultMatrixGnuPlot0.getRowNameWidth());
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 0);
      resultMatrixCSV0.getDefaultRowNameWidth();
      assertEquals(0, resultMatrixCSV0.getColNameWidth());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.489235293972985
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 0);
      String[] stringArray0 = new String[6];
      stringArray0[0] = " ";
      stringArray0[1] = "\tThe width of the counts (0 = optimal).\n\t(default: ";
      stringArray0[2] = " ";
      stringArray0[3] = "rE9)cK:3'$s|?N3$J";
      stringArray0[4] = ")";
      stringArray0[5] = "v";
      resultMatrixPlainText0.setOptions(stringArray0);
      resultMatrixPlainText0.RIGHT_PARENTHESES = "rE9)cK:3'$s|?N3$J";
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.m_RemoveFilterName = true;
      resultMatrixGnuPlot0.toStringMatrix();
      int[][] intArray0 = new int[5][2];
      int[] intArray1 = new int[8];
      intArray1[0] = 1;
      intArray1[1] = 2;
      intArray1[2] = 1;
      intArray1[3] = 1;
      intArray1[4] = 0;
      intArray1[5] = 0;
      intArray1[6] = (-1278);
      intArray1[7] = 2;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[3];
      intArray2[0] = (-1278);
      intArray2[1] = 1;
      intArray2[2] = 0;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[2];
      intArray3[0] = 0;
      intArray3[1] = 2;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[12];
      intArray4[0] = (-1278);
      intArray4[1] = (-2864);
      intArray4[2] = 0;
      intArray4[3] = 0;
      intArray4[4] = 2;
      intArray4[5] = 2;
      intArray4[6] = (-1278);
      intArray4[7] = 2;
      intArray4[8] = 0;
      intArray0[3] = intArray4;
      int[] intArray5 = new int[0];
      intArray0[4] = intArray5;
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.setRanking(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.8034968676291525
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setCountWidth(0);
      resultMatrixLatex0.listOptions();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      int[] intArray0 = new int[1];
      intArray0[0] = 2;
      resultMatrixCSV0.m_ColNameWidth = 2415;
      resultMatrixCSV0.setColOrder(intArray0);
      int[][] intArray1 = new int[9][1];
      resultMatrixCSV0.WIN_STRING = "\tThe width of the couns ( = optimal).\n\t(default: ";
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      resultMatrixCSV0.m_ShowStdDev = true;
      int[] intArray2 = new int[2];
      intArray2[0] = 26;
      intArray2[1] = 2;
      intArray1[0] = intArray0;
      intArray1[5] = intArray0;
      intArray1[6] = intArray0;
      intArray1[7] = intArray0;
      intArray1[8] = intArray0;
      resultMatrixCSV0.setSummary(intArray1, intArray1);
      assertEquals(0, resultMatrixCSV0.getRowNameWidth());
      assertFalse(resultMatrixCSV0.getEnumerateRowNames());
      assertEquals(2, resultMatrixCSV0.getDefaultStdDevPrec());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.4930985227567706
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      stringArray0[1] = "*";
      resultMatrixPlainText0.setOptions(stringArray0);
      resultMatrixPlainText0.getDefaultMeanWidth();
      assertEquals(5, resultMatrixPlainText0.getStdDevPrec());
      
      resultMatrixGnuPlot0.toStringMatrix();
      resultMatrixGnuPlot0.setCountWidth((-823));
      resultMatrixGnuPlot0.toString();
      resultMatrixGnuPlot0.m_MeanPrec = (-3110);
      resultMatrixGnuPlot0.globalInfo();
      resultMatrixGnuPlot0.countWidthTipText();
      assertEquals(50, resultMatrixGnuPlot0.getRowNameWidth());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.996306798305616
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[][] intArray0 = new int[9][9];
      int[] intArray1 = new int[7];
      intArray1[0] = 0;
      intArray1[0] = 1;
      intArray1[2] = 1;
      intArray1[3] = 0;
      intArray1[4] = 0;
      intArray1[5] = 1612;
      intArray1[6] = 1;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[8];
      intArray2[0] = (-315);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 50);
      resultMatrixGnuPlot0.getColName(0);
      resultMatrixGnuPlot0.setEnumerateColNames(false);
      resultMatrixGnuPlot0.setRowNameWidth(95);
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.getHeader("*");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.7740207410164643
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[] intArray0 = new int[4];
      intArray0[0] = 0;
      intArray0[1] = 2;
      intArray0[2] = 1;
      intArray0[3] = 0;
      resultMatrixCSV0.setColOrder(intArray0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixCSV0);
      resultMatrixPlainText0.getRowName(1);
      resultMatrixPlainText0.getRevision();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      int[][] intArray1 = new int[7][4];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      intArray1[4] = intArray0;
      intArray1[5] = intArray0;
      intArray1[6] = intArray0;
      resultMatrixPlainText0.setRanking(intArray1);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      // Undeclared exception!
      try { 
        resultMatrixHTML0.trimString((String) null, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.0468400149943764
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setCountWidth(0);
      resultMatrixLatex0.listOptions();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      int[] intArray0 = new int[1];
      intArray0[0] = 2;
      resultMatrixCSV0.m_ColNameWidth = 2415;
      resultMatrixCSV0.setColOrder(intArray0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      boolean boolean0 = resultMatrixPlainText0.isMean(2415);
      assertFalse(boolean0);
      
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(0, 1);
      assertEquals(1, resultMatrixPlainText1.getRowCount());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      resultMatrixLatex0.m_RankingDiff = intArray0;
      String string0 = resultMatrixGnuPlot0.padString("c", 2);
      assertEquals("c ", string0);
      
      resultMatrixPlainText0.getDefaultColNameWidth();
      resultMatrixGnuPlot0.padString("", 3329);
      resultMatrixGnuPlot0.clear();
      String string1 = resultMatrixGnuPlot0.doubleToString(0.0, 0);
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals("0.", string1);
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.8322602295395347
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getColName((-2713));
      resultMatrixGnuPlot0.setEnumerateColNames(false);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      resultMatrixPlainText0.setStdDevWidth(3180);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      resultMatrixPlainText1.isMean((-2713));
      resultMatrixPlainText1.getDisplayName();
      ResultMatrixSignificance resultMatrixSignificance0 = null;
      try {
        resultMatrixSignificance0 = new ResultMatrixSignificance((-3944), (-2713));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.631612186595399
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixLatex0);
      int int0 = (-225);
      resultMatrixLatex0.setShowStdDev(true);
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.setSize((-225), (-225));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.8466796372141983
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getDisplayName();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getRevision();
      assertEquals(0, resultMatrixLatex0.getRowNameWidth());
      
      resultMatrixSignificance0.getDefaultEnumerateColNames();
      assertEquals(0, resultMatrixSignificance0.getColNameWidth());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.clear();
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultStdDevPrec());
      assertFalse(resultMatrixGnuPlot0.getShowAverage());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.8306041843274805
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[] intArray0 = new int[4];
      intArray0[0] = 0;
      intArray0[1] = 2;
      intArray0[2] = 1;
      intArray0[3] = 0;
      resultMatrixCSV0.setColOrder(intArray0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixCSV0);
      resultMatrixPlainText0.getRowName(1);
      resultMatrixPlainText0.getRevision();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      resultMatrixLatex0.getColName(1);
      // Undeclared exception!
      try { 
        resultMatrixLatex0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.9368545871820446
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setCountWidth(0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      int[] intArray0 = new int[1];
      intArray0[0] = 0;
      resultMatrixCSV0.setColOrder(intArray0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      resultMatrixPlainText0.getRowName(32);
      resultMatrixPlainText0.getRevision();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      resultMatrixLatex0.getStdDevPrec();
      resultMatrixLatex1.showStdDevTipText();
      resultMatrixLatex0.colNameWidthTipText();
      resultMatrixLatex1.getColName(7);
      resultMatrixLatex0.setSize(2, 280);
      assertEquals(280, resultMatrixLatex0.getVisibleRowCount());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.4587467947569324
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      stringArray0[1] = "*";
      resultMatrixPlainText0.setOptions(stringArray0);
      resultMatrixPlainText0.getDefaultMeanWidth();
      resultMatrixGnuPlot0.toStringMatrix();
      int int0 = (-1278);
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.setRanking((int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.52341181332675
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      resultMatrixSignificance0.getDefaultShowStdDev();
      resultMatrixSignificance0.setSignificanceWidth(1);
      resultMatrixGnuPlot0.m_EnumerateRowNames = true;
      resultMatrixGnuPlot0.toStringMatrix();
      resultMatrixGnuPlot0.isMean(2);
      resultMatrixGnuPlot0.setEnumerateRowNames(false);
      resultMatrixSignificance0.headerKeys();
      String[] stringArray0 = new String[5];
      resultMatrixGnuPlot0.m_PrintRowNames = false;
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "*";
      stringArray0[3] = "";
      stringArray0[4] = "v";
      ResultMatrixHTML.main(stringArray0);
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.setRanking((int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.264803433821175
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setCountWidth(0);
      resultMatrixLatex0.listOptions();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      int[] intArray0 = new int[1];
      intArray0[0] = 2;
      resultMatrixCSV0.m_ColNameWidth = 2415;
      resultMatrixCSV0.setColOrder(intArray0);
      int[][] intArray1 = new int[9][1];
      resultMatrixCSV0.WIN_STRING = ")";
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      resultMatrixCSV0.m_ShowStdDev = true;
      int[] intArray2 = new int[2];
      intArray2[0] = 26;
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      resultMatrixHTML0.toStringMatrix();
      ResultMatrixCSV resultMatrixCSV1 = null;
      try {
        resultMatrixCSV1 = new ResultMatrixCSV(1, (-1701));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.6023977743965854
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      resultMatrixPlainText0.setStdDevWidth(3);
      resultMatrixPlainText0.setEnumerateColNames(true);
      resultMatrixPlainText0.getDisplayName();
      resultMatrixPlainText0.getDefaultShowStdDev();
      ResultMatrixPlainText.main((String[]) null);
      resultMatrixGnuPlot0.setMeanWidth(1);
      resultMatrixGnuPlot0.setRowName(1, "*");
      resultMatrixGnuPlot0.setColNameWidth(0);
      int[][] intArray0 = new int[1][2];
      int[] intArray1 = new int[8];
      intArray1[0] = 2;
      intArray1[1] = 0;
      resultMatrixGnuPlot0.setEnumerateColNames(true);
      intArray1[2] = 0;
      intArray1[3] = 1;
      intArray1[4] = 0;
      intArray1[5] = 0;
      intArray1[6] = 0;
      intArray1[7] = 1;
      intArray0[0] = intArray1;
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.setRanking(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.251570346428138
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(26, 26);
      int int0 = 746;
      resultMatrixHTML0.setStdDevPrec(746);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.toStringKey();
      resultMatrixHTML0.getMeanWidth();
      resultMatrixGnuPlot0.toStringMatrix();
      // Undeclared exception!
      try { 
        resultMatrixHTML0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.394336786822631
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      resultMatrixGnuPlot0.getDefaultRowNameWidth();
      boolean[] booleanArray0 = new boolean[4];
      booleanArray0[0] = false;
      booleanArray0[1] = false;
      booleanArray0[2] = false;
      booleanArray0[3] = false;
      resultMatrixGnuPlot0.m_RowHidden = booleanArray0;
      resultMatrixCSV0.m_ShowStdDev = false;
      resultMatrixGnuPlot0.setStdDevPrec(2);
      resultMatrixCSV0.isMean(2);
      resultMatrixCSV0.addHeader((String) null, ")");
      resultMatrixGnuPlot0.getOptions();
      resultMatrixCSV0.setStdDev((-2376), 0, 2);
      resultMatrixGnuPlot0.getDefaultStdDevWidth();
      resultMatrixGnuPlot0.isAverage(191);
      resultMatrixPlainText0.showAverageTipText();
      int[][] intArray0 = new int[5][3];
      int[] intArray1 = new int[4];
      intArray1[0] = 2;
      intArray1[1] = 1;
      intArray1[2] = 1;
      intArray1[3] = 1;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[1];
      intArray2[0] = 50;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[8];
      intArray3[0] = 0;
      intArray3[1] = 1;
      intArray3[2] = 40;
      intArray3[3] = 0;
      intArray3[4] = 50;
      intArray3[5] = 1;
      intArray3[6] = (-2376);
      intArray3[7] = 0;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[1];
      intArray4[0] = (-1069);
      intArray0[3] = intArray4;
      int[] intArray5 = new int[6];
      intArray5[0] = 0;
      intArray5[1] = 1;
      intArray5[2] = 1;
      intArray5[3] = 191;
      intArray5[4] = 2;
      intArray5[5] = 1199;
      intArray0[4] = intArray5;
      int[][] intArray6 = new int[7][2];
      intArray6[0] = intArray5;
      intArray6[1] = intArray3;
      intArray6[2] = intArray2;
      intArray6[3] = intArray2;
      int[] intArray7 = new int[9];
      intArray7[0] = (-2376);
      intArray7[1] = 2;
      intArray7[2] = 2;
      intArray7[3] = 2;
      intArray7[4] = 2;
      intArray7[5] = 1;
      intArray7[6] = 40;
      intArray7[7] = 0;
      intArray7[8] = 2;
      intArray6[4] = intArray7;
      intArray6[5] = intArray3;
      int[] intArray8 = new int[3];
      intArray8[0] = 0;
      intArray8[1] = (-2376);
      intArray8[2] = 0;
      intArray6[6] = intArray8;
      // Undeclared exception!
      try { 
        resultMatrixCSV0.setSummary(intArray0, intArray6);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.854009371760164
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setColNameWidth((-2120));
      resultMatrixSignificance0.m_MeanWidth = (-355);
      resultMatrixSignificance0.toStringKey();
      int[] intArray0 = new int[8];
      intArray0[0] = (-1016);
      intArray0[1] = (-355);
      intArray0[2] = (-355);
      intArray0[3] = 1;
      intArray0[3] = (-355);
      intArray0[5] = (-2120);
      resultMatrixSignificance0.clearHeader();
      intArray0[6] = 1;
      intArray0[7] = (-355);
      resultMatrixSignificance0.m_RankingWins = intArray0;
      resultMatrixSignificance0.setRemoveFilterName(false);
      resultMatrixSignificance0.getColCount();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getDefaultEnumerateRowNames();
      resultMatrixSignificance0.setStdDev((-355), (-355), (-2781.265));
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.toStringKey();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.343143698369897
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.clearHeader();
      resultMatrixLatex0.getColName(880);
      resultMatrixLatex0.getDefaultShowAverage();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 178);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixGnuPlot0);
      resultMatrixGnuPlot1.getColName((-3261));
      resultMatrixGnuPlot1.getDefaultColNameWidth();
      resultMatrixLatex0.toStringRanking();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 0);
      resultMatrixSignificance0.getDefaultShowStdDev();
      resultMatrixGnuPlot0.getDefaultColNameWidth();
      resultMatrixLatex0.getRevision();
      resultMatrixGnuPlot1.meanPrecTipText();
      resultMatrixGnuPlot0.setOptions((String[]) null);
      assertEquals(0, resultMatrixGnuPlot0.getStdDevPrec());
      
      boolean boolean0 = resultMatrixSignificance0.getPrintColNames();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.648625546111829
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      // Undeclared exception!
      try { 
        resultMatrixHTML0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=3.27409810473335
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2, 0);
      resultMatrixGnuPlot0.addHeader("1#BjJ4^ALy.%Q9F%", (String) null);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.assign(resultMatrixGnuPlot0);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      resultMatrixHTML1.toStringMatrix();
      resultMatrixGnuPlot0.setMeanPrec(0);
      assertEquals(0, resultMatrixGnuPlot0.getMeanPrec());
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 0);
      resultMatrixCSV0.getDefaultRowNameWidth();
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.762136040901145
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(1, 1);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      resultMatrixCSV0.assign(resultMatrixHTML0);
      resultMatrixHTML0.getColName(2);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixLatex0.doubleToString(2, 2);
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      
      resultMatrixCSV0.getDefaultEnumerateRowNames();
      resultMatrixLatex0.m_StdDevWidth = (-3309);
      resultMatrixHTML0.toStringRanking();
      resultMatrixLatex0.listOptions();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      resultMatrixGnuPlot0.getDisplayName();
      resultMatrixLatex0.getDefaultPrintColNames();
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.8526379562735795
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(1, 1);
      resultMatrixGnuPlot0.getColName(7);
      resultMatrixGnuPlot0.setEnumerateColNames(false);
      resultMatrixGnuPlot0.setRowNameWidth((-26));
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.getHeader("y{!UYJ");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.897357129212931
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setCountWidth(0);
      resultMatrixLatex0.listOptions();
      assertEquals(0, resultMatrixLatex0.getCountWidth());
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int int0 = resultMatrixHTML0.getStdDevWidth();
      assertEquals(0, int0);
      assertFalse(resultMatrixHTML0.getShowAverage());
      assertFalse(resultMatrixHTML0.getDefaultShowStdDev());
      assertFalse(resultMatrixHTML0.getRemoveFilterName());
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
      assertEquals(2, resultMatrixHTML0.getDefaultStdDevPrec());
      assertEquals(2, resultMatrixHTML0.getDefaultMeanPrec());
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.3130245987888878
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setCountWidth(0);
      resultMatrixLatex0.listOptions();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      int[] intArray0 = new int[1];
      intArray0[0] = 2;
      resultMatrixCSV0.m_ColNameWidth = 2415;
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.assign(resultMatrixCSV0);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      resultMatrixHTML0.setPrintRowNames(false);
      resultMatrixHTML0.toStringMatrix();
      assertTrue(resultMatrixHTML0.getEnumerateRowNames());
      
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(1, 18);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(1, 737);
      resultMatrixPlainText0.getDefaultCountWidth();
      assertFalse(resultMatrixPlainText0.getShowAverage());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=3.500306524938019
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setColNameWidth((-2120));
      resultMatrixSignificance0.m_MeanWidth = (-355);
      resultMatrixSignificance0.toStringKey();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.addHeader("", "");
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.assign(resultMatrixSignificance0);
      resultMatrixHTML0.toStringMatrix();
      assertEquals((-355), resultMatrixHTML0.getMeanWidth());
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>(1)</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>(v/ /*)</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n";
      ResultMatrixGnuPlot.main(stringArray0);
      resultMatrixGnuPlot0.setCountWidth((-2120));
      String string0 = resultMatrixGnuPlot0.toString();
      assertEquals("\n##################\n# file: plot.dat #\n##################\n# generated by WEKA 3.7.7\n# contains the data for the plot\n\n# key for the x-axis\n# 1 - row0\n\n# data for the plot\n1 ''\n#######\n# end #\n#######\n\n##################\n# file: plot.scr #\n##################\n# generated by WEKA 3.7.7\n# script to plot the data\n\n# display it in a window:\nset terminal x11\nset output\n\n# to display all data rows:\nset xrange [0:2]\n\n# axis labels, e.g.:\n#set xlabel \"Datasets\"\n#set ylabel \"Accuracy in %\"\n\n# the plot commands\nplot \"plot.dat\" using 1:2 with lines title \"col0\"\n\n# generate ps:\n#set terminal postscript\n#set output \"plot.ps\"\n#replot\n\n# generate png:\n#set terminal png size 800,600\n#set output \"plot.png\"\n#replot\n\n# wait for user to hit <Return>\npause -1\n#######\n# end #\n#######\n", string0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.774342220194881
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[][] intArray0 = new int[8][3];
      int[] intArray1 = new int[2];
      intArray1[0] = 2;
      intArray1[1] = 1;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[5];
      intArray1[0] = 1;
      intArray2[1] = 2;
      intArray2[2] = 2230;
      intArray2[3] = 1;
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixLatex0.setSize(1, 1);
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      
      resultMatrixLatex0.setPrintRowNames(true);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      Vector<Integer> vector0 = new Vector<Integer>();
      resultMatrixGnuPlot0.addHeader("!JMe?f_wS3KOm({", "(");
      resultMatrixGnuPlot0.getRevision();
      resultMatrixGnuPlot0.listOptions();
      resultMatrixLatex0.getDefaultRowNameWidth();
      assertEquals(25, resultMatrixLatex0.getRowNameWidth());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      assertEquals(0, resultMatrixLatex0.getCountWidth());
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertFalse(resultMatrixLatex0.getDefaultShowAverage());
      assertFalse(resultMatrixLatex0.getDefaultEnumerateRowNames());
      assertFalse(resultMatrixLatex0.getDefaultShowStdDev());
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.791039810954727
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(1, 60);
      resultMatrixLatex0.doubleToString((-723.69717158), 60);
      int int0 = (-1);
      ResultMatrixLatex resultMatrixLatex1 = null;
      try {
        resultMatrixLatex1 = new ResultMatrixLatex(480, (-1));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.885043594753851
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setRowNameWidth(26);
      resultMatrixPlainText0.listOptions();
      resultMatrixPlainText0.setStdDevWidth(0);
      resultMatrixPlainText0.isMean(26);
      resultMatrixPlainText0.getDisplayName();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      double double0 = resultMatrixGnuPlot0.getStdDev(1, (-2198));
      assertEquals(26, resultMatrixPlainText0.getRowNameWidth());
      assertEquals(0.0, double0, 0.01);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.845638493134258
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      double[][] doubleArray0 = new double[1][5];
      double[] doubleArray1 = new double[0];
      resultMatrixHTML0.LEFT_PARENTHESES = "\tThe width of the standard deviation (0 = optimal).\n\t(default: ";
      doubleArray0[0] = doubleArray1;
      resultMatrixHTML0.m_Mean = doubleArray0;
      resultMatrixHTML0.setColNameWidth(0);
      resultMatrixHTML0.meanWidthTipText();
      resultMatrixCSV0.significanceWidthTipText();
      resultMatrixCSV0.getStdDev(27, 3161);
      resultMatrixCSV0.getDefaultStdDevWidth();
      // Undeclared exception!
      try { 
        resultMatrixCSV0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.540971900808619
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.clearHeader();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setRemoveFilterName(true);
      resultMatrixSignificance0.getDisplayName();
      assertEquals(1, resultMatrixSignificance0.getColCount());
      
      String[] stringArray0 = new String[3];
      stringArray0[0] = "(";
      stringArray0[1] = "*";
      resultMatrixCSV0.doubleToString((-305.76855837249), 0);
      stringArray0[2] = "Significance only";
      resultMatrixSignificance0.m_ColNames = stringArray0;
      resultMatrixCSV0.getStdDev(0, (-273));
      resultMatrixSignificance0.setRemoveFilterName(true);
      String[] stringArray1 = new String[7];
      stringArray1[0] = " ";
      stringArray1[1] = "*";
      stringArray1[2] = " ";
      stringArray1[3] = "Significance only";
      stringArray1[4] = " ";
      stringArray1[5] = "v";
      stringArray1[6] = "]";
      ResultMatrixSignificance.main(stringArray1);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(2, 1);
      resultMatrixHTML0.getDefaultPrintColNames();
      resultMatrixSignificance0.addHeader("[", "");
      assertEquals(0, resultMatrixSignificance0.getSignificanceWidth());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.2673290673038835
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setColNameWidth((-1813));
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      int[][] intArray0 = new int[1][9];
      int[] intArray1 = new int[6];
      intArray1[0] = 1;
      intArray1[1] = 0;
      intArray1[2] = 1;
      intArray1[3] = 0;
      intArray1[4] = 1;
      intArray1[5] = 1;
      intArray0[0] = intArray1;
      resultMatrixGnuPlot0.m_Significance = intArray0;
      resultMatrixSignificance0.toStringMatrix();
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=3.171416772459159
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getOptions();
      resultMatrixSignificance0.setColNameWidth((-2120));
      resultMatrixSignificance0.m_MeanWidth = (-355);
      Vector<Vector<Object>> vector0 = new Vector<Vector<Object>>();
      resultMatrixSignificance0.m_HeaderKeys = vector0;
      int[] intArray0 = new int[8];
      intArray0[1] = (-355);
      intArray0[2] = (-355);
      intArray0[3] = 1;
      intArray0[3] = (-355);
      intArray0[5] = (-2120);
      vector0.remove((Object) resultMatrixSignificance0);
      intArray0[7] = (-355);
      resultMatrixSignificance0.m_MeanWidth = 1336;
      resultMatrixSignificance0.m_RankingWins = intArray0;
      resultMatrixSignificance0.setRemoveFilterName(false);
      resultMatrixSignificance0.getColCount();
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.toStringKey();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=3.321415315418919
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      assertEquals(18, stringArray0.length);
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.assign(resultMatrixCSV0);
      assertEquals(25, resultMatrixHTML0.getRowNameWidth());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
      
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      resultMatrixHTML1.clearRanking();
      assertEquals(1, resultMatrixHTML1.getVisibleColCount());
      
      String string0 = resultMatrixHTML1.toStringMatrix();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>(1)</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>(v/ /*)</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string0);
      
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(894, 1);
      assertEquals(2, resultMatrixCSV1.getMeanPrec());
      assertEquals(0, resultMatrixCSV1.getSignificanceWidth());
      assertEquals(0, resultMatrixCSV1.getStdDevWidth());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=3.2373668210508075
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 0);
      resultMatrixSignificance0.setStdDevWidth(0);
      resultMatrixSignificance0.addHeader("", "o#8W+h/y_BG*N=O");
      resultMatrixSignificance0.m_CountWidth = 0;
      resultMatrixSignificance0.setPrintRowNames(false);
      resultMatrixSignificance0.m_ShowAverage = false;
      resultMatrixSignificance0.getDefaultRowNameWidth();
      resultMatrixSignificance0.getVisibleColCount();
      resultMatrixSignificance0.getEnumerateColNames();
      resultMatrixSignificance0.enumerateColNamesTipText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixSignificance0);
      Vector<Object> vector0 = new Vector<Object>();
      resultMatrixCSV0.m_HeaderValues = vector0;
      resultMatrixCSV0.TIE_STRING = " | ";
      resultMatrixCSV0.getDefaultRowNameWidth();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(40, 2);
      resultMatrixPlainText0.doubleToString(0, 0);
      resultMatrixPlainText0.RIGHT_PARENTHESES = "";
      resultMatrixPlainText0.getRevision();
      int int0 = 26;
      resultMatrixPlainText0.padString("o,f0PEX;b>", 2);
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        vector0.insertElementAt(object0, 2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2 > 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=3.0829126413850387
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.TIE_STRING = "uJi;-.Xe1S";
      int int0 = 203;
      resultMatrixGnuPlot0.setStdDevPrec(203);
      resultMatrixGnuPlot0.m_EnumerateRowNames = false;
      resultMatrixGnuPlot0.getDefaultRowNameWidth();
      resultMatrixGnuPlot0.setSignificanceWidth(203);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.m_PrintRowNames = false;
      resultMatrixPlainText0.setCountWidth(762);
      int int1 = 222;
      resultMatrixGnuPlot0.setStdDevPrec(222);
      resultMatrixPlainText0.setMeanPrec(1);
      resultMatrixPlainText0.m_PrintColNames = false;
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=3.2314627901871087
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 0);
      boolean[] booleanArray0 = new boolean[5];
      booleanArray0[0] = true;
      booleanArray0[1] = false;
      int[] intArray0 = new int[9];
      intArray0[0] = 2;
      resultMatrixLatex0.clearHeader();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      resultMatrixLatex1.getDisplayCol((-1));
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 0);
      resultMatrixSignificance0.setPrintColNames(false);
      resultMatrixSignificance0.toStringSummary();
      resultMatrixLatex0.assign(resultMatrixSignificance0);
      resultMatrixSignificance0.getDisplayName();
      resultMatrixLatex1.setMeanPrec(0);
      // Undeclared exception!
      try { 
        resultMatrixLatex1.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=3.563362488335693
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getOptions();
      resultMatrixCSV0.setMeanWidth(894);
      resultMatrixCSV0.setEnumerateColNames(true);
      String string0 = resultMatrixCSV0.getSummaryTitle((-287));
      assertEquals("`", string0);
      
      resultMatrixCSV0.printColNamesTipText();
      resultMatrixCSV0.getDefaultPrintColNames();
      resultMatrixCSV0.removeFilterNameTipText();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(1, 231);
      assertEquals(231, resultMatrixLatex0.getVisibleRowCount());
      
      resultMatrixLatex0.toArray();
      resultMatrixLatex0.RIGHT_PARENTHESES = "qlLX42x?]]_\"@";
      resultMatrixLatex0.getDefaultPrintColNames();
      int int0 = resultMatrixCSV0.getMeanPrec();
      assertEquals(2, int0);
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      String string1 = resultMatrixPlainText0.toStringMatrix();
      assertEquals("Dataset                   (1) col0 \n-----------------------------------\nrow0                       (0)    |\n-----------------------------------\n(v/ /*)                           |\n", string1);
      
      resultMatrixPlainText0.getDisplayName();
      resultMatrixPlainText0.toArray();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      Vector<Object> vector0 = new Vector<Object>();
      resultMatrixHTML0.setEnumerateColNames(true);
      resultMatrixHTML0.m_HeaderValues = vector0;
      resultMatrixHTML0.toStringSummary();
      int int1 = ResultMatrix.SIGNIFICANCE_TIE;
      resultMatrixPlainText0.setPrintRowNames(true);
      resultMatrixHTML0.getSignificanceWidth();
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=3.314852882612475
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      resultMatrixPlainText0.getDisplayName();
      assertEquals(1, resultMatrixPlainText0.getVisibleColCount());
      
      String string0 = resultMatrixGnuPlot0.toStringMatrix();
      assertEquals("\n##################\n# file: plot.dat #\n##################\n# generated by WEKA 3.7.7\n# contains the data for the plot\n\n# key for the x-axis\n# 1 - row0\n\n# data for the plot\n1 ''\n#######\n# end #\n#######\n\n##################\n# file: plot.scr #\n##################\n# generated by WEKA 3.7.7\n# script to plot the data\n\n# display it in a window:\nset terminal x11\nset output\n\n# to display all data rows:\nset xrange [0:2]\n\n# axis labels, e.g.:\n#set xlabel \"Datasets\"\n#set ylabel \"Accuracy in %\"\n\n# the plot commands\nplot \"plot.dat\" using 1:2 with lines title \"col0\"\n\n# generate ps:\n#set terminal postscript\n#set output \"plot.ps\"\n#replot\n\n# generate png:\n#set terminal png size 800,600\n#set output \"plot.png\"\n#replot\n\n# wait for user to hit <Return>\npause -1\n#######\n# end #\n#######\n", string0);
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      resultMatrixGnuPlot0.setSignificanceWidth((-1934));
      resultMatrixHTML0.RIGHT_PARENTHESES = "Plain Text";
      resultMatrixHTML0.getDefaultPrintColNames();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixGnuPlot0.toStringSummary();
      resultMatrixPlainText0.m_EnumerateRowNames = false;
      resultMatrixSignificance0.getDefaultShowStdDev();
      resultMatrixGnuPlot0.LOSS_STRING = "v";
      resultMatrixPlainText0.getSignificanceCount(0, (-2041));
      resultMatrixPlainText0.getRevision();
      resultMatrixSignificance0.toStringRanking();
      resultMatrixHTML0.getDefaultMeanPrec();
      resultMatrixGnuPlot0.getEnumerateColNames();
      resultMatrixGnuPlot0.getCount(45);
      resultMatrixGnuPlot0.isSignificance(0);
      resultMatrixHTML0.getDefaultEnumerateColNames();
      resultMatrixSignificance0.getDisplayName();
      int int0 = resultMatrixHTML0.getMeanPrec();
      assertEquals(2, int0);
      
      resultMatrixPlainText0.clearRanking();
      resultMatrixPlainText0.setMean(0, (-1934), 178.37);
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertTrue(resultMatrixPlainText0.getPrintRowNames());
      assertEquals(50, resultMatrixGnuPlot0.getColNameWidth());
      
      String[][] stringArray0 = new String[7][4];
      String[] stringArray1 = new String[0];
      stringArray0[0] = stringArray1;
      String[] stringArray2 = new String[0];
      stringArray0[1] = stringArray2;
      String[] stringArray3 = new String[7];
      stringArray3[0] = "";
      stringArray3[1] = "";
      stringArray3[2] = " ";
      stringArray3[3] = "v";
      stringArray3[4] = " ";
      stringArray3[5] = "*";
      stringArray3[6] = "*";
      stringArray0[2] = stringArray3;
      String[] stringArray4 = new String[9];
      stringArray4[0] = " ";
      stringArray4[1] = "v";
      stringArray4[2] = "*";
      stringArray4[3] = " ";
      stringArray4[4] = "v";
      stringArray4[5] = "";
      stringArray4[6] = " ";
      stringArray4[7] = "Significance only";
      stringArray4[8] = "";
      stringArray0[3] = stringArray4;
      String[] stringArray5 = new String[2];
      stringArray5[0] = "v";
      stringArray5[1] = "v";
      stringArray0[4] = stringArray5;
      String[] stringArray6 = new String[7];
      stringArray6[0] = " ";
      stringArray6[1] = "8034";
      stringArray6[2] = "";
      stringArray6[3] = "";
      stringArray6[4] = "v";
      stringArray6[5] = "\n3. cols numbered\n";
      stringArray6[6] = "*";
      stringArray0[5] = stringArray6;
      String[] stringArray7 = new String[9];
      stringArray7[0] = "v";
      stringArray7[1] = " ";
      stringArray7[2] = "v";
      stringArray7[3] = "Plain Text";
      stringArray7[4] = "";
      stringArray7[5] = "";
      stringArray7[6] = "";
      stringArray7[7] = " ";
      stringArray7[8] = "";
      stringArray0[6] = stringArray7;
      resultMatrixSignificance0.getColSize(stringArray0, 1, false, false);
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=3.364418238872693
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getOptions();
      int int0 = 894;
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.assign(resultMatrixCSV0);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(1, 894);
      // Undeclared exception!
      resultMatrixHTML1.toStringMatrix();
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.9552088755878536
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getColName((-2691));
      resultMatrixGnuPlot0.setMeanPrec(1876);
      resultMatrixGnuPlot0.listOptions();
      resultMatrixGnuPlot0.toStringKey();
      resultMatrixGnuPlot0.setStdDevPrec((-2691));
      resultMatrixGnuPlot0.setEnumerateColNames(false);
      resultMatrixGnuPlot0.setRowNameWidth(1);
      resultMatrixGnuPlot0.WIN_STRING = "Key:\n1 col0\n";
      resultMatrixGnuPlot0.m_RemoveFilterName = true;
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.getHeader("*");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=3.1509699624985004
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getShowAverage();
      String string0 = resultMatrixHTML0.toStringMatrix();
      assertEquals(0, resultMatrixHTML0.getColNameWidth());
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>(1)</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>(v/ /*)</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string0);
      assertEquals(2, resultMatrixHTML0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=3.2747877157184844
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.listOptions();
      resultMatrixHTML0.m_PrintRowNames = false;
      resultMatrixHTML0.toArray();
      resultMatrixHTML0.setSignificanceWidth(0);
      resultMatrixHTML0.getRowHidden(0);
      resultMatrixHTML0.getVisibleColCount();
      resultMatrixHTML0.toStringRanking();
      resultMatrixHTML0.m_Wins = null;
      resultMatrixHTML0.padString("-ranking data not set-", 1, true);
      assertFalse(resultMatrixHTML0.getPrintRowNames());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      String string0 = resultMatrixGnuPlot0.toStringMatrix();
      assertEquals("\n##################\n# file: plot.dat #\n##################\n# generated by WEKA 3.7.7\n# contains the data for the plot\n\n# key for the x-axis\n# 1 - row0\n\n# data for the plot\n1 ''\n#######\n# end #\n#######\n\n##################\n# file: plot.scr #\n##################\n# generated by WEKA 3.7.7\n# script to plot the data\n\n# display it in a window:\nset terminal x11\nset output\n\n# to display all data rows:\nset xrange [0:2]\n\n# axis labels, e.g.:\n#set xlabel \"Datasets\"\n#set ylabel \"Accuracy in %\"\n\n# the plot commands\nplot \"plot.dat\" using 1:2 with lines title \"col0\"\n\n# generate ps:\n#set terminal postscript\n#set output \"plot.ps\"\n#replot\n\n# generate png:\n#set terminal png size 800,600\n#set output \"plot.png\"\n#replot\n\n# wait for user to hit <Return>\npause -1\n#######\n# end #\n#######\n", string0);
      
      resultMatrixGnuPlot0.setPrintColNames(false);
      resultMatrixGnuPlot0.enumerateColNamesTipText();
      assertEquals(50, resultMatrixGnuPlot0.getRowNameWidth());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=3.072032334726324
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      int int0 = (-1);
      resultMatrixLatex0.setCountWidth((-1));
      resultMatrixLatex0.listOptions();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      int[] intArray0 = new int[1];
      intArray0[0] = 2;
      int int1 = 2415;
      resultMatrixCSV0.m_ColNameWidth = 2415;
      resultMatrixCSV0.setColOrder(intArray0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.toStringKey();
      resultMatrixGnuPlot0.setStdDevPrec(1);
      resultMatrixGnuPlot0.setEnumerateColNames(true);
      resultMatrixGnuPlot0.setRowNameWidth((-1));
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.getHeader("dUFPFaq");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.6969008500088405
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.m_EnumerateRowNames = true;
      resultMatrixSignificance0.getShowAverage();
      resultMatrixSignificance0.padString("\n3. cols numbered\n", (-1512), true);
      assertEquals(1, resultMatrixSignificance0.getColCount());
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixSignificance0);
      resultMatrixCSV0.setStdDevPrec(1791);
      resultMatrixCSV0.globalInfo();
      assertEquals(1791, resultMatrixCSV0.getStdDevPrec());
      assertEquals(1, resultMatrixSignificance0.getRowCount());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=3.582378126202418
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getOptions();
      resultMatrixCSV0.setMeanWidth(894);
      resultMatrixCSV0.setEnumerateColNames(true);
      resultMatrixCSV0.getSummaryTitle((-287));
      resultMatrixCSV0.printColNamesTipText();
      resultMatrixCSV0.getDefaultPrintColNames();
      resultMatrixCSV0.removeFilterNameTipText();
      assertEquals(894, resultMatrixCSV0.getMeanWidth());
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(1, 231);
      resultMatrixLatex0.toArray();
      resultMatrixLatex0.RIGHT_PARENTHESES = "qlLX42x?]]_\"@";
      resultMatrixLatex0.getDefaultPrintColNames();
      int int0 = ResultMatrix.SIGNIFICANCE_TIE;
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.toStringMatrix();
      resultMatrixPlainText0.getDisplayName();
      resultMatrixPlainText0.toArray();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixPlainText0);
      Vector<Object> vector0 = new Vector<Object>();
      resultMatrixHTML0.setEnumerateColNames(true);
      resultMatrixHTML0.m_HeaderValues = vector0;
      resultMatrixHTML0.toStringSummary();
      resultMatrixPlainText0.setPrintRowNames(true);
      int int1 = resultMatrixHTML0.getSignificanceWidth();
      assertEquals(0, int1);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.953087777564706
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setRowNameWidth(26);
      resultMatrixPlainText0.listOptions();
      resultMatrixPlainText0.setStdDevWidth(0);
      resultMatrixPlainText0.isMean(26);
      resultMatrixPlainText0.getDisplayName();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      resultMatrixGnuPlot0.padString("VOZaw", 450);
      resultMatrixPlainText0.getDefaultColNameWidth();
      resultMatrixGnuPlot0.padString("g*%A:e;\"Uqe]/GUSw$W", 26);
      resultMatrixGnuPlot0.clear();
      assertEquals(26, resultMatrixPlainText0.getRowNameWidth());
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.991361617329363
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setColNameWidth(95);
      resultMatrixPlainText0.getColOrder();
      resultMatrixPlainText0.getVisibleColCount();
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.padString((String) null, 1, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=3.2463841835536598
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 0);
      boolean[] booleanArray0 = new boolean[5];
      booleanArray0[0] = true;
      booleanArray0[1] = false;
      int[] intArray0 = new int[9];
      intArray0[0] = 2;
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 2;
      intArray0[4] = 0;
      intArray0[5] = 2;
      intArray0[6] = 0;
      intArray0[7] = 1;
      intArray0[8] = 480;
      resultMatrixLatex0.m_RankingWins = intArray0;
      booleanArray0[2] = false;
      booleanArray0[3] = true;
      booleanArray0[4] = true;
      resultMatrixLatex0.m_ColHidden = booleanArray0;
      resultMatrixLatex0.m_RowHidden = booleanArray0;
      resultMatrixLatex0.doubleToString(0, 0);
      resultMatrixLatex0.getDefaultRemoveFilterName();
      resultMatrixLatex0.getEnumerateRowNames();
      resultMatrixLatex0.m_RemoveFilterName = false;
      resultMatrixLatex0.setShowAverage(false);
      resultMatrixLatex0.setStdDevPrec(0);
      resultMatrixLatex0.getSummaryTitle(4539);
      resultMatrixLatex0.getStdDevPrec();
      resultMatrixLatex0.showStdDevTipText();
      resultMatrixLatex0.colNameWidthTipText();
      resultMatrixLatex0.getColName((-3583));
      resultMatrixLatex0.setSize(0, 234);
      assertEquals(234, resultMatrixLatex0.getVisibleRowCount());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=3.521275665581366
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      stringArray0[1] = "*";
      resultMatrixPlainText0.setOptions(stringArray0);
      resultMatrixPlainText0.getDefaultMeanWidth();
      resultMatrixGnuPlot0.toStringMatrix();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      resultMatrixHTML0.assign(resultMatrixHTML1);
      resultMatrixHTML0.toStringMatrix();
      ResultMatrixCSV resultMatrixCSV0 = null;
      try {
        resultMatrixCSV0 = new ResultMatrixCSV(1, (-1383));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=3.4776648817417284
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(1, 1);
      resultMatrixGnuPlot0.addHeader("", (String) null);
      resultMatrixGnuPlot0.m_RowNameWidth = 1;
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.assign(resultMatrixGnuPlot0);
      resultMatrixHTML0.toStringMatrix();
      String[] stringArray0 = new String[0];
      ResultMatrixGnuPlot.main(stringArray0);
      resultMatrixGnuPlot0.setCountWidth(31);
      resultMatrixGnuPlot0.toString();
      assertEquals(1, resultMatrixGnuPlot0.getRowNameWidth());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.9458755173797666
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setShowAverage(true);
      resultMatrixLatex0.setCountWidth(0);
      resultMatrixLatex0.listOptions();
      resultMatrixLatex0.setSize(0, 0);
      resultMatrixLatex0.setPrintRowNames(true);
      resultMatrixLatex0.m_PrintRowNames = true;
      Vector<Integer> vector0 = new Vector<Integer>();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      vector0.removeAll(linkedList0);
      resultMatrixLatex0.m_HeaderKeys = vector0;
      assertTrue(resultMatrixLatex0.getShowAverage());
      assertEquals(0, resultMatrixLatex0.getVisibleColCount());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.89691999910395
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      resultMatrixSignificance0.removeFilterName("m.eD8-9E+p,y$[vu4UV");
      resultMatrixPlainText0.getDisplayName();
      resultMatrixSignificance0.getDisplayName();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 0);
      // Undeclared exception!
      try { 
        resultMatrixLatex0.toStringMatrix();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=3.052372499429948
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixLatex0.m_SignificanceWidth = 114;
      int[] intArray0 = new int[2];
      intArray0[0] = 2;
      intArray0[1] = 0;
      resultMatrixPlainText0.m_RankingDiff = intArray0;
      resultMatrixLatex0.assign(resultMatrixPlainText0);
      resultMatrixLatex0.toStringKey();
      resultMatrixLatex0.m_StdDevPrec = (-3007);
      resultMatrixLatex0.clearHeader();
      resultMatrixLatex0.m_SignificanceWidth = 0;
      resultMatrixLatex0.getDisplayCol(0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 1);
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = 0.0;
      resultMatrixPlainText0.getRowName((-3007));
      resultMatrixPlainText0.getRevision();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      ResultMatrixLatex resultMatrixLatex2 = new ResultMatrixLatex(resultMatrixLatex1);
      // Undeclared exception!
      try { 
        resultMatrixLatex2.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=3.5972221592081968
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      assertEquals(18, stringArray0.length);
      
      resultMatrixCSV0.setMeanWidth(894);
      resultMatrixCSV0.setEnumerateColNames(true);
      String string0 = resultMatrixCSV0.getSummaryTitle((-287));
      assertEquals("`", string0);
      
      resultMatrixCSV0.printColNamesTipText();
      resultMatrixCSV0.getDefaultPrintColNames();
      resultMatrixCSV0.removeFilterNameTipText();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(1, 231);
      String[][] stringArray1 = resultMatrixLatex0.toArray();
      assertEquals(233, stringArray1.length);
      
      resultMatrixLatex0.RIGHT_PARENTHESES = "qlLX42x?]]_\"@";
      resultMatrixLatex0.getDefaultPrintColNames();
      int int0 = resultMatrixCSV0.getMeanPrec();
      assertEquals(2, int0);
      assertTrue(resultMatrixCSV0.getEnumerateColNames());
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      String string1 = resultMatrixPlainText0.toStringMatrix();
      assertEquals("Dataset                   (1) col0 \n-----------------------------------\nrow0                       (0)    |\n-----------------------------------\n(v/ /*)                           |\n", string1);
      
      resultMatrixPlainText0.getDisplayName();
      resultMatrixPlainText0.toArray();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixPlainText0);
      Vector<Object> vector0 = new Vector<Object>();
      resultMatrixHTML0.m_HeaderValues = vector0;
      resultMatrixHTML0.toStringSummary();
      resultMatrixHTML0.getDefaultSignificanceWidth();
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
      assertTrue(resultMatrixHTML0.getPrintRowNames());
      assertTrue(resultMatrixHTML0.getEnumerateColNames());
      assertEquals(5, resultMatrixHTML0.getCountWidth());
      assertFalse(resultMatrixHTML0.getEnumerateRowNames());
      
      resultMatrixPlainText0.setPrintRowNames(true);
      assertEquals(0, resultMatrixPlainText0.getColNameWidth());
      
      resultMatrixLatex0.setColOrder((int[]) null);
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.9808777308924803
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 0);
      resultMatrixHTML0.isStdDev(0);
      double[][] doubleArray0 = new double[0][3];
      resultMatrixHTML0.m_StdDev = doubleArray0;
      resultMatrixHTML0.getDefaultSignificanceWidth();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      Vector<Integer> vector0 = new Vector<Integer>();
      resultMatrixPlainText0.m_HeaderValues = vector0;
      resultMatrixPlainText0.clearHeader();
      vector0.add((Integer) 2);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      resultMatrixCSV0.toStringSummary();
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertEquals(0, resultMatrixHTML0.getRowCount());
      assertEquals(0, resultMatrixCSV0.getColCount());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=3.2474824703049774
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setRowNameWidth(26);
      resultMatrixPlainText0.listOptions();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.assign(resultMatrixPlainText0);
      resultMatrixHTML0.toStringMatrix();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 2);
      ResultMatrixCSV resultMatrixCSV1 = null;
      try {
        resultMatrixCSV1 = new ResultMatrixCSV((-2542), 2);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.8667812625538898
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      int int0 = 0;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(5, 0);
      resultMatrixSignificance0.toStringSummary();
      resultMatrixSignificance0.clearSummary();
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.getHeader("-summary data not set-");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.5986051779973063
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[] intArray0 = new int[7];
      intArray0[0] = 0;
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixSignificance0);
      resultMatrixCSV0.setColOrder(intArray0);
      assertTrue(resultMatrixCSV0.getEnumerateColNames());
      assertEquals(40, resultMatrixCSV0.getRowNameWidth());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertEquals(1, resultMatrixCSV0.getColCount());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertTrue(resultMatrixCSV0.getDefaultPrintRowNames());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(1, resultMatrixCSV0.getRowCount());
      assertEquals(0, resultMatrixCSV0.getDefaultColNameWidth());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.8466796372141983
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int int0 = (-2713);
      resultMatrixGnuPlot0.getColName((-2713));
      resultMatrixGnuPlot0.setEnumerateColNames(false);
      resultMatrixGnuPlot0.setRowNameWidth(0);
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.getHeader("# file: plot.scr #\n");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=3.1220184985197488
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixPlainText0);
      resultMatrixPlainText0.assign(resultMatrixHTML0);
      resultMatrixPlainText0.rowNameWidthTipText();
      int[][] intArray0 = new int[9][9];
      int[] intArray1 = new int[8];
      intArray1[0] = 0;
      intArray1[1] = 0;
      intArray1[2] = 2;
      intArray1[3] = 2;
      intArray1[4] = 1;
      intArray1[5] = 1;
      intArray1[6] = 2;
      intArray1[7] = 2;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[7];
      intArray2[0] = 2;
      intArray2[1] = 0;
      intArray2[2] = 2;
      intArray2[3] = 2;
      intArray2[4] = 1;
      intArray2[5] = 2;
      intArray2[6] = 0;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[9];
      intArray3[0] = 0;
      intArray3[1] = 0;
      intArray3[2] = (-287);
      intArray3[3] = 2;
      intArray3[4] = 2;
      intArray3[5] = 2;
      intArray3[6] = 2;
      intArray3[7] = 2;
      intArray3[8] = 0;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[5];
      intArray4[0] = 0;
      intArray4[1] = (-3522);
      intArray4[2] = 0;
      intArray4[3] = 2;
      intArray4[4] = 1;
      intArray0[3] = intArray4;
      int[] intArray5 = new int[4];
      intArray5[0] = 1;
      intArray5[1] = 1;
      intArray5[2] = 1;
      intArray5[3] = 1;
      intArray0[4] = intArray5;
      int[] intArray6 = new int[8];
      intArray6[0] = 0;
      intArray6[1] = 1;
      intArray6[2] = 2;
      intArray6[3] = 0;
      intArray6[4] = (-287);
      intArray6[5] = 2;
      intArray6[6] = (-3522);
      intArray6[7] = 0;
      intArray0[5] = intArray6;
      int[] intArray7 = new int[6];
      intArray7[0] = 1;
      intArray7[1] = 2;
      intArray7[2] = 0;
      intArray7[3] = 0;
      intArray7[4] = 0;
      intArray7[5] = 2;
      intArray0[6] = intArray7;
      int[] intArray8 = new int[0];
      intArray0[7] = intArray8;
      int[] intArray9 = new int[4];
      intArray9[0] = (-3522);
      intArray9[1] = 1;
      intArray9[2] = 1;
      intArray9[3] = 102;
      intArray0[8] = intArray9;
      resultMatrixPlainText0.setRanking(intArray0);
      String string0 = resultMatrixHTML0.trimString("v", 0);
      assertEquals("v", string0);
      
      resultMatrixHTML0.getRemoveFilterName();
      resultMatrixPlainText0.showAverageTipText();
      assertEquals(0, resultMatrixPlainText0.getRowCount());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      assertTrue(resultMatrixPlainText0.getPrintColNames());
      assertEquals(25, resultMatrixPlainText0.getRowNameWidth());
      assertEquals(5, resultMatrixPlainText0.getCountWidth());
      assertFalse(resultMatrixPlainText0.getEnumerateRowNames());
      assertEquals(0, resultMatrixPlainText0.getColCount());
      assertTrue(resultMatrixPlainText0.getEnumerateColNames());
      assertFalse(resultMatrixPlainText0.getShowStdDev());
      assertEquals(2, resultMatrixPlainText0.getDefaultStdDevPrec());
      assertTrue(resultMatrixPlainText0.getPrintRowNames());
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=3.6023977743965854
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      resultMatrixPlainText0.setStdDevWidth(3);
      resultMatrixPlainText0.setEnumerateColNames(true);
      resultMatrixPlainText0.getDisplayName();
      ResultMatrixPlainText.main((String[]) null);
      resultMatrixGnuPlot0.setMeanWidth(1);
      resultMatrixGnuPlot0.setRowName(1, "*");
      resultMatrixGnuPlot0.setColNameWidth(0);
      int[][] intArray0 = new int[1][2];
      int[] intArray1 = new int[8];
      intArray1[0] = 3;
      intArray1[1] = 0;
      resultMatrixGnuPlot0.setEnumerateColNames(true);
      intArray1[2] = 0;
      intArray1[3] = 1;
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.setRanking(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.8745604126342745
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixPlainText0);
      resultMatrixPlainText0.assign(resultMatrixHTML0);
      resultMatrixPlainText0.rowNameWidthTipText();
      int[][] intArray0 = new int[9][9];
      int[] intArray1 = new int[8];
      intArray1[0] = 0;
      intArray1[1] = 0;
      intArray1[2] = 2;
      intArray1[3] = 2;
      intArray1[4] = 1;
      intArray1[5] = 1;
      intArray1[6] = 2;
      intArray1[7] = 2;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[7];
      intArray2[0] = 2;
      intArray2[1] = 0;
      intArray2[2] = 2;
      intArray2[3] = 2;
      intArray2[4] = 1;
      intArray2[5] = 2;
      intArray2[6] = 0;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[9];
      intArray3[0] = 0;
      intArray3[1] = 0;
      int int0 = (-287);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      ResultMatrixHTML resultMatrixHTML2 = new ResultMatrixHTML(resultMatrixHTML0);
      resultMatrixHTML2.assign(resultMatrixHTML1);
      // Undeclared exception!
      try { 
        resultMatrixHTML0.toStringMatrix();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=3.2750539020289247
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.toArray();
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      resultMatrixCSV0.m_RowNames = stringArray0;
      int int0 = 894;
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.m_MeanPrec = 13;
      // Undeclared exception!
      try { 
        resultMatrixHTML0.assign(resultMatrixCSV0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.7184804374555256
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[][] intArray0 = new int[9][9];
      int[] intArray1 = new int[7];
      intArray1[0] = 0;
      intArray1[0] = 1;
      intArray1[2] = 1;
      intArray1[3] = 0;
      intArray1[4] = 0;
      intArray1[5] = 1612;
      intArray1[6] = 1;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[8];
      intArray2[0] = (-315);
      intArray2[1] = 0;
      intArray2[2] = 0;
      intArray2[3] = 0;
      intArray2[4] = (-1);
      intArray2[5] = 2;
      intArray2[6] = 1;
      intArray2[7] = 1410;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[9];
      intArray3[0] = 0;
      intArray3[1] = 1612;
      intArray3[2] = 0;
      intArray3[3] = 0;
      intArray3[4] = (-315);
      intArray3[5] = (-315);
      intArray3[6] = (-315);
      intArray3[7] = 0;
      intArray3[8] = 0;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[8];
      intArray4[0] = 1410;
      intArray4[1] = (-1);
      intArray4[2] = 2;
      intArray4[3] = (-4743);
      intArray4[4] = (-1);
      intArray4[5] = 40;
      intArray4[6] = 0;
      intArray4[7] = 2;
      intArray0[3] = intArray4;
      int[] intArray5 = new int[4];
      intArray5[0] = 0;
      intArray5[1] = 0;
      intArray5[2] = 0;
      intArray5[3] = 2;
      intArray0[4] = intArray5;
      int[] intArray6 = new int[8];
      intArray6[0] = (-1045);
      intArray6[1] = 1141;
      intArray6[2] = (-1);
      intArray6[3] = 2;
      intArray6[4] = 0;
      intArray6[5] = 0;
      intArray6[6] = 1410;
      intArray6[7] = 0;
      intArray0[5] = intArray6;
      int[] intArray7 = new int[5];
      intArray7[0] = 0;
      intArray7[1] = 2;
      intArray7[2] = (-1);
      intArray7[3] = (-1);
      intArray7[4] = (-1);
      intArray0[6] = intArray7;
      int[] intArray8 = new int[2];
      intArray8[0] = (-1625);
      intArray8[1] = 0;
      intArray0[7] = intArray8;
      int[] intArray9 = new int[9];
      intArray9[0] = 0;
      intArray9[1] = 1;
      intArray9[2] = 0;
      intArray9[3] = 0;
      intArray9[4] = 0;
      intArray9[5] = 97;
      intArray9[6] = 1;
      intArray9[7] = 40;
      intArray9[8] = 0;
      intArray0[6] = intArray9;
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.setSummary(intArray0, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }
}
