/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 17:30:45 GMT 2019
 */

package net.sf.xbus.protocol.records;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ibm.wsdl.BindingImpl;
import java.io.IOException;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.net.URI;
import java.net.URL;
import java.util.Hashtable;
import java.util.function.BiFunction;
import javax.xml.namespace.QName;
import javax.xml.soap.SOAPElement;
import net.sf.xbus.base.bytearraylist.ByteArrayList;
import net.sf.xbus.base.xbussystem.XBUSSystem;
import net.sf.xbus.protocol.records.RecordTypeMessage;
import org.apache.axis.Message;
import org.apache.axis.SOAPPart;
import org.apache.axis.configuration.DirProvider;
import org.apache.axis.deployment.wsdd.WSDDJAXRPCHandlerInfoChain;
import org.apache.axis.deployment.wsdd.WSDDRequestFlow;
import org.apache.axis.deployment.wsdd.WSDDService;
import org.apache.axis.message.Detail;
import org.apache.axis.message.SOAPEnvelope;
import org.apache.axis.schema.SchemaVersion;
import org.apache.axis.schema.SchemaVersion2000;
import org.apache.axis.soap.SOAP11Constants;
import org.apache.axis.soap.SOAP12Constants;
import org.apache.axis.soap.SOAPConstants;
import org.apache.commons.httpclient.ConnectMethod;
import org.apache.commons.httpclient.HostConfiguration;
import org.apache.commons.httpclient.util.HttpURLConnection;
import org.apache.html.dom.HTMLDocumentImpl;
import org.apache.xerces.dom.DeferredDocumentImpl;
import org.apache.xerces.dom.DocumentTypeImpl;
import org.apache.xerces.dom.ElementDefinitionImpl;
import org.apache.xerces.dom.PSVIDocumentImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.w3c.dom.DOMException;
import org.w3c.dom.Document;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RecordTypeMessage_ESTest extends RecordTypeMessage_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      XBUSSystem xBUSSystem0 = null;
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("UL", (XBUSSystem) null, "_any");
      FileSystemHandling.shouldAllThrowIOExceptions();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      recordTypeMessage0.getRequestText((XBUSSystem) null);
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(true);
      deferredDocumentImpl0.setInputEncoding("");
      // Undeclared exception!
      try { 
        recordTypeMessage0.setResponseDocument(deferredDocumentImpl0, (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xerces.dom.DeferredDocumentImpl", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.7741057932992024
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = "";
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      ByteArrayList byteArrayList0 = new ByteArrayList();
      byte[] byteArray0 = new byte[2];
      byteArrayList0.add(byteArray0);
      // Undeclared exception!
      try { 
        recordTypeMessage0.setResponseObject(byteArrayList0, (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.xbus.protocol.xml.XMLMessageAbstract", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("_any", (XBUSSystem) null, "_any");
      ByteArrayList byteArrayList0 = new ByteArrayList();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)59;
      byteArray0[1] = (byte) (-75);
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte) (-32);
      ByteArrayList byteArrayList1 = ByteArrayList.createByteArrayList(byteArray0, (byte) (-75));
      // Undeclared exception!
      try { 
        recordTypeMessage0.setRequestObject(byteArrayList1, (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.xbus.protocol.xml.XMLMessageAbstract", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("_any", (XBUSSystem) null, "_any");
      ByteArrayList byteArrayList0 = new ByteArrayList();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)59;
      byteArray0[1] = (byte) (-79);
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte) (-32);
      ByteArrayList byteArrayList1 = ByteArrayList.createByteArrayList(byteArray0, (byte) (-79));
      byteArrayList1.iterator();
      // Undeclared exception!
      try { 
        recordTypeMessage0.setRequestObject(byteArrayList1, (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.xbus.protocol.xml.XMLMessageAbstract", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      URI uRI0 = MockURI.aFTPURI;
      MockURI.resolve(uRI0, "org.apache.axis.message.DetailEntry");
      MockURL.getFtpExample();
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      ByteArrayList byteArrayList0 = new ByteArrayList();
      recordTypeMessage0.setResponseObject(byteArrayList0, (XBUSSystem) null);
      WSDDJAXRPCHandlerInfoChain wSDDJAXRPCHandlerInfoChain0 = new WSDDJAXRPCHandlerInfoChain();
      Detail detail0 = new Detail();
      SOAP11Constants sOAP11Constants0 = SOAPConstants.SOAP11_CONSTANTS;
      SchemaVersion2000 schemaVersion2000_0 = (SchemaVersion2000)SchemaVersion.SCHEMA_2000;
      SOAP12Constants sOAP12Constants0 = SOAPConstants.SOAP12_CONSTANTS;
      SOAPEnvelope sOAPEnvelope0 = new SOAPEnvelope(sOAP11Constants0, schemaVersion2000_0);
      detail0.addChildElement((SOAPElement) sOAPEnvelope0);
      WSDDService wSDDService0 = new WSDDService();
      BindingImpl bindingImpl0 = new BindingImpl();
      QName qName0 = bindingImpl0.getQName();
      assertNull(qName0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "http.protocol.reject-head-body");
      MockDate mockDate0 = new MockDate((-849L));
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HostConfiguration hostConfiguration0 = mock(HostConfiguration.class, new ViolatedAssumptionAnswer());
      ConnectMethod connectMethod0 = new ConnectMethod(hostConfiguration0);
      connectMethod0.setQueryString("");
      URI uRI0 = MockURI.aFTPURI;
      MockURI.toURL(uRI0);
      URL uRL0 = MockURI.toURL(uRI0);
      HttpURLConnection httpURLConnection0 = new HttpURLConnection(connectMethod0, uRL0);
      recordTypeMessage0.setRequestText((String) null, (XBUSSystem) null);
      Object object0 = new Object();
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String string0 = "_any";
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("_any", (XBUSSystem) null, "_any");
      ByteArrayList byteArrayList0 = new ByteArrayList();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)59;
      byteArray0[1] = (byte) (-75);
      byteArrayList0.iterator();
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte) (-32);
      byteArrayList0.addAll((ByteArrayList) null);
      try { 
        recordTypeMessage0.setRequestObject("_any", (XBUSSystem) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // I_02_003_0 java.lang.String cannot be cast to net.sf.xbus.base.bytearraylist.ByteArrayList
         //
         verifyException("net.sf.xbus.protocol.records.RecordTypeMessage", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      URI uRI0 = MockURI.aFTPURI;
      URI uRI1 = MockURI.resolve(uRI0, "lpyhqITq");
      MockURL.getFtpExample();
      MockURI.toURL(uRI1);
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      ByteArrayList byteArrayList0 = new ByteArrayList();
      recordTypeMessage0.setResponseObject(byteArrayList0, (XBUSSystem) null);
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
      ElementDefinitionImpl elementDefinitionImpl0 = pSVIDocumentImpl0.createElementDefinition("lpyhqITq");
      PSVIDocumentImpl pSVIDocumentImpl1 = new PSVIDocumentImpl();
      elementDefinitionImpl0.getOwnerDocument();
      boolean boolean0 = true;
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(false, true);
      String string0 = "/_)JmCf2fvvJ*r\\^";
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(deferredDocumentImpl0, "lpyhqITq", "/_)JmCf2fvvJ*r^", "lpyhqITq");
      PSVIDocumentImpl pSVIDocumentImpl2 = new PSVIDocumentImpl(documentTypeImpl0);
      PSVIDocumentImpl pSVIDocumentImpl3 = new PSVIDocumentImpl(documentTypeImpl0);
      try { 
        pSVIDocumentImpl1.createElementNS("lpyhqITq", "/_)JmCf2fvvJ*r^");
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
         //
         // INVALID_CHARACTER_ERR: An invalid or illegal XML character is specified. 
         //
         verifyException("org.apache.xerces.dom.CoreDocumentImpl", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      WSDDRequestFlow wSDDRequestFlow0 = new WSDDRequestFlow();
      wSDDRequestFlow0.getParametersTable();
      recordTypeMessage0.setResponseObject((Object) null, (XBUSSystem) null);
      recordTypeMessage0.setResponseObject((Object) null, (XBUSSystem) null);
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
      assertEquals("RC_OK", recordTypeMessage0.getReturncode());
      assertEquals(0, recordTypeMessage0.getErrorcode());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      recordTypeMessage0.setErrortext((String) null);
      recordTypeMessage0.setShortname((String) null);
      recordTypeMessage0.synchronizeRequestFields((XBUSSystem) null);
      recordTypeMessage0.getRequestObject((XBUSSystem) null);
      recordTypeMessage0.getRequestText((XBUSSystem) null);
      recordTypeMessage0.getResponseText();
      recordTypeMessage0.getRequestTextAsXML((XBUSSystem) null);
      String string0 = recordTypeMessage0.getRequestTextAsXML((XBUSSystem) null);
      assertNull(string0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.getEncoding();
      recordTypeMessage0.setResponseDocument(hTMLDocumentImpl0, (XBUSSystem) null);
      Object object0 = new Object();
      recordTypeMessage0.getResponseText();
      recordTypeMessage0.setReturncode((String) null);
      recordTypeMessage0.getResponseObject();
      Object object1 = new Object();
      String string0 = "";
      try { 
        hTMLDocumentImpl0.createElementDefinition("");
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
         //
         // INVALID_CHARACTER_ERR: An invalid or illegal XML character is specified. 
         //
         verifyException("org.apache.xerces.dom.CoreDocumentImpl", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("&", (XBUSSystem) null, "&");
      recordTypeMessage0.getResponseObject();
      Hashtable<Integer, Integer> hashtable0 = new Hashtable<Integer, Integer>();
      Integer integer0 = new Integer(0);
      Integer integer1 = new Integer(2759);
      BiFunction<Integer, Integer, Integer> biFunction0 = (BiFunction<Integer, Integer, Integer>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      Integer integer2 = hashtable0.merge(integer1, integer1, biFunction0);
      assertEquals(2759, (int)integer2);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      XBUSSystem xBUSSystem0 = null;
      String string0 = "";
      ByteArrayList byteArrayList0 = new ByteArrayList();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      ByteArrayList byteArrayList1 = new ByteArrayList();
      Integer integer0 = new Integer(2497);
      Hashtable<Integer, Integer> hashtable0 = new Hashtable<Integer, Integer>();
      Integer integer1 = new Integer((byte)0);
      Integer integer2 = new Integer(2497);
      Integer integer3 = new Integer(2497);
      Integer integer4 = new Integer((-263));
      Integer integer5 = new Integer((byte)0);
      Integer integer6 = new Integer(1);
      BiFunction<Integer, Integer, Integer> biFunction0 = (BiFunction<Integer, Integer, Integer>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      Integer integer7 = new Integer((-263));
      BiFunction<Object, Integer, Integer> biFunction1 = (BiFunction<Object, Integer, Integer>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      Integer integer8 = new Integer((-263));
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("", (XBUSSystem) null, "");
      recordTypeMessage0.synchronizeResponseFields((XBUSSystem) null);
      try { 
        recordTypeMessage0.setResponseObject("", (XBUSSystem) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // I_02_003_0 java.lang.String cannot be cast to net.sf.xbus.base.bytearraylist.ByteArrayList
         //
         verifyException("net.sf.xbus.protocol.records.RecordTypeMessage", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("<", (XBUSSystem) null, "8C=.WGPa4r'!4w&");
      recordTypeMessage0.getRequestObject((XBUSSystem) null);
      Message message0 = new Message((Object) null, true);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      SOAPPart sOAPPart0 = new SOAPPart(message0, pipedInputStream0, true);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)50;
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte)108;
      byteArray0[4] = (byte) (-57);
      recordTypeMessage0.setErrortext("003");
      byteArray0[5] = (byte) (-121);
      pipedOutputStream0.write(byteArray0);
      sOAPPart0.getOwnerDocument();
      recordTypeMessage0.setRequestDocument((Document) null, (XBUSSystem) null);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(1000L);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ByteArrayList byteArrayList0 = new ByteArrayList();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-29);
      ByteArrayList byteArrayList1 = new ByteArrayList();
      byteArrayList0.addAll(byteArrayList1);
      System.setCurrentTimeMillis((byte) (-29));
      System.setCurrentTimeMillis(0L);
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      try { 
        recordTypeMessage0.setResponseObject("u8Pv:zy6", (XBUSSystem) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // I_02_003_0 java.lang.String cannot be cast to net.sf.xbus.base.bytearraylist.ByteArrayList
         //
         verifyException("net.sf.xbus.protocol.records.RecordTypeMessage", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.7741057932992024
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ByteArrayList byteArrayList0 = new ByteArrayList();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      ByteArrayList byteArrayList1 = new ByteArrayList();
      Integer integer0 = new Integer(2497);
      Hashtable<Integer, Integer> hashtable0 = new Hashtable<Integer, Integer>();
      Integer integer1 = new Integer((byte)0);
      Integer integer2 = new Integer(2497);
      Integer integer3 = new Integer(2497);
      Integer integer4 = new Integer(2196);
      Integer integer5 = new Integer((byte)0);
      Integer integer6 = new Integer(1);
      BiFunction<Integer, Integer, Integer> biFunction0 = (BiFunction<Integer, Integer, Integer>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      Integer integer7 = new Integer(5);
      BiFunction<Object, Integer, Integer> biFunction1 = (BiFunction<Object, Integer, Integer>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      Integer integer8 = new Integer((-263));
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("", (XBUSSystem) null, "");
      // Undeclared exception!
      try { 
        recordTypeMessage0.setResponseText("", (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.xbus.protocol.xml.XMLMessageAbstract", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ByteArrayList byteArrayList0 = new ByteArrayList();
      Integer integer0 = new Integer((byte)0);
      Integer integer1 = new Integer((byte)0);
      Integer integer2 = new Integer(634);
      Hashtable<Integer, Integer> hashtable0 = new Hashtable<Integer, Integer>();
      hashtable0.clone();
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      Integer integer3 = new Integer(15);
      Hashtable<Integer, Integer> hashtable1 = new Hashtable<Integer, Integer>();
      Integer integer4 = new Integer(1070);
      Integer integer5 = new Integer(634);
      recordTypeMessage0.setResponseText((String) null, (XBUSSystem) null);
      assertEquals(0, recordTypeMessage0.getErrorcode());
      assertEquals("RC_OK", recordTypeMessage0.getReturncode());
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.7741057932992024
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ByteArrayList byteArrayList0 = new ByteArrayList();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      ByteArrayList.createByteArrayList(byteArray0, (-263));
      Integer integer0 = new Integer(2497);
      Hashtable<Integer, Integer> hashtable0 = new Hashtable<Integer, Integer>();
      Integer integer1 = new Integer(2497);
      Integer integer2 = new Integer(1);
      Integer integer3 = new Integer(2196);
      Integer integer4 = new Integer((byte)0);
      Integer integer5 = new Integer(1);
      BiFunction<Integer, Integer, Integer> biFunction0 = (BiFunction<Integer, Integer, Integer>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      hashtable0.merge(integer4, integer5, biFunction0);
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("", (XBUSSystem) null, "");
      // Undeclared exception!
      try { 
        recordTypeMessage0.setResponseText("UL", (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.xbus.protocol.xml.XMLMessageAbstract", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("0", (XBUSSystem) null, "0");
      // Undeclared exception!
      try { 
        recordTypeMessage0.setRequestText("", (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.xbus.protocol.xml.XMLMessageAbstract", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("TUL", (XBUSSystem) null, "");
      ByteArrayList byteArrayList0 = new ByteArrayList();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)0;
      ByteArrayList byteArrayList1 = ByteArrayList.createByteArrayList(byteArray0, (byte)7);
      byteArrayList0.addAll(byteArrayList1);
      recordTypeMessage0.setRequestObject((Object) null, (XBUSSystem) null);
      WSDDJAXRPCHandlerInfoChain wSDDJAXRPCHandlerInfoChain0 = new WSDDJAXRPCHandlerInfoChain();
      wSDDJAXRPCHandlerInfoChain0.setParameter("TUL", "TUL");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "handlerInfoChain";
      stringArray0[1] = "returnItemType";
      stringArray0[2] = "parameter";
      stringArray0[3] = "service";
      stringArray0[4] = "Handler";
      wSDDJAXRPCHandlerInfoChain0.setRoles(stringArray0);
      WSDDJAXRPCHandlerInfoChain wSDDJAXRPCHandlerInfoChain1 = new WSDDJAXRPCHandlerInfoChain();
      wSDDJAXRPCHandlerInfoChain1.removeParameter("endpointURL");
      assertFalse(wSDDJAXRPCHandlerInfoChain1.equals((Object)wSDDJAXRPCHandlerInfoChain0));
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ByteArrayList byteArrayList0 = new ByteArrayList();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-29);
      ByteArrayList byteArrayList1 = new ByteArrayList();
      byteArrayList0.addAll(byteArrayList1);
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("-fEBmdj", (XBUSSystem) null, "C;OTY.tp#2S'");
      recordTypeMessage0.setRequestObject(byteArrayList1, (XBUSSystem) null);
      DirProvider dirProvider0 = null;
      try {
        dirProvider0 = new DirProvider("/s{/Z.<fhh(4", "");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Configuration file directory '/s{/Z.<fhh(4' does not exist or is not a directory or is not readable.
         //
         verifyException("org.apache.axis.configuration.DirProvider", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "]yO,");
      MockDate mockDate0 = new MockDate((-149L));
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HostConfiguration hostConfiguration0 = mock(HostConfiguration.class, new ViolatedAssumptionAnswer());
      ConnectMethod connectMethod0 = new ConnectMethod(hostConfiguration0);
      connectMethod0.setQueryString(";=<n>J+PgUt9f");
      HostConfiguration hostConfiguration1 = mock(HostConfiguration.class, new ViolatedAssumptionAnswer());
      ConnectMethod connectMethod1 = new ConnectMethod(hostConfiguration1);
      HostConfiguration hostConfiguration2 = mock(HostConfiguration.class, new ViolatedAssumptionAnswer());
      ConnectMethod connectMethod2 = new ConnectMethod(hostConfiguration2);
      connectMethod2.setQueryString("?.)A!adapk4[*i!Q");
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      HostConfiguration hostConfiguration3 = mock(HostConfiguration.class, new ViolatedAssumptionAnswer());
      ConnectMethod connectMethod3 = new ConnectMethod(hostConfiguration3);
      connectMethod3.setQueryString("CONNECT");
      URI uRI0 = MockURI.aFTPURI;
      URI uRI1 = MockURI.resolve(uRI0, "?.)A!adapk4[*i!Q");
      MockURI.toURL(uRI1);
      URL uRL0 = MockURI.toURL(uRI1);
      HttpURLConnection httpURLConnection0 = new HttpURLConnection(connectMethod1, uRL0);
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("CONNECT", (XBUSSystem) null, "");
      // Undeclared exception!
      try { 
        recordTypeMessage0.setRequestText("{ev", (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.xbus.protocol.xml.XMLMessageAbstract", e);
      }
  }
}
