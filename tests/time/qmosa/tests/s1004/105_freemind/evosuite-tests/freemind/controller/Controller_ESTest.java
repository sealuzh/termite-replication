/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 17:20:13 GMT 2019
 */

package freemind.controller;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import accessories.plugins.ClonePlugin;
import freemind.controller.Controller;
import freemind.main.FreeMindMain;
import freemind.modes.browsemode.BrowseMode;
import freemind.modes.mindmapmode.MindMapController;
import freemind.modes.mindmapmode.MindMapMode;
import freemind.modes.mindmapmode.MindMapToolBar;
import java.awt.Color;
import java.awt.HeadlessException;
import java.awt.SystemColor;
import java.util.Properties;
import javax.swing.JColorChooser;
import javax.swing.JSpinner;
import javax.swing.JTabbedPane;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import plugins.collaboration.database.DatabaseConnectionHook;
import plugins.collaboration.socket.SocketConnectionHook;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Controller_ESTest extends Controller_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      BrowseMode browseMode0 = new BrowseMode();
      browseMode0.getController();
      Controller.CloseAction controller_CloseAction0 = null;
      try {
        controller_CloseAction0 = new Controller.CloseAction((Controller) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("freemind.controller.Controller$CloseAction", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SocketConnectionHook socketConnectionHook0 = new SocketConnectionHook();
      JTabbedPane jTabbedPane0 = new JTabbedPane();
      Controller.getPropertyChangeListeners();
      ClonePlugin clonePlugin0 = new ClonePlugin();
      clonePlugin0.getMindMapController();
      MindMapToolBar mindMapToolBar0 = null;
      try {
        mindMapToolBar0 = new MindMapToolBar((MindMapController) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("freemind.modes.mindmapmode.MindMapToolBar", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.786724494755577
  */
  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      JColorChooser jColorChooser0 = new JColorChooser();
      FreeMindMain freeMindMain0 = null;
      Controller controller0 = null;
      try {
        controller0 = new Controller((FreeMindMain) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("freemind.controller.Controller", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      MindMapMode mindMapMode0 = new MindMapMode();
      mindMapMode0.activate();
      mindMapMode0.getController();
      DatabaseConnectionHook databaseConnectionHook0 = new DatabaseConnectionHook();
      Controller.Closer controller_Closer0 = new Controller.Closer();
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      JColorChooser jColorChooser0 = Controller.getCommonJColorChooser();
      SystemColor systemColor0 = SystemColor.textHighlight;
      Color color0 = Color.black;
      jColorChooser0.firePropertyChange("KkTA", 'C', ';');
      JTabbedPane jTabbedPane0 = null;
      try {
        jTabbedPane0 = new JTabbedPane(0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // illegal tab placement: must be TOP, BOTTOM, LEFT, or RIGHT
         //
         verifyException("javax.swing.JTabbedPane", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Properties properties0 = new Properties();
      JSpinner jSpinner0 = new JSpinner();
      try { 
        Controller.showCommonJColorChooserDialog(jSpinner0, "Focus change for ", (Color) null);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }
}
