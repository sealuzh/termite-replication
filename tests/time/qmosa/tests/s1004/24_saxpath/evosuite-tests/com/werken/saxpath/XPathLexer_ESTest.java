/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 17:09:16 GMT 2019
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.7567169975450474
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.leftParen();
      xPathLexer0.consume((-413));
      // Undeclared exception!
      try { 
        xPathLexer0.identifier();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.3227259045521835
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("YY]>cp1@z :Ia");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("YY", token0.getTokenText());
      assertEquals(19, token0.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.minus();
      assertEquals(6, token1.getTokenType());
      assertEquals("]", token1.getTokenText());
      
      Token token2 = xPathLexer0.relationalOperator();
      assertEquals(9, token2.getTokenType());
      assertEquals(">", token2.getTokenText());
      
      xPathLexer0.nextToken();
      Token token3 = xPathLexer0.rightParen();
      assertEquals("@", token3.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("YY]>cp1@z :Ia");
      xPathLexer1.and();
      xPathLexer0.pipe();
      Token token4 = xPathLexer0.nextToken();
      assertEquals(18, token4.getTokenType());
      assertEquals(":", token4.getTokenText());
      
      xPathLexer1.div();
      xPathLexer1.or();
      Token token5 = xPathLexer0.literal();
      assertNull(token5);
      
      Token token6 = xPathLexer0.number();
      assertEquals(30, token6.getTokenType());
      
      xPathLexer0.rightParen();
      XPathLexer xPathLexer2 = new XPathLexer("YY]>cp1@z :Ia");
      xPathLexer2.div();
      Token token7 = xPathLexer2.pipe();
      assertEquals("Y", token7.getTokenText());
      assertEquals(17, token7.getTokenType());
      
      xPathLexer0.leftBracket();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer2.isIdentifierStartChar('>');
      xPathLexer0.or();
      xPathLexer1.consume();
      xPathLexer0.dollar();
      Token token8 = xPathLexer2.at();
      assertEquals("Y", token8.getTokenText());
      
      Token token9 = xPathLexer2.leftBracket();
      assertEquals("]", token9.getTokenText());
      assertEquals(3, token9.getTokenType());
      
      Token token10 = xPathLexer2.slashes();
      assertEquals(">", token10.getTokenText());
      assertEquals(11, token10.getTokenType());
      
      Token token11 = xPathLexer0.identifier();
      assertEquals(15, token11.getTokenType());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.5104073678842047
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(3, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      xPathLexer0.leftParen();
      Token token1 = xPathLexer0.leftParen();
      assertEquals("m", token1.getTokenText());
      
      Token token2 = xPathLexer0.number();
      assertEquals(31, token2.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.and();
      xPathLexer0.relationalOperator();
      Token token3 = xPathLexer0.minus();
      assertEquals("w", token3.getTokenText());
      
      Token token4 = xPathLexer0.plus();
      assertEquals("e", token4.getTokenText());
      
      Token token5 = xPathLexer0.identifierOrOperatorName();
      assertEquals("rken.saxpath.Token", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
      assertNotNull(token5);
      
      Token token6 = xPathLexer0.pipe();
      assertEquals(17, token6.getTokenType());
      
      Token token7 = xPathLexer0.rightBracket();
      assertEquals(4, token7.getTokenType());
      
      Token token8 = xPathLexer0.notEquals();
      assertEquals(22, token8.getTokenType());
      
      Token token9 = xPathLexer0.plus();
      assertEquals(5, token9.getTokenType());
      
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('(');
      assertFalse(boolean0);
      
      xPathLexer0.literal();
      xPathLexer0.equals();
      xPathLexer0.colon();
      xPathLexer0.and();
      xPathLexer0.operatorName();
      xPathLexer0.div();
      xPathLexer0.relationalOperator();
      xPathLexer0.comma();
      xPathLexer0.equals();
      Token token10 = xPathLexer0.star();
      assertEquals(20, token10.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.div();
      Token token11 = xPathLexer0.minus();
      assertEquals(6, token11.getTokenType());
      
      xPathLexer0.dollar();
      xPathLexer0.leftParen();
      xPathLexer0.dollar();
      xPathLexer0.endPosition();
      xPathLexer0.dollar();
      Token token12 = xPathLexer0.comma();
      assertEquals(32, token12.getTokenType());
      
      Token token13 = xPathLexer0.slashes();
      assertEquals(11, token13.getTokenType());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.2835148374095686
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("AIRW}sW:H'\"xHj/G");
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      assertEquals("A", token0.getTokenText());
      
      xPathLexer0.div();
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token2 = xPathLexer0.minus();
      assertEquals("R", token2.getTokenText());
      assertEquals(6, token2.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token3 = xPathLexer0.comma();
      assertEquals(32, token3.getTokenType());
      assertEquals("W", token3.getTokenText());
      
      xPathLexer0.rightParen();
      xPathLexer0.and();
      Token token4 = xPathLexer0.pipe();
      assertEquals(17, token4.getTokenType());
      assertEquals("s", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("W", token5.getTokenText());
      
      xPathLexer0.div();
      xPathLexer0.or();
      Token token6 = xPathLexer0.equals();
      assertEquals(":", token6.getTokenText());
      assertEquals(21, token6.getTokenType());
      
      Token token7 = xPathLexer0.number();
      assertEquals(30, token7.getTokenType());
      
      Token token8 = xPathLexer0.star();
      assertEquals("H", token8.getTokenText());
      assertEquals(20, token8.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token9 = xPathLexer0.whitespace();
      assertEquals((-2), token9.getTokenType());
      
      xPathLexer0.consume();
      XPathLexer xPathLexer1 = new XPathLexer("AIRW}sW:H'\"xHj/G");
      xPathLexer0.or();
      Token token10 = xPathLexer1.doubleColon();
      assertEquals("AI", token10.getTokenText());
      
      xPathLexer0.doubleColon();
      Token token11 = xPathLexer0.at();
      assertEquals(16, token11.getTokenType());
      
      Token token12 = xPathLexer0.doubleColon();
      assertEquals(19, token12.getTokenType());
      assertEquals("j/", token12.getTokenText());
      
      xPathLexer1.consume();
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertTrue(boolean0);
      
      xPathLexer1.div();
      Token token13 = xPathLexer0.nextToken();
      assertEquals((-1), token13.getTokenType());
      
      Token token14 = xPathLexer1.rightParen();
      assertEquals(2, token14.getTokenType());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.0487197326458753
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("AIRW}sW:H'\"xHj/G");
      Token token0 = xPathLexer0.plus();
      assertEquals("A", token0.getTokenText());
      assertEquals(5, token0.getTokenType());
      
      xPathLexer0.div();
      xPathLexer0.slashes();
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.minus();
      assertEquals(6, token1.getTokenType());
      assertEquals("R", token1.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token2 = xPathLexer0.comma();
      assertEquals(32, token2.getTokenType());
      
      xPathLexer0.rightParen();
      xPathLexer0.and();
      Token token3 = xPathLexer0.pipe();
      assertEquals(17, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(15, token4.getTokenType());
      
      xPathLexer0.div();
      xPathLexer0.or();
      Token token5 = xPathLexer0.equals();
      assertEquals(21, token5.getTokenType());
      assertEquals(":", token5.getTokenText());
      
      Token token6 = xPathLexer0.number();
      assertEquals(30, token6.getTokenType());
      
      Token token7 = xPathLexer0.star();
      assertEquals("H", token7.getTokenText());
      assertEquals(20, token7.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token8 = xPathLexer0.whitespace();
      assertEquals((-2), token8.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("AIRW}sW:H'\"xHj/G");
      Token token9 = xPathLexer1.doubleColon();
      assertEquals("AI", token9.getTokenText());
      
      xPathLexer0.doubleColon();
      Token token10 = xPathLexer0.at();
      assertEquals("x", token10.getTokenText());
      assertEquals(16, token10.getTokenType());
      
      Token token11 = xPathLexer0.doubleColon();
      assertEquals(19, token11.getTokenType());
      
      xPathLexer1.consume();
      xPathLexer0.hasMoreChars();
      xPathLexer1.div();
      Token token12 = xPathLexer0.nextToken();
      assertEquals(11, token12.getTokenType());
      assertEquals("/", token12.getTokenText());
      
      Token token13 = xPathLexer1.rightParen();
      assertEquals("W", token13.getTokenText());
      assertEquals(2, token13.getTokenType());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.2385400944767997
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("rv6!SL<wLMeVW`");
      xPathLexer0.consume(0);
      Token token0 = xPathLexer0.identifier();
      assertEquals(15, token0.getTokenType());
      assertEquals("rv6", token0.getTokenText());
      
      Token token1 = xPathLexer0.literal();
      assertNull(token1);
      
      xPathLexer0.consume();
      xPathLexer0.consume();
      xPathLexer0.rightParen();
      xPathLexer0.slashes();
      xPathLexer0.setXPath("m.eD8-9E+p,y$[vu4UV");
      Token token2 = xPathLexer0.dollar();
      assertEquals(26, token2.getTokenType());
      assertEquals("m", token2.getTokenText());
      
      Token token3 = xPathLexer0.leftParen();
      assertEquals(".", token3.getTokenText());
      
      Token token4 = xPathLexer0.minus();
      assertEquals("e", token4.getTokenText());
      assertEquals(6, token4.getTokenType());
      
      Token token5 = xPathLexer0.slashes();
      assertEquals(11, token5.getTokenType());
      assertEquals("D", token5.getTokenText());
      
      Token token6 = xPathLexer0.number();
      assertEquals(30, token6.getTokenType());
      
      xPathLexer0.setXPath("m.eD8-9E+p,y$[vu4UV");
      xPathLexer0.relationalOperator();
      Token token7 = xPathLexer0.star();
      assertEquals(20, token7.getTokenType());
      assertEquals("m", token7.getTokenText());
      
      Token token8 = new Token(0, "m.eD8-9E+p,y$[vu4UV", 0, 0);
      xPathLexer0.div();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer("m.eD8-9E+p,y$[vu4UV");
      Token token9 = xPathLexer1.comma();
      assertEquals(32, token9.getTokenType());
      assertEquals("m", token9.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("rv6!SL<wLMeVW`");
      Token token10 = xPathLexer2.pipe();
      assertEquals("r", token10.getTokenText());
      assertEquals(17, token10.getTokenType());
      
      Token token11 = xPathLexer2.leftBracket();
      assertEquals("v", token11.getTokenText());
      assertEquals(3, token11.getTokenType());
      
      char char0 = xPathLexer0.LA(0);
      assertEquals('m', char0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.964129526240706
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("nLZ!pT<T}");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.star();
      String string0 = token0.toString();
      assertEquals("[ (20) (n)", string0);
      
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token1 = xPathLexer1.rightBracket();
      assertEquals(4, token1.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("[ (20) (n)");
      xPathLexer2.identifier();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token2 = xPathLexer3.equals();
      assertEquals(21, token2.getTokenType());
      
      xPathLexer3.number();
      xPathLexer3.mod();
      Token token3 = xPathLexer2.number();
      assertEquals(30, token3.getTokenType());
      
      xPathLexer1.identifierOrOperatorName();
      xPathLexer2.div();
      xPathLexer1.pipe();
      Token token4 = xPathLexer2.leftBracket();
      assertEquals(3, token4.getTokenType());
      assertEquals("[", token4.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer("pE/,Y!(, .D?.}");
      Token token5 = xPathLexer4.nextToken();
      assertEquals(15, token5.getTokenType());
      assertEquals("pE", token5.getTokenText());
      
      xPathLexer3.relationalOperator();
      xPathLexer0.div();
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token6 = xPathLexer5.pipe();
      assertEquals(17, token6.getTokenType());
      
      Token token7 = xPathLexer3.rightParen();
      assertEquals(2, token7.getTokenType());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.2461722301784914
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("m%^(jR%h$2nb,1SH");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.endPosition();
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.star();
      assertEquals(20, token1.getTokenType());
      
      xPathLexer0.colon();
      Token token2 = xPathLexer0.leftBracket();
      assertEquals("(", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("jR", token3.getTokenText());
      
      xPathLexer0.setXPath("\"8Arb+[");
      Token token4 = xPathLexer0.equals();
      assertEquals(21, token4.getTokenType());
      assertEquals("\"", token4.getTokenText());
      
      Token token5 = xPathLexer0.leftParen();
      assertEquals(1, token5.getTokenType());
      assertEquals("8", token5.getTokenText());
      
      Token token6 = xPathLexer0.at();
      assertEquals(16, token6.getTokenType());
      assertEquals("A", token6.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.mod();
      xPathLexer1.setXPath("\"8Arb+[");
      Token token7 = xPathLexer1.rightBracket();
      assertEquals(4, token7.getTokenType());
      
      Token token8 = xPathLexer1.doubleColon();
      assertEquals(19, token8.getTokenType());
      assertEquals("8A", token8.getTokenText());
      
      xPathLexer0.nextToken();
      xPathLexer0.dots();
      Token token9 = xPathLexer0.comma();
      assertEquals("b", token9.getTokenText());
      assertEquals(32, token9.getTokenType());
      
      Token token10 = xPathLexer1.dots();
      assertEquals(13, token10.getTokenType());
      assertEquals("r", token10.getTokenText());
      
      Token token11 = xPathLexer1.literal();
      assertNull(token11);
      
      xPathLexer0.colon();
      Token token12 = xPathLexer1.pipe();
      assertEquals(17, token12.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token13 = xPathLexer2.leftBracket();
      assertEquals(3, token13.getTokenType());
      
      Token token14 = xPathLexer0.colon();
      assertEquals("[", token14.getTokenText());
      assertEquals(18, token14.getTokenType());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.1568228988022438
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("m%^(jR%h$2nb,1SH");
      xPathLexer0.and();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.minus();
      assertEquals("m", token0.getTokenText());
      assertEquals(6, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.relationalOperator();
      xPathLexer1.nextToken();
      xPathLexer0.rightParen();
      xPathLexer0.and();
      xPathLexer1.pipe();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("^(jR%h$2nb,1SH", token1.getTokenText());
      assertEquals((-1), token1.getTokenType());
      
      xPathLexer0.div();
      xPathLexer1.or();
      Token token2 = xPathLexer1.literal();
      assertNull(token2);
      
      Token token3 = xPathLexer1.number();
      assertEquals(30, token3.getTokenType());
      
      Token token4 = xPathLexer0.rightParen();
      assertEquals("^", token4.getTokenText());
      
      xPathLexer0.div();
      xPathLexer1.pipe();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.leftBracket();
      xPathLexer1.consume();
      Token token5 = xPathLexer0.dollar();
      assertEquals("(", token5.getTokenText());
      assertEquals(26, token5.getTokenType());
      
      Token token6 = xPathLexer1.identifierOrOperatorName();
      assertNull(token6);
      
      Token token7 = xPathLexer0.dots();
      assertEquals(13, token7.getTokenType());
      assertEquals("j", token7.getTokenText());
      
      Token token8 = xPathLexer0.literal();
      assertNull(token8);
      
      xPathLexer2.colon();
      Token token9 = xPathLexer0.pipe();
      assertEquals(17, token9.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token10 = xPathLexer1.leftBracket();
      assertEquals(3, token10.getTokenType());
      
      Token token11 = xPathLexer3.colon();
      assertEquals(18, token11.getTokenType());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.614557931171912
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("AIRW}sW:H'\"xHj/G");
      xPathLexer0.relationalOperator();
      xPathLexer0.div();
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals("A", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.endPosition();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals("IRW", token1.getTokenText());
      
      Token token2 = xPathLexer0.star();
      assertEquals("}", token2.getTokenText());
      assertEquals(20, token2.getTokenType());
      
      Token token3 = xPathLexer1.colon();
      assertEquals(18, token3.getTokenType());
      
      Token token4 = xPathLexer1.leftBracket();
      assertEquals(3, token4.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("AIRW}sW:H'\"xHj/G");
      Token token5 = xPathLexer1.nextToken();
      assertEquals((-1), token5.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer1.div();
      Token token6 = xPathLexer2.nextToken();
      assertEquals(15, token6.getTokenType());
      assertEquals("AIRW", token6.getTokenText());
      
      Token token7 = xPathLexer0.rightParen();
      assertEquals("s", token7.getTokenText());
      assertEquals(2, token7.getTokenType());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.8642586488085258
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      
      xPathLexer0.identifier();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token2 = xPathLexer1.equals();
      assertEquals(21, token2.getTokenType());
      
      Token token3 = xPathLexer0.number();
      assertEquals(30, token3.getTokenType());
      
      xPathLexer1.identifierOrOperatorName();
      xPathLexer0.div();
      Token token4 = xPathLexer0.pipe();
      assertEquals(17, token4.getTokenType());
      
      Token token5 = xPathLexer0.leftBracket();
      assertEquals(3, token5.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.Token");
      Token token6 = xPathLexer2.nextToken();
      assertEquals(15, token6.getTokenType());
      assertEquals("com.werken.saxpath.Token", token6.getTokenText());
      
      xPathLexer0.relationalOperator();
      xPathLexer1.div();
      Token token7 = xPathLexer2.nextToken();
      assertEquals("", token7.getTokenText());
      
      Token token8 = xPathLexer0.rightParen();
      assertEquals(2, token8.getTokenType());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.8775106175491283
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.star();
      assertEquals(20, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      xPathLexer0.colon();
      Token token1 = xPathLexer0.plus();
      assertEquals(5, token1.getTokenType());
      assertEquals("m", token1.getTokenText());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      assertEquals(".", token2.getTokenText());
      
      Token token3 = xPathLexer0.comma();
      assertEquals(32, token3.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.setXPath("m.eD8-9E+p,y$[vu4UV");
      Token token4 = xPathLexer0.dollar();
      assertEquals(26, token4.getTokenType());
      
      xPathLexer0.leftParen();
      Token token5 = xPathLexer0.colon();
      assertEquals("k", token5.getTokenText());
      assertEquals(18, token5.getTokenType());
      
      Token token6 = xPathLexer0.leftBracket();
      assertEquals(3, token6.getTokenType());
      assertEquals("e", token6.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("9hJy_?1X;$Y<Ly%");
      Token token7 = xPathLexer1.nextToken();
      assertEquals("m.eD8-9E", token7.getTokenText());
      assertEquals(15, token7.getTokenType());
      
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.div();
      Token token8 = xPathLexer3.nextToken();
      assertEquals((-1), token8.getTokenType());
      
      Token token9 = xPathLexer3.rightParen();
      assertEquals(2, token9.getTokenType());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.891793963572185
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      
      xPathLexer0.identifier();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token2 = xPathLexer1.equals();
      assertEquals(21, token2.getTokenType());
      
      Token token3 = xPathLexer0.number();
      assertEquals(30, token3.getTokenType());
      
      xPathLexer1.identifierOrOperatorName();
      xPathLexer0.div();
      Token token4 = xPathLexer0.pipe();
      assertEquals(17, token4.getTokenType());
      
      Token token5 = xPathLexer0.leftBracket();
      assertEquals(3, token5.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.Token");
      Token token6 = xPathLexer2.nextToken();
      assertEquals("com.werken.saxpath.Token", token6.getTokenText());
      assertEquals(15, token6.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer1.div();
      Token token7 = xPathLexer0.notEquals();
      assertEquals(22, token7.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("");
      xPathLexer3.currentPosition();
      Token token8 = xPathLexer2.rightParen();
      assertEquals(2, token8.getTokenType());
      
      Token token9 = xPathLexer0.getPreviousToken();
      assertEquals((-1), token9.getTokenType());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.0484048066398026
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("nLZ!pT<T}");
      xPathLexer0.or();
      Token token0 = xPathLexer0.star();
      token0.toString();
      Token token1 = xPathLexer0.leftParen();
      assertEquals(1, token1.getTokenType());
      assertEquals("L", token1.getTokenText());
      
      String string0 = token0.toString();
      assertEquals("[ (20) (n)", string0);
      
      xPathLexer0.setPreviousToken(token0);
      Token token2 = xPathLexer0.plus();
      assertEquals(5, token2.getTokenType());
      assertEquals("Z", token2.getTokenText());
      
      xPathLexer0.mod();
      xPathLexer0.mod();
      Token token3 = xPathLexer0.number();
      assertEquals(30, token3.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.div();
      xPathLexer0.pipe();
      Token token4 = xPathLexer0.leftBracket();
      assertEquals("p", token4.getTokenText());
      assertEquals(3, token4.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("[ (20) (n)");
      Token token5 = xPathLexer0.nextToken();
      assertEquals(15, token5.getTokenType());
      assertEquals("T", token5.getTokenText());
      
      Token token6 = xPathLexer0.relationalOperator();
      assertEquals("<", token6.getTokenText());
      assertEquals(7, token6.getTokenType());
      
      xPathLexer0.div();
      Token token7 = xPathLexer1.pipe();
      assertEquals(17, token7.getTokenType());
      assertEquals("[", token7.getTokenText());
      
      Token token8 = xPathLexer1.rightParen();
      assertEquals(" ", token8.getTokenText());
      assertEquals(2, token8.getTokenType());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.9166436491127952
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("YY]>cp1@z :Ia");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("YY", token0.getTokenText());
      assertEquals(19, token0.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.minus();
      Token token1 = xPathLexer0.relationalOperator();
      assertEquals(9, token1.getTokenType());
      assertEquals(">", token1.getTokenText());
      
      Token token2 = xPathLexer0.not();
      assertEquals("c", token2.getTokenText());
      assertEquals(23, token2.getTokenType());
      
      Token token3 = xPathLexer0.rightParen();
      assertEquals(2, token3.getTokenType());
      assertEquals("p", token3.getTokenText());
      
      xPathLexer0.and();
      Token token4 = xPathLexer0.pipe();
      assertEquals("1", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(16, token5.getTokenType());
      assertEquals("@", token5.getTokenText());
      
      xPathLexer0.setXPath("ssY2i+/b");
      Token token6 = xPathLexer0.dollar();
      assertEquals(26, token6.getTokenType());
      assertEquals("s", token6.getTokenText());
      
      Token token7 = xPathLexer0.leftParen();
      assertEquals(1, token7.getTokenType());
      assertEquals("s", token7.getTokenText());
      
      Token token8 = xPathLexer0.minus();
      assertEquals("Y", token8.getTokenText());
      assertEquals(6, token8.getTokenType());
      
      Token token9 = xPathLexer0.slashes();
      assertEquals("2", token9.getTokenText());
      
      xPathLexer0.number();
      xPathLexer0.setXPath("");
      Token token10 = xPathLexer0.number();
      assertEquals(30, token10.getTokenType());
      
      Token token11 = xPathLexer0.star();
      assertEquals(20, token11.getTokenType());
      
      xPathLexer0.equals();
      xPathLexer0.div();
      xPathLexer0.operatorName();
      Token token12 = xPathLexer0.comma();
      assertEquals(32, token12.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("m.eD8-9E+p,y$[vu4UV");
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token13 = xPathLexer2.pipe();
      assertEquals(17, token13.getTokenType());
      
      Token token14 = xPathLexer2.leftBracket();
      assertEquals(3, token14.getTokenType());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.465576545115033
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.star();
      token0.toString();
      xPathLexer0.leftParen();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.plus();
      xPathLexer0.mod();
      xPathLexer0.mod();
      xPathLexer0.not();
      xPathLexer0.not();
      xPathLexer0.leftBracket();
      xPathLexer0.identifier();
      xPathLexer0.dots();
      xPathLexer0.or();
      xPathLexer0.isIdentifierChar('b');
      xPathLexer0.getPreviousToken();
      xPathLexer0.comma();
      xPathLexer0.relationalOperator();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-1096));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.4817402625572207
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("YY]>cp1@z :Ia");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("YY", token0.getTokenText());
      
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      assertEquals(">", token1.getTokenText());
      
      xPathLexer0.div();
      Token token2 = xPathLexer0.notEquals();
      assertEquals("cp", token2.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer(") (");
      Token token3 = xPathLexer1.colon();
      assertEquals(18, token3.getTokenType());
      assertEquals(")", token3.getTokenText());
      
      Token token4 = xPathLexer1.plus();
      assertEquals(5, token4.getTokenType());
      assertEquals(" ", token4.getTokenText());
      
      Token token5 = xPathLexer0.not();
      assertEquals(23, token5.getTokenType());
      assertEquals("1", token5.getTokenText());
      
      xPathLexer1.relationalOperator();
      Token token6 = xPathLexer1.whitespace();
      assertEquals((-2), token6.getTokenType());
      assertEquals("", token6.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("YY]>cp1@z :Ia");
      Token token7 = xPathLexer2.literal();
      assertEquals(27, token7.getTokenType());
      assertNotNull(token7);
      
      Token token8 = xPathLexer1.at();
      assertEquals(16, token8.getTokenType());
      
      Token token9 = xPathLexer2.doubleColon();
      assertEquals(19, token9.getTokenType());
      
      xPathLexer1.consume();
      boolean boolean0 = xPathLexer1.hasMoreChars();
      assertFalse(boolean0);
      
      xPathLexer2.div();
      Token token10 = xPathLexer0.notEquals();
      assertEquals(22, token10.getTokenType());
      
      int int0 = xPathLexer1.currentPosition();
      assertEquals(5, int0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.9969401711159342
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.operatorName();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.slashes();
      xPathLexer0.and();
      xPathLexer0.slashes();
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      
      xPathLexer0.setXPath("com.werken.saxpath.XPathLxer");
      xPathLexer0.star();
      Token token1 = xPathLexer0.equals();
      assertEquals("o", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.div();
      xPathLexer0.operatorName();
      xPathLexer0.doubleColon();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("werken.saxpath.XPathLxer", token2.getTokenText());
      
      Token token3 = xPathLexer1.dots();
      assertEquals(13, token3.getTokenType());
      
      Token token4 = xPathLexer1.doubleColon();
      assertEquals(19, token4.getTokenType());
      
      Token token5 = xPathLexer0.number();
      assertEquals(30, token5.getTokenType());
      
      Token token6 = xPathLexer1.equals();
      assertEquals(21, token6.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token7 = xPathLexer0.nextToken();
      assertEquals("", token7.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token8 = xPathLexer3.rightParen();
      assertEquals(2, token8.getTokenType());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.195804724219253
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.number();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.and();
      xPathLexer0.slashes();
      xPathLexer0.number();
      xPathLexer0.slashes();
      xPathLexer0.setXPath("com.werken.saxpath.XPathLexer");
      xPathLexer0.star();
      xPathLexer0.equals();
      xPathLexer0.getXPath();
      xPathLexer0.at();
      xPathLexer0.equals();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.pipe();
      xPathLexer0.isIdentifierChar(',');
      xPathLexer0.getPreviousToken();
      xPathLexer0.doubleColon();
      xPathLexer0.literal();
      xPathLexer0.consume(0);
      xPathLexer0.or();
      xPathLexer0.star();
      xPathLexer0.consume((-895));
      // Undeclared exception!
      try { 
        xPathLexer0.and();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.0601244237007332
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.number();
      Token token0 = xPathLexer0.star();
      assertEquals(20, token0.getTokenType());
      
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      
      Token token2 = xPathLexer0.plus();
      assertEquals(5, token2.getTokenType());
      
      xPathLexer0.slashes();
      Token token3 = xPathLexer0.comma();
      assertEquals(32, token3.getTokenType());
      
      xPathLexer0.dots();
      Token token4 = xPathLexer0.slashes();
      assertEquals(11, token4.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.leftParen();
      Token token5 = xPathLexer0.at();
      assertEquals(16, token5.getTokenType());
      
      xPathLexer0.setXPath(") (");
      Token token6 = xPathLexer0.doubleColon();
      assertEquals(") ", token6.getTokenText());
      
      xPathLexer0.nextToken();
      Token token7 = xPathLexer0.notEquals();
      assertEquals(22, token7.getTokenType());
      
      Token token8 = xPathLexer0.dots();
      assertEquals(13, token8.getTokenType());
      
      Token token9 = xPathLexer0.doubleColon();
      assertEquals(19, token9.getTokenType());
      
      Token token10 = xPathLexer0.number();
      assertEquals(30, token10.getTokenType());
      
      xPathLexer0.operatorName();
      Token token11 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token11.getTokenType());
      assertNotNull(token11);
      
      Token token12 = xPathLexer0.dollar();
      assertEquals(26, token12.getTokenType());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.142906875941769
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("m%^(jR%h$2nb,1SH");
      xPathLexer0.number();
      xPathLexer0.and();
      xPathLexer0.endPosition();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.star();
      xPathLexer0.colon();
      xPathLexer0.leftBracket();
      xPathLexer0.nextToken();
      xPathLexer0.setXPath("\"8Arb+[");
      xPathLexer0.equals();
      xPathLexer0.leftParen();
      xPathLexer0.at();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.setXPath("$~Yj");
      xPathLexer0.relationalOperator();
      xPathLexer0.operatorName();
      xPathLexer1.nextToken();
      xPathLexer1.dots();
      xPathLexer0.doubleColon();
      xPathLexer1.number();
      xPathLexer1.equals();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.9803011820640424
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals((-1), token1.getTokenType());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      
      xPathLexer0.identifier();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token3 = xPathLexer1.equals();
      assertEquals(21, token3.getTokenType());
      
      Token token4 = xPathLexer0.number();
      assertEquals(30, token4.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.div();
      Token token5 = xPathLexer0.pipe();
      assertEquals(17, token5.getTokenType());
      
      Token token6 = xPathLexer0.leftBracket();
      assertEquals(3, token6.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.Token");
      Token token7 = xPathLexer2.doubleColon();
      assertEquals(19, token7.getTokenType());
      assertEquals("co", token7.getTokenText());
      
      xPathLexer0.relationalOperator();
      xPathLexer1.div();
      Token token8 = xPathLexer2.nextToken();
      assertEquals("m.werken.saxpath.Token", token8.getTokenText());
      assertEquals(15, token8.getTokenType());
      
      Token token9 = xPathLexer0.rightParen();
      assertEquals(2, token9.getTokenType());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.5675427027824325
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("m%^(jR%h$2nb,1SH");
      xPathLexer0.and();
      int int0 = xPathLexer0.endPosition();
      assertEquals(16, int0);
      
      Token token0 = xPathLexer0.dollar();
      assertEquals("m", token0.getTokenText());
      assertEquals(26, token0.getTokenType());
      
      Token token1 = xPathLexer0.star();
      assertEquals("%", token1.getTokenText());
      assertEquals(20, token1.getTokenType());
      
      Token token2 = xPathLexer0.colon();
      assertEquals("^", token2.getTokenText());
      assertEquals(18, token2.getTokenType());
      
      xPathLexer0.leftBracket();
      Token token3 = xPathLexer0.leftBracket();
      assertEquals("j", token3.getTokenText());
      assertEquals(3, token3.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("m%^(jR%h$2nb,1SH");
      Token token4 = xPathLexer1.nextToken();
      assertEquals("m", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
      
      xPathLexer1.relationalOperator();
      xPathLexer0.div();
      xPathLexer1.nextToken();
      Token token5 = xPathLexer1.rightParen();
      assertEquals(2, token5.getTokenType());
      assertEquals("%", token5.getTokenText());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.7796324375965757
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("YY]>cp1@z :Ia");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      assertEquals("YY", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(4, token1.getTokenType());
      
      xPathLexer0.rightBracket();
      Token token2 = xPathLexer0.identifier();
      assertEquals("cp1", token2.getTokenText());
      
      xPathLexer0.notEquals();
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(" ", token3.getTokenText());
      
      Token token4 = xPathLexer0.notEquals();
      assertEquals(":I", token4.getTokenText());
      assertEquals(22, token4.getTokenType());
      
      Token token5 = xPathLexer0.dots();
      assertEquals("a", token5.getTokenText());
      assertEquals(13, token5.getTokenType());
      
      Token token6 = xPathLexer0.not();
      assertEquals(23, token6.getTokenType());
      
      Token token7 = xPathLexer0.rightParen();
      assertEquals(2, token7.getTokenType());
      
      xPathLexer0.consume((-1064));
      Token token8 = xPathLexer0.at();
      assertEquals(16, token8.getTokenType());
      
      Token token9 = xPathLexer0.comma();
      assertEquals(32, token9.getTokenType());
      
      int int0 = xPathLexer0.currentPosition();
      assertEquals((-1047), int0);
      
      Token token10 = xPathLexer0.equals();
      assertEquals(21, token10.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token11 = xPathLexer1.dollar();
      assertEquals(26, token11.getTokenType());
      
      Token token12 = xPathLexer1.colon();
      assertEquals(18, token12.getTokenType());
      
      xPathLexer1.isIdentifierStartChar('M');
      Token token13 = xPathLexer1.identifierOrOperatorName();
      assertEquals(15, token13.getTokenType());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.493969173236996
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.star();
      xPathLexer0.leftBracket();
      xPathLexer0.rightParen();
      xPathLexer0.comma();
      xPathLexer0.doubleColon();
      xPathLexer0.slashes();
      xPathLexer0.plus();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.rightParen();
      xPathLexer0.plus();
      xPathLexer0.setXPath("*r*BWoij0a1 y}{tnrd");
      xPathLexer0.identifier();
      xPathLexer0.div();
      xPathLexer0.slashes();
      xPathLexer0.notEquals();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.getXPath();
      int int0 = xPathLexer1.endPosition();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.9728726327841337
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("mwj?R=:U");
      xPathLexer0.star();
      xPathLexer0.dots();
      xPathLexer0.identifier();
      xPathLexer0.or();
      xPathLexer0.notEquals();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.number();
      xPathLexer0.isIdentifierStartChar('K');
      xPathLexer0.consume((-4793));
      // Undeclared exception!
      try { 
        xPathLexer0.div();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.1898715767419925
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.literal();
      xPathLexer0.identifier();
      xPathLexer0.or();
      xPathLexer0.mod();
      xPathLexer0.and();
      xPathLexer0.nextToken();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-2));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.9747025681553483
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      String string0 = "fwB:ol5Qjm";
      XPathLexer xPathLexer0 = new XPathLexer("fwB:ol5Qjm");
      xPathLexer0.colon();
      xPathLexer0.not();
      xPathLexer0.doubleColon();
      xPathLexer0.consume((-897));
      // Undeclared exception!
      try { 
        xPathLexer0.slashes();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.6198274631255472
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      xPathLexer0.consume((-3302));
      xPathLexer0.leftBracket();
      xPathLexer0.colon();
      xPathLexer0.getPreviousToken();
      xPathLexer0.pipe();
      xPathLexer0.leftParen();
      xPathLexer0.minus();
      // Undeclared exception!
      try { 
        xPathLexer0.nextToken();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.284520145529798
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.minus();
      xPathLexer0.comma();
      xPathLexer0.literal();
      xPathLexer0.mod();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.slashes();
      xPathLexer0.star();
      xPathLexer0.mod();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.getXPath();
      xPathLexer0.star();
      xPathLexer0.consume((-1173));
      // Undeclared exception!
      try { 
        xPathLexer0.slashes();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.788889642167893
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.whitespace();
      xPathLexer0.or();
      xPathLexer0.div();
      xPathLexer0.div();
      xPathLexer0.notEquals();
      xPathLexer0.number();
      xPathLexer0.rightParen();
      xPathLexer0.dots();
      xPathLexer0.rightBracket();
      xPathLexer0.dollar();
      xPathLexer0.consume((-608));
      xPathLexer0.doubleColon();
      // Undeclared exception!
      try { 
        xPathLexer0.dots();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      String string0 = "m%^(jR%h$2nb,1SH";
      XPathLexer xPathLexer0 = null;
      try {
        xPathLexer0 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.312080666358146
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("AIRW}sW:H'\"xHj/G");
      xPathLexer0.relationalOperator();
      xPathLexer0.div();
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals("A", token0.getTokenText());
      
      Token token1 = xPathLexer0.leftParen();
      assertEquals("I", token1.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token2 = xPathLexer0.minus();
      assertEquals(6, token2.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("W", token3.getTokenText());
      
      Token token4 = xPathLexer0.rightParen();
      assertEquals("}", token4.getTokenText());
      
      xPathLexer0.and();
      xPathLexer0.pipe();
      Token token5 = xPathLexer0.nextToken();
      assertEquals("W:H'\"xHj/G", token5.getTokenText());
      
      xPathLexer0.div();
      xPathLexer0.or();
      Token token6 = xPathLexer0.literal();
      assertNull(token6);
      
      Token token7 = xPathLexer0.number();
      assertEquals("", token7.getTokenText());
      
      Token token8 = xPathLexer0.rightParen();
      assertEquals(2, token8.getTokenType());
      
      xPathLexer0.div();
      xPathLexer0.pipe();
      Token token9 = xPathLexer0.leftBracket();
      assertEquals(3, token9.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.isIdentifierStartChar('>');
      Token token10 = xPathLexer0.dots();
      assertEquals(13, token10.getTokenType());
      
      Token token11 = xPathLexer0.doubleColon();
      assertEquals(19, token11.getTokenType());
      
      Token token12 = xPathLexer0.number();
      assertEquals(30, token12.getTokenType());
      
      Token token13 = xPathLexer0.equals();
      assertEquals(21, token13.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      Token token14 = xPathLexer0.pipe();
      assertEquals(17, token14.getTokenType());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.684860809287588
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.star();
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      
      Token token2 = xPathLexer0.plus();
      assertEquals(5, token2.getTokenType());
      assertEquals("m", token2.getTokenText());
      
      xPathLexer0.slashes();
      Token token3 = xPathLexer0.comma();
      assertEquals("w", token3.getTokenText());
      
      Token token4 = xPathLexer0.dots();
      assertEquals("e", token4.getTokenText());
      assertEquals(13, token4.getTokenType());
      
      Token token5 = xPathLexer0.doubleColon();
      assertEquals(19, token5.getTokenType());
      assertEquals("rk", token5.getTokenText());
      
      Token token6 = xPathLexer0.slashes();
      assertEquals(11, token6.getTokenType());
      assertEquals("e", token6.getTokenText());
      
      xPathLexer0.or();
      Token token7 = xPathLexer0.leftParen();
      assertEquals(1, token7.getTokenType());
      assertEquals("n", token7.getTokenText());
      
      Token token8 = xPathLexer0.pipe();
      assertEquals(17, token8.getTokenType());
      assertEquals(".", token8.getTokenText());
      
      Token token9 = xPathLexer0.leftBracket();
      assertEquals(3, token9.getTokenType());
      
      Token token10 = xPathLexer0.identifierOrOperatorName();
      assertEquals("axpath.Token", token10.getTokenText());
      assertEquals(15, token10.getTokenType());
      
      xPathLexer0.isIdentifierStartChar('T');
      Token token11 = xPathLexer0.equals();
      assertEquals(21, token11.getTokenType());
      
      xPathLexer0.or();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token12 = xPathLexer1.comma();
      assertEquals(32, token12.getTokenType());
      
      Token token13 = xPathLexer1.rightBracket();
      assertEquals(4, token13.getTokenType());
      
      xPathLexer0.consume();
      XPathLexer xPathLexer2 = new XPathLexer("av7u9f`=&z?.*HZ");
      Token token14 = xPathLexer2.dollar();
      assertEquals(26, token14.getTokenType());
      assertEquals("a", token14.getTokenText());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.6475760163169297
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(3, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      Token token2 = xPathLexer0.leftParen();
      assertEquals(1, token2.getTokenType());
      
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertNull(token3);
      
      xPathLexer0.setPreviousToken(token1);
      Token token4 = xPathLexer0.getPreviousToken();
      assertEquals((-1), token4.getTokenType());
      
      Token token5 = xPathLexer0.equals();
      assertEquals(21, token5.getTokenType());
      
      Token token6 = xPathLexer0.minus();
      assertEquals(6, token6.getTokenType());
      
      xPathLexer0.relationalOperator();
      char char0 = xPathLexer0.LA(1);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=3.393596401674919
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("rv6!SL<wLMeVW`");
      xPathLexer0.consume(0);
      xPathLexer0.identifier();
      xPathLexer0.pipe();
      xPathLexer0.literal();
      xPathLexer0.consume();
      xPathLexer0.consume();
      Token token0 = xPathLexer0.rightParen();
      xPathLexer0.slashes();
      xPathLexer0.setXPath("m.eD8-9E+p,y$[vu4UV");
      xPathLexer0.dollar();
      xPathLexer0.leftParen();
      xPathLexer0.minus();
      xPathLexer0.slashes();
      xPathLexer0.operatorName();
      xPathLexer0.number();
      xPathLexer0.setXPath("m.eD8-9E+p,y$[vu4UV");
      xPathLexer0.relationalOperator();
      xPathLexer0.slashes();
      xPathLexer0.at();
      xPathLexer0.minus();
      xPathLexer0.getXPath();
      xPathLexer0.at();
      xPathLexer0.equals();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.pipe();
      xPathLexer0.isIdentifierChar(',');
      xPathLexer0.leftBracket();
      xPathLexer0.doubleColon();
      xPathLexer0.literal();
      xPathLexer0.consume(0);
      xPathLexer0.or();
      xPathLexer0.star();
      xPathLexer0.consume(0);
      Token token1 = xPathLexer0.and();
      assertNull(token1);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.3180422626099455
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("rv6!SL<wLMeVW`");
      xPathLexer0.consume(0);
      Token token0 = xPathLexer0.identifier();
      assertEquals(15, token0.getTokenType());
      assertEquals("rv6", token0.getTokenText());
      
      Token token1 = xPathLexer0.pipe();
      assertEquals("!", token1.getTokenText());
      
      Token token2 = xPathLexer0.literal();
      assertNull(token2);
      
      xPathLexer0.consume();
      xPathLexer0.consume();
      Token token3 = xPathLexer0.rightParen();
      assertEquals(2, token3.getTokenType());
      
      xPathLexer0.slashes();
      xPathLexer0.setXPath("m.eD8-9E+p,y$[vu4UV");
      Token token4 = xPathLexer0.dollar();
      assertEquals("m", token4.getTokenText());
      assertEquals(26, token4.getTokenType());
      
      Token token5 = xPathLexer0.leftParen();
      assertEquals(".", token5.getTokenText());
      assertEquals(1, token5.getTokenType());
      
      xPathLexer0.minus();
      xPathLexer0.slashes();
      xPathLexer0.operatorName();
      Token token6 = xPathLexer0.number();
      assertEquals(30, token6.getTokenType());
      
      xPathLexer0.setXPath("m.eD8-9E+p,y$[vu4UV");
      xPathLexer0.relationalOperator();
      Token token7 = xPathLexer0.slashes();
      assertEquals("m", token7.getTokenText());
      assertEquals(11, token7.getTokenType());
      
      Token token8 = xPathLexer0.at();
      assertEquals(16, token8.getTokenType());
      assertEquals(".", token8.getTokenText());
      
      Token token9 = xPathLexer0.minus();
      assertEquals("e", token9.getTokenText());
      
      xPathLexer0.div();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.operatorName();
      Token token10 = xPathLexer0.comma();
      assertEquals("D", token10.getTokenText());
      assertEquals(32, token10.getTokenType());
      
      xPathLexer1.colon();
      Token token11 = xPathLexer1.pipe();
      assertEquals(17, token11.getTokenType());
      
      Token token12 = xPathLexer1.leftBracket();
      assertEquals(3, token12.getTokenType());
      
      Token token13 = xPathLexer1.colon();
      assertEquals(18, token13.getTokenType());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.974156516304798
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("YY]>cp1@z :Ia");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("YY", token0.getTokenText());
      assertEquals(19, token0.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.minus();
      assertEquals(6, token1.getTokenType());
      assertEquals("]", token1.getTokenText());
      
      Token token2 = xPathLexer0.relationalOperator();
      assertEquals(">", token2.getTokenText());
      assertEquals(9, token2.getTokenType());
      
      Token token3 = xPathLexer0.not();
      assertEquals(23, token3.getTokenType());
      
      xPathLexer0.rightParen();
      xPathLexer0.and();
      Token token4 = xPathLexer0.pipe();
      assertEquals("1", token4.getTokenText());
      assertEquals(17, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(16, token5.getTokenType());
      
      xPathLexer0.setXPath("ssY2i+/b");
      Token token6 = xPathLexer0.dollar();
      assertEquals("s", token6.getTokenText());
      assertEquals(26, token6.getTokenType());
      
      Token token7 = xPathLexer0.leftParen();
      assertEquals(1, token7.getTokenType());
      assertEquals("s", token7.getTokenText());
      
      Token token8 = xPathLexer0.equals();
      assertEquals(21, token8.getTokenType());
      
      Token token9 = xPathLexer0.number();
      assertEquals(30, token9.getTokenType());
      
      Token token10 = xPathLexer0.star();
      assertEquals("i", token10.getTokenText());
      assertEquals(20, token10.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("YY]>cp1@z :Ia");
      Token token11 = xPathLexer1.nextToken();
      assertEquals("YY", token11.getTokenText());
      assertEquals(15, token11.getTokenType());
      
      xPathLexer1.relationalOperator();
      xPathLexer0.div();
      Token token12 = xPathLexer0.nextToken();
      assertEquals(5, token12.getTokenType());
      assertEquals("+", token12.getTokenText());
      
      Token token13 = xPathLexer1.rightParen();
      assertEquals(2, token13.getTokenType());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.9050361680056385
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("YY]>cp1@z :Ia");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("YY", token0.getTokenText());
      assertEquals(19, token0.getTokenType());
      
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(">", token1.getTokenText());
      assertEquals(4, token1.getTokenType());
      
      Token token2 = xPathLexer0.identifier();
      assertEquals(15, token2.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      Token token3 = xPathLexer0.star();
      assertEquals(20, token3.getTokenType());
      assertEquals("@", token3.getTokenText());
      
      xPathLexer0.colon();
      Token token4 = xPathLexer0.leftBracket();
      assertEquals(3, token4.getTokenType());
      assertEquals(" ", token4.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token5 = xPathLexer0.nextToken();
      assertEquals(":", token5.getTokenText());
      assertEquals(18, token5.getTokenType());
      
      xPathLexer1.relationalOperator();
      xPathLexer0.div();
      Token token6 = xPathLexer1.nextToken();
      assertEquals((-1), token6.getTokenType());
      
      Token token7 = xPathLexer1.rightParen();
      assertEquals(2, token7.getTokenType());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=3.5841337221391205
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.star();
      xPathLexer0.leftBracket();
      xPathLexer0.rightParen();
      xPathLexer0.comma();
      xPathLexer0.doubleColon();
      xPathLexer0.slashes();
      xPathLexer0.plus();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.rightParen();
      xPathLexer0.plus();
      xPathLexer0.setXPath("*r*BWoij0a1 y}{tnrd");
      xPathLexer0.identifier();
      xPathLexer0.notEquals();
      xPathLexer0.rightBracket();
      xPathLexer0.dollar();
      xPathLexer0.dots();
      xPathLexer0.not();
      xPathLexer0.rightParen();
      // Undeclared exception!
      try { 
        xPathLexer0.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.871460890110637
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("AIRW}sW:H'\"xHj/G");
      xPathLexer0.relationalOperator();
      xPathLexer0.div();
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals("A", token0.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.minus();
      assertEquals("I", token1.getTokenText());
      assertEquals(6, token1.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token2 = xPathLexer0.not();
      assertEquals("R", token2.getTokenText());
      
      Token token3 = xPathLexer0.rightParen();
      assertEquals("W", token3.getTokenText());
      
      xPathLexer0.and();
      Token token4 = xPathLexer0.pipe();
      assertEquals(17, token4.getTokenType());
      assertEquals("}", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(15, token5.getTokenType());
      assertEquals("sW", token5.getTokenText());
      
      xPathLexer0.div();
      xPathLexer0.or();
      Token token6 = xPathLexer0.equals();
      assertEquals(21, token6.getTokenType());
      assertEquals(":", token6.getTokenText());
      
      Token token7 = xPathLexer0.number();
      assertEquals(30, token7.getTokenType());
      
      Token token8 = xPathLexer0.star();
      assertEquals(20, token8.getTokenType());
      assertEquals("H", token8.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("#~EFdDZN9<m+kxF");
      Token token9 = xPathLexer1.nextToken();
      assertEquals("#~EFdDZN9<m+kxF", token9.getTokenText());
      
      xPathLexer1.relationalOperator();
      xPathLexer0.div();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token10 = xPathLexer2.rightParen();
      assertEquals(2, token10.getTokenType());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.0878601706501385
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.comma();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.and();
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.setXPath("com.werken.saxpath.XPathLexer");
      Token token2 = xPathLexer0.star();
      assertEquals(20, token2.getTokenType());
      
      Token token3 = xPathLexer0.equals();
      assertEquals(21, token3.getTokenType());
      
      xPathLexer0.div();
      xPathLexer0.operatorName();
      Token token4 = xPathLexer0.comma();
      assertEquals(32, token4.getTokenType());
      assertEquals("m", token4.getTokenText());
      
      Token token5 = xPathLexer0.colon();
      assertEquals(".", token5.getTokenText());
      assertEquals(18, token5.getTokenType());
      
      Token token6 = xPathLexer0.pipe();
      assertEquals("w", token6.getTokenText());
      assertEquals(17, token6.getTokenType());
      
      Token token7 = xPathLexer0.leftBracket();
      assertEquals(3, token7.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token8 = xPathLexer1.identifierOrOperatorName();
      assertEquals(15, token8.getTokenType());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.0619140649497845
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.relationalOperator();
      xPathLexer0.div();
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      
      Token token1 = xPathLexer0.minus();
      assertEquals(6, token1.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
      
      xPathLexer0.rightParen();
      xPathLexer0.and();
      xPathLexer0.pipe();
      xPathLexer0.nextToken();
      xPathLexer0.div();
      Token token3 = xPathLexer0.rightParen();
      assertEquals(2, token3.getTokenType());
      
      Token token4 = xPathLexer0.literal();
      assertNull(token4);
      
      Token token5 = xPathLexer0.number();
      assertEquals(30, token5.getTokenType());
      
      xPathLexer0.div();
      Token token6 = xPathLexer0.pipe();
      assertEquals(17, token6.getTokenType());
      
      xPathLexer0.leftBracket();
      Token token7 = xPathLexer0.identifierOrOperatorName();
      assertNull(token7);
      
      xPathLexer0.or();
      xPathLexer0.consume();
      Token token8 = xPathLexer0.dollar();
      assertEquals(26, token8.getTokenType());
      
      Token token9 = xPathLexer0.at();
      assertEquals(16, token9.getTokenType());
      
      Token token10 = xPathLexer0.leftBracket();
      assertEquals(3, token10.getTokenType());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=3.3357209592984898
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.minus();
      xPathLexer0.dots();
      xPathLexer0.literal();
      xPathLexer0.mod();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.slashes();
      xPathLexer0.star();
      xPathLexer0.mod();
      xPathLexer0.identifier();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.getXPath();
      xPathLexer0.star();
      xPathLexer0.consume((-1173));
      // Undeclared exception!
      try { 
        xPathLexer0.or();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.020245463046953
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("AIRW}sW:H'\"xHj/G");
      xPathLexer0.relationalOperator();
      xPathLexer0.div();
      xPathLexer0.slashes();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.minus();
      assertEquals("I", token0.getTokenText());
      assertEquals(6, token0.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      assertEquals("R", token1.getTokenText());
      
      xPathLexer0.rightParen();
      xPathLexer0.and();
      Token token2 = xPathLexer0.pipe();
      assertEquals(17, token2.getTokenType());
      assertEquals("}", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("sW", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      xPathLexer0.div();
      xPathLexer0.or();
      Token token4 = xPathLexer0.equals();
      assertEquals(21, token4.getTokenType());
      assertEquals(":", token4.getTokenText());
      
      xPathLexer0.number();
      Token token5 = xPathLexer0.rightParen();
      assertEquals("H", token5.getTokenText());
      assertEquals(2, token5.getTokenType());
      
      Token token6 = xPathLexer0.at();
      assertEquals(16, token6.getTokenType());
      
      Token token7 = xPathLexer0.plus();
      assertEquals(5, token7.getTokenType());
      assertEquals("\"", token7.getTokenText());
      
      Token token8 = xPathLexer0.colon();
      assertEquals("", token8.getTokenText());
      assertEquals(18, token8.getTokenType());
      
      Token token9 = xPathLexer0.dollar();
      assertEquals(26, token9.getTokenType());
      
      Token token10 = xPathLexer0.number();
      assertEquals("", token10.getTokenText());
      assertEquals(30, token10.getTokenType());
      
      Token token11 = xPathLexer0.leftParen();
      assertEquals("H", token11.getTokenText());
      assertEquals(1, token11.getTokenType());
      
      xPathLexer0.currentPosition();
      Token token12 = xPathLexer0.slashes();
      assertEquals(12, token12.getTokenType());
      assertEquals("j/", token12.getTokenText());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.1116828448773433
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("AIRW}sW:H'\"xHj/G");
      Token token0 = xPathLexer0.plus();
      assertEquals("A", token0.getTokenText());
      assertEquals(5, token0.getTokenType());
      
      xPathLexer0.div();
      Token token1 = xPathLexer0.slashes();
      assertEquals("I", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token2 = xPathLexer0.minus();
      assertEquals("R", token2.getTokenText());
      
      Token token3 = xPathLexer0.notEquals();
      assertEquals("W}", token3.getTokenText());
      assertEquals(22, token3.getTokenType());
      
      Token token4 = xPathLexer0.comma();
      assertEquals("s", token4.getTokenText());
      assertEquals(32, token4.getTokenType());
      
      xPathLexer0.rightParen();
      xPathLexer0.and();
      Token token5 = xPathLexer0.pipe();
      assertEquals(17, token5.getTokenType());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals(15, token6.getTokenType());
      assertEquals("H", token6.getTokenText());
      
      xPathLexer0.div();
      xPathLexer0.or();
      Token token7 = xPathLexer0.equals();
      assertEquals("'", token7.getTokenText());
      
      Token token8 = xPathLexer0.number();
      assertEquals(30, token8.getTokenType());
      
      Token token9 = xPathLexer0.star();
      assertEquals("\"", token9.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token10 = xPathLexer0.whitespace();
      assertEquals((-2), token10.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("AIRW}sW:H'\"xHj/G");
      xPathLexer1.doubleColon();
      xPathLexer0.doubleColon();
      Token token11 = xPathLexer0.at();
      assertEquals(16, token11.getTokenType());
      assertEquals("j", token11.getTokenText());
      
      Token token12 = xPathLexer0.doubleColon();
      assertEquals(19, token12.getTokenType());
      
      xPathLexer1.consume();
      xPathLexer0.hasMoreChars();
      xPathLexer1.div();
      xPathLexer0.nextToken();
      Token token13 = xPathLexer1.rightParen();
      assertEquals("W", token13.getTokenText());
      assertEquals(2, token13.getTokenType());
      
      Token token14 = xPathLexer1.star();
      assertEquals(20, token14.getTokenType());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.6890424854468562
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals("o", token1.getTokenText());
      
      Token token2 = xPathLexer0.doubleColon();
      assertEquals("m.", token2.getTokenText());
      assertEquals(19, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("werken.saxpath.Token", token3.getTokenText());
      
      Token token4 = xPathLexer0.rightBracket();
      assertEquals(4, token4.getTokenType());
      
      xPathLexer0.identifier();
      xPathLexer0.div();
      Token token5 = xPathLexer0.slashes();
      assertEquals(11, token5.getTokenType());
      
      Token token6 = xPathLexer0.notEquals();
      assertEquals(22, token6.getTokenType());
      
      xPathLexer0.getXPath();
      Token token7 = xPathLexer0.colon();
      assertEquals(18, token7.getTokenType());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.9189648911610138
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("m%^(jR%h$2nb,1SH");
      xPathLexer0.number();
      xPathLexer0.and();
      xPathLexer0.endPosition();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertEquals("m", token0.getTokenText());
      
      xPathLexer0.star();
      xPathLexer0.colon();
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      assertEquals("(", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.equals();
      assertEquals(21, token3.getTokenType());
      assertEquals("%", token3.getTokenText());
      
      xPathLexer0.div();
      Token token4 = xPathLexer0.notEquals();
      assertEquals("h$", token4.getTokenText());
      assertEquals(22, token4.getTokenType());
      
      xPathLexer0.colon();
      Token token5 = xPathLexer0.star();
      assertEquals("n", token5.getTokenText());
      assertEquals(20, token5.getTokenType());
      
      xPathLexer0.plus();
      Token token6 = xPathLexer0.not();
      assertEquals(23, token6.getTokenType());
      assertEquals(",", token6.getTokenText());
      
      Token token7 = xPathLexer0.at();
      assertEquals(16, token7.getTokenType());
      assertEquals("1", token7.getTokenText());
      
      Token token8 = xPathLexer0.plus();
      assertEquals(5, token8.getTokenType());
      assertEquals("S", token8.getTokenText());
      
      Token token9 = xPathLexer0.colon();
      assertEquals("H", token9.getTokenText());
      assertEquals(18, token9.getTokenType());
      
      Token token10 = xPathLexer0.dollar();
      assertEquals(26, token10.getTokenType());
      
      Token token11 = xPathLexer0.number();
      assertEquals(30, token11.getTokenType());
      
      Token token12 = xPathLexer0.leftParen();
      assertEquals(1, token12.getTokenType());
      
      xPathLexer0.currentPosition();
      Token token13 = xPathLexer0.slashes();
      assertEquals(11, token13.getTokenType());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.6915601115444843
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.doubleColon();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      
      xPathLexer0.identifier();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(19, token1.getTokenType());
      
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      
      xPathLexer1.identifierOrOperatorName();
      xPathLexer0.or();
      Token token3 = xPathLexer0.equals();
      assertEquals(21, token3.getTokenType());
      
      Token token4 = xPathLexer1.identifierOrOperatorName();
      assertEquals(15, token4.getTokenType());
      
      Token token5 = xPathLexer1.leftBracket();
      assertEquals(3, token5.getTokenType());
      
      Token token6 = xPathLexer1.nextToken();
      assertEquals((-1), token6.getTokenType());
      
      xPathLexer1.relationalOperator();
      xPathLexer1.div();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token7 = xPathLexer1.rightParen();
      assertEquals(2, token7.getTokenType());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.8425415570797488
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer("HcfPT^?@;|5`CiIO6");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      
      xPathLexer1.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.rightBracket();
      xPathLexer0.identifier();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      
      Token token2 = xPathLexer2.number();
      assertEquals(30, token2.getTokenType());
      
      Token token3 = xPathLexer3.dots();
      assertEquals(13, token3.getTokenType());
      
      xPathLexer3.div();
      Token token4 = xPathLexer3.pipe();
      assertEquals(17, token4.getTokenType());
      
      Token token5 = xPathLexer0.equals();
      assertEquals(21, token5.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("HcfPT^?@;|5`CiIO6");
      Token token6 = xPathLexer4.nextToken();
      assertEquals(15, token6.getTokenType());
      assertEquals("HcfPT", token6.getTokenText());
      
      xPathLexer4.relationalOperator();
      xPathLexer1.div();
      Token token7 = xPathLexer0.nextToken();
      assertEquals((-1), token7.getTokenType());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.8237470402789142
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      
      xPathLexer0.div();
      xPathLexer0.leftParen();
      Token token1 = xPathLexer0.plus();
      assertEquals(5, token1.getTokenType());
      
      xPathLexer0.doubleColon();
      Token token2 = xPathLexer0.doubleColon();
      assertEquals(19, token2.getTokenType());
      
      Token token3 = xPathLexer0.number();
      assertEquals(30, token3.getTokenType());
      
      Token token4 = xPathLexer0.leftBracket();
      assertEquals(3, token4.getTokenType());
      
      xPathLexer0.leftParen();
      xPathLexer0.or();
      Token token5 = xPathLexer0.nextToken();
      assertEquals((-1), token5.getTokenType());
      
      Token token6 = xPathLexer0.identifier();
      assertEquals(15, token6.getTokenType());
      
      Token token7 = xPathLexer0.notEquals();
      assertEquals(22, token7.getTokenType());
      
      xPathLexer0.colon();
      xPathLexer0.consume(27);
      xPathLexer0.leftParen();
      Token token8 = xPathLexer0.minus();
      assertEquals(6, token8.getTokenType());
      
      xPathLexer0.leftParen();
      Token token9 = xPathLexer0.dollar();
      assertEquals(26, token9.getTokenType());
      
      Token token10 = xPathLexer0.star();
      assertEquals(20, token10.getTokenType());
      
      xPathLexer0.at();
      int int0 = xPathLexer0.endPosition();
      assertEquals(0, int0);
      
      xPathLexer0.and();
      Token token11 = xPathLexer0.literal();
      assertNull(token11);
      
      Token token12 = xPathLexer0.at();
      assertEquals(16, token12.getTokenType());
      
      xPathLexer0.rightParen();
      xPathLexer0.div();
      Token token13 = xPathLexer0.colon();
      assertEquals(18, token13.getTokenType());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.6488041417305412
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("z,\"3EF*(PDIOy/H");
      xPathLexer0.and();
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals("z", token0.getTokenText());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.211432459289928
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("AIRW}sW:H'\"xHj/G");
      xPathLexer0.relationalOperator();
      xPathLexer0.div();
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals("A", token0.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.minus();
      assertEquals("I", token1.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("RW", token2.getTokenText());
      
      Token token3 = xPathLexer0.rightParen();
      assertEquals("}", token3.getTokenText());
      
      xPathLexer0.and();
      Token token4 = xPathLexer0.pipe();
      assertEquals("s", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("W:H'\"xHj/G", token5.getTokenText());
      
      xPathLexer0.div();
      xPathLexer0.or();
      Token token6 = xPathLexer0.literal();
      assertNull(token6);
      
      Token token7 = xPathLexer0.number();
      assertEquals(30, token7.getTokenType());
      assertEquals("", token7.getTokenText());
      
      xPathLexer0.rightParen();
      xPathLexer0.div();
      xPathLexer0.pipe();
      Token token8 = xPathLexer0.leftBracket();
      assertEquals(3, token8.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("AIRW}sW:H'\"xHj/G");
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token9 = xPathLexer2.nextToken();
      assertEquals((-1), token9.getTokenType());
      
      xPathLexer1.relationalOperator();
      xPathLexer0.div();
      Token token10 = xPathLexer0.pipe();
      assertEquals(17, token10.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("AIRW}sW:H'\"xHj/G");
      Token token11 = xPathLexer3.rightParen();
      assertEquals(2, token11.getTokenType());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.842643086104339
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("b1{zvu*,'");
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      assertEquals("", token0.getTokenText());
      
      Token token1 = xPathLexer0.plus();
      assertEquals("1", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token2 = xPathLexer1.not();
      assertEquals(23, token2.getTokenType());
      
      Token token3 = xPathLexer0.at();
      assertEquals(16, token3.getTokenType());
      
      Token token4 = xPathLexer1.plus();
      assertEquals(5, token4.getTokenType());
      
      Token token5 = xPathLexer1.equals();
      assertEquals(21, token5.getTokenType());
      
      Token token6 = xPathLexer1.colon();
      assertEquals(18, token6.getTokenType());
      
      xPathLexer1.dollar();
      Token token7 = xPathLexer0.number();
      assertEquals("", token7.getTokenText());
      assertEquals(30, token7.getTokenType());
      
      Token token8 = xPathLexer1.leftParen();
      assertEquals(1, token8.getTokenType());
      
      xPathLexer0.currentPosition();
      Token token9 = xPathLexer0.slashes();
      assertEquals("z", token9.getTokenText());
      assertEquals(11, token9.getTokenType());
      
      Token token10 = xPathLexer0.dollar();
      assertEquals(26, token10.getTokenType());
      assertEquals("v", token10.getTokenText());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=3.032343996128673
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals(22, token1.getTokenType());
      
      Token token2 = xPathLexer0.identifier();
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.at();
      assertEquals(16, token3.getTokenType());
      
      Token token4 = xPathLexer0.slashes();
      assertEquals(11, token4.getTokenType());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.041456950997158
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("AIRW}sW:H'\"xHj/G");
      xPathLexer0.relationalOperator();
      xPathLexer0.div();
      xPathLexer0.slashes();
      xPathLexer0.relationalOperator();
      xPathLexer0.minus();
      xPathLexer0.relationalOperator();
      xPathLexer0.not();
      xPathLexer0.rightParen();
      xPathLexer0.and();
      xPathLexer0.pipe();
      xPathLexer0.nextToken();
      xPathLexer0.div();
      xPathLexer0.div();
      xPathLexer0.pipe();
      xPathLexer0.leftBracket();
      XPathLexer xPathLexer1 = new XPathLexer("Z;EQG:M5");
      xPathLexer1.nextToken();
      xPathLexer0.relationalOperator();
      xPathLexer0.div();
      xPathLexer0.nextToken();
      xPathLexer0.rightParen();
      xPathLexer0.getPreviousToken();
      xPathLexer1.and();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.718307110568845
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals((-1), token1.getTokenType());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      
      xPathLexer0.identifier();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token3 = xPathLexer1.equals();
      assertEquals(21, token3.getTokenType());
      
      xPathLexer1.not();
      Token token4 = xPathLexer1.not();
      assertEquals(23, token4.getTokenType());
      
      xPathLexer1.leftBracket();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.Token");
      Token token5 = xPathLexer2.identifier();
      assertEquals("com.werken.saxpath.Token", token5.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.dots();
      xPathLexer0.or();
      xPathLexer0.isIdentifierChar('x');
      xPathLexer3.getPreviousToken();
      Token token6 = xPathLexer3.dots();
      assertEquals(13, token6.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token7 = xPathLexer1.identifierOrOperatorName();
      assertEquals(15, token7.getTokenType());
      
      Token token8 = xPathLexer0.leftBracket();
      assertEquals(3, token8.getTokenType());
      
      Token token9 = xPathLexer2.colon();
      assertEquals(18, token9.getTokenType());
      
      Token token10 = xPathLexer2.slashes();
      assertEquals(11, token10.getTokenType());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=3.3801472092826317
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.minus();
      xPathLexer0.notEquals();
      xPathLexer0.leftParen();
      xPathLexer0.at();
      xPathLexer0.setXPath(", {iaD*Tdr?sXm4| ");
      xPathLexer0.comma();
      xPathLexer0.number();
      xPathLexer0.rightBracket();
      xPathLexer0.plus();
      Token token0 = xPathLexer0.dollar();
      xPathLexer0.whitespace();
      xPathLexer0.getPreviousToken();
      xPathLexer0.equals();
      xPathLexer0.literal();
      xPathLexer0.star();
      xPathLexer0.colon();
      xPathLexer0.operatorName();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.doubleColon();
      xPathLexer0.div();
      Token token1 = xPathLexer0.not();
      assertFalse(token1.equals((Object)token0));
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.8603463766175496
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("AIRW}sW:H'\"xHj/G");
      xPathLexer0.relationalOperator();
      xPathLexer0.div();
      Token token0 = xPathLexer0.slashes();
      assertEquals("A", token0.getTokenText());
      assertEquals(11, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("AIRW}sW:H'\"xHj/G");
      Token token2 = xPathLexer1.rightBracket();
      assertEquals("A", token2.getTokenText());
      assertEquals(4, token2.getTokenType());
      
      xPathLexer0.identifier();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token3 = xPathLexer2.equals();
      assertEquals(21, token3.getTokenType());
      
      Token token4 = xPathLexer1.rightParen();
      assertEquals(2, token4.getTokenType());
      
      xPathLexer1.div();
      Token token5 = xPathLexer0.pipe();
      assertEquals("}", token5.getTokenText());
      
      xPathLexer1.leftBracket();
      xPathLexer1.identifierOrOperatorName();
      Token token6 = xPathLexer2.doubleColon();
      assertEquals(19, token6.getTokenType());
      
      Token token7 = xPathLexer1.nextToken();
      assertEquals((-1), token7.getTokenType());
      
      xPathLexer1.dots();
      Token token8 = xPathLexer2.comma();
      assertEquals(32, token8.getTokenType());
      
      Token token9 = xPathLexer0.dots();
      assertEquals(13, token9.getTokenType());
      
      Token token10 = xPathLexer2.literal();
      assertNull(token10);
      
      Token token11 = xPathLexer0.colon();
      assertEquals("W", token11.getTokenText());
      
      Token token12 = xPathLexer2.pipe();
      assertEquals(17, token12.getTokenType());
      
      Token token13 = xPathLexer0.leftBracket();
      assertEquals(3, token13.getTokenType());
      
      Token token14 = xPathLexer2.colon();
      assertEquals(18, token14.getTokenType());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.906039907927343
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("YY]>cp1@z :Ia");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("YY", token0.getTokenText());
      assertEquals(19, token0.getTokenType());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals("]", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(">", token2.getTokenText());
      assertEquals(9, token2.getTokenType());
      
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(4, token3.getTokenType());
      
      Token token4 = xPathLexer0.identifier();
      assertEquals("p1", token4.getTokenText());
      
      Token token5 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token5.getTokenType());
      
      Token token6 = xPathLexer0.star();
      assertEquals(20, token6.getTokenType());
      assertEquals("@", token6.getTokenText());
      
      xPathLexer0.colon();
      Token token7 = xPathLexer0.leftBracket();
      assertEquals(3, token7.getTokenType());
      assertEquals(" ", token7.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token8 = xPathLexer0.nextToken();
      assertEquals(18, token8.getTokenType());
      assertEquals(":", token8.getTokenText());
      
      xPathLexer1.relationalOperator();
      xPathLexer0.div();
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token9 = xPathLexer2.identifierOrOperatorName();
      assertEquals(15, token9.getTokenType());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=3.320834441184115
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("nLZ!pT<T}");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.star();
      token0.toString();
      Token token1 = xPathLexer0.leftParen();
      assertEquals("L", token1.getTokenText());
      assertEquals(1, token1.getTokenType());
      
      String string0 = token0.toString();
      assertEquals("[ (20) (n)", string0);
      
      xPathLexer0.setPreviousToken(token0);
      Token token2 = xPathLexer0.plus();
      assertEquals("Z", token2.getTokenText());
      assertEquals(5, token2.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.mod();
      xPathLexer0.not();
      Token token3 = xPathLexer0.not();
      assertEquals("p", token3.getTokenText());
      assertEquals(23, token3.getTokenType());
      
      Token token4 = xPathLexer0.leftBracket();
      assertEquals("T", token4.getTokenText());
      assertEquals(3, token4.getTokenType());
      
      Token token5 = xPathLexer0.identifier();
      assertEquals(15, token5.getTokenType());
      
      xPathLexer0.div();
      Token token6 = xPathLexer0.pipe();
      assertEquals(17, token6.getTokenType());
      assertEquals("<", token6.getTokenText());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.0509900044336105
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("AIRW}sW:H'\"xHj/G");
      xPathLexer0.relationalOperator();
      xPathLexer0.div();
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals("A", token0.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.minus();
      assertEquals(6, token1.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token2 = xPathLexer0.not();
      assertEquals(23, token2.getTokenType());
      assertEquals("R", token2.getTokenText());
      
      xPathLexer0.rightParen();
      xPathLexer0.and();
      Token token3 = xPathLexer0.pipe();
      assertEquals("}", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(15, token4.getTokenType());
      
      xPathLexer0.div();
      xPathLexer0.or();
      Token token5 = xPathLexer0.equals();
      assertEquals(21, token5.getTokenType());
      assertEquals(":", token5.getTokenText());
      
      Token token6 = xPathLexer0.number();
      assertEquals(30, token6.getTokenType());
      assertEquals("", token6.getTokenText());
      
      Token token7 = xPathLexer0.rightParen();
      assertEquals(2, token7.getTokenType());
      assertEquals("H", token7.getTokenText());
      
      xPathLexer0.div();
      xPathLexer0.operatorName();
      Token token8 = xPathLexer0.comma();
      assertEquals("'", token8.getTokenText());
      assertEquals(32, token8.getTokenType());
      
      xPathLexer0.colon();
      Token token9 = xPathLexer0.pipe();
      assertEquals(17, token9.getTokenType());
      
      Token token10 = xPathLexer0.leftBracket();
      assertEquals(3, token10.getTokenType());
      
      Token token11 = xPathLexer0.colon();
      assertEquals(18, token11.getTokenType());
      
      Token token12 = xPathLexer0.plus();
      assertEquals(5, token12.getTokenType());
      assertEquals("j", token12.getTokenText());
  }
}
