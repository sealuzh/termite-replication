/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 16:51:33 GMT 2019
 */

package client.network;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import client.BomberClient;
import client.network.ClientMsgReceiver;
import java.awt.HeadlessException;
import java.net.InetSocketAddress;
import java.net.Proxy;
import java.net.Socket;
import java.sql.BatchUpdateException;
import java.sql.SQLFeatureNotSupportedException;
import java.sql.SQLIntegrityConstraintViolationException;
import java.sql.SQLInvalidAuthorizationSpecException;
import java.sql.SQLNonTransientException;
import java.sql.SQLRecoverableException;
import java.sql.SQLTimeoutException;
import java.sql.SQLTransactionRollbackException;
import java.util.LinkedList;
import java.util.function.Consumer;
import javax.swing.JScrollPane;
import messages.global.MapInfo;
import messages.global.MapListMsg;
import messages.global.SessionListMsg;
import messages.round.MagicKillMsg;
import messages.session.SessionParticipationMsg;
import org.apache.log4j.helpers.Loader;
import org.apache.log4j.helpers.LogLog;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.lang.MockThread;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.evosuite.runtime.mock.java.net.MockInetAddress;
import org.evosuite.runtime.mock.java.net.MockInetSocketAddress;
import org.evosuite.runtime.mock.java.net.MockSocket;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ClientMsgReceiver_ESTest extends ClientMsgReceiver_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      Proxy proxy0 = Proxy.NO_PROXY;
      MockSocket mockSocket0 = new MockSocket(proxy0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      SQLTimeoutException sQLTimeoutException0 = new SQLTimeoutException("", "");
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[3];
      StackTraceElement stackTraceElement0 = new StackTraceElement("", "NI", "NI", (-4));
      stackTraceElementArray0[0] = stackTraceElement0;
      StackTraceElement stackTraceElement1 = new StackTraceElement(",xpDeMSa*<%=O", "7v BFuU<Xxg0T0)d%", "", 469);
      stackTraceElementArray0[1] = stackTraceElement1;
      StackTraceElement stackTraceElement2 = new StackTraceElement(",xpDeMSa*<%=O", "&Q!'_n9&DU\"`'RP", "7v BFuU<Xxg0T0)d%", (-3872));
      stackTraceElementArray0[2] = stackTraceElement2;
      sQLTimeoutException0.printStackTrace();
      sQLTimeoutException0.setStackTrace(stackTraceElementArray0);
      sQLTimeoutException0.getLocalizedMessage();
      SQLInvalidAuthorizationSpecException sQLInvalidAuthorizationSpecException0 = new SQLInvalidAuthorizationSpecException();
      SQLInvalidAuthorizationSpecException sQLInvalidAuthorizationSpecException1 = new SQLInvalidAuthorizationSpecException("", sQLInvalidAuthorizationSpecException0);
      SQLTransactionRollbackException sQLTransactionRollbackException0 = new SQLTransactionRollbackException(sQLInvalidAuthorizationSpecException0);
      sQLInvalidAuthorizationSpecException1.getStackTrace();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      MagicKillMsg magicKillMsg0 = new MagicKillMsg((-4));
      // Undeclared exception!
      try { 
        clientMsgReceiver0.processMsg(magicKillMsg0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("client.network.ClientMsgReceiver", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.4558487091517962
  */
  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      MockSocket mockSocket0 = new MockSocket();
      mockSocket0.setReuseAddress(false);
      BomberClient bomberClient0 = BomberClient.getInstance();
      mockSocket0.getInetAddress();
      String string0 = "uxGw";
      Loader.getResource(string0);
      JScrollPane jScrollPane0 = new JScrollPane();
      EvoSuiteLocalAddress evoSuiteLocalAddress0 = null;
      NetworkHandling.sendMessageOnTcp(evoSuiteLocalAddress0, string0);
      jScrollPane0.getColumnHeader();
      Proxy.Type proxy_Type0 = Proxy.Type.SOCKS;
      int int0 = 575;
      InetSocketAddress inetSocketAddress0 = MockInetSocketAddress.createUnresolved(string0, int0);
      Proxy proxy0 = new Proxy(proxy_Type0, inetSocketAddress0);
      MockSocket mockSocket1 = new MockSocket(proxy0);
      BomberClient.getInstance();
      NetworkHandling.sendMessageOnTcp(evoSuiteLocalAddress0, string0);
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, bomberClient0);
      int int1 = (-1);
      MagicKillMsg magicKillMsg0 = new MagicKillMsg(int1);
      clientMsgReceiver0.processMsg(magicKillMsg0);
      boolean boolean0 = false;
      int int2 = 1;
      SessionParticipationMsg sessionParticipationMsg0 = new SessionParticipationMsg(boolean0, int2, string0);
      clientMsgReceiver0.processMsg(sessionParticipationMsg0);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.displayErrorMessage();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MockInetAddress.getLoopbackAddress();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      Proxy proxy0 = Proxy.NO_PROXY;
      MockSocket mockSocket0 = new MockSocket(proxy0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      SQLTimeoutException sQLTimeoutException0 = new SQLTimeoutException("", "");
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[3];
      StackTraceElement stackTraceElement0 = new StackTraceElement("", "NI", "NI", 1);
      stackTraceElementArray0[0] = stackTraceElement0;
      StackTraceElement stackTraceElement1 = new StackTraceElement("", "7v BFuU<Xxg0T0)d%", "", 469);
      stackTraceElementArray0[1] = stackTraceElement1;
      StackTraceElement stackTraceElement2 = new StackTraceElement("", "&Q!'_n9&DU\"`'/P", "7v BFuU<Xxg0T0)d%", 310);
      stackTraceElementArray0[2] = stackTraceElement2;
      sQLTimeoutException0.setStackTrace(stackTraceElementArray0);
      sQLTimeoutException0.getLocalizedMessage();
      int[] intArray0 = new int[4];
      intArray0[0] = 46;
      intArray0[1] = (-3872);
      intArray0[2] = (-3872);
      intArray0[3] = 469;
      MockThread.getDefaultUncaughtExceptionHandler();
      MockThread.setDefaultUncaughtExceptionHandler((Thread.UncaughtExceptionHandler) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.closeConnection();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("client.network.ClientMsgReceiver", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Proxy proxy0 = Proxy.NO_PROXY;
      MockSocket mockSocket0 = new MockSocket();
      BomberClient bomberClient0 = BomberClient.getInstance();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, bomberClient0);
      LinkedList<MapInfo> linkedList0 = new LinkedList<MapInfo>();
      MapInfo mapInfo0 = mock(MapInfo.class, new ViolatedAssumptionAnswer());
      boolean boolean0 = linkedList0.add(mapInfo0);
      LogLog.setQuietMode(boolean0);
      linkedList0.iterator();
      MockThread.getAllStackTraces();
      MapListMsg mapListMsg0 = new MapListMsg(linkedList0);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.processMsg(mapListMsg0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      MockInetAddress.getLoopbackAddress();
      Proxy proxy0 = Proxy.NO_PROXY;
      MockSocket mockSocket0 = new MockSocket(proxy0);
      SQLTimeoutException sQLTimeoutException0 = new SQLTimeoutException("", "");
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[3];
      StackTraceElement stackTraceElement0 = new StackTraceElement("", "N]", "N]", 1);
      stackTraceElementArray0[0] = stackTraceElement0;
      StackTraceElement stackTraceElement1 = new StackTraceElement("", "7v BFuU<Xxg0T0)d%", "", 469);
      stackTraceElementArray0[1] = stackTraceElement1;
      FileSystemHandling.shouldAllThrowIOExceptions();
      sQLTimeoutException0.getStackTrace();
      StackTraceElement stackTraceElement2 = new StackTraceElement("", "&Q!'_9&DU\"`'/iP", "7v BFuU<Xxg0T0)d%", 469);
      stackTraceElementArray0[2] = stackTraceElement2;
      sQLTimeoutException0.setStackTrace(stackTraceElementArray0);
      int[] intArray0 = new int[4];
      sQLTimeoutException0.printStackTrace();
      mockSocket0.setTcpNoDelay(false);
      BatchUpdateException batchUpdateException0 = new BatchUpdateException();
      BatchUpdateException batchUpdateException1 = new BatchUpdateException("", "7v BFuU<Xxg0T0)d%", 1, intArray0, batchUpdateException0);
      MockThread.getDefaultUncaughtExceptionHandler();
      MockThread.setDefaultUncaughtExceptionHandler((Thread.UncaughtExceptionHandler) null);
      batchUpdateException1.getUpdateCounts();
      batchUpdateException1.getLocalizedMessage();
      batchUpdateException1.getUpdateCounts();
      Throwable throwable0 = batchUpdateException0.initCause(batchUpdateException1);
      throwable0.getLocalizedMessage();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      SessionListMsg sessionListMsg0 = new SessionListMsg();
      // Undeclared exception!
      try { 
        clientMsgReceiver0.processMsg(sessionListMsg0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("messages.global.SessionListMsg", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      Proxy proxy0 = Proxy.NO_PROXY;
      MockSocket mockSocket0 = new MockSocket(proxy0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      SQLTimeoutException sQLTimeoutException0 = new SQLTimeoutException("", "");
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[3];
      StackTraceElement stackTraceElement0 = new StackTraceElement("", "NI", "NI", (-4));
      stackTraceElementArray0[0] = stackTraceElement0;
      StackTraceElement stackTraceElement1 = new StackTraceElement(",xpDeMSa*<%=O", "7v BFuU<Xxg0T0)d%", "", 469);
      stackTraceElementArray0[1] = stackTraceElement1;
      StackTraceElement stackTraceElement2 = new StackTraceElement(",xpDeMSa*<%=O", "&Q!'_n9&DU\"`'RP", "7v BFuU<Xxg0T0)d%", (-3872));
      stackTraceElementArray0[2] = stackTraceElement2;
      sQLTimeoutException0.setStackTrace(stackTraceElementArray0);
      sQLTimeoutException0.getLocalizedMessage();
      SQLInvalidAuthorizationSpecException sQLInvalidAuthorizationSpecException0 = new SQLInvalidAuthorizationSpecException();
      SQLInvalidAuthorizationSpecException sQLInvalidAuthorizationSpecException1 = new SQLInvalidAuthorizationSpecException("", sQLInvalidAuthorizationSpecException0);
      SQLTransactionRollbackException sQLTransactionRollbackException0 = new SQLTransactionRollbackException(sQLInvalidAuthorizationSpecException0);
      sQLInvalidAuthorizationSpecException1.getStackTrace();
      int[] intArray0 = new int[4];
      intArray0[0] = 46;
      intArray0[1] = (-3872);
      intArray0[2] = (-3872);
      intArray0[3] = 469;
      MockThread.getDefaultUncaughtExceptionHandler();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.closeConnection();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("client.network.ClientMsgReceiver", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      SQLTimeoutException sQLTimeoutException0 = new SQLTimeoutException("", "");
      sQLTimeoutException0.getLocalizedMessage();
      SQLInvalidAuthorizationSpecException sQLInvalidAuthorizationSpecException0 = new SQLInvalidAuthorizationSpecException();
      SQLInvalidAuthorizationSpecException sQLInvalidAuthorizationSpecException1 = new SQLInvalidAuthorizationSpecException((String) null, sQLInvalidAuthorizationSpecException0);
      SQLTransactionRollbackException sQLTransactionRollbackException0 = new SQLTransactionRollbackException(sQLInvalidAuthorizationSpecException0);
      sQLInvalidAuthorizationSpecException0.getStackTrace();
      int[] intArray0 = new int[6];
      intArray0[0] = (-3872);
      intArray0[1] = (-3872);
      intArray0[2] = (-3872);
      intArray0[3] = (-3872);
      intArray0[4] = (-3872);
      intArray0[5] = 46;
      BatchUpdateException batchUpdateException0 = new BatchUpdateException("j8a%bc9)G~g", "", (-3872), intArray0, sQLTimeoutException0);
      MockThread.getDefaultUncaughtExceptionHandler();
      ClientMsgReceiver clientMsgReceiver0 = null;
      try {
        clientMsgReceiver0 = new ClientMsgReceiver((Socket) null, (BomberClient) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("common.network.MsgReceiver", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      SQLRecoverableException sQLRecoverableException0 = new SQLRecoverableException("}lv]~K ]1etB.M", "", 140);
      SQLNonTransientException sQLNonTransientException0 = new SQLNonTransientException("j!ceC%X/WGo1><c.,q.", "Unknown message type: ", 1, sQLRecoverableException0);
      MockSocket mockSocket0 = new MockSocket();
      int[] intArray0 = new int[1];
      intArray0[0] = (-1);
      BatchUpdateException batchUpdateException0 = new BatchUpdateException("}lv]~K ]1etB.M", intArray0);
      batchUpdateException0.initCause(sQLRecoverableException0);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      batchUpdateException0.forEach(consumer0);
      batchUpdateException0.spliterator();
      BatchUpdateException batchUpdateException1 = new BatchUpdateException();
      MockThread.getDefaultUncaughtExceptionHandler();
      MockThread.setDefaultUncaughtExceptionHandler((Thread.UncaughtExceptionHandler) null);
      BatchUpdateException batchUpdateException2 = new BatchUpdateException("}lv]~K ]1etB.M", intArray0, sQLRecoverableException0);
      batchUpdateException0.getUpdateCounts();
      MockThread.getDefaultUncaughtExceptionHandler();
      BatchUpdateException batchUpdateException3 = new BatchUpdateException();
      MockThrowable mockThrowable0 = new MockThrowable();
      BatchUpdateException batchUpdateException4 = (BatchUpdateException)batchUpdateException3.initCause(batchUpdateException2);
      batchUpdateException3.getLocalizedMessage();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      BatchUpdateException batchUpdateException5 = new BatchUpdateException(batchUpdateException2);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.handleConnectionLoss(batchUpdateException4);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      SQLIntegrityConstraintViolationException sQLIntegrityConstraintViolationException0 = new SQLIntegrityConstraintViolationException((Throwable) null);
      SQLFeatureNotSupportedException sQLFeatureNotSupportedException0 = new SQLFeatureNotSupportedException("PIYy#{'hDyBf#CESwP", sQLIntegrityConstraintViolationException0);
      SQLNonTransientException sQLNonTransientException0 = new SQLNonTransientException("V", "V", (-1048), sQLFeatureNotSupportedException0);
      MockSocket mockSocket0 = new MockSocket();
      int[] intArray0 = new int[1];
      intArray0[0] = (-1048);
      BatchUpdateException batchUpdateException0 = new BatchUpdateException("PIYy#{'hDyBf#CESwP", intArray0);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      batchUpdateException0.forEach(consumer0);
      batchUpdateException0.spliterator();
      BatchUpdateException batchUpdateException1 = new BatchUpdateException("", "QhpNPoq\"\"K~t", (-1048), intArray0, sQLFeatureNotSupportedException0);
      MockThread.getDefaultUncaughtExceptionHandler();
      MockThread.setDefaultUncaughtExceptionHandler((Thread.UncaughtExceptionHandler) null);
      BatchUpdateException batchUpdateException2 = new BatchUpdateException("M'\"O{tGu&{VezYo", intArray0, (Throwable) null);
      batchUpdateException2.getUpdateCounts();
      MockThread.getDefaultUncaughtExceptionHandler();
      BatchUpdateException batchUpdateException3 = new BatchUpdateException((String) null, "V", (-1048), intArray0);
      MockThrowable mockThrowable0 = new MockThrowable();
      batchUpdateException3.initCause(mockThrowable0);
      batchUpdateException1.getLocalizedMessage();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      BatchUpdateException batchUpdateException4 = new BatchUpdateException(batchUpdateException3);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.handleConnectionLoss(batchUpdateException4);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }
}
