/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 17:31:11 GMT 2019
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Comparator;
import java.util.ConcurrentModificationException;
import java.util.LinkedList;
import java.util.function.Consumer;
import java.util.function.Predicate;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.businessLayer.VariableSummary;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.833935207609336
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      Variable.validateFields(rawVariable0);
      derivedVariable0.containsSourceVariable(rawVariable0);
      derivedVariable0.setYear("6/xW`2OAcS'P9d<+7");
      rawVariable0.codeBookNumber = "6/xW`2OAcS'P9d<+7";
      derivedVariable0.setCategory("UNABLE_TO_ROLLBACK");
      derivedVariable0.setCleaned(false);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName("UNABLE_TO_ROLLBACK");
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.questionNumber = "UNABLE_TO_CHECK_USER_EXISTS";
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      arrayList0.parallelStream();
      arrayList0.add((Variable) rawVariable0);
      derivedVariable0.setSourceVariables(arrayList0);
      rawVariable0.setColumnStart("7X\u0005p((yrH4h");
      derivedVariable0.getIdentifier();
      derivedVariable0.getYear();
      derivedVariable0.isCleaned();
      rawVariable0.getColumnStart();
      derivedVariable0.getSourceVariables();
      rawVariable0.clone();
      derivedVariable0.clone();
      assertEquals("6/xW`2OAcS'P9d<+7", derivedVariable0.getYear());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.7226803174974408
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<String> arrayList0 = Variable.validateFields(rawVariable0);
      ArrayList<SupportingDocument> arrayList1 = rawVariable0.getSupportingDocuments();
      Predicate.isEqual((Object) arrayList1);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) arrayList0);
      Predicate<Object> predicate1 = predicate0.negate();
      Integer integer0 = new Integer(1);
      predicate1.test(rawVariable0);
      Predicate<Object> predicate2 = Predicate.isEqual((Object) arrayList0);
      Predicate<Object> predicate3 = predicate2.negate();
      Predicate<Object> predicate4 = predicate1.and(predicate3);
      Predicate<Object> predicate5 = predicate4.or(predicate2);
      Predicate<Object> predicate6 = predicate2.negate();
      predicate6.and(predicate0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      Predicate.isEqual((Object) predicate6);
      Object object0 = new Object();
      ValueLabel valueLabel0 = new ValueLabel();
      predicate0.test(predicate6);
      Predicate<Object> predicate7 = predicate3.or(predicate2);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList1.add(supportingDocument0);
      Predicate.isEqual((Object) predicate2);
      predicate2.negate();
      predicate4.negate();
      Object object1 = rawVariable0.clone();
      Predicate.isEqual(object1);
      predicate6.and(predicate7);
      predicate5.test(predicate0);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.692334588378946
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      User user0 = new User();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) user0);
      Predicate<Object> predicate1 = predicate0.negate();
      RawVariable rawVariable0 = new RawVariable();
      predicate0.test(rawVariable0);
      Predicate<Object> predicate2 = predicate1.or(predicate0);
      Predicate<Object> predicate3 = predicate2.negate();
      Predicate<Object> predicate4 = predicate3.and(predicate1);
      Variable.validateFields(rawVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable1, rawVariable0);
      Predicate.isEqual((Object) rawVariable0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      RawVariable rawVariable2 = new RawVariable();
      Predicate.isEqual((Object) rawVariable2);
      Object object0 = new Object();
      ValueLabel valueLabel0 = new ValueLabel();
      predicate3.test(predicate0);
      Predicate<Object> predicate5 = predicate0.or(predicate3);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = rawVariable1.getSupportingDocuments();
      arrayList0.add(supportingDocument0);
      Predicate<Object> predicate6 = Predicate.isEqual((Object) supportingDocument1);
      predicate2.negate();
      predicate5.negate();
      Predicate.isEqual((Object) arrayList0);
      predicate0.and(predicate6);
      predicate4.test("lha.mrc.ac.uk:LHA");
      SupportingDocument supportingDocument3 = new SupportingDocument();
      rawVariable2.containsSupportingDocument(supportingDocument2);
      rawVariable0.getDisplayItemIdentifier();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.66448821243766
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setNotes("B");
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      rawVariable1.getSupportingDocuments();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) rawVariable0);
      predicate0.test((Object) null);
      RawVariable rawVariable2 = (RawVariable)rawVariable0.clone();
      Predicate<Object> predicate1 = Predicate.isEqual((Object) rawVariable2);
      Predicate<Object> predicate2 = predicate0.and(predicate1);
      predicate0.or(predicate2);
      Predicate<Object> predicate3 = predicate0.and(predicate2);
      predicate1.test(predicate3);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      RawVariable rawVariable3 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable3, rawVariable1);
      assertEquals("B", rawVariable0.getNotes());
      assertEquals("", rawVariable0.getLabel());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.624728496322497
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.clone();
      OntologyTerm ontologyTerm0 = null;
      // Undeclared exception!
      try { 
        derivedVariable0.updateOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.849292221023765
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      LinkedList<OntologyTerm> linkedList0 = new LinkedList<OntologyTerm>();
      ontologyTerm0.setTerm("Z? $cX,%{4a");
      derivedVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      LinkedList<OntologyTerm> linkedList1 = new LinkedList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      arrayList1.addAll((Collection<? extends OntologyTerm>) arrayList0);
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      arrayList1.addAll((Collection<? extends OntologyTerm>) linkedList1);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable0.setCategory("");
      rawVariable0.containsSupportingDocument(supportingDocument0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.getColumnStart();
      rawVariable0.getCleaningDescription();
      derivedVariable0.cloneAttributes(rawVariable1);
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertFalse(rawVariable1.isCoded());
      assertEquals(0, rawVariable1.getIdentifier());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("Unknown", rawVariable1.getAvailability());
      
      rawVariable0.getIdentifier();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm2);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.addOntologyTerms(arrayList0);
      // Undeclared exception!
      try { 
        rawVariable0.removeSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.6464843611798576
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<String> arrayList0 = Variable.validateFields(rawVariable0);
      ArrayList<SupportingDocument> arrayList1 = rawVariable0.getSupportingDocuments();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) arrayList1);
      Predicate<Object> predicate1 = Predicate.isEqual((Object) arrayList0);
      predicate0.negate();
      Integer integer0 = new Integer(3291);
      predicate0.test(integer0);
      Predicate<Object> predicate2 = Predicate.isEqual((Object) predicate0);
      Predicate<Object> predicate3 = predicate2.or(predicate1);
      Predicate<Object> predicate4 = predicate3.and(predicate1);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      Predicate.isEqual((Object) predicate0);
      Object object0 = new Object();
      ValueLabel valueLabel0 = new ValueLabel();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      Predicate<Object> predicate5 = Predicate.isEqual((Object) supportingDocument1);
      Predicate<Object> predicate6 = predicate4.negate();
      predicate6.negate();
      Object object1 = new Object();
      predicate0.and(predicate5);
      predicate6.negate();
      Variable.detectChangesInAlternativeVariable((User) null, rawVariable0, (Variable) null);
      predicate2.test(predicate4);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument2);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.cloneAttributes((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.createVariableSummary();
      String string0 = "";
      derivedVariable0.setYear("");
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.0003893532655903
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm1);
      ontologyTerm1.setNameSpace((String) null);
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      LinkedList<OntologyTerm> linkedList0 = new LinkedList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList0.addAll((Collection<? extends OntologyTerm>) linkedList0);
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      RawVariable rawVariable3 = new RawVariable();
      rawVariable3.setForm("Cg");
      assertEquals("Cg", rawVariable3.getForm());
      
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      rawVariable1.updateOntologyTerm(ontologyTerm1);
      User user0 = new User();
      RawVariable rawVariable4 = new RawVariable();
      RawVariable rawVariable5 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable4, rawVariable5);
      assertEquals("Unknown", rawVariable4.getCategory());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      User user0 = new User();
      user0.setAddressLine2("UNABLE_TO_UPDATE_CLEANING_STATE");
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setCodeBookNumber("UNABLE_TO_UPDATE_CLEANING_STATE");
      rawVariable1.getFilePath();
      rawVariable1.getSupportingDocuments();
      assertEquals("UNABLE_TO_UPDATE_CLEANING_STATE", rawVariable1.getCodeBookNumber());
      
      rawVariable0.getQuestionNumber();
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setNotes("ONTOLOGY_TERM");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCodeBookNumber("ONTOLOGY_TERM");
      derivedVariable0.createVariableSummary();
      derivedVariable0.getFilePath();
      assertEquals("ONTOLOGY_TERM", derivedVariable0.getCodeBookNumber());
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable1.getSourceVariables();
      derivedVariable1.removeSourceVariables(arrayList0);
      assertFalse(derivedVariable1.isNewRecord());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = "5L9+/8{*F^WnR";
      rawVariable0.setCodeBookNumber("iXGk'Ms'>[ZR");
      rawVariable0.getFilePath();
      assertEquals("iXGk'Ms'>[ZR", rawVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.196631411912473
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.createVariableSummary();
      derivedVariable0.setYear("");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace("");
      ontologyTerm0.setNameSpace("");
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.getDisplayName();
      ontologyTerm1.setTerm("");
      derivedVariable0.notes = "";
      derivedVariable0.removeOntologyTerm(ontologyTerm1);
      derivedVariable0.setColumnEnd("xiKU|#e'K$F+W0");
      derivedVariable0.setAlias("_T5e^XS{");
      derivedVariable0.isCoded();
      derivedVariable0.getCleaningDescription();
      derivedVariable0.setQuestionNumber("xiKU|#e'K$F+W0");
      Variable.validateFields(derivedVariable0);
      derivedVariable0.getFilePath();
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.000193217147124
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      LinkedList<OntologyTerm> linkedList0 = new LinkedList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      LinkedList<OntologyTerm> linkedList1 = new LinkedList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList2 = derivedVariable0.getOntologyTerms();
      arrayList0.addAll((Collection<? extends OntologyTerm>) arrayList1);
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      arrayList1.addAll((Collection<? extends OntologyTerm>) arrayList2);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setForm("UNABLE_TO_COMMIT_CHANGES");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      Variable.validateFields(rawVariable0);
      User user1 = new User("8a{(e;QdG764H%\";N ", "8a{(e;QdG764H%\";N ");
      ArrayList<MacawChangeEvent> arrayList4 = Variable.detectFieldChanges(user1, rawVariable0, derivedVariable0);
      assertEquals("UNABLE_TO_COMMIT_CHANGES", rawVariable0.getForm());
      assertEquals(1, arrayList4.size());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.9701754186958174
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.createVariableSummary();
      derivedVariable0.setYear("");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace("");
      ontologyTerm0.setNameSpace("");
      derivedVariable0.notes = "Z_HF";
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.getDisplayName();
      ontologyTerm1.setTerm("");
      derivedVariable0.notes = "";
      derivedVariable0.removeOntologyTerm(ontologyTerm1);
      derivedVariable0.setColumnEnd("xiKU|#e'K$F+W0");
      derivedVariable0.setAlias("_T5e^XS{");
      derivedVariable0.isCoded();
      derivedVariable0.getCleaningDescription();
      derivedVariable0.getDisplayItemIdentifier();
      derivedVariable0.getCleaningStatus();
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.isCoded();
      assertEquals("xiKU|#e'K$F+W0", derivedVariable0.getColumnEnd());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      User user0 = new User();
      user0.setAddressLine2("UNABLE_TO_UPDATE_CLEANING_STATE");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = null;
      // Undeclared exception!
      try { 
        derivedVariable0.containsOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.833638386102445
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      User user0 = new User();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) user0);
      Predicate<Object> predicate1 = predicate0.negate();
      RawVariable rawVariable0 = new RawVariable();
      Object object0 = rawVariable0.clone();
      predicate0.test(object0);
      Predicate<Object> predicate2 = predicate1.or(predicate0);
      Predicate<Object> predicate3 = predicate1.and(predicate2);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      Predicate.isEqual((Object) macawChangeEvent0);
      Object object1 = new Object();
      predicate0.test(user0);
      Predicate<Object> predicate4 = predicate3.and(predicate2);
      predicate0.or(predicate4);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      arrayList0.add(supportingDocument2);
      Predicate<Object> predicate5 = Predicate.isEqual((Object) predicate0);
      predicate5.negate();
      Predicate<Object> predicate6 = predicate3.negate();
      Predicate<Object> predicate7 = Predicate.isEqual((Object) predicate6);
      predicate4.and(predicate7);
      predicate5.test(supportingDocument2);
      SupportingDocument supportingDocument3 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.getDisplayItemIdentifier();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.118124861328357
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      arrayList0.add(valueLabel0);
      arrayList0.add(valueLabel0);
      derivedVariable0.setValueLabels(arrayList0);
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      arrayList0.add(valueLabel0);
      arrayList0.add(valueLabel0);
      ArrayList<ValueLabel> arrayList2 = new ArrayList<ValueLabel>();
      arrayList0.addAll(0, (Collection<? extends ValueLabel>) arrayList2);
      derivedVariable0.isCleaned();
      arrayList0.add(valueLabel0);
      arrayList0.add(valueLabel0);
      arrayList0.remove(0);
      derivedVariable0.removeSupportingDocument((SupportingDocument) null);
      assertFalse(derivedVariable0.isNewRecord());
      
      derivedVariable0.setIsNewRecord(true);
      derivedVariable0.setIsNewRecord(true);
      derivedVariable0.addSupportingDocument((SupportingDocument) null);
      derivedVariable0.setCleaned(false);
      derivedVariable0.getFilePath();
      derivedVariable0.getSupportingDocuments();
      User user0 = new User("", "uxGw");
      RawVariable rawVariable0 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      derivedVariable0.getSupportingDocuments();
      rawVariable0.addValueLabel(valueLabel0);
      ArrayList<OntologyTerm> arrayList3 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList3.add(ontologyTerm0);
      rawVariable0.setOntologyTerms(arrayList3);
      derivedVariable0.isCoded();
      derivedVariable0.removeSourceVariables(arrayList1);
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.574464215715726
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.CANCEL;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      valueLabel0.clone();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>(5);
      ValueLabel valueLabel1 = new ValueLabel();
      arrayList0.add(valueLabel1);
      arrayList0.add(valueLabel0);
      derivedVariable0.setValueLabels(arrayList0);
      valueLabel0.setLabel("RQ<");
      derivedVariable0.removeValueLabel(valueLabel0);
      derivedVariable0.getForm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setNotes("RQ<");
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.694124545362909
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.addSourceVariable(rawVariable0);
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      derivedVariable1.setSupportingDocuments(arrayList0);
      derivedVariable1.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.addSourceVariable(derivedVariable1);
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.removeValueLabel(valueLabel0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      User user0 = new User("W3L$8-OD0JbzV'", "W3L$8-OD0JbzV'");
      user0.clone();
      user0.setAffiliation("W3L$8-OD0JbzV'");
      rawVariable0.setForm("W3L$8-OD0JbzV'");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm4);
      assertEquals("W3L$8-OD0JbzV'", rawVariable0.getForm());
      
      derivedVariable0.getNotes();
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.7518685126965625
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.addSourceVariable(rawVariable0);
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setNameSpace("Cg");
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      LinkedList<OntologyTerm> linkedList0 = new LinkedList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      arrayList1.addAll((Collection<? extends OntologyTerm>) arrayList0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setForm("R2eqm/1j'zF1)A[PjN");
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable1.containsSupportingDocument(supportingDocument0);
      rawVariable0.getDisplayItemIdentifier();
      rawVariable1.getForm();
      assertEquals("R2eqm/1j'zF1)A[PjN", rawVariable1.getForm());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getValueLabels();
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.053085404600997
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      derivedVariable0.setCategory("lFm(. o-k");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName("lFm(. o-k");
      ontologyTerm0.setDescription("");
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.setCategory("");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIsNewRecord(true);
      derivedVariable0.columnEnd = null;
      supportingDocument0.clone();
      rawVariable0.addSupportingDocument(supportingDocument0);
      rawVariable0.setYear("");
      derivedVariable0.getAvailability();
      derivedVariable0.getCategory();
      Variable.validateFields(derivedVariable0);
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.getDisplayName();
      derivedVariable0.setCleaningStatus("W'WQHsL|R5");
      assertEquals("W'WQHsL|R5", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.6678860933481157
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setNotes("ONTOLOGY_TERM");
      rawVariable0.clone();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.clone();
      ontologyTerm0.setOntologyName("xiKU|#e'K$F+W0");
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.setYear("OCPtU:^|zhE7\"1EZOz{");
      rawVariable0.getFilePath();
      rawVariable0.setCodeBookNumber("UNABLE_TO_GET_AVAILABILITY_STATE_IDENTIFIER");
      assertEquals("ONTOLOGY_TERM", rawVariable0.getNotes());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.6673108848350298
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("t$]7ol3/wv+]9K;");
      rawVariable0.getName();
      rawVariable0.clone();
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      rawVariable0.addSupportingDocuments(arrayList0);
      rawVariable0.getFilePath();
      derivedVariable0.getOntologyTerms();
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.7064187767445995
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<String> arrayList0 = Variable.validateFields(rawVariable0);
      ArrayList<SupportingDocument> arrayList1 = rawVariable0.getSupportingDocuments();
      arrayList0.add("6u'ZVna5*+g>");
      Predicate<Object> predicate0 = Predicate.isEqual((Object) arrayList1);
      Predicate.isEqual((Object) arrayList0);
      assertEquals(2, arrayList0.size());
      
      predicate0.negate();
      User user0 = new User("V}]V8uZ'^0d14]xb", "V}]V8uZ'^0d14]xb");
      user0.setAffiliation("");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      RawVariable rawVariable3 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable3, rawVariable2);
      derivedVariable0.cloneAttributes(rawVariable0);
      derivedVariable0.cloneAttributes(rawVariable2);
      derivedVariable0.isNewRecord();
      rawVariable2.getYear();
      assertFalse(rawVariable2.isCoded());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.9084104673892024
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getDisplayItemIdentifier();
      derivedVariable0.setAvailability("0");
      derivedVariable0.clone();
      derivedVariable0.setQuestionNumber("iXGk'Ms'>[ZR");
      derivedVariable0.getNotes();
      derivedVariable0.setLabel("");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.setIdentifier(183);
      derivedVariable0.setCodeBookNumber("");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList0.forEach(consumer0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      arrayList0.add(supportingDocument0);
      derivedVariable0.removeSupportingDocuments(arrayList0);
      derivedVariable0.form = "S966QVjIuZ`=";
      derivedVariable0.getCodeBookNumber();
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.removeValueLabel(valueLabel0);
      derivedVariable0.setSourceVariables(arrayList1);
      ArrayList<OntologyTerm> arrayList2 = derivedVariable0.getOntologyTerms();
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms(arrayList2);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.975507230548075
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setNameSpace("-yJ");
      ontologyTerm0.setNameSpace("-yJ");
      ontologyTerm0.setIdentifier((-5));
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable1.getOntologyTerms();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.removeOntologyTerms(arrayList0);
      derivedVariable0.removeOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.getDisplayName();
      ontologyTerm2.setTerm((String) null);
      derivedVariable0.removeOntologyTerm(ontologyTerm1);
      derivedVariable2.setAvailability("rp");
      derivedVariable2.setColumnEnd("[(");
      derivedVariable0.setAlias("[(");
      derivedVariable2.isCoded();
      derivedVariable1.getCleaningDescription();
      derivedVariable2.getDisplayItemIdentifier();
      derivedVariable0.getCleaningStatus();
      assertEquals("[(", derivedVariable0.getAlias());
      
      String string0 = derivedVariable1.getCleaningStatus();
      assertEquals("Unknown", string0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.6930121983106288
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      User user0 = new User();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      ontologyTerm0.setOntologyName("\u00049[Di%zH");
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.addValueLabel(valueLabel0);
      derivedVariable0.addSourceVariable(rawVariable0);
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setOntologyName("ONGTOLOGY_TERM");
      ontologyTerm0.setNameSpace("DUPLICATE_AVAILABILITY_STATE");
      derivedVariable0.containsOntologyTerm(ontologyTerm1);
      LinkedList<OntologyTerm> linkedList0 = new LinkedList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      arrayList1.addAll((Collection<? extends OntologyTerm>) arrayList0);
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.setForm("Cg");
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      rawVariable2.updateOntologyTerm(ontologyTerm3);
      assertEquals("Cg", rawVariable2.getForm());
      
      rawVariable0.getNotes();
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.6845198108434345
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("ontologyTerm.description.saveChanges");
      derivedVariable0.setCleaningDescription("W:< Ldq(Wbv;V");
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("W:< Ldq(Wbv;V", derivedVariable0.getCleaningDescription());
      assertEquals(0, arrayList0.size());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.clone();
      rawVariable0.removeSupportingDocument(supportingDocument0);
      String string0 = "7,p/SS]?";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.clone();
      ontologyTerm0.getDisplayName();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.setNotes("variable.form.label");
      rawVariable0.columnEnd = "7,p/SS]?";
      rawVariable0.questionNumber = "8a{(e;QdG764H%\";N ";
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = null;
      // Undeclared exception!
      try { 
        derivedVariable0.removeSourceVariables((ArrayList<Variable>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.7782662399853244
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.addSourceVariable(rawVariable0);
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.addValueLabel(valueLabel0);
      ontologyTerm0.setNameSpace("Cg");
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
      
      LinkedList<OntologyTerm> linkedList0 = new LinkedList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.addAll((Collection<? extends OntologyTerm>) linkedList0);
      LinkedList<OntologyTerm> linkedList1 = new LinkedList<OntologyTerm>();
      arrayList0.addAll((Collection<? extends OntologyTerm>) linkedList0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.getOntologyTerms();
      rawVariable0.cloneAttributes(derivedVariable0);
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.6401461330725327
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace("8a{(e;QdG764H%\";N ");
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
      
      LinkedList<OntologyTerm> linkedList0 = new LinkedList<OntologyTerm>();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList1.add(supportingDocument0);
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      arrayList2.add(supportingDocument0);
      derivedVariable0.removeSupportingDocuments(arrayList2);
      derivedVariable0.getCodeBookNumber();
      ArrayList<Variable> arrayList3 = derivedVariable0.getSourceVariables();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.removeValueLabel(valueLabel0);
      derivedVariable0.setSourceVariables(arrayList3);
      derivedVariable0.getOntologyTerms();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.removeOntologyTerms(arrayList0);
      derivedVariable0.setCleaningStatus((String) null);
      derivedVariable0.setCodeBookNumber("");
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.214534764133424
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.addSourceVariable(rawVariable0);
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      ontologyTerm0.setNameSpace("Cg");
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      LinkedList<OntologyTerm> linkedList0 = new LinkedList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.addAll((Collection<? extends OntologyTerm>) linkedList0);
      LinkedList<OntologyTerm> linkedList1 = new LinkedList<OntologyTerm>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      // Undeclared exception!
      try { 
        rawVariable0.containsSupportingDocument((SupportingDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = null;
      String string0 = rawVariable0.getQuestionNumber();
      assertNotNull(string0);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.7471740047912334
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setIdentifier((-1968526675));
      derivedVariable0.questionNumber = "user.lastName.label";
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList0.sort(comparator0);
      derivedVariable0.addOntologyTerms(arrayList0);
      derivedVariable0.setColumnEnd("");
      derivedVariable0.clone();
      derivedVariable0.getCleaningDescription();
      derivedVariable0.isCoded();
      derivedVariable0.getNotes();
      assertEquals("-1968526675", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.115244237163912
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.addSourceVariable(rawVariable0);
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.addSourceVariable(derivedVariable1);
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.removeValueLabel(valueLabel0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList0.sort(comparator0);
      arrayList0.parallelStream();
      arrayList0.add(ontologyTerm0);
      arrayList0.add(ontologyTerm0);
      rawVariable0.columnEnd = "M<";
      derivedVariable0.removeOntologyTerms(arrayList0);
      derivedVariable0.containsSourceVariable(derivedVariable1);
      derivedVariable1.setOntologyTerms(arrayList0);
      rawVariable0.getCleaningDescription();
      derivedVariable1.setFilePath("");
      derivedVariable1.setForm("M<");
      derivedVariable1.setFilePath("M<");
      derivedVariable0.getAlias();
      derivedVariable1.getDisplayItemIdentifier();
      derivedVariable1.getCleaningStatus();
      derivedVariable1.getCleaningStatus();
      assertEquals("M<", derivedVariable1.getFilePath());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.7267757811259026
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      Variable.validateFields(rawVariable0);
      rawVariable0.notes = null;
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) arrayList0);
      predicate0.test((Object) null);
      Predicate<Object> predicate1 = predicate0.or(predicate0);
      Predicate<Object> predicate2 = predicate0.and(predicate1);
      predicate2.test(predicate1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.3708795933444664
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<String> arrayList0 = Variable.validateFields(rawVariable0);
      ArrayList<SupportingDocument> arrayList1 = rawVariable0.getSupportingDocuments();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) arrayList1);
      Predicate<Object> predicate1 = Predicate.isEqual((Object) arrayList0);
      Predicate<Object> predicate2 = predicate0.negate();
      predicate1.test(predicate2);
      Predicate<Object> predicate3 = predicate1.or(predicate0);
      Predicate<Object> predicate4 = predicate2.negate();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      Predicate.isEqual((Object) supportingDocument0);
      Object object0 = new Object();
      predicate3.test(object0);
      predicate2.or(predicate4);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      Predicate<Object> predicate5 = Predicate.isEqual((Object) null);
      Predicate<Object> predicate6 = predicate5.negate();
      rawVariable0.notes = "variable.cleaningStatus.label";
      predicate5.negate();
      Object object1 = new Object();
      Predicate.isEqual(object1);
      predicate5.and(predicate6);
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, rawVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.143308854181958
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setFilePath("W3L$8-OD0JbzV'");
      rawVariable0.setAlias("W3L$8-OD0JbzV'");
      Variable.validateFields(rawVariable0);
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.clone();
      valueLabel0.setValue("W3L$8-OD0JbzV'");
      rawVariable0.notes = "W3L$8-OD0JbzV'";
      rawVariable0.removeValueLabel(valueLabel0);
      rawVariable0.setColumnEnd("W3L$8-OD0JbzV'");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDescription("W3L$8-OD0JbzV'");
      supportingDocument0.clone();
      supportingDocument0.setIsNewRecord(false);
      rawVariable0.addSupportingDocument(supportingDocument0);
      rawVariable0.isCoded();
      User user0 = new User();
      user0.setCounty("SL<wL");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.setIsNewRecord(false);
      rawVariable0.getDisplayName();
      rawVariable0.getForm();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.getCategory();
      rawVariable0.setColumnStart("Unknown");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.setOntologyTerms(arrayList0);
      assertEquals("W3L$8-OD0JbzV'", rawVariable0.getNotes());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.parallelStream();
      String string0 = "user.lastName.label";
      rawVariable0.setNotes("user.lastName.label");
      arrayList0.ensureCapacity(0);
      rawVariable0.addSupportingDocuments(arrayList0);
      String string1 = "user.firstName.label";
      rawVariable0.setQuestionNumber("user.firstName.label");
      rawVariable0.getSupportingDocuments();
      rawVariable0.addSupportingDocument((SupportingDocument) null);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      try { 
        OntologyTerm.validateFields(ontologyTerm0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.OntologyTerm", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.521452740110338
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertTrue(boolean0);
      
      LinkedList<OntologyTerm> linkedList0 = new LinkedList<OntologyTerm>();
      derivedVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.removeValueLabel(valueLabel0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList3 = derivedVariable0.getOntologyTerms();
      arrayList3.addAll((Collection<? extends OntologyTerm>) linkedList0);
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm0.setNewRecord(true);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm2);
      VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.addSourceVariable(rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      ontologyTerm0.setNameSpace("Cg");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      boolean boolean0 = derivedVariable1.containsOntologyTerm(ontologyTerm2);
      assertFalse(boolean0);
      
      LinkedList<OntologyTerm> linkedList0 = new LinkedList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.addAll((Collection<? extends OntologyTerm>) linkedList0);
      LinkedList<OntologyTerm> linkedList1 = new LinkedList<OntologyTerm>();
      arrayList0.addAll((Collection<? extends OntologyTerm>) linkedList0);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      derivedVariable0.getLabel();
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.6206220186660607
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      User user0 = new User();
      user0.setIdentifier((-1073741822));
      user0.setAddressLine2("UNABLE_TO_UPDATE_CLEANING_STATE");
      user0.setAffiliation("UNABLE_TO_UPDATE_CLEANING_STATE");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(false);
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals(0, arrayList0.size());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=3.7364282496788563
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable1);
      valueLabel0.setIdentifier(246);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      valueLabel0.setValue("");
      supportingDocument0.getDisplayName();
      valueLabel0.setMissingValue(false);
      rawVariable0.removeSupportingDocument(supportingDocument0);
      rawVariable0.addValueLabel(valueLabel0);
      rawVariable0.getLabel();
      supportingDocument0.setIsNewRecord(false);
      supportingDocument0.setDocumentCode("X\"ct&%z4bkR0gS&Zc?");
      supportingDocument0.setTitle("G#=&8Q8%)hDx:0");
      rawVariable0.clone();
      rawVariable0.removeSupportingDocument(supportingDocument0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnStart = "";
      rawVariable0.setAlternativeVariable(derivedVariable0);
      rawVariable0.getAvailability();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      ArrayList<Object> arrayList1 = new ArrayList<Object>();
      arrayList0.removeAll(arrayList1);
      rawVariable1.removeSupportingDocuments(arrayList0);
      User user0 = new User("j)aTzw[pP1@4DB", "");
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable1);
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      
      rawVariable1.setCleaningStatus("");
      rawVariable0.setForm("j)aTzw[pP1@4DB");
      derivedVariable0.removeSourceVariable(rawVariable1);
      boolean boolean0 = rawVariable0.isNewRecord();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=3.1233553793929003
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      LinkedList<OntologyTerm> linkedList0 = new LinkedList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      arrayList2.addAll((Collection<? extends OntologyTerm>) arrayList1);
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.setForm("mF$<AF7r");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable2.questionNumber = ":9q%{Tl8nbp";
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      User user0 = new User();
      RawVariable rawVariable3 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable3, rawVariable2);
      try { 
        RawVariable.validateFields(rawVariable2);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=3.0493654671691344
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      ontologyTerm0.setNameSpace("Cg");
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      LinkedList<OntologyTerm> linkedList0 = new LinkedList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      arrayList2.addAll((Collection<? extends OntologyTerm>) arrayList1);
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.setForm("mF$<AF7r");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      User user0 = new User();
      RawVariable rawVariable3 = new RawVariable();
      ArrayList<MacawChangeEvent> arrayList3 = RawVariable.detectFieldChanges(user0, rawVariable3, rawVariable2);
      assertEquals("mF$<AF7r", rawVariable2.getForm());
      assertFalse(arrayList3.isEmpty());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.6439556568820564
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      LinkedList<OntologyTerm> linkedList0 = new LinkedList<OntologyTerm>();
      derivedVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      LinkedList<OntologyTerm> linkedList1 = new LinkedList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      arrayList1.addAll((Collection<? extends OntologyTerm>) arrayList0);
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      arrayList1.addAll((Collection<? extends OntologyTerm>) linkedList1);
      rawVariable0.setName("variable.isCleaned.saveChanges.changedToNotClean");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setForm("UNABLE_TO_COMMIT_CHANGES");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm3);
      rawVariable0.getCodeBookNumber();
      assertEquals("variable.isCleaned.saveChanges.changedToNotClean", rawVariable0.getDisplayName());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.673415053526696
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("]*yQ~TyD;");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable1.addOntologyTerms(arrayList0);
      derivedVariable0.setAlternativeVariable(derivedVariable1);
      derivedVariable0.setColumnStart("user.addressLine1.saveChanges");
      derivedVariable0.setIdentifier(909);
      derivedVariable0.setFilePath((String) null);
      derivedVariable0.createVariableSummary();
      derivedVariable0.setColumnEnd("user.addressLine1.saveChanges");
      assertEquals(909, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.8778952727983707
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setYear("]S0yhIE");
      derivedVariable0.createVariableSummary();
      derivedVariable0.setName("variable.notes.label");
      derivedVariable0.setLabel("variable.notes.label");
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      rawVariable0.setCleaned(true);
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.iterator();
      derivedVariable0.removeOntologyTerms(arrayList0);
      derivedVariable0.getLabel();
      assertEquals("variable.notes.label", derivedVariable0.getDisplayName());
      
      String string0 = rawVariable0.getAvailability();
      assertEquals("Unknown", string0);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.6206220186660607
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      User user0 = new User();
      user0.setAddressLine2("UNABLE_TO_UPDATE_CLEANING_STATE");
      user0.setAffiliation("UNABLE_TO_UPDATE_CLEANING_STATE");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setFilePath("UNABLE_TO_UPDATE_CLEANING_STATE");
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("UNABLE_TO_UPDATE_CLEANING_STATE", derivedVariable0.getFilePath());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.5719579500515657
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<String> arrayList0 = Variable.validateFields(rawVariable0);
      ArrayList<SupportingDocument> arrayList1 = rawVariable0.getSupportingDocuments();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) arrayList1);
      Predicate<Object> predicate1 = Predicate.isEqual((Object) arrayList0);
      Predicate<Object> predicate2 = predicate0.negate();
      predicate1.test(predicate2);
      Predicate<Object> predicate3 = predicate1.or(predicate0);
      Predicate<Object> predicate4 = predicate0.and(predicate2);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      Predicate.isEqual((Object) supportingDocument0);
      Object object0 = new Object();
      predicate3.test(object0);
      Predicate<Object> predicate5 = predicate2.or(predicate4);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      Predicate<Object> predicate6 = predicate2.and(predicate1);
      predicate2.and(predicate6);
      Predicate<Object> predicate7 = Predicate.isEqual((Object) null);
      predicate7.negate();
      predicate3.negate();
      assertEquals(1, arrayList0.size());
      
      Predicate.isEqual((Object) predicate4);
      predicate2.and(predicate0);
      predicate5.test(predicate7);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument2);
      assertFalse(boolean0);
      
      String string0 = rawVariable0.getDisplayItemIdentifier();
      assertEquals("0", string0);
      
      rawVariable0.getForm();
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=3.8587346994617557
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<String> arrayList0 = Variable.validateFields(rawVariable0);
      ArrayList<SupportingDocument> arrayList1 = rawVariable0.getSupportingDocuments();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) arrayList1);
      Predicate.isEqual((Object) arrayList0);
      assertEquals(1, arrayList0.size());
      
      predicate0.negate();
      Integer integer0 = new Integer(3291);
      LinkedList<OntologyTerm> linkedList0 = new LinkedList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList2 = rawVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      LinkedList<OntologyTerm> linkedList1 = new LinkedList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList2.add(ontologyTerm0);
      rawVariable0.getOntologyTerms();
      arrayList3.addAll((Collection<? extends OntologyTerm>) arrayList2);
      ArrayList<OntologyTerm> arrayList4 = new ArrayList<OntologyTerm>();
      arrayList4.addAll((Collection<? extends OntologyTerm>) linkedList0);
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm1.setNewRecord(true);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm4);
      derivedVariable0.cloneAttributes(rawVariable1);
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      
      derivedVariable0.containsSourceVariable(rawVariable0);
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.7105843579158497
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<String> arrayList0 = Variable.validateFields(rawVariable0);
      ArrayList<SupportingDocument> arrayList1 = rawVariable0.getSupportingDocuments();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) arrayList1);
      Predicate<Object> predicate1 = Predicate.isEqual((Object) arrayList0);
      Predicate<Object> predicate2 = predicate0.negate();
      Integer integer0 = new Integer(3291);
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      predicate0.test(macawChangeEvent0);
      ValueLabel valueLabel0 = new ValueLabel();
      Predicate<Object> predicate3 = Predicate.isEqual((Object) valueLabel0);
      Predicate<Object> predicate4 = predicate3.or(predicate1);
      Predicate<Object> predicate5 = predicate4.or(predicate2);
      Predicate<Object> predicate6 = predicate4.and(predicate1);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      Predicate.isEqual((Object) predicate6);
      Object object0 = new Object();
      ValueLabel valueLabel1 = new ValueLabel();
      predicate3.test(arrayList1);
      Predicate<Object> predicate7 = predicate1.or(predicate2);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList1.add(supportingDocument1);
      Predicate<Object> predicate8 = Predicate.isEqual((Object) integer0);
      Predicate<Object> predicate9 = predicate8.negate();
      predicate2.negate();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Predicate.isEqual((Object) derivedVariable0);
      predicate5.and(predicate1);
      Predicate<Object> predicate10 = predicate9.negate();
      predicate10.test(predicate7);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument2);
      rawVariable0.getDisplayItemIdentifier();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setIsNewRecord(false);
      derivedVariable0.getDisplayItemIdentifier();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      Integer integer0 = new Integer(1924);
      Integer integer1 = new Integer(2147483645);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) integer1);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate1.and(predicate0);
      predicate0.or(predicate2);
      Predicate<Object> predicate3 = predicate2.negate();
      Predicate<Object> predicate4 = predicate3.or(predicate0);
      Predicate<Object> predicate5 = predicate0.and(predicate3);
      predicate5.and(predicate1);
      predicate3.or(predicate0);
      predicate4.negate();
      Integer integer2 = new Integer(2147483645);
      Predicate<Object> predicate6 = Predicate.isEqual((Object) integer2);
      predicate6.and(predicate0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      predicate3.test(ontologyTerm1);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User();
      try { 
        User.validateFields(user0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=3.7344629538074967
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaningDescription("!9\"Szu?fcO]D%P,A{");
      rawVariable0.getName();
      rawVariable0.getCodeBookNumber();
      rawVariable0.getCategory();
      rawVariable0.isCoded();
      rawVariable0.getCleaningDescription();
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.setSourceVariables(arrayList0);
      rawVariable0.getQuestionNumber();
      rawVariable0.cloneAttributes(derivedVariable0);
      derivedVariable0.removeSourceVariable(rawVariable0);
      derivedVariable0.getCategory();
      derivedVariable0.getCleaningDescription();
      derivedVariable0.setIdentifier((-1));
      derivedVariable0.getSourceVariables();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.codeBookNumber = "Unknown";
      derivedVariable0.getFilePath();
      derivedVariable0.getDisplayItemIdentifier();
      RawVariable rawVariable1 = new RawVariable();
      try { 
        RawVariable.validateFields(rawVariable1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.removeSupportingDocuments(arrayList0);
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.columnStart = "bYu";
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.NEW;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      derivedVariable0.setCategory("bYu");
      derivedVariable0.codeBookNumber = "variable.isCoded.label";
      valueLabel0.setValue("bYu");
      derivedVariable0.addValueLabel(valueLabel0);
      derivedVariable0.getNotes();
      derivedVariable0.getColumnStart();
      assertEquals("bYu", derivedVariable0.getColumnStart());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=3.7627707524908756
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      ontologyTerm0.setOntologyName("user.email.label");
      ontologyTerm0.getDisplayName();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.cloneAttributes(rawVariable1);
      arrayList0.add(ontologyTerm0);
      arrayList0.remove((Object) rawVariable0);
      rawVariable0.removeOntologyTerms(arrayList0);
      User user0 = new User();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.setAlternativeVariable(rawVariable1);
      rawVariable0.columnStart = "VvH";
      rawVariable0.getCodeBookNumber();
      rawVariable0.getName();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      try { 
        OntologyTerm.validateFields(ontologyTerm1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.OntologyTerm", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.214534764133424
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>(4241);
      derivedVariable0.addOntologyTerms(arrayList0);
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.addSourceVariable(rawVariable0);
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      ontologyTerm0.setNameSpace("Cg");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setIdentifier((-1));
      derivedVariable0.containsOntologyTerm(ontologyTerm1);
      LinkedList<OntologyTerm> linkedList0 = new LinkedList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList1.addAll((Collection<? extends OntologyTerm>) linkedList0);
      LinkedList<OntologyTerm> linkedList1 = new LinkedList<OntologyTerm>();
      arrayList1.addAll((Collection<? extends OntologyTerm>) linkedList1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      assertEquals("LHA", ontologyTerm3.getOntologyName());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=4.027145777258974
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.form = "pq51b&23%lsqrU[%`Fn";
      rawVariable0.isCoded();
      User user0 = new User();
      user0.setAffiliation("variable.form.label");
      user0.setStatus("LSLS|d}^+4");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      rawVariable0.getNotes();
      rawVariable0.getCleaningStatus();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable1.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDescription("LSLS|d}^+4");
      Integer[] integerArray0 = new Integer[7];
      int int0 = (-1);
      Integer integer0 = new Integer((-1));
      integerArray0[0] = integer0;
      Integer integer1 = new Integer(29);
      integerArray0[1] = integer1;
      Integer integer2 = new Integer(int0);
      integerArray0[2] = integer2;
      int int1 = 0;
      Integer integer3 = new Integer(0);
      integerArray0[3] = integer3;
      Integer integer4 = new Integer(1);
      integerArray0[4] = integer4;
      Integer integer5 = new Integer(860);
      integerArray0[5] = integer5;
      Integer integer6 = new Integer(int1);
      integerArray0[6] = integer6;
      arrayList0.toArray(integerArray0);
      supportingDocument0.setFileName("variable.form.label");
      rawVariable1.setCategory("variable.name.label");
      arrayList0.add(supportingDocument0);
      arrayList0.add(supportingDocument0);
      rawVariable1.removeSupportingDocuments(arrayList0);
      rawVariable0.clone();
      rawVariable0.cloneAttributes(rawVariable1);
      rawVariable1.getCleaningDescription();
      rawVariable0.getOntologyTerms();
      rawVariable0.getAlias();
      rawVariable0.getQuestionNumber();
      rawVariable1.isNewRecord();
      assertEquals("Unknown", rawVariable1.getCategory());
      
      rawVariable0.getFilePath();
      rawVariable0.createVariableSummary();
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.218456332760875
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.addSourceVariable(rawVariable0);
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      ontologyTerm0.setNameSpace("Cg");
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
      
      LinkedList<OntologyTerm> linkedList0 = new LinkedList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.addAll((Collection<? extends OntologyTerm>) linkedList0);
      LinkedList<OntologyTerm> linkedList1 = new LinkedList<OntologyTerm>();
      arrayList0.addAll((Collection<? extends OntologyTerm>) linkedList0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.hasSameDisplayName(derivedVariable0);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      User user0 = new User();
      ValueLabel.detectFieldChanges(user0, derivedVariable0, valueLabel0, valueLabel0);
      derivedVariable0.removeValueLabel(valueLabel0);
      derivedVariable0.setCoded(false);
      derivedVariable0.getOntologyTerms();
      String string0 = derivedVariable0.getCleaningStatus();
      assertNotNull(string0);
      assertEquals("Unknown", string0);
      
      derivedVariable0.getColumnEnd();
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.554218296452355
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      User user0 = new User();
      user0.setAddressLine2("UNABLE_TO_UPDATE_CLEAkINGSTA+E");
      user0.setAffiliation("UNABLE_TO_UPDATE_CLEAkINGSTA+E");
      user0.setIdentifier((-1));
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals(0, arrayList0.size());
      
      derivedVariable0.getName();
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.691735059102455
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.addSourceVariable(rawVariable0);
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setNameSpace("Cg");
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      LinkedList<OntologyTerm> linkedList0 = new LinkedList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      arrayList1.addAll((Collection<? extends OntologyTerm>) arrayList0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setForm("R2eqm/1j'zF1)A[PjN");
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable1.getColumnStart();
      rawVariable1.getCleaningDescription();
      assertEquals("R2eqm/1j'zF1)A[PjN", rawVariable1.getForm());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.5782737395252497
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.addSourceVariable(rawVariable0);
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setNameSpace("Cg");
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      LinkedList<OntologyTerm> linkedList0 = new LinkedList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      arrayList1.addAll((Collection<? extends OntologyTerm>) arrayList0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setForm("R2eqm/1j'zF1)A[PjN");
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable1.setAlias("R2eqm/1j'zF1)A[PjN");
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      rawVariable1.updateOntologyTerm(ontologyTerm2);
      assertEquals("R2eqm/1j'zF1)A[PjN", rawVariable1.getAlias());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=3.7842523863482636
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel1.clone();
      valueLabel0.hasSameDisplayName(valueLabel1);
      derivedVariable0.removeValueLabel(valueLabel0);
      derivedVariable0.codeBookNumber = "w-s$=H";
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.cloneAttributes(rawVariable0);
      derivedVariable0.getDisplayName();
      derivedVariable0.getCodeBookNumber();
      derivedVariable0.isCleaned();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable0.getCleaningStatus();
      assertEquals("w-s$=H", derivedVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=3.708895446945671
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaningDescription("variable.alternativeVariable.label");
      derivedVariable0.setLabel("variable.alternativeVariable.label");
      derivedVariable0.setColumnEnd("variable.alternativeVariable.label");
      derivedVariable0.getCodeBookNumber();
      derivedVariable0.getName();
      derivedVariable0.isCoded();
      derivedVariable0.setCoded(false);
      derivedVariable0.setYear("");
      derivedVariable0.clone();
      derivedVariable0.getColumnStart();
      assertEquals("variable.alternativeVariable.label", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.5782737395252497
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.addSourceVariable(rawVariable0);
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.setYear((String) null);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setNameSpace("Cg");
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      LinkedList<OntologyTerm> linkedList0 = new LinkedList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      arrayList1.addAll((Collection<? extends OntologyTerm>) arrayList0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setForm("R2eqm/1j'zF1)A[PjN");
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      rawVariable1.updateOntologyTerm(ontologyTerm2);
      assertEquals("R2eqm/1j'zF1)A[PjN", rawVariable1.getForm());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=3.6619516001640307
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      ontologyTerm0.setNameSpace("-7Qf^9J3.A+|dpyMQO");
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      LinkedList<OntologyTerm> linkedList0 = new LinkedList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      arrayList0.addAll((Collection<? extends OntologyTerm>) linkedList0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setForm("8a{(e;QdG764H%\";N ");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      rawVariable1.cloneAttributes(rawVariable1);
      assertEquals("8a{(e;QdG764H%\";N ", rawVariable1.getForm());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=3.7581339706433967
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<String> arrayList0 = Variable.validateFields(rawVariable0);
      ArrayList<SupportingDocument> arrayList1 = rawVariable0.getSupportingDocuments();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) arrayList1);
      Predicate<Object> predicate1 = Predicate.isEqual((Object) arrayList0);
      Predicate<Object> predicate2 = predicate0.negate();
      predicate1.test(predicate2);
      Predicate<Object> predicate3 = predicate1.or(predicate0);
      Predicate<Object> predicate4 = predicate2.negate();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      Predicate.isEqual((Object) supportingDocument0);
      Object object0 = new Object();
      predicate3.test(object0);
      predicate2.or(predicate4);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      Predicate<Object> predicate5 = Predicate.isEqual((Object) null);
      predicate5.negate();
      rawVariable0.notes = "variable.cleaningStatus.label";
      predicate5.negate();
      Predicate<Object> predicate6 = Predicate.isEqual((Object) predicate2);
      predicate4.and(predicate6);
      predicate3.test(predicate6);
      assertEquals(1, arrayList0.size());
      
      SupportingDocument supportingDocument2 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument2);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.cloneAttributes(rawVariable0);
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getAlias());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=3.6256878823154617
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("t$]7ol3/wv+]9K;");
      rawVariable0.getName();
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      rawVariable1.setYear("xiKU|#e'K$F+W0");
      rawVariable1.getFilePath();
      rawVariable1.setCodeBookNumber("t$]7ol3/wv+]9K;");
      assertEquals("t$]7ol3/wv+]9K;", rawVariable0.getDisplayName());
      assertEquals("t$]7ol3/wv+]9K;", rawVariable1.getCodeBookNumber());
  }
}
