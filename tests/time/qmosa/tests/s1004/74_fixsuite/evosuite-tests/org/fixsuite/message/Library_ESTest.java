/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 29 18:02:46 GMT 2020
 */

package org.fixsuite.message;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.fixsuite.message.Library;
import org.fixsuite.message.info.DictionaryInfo;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Library_ESTest extends Library_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.156750971308615
  */
  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Library library0 = new Library();
      library0.loadFromDirectory("Unloading previous dictionaries");
      library0.getDictionaries();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("Unloading previous dictionaries");
      FileSystemHandling.createFolder(evoSuiteFile0);
      library0.getDictionaries();
      library0.getDictionaries();
      boolean boolean0 = library0.loadFromDirectory("Unloading previous dictionaries");
      library0.loadFromDirectory("");
      library0.getDictionary("]nfxc=!f;E10CMb`xto");
      Library library1 = new Library();
      List<DictionaryInfo> list0 = library0.getDictionaries();
      library1.getDictionaries();
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu/termite/projects/74_fixsuite");
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile(evoSuiteFile1, byteArray0);
      library0.getDictionary("");
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("IN");
      FileSystemHandling.appendLineToFile(evoSuiteFile2, "");
      boolean boolean1 = library0.loadFromDirectory("");
      assertFalse(boolean1 == boolean0);
      
      Library library2 = new Library();
      library2.getDictionaries();
      DictionaryInfo dictionaryInfo0 = new DictionaryInfo("");
      FileSystemHandling.shouldAllThrowIOExceptions();
      List<DictionaryInfo> list1 = library1.getDictionaries();
      assertTrue(list1.equals((Object)list0));
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.242453324894
  */
  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Library library0 = new Library();
      library0.loadFromDirectory("&5$&eD:Wi;Is");
      library0.getDictionaries();
      library0.loadFromDirectory("org.fixsuite.message.info.GroupInfo");
      library0.getDictionaries();
      library0.getDictionary("7k>q[E\"2c1i");
      library0.getDictionaries();
      library0.loadFromDirectory("7k>q[E\"2c1i");
      library0.getDictionary("7k>q[E\"2c1i");
      library0.getDictionaries();
      library0.getDictionaries();
      library0.getDictionary("");
      library0.loadFromDirectory("Unloading previous dictionaries");
      // Undeclared exception!
      try { 
        library0.getDictionary((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.TreeMap", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "aVD_-(r F1y]L");
      System.setCurrentTimeMillis((-1146L));
      Library library0 = new Library();
      library0.loadFromDirectory("org.fixsuite.message.info.ComponentInfo");
      // Undeclared exception!
      try { 
        library0.loadFromDirectory((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }
}
