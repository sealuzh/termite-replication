/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 16:51:32 GMT 2019
 */

package Newzgrabber;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import Newzgrabber.Base64Decoder;
import Newzgrabber.BufferedCustomInputStream;
import Newzgrabber.Newzgrabber;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.OutputStream;
import java.io.PipedOutputStream;
import java.io.PrintStream;
import java.io.UnsupportedEncodingException;
import java.net.URI;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Collection;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Set;
import java.util.Stack;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Base64Decoder_ESTest extends Base64Decoder_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.6190607984547412
  */
  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "H.");
      byte[] byteArray0 = new byte[9];
      byteArray0[7] = (byte) (-50);
      byteArray0[1] = (byte)6;
      byteArray0[2] = (byte)10;
      byteArray0[3] = (byte)87;
      byteArray0[4] = (byte)87;
      byteArray0[5] = (byte)47;
      byteArray0[6] = (byte)47;
      byteArray0[7] = (byte)10;
      byteArray0[8] = (byte)47;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0, (byte)47);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, byteArrayOutputStream0);
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      Base64Decoder base64Decoder1 = new Base64Decoder(bufferedCustomInputStream0, (OutputStream) null);
      base64Decoder1.decodeStream();
      base64Decoder1.decodeStream();
      Base64Decoder base64Decoder2 = new Base64Decoder(bufferedCustomInputStream0, (OutputStream) null);
      base64Decoder0.decodeStream();
      Base64Decoder base64Decoder3 = new Base64Decoder(bufferedCustomInputStream0, (OutputStream) null);
      base64Decoder3.decodeStream();
      base64Decoder0.decodeStream();
      assertEquals(2L, base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      URI uRI0 = MockURI.aFileURI;
      MockFile mockFile0 = new MockFile(uRI0);
      MockPrintStream mockPrintStream0 = new MockPrintStream("Newzgrabber.Base64Decoder");
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      Stack<Locale.LanguageRange> stack0 = new Stack<Locale.LanguageRange>();
      Locale locale1 = Locale.UK;
      Set<String> set0 = Calendar.getAvailableCalendarTypes();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      ArrayList<Locale.LanguageRange> arrayList0 = new ArrayList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) stack0, (Collection<String>) set0, locale_FilteringMode1);
      Locale.filterTags((List<Locale.LanguageRange>) arrayList0, (Collection<String>) list0);
      Stack<Locale.LanguageRange> stack1 = new Stack<Locale.LanguageRange>();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add("Newzgrabber.Base64Decoder");
      linkedList0.remove((Object) locale0);
      Locale.filterTags((List<Locale.LanguageRange>) arrayList0, (Collection<String>) linkedList0);
      Locale.filterTags((List<Locale.LanguageRange>) arrayList0, (Collection<String>) set0, locale_FilteringMode0);
      Newzgrabber.main((String[]) null);
      Base64Decoder base64Decoder0 = new Base64Decoder((BufferedCustomInputStream) null, mockPrintStream0);
      base64Decoder0.setBegin(false);
      Newzgrabber.verbose = true;
      // Undeclared exception!
      try { 
        base64Decoder0.decodeStream();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Newzgrabber.Base64Decoder", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.5297406947194283
  */
  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[7] = (byte)0;
      byteArray0[1] = (byte)6;
      byteArray0[2] = (byte)10;
      byteArray0[3] = (byte)116;
      byteArray0[4] = (byte)6;
      byteArray0[5] = (byte)47;
      byteArray0[6] = (byte) (-30);
      byteArray0[7] = (byte)10;
      byteArray0[8] = (byte)6;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0, (byte)6);
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Vector<String> vector0 = new Vector<String>();
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) vector0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/99_newzgrabber");
      FileSystemHandling.createFolder(evoSuiteFile0);
      Stack<Locale.LanguageRange> stack0 = new Stack<Locale.LanguageRange>();
      LinkedList<String> linkedList1 = new LinkedList<String>();
      Object object0 = new Object();
      linkedList1.remove(object0);
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) linkedList1);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      Locale.filterTags((List<Locale.LanguageRange>) stack0, (Collection<String>) list0, locale_FilteringMode0);
      Newzgrabber.main((String[]) null);
      MockPrintStream mockPrintStream0 = new MockPrintStream("Newzgrabber.Base64Decoder");
      Locale locale0 = Locale.FRENCH;
      PrintStream printStream0 = mockPrintStream0.format(locale0, "The following are the lines from the base64 decode", (Object[]) null);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, printStream0);
      base64Decoder0.setLineCount((byte) (-30));
      base64Decoder0.decodeStream();
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals((-28L), base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.5842861492648829
  */
  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "H.");
      byte[] byteArray0 = new byte[9];
      byteArray0[7] = (byte)0;
      byteArray0[1] = (byte)6;
      byteArray0[2] = (byte)10;
      byteArray0[3] = (byte)87;
      byteArray0[4] = (byte)6;
      byteArray0[5] = (byte)47;
      byteArray0[6] = (byte) (-30);
      byteArray0[7] = (byte)10;
      byteArray0[8] = (byte)6;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0, (byte)6);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(500);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, byteArrayOutputStream0);
      base64Decoder0.decodeStream();
      base64Decoder0.setTotalLines(0L);
      Base64Decoder base64Decoder1 = new Base64Decoder(bufferedCustomInputStream0, byteArrayOutputStream0);
      base64Decoder0.decodeStream();
      Base64Decoder base64Decoder2 = new Base64Decoder(bufferedCustomInputStream0, byteArrayOutputStream0);
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0, false, "H.");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // H.
         //
         verifyException("java.io.PrintStream", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.5297406947194283
  */
  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ".");
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)49;
      byteArray0[1] = (byte)10;
      byteArray0[2] = (byte)116;
      byteArray0[3] = (byte)49;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte) (-30);
      byteArray0[6] = (byte)10;
      byteArray0[7] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.mark((byte)0);
      byteArrayInputStream0.mark((-4437));
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0, 48);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      MockPrintStream mockPrintStream0 = new MockPrintStream(pipedOutputStream0);
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) bufferedCustomInputStream0;
      byteArrayInputStream0.close();
      objectArray0[1] = (Object) mockPrintStream0;
      objectArray0[2] = (Object) (byte)49;
      Object object0 = new Object();
      objectArray0[3] = object0;
      objectArray0[4] = (Object) (byte) (-30);
      objectArray0[5] = (Object) (byte)0;
      mockPrintStream0.format((Locale) null, "t\u0006/\u0000", objectArray0);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, pipedOutputStream0);
      base64Decoder0.decodeStream();
      assertEquals(2L, base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.5297406947194283
  */
  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[7] = (byte)0;
      byteArray0[1] = (byte)6;
      byteArray0[2] = (byte)10;
      byteArray0[3] = (byte)116;
      byteArray0[4] = (byte)6;
      byteArray0[5] = (byte)47;
      byteArray0[6] = (byte) (-30);
      byteArray0[7] = (byte)10;
      byteArray0[8] = (byte)6;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0, (byte)6);
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Vector<String> vector0 = new Vector<String>();
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) vector0);
      Stack<Locale.LanguageRange> stack0 = new Stack<Locale.LanguageRange>();
      LinkedList<String> linkedList1 = new LinkedList<String>();
      Object object0 = new Object();
      linkedList1.remove(object0);
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) linkedList1);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      Locale.filterTags((List<Locale.LanguageRange>) stack0, (Collection<String>) list0, locale_FilteringMode0);
      Newzgrabber.main((String[]) null);
      MockPrintStream mockPrintStream0 = new MockPrintStream("Newzgrabber.Base64Decoder");
      Locale locale0 = Locale.FRENCH;
      PrintStream printStream0 = mockPrintStream0.format(locale0, "The following are the lines from the base64 decode", (Object[]) null);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, printStream0);
      base64Decoder0.decodeStream();
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals(2L, base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[7] = (byte)0;
      byteArray0[1] = (byte)6;
      byteArray0[2] = (byte)10;
      byteArray0[8] = (byte)116;
      byteArray0[4] = (byte)6;
      byteArray0[5] = (byte)47;
      byteArray0[7] = (byte)10;
      byteArray0[8] = (byte)6;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0, (byte)6);
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Vector<String> vector0 = new Vector<String>();
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) vector0);
      Stack<Locale.LanguageRange> stack0 = new Stack<Locale.LanguageRange>();
      LinkedList<String> linkedList1 = new LinkedList<String>();
      Object object0 = new Object();
      linkedList1.remove(object0);
      linkedList0.removeFirstOccurrence(stack0);
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) linkedList1);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      Stack<Locale.LanguageRange> stack1 = new Stack<Locale.LanguageRange>();
      LinkedList<String> linkedList2 = new LinkedList<String>();
      List<String> list1 = Locale.filterTags((List<Locale.LanguageRange>) stack0, (Collection<String>) list0);
      Locale.filterTags((List<Locale.LanguageRange>) stack1, (Collection<String>) list1, locale_FilteringMode0);
      Object object1 = new Object();
      Newzgrabber.main((String[]) null);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream((byte)6);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, byteArrayOutputStream0);
      base64Decoder0.ABORT = true;
      base64Decoder0.decodeStream();
      assertEquals(3, byteArrayInputStream0.available());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.549994923610415
  */
  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[20];
      byteArray0[1] = (byte)58;
      byteArray0[1] = (byte)10;
      byteArray0[2] = (byte)33;
      byteArray0[3] = (byte)58;
      byteArray0[13] = (byte)33;
      byteArray0[5] = (byte) (-30);
      byteArray0[6] = (byte)10;
      byteArray0[7] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0, (byte)10);
      String[] stringArray0 = new String[12];
      stringArray0[0] = "W\u0006\u0006\u0006";
      Newzgrabber.main(stringArray0);
      MockPrintStream mockPrintStream0 = new MockPrintStream("W\u0006\u0006\u0006");
      Locale locale0 = Locale.FRENCH;
      mockPrintStream0.println((float) (byte)58);
      Locale locale1 = Locale.FRENCH;
      mockPrintStream0.format(locale0, "EW^S<upbfL@avFKZ", (Object[]) stringArray0);
      Locale locale2 = Locale.SIMPLIFIED_CHINESE;
      Locale.Category locale_Category0 = Locale.Category.FORMAT;
      Locale.setDefault(locale_Category0, locale2);
      Locale.Category locale_Category1 = Locale.Category.FORMAT;
      Locale.setDefault(locale_Category1, locale0);
      locale1.getDisplayVariant(locale2);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, mockPrintStream0);
      base64Decoder0.decodeStream();
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals(3L, base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.5297406947194283
  */
  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "\u0000\u0006\u0006\u0006");
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)47;
      byteArray0[1] = (byte)10;
      byteArray0[2] = (byte)116;
      byteArray0[3] = (byte)47;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte) (-30);
      byteArray0[6] = (byte)10;
      byteArray0[7] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0, 48);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, pipedOutputStream0);
      base64Decoder0.decodeStream();
      assertEquals(2L, base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      URI uRI0 = MockURI.aFileURI;
      MockFile mockFile0 = new MockFile(uRI0);
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      Stack<Locale.LanguageRange> stack0 = new Stack<Locale.LanguageRange>();
      Locale locale1 = Locale.UK;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      ArrayList<Locale.LanguageRange> arrayList0 = new ArrayList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      Locale.filterTags((List<Locale.LanguageRange>) stack0, (Collection<String>) set0, locale_FilteringMode1);
      List<String> list0 = new Stack<String>();
      Locale.filterTags((List<Locale.LanguageRange>) stack0, (Collection<String>) set0, locale_FilteringMode0);
      Newzgrabber.main((String[]) null);
      MockPrintStream mockPrintStream0 = new MockPrintStream("java.library.path");
      Locale locale2 = Locale.FRENCH;
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) locale_FilteringMode0;
      objectArray0[1] = (Object) mockPrintStream0;
      objectArray0[2] = (Object) "mc67>TItLo$9";
      Object object0 = new Object();
      objectArray0[3] = object0;
      objectArray0[4] = (Object) arrayList0;
      objectArray0[5] = (Object) set0;
      PrintStream printStream0 = mockPrintStream0.format(locale2, "mc67>TItLo$9", objectArray0);
      Locale locale3 = Locale.SIMPLIFIED_CHINESE;
      Locale.Category locale_Category0 = Locale.Category.FORMAT;
      Locale locale4 = new Locale("Newzgrabber.Base64Decoder", "java.library.path", "<!Z3,_2?g#Z.rW,H%");
      Locale.setDefault(locale_Category0, locale4);
      Locale locale5 = Locale.ROOT;
      locale5.getDisplayVariant(locale3);
      Base64Decoder base64Decoder0 = new Base64Decoder((BufferedCustomInputStream) null, printStream0);
      // Undeclared exception!
      try { 
        base64Decoder0.decodeStream();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Newzgrabber.Base64Decoder", e);
      }
  }
}
