/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 17:08:53 GMT 2019
 */

package org.dom4j.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.dom4j.io.OutputFormat;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class OutputFormat_ESTest extends OutputFormat_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.5208037767637257
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      int int0 = (-1779);
      outputFormat0.setLineSeparator("-padText");
      outputFormat0.setNewLineAfterNTags((-1779));
      outputFormat0.setPadText(false);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-newlines";
      stringArray0[1] = "-omitEncoding";
      stringArray0[2] = "-newlines";
      stringArray0[3] = "-newlines";
      stringArray0[4] = "-padText";
      stringArray0[5] = "-padText";
      stringArray0[6] = "-padText";
      outputFormat0.parseOptions(stringArray0, 1);
      OutputFormat outputFormat1 = new OutputFormat("XQyNq<ZGz", false);
      outputFormat0.setNewLineAfterDeclaration(false);
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      outputFormat2.setLineSeparator("-padText");
      outputFormat1.setNewlines(true);
      outputFormat0.parseOptions(stringArray0, 190);
      outputFormat1.setIndent("-padText");
      // Undeclared exception!
      try { 
        outputFormat1.setAttributeQuoteCharacter('}');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (})
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.3423697177620997
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("UTF-8", false);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setEncoding("UTF-8");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "UTF-8";
      stringArray0[1] = "UTF-8";
      stringArray0[2] = "UTF-8";
      stringArray0[3] = "UTF-8";
      stringArray0[4] = "UTF-8";
      stringArray0[5] = "UTF-8";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.parseOptions(stringArray0, 0);
      assertFalse(outputFormat0.isSuppressDeclaration());
      
      String[] stringArray1 = new String[7];
      stringArray1[0] = "-suppressDeclaration";
      stringArray1[1] = "Wg*^z";
      stringArray1[2] = "UTF-8";
      stringArray1[3] = "UTF-8";
      stringArray1[4] = "UTF-8";
      stringArray1[5] = "UTF-8";
      stringArray1[6] = "UTF-8";
      int int0 = outputFormat0.parseOptions(stringArray1, 0);
      assertTrue(outputFormat0.isSuppressDeclaration());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.3263269370134367
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setEncoding("Y");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "-padText";
      stringArray0[1] = "|O/$t+_pR}B4";
      stringArray0[2] = "Y";
      stringArray0[3] = "Y";
      stringArray0[4] = "Jxf?\u0007#/'-7E";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setOmitEncoding(false);
      assertEquals("Y", outputFormat0.getEncoding());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.7074515352304802
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setLineSeparator("-padText");
      outputFormat0.setNewLineAfterNTags((-1779));
      outputFormat0.setNewLineAfterNTags(0);
      String[] stringArray0 = new String[22];
      stringArray0[0] = "-padText";
      outputFormat0.setNewLineAfterDeclaration(true);
      stringArray0[1] = "-newlines";
      outputFormat0.setNewLineAfterDeclaration(false);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.708300042247628
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null, false, (String) null);
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.setLineSeparator("VGv");
      OutputFormat outputFormat1 = new OutputFormat();
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      outputFormat2.setTrimText(false);
      outputFormat1.isOmitEncoding();
      OutputFormat outputFormat3 = new OutputFormat("D+O&");
      outputFormat3.setLineSeparator("_~@@5t");
      OutputFormat outputFormat4 = new OutputFormat("RPiX[q>n:");
      outputFormat4.setIndentSize(0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "D+O&";
      stringArray0[1] = null;
      outputFormat2.parseOptions(stringArray0, 0);
      outputFormat0.setIndentSize((-3878));
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.getEncoding();
      assertTrue(outputFormat0.isOmitEncoding());
      
      OutputFormat outputFormat5 = OutputFormat.createCompactFormat();
      assertTrue(outputFormat5.isTrimText());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.5306862328684683
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("_", true);
      outputFormat0.setNewLineAfterNTags(3264);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-expandEmptyUTF-8";
      stringArray0[1] = "-expandEmptyUTF-8";
      stringArray0[2] = "_";
      stringArray0[3] = "-expandEmptyUTF-8";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setPadText(true);
      OutputFormat.createPrettyPrint();
      outputFormat0.setLineSeparator("Invalid attribute quote character (");
      outputFormat0.setTrimText(true);
      outputFormat0.isOmitEncoding();
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setOmitEncoding(true);
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('!');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (!)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.3671999425349424
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "-expandEmpty";
      stringArray0[1] = "-expandEmptyA$NxD.PwLR=Z<I#+";
      stringArray0[2] = "Invalid attribute quote character (";
      stringArray0[3] = "";
      stringArray0[4] = "org.dom4j.io.OutputFormat";
      stringArray0[5] = "";
      stringArray0[6] = "=kz5;Jm'yth)g3>";
      stringArray0[7] = "wk&a*H";
      stringArray0[8] = "";
      outputFormat1.parseOptions(stringArray0, 2);
      outputFormat0.setXHTML(true);
      outputFormat0.setLineSeparator("");
      outputFormat0.setAttributeQuoteCharacter('\'');
      assertTrue(outputFormat0.isXHTML());
      
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      outputFormat2.setNewlines(true);
      outputFormat2.setAttributeQuoteCharacter('\'');
      assertEquals(0, outputFormat2.getNewLineAfterNTags());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.1435839656142717
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setNewlines(true);
      outputFormat0.setTrimText(true);
      outputFormat0.setNewLineAfterNTags((-1428));
      outputFormat0.setLineSeparator("");
      outputFormat0.setEncoding("");
      outputFormat0.getIndent();
      outputFormat0.setIndent((String) null);
      outputFormat0.setNewlines(true);
      outputFormat0.setNewLineAfterDeclaration(true);
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setLineSeparator((String) null);
      outputFormat0.setEncoding("");
      outputFormat0.setIndentSize(1311);
      outputFormat0.setIndent(true);
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      outputFormat2.setIndent("");
      outputFormat1.getLineSeparator();
      OutputFormat.createCompactFormat();
      OutputFormat.createPrettyPrint();
      outputFormat0.setIndent("Fe");
      OutputFormat.createPrettyPrint();
      outputFormat0.getLineSeparator();
      assertEquals((-1428), outputFormat0.getNewLineAfterNTags());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.208011678003386
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat0.setNewLineAfterNTags((-1428));
      outputFormat0.setLineSeparator("");
      outputFormat0.setEncoding("");
      outputFormat0.getIndent();
      outputFormat0.setIndent((String) null);
      outputFormat0.setNewlines(true);
      outputFormat0.setNewLineAfterDeclaration(true);
      String[] stringArray0 = new String[1];
      outputFormat0.setIndent("");
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      outputFormat2.setLineSeparator((String) null);
      stringArray0[0] = "";
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat1.setEncoding("");
      outputFormat0.setIndentSize(1311);
      outputFormat1.setIndent(true);
      OutputFormat outputFormat3 = OutputFormat.createPrettyPrint();
      outputFormat3.setIndent("");
      outputFormat2.getLineSeparator();
      OutputFormat.createCompactFormat();
      OutputFormat.createPrettyPrint();
      outputFormat0.setIndent("Fe");
      outputFormat0.getEncoding();
      assertEquals((-1428), outputFormat0.getNewLineAfterNTags());
      
      outputFormat2.setIndent((String) null);
      assertEquals('\"', outputFormat2.getAttributeQuoteCharacter());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.044280346594219
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      boolean boolean0 = true;
      OutputFormat outputFormat0 = new OutputFormat("_", true);
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat0.setAttributeQuoteCharacter('\"');
      outputFormat0.setIndent(true);
      outputFormat0.isSuppressDeclaration();
      outputFormat0.setXHTML(true);
      outputFormat0.setNewLineAfterNTags((-1863));
      outputFormat0.setAttributeQuoteCharacter('\"');
      outputFormat0.getNewLineAfterNTags();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      String[] stringArray0 = new String[0];
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat1.setNewLineAfterNTags((-1863));
      char char0 = 'C';
      // Undeclared exception!
      try { 
        outputFormat1.setAttributeQuoteCharacter('}');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (})
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.1341383463290877
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("UTF-8", false);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.setTrimText(true);
      outputFormat0.isOmitEncoding();
      outputFormat0.setLineSeparator((String) null);
      OutputFormat outputFormat1 = new OutputFormat("-expandEmptyUTF-8");
      outputFormat1.setIndentSize(0);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "-indent";
      stringArray0[1] = null;
      stringArray0[2] = "sk&9H*64O.WL)!fDcc";
      outputFormat1.setSuppressDeclaration(false);
      stringArray0[3] = "Pb89!)+|We";
      stringArray0[4] = "D+O&";
      stringArray0[5] = null;
      stringArray0[6] = "UTF-8";
      stringArray0[7] = "-expandEmptyUTF-8";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat1.setIndentSize(0);
      outputFormat0.setIndent(stringArray0[5]);
      outputFormat1.setIndent("Pb89!)+|We");
      assertEquals("Pb89!)+|We", outputFormat1.getIndent());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.6318929536344875
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setNewLineAfterNTags((-1779));
      outputFormat1.setNewLineAfterNTags(0);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setPadText(false);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setLineSeparator((String) null);
      outputFormat0.setTrimText(false);
      outputFormat0.isOmitEncoding();
      outputFormat1.setLineSeparator("D+O&");
      outputFormat1.setNewlines(true);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "sk&9H*64O.WL)!fDcc";
      stringArray0[1] = "D+O&";
      stringArray0[2] = "D+O&";
      stringArray0[3] = "D+O&";
      stringArray0[4] = "D+O&";
      outputFormat0.setIndentSize(0);
      stringArray0[5] = "D+O&";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat1.setIndentSize(0);
      outputFormat1.setOmitEncoding(false);
      outputFormat1.setIndent(false);
      outputFormat1.setNewLineAfterNTags((-181));
      outputFormat1.setOmitEncoding(false);
      assertEquals("D+O&", outputFormat1.getLineSeparator());
      
      outputFormat0.getIndent();
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      assertEquals("  ", outputFormat2.getIndent());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.3794969701928985
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      OutputFormat outputFormat1 = new OutputFormat();
      outputFormat0.setOmitEncoding(true);
      outputFormat1.setEncoding((String) null);
      outputFormat0.setSuppressDeclaration(true);
      String[] stringArray0 = new String[7];
      stringArray0[0] = null;
      stringArray0[1] = "bwdUq<AQX1>";
      stringArray0[2] = "Jxf?w#/'-7E";
      stringArray0[3] = null;
      stringArray0[4] = null;
      stringArray0[5] = "bwdUq<AQX1>";
      stringArray0[6] = "bwdUq<AQX1>";
      outputFormat0.parseOptions(stringArray0, 2);
      outputFormat0.setOmitEncoding(false);
      assertFalse(outputFormat0.isOmitEncoding());
      
      outputFormat1.setOmitEncoding(true);
      assertFalse(outputFormat1.isTrimText());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("UTF-8", false);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setEncoding("UTF-8");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "UTF-8";
      stringArray0[1] = "UTF-8";
      stringArray0[2] = "UTF-8";
      stringArray0[3] = "UTF-8";
      stringArray0[1] = "UTF-8";
      stringArray0[5] = "UTF-8";
      outputFormat0.setIndentSize((-855));
      assertEquals("", outputFormat0.getIndent());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.143283695371053
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setTrimText(true);
      outputFormat0.setNewLineAfterNTags((-1428));
      outputFormat0.setLineSeparator("");
      outputFormat0.setEncoding("");
      outputFormat0.getIndent();
      outputFormat0.setIndent((String) null);
      outputFormat0.setNewlines(true);
      outputFormat0.setNewLineAfterDeclaration(true);
      String[] stringArray0 = new String[1];
      outputFormat0.setIndent("");
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      outputFormat2.setLineSeparator((String) null);
      stringArray0[0] = "";
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat1.setEncoding("");
      outputFormat0.setIndentSize(1311);
      outputFormat1.setIndent(true);
      OutputFormat.createPrettyPrint();
      outputFormat2.getLineSeparator();
      OutputFormat.createCompactFormat();
      OutputFormat.createPrettyPrint();
      outputFormat0.setIndent("Fe");
      assertEquals((-1428), outputFormat0.getNewLineAfterNTags());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.124771615329544
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("qh+DEU^=;");
      outputFormat0.setNewlines(false);
      outputFormat0.setIndent(false);
      outputFormat0.setTrimText(false);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.setPadText(true);
      outputFormat0.setOmitEncoding(false);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "qh+DEU^=;";
      stringArray0[1] = "qh+DEU^=;";
      stringArray0[2] = "qh+DEU^=;";
      stringArray0[3] = "qh+DEU^=;";
      stringArray0[4] = "qh+DEU^=;";
      stringArray0[5] = "qh+DEU^=;";
      stringArray0[6] = "qh+DEU^=;";
      stringArray0[7] = "";
      outputFormat0.parseOptions(stringArray0, 2609);
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.isXHTML();
      outputFormat0.isXHTML();
      outputFormat0.setNewLineAfterNTags((-10));
      outputFormat0.isSuppressDeclaration();
      outputFormat0.setTrimText(false);
      assertFalse(outputFormat0.isExpandEmptyElements());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.2587475133823713
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.isNewlines();
      OutputFormat outputFormat1 = new OutputFormat("~\"D", false);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setEncoding("~\"D");
      String[] stringArray0 = new String[2];
      stringArray0[0] = "~\"D";
      stringArray0[1] = "~\"D";
      outputFormat1.parseOptions(stringArray0, 0);
      outputFormat0.setOmitEncoding(true);
      assertEquals("~\"D", outputFormat0.getEncoding());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      boolean boolean0 = outputFormat0.isNewlines();
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(boolean0);
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isTrimText());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isXHTML());
      assertFalse(outputFormat0.isPadText());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[7];
      int int0 = 2;
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.050331173540568
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setNewLineAfterNTags((-2660));
      outputFormat1.setLineSeparator("*AixY8XNG9bF");
      outputFormat0.setEncoding("*AixY8XNG9bF");
      outputFormat1.getIndent();
      outputFormat1.setIndent((String) null);
      boolean boolean0 = true;
      outputFormat1.setIndent("-xhtmlsk&9H*64O.WL)!fDcc");
      outputFormat1.setNewlines(true);
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      outputFormat2.setNewLineAfterDeclaration(false);
      String string0 = null;
      outputFormat0.setIndent((String) null);
      OutputFormat.createCompactFormat();
      String string1 = "";
      outputFormat1.setLineSeparator("");
      OutputFormat.createCompactFormat();
      int int0 = 1;
      String[] stringArray0 = null;
      // Undeclared exception!
      try { 
        outputFormat2.parseOptions((String[]) null, (-2660));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      outputFormat0.setOmitEncoding(false);
      boolean boolean0 = outputFormat0.isSuppressDeclaration();
      assertEquals("", outputFormat0.getIndent());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isXHTML());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isPadText());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isTrimText());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(boolean0);
      assertFalse(outputFormat0.isNewlines());
      assertEquals("\n", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("UTF-8", false);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setPadText(false);
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.setLineSeparator("VGv");
      outputFormat0.setTrimText(true);
      outputFormat0.isOmitEncoding();
      assertEquals("VGv", outputFormat0.getLineSeparator());
      
      outputFormat0.setLineSeparator((String) null);
      String[] stringArray0 = new String[0];
      outputFormat0.setOmitEncoding(false);
      assertFalse(outputFormat0.isXHTML());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("UTF-8", false);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.setTrimText(true);
      outputFormat0.isOmitEncoding();
      outputFormat0.setLineSeparator((String) null);
      String[] stringArray0 = new String[0];
      outputFormat0.setOmitEncoding(false);
      assertFalse(outputFormat0.isOmitEncoding());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.699206742368703
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setEncoding("OU%Y%gn'?Yl");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "OU%Y%gn'?Yl";
      stringArray0[1] = "OU%Y%gn'?Yl";
      stringArray0[2] = "OU%Y%gn'?Yl";
      outputFormat0.setIndent("MKAgWy");
      outputFormat0.setNewlines(false);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setIndent((String) null);
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat0.setLineSeparator("X.]a[QS)Fn&.miHg-k");
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      outputFormat2.parseOptions(stringArray0, 1);
      assertEquals("UTF-8", outputFormat2.getEncoding());
      
      outputFormat2.setEncoding("OU%Y%gn'?Yl");
      OutputFormat outputFormat3 = new OutputFormat();
      outputFormat3.setIndentSize((-3819));
      outputFormat1.setIndent(true);
      OutputFormat outputFormat4 = OutputFormat.createPrettyPrint();
      outputFormat3.getLineSeparator();
      OutputFormat.createCompactFormat();
      OutputFormat.createPrettyPrint();
      outputFormat4.setIndent((String) null);
      assertFalse(outputFormat4.isOmitEncoding());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.3423697177620997
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("UTF-8", true);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setEncoding("UTF-8");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "UTF-8";
      stringArray0[1] = "UTF-8";
      stringArray0[2] = "UTF-8";
      stringArray0[3] = "UTF-8";
      stringArray0[4] = "UTF-8";
      stringArray0[5] = "UTF-8";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.parseOptions(stringArray0, 0);
      String[] stringArray1 = new String[18];
      stringArray1[0] = "-suppressDeclaration";
      stringArray1[1] = "Wg*^z";
      stringArray1[2] = "UTF-8";
      stringArray1[3] = "UTF-8";
      stringArray1[4] = "UTF-8";
      stringArray1[6] = "UTF-8";
      int int0 = outputFormat0.parseOptions(stringArray1, 0);
      assertFalse(outputFormat0.isOmitEncoding());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.6997608016132726
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[17];
      stringArray0[0] = "*,NN#Iy>|sI,V]v'^ ";
      stringArray0[1] = "*,NN#Iy>|sI,V]v'^ ";
      stringArray0[2] = "*,NN#Iy>|sI,V]v'^ ";
      outputFormat0.parseOptions(stringArray0, 2);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-3488));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3488
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-newlines", true, "-newlines");
      assertEquals("-newlines", outputFormat0.getIndent());
      
      outputFormat0.setIndentSize(2);
      assertEquals("  ", outputFormat0.getIndent());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.5231918705451206
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setNewLineAfterNTags((-1779));
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setIndent(true);
      outputFormat0.setPadText(false);
      outputFormat0.setSuppressDeclaration(true);
      String[] stringArray0 = new String[9];
      stringArray0[5] = "vV=Uq5b/(%";
      stringArray0[1] = "-expandEmptysk&9H*64.WL)!fDcc";
      stringArray0[2] = "org.dom4j.io.OutputFormat";
      stringArray0[4] = "UTF-8";
      stringArray0[5] = "-omitEncoding";
      stringArray0[6] = "=qd,8):Qy=7GwNDl;%";
      int int0 = (-1936849554);
      outputFormat0.setNewLineAfterNTags((-1936849554));
      outputFormat0.isXHTML();
      outputFormat0.setIndent(false);
      boolean boolean0 = true;
      outputFormat0.setPadText(true);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1936849554));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1936849554
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.3644032483243334
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.setIndent((String) null);
      outputFormat0.setIndent("");
      outputFormat0.setPadText(true);
      outputFormat0.setLineSeparator("\n");
      outputFormat0.setIndent("");
      outputFormat0.setTrimText(false);
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setIndentSize(29);
      outputFormat0.isOmitEncoding();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setIndent(true);
      outputFormat1.setNewLineAfterNTags(2969);
      outputFormat0.setXHTML(true);
      outputFormat0.isPadText();
      outputFormat0.setNewLineAfterNTags(2969);
      outputFormat1.setIndent(false);
      outputFormat1.setXHTML(false);
      outputFormat0.isNewlines();
      outputFormat1.getNewLineAfterNTags();
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setXHTML(false);
      boolean boolean0 = outputFormat0.isTrimText();
      assertFalse(outputFormat0.isXHTML());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.556035793761116
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.setNewlines(false);
      outputFormat0.isTrimText();
      outputFormat0.setTrimText(true);
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat0.setLineSeparator("`;TwFf]XeqsAH2t");
      outputFormat0.setLineSeparator("`;TwFf]XeqsAH2t");
      outputFormat0.getEncoding();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setLineSeparator((String) null);
      outputFormat1.setAttributeQuoteCharacter('\"');
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      outputFormat0.isExpandEmptyElements();
      outputFormat2.setXHTML(true);
      outputFormat2.setExpandEmptyElements(true);
      outputFormat1.isPadText();
      outputFormat2.setNewLineAfterDeclaration(true);
      outputFormat1.getAttributeQuoteCharacter();
      outputFormat1.isXHTML();
      outputFormat2.setSuppressDeclaration(false);
      outputFormat0.isTrimText();
      outputFormat0.setIndentSize(0);
      assertEquals("`;TwFf]XeqsAH2t", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("|57Bm", false);
      outputFormat0.setTrimText(false);
      outputFormat0.setEncoding("|57Bm");
      outputFormat0.isTrimText();
      boolean boolean0 = outputFormat0.isExpandEmptyElements();
      assertEquals("|57Bm", outputFormat0.getEncoding());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      char char0 = outputFormat0.getAttributeQuoteCharacter();
      assertFalse(outputFormat0.isXHTML());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isNewlines());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isPadText());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertEquals('\"', char0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("\n");
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setXHTML(true);
      outputFormat0.setEncoding("");
      outputFormat0.isXHTML();
      outputFormat0.setTrimText(true);
      assertTrue(outputFormat0.isXHTML());
      assertTrue(outputFormat0.isTrimText());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      outputFormat0.setEncoding(".g)#r{Apw=7gE");
      outputFormat0.setOmitEncoding(true);
      boolean boolean0 = outputFormat0.isPadText();
      assertEquals(".g)#r{Apw=7gE", outputFormat0.getEncoding());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.19953461806653
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      String string0 = "S!3hN:O8byYS/]0StVM";
      OutputFormat outputFormat0 = new OutputFormat("S!3hN:O8byYS/]0StVM");
      outputFormat0.setIndent("S!3hN:O8byYS/]0StVM");
      outputFormat0.setIndent("S!3hN:O8byYS/]0StVM");
      int int0 = 0;
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.setTrimText(false);
      outputFormat0.isTrimText();
      char char0 = 'g';
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('g');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (g)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.6709087878625355
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.isExpandEmptyElements();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "-encoding";
      stringArray0[1] = "";
      stringArray0[2] = " G8NF}C)}8bML;wt&";
      stringArray0[3] = "-omitEncoding";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "q[";
      stringArray0[7] = "@JAM5r]/?SU54";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setLineSeparator("-padText");
      outputFormat0.setNewLineAfterNTags((-1779));
      outputFormat0.setXHTML(true);
      outputFormat0.setNewLineAfterNTags(0);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "<KA plZo}Pp_H";
      stringArray0[1] = "<KA plZo}Pp_H";
      stringArray0[2] = "-padText";
      int int0 = outputFormat0.getNewLineAfterNTags();
      assertEquals("-padText", outputFormat0.getLineSeparator());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("_", true);
      outputFormat0.setPadText(true);
      boolean boolean0 = false;
      outputFormat0.setSuppressDeclaration(false);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "vV=Uq5b/(%";
      stringArray0[1] = "=qd,8):Qy=7GwNDl;%";
      stringArray0[2] = "y{!UYJ";
      stringArray0[3] = "vV=Uq5";
      stringArray0[4] = "-expandEmptysk&9H*64.WL)!fDcc";
      stringArray0[5] = "=qd,8):Qy=7GwNDl;%";
      stringArray0[6] = "=qd,8):Qy=7GwNDl;%";
      stringArray0[7] = "~*]D;W:jH7pwp5)\";[";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1384));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1384
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.3755754015654476
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setEncoding("bwdUq<AQX1>");
      String[] stringArray0 = new String[3];
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setExpandEmptyElements(true);
      stringArray0[0] = "Jxf?w#/'-7E";
      stringArray0[1] = "bwdUq<AQX1>";
      stringArray0[2] = "bwdUq<AQX1>";
      outputFormat0.parseOptions(stringArray0, 2);
      outputFormat0.setOmitEncoding(false);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-4109));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -4109
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.3454656929942979
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setEncoding("bwdUq<AQX1>");
      OutputFormat outputFormat1 = new OutputFormat();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "-xhtmlInvalid attribute quote character (";
      outputFormat1.parseOptions(stringArray0, 0);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.parseOptions(stringArray0, 1);
      int int0 = outputFormat0.parseOptions(stringArray0, 0);
      assertEquals("bwdUq<AQX1>", outputFormat0.getEncoding());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.545501457645771
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      OutputFormat.createPrettyPrint();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "-expandEmpty";
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      stringArray0[1] = "-expandEmptyA$NxD.PwLR=Z<I#+";
      outputFormat1.parseOptions(stringArray0, 2195);
      OutputFormat outputFormat2 = new OutputFormat((String) null, false, "-expandEmptyA$NxD.PwLR=Z<I#+");
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.3794969701928985
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("VGv");
      outputFormat0.setIndent(false);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setIndent(false);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setEncoding("VGv");
      String[] stringArray0 = new String[2];
      stringArray0[0] = "VGv";
      stringArray0[1] = "VGv";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setOmitEncoding(true);
      assertTrue(outputFormat0.isOmitEncoding());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.755739480438498
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setLineSeparator("-padText");
      outputFormat0.setNewLineAfterNTags((-1779));
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setPadText(false);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setOmitEncoding(true);
      OutputFormat outputFormat1 = new OutputFormat("-indentSize", true);
      outputFormat0.setOmitEncoding(false);
      String[] stringArray0 = new String[7];
      outputFormat1.setSuppressDeclaration(false);
      stringArray0[0] = "-xhtml<A plZ/o}Pp_H";
      stringArray0[1] = "-padText";
      stringArray0[2] = "Wg*^z";
      stringArray0[3] = "-expandEmptyo0z&_tKX|SF))|hRY.A";
      outputFormat1.setNewLineAfterDeclaration(false);
      stringArray0[4] = "Wg*^z";
      stringArray0[5] = "-indentSize";
      outputFormat0.setNewlines(false);
      stringArray0[6] = "-indentSize";
      outputFormat1.setNewLineAfterDeclaration(true);
      outputFormat1.setIndent("");
      assertTrue(outputFormat1.isNewLineAfterDeclaration());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=3.0289251927098695
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setIndent((String) null);
      outputFormat0.setNewLineAfterNTags(1383);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setNewLineAfterDeclaration(false);
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setNewLineAfterNTags(1);
      outputFormat0.setIndent(false);
      outputFormat1.setNewLineAfterDeclaration(false);
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat1.setNewlines(false);
      outputFormat1.getEncoding();
      String[] stringArray0 = new String[6];
      stringArray0[0] = null;
      stringArray0[4] = "UTF-8";
      stringArray0[3] = "UTF-8";
      stringArray0[4] = "UTF-8";
      stringArray0[5] = "UTF-8";
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.7726496271670902
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setEncoding("OU%Y%gn'?Yl");
      String[] stringArray0 = new String[5];
      stringArray0[4] = "OU%Y%gn'?Yl";
      stringArray0[1] = "OU%Y%gn'?Yl";
      stringArray0[2] = "OU%Y%gn'?Yl";
      stringArray0[3] = "OU%Y%gn'?Yl";
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.parseOptions(stringArray0, 2);
      outputFormat0.setIndentSize(1299);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setIndent(stringArray0[0]);
      assertEquals("OU%Y%gn'?Yl", outputFormat0.getEncoding());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=3.33998687964136
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setLineSeparator("+");
      OutputFormat.createPrettyPrint();
      outputFormat0.setNewLineAfterNTags((-2303));
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat0.setIndent("Phi");
      outputFormat0.setXHTML(false);
      outputFormat1.setSuppressDeclaration(false);
      outputFormat0.setIndent("+");
      outputFormat0.setIndent(true);
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      OutputFormat.createCompactFormat();
      outputFormat2.setNewLineAfterNTags(0);
      outputFormat2.setNewLineAfterDeclaration(true);
      outputFormat1.setNewLineAfterDeclaration(true);
      outputFormat0.setIndent(true);
      outputFormat2.isSuppressDeclaration();
      outputFormat1.getIndent();
      outputFormat0.isNewLineAfterDeclaration();
      assertEquals("+", outputFormat0.getLineSeparator());
      
      boolean boolean0 = outputFormat1.isXHTML();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("0", false, "Invalid attribute quote character (");
      String string0 = outputFormat0.getEncoding();
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isTrimText());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertFalse(outputFormat0.isNewlines());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertEquals("Invalid attribute quote character (", string0);
      assertFalse(outputFormat0.isOmitEncoding());
      assertEquals("0", outputFormat0.getIndent());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isPadText());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isXHTML());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null, false, (String) null);
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('z');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (z)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }
}
