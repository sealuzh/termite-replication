/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 16:58:29 GMT 2019
 */

package org.databene.jdbacl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.CharArrayWriter;
import java.io.PrintWriter;
import java.io.StreamTokenizer;
import java.io.StringReader;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Vector;
import java.util.concurrent.DelayQueue;
import java.util.concurrent.Delayed;
import org.apache.derby.diag.ErrorMessages;
import org.apache.derby.iapi.sql.dictionary.ConstraintDescriptorList;
import org.apache.derby.iapi.sql.dictionary.TableDescriptor;
import org.apache.derby.iapi.store.raw.xact.RawTransaction;
import org.apache.derby.impl.sql.catalog.DataDictionaryImpl;
import org.databene.commons.version.VersionNumber;
import org.databene.jdbacl.NameSpec;
import org.databene.jdbacl.SQLUtil;
import org.databene.jdbacl.model.CompositeDBObject;
import org.databene.jdbacl.model.DBCatalog;
import org.databene.jdbacl.model.DBCheckConstraint;
import org.databene.jdbacl.model.DBColumn;
import org.databene.jdbacl.model.DBConstraint;
import org.databene.jdbacl.model.DBDataType;
import org.databene.jdbacl.model.DBForeignKeyConstraint;
import org.databene.jdbacl.model.DBNotNullConstraint;
import org.databene.jdbacl.model.DBObject;
import org.databene.jdbacl.model.DBPrimaryKeyConstraint;
import org.databene.jdbacl.model.DBSchema;
import org.databene.jdbacl.model.DBTable;
import org.databene.jdbacl.model.DBTrigger;
import org.databene.jdbacl.model.DBUniqueConstraint;
import org.databene.jdbacl.model.DBUniqueIndex;
import org.databene.jdbacl.model.DefaultDBColumn;
import org.databene.jdbacl.model.DefaultDBTable;
import org.databene.jdbacl.model.DefaultDatabase;
import org.databene.jdbacl.model.FKChangeRule;
import org.databene.jdbacl.model.TableContainer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.firebirdsql.gds.impl.GDSType;
import org.firebirdsql.jca.FBManagedConnectionFactory;
import org.firebirdsql.jdbc.FBConnectionProperties;
import org.hsqldb.rowio.RowOutputText;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SQLUtil_ESTest extends SQLUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.6815563206157873
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("");
      char[] charArray0 = new char[1];
      charArray0[0] = 'w';
      StringBuffer stringBuffer0 = new StringBuffer(0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      String string0 = SQLUtil.renderQuery(defaultDBTable0, stringArray0, stringArray0);
      String string1 = SQLUtil.normalize("", true);
      assertFalse(string1.equals((Object)string0));
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.addOptionalCondition("L)%wm^n/8}]59/l 1", (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.4614847993674838
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SQLUtil.removeComments("f`:A[s2j|R.,'%Qsk");
      SQLUtil.mutatesDataOrStructure("lT+4d\"G(:p#");
      SQLUtil.isProcedureCall("inner");
      SQLUtil.normalize("f`:A[s2j|R.,'%Qsk", true);
      SQLUtil.mutatesStructure("CREATE TABLE ");
      SQLUtil.normalize("inner", true);
      SQLUtil.isQuery("    prepare thre;hold = ");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "f`:A[s2j|R.,'%Qsk";
      stringArray0[1] = "lT+4d\"G(:p#";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("  n2l;$R-'u_z=+Annw", true, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      GDSType.getType((String) null);
      dBForeignKeyConstraint0.toString();
      dBForeignKeyConstraint0.setDoc("lT+4d\"G(:p#");
      FBConnectionProperties fBConnectionProperties0 = new FBConnectionProperties();
      // Undeclared exception!
      try { 
        dBForeignKeyConstraint0.columnReferencedBy("M~fR/S][l", true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // foreign key '  n2l;$R-'u_z=+Annw' does not have a column 'M~fR/S][l'
         //
         verifyException("org.databene.jdbacl.model.DBForeignKeyConstraint", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.3447004957129813
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "");
      DBDataType dBDataType0 = DBDataType.getInstance(8, "");
      String[] stringArray0 = new String[0];
      CharArrayWriter charArrayWriter0 = new CharArrayWriter(16384);
      charArrayWriter0.write("?9+7");
      charArrayWriter0.close();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      Integer integer0 = RawTransaction.ABORT;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("", defaultDBTable0, dBDataType0, integer0);
      defaultDBColumn0.setFractionDigits(integer0);
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0, stringBuilder0);
      String string0 = SQLUtil.renderColumn(defaultDBColumn0);
      String string1 = SQLUtil.renderWhereClause(stringArray0, stringArray0);
      assertFalse(string1.equals((Object)string0));
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.7210977201726028
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Boolean boolean0 = new Boolean("TriggerNewTransit`onRous");
      SQLUtil.mutatesDataOrStructure("TriggerNewTransit`onRous");
      SQLUtil.removeComments("TriggerNewTransit`onRous");
      FileSystemHandling.shouldAllThrowIOExceptions();
      SQLUtil.isDDL("org.h2.util.SourceCompiler");
      String string0 = null;
      DefaultDBTable defaultDBTable0 = new DefaultDBTable((String) null);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "TriggerNewTransit`onRous";
      stringArray0[1] = "!1ilx38{J\"qIJncQ+";
      stringArray0[2] = "I#:Hsd";
      stringArray0[3] = "`=*Pw%TTRMJBwQk}sR}";
      SQLUtil.join("org.h2.util.SourceCompiler", " )\n", stringArray0, "N", " NOT NULL", stringArray0);
      SQLUtil.mutatesDataOrStructure("`=*Pw%TTRMJBwQk}sR}");
      StringBuilder stringBuilder0 = new StringBuilder(",&GQ g");
      SQLUtil.addOptionalCondition("N", stringBuilder0);
      Integer integer0 = RawTransaction.COMMIT;
      String[] stringArray1 = new String[2];
      stringArray1[0] = "!1ilx38{J\"qIJncQ+";
      stringArray1[1] = "TriggerNewTransit`onRous";
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause(stringArray1, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.9905008895461678
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Boolean boolean0 = new Boolean("TriggerNewTransit`onRous");
      SQLUtil.removeComments("TriggerNewTransit`onRous");
      FileSystemHandling.shouldAllThrowIOExceptions();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("TriggerNewTransit`onRous");
      String[] stringArray0 = new String[6];
      stringArray0[1] = "I#:Hsd";
      stringArray0[2] = "I#:Hsd";
      stringArray0[3] = "TriggerNewTransit`onRous";
      stringArray0[4] = "TriggerNewTransit`onRous";
      SQLUtil.join("TriggerNewTransit`onRous", "I#:Hsd", stringArray0, "TriggerNewTransit`onRous", "!1ilx38{J\"qIJncQ+", stringArray0);
      SQLUtil.mutatesDataOrStructure("TriggerNewTransit`onRous");
      StringBuilder stringBuilder0 = new StringBuilder("TriggerNewTransit`onRous");
      StringBuilder stringBuilder1 = SQLUtil.addOptionalCondition(stringArray0[0], stringBuilder0);
      Integer integer0 = RawTransaction.COMMIT;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "TriggerNewTransit`onRous");
      DBDataType dBDataType0 = DBDataType.getInstance("DATE");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("\u0001\u019A", defaultDBTable0, dBDataType0, integer0, integer0);
      SQLUtil.renderColumn(defaultDBColumn0);
      Integer integer1 = RawTransaction.SAVEPOINT_ROLLBACK;
      DefaultDBColumn defaultDBColumn1 = new DefaultDBColumn("I#:Hsd", defaultDBTable0, dBDataType0, integer1);
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn1, stringBuilder1);
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      defaultDBColumn1.getNotNullConstraint();
      // Undeclared exception!
      try { 
        SQLUtil.constraintName((DBConstraint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.7214787039105834
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "execute";
      stringArray0[1] = "fn";
      stringArray0[2] = "fn";
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint(stringArray0[3], false, "execute", "lo_lseek");
      StringBuilder stringBuilder0 = new StringBuilder("+(>Er@nVw8{");
      NameSpec nameSpec0 = NameSpec.NEVER;
      SQLUtil.appendConstraintName((DBConstraint) dBCheckConstraint0, stringBuilder0, nameSpec0);
      VersionNumber.valueOf("org.apache.derby.impl.sql.catalog.DDColumnDependableFinder");
      SQLUtil.isProcedureCall("delete");
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("@(j>/~_2");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal column type format: @(j>/~_2
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.9610476211151777
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder(0);
      StringBuilder stringBuilder1 = SQLUtil.addOptionalCondition("q{(/$P:I\"aHGp", stringBuilder0);
      SQLUtil.removeComments("' not found in table '");
      SQLUtil.isDDL("' not found in table '");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("\"B");
      String[] stringArray0 = new String[2];
      stringArray0[0] = "' not found in table '";
      stringArray0[1] = "q{(/$P:I\"aHGp";
      SQLUtil.join("sDa+pS", "sDa+pS", stringArray0, "' not found in table '", "' not found in table '", stringArray0);
      SQLUtil.mutatesDataOrStructure("cA7.LIXtMz'Cfmw2");
      StringBuilder stringBuilder2 = stringBuilder0.replace(0, 0, "sDa+pS join ' not found in table ' as ' not found in table ' on sDa+pS.' not found in table ' = ' not found in table '.' not found in table ' and sDa+pS.q{(/$P:I\"aHGp = ' not found in table '.q{(/$P:I\"aHGp");
      SQLUtil.addOptionalCondition("I#:Hsd", stringBuilder1);
      Integer integer0 = RawTransaction.COMMIT;
      String[] stringArray1 = new String[3];
      stringArray1[0] = "8_0}WA";
      stringArray1[1] = "sDa+pS join ' not found in table ' as ' not found in table ' on sDa+pS.' not found in table ' = ' not found in table '.' not found in table ' and sDa+pS.q{(/$P:I\"aHGp = ' not found in table '.q{(/$P:I\"aHGp";
      stringArray1[2] = "I#:Hsd";
      SQLUtil.renderWhereClause(stringArray1, stringArray1);
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "I#:Hsd", false, stringArray0);
      SQLUtil.appendConstraintName((DBConstraint) dBUniqueConstraint0, stringBuilder2);
      assertEquals("sDa+pS join ' not found in table ' as ' not found in table ' on sDa+pS.' not found in table ' = ' not found in table '.' not found in table ' and sDa+pS.q{(/$P:I\"aHGp = ' not found in table '.q{(/$P:I\"aHGpq{(/$P:I\"aHGp or I#:HsdCONSTRAINT I#:Hsd ", stringBuilder2.toString());
      
      boolean boolean0 = SQLUtil.isProcedureCall("triggern");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.6815563206157869
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SQLUtil.isDML(" DEFAULT ");
      DBSchema dBSchema0 = new DBSchema((String) null);
      DBDataType.getInstance((-209617493), " DEFAULT ");
      SQLUtil.isDDL(" DEFAULT ");
      DBTrigger dBTrigger0 = new DBTrigger("5", dBSchema0);
      dBTrigger0.setOwner(dBSchema0);
      dBSchema0.addTrigger(dBTrigger0);
      TableContainer tableContainer0 = new TableContainer((String) null, dBSchema0);
      tableContainer0.getTable(" DEFAULT ");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("drop materialized view", (DBTable) null, (DBDataType) null);
      DBColumn[] dBColumnArray0 = new DBColumn[7];
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[1] = (DBColumn) defaultDBColumn0;
      defaultDBColumn0.setDoc("truncatetriggernewtransit`onrous");
      dBColumnArray0[2] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[3] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[4] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[5] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[6] = (DBColumn) defaultDBColumn0;
      String[] stringArray0 = new String[7];
      stringArray0[0] = "drop materialized view";
      stringArray0[1] = " DEFAULT ";
      stringArray0[2] = "5";
      SQLUtil.isDDL("drop materialized view");
      DBConstraint dBConstraint0 = null;
      StringBuilder stringBuilder0 = null;
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) null, (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.6220322287852307
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SQLUtil.removeComments("fn");
      SQLUtil.isQuery("drop materialized viewunique");
      VersionNumber.valueOf("drop materialized viewunique");
      DBSchema dBSchema0 = new DBSchema("UNIQUE ");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("UNIQUE ", dBSchema0);
      String[] stringArray0 = new String[0];
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("fn", false, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      RowOutputText rowOutputText0 = new RowOutputText("g`$*E=tAp{Rh-LN", "(", "UNIQUE ", false, "g`$*E=tAp{Rh-LN");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(rowOutputText0);
      Locale locale0 = Locale.CHINESE;
      PrintWriter printWriter0 = mockPrintWriter0.printf(locale0, "alter materialized viewunique", (Object[]) stringArray0);
      SQLUtil.renderAddForeignKey(dBForeignKeyConstraint0, nameSpec0, printWriter0);
      assertEquals(FKChangeRule.NO_ACTION, dBForeignKeyConstraint0.getDeleteRule());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("B,Q+yzWof[oo Iwh[");
      DBDataType dBDataType0 = DBDataType.getInstance(1099, "B,Q+yzWof[oo Iwh[");
      DBDataType.getInstance(0, "B,Q+yzWof[oo Iwh[");
      String[] stringArray0 = new String[6];
      stringArray0[0] = " NOT NULL";
      stringArray0[1] = "B,Q+yzWof[oo Iwh[";
      stringArray0[2] = " NOT NULL";
      stringArray0[3] = " NOT NULL";
      stringArray0[4] = " NOT NULL";
      stringArray0[5] = " NOT NULL";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, " NOT NULL", false, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex((String) null, false, dBPrimaryKeyConstraint0);
      dBUniqueIndex0.getTable();
      DBSchema dBSchema0 = new DBSchema("alter session");
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      DBTable dBTable0 = dBUniqueIndex0.getTable();
      DBDataType dBDataType1 = DBDataType.getInstance(8, " NOT NULL");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("-webPort", dBTable0, dBDataType1);
      defaultDBColumn0.setType(dBDataType0);
      DBColumn[] dBColumnArray0 = new DBColumn[5];
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[1] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[2] = (DBColumn) defaultDBColumn0;
      defaultDBColumn0.getForeignKeyConstraint();
      dBColumnArray0[4] = (DBColumn) defaultDBColumn0;
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames(dBColumnArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.9550457711116036
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SQLUtil.isQuery("callf`:a[s2j|r.,'%qsk");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "mrU";
      stringArray0[1] = "*D@F\"HgY";
      stringArray0[2] = "PRIMARY_KEY BIT";
      stringArray0[3] = "*D@F\"HgY";
      stringArray0[4] = "bzK(qX!Y4h?s3";
      SQLUtil.join("*D@F\"HgY", (String) null, stringArray0, "callf`:a[s2j|r.,'%qsk", "PRIMARY_KEY BIT", stringArray0);
      VersionNumber.valueOf("renameexectriggernewtransit`onrous");
      VersionNumber.valueOf((String) null);
      boolean boolean0 = true;
      SQLUtil.mutatesStructure("drop indexexectriggernewtransit`onrous");
      // Undeclared exception!
      try { 
        SQLUtil.isProcedureCall((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.732523418539404
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SQLUtil.isDML(" DEFAULT ");
      DBSchema dBSchema0 = new DBSchema((String) null);
      DBDataType.getInstance((-209617493), " DEFAULT ");
      SQLUtil.isDDL(" DEFAULT ");
      DBTrigger dBTrigger0 = new DBTrigger("5", dBSchema0);
      dBSchema0.addTrigger(dBTrigger0);
      TableContainer tableContainer0 = new TableContainer((String) null, dBSchema0);
      tableContainer0.getTable(" DEFAULT ");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("drop materialized view", (DBTable) null, (DBDataType) null);
      DBColumn[] dBColumnArray0 = new DBColumn[7];
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[1] = (DBColumn) defaultDBColumn0;
      defaultDBColumn0.setDoc(" DEFAULT ");
      dBColumnArray0[3] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[4] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[5] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[6] = (DBColumn) defaultDBColumn0;
      String[] stringArray0 = new String[7];
      stringArray0[0] = "drop materialized view";
      stringArray0[1] = " DEFAULT ";
      stringArray0[2] = "5";
      SQLUtil.isDDL("drop materialized view");
      String[] stringArray1 = new String[9];
      stringArray1[0] = " DEFAULT ";
      stringArray1[1] = "#p\"7H";
      stringArray1[2] = "drop materialized view";
      stringArray1[3] = "5";
      stringArray1[4] = null;
      stringArray1[5] = null;
      stringArray1[6] = null;
      stringArray1[7] = " NOT";
      stringArray1[8] = null;
      // Undeclared exception!
      try { 
        SQLUtil.join(" NOT", "drop materialized view", stringArray1, "5", "#^x-9k", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "");
      DBDataType.getInstance(8, "");
      String[] stringArray0 = new String[0];
      CharArrayWriter charArrayWriter0 = new CharArrayWriter(16384);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(charArrayWriter0, true);
      mockPrintWriter0.printf("update", (Object[]) stringArray0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      NameSpec nameSpec0 = NameSpec.NEVER;
      SQLUtil.renderCreateTable(defaultDBTable0, true, nameSpec0, mockPrintWriter0);
      SQLUtil.renderValue(mockPrintWriter0);
      assertEquals(27, charArrayWriter0.size());
      assertEquals("updatecreate table null (\n)", charArrayWriter0.toString());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      String string0 = "fn";
      String string1 = "B,Q+yzWof[oo Iwh[";
      String string2 = "/*";
      // Undeclared exception!
      SQLUtil.mutatesDataOrStructure("/*");
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.5270958969128103
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("");
      StringBuilder stringBuilder1 = stringBuilder0.append((-3875L));
      stringBuilder0.append((double) (-3875L));
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      stringBuilder0.append(false);
      delayQueue0.peek();
      stringBuilder1.insert(0, (Object) stringBuilder0);
      stringBuilder1.append((-781.0644F));
      DefaultDBTable defaultDBTable1 = new DefaultDBTable();
      String[] stringArray0 = new String[0];
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("", true, defaultDBTable1, stringArray0, defaultDBTable1, stringArray0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      SQLUtil.fkSpec(dBForeignKeyConstraint0, nameSpec0);
      SQLUtil.constraintSpec(dBForeignKeyConstraint0, nameSpec0);
      SQLUtil.constraintName(dBForeignKeyConstraint0);
      SQLUtil.typeAndName(defaultDBTable1);
      NameSpec nameSpec1 = NameSpec.NEVER;
      SQLUtil.constraintSpec(dBForeignKeyConstraint0, nameSpec1);
      LinkedList<DBColumn> linkedList0 = new LinkedList<DBColumn>();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) linkedList0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.1641933683302232
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      String string0 = "fn";
      String[] stringArray0 = new String[5];
      stringArray0[0] = "?\"$%3YS";
      String string1 = "!1ilx8{J\"qIJncQ+";
      SQLUtil.join("updatedelete?\"$%3ys", "+SwN'_JnW|<NO@ $Ew[", stringArray0, (String) null, (String) null, stringArray0);
      // Undeclared exception!
      try { 
        SQLUtil.mutatesDataOrStructure((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.0412723968373507
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Boolean boolean0 = Boolean.TRUE;
      SQLUtil.mutatesDataOrStructure("TriggerNewTransit`onRous");
      SQLUtil.removeComments("TriggerNewTransit`onRous");
      SQLUtil.removeComments("TriggerNewTransit`onRous");
      SQLUtil.isDDL("TriggerNewTransit`onRous");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("rename");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "TriggerNewTransit`onRous");
      String[] stringArray0 = new String[0];
      SQLUtil.join("rename", "create unique indexk%|", stringArray0, "TriggerNewTransit`onRous", "update", stringArray0);
      SQLUtil.mutatesDataOrStructure("J+QTKT");
      StringBuilder stringBuilder0 = new StringBuilder("create unique index");
      StringBuilder stringBuilder1 = SQLUtil.addOptionalCondition("create unique indexk%|", stringBuilder0);
      Integer integer0 = RawTransaction.COMMIT;
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "exec", false, stringArray0);
      StringBuilder stringBuilder2 = stringBuilder0.append("call");
      SQLUtil.appendConstraintName((DBConstraint) dBUniqueConstraint0, stringBuilder2);
      SQLUtil.isProcedureCall("exec");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("C3%6B~(Ebbi$$Pw/uf:", defaultDBTable0, 566, "wC/1+Yu}4ujJ)-yx:!T");
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0, stringBuilder1);
      assertEquals("create unique index or create unique indexk%|callCONSTRAINT exec WC/1+YU}4UJJ)-YX:!T", stringBuilder1.toString());
      assertEquals("create unique index or create unique indexk%|callCONSTRAINT exec WC/1+YU}4UJJ)-YX:!T", stringBuilder0.toString());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.8848388086571974
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Boolean boolean0 = new Boolean("TriggerNewTransit`onRous");
      SQLUtil.mutatesDataOrStructure("TriggerNewTransit`onRous");
      SQLUtil.removeComments("TriggerNewTransit`onRous");
      FileSystemHandling.shouldAllThrowIOExceptions();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("TriggerNewTransit`onRous");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "I#:Hsd";
      stringArray0[1] = "I#:Hsd";
      stringArray0[2] = "I#:Hsd";
      stringArray0[3] = "TriggerNewTransit`onRous";
      stringArray0[4] = "TriggerNewTransit`onRous";
      SQLUtil.join("TriggerNewTransit`onRous", "I#:Hsd", stringArray0, "TriggerNewTransit`onRous", "!1ilx38{J\"qIJncQ+", stringArray0);
      SQLUtil.mutatesDataOrStructure("TriggerNewTransit`onRous");
      StringBuilder stringBuilder0 = new StringBuilder("TriggerNewTransit`onRous");
      StringBuilder stringBuilder1 = SQLUtil.addOptionalCondition("I#:Hsd", stringBuilder0);
      Integer integer0 = RawTransaction.COMMIT;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "TriggerNewTransit`onRous");
      DBDataType dBDataType0 = DBDataType.getInstance("DATE");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("\u0001\u019A", defaultDBTable0, dBDataType0, integer0, integer0);
      SQLUtil.renderColumn(defaultDBColumn0);
      SQLUtil.addRequiredCondition("TriggerNewTransit`onRous", stringBuilder1);
      StringBuilder stringBuilder2 = null;
      try {
        stringBuilder2 = new StringBuilder((-1438074770));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.6574520104243486
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("");
      DBDataType dBDataType0 = DBDataType.getInstance((-2457), "");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      stringArray0[1] = "setObjectForCast";
      stringArray0[2] = "";
      stringArray0[3] = "m6,@zqzr4d@=";
      stringArray0[1] = "";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "executeinner", true, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("", true, dBPrimaryKeyConstraint0);
      DBTable dBTable0 = dBUniqueIndex0.getTable();
      DBSchema dBSchema0 = new DBSchema("V2cQJ_Xxy{#*R");
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      Integer integer1 = RawTransaction.ABORT;
      Integer integer2 = RawTransaction.COMMIT;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("_", dBTable0, dBDataType0, integer2, integer0);
      SQLUtil.renderColumn(defaultDBColumn0);
      SQLUtil.parseColumnTypeAndSize("");
      Vector<DBColumn> vector0 = new Vector<DBColumn>();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) vector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.395012281631787
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Boolean boolean0 = Boolean.TRUE;
      SQLUtil.mutatesDataOrStructure("TriggerNewTransit`onRous");
      SQLUtil.removeComments("CMN#Zu5%HX`Y");
      SQLUtil.isDDL("CMN#Zu5%HX`Y");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("Hn,SSXGjfvwPiP*_");
      String[] stringArray0 = new String[4];
      stringArray0[0] = "I#:Hsd";
      stringArray0[1] = "KHkAG-~@OOf2#z%}";
      stringArray0[2] = "I#:Hsd";
      stringArray0[3] = "I#:Hsd";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "drop table43x30.u", true, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("Blob position is limited to 2^31 - 1 due to isc_seek_blob limitations.", false, dBPrimaryKeyConstraint0);
      dBPrimaryKeyConstraint0.setDoc("9MDi5zuv");
      DBUniqueIndex dBUniqueIndex1 = new DBUniqueIndex(" NOT NULL", false, dBPrimaryKeyConstraint0);
      dBUniqueIndex1.equals(defaultDBTable0);
      dBUniqueIndex1.getTable();
      SQLUtil.isDDL("Hn,SSXGjfvwPiP*_");
      SQLUtil.normalize("43X06.U", false);
      StringBuilder stringBuilder0 = new StringBuilder(302);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      SQLUtil.appendConstraintName((DBConstraint) dBPrimaryKeyConstraint0, stringBuilder0, nameSpec0);
      assertEquals("CONSTRAINT \"drop table43x30.u\" ", stringBuilder0.toString());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.8761327324972514
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Boolean boolean0 = Boolean.TRUE;
      Boolean boolean1 = new Boolean("TriggerNewTransit`onRous");
      SQLUtil.removeComments("CMN#Zu5%HX`Y");
      SQLUtil.isDDL("CMN#Zu5%HX`Y");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("Hn,SSXGjfvwPiP*_");
      String[] stringArray0 = new String[4];
      stringArray0[0] = "I#:Hs";
      stringArray0[1] = "KHkAG-~@OOf2#z%}";
      stringArray0[2] = "I#:Hs";
      stringArray0[3] = "I#:Hs";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "drop table43x30.u", false, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("Blob position is limited to 2^31 - 1 due to isc_seek_blob limitations.", false, dBPrimaryKeyConstraint0);
      dBPrimaryKeyConstraint0.setDoc("9MDi5zuv");
      DBUniqueIndex dBUniqueIndex1 = new DBUniqueIndex(" NOT NULL", false, dBPrimaryKeyConstraint0);
      dBUniqueIndex1.equals(defaultDBTable0);
      DBTable dBTable0 = dBUniqueIndex1.getTable();
      boolean boolean2 = SQLUtil.isDDL("Hn,SSXGjfvwPiP*_");
      String string0 = SQLUtil.normalize("43X06.U", false);
      assertEquals("43X06.U", string0);
      
      StringBuilder stringBuilder0 = new StringBuilder(281);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      StringBuilder stringBuilder1 = SQLUtil.appendConstraintName((DBConstraint) dBPrimaryKeyConstraint0, stringBuilder0, nameSpec0);
      assertEquals("", stringBuilder1.toString());
      
      boolean boolean3 = SQLUtil.isQuery("Z=?b~P");
      assertTrue(boolean3 == boolean2);
      
      DBColumn[] dBColumnArray0 = new DBColumn[4];
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("setObject(String,Object,int)", dBTable0, (DBDataType) null, integer0);
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      DefaultDBColumn defaultDBColumn1 = new DefaultDBColumn("43X06.U", dBTable0, (-270662594), "CMN#Zu5%HX`Y");
      dBColumnArray0[1] = (DBColumn) defaultDBColumn1;
      DefaultDBColumn defaultDBColumn2 = new DefaultDBColumn("I#:Hs", dBTable0, (DBDataType) null);
      dBColumnArray0[2] = (DBColumn) defaultDBColumn2;
      DefaultDBColumn defaultDBColumn3 = new DefaultDBColumn("Hn,SSXGjfvwPiP*_", defaultDBTable0, (DBDataType) null);
      dBColumnArray0[3] = (DBColumn) defaultDBColumn3;
      String string1 = SQLUtil.renderColumnNames(dBColumnArray0);
      assertEquals("setObject(String,Object,int), 43X06.U, I#:Hs, Hn,SSXGjfvwPiP*_", string1);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.546269624945665
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder(0);
      SQLUtil.addOptionalCondition("q{(/$P:I\"aHGp", stringBuilder0);
      StringBuilder stringBuilder1 = stringBuilder0.append((-3875L));
      StringBuilder stringBuilder2 = stringBuilder0.append(0.0);
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      stringBuilder1.append(false);
      delayQueue0.peek();
      stringBuilder2.insert(0, (Object) null);
      stringBuilder1.append((float) (-3875L));
      char[] charArray0 = new char[7];
      charArray0[0] = '2';
      charArray0[1] = '5';
      charArray0[2] = '2';
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[2];
      stringArray0[0] = null;
      stringArray0[1] = null;
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint((String) null, true, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      SQLUtil.fkSpec(dBForeignKeyConstraint0, nameSpec0);
      SQLUtil.constraintSpec(dBForeignKeyConstraint0, nameSpec0);
      SQLUtil.constraintName(dBForeignKeyConstraint0);
      SQLUtil.typeAndName(dBForeignKeyConstraint0);
      NameSpec nameSpec1 = NameSpec.IF_REPRODUCIBLE;
      SQLUtil.constraintSpec(dBForeignKeyConstraint0, nameSpec1);
      LinkedList<DBColumn> linkedList0 = new LinkedList<DBColumn>();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) linkedList0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.6855345230325405
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Boolean boolean0 = Boolean.TRUE;
      SQLUtil.mutatesDataOrStructure("TriggerNewTransit`onRous");
      SQLUtil.removeComments("TriggerNewTransit`onRous");
      SQLUtil.isDDL("TriggerNewTransit`onRous");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("I#:Hsd");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "I#:Hsd";
      stringArray0[1] = "I#:Hsd";
      stringArray0[2] = "TriggerNewTransit`onRous";
      stringArray0[3] = "I#:Hsd";
      stringArray0[4] = "TriggerNewTransit`onRous";
      stringArray0[5] = "TriggerNewTransit`onRous";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "TriggerNewTransit`onRous", true, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("I#:Hsd", false, dBPrimaryKeyConstraint0);
      dBUniqueIndex0.getTable();
      SQLUtil.isDDL("ZrAd7R`]3yEEl|");
      SQLUtil.removeComments("TriggerNewTransit`onRous");
      SQLUtil.leftJoin((String) null, stringArray0, "org.apache.derby.iapi.sql.dictionary.SubConstraintDescriptor", "default", stringArray0);
      // Undeclared exception!
      try { 
        SQLUtil.renderNumber((StreamTokenizer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.9557135998277697
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SQLUtil.removeComments("A/0\"");
      SQLUtil.isQuery("callf`:a[s2j|r.,'%qsk");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "A/0\"";
      String string0 = "exec),~k";
      VersionNumber.valueOf("exec),~k");
      SQLUtil.isProcedureCall("A/0\"");
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("(3.iA065>aX+{<A");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal column type format: (3.iA065>aX+{<A
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.3984750402019235
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[0] = "'";
      stringArray0[1] = "BLOB";
      String[] stringArray1 = new String[1];
      stringArray1[0] = "9S$zX[hd$^%:M0|";
      SQLUtil.leftJoin("9S$zX[hd$^%:M0|", stringArray1, "BLOB", "9S$zX[hd$^%:M0|", stringArray0);
      SQLUtil.innerJoin("(~(o:(Bd#He;4r", stringArray1, "BLOB", "'", stringArray0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("BLOB as ' on (~(o:(Bd#He;4r.9S$zX[hd$^%:M0| = '.'", defaultDBTable0, (-311), "9,N^");
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      Integer integer1 = RawTransaction.LOCK_ESCALATE;
      CharArrayWriter charArrayWriter0 = new CharArrayWriter(65);
      defaultDBTable0.getColumnNames();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(charArrayWriter0, true);
      PrintWriter printWriter0 = mockPrintWriter0.printf("executetp.id~jd>a-;w", (Object[]) stringArray1);
      printWriter0.print(0.0F);
      printWriter0.write("9S$zX[hd$^%:M0|");
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      SQLUtil.renderCreateTable(defaultDBTable0, false, nameSpec0, printWriter0);
      defaultDBTable0.getPrimaryKeyConstraint();
      SQLUtil.substituteMarkers("--", "Illegal column type format: ", "");
      DataDictionaryImpl dataDictionaryImpl0 = new DataDictionaryImpl();
      dataDictionaryImpl0.getActiveConstraintDescriptors((ConstraintDescriptorList) null);
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.9511242024841526
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "B,Q+yzWof[oo Iwh[";
      DefaultDBTable defaultDBTable1 = new DefaultDBTable();
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "B,Q+yzWof[oo Iwh[", false, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("TP.Id~jd>A-;W", true, dBPrimaryKeyConstraint0);
      DBTable dBTable0 = dBUniqueIndex0.getTable();
      DBSchema dBSchema0 = new DBSchema("Cjkjlw5h`,s");
      DefaultDBTable defaultDBTable2 = new DefaultDBTable("org.databene.jdbacl.SQLUtil", dBSchema0);
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("=:!Y,A!p", true, defaultDBTable2, stringArray0, defaultDBTable2, stringArray0);
      defaultDBTable2.addIndex(dBUniqueIndex0);
      DBSchema dBSchema1 = new DBSchema("G#=&8Q8%)hDx:0", (DBCatalog) null);
      Integer integer0 = RawTransaction.ABORT;
      dBSchema0.toString();
      dBSchema1.equals(defaultDBTable1);
      DBForeignKeyConstraint dBForeignKeyConstraint1 = new DBForeignKeyConstraint("6 2QLTSSVGSa!pE", false, defaultDBTable1, stringArray0, dBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      String string0 = SQLUtil.fkSpec(dBForeignKeyConstraint0, nameSpec0);
      assertEquals("FOREIGN KEY (B,Q+yzWof[oo Iwh[, ) REFERENCES org.databene.jdbacl.SQLUtil(B,Q+yzWof[oo Iwh[, )", string0);
      
      String string1 = SQLUtil.ownerDotComponent(dBForeignKeyConstraint1);
      assertEquals("null.6 2QLTSSVGSa!pE", string1);
      
      String string2 = SQLUtil.join("deletewp@mu,(", "`@xqV(Z304re/1O;;[", stringArray0, "update", "wp@mu,", stringArray0);
      assertEquals("deletewp@mu,( join update as wp@mu, on `@xqV(Z304re/1O;;[.B,Q+yzWof[oo Iwh[ = wp@mu,.B,Q+yzWof[oo Iwh[ and `@xqV(Z304re/1O;;[.null = wp@mu,.null", string2);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.214734015212756
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("");
      SQLUtil.removeComments("");
      SQLUtil.isQuery("A/0\"");
      Object[] objectArray0 = SQLUtil.parseColumnTypeAndSize("");
      String[] stringArray0 = new String[2];
      stringArray0[0] = ",Tg+22";
      stringArray0[1] = "A/0\"";
      // Undeclared exception!
      try { 
        SQLUtil.renderQuery(defaultDBTable0, stringArray0, objectArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.7774503447663808
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("");
      DBDataType.getInstance(8, "");
      DBDataType.getInstance(0, "");
      String[] stringArray0 = new String[0];
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, " NOT NULL", false, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("MAX_OPERATION_MEMORY", false, dBPrimaryKeyConstraint0);
      dBUniqueIndex0.getTable();
      DBSchema dBSchema0 = new DBSchema("alter materialized view");
      SQLUtil.mutatesStructure(" NOT NULL");
      // Undeclared exception!
      try { 
        SQLUtil.isDDL((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      DBCatalog dBCatalog0 = new DBCatalog("drop materialized viewscript.sql");
      SQLUtil.typeAndName(dBCatalog0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String string0 = "";
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("19obP=KT`XvY\"&vv^'", defaultDBTable0, (-1206), "");
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0, (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.9442940945318903
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Boolean boolean0 = Boolean.TRUE;
      SQLUtil.mutatesDataOrStructure("TriggerNewTransit`onRous");
      SQLUtil.removeComments("TriggerNewTransit`onRous");
      SQLUtil.isDDL("TriggerNewTransit`onRous");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("I#:Hsd");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "I#:Hsd";
      stringArray0[1] = "I#:Hsd";
      String string0 = "exectriggernewtransit`onrous";
      SQLUtil.mutatesStructure("TriggerNewTransit`onRous");
      SQLUtil.normalize("|f:-BnJ/Y^*CYHTl9d8", true);
      SQLUtil.isQuery("LASTINDEXKEYSCAN");
      char char0 = 'D';
      int int0 = (-1935);
      StringBuilder stringBuilder0 = null;
      try {
        stringBuilder0 = new StringBuilder((-1935));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.0092230773202147
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      SQLUtil.isDML("h),9K");
      SQLUtil.isQuery("h),9K");
      SQLUtil.normalize("h),9K", false);
      SQLUtil.mutatesStructure("46=Y5hxp");
      SQLUtil.isDDL("wP@Mu,(");
      DefaultDatabase defaultDatabase0 = new DefaultDatabase("h),9K", "|^Q", (VersionNumber) null);
      DBCatalog dBCatalog0 = new DBCatalog("46=Y5hxp", defaultDatabase0);
      dBCatalog0.getSchema("h), 9K");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("dmYB=g", (DBSchema) null);
      defaultDBTable0.getPrimaryKeyConstraint();
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.pkSpec((DBPrimaryKeyConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.5013236663629645
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[4] = "";
      stringArray0[1] = "G";
      stringArray0[2] = "|%8Sev^@B ,Q}/";
      String string0 = " (";
      stringArray0[3] = " (";
      stringArray0[4] = "";
      SQLUtil.join(" (", " (", stringArray0, " (", "f%Du-#>lxGcTOd_L5", stringArray0);
      SQLUtil.mutatesDataOrStructure("truncatetriggernewtransit`onrous");
      StringBuilder stringBuilder0 = new StringBuilder(" (");
      String string1 = "CONSTRAINT ";
      SQLUtil.addOptionalCondition("CONSTRAINT ", stringBuilder0);
      Integer integer0 = RawTransaction.COMMIT;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "[E&-7<`Iea");
      // Undeclared exception!
      try { 
        DBDataType.getInstance(")T.}0");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.model.DBDataType", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.859530999342139
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Boolean boolean0 = Boolean.TRUE;
      SQLUtil.mutatesDataOrStructure("TriggerNewTransit`onRous");
      SQLUtil.removeComments("TriggerNewTransit`onRous");
      SQLUtil.isDDL("TriggerNewTransit`onRous");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("I#:Hsd");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "I#:Hsd";
      stringArray0[1] = "I#:Hsd";
      stringArray0[2] = "TriggerNewTransit`onRous";
      stringArray0[3] = "TriggerNewTransit`onRous";
      stringArray0[4] = "TriggerNewTransit`onRous";
      stringArray0[5] = "TriggerNewTransit`onRous";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "TriggerNewTransit`onRous", true, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("I#:Hsd", false, dBPrimaryKeyConstraint0);
      DBTable dBTable0 = dBUniqueIndex0.getTable();
      NameSpec nameSpec0 = NameSpec.NEVER;
      CharArrayWriter charArrayWriter0 = new CharArrayWriter(1);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(charArrayWriter0, true);
      PrintWriter printWriter0 = mockPrintWriter0.printf("I#:Hsd", (Object[]) stringArray0);
      SQLUtil.renderCreateTable(dBTable0, true, nameSpec0, printWriter0);
      assertEquals(164, charArrayWriter0.size());
      assertEquals("I#:Hsdcreate table I#:Hsd (,\n\tPRIMARY KEY (I#:Hsd, I#:Hsd, TriggerNewTransit`onRous, TriggerNewTransit`onRous, TriggerNewTransit`onRous, TriggerNewTransit`onRous)\n)", charArrayWriter0.toString());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.6396316382218536
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      SQLUtil.removeComments("f`:A[s2j|R.,'%Qsk");
      SQLUtil.mutatesDataOrStructure("lT+4G(:p#");
      String string0 = "inner";
      SQLUtil.isProcedureCall("inner");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("CREATE TABLE ");
      StringBuilder stringBuilder0 = new StringBuilder();
      int int0 = 41;
      StringBuilder stringBuilder1 = stringBuilder0.append(41);
      StringBuilder stringBuilder2 = stringBuilder1.appendCodePoint(41);
      stringBuilder2.append((double) 2240L);
      int int1 = (-597);
      String string1 = "92&Ten*sy#7U#";
      String string2 = "updateno";
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("92&Ten*sy#7U#", defaultDBTable0, 41, "updateno");
      // Undeclared exception!
      try { 
        stringBuilder1.insert((-597), (Object) defaultDBColumn0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -597
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.4295203737091735
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      String[] stringArray0 = new String[0];
      SQLUtil.renderColumnNames(stringArray0);
      SQLUtil.mutatesStructure("=lVTC)ROz|FnW");
      SQLUtil.isDDL("triggernewtr");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("()");
      DBDataType dBDataType0 = DBDataType.getInstance(2989, "truncate");
      Integer integer0 = new Integer(2989);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("?9<,;qHsS", defaultDBTable0, dBDataType0, integer0);
      defaultDBColumn0.getForeignKeyConstraint();
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.fkSpec((DBForeignKeyConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.8976492786748422
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      String string0 = "alter materialized view?\"$%3ys";
      SQLUtil.mutatesDataOrStructure("alter materialized view?\"$%3ys");
      SQLUtil.removeComments("alter materialized view?\"$%3ys");
      SQLUtil.isDDL("");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("exec");
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      GDSType.getType((String) null);
      FBConnectionProperties fBConnectionProperties0 = new FBConnectionProperties();
      GDSType.getType("blobBufferSize");
      FBManagedConnectionFactory fBManagedConnectionFactory0 = null;
      try {
        fBManagedConnectionFactory0 = new FBManagedConnectionFactory((GDSType) null, fBConnectionProperties0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jca.FBManagedConnectionFactory", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("");
      DBDataType.getInstance(14, "");
      String[] stringArray0 = new String[0];
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "", false, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("", true, dBPrimaryKeyConstraint0);
      DBTable dBTable0 = dBUniqueIndex0.getTable();
      DBSchema dBSchema0 = new DBSchema("alter materialized view");
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("", dBSchema0);
      Integer integer0 = RawTransaction.ABORT;
      dBSchema0.equals(integer0);
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("rename", false, dBTable0, stringArray0, defaultDBTable1, stringArray0);
      SQLUtil.ownerDotComponent(dBSchema0);
      // Undeclared exception!
      try { 
        SQLUtil.isQuery((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.688826499937634
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      SQLUtil.isDML("h),9K");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "ACTIVE";
      stringArray0[1] = "ACTIVE";
      stringArray0[2] = "?\"$%3YS";
      stringArray0[3] = "?\"$%3YS";
      stringArray0[4] = "h),9K";
      stringArray0[5] = "?\"$%3YS";
      SQLUtil.innerJoin("h),9K", stringArray0, "h),9K", "?\"$%3YS", stringArray0);
      SQLUtil.renderColumnNames(stringArray0);
      SQLUtil.mutatesStructure("?\"$%3YS");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("%8$rF");
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "trigge", true, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("DROP SEQUENCE ", true, dBPrimaryKeyConstraint0);
      DBTable dBTable0 = dBUniqueIndex0.getTable();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("h),9k", dBTable0, 2, "7");
      defaultDBColumn0.getForeignKeyConstraint();
      dBPrimaryKeyConstraint0.setDoc(" NULL");
      NameSpec nameSpec0 = NameSpec.NEVER;
      StringBuilder stringBuilder0 = SQLUtil.createConstraintSpecBuilder(dBPrimaryKeyConstraint0, nameSpec0);
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) null, stringBuilder0, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "execute";
      stringArray0[1] = "fn";
      stringArray0[2] = "fn";
      stringArray0[3] = "fn";
      boolean boolean0 = false;
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("fn", false, "execute", "lo_lseek");
      StringBuilder stringBuilder0 = new StringBuilder("+(>Er@nVw8{");
      NameSpec nameSpec0 = NameSpec.NEVER;
      StringBuilder stringBuilder1 = SQLUtil.appendConstraintName((DBConstraint) dBCheckConstraint0, stringBuilder0, nameSpec0);
      StringBuilder stringBuilder2 = SQLUtil.addRequiredCondition("delete", stringBuilder1);
      char[] charArray0 = new char[3];
      stringBuilder1.append((Object) "fn");
      charArray0[0] = 'Z';
      charArray0[1] = 'e';
      charArray0[2] = '[';
      // Undeclared exception!
      try { 
        stringBuilder2.insert(3209, charArray0, (-63), (-1206));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3209
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("");
      String[] stringArray0 = new String[4];
      stringArray0[0] = null;
      stringArray0[1] = "executeinner";
      stringArray0[2] = "";
      stringArray0[3] = "";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, (String) null, false, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex((String) null, false, dBPrimaryKeyConstraint0);
      dBUniqueIndex0.getTable();
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      Integer integer1 = RawTransaction.ABORT;
      Integer integer2 = RawTransaction.COMMIT;
      StringBuilder stringBuilder1 = SQLUtil.addRequiredCondition("", stringBuilder0);
      assertEquals("", stringBuilder1.toString());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.7774503447663808
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "B,Q+yzWof[oo Iwh[";
      DefaultDBTable defaultDBTable1 = new DefaultDBTable();
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "B,Q+yzWof[oo Iwh[", false, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("TP.Id~jd>A-;W", true, dBPrimaryKeyConstraint0);
      dBUniqueIndex0.getTable();
      DBSchema dBSchema0 = new DBSchema("Cjkjlw5h`,s");
      DefaultDBTable defaultDBTable2 = new DefaultDBTable("org.databene.jdbacl.SQLUtil", dBSchema0);
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("=:!Y,A!p", true, defaultDBTable2, stringArray0, defaultDBTable2, stringArray0);
      defaultDBTable2.addIndex(dBUniqueIndex0);
      Boolean boolean0 = SQLUtil.mutatesStructure("execute");
      assertFalse(boolean0);
      
      boolean boolean1 = SQLUtil.isDDL("TP.Id~jd>A-;W");
      assertFalse(boolean1);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.7003810554865606
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      boolean boolean0 = SQLUtil.isQuery("callf`:a[s2j|r.,'%qsk");
      String[] stringArray0 = new String[1];
      VersionNumber.valueOf("MfnF9p");
      Boolean boolean1 = SQLUtil.mutatesStructure("'Y3tW&c(Sw9=(4");
      assertTrue(boolean1.equals((Object)boolean0));
      
      boolean boolean2 = SQLUtil.isProcedureCall("+-:oVkHV'X");
      assertFalse(boolean2);
      
      String string0 = SQLUtil.normalize("<d@OG):ED><(6G>-1", true);
      assertEquals("< d @ OG) : ED > < (6G > - 1", string0);
      
      StringReader stringReader0 = new StringReader("F");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      String string1 = SQLUtil.renderNumber(streamTokenizer0);
      assertEquals("- 0", string1);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      String string0 = " WHERE ";
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "cmn#zu5%hx");
      String string1 = null;
      // Undeclared exception!
      try { 
        SQLUtil.mutatesStructure((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.3221086830269158
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      String string0 = "triggernewtransit`onrou";
      SQLUtil.removeComments("triggernewtransit`onrou");
      String[] stringArray0 = new String[2];
      stringArray0[0] = "triggernewtransit`onrou";
      stringArray0[1] = "triggernewtransit`onrou";
      String string1 = "Original file name: ";
      SQLUtil.removeComments("triggernewtransit`onrou");
      String[] stringArray1 = new String[3];
      stringArray1[0] = "triggernewtransit`onrou";
      stringArray1[1] = "Original file name: ";
      stringArray1[2] = "Original file name: ";
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause(stringArray1, stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      String string0 = "$z!f<,9L2t)8N)";
      // Undeclared exception!
      try { 
        SQLUtil.addRequiredCondition("$z!f<,9L2t)8N)", (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.6969987794394548
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      SQLUtil sQLUtil0 = new SQLUtil();
      char[] charArray0 = new char[5];
      charArray0[0] = '?';
      charArray0[1] = 'd';
      charArray0[2] = '5';
      charArray0[3] = '2';
      charArray0[4] = 'd';
      SQLUtil.isProcedureCall("J5^;ny");
      // Undeclared exception!
      try { 
        SQLUtil.isDML((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.8339792321025308
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      SQLUtil.mutatesStructure("TriggerNewTransit`onRous");
      StringBuilder stringBuilder0 = new StringBuilder("TriggerNewTransit`onRous");
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("TriggerNewTransit`onRous");
      assertNull(boolean0);
      
      LinkedList<DBColumn> linkedList0 = new LinkedList<DBColumn>();
      SQLUtil.removeComments("TriggerNewTransit`onRous");
      DBDataType dBDataType0 = DBDataType.getInstance(2001, "TriggerNewTransit`onRous");
      DBDataType.getInstance(47, "TriggerNewTransit`onRous");
      DBCatalog dBCatalog0 = new DBCatalog("inserttriggernewtransit`onrous");
      DBSchema dBSchema0 = new DBSchema("-21PgKU%<T/8DsHeU", dBCatalog0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("CLOB", dBSchema0);
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("TriggerNewTransit`onRous", defaultDBTable0, dBDataType0, integer0, integer0);
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      String string0 = SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      assertEquals("TRIGGERNEWTRANSIT`ONROUS(2,2)", string0);
      
      Integer integer1 = new Integer(2001);
      String string1 = SQLUtil.substituteMarkers("inserttriggernewtransit`onrous", "triggernew", dBCatalog0);
      assertEquals("insertinserttriggernewtransit`onroustransit`onrous", string1);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.4001443355569787
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "");
      stringBuilder0.append((-169));
      DBDataType dBDataType0 = DBDataType.getInstance(8, "");
      String[] stringArray0 = new String[0];
      CharArrayWriter charArrayWriter0 = new CharArrayWriter(16384);
      charArrayWriter0.write("");
      charArrayWriter0.close();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      Integer integer0 = RawTransaction.ABORT;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("", defaultDBTable0, dBDataType0, integer0);
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0, stringBuilder0);
      SQLUtil.renderColumn(defaultDBColumn0);
      String string0 = SQLUtil.renderWhereClause(stringArray0, stringArray0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.176379769091
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      SQLUtil.isDML("h),9K");
      SQLUtil.isDML("h),9K");
      SQLUtil.normalize("org.hsqldb.Database", true);
      SQLUtil.removeComments("org.hsqldb.Database");
      // Undeclared exception!
      try { 
        SQLUtil.ownerDotComponent((DBObject) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.600942740957455
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      SQLUtil.removeComments("f`:A[s2j|R.,'%Qsk");
      SQLUtil.mutatesDataOrStructure("lT+4G(:p#");
      SQLUtil.isProcedureCall("inner");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      StringBuilder stringBuilder0 = new StringBuilder();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "f`:A[s2j|R.,'%Qsk";
      stringArray0[1] = "p:rvH8";
      stringArray0[2] = "inner";
      stringArray0[3] = "f`:A[s2j|R.,'%Qsk";
      stringArray0[4] = "lT+4G(:p#";
      stringArray0[5] = "f`:A[s2j|R.,'%Qsk";
      stringArray0[6] = "alter materialized view";
      stringArray0[7] = "inner";
      stringArray0[8] = "CREATE TABLE ";
      String[] stringArray1 = new String[3];
      stringArray1[0] = "lT+4G(:p#";
      stringArray1[1] = "inner";
      stringArray1[2] = "f`:A[s2j|R.,'%Qsk";
      // Undeclared exception!
      try { 
        SQLUtil.leftJoin("alter materialized view", stringArray0, "0}.,'Vz|:Cga4)5[", "CREATE TABLE ", stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      String string0 = "p:rvH8";
      String[] stringArray0 = null;
      String[] stringArray1 = new String[4];
      stringArray1[0] = "p:rvH8";
      stringArray1[1] = "MD5";
      stringArray1[2] = "h),9K";
      stringArray1[3] = "h),9K";
      // Undeclared exception!
      try { 
        SQLUtil.leftJoin("p:rvH8", (String[]) null, "h),9K", "%kz^npN9ls:&b!X", stringArray1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.145277367387215
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "?\"$%3YS";
      SQLUtil.leftJoin("?\"$%3YS", stringArray0, "(IV]PD@WCiP", "inner", stringArray0);
      SQLUtil.innerJoin("\"LA_I", stringArray0, "\"LA_I", "(~(o:(Bd#He;4r", stringArray0);
      String[] stringArray1 = new String[1];
      stringArray1[0] = "left join (IV]PD@WCiP as inner on ?\"$%3YS.?\"$%3YS = inner.?\"$%3YS and ?\"$%3YS.null = inner.null and ?\"$%3YS.null = inner.null and ?\"$%3YS.null = inner.null and ?\"$%3YS.null = inner.null";
      // Undeclared exception!
      try { 
        SQLUtil.innerJoin("inner", stringArray0, "alter index", "Tcmt@+mG=^ce", stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.0185666947917342
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[0];
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "TP.Id~jd>A-;W", true, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("G#=&8Q8%)hDx:0", true, dBPrimaryKeyConstraint0);
      DBTable dBTable0 = dBUniqueIndex0.getTable();
      DBSchema dBSchema0 = new DBSchema("G#=&8Q8%)hDx:0");
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("p\"'}LR,", dBSchema0);
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("$+kk", true, dBTable0, stringArray0, defaultDBTable1, stringArray0);
      dBForeignKeyConstraint0.setTable(dBTable0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String string0 = SQLUtil.fkSpec(dBForeignKeyConstraint0, nameSpec0);
      assertEquals("CONSTRAINT $+kk FOREIGN KEY () REFERENCES p\"'}LR,()", string0);
      
      NameSpec nameSpec1 = NameSpec.ALWAYS;
      String string1 = SQLUtil.pkSpec(dBPrimaryKeyConstraint0, nameSpec1);
      assertEquals("CONSTRAINT TP.Id~jd>A-;W PRIMARY KEY ()", string1);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "");
      DBDataType.getInstance(8, "");
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.renderColumnListWithTableName("43X93.U", stringArray0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.062824945186177
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      SQLUtil.removeComments("f`:A[s2j|R.,'%Qsk");
      SQLUtil.mutatesDataOrStructure("lT+4d\"G(:p#");
      SQLUtil.isProcedureCall("inner");
      SQLUtil.normalize("f`:A[s2j|R.,'%Qsk", true);
      SQLUtil.mutatesStructure("CREATE TABLE ");
      SQLUtil.normalize("inner", true);
      SQLUtil.isQuery("    prepare thre;hold = ");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "f`:A[s2j|R.,'%Qsk";
      stringArray0[1] = "lT+4d\"G(:p#";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("  n2l;$R-'u_z=+Annw", true, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      GDSType.getType((String) null);
      dBForeignKeyConstraint0.setDoc("lT+4d\"G(:p#");
      FBConnectionProperties fBConnectionProperties0 = new FBConnectionProperties();
      dBForeignKeyConstraint0.columnReferencedBy("M~fR/S][l", false);
      // Undeclared exception!
      try { 
        SQLUtil.removeComments((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.544943664690598
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Boolean boolean0 = Boolean.TRUE;
      SQLUtil.mutatesDataOrStructure("TriggerNewTransit`onRous");
      SQLUtil.removeComments("TriggerNewTransit`onRous");
      SQLUtil.isDDL("TriggerNewTransit`onRous");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("I#:Hsd");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "I#:Hsd";
      stringArray0[1] = "I#:Hsd";
      stringArray0[2] = "I#:Hsd";
      stringArray0[3] = "TriggerNewTransit`onRous";
      VersionNumber.valueOf("");
      SQLUtil.isProcedureCall("TriggerNewTransit`onRous");
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      DBColumn dBColumn0 = null;
      // Undeclared exception!
      try { 
        SQLUtil.renderColumn((DBColumn) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnListWithTableName("update", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.508988243684947
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "B,Q+yzWof[oo Iwh[";
      DefaultDBTable defaultDBTable1 = new DefaultDBTable();
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "B,Q+yzWof[oo Iwh[", false, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("sa=^ADF[oYU`#$", true, dBPrimaryKeyConstraint0);
      dBUniqueIndex0.getTable();
      DBSchema dBSchema0 = new DBSchema("Cjkjlw5h`,s");
      DefaultDBTable defaultDBTable2 = new DefaultDBTable("org.databene.jdbacl.SQLUtil", dBSchema0);
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("=:!Y,A!p", true, defaultDBTable2, stringArray0, defaultDBTable2, stringArray0);
      defaultDBTable2.addIndex(dBUniqueIndex0);
      DBSchema dBSchema1 = new DBSchema("|bSWj_XA-#NoK", (DBCatalog) null);
      dBSchema1.getTable("|bSWj_XA-#NoK");
      dBForeignKeyConstraint0.setTable((DBTable) null);
      SQLUtil.removeComments("B,Q+yzWof[oo Iwh[");
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String string0 = SQLUtil.constraintSpec(dBForeignKeyConstraint0, nameSpec0);
      assertEquals("CONSTRAINT =:!Y,A!p FOREIGN KEY (B,Q+yzWof[oo Iwh[, ) REFERENCES org.databene.jdbacl.SQLUtil(B,Q+yzWof[oo Iwh[, )", string0);
      
      String string1 = SQLUtil.constraintName(dBForeignKeyConstraint0);
      assertEquals("CONSTRAINT =:!Y,A!p ", string1);
      
      SQLUtil.typeAndName((DBObject) null);
      StringBuilder stringBuilder0 = SQLUtil.createConstraintSpecBuilder(dBForeignKeyConstraint0, nameSpec0);
      assertEquals("CONSTRAINT =:!Y,A!p ", stringBuilder0.toString());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.4727762976420462
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      SQLUtil.isDML("h),9K");
      SQLUtil.isQuery("h),9K");
      SQLUtil.normalize("h),9K", false);
      // Undeclared exception!
      try { 
        SQLUtil.innerJoin("h), 9K", (String[]) null, "h), 9K", "OBppMTWXr", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.060422542783775
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      SQLUtil.removeComments("f`:A[s2j|R.,'%Qsk");
      SQLUtil.mutatesDataOrStructure("lT+4d\"G(:p#");
      SQLUtil.isDML("f`:A[s2j|R.,'%Qsk");
      String string0 = "CREATE TABLE ";
      SQLUtil.normalize("f`:A[s2j|R.,'%Qsk", true);
      SQLUtil.mutatesStructure("CREATE TABLE ");
      DBDataType dBDataType0 = null;
      String string1 = "";
      DBSchema dBSchema0 = new DBSchema("");
      DBTrigger dBTrigger0 = new DBTrigger("inner", dBSchema0);
      String string2 = null;
      DataDictionaryImpl dataDictionaryImpl0 = new DataDictionaryImpl();
      // Undeclared exception!
      try { 
        dataDictionaryImpl0.getConstraintDescriptors((TableDescriptor) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.derby.impl.sql.catalog.DataDictionaryImpl", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.233541674847114
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "");
      String string0 = SQLUtil.normalize("^>qhz9.;n+>9rKOe", true);
      assertEquals("^ > qhz9.; n + > 9rKOe", string0);
      
      Boolean boolean0 = SQLUtil.mutatesStructure("drop materialized view5xb4+iz7%xg9z");
      assertTrue(boolean0);
      
      SQLUtil.normalize("delete", true);
      boolean boolean1 = SQLUtil.isQuery("- ");
      assertFalse(boolean1);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.5194440595704615
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDML("h),9K");
      boolean boolean1 = SQLUtil.isQuery("h),9K");
      String string0 = SQLUtil.normalize("h),9K", false);
      assertEquals("h), 9K", string0);
      
      Boolean boolean2 = SQLUtil.mutatesStructure("drop indextriggernewtransit`onrous");
      assertFalse(boolean2.equals((Object)boolean0));
      
      boolean boolean3 = SQLUtil.isDDL("h), 9K");
      assertTrue(boolean3 == boolean1);
      assertFalse(boolean3);
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.4870998613077973
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      boolean boolean0 = SQLUtil.isProcedureCall("h),9K");
      String string0 = SQLUtil.normalize("A/0\"", true);
      assertEquals("A /   0 \"\"", string0);
      
      Boolean boolean1 = SQLUtil.mutatesStructure("UNIQUE ");
      assertTrue(boolean1.equals((Object)boolean0));
      
      String string1 = SQLUtil.normalize("UNIQUE ", false);
      assertEquals("UNIQUE", string1);
      
      boolean boolean2 = SQLUtil.isQuery("A/0\"");
      assertFalse(boolean2);
  }

  /**
  //Test case number: 65
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("");
      String[] stringArray0 = new String[0];
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "", false, stringArray0);
      // Undeclared exception!
      try { 
        SQLUtil.normalize((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      DBColumn dBColumn0 = null;
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnTypeWithSize((DBColumn) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("");
      DBDataType dBDataType0 = DBDataType.getInstance(8, "");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("", defaultDBTable0, dBDataType0);
      char[] charArray0 = new char[1];
      charArray0[0] = 'w';
      String string0 = SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 68
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "?\"$%3YS";
      stringArray0[1] = "?\"$%3YS";
      stringArray0[3] = "fn";
      stringArray0[4] = "fn";
      SQLUtil.renderColumnListWithTableName("fn", stringArray0);
      // Undeclared exception!
      try { 
        SQLUtil.constraintName((DBConstraint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      SQLUtil sQLUtil0 = new SQLUtil();
      String string0 = "";
      StringBuilder stringBuilder0 = new StringBuilder(0);
      StringBuilder stringBuilder1 = SQLUtil.addOptionalCondition("ArVEn}@Z<Z_HFe1", stringBuilder0);
      StringBuilder stringBuilder2 = stringBuilder1.append(131072L);
      StringBuilder stringBuilder3 = stringBuilder2.append((double) 0);
      StringBuilder stringBuilder4 = stringBuilder3.insert(0, (Object) sQLUtil0);
      char[] charArray0 = new char[5];
      charArray0[0] = '?';
      charArray0[1] = 'd';
      stringBuilder0.append(false);
      charArray0[3] = '2';
      // Undeclared exception!
      try { 
        stringBuilder4.insert((-427), charArray0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -427
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("");
      DBDataType dBDataType0 = DBDataType.getInstance(8, "");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("", defaultDBTable0, dBDataType0);
      defaultDBColumn0.getForeignKeyConstraint();
      StringBuilder stringBuilder1 = stringBuilder0.append((Object) null);
      int int0 = 0;
      StringBuilder stringBuilder2 = stringBuilder1.delete(0, 8);
      StringBuilder stringBuilder3 = stringBuilder2.append(true);
      char[] charArray0 = new char[1];
      charArray0[0] = 'w';
      StringBuffer stringBuffer0 = new StringBuffer(0);
      stringBuilder3.append(stringBuffer0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.createConstraintSpecBuilder((DBConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.462720458623147
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "<cxsR!P8]z/!N^ja_h";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "<cxsR!P8]z/!N^ja_h", false, stringArray0);
      boolean boolean0 = false;
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("..", false, dBPrimaryKeyConstraint0);
      DBTable dBTable0 = dBUniqueIndex0.getTable();
      DBSchema dBSchema0 = new DBSchema("<cxsR!P8]z/!N^ja_h");
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("org.apache.derby.impl.sql.execute.rts.RealVTIStatistics", dBSchema0);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("..", defaultDBTable1, (DBDataType) null);
      defaultDBTable1.addColumn(defaultDBColumn0);
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("Shutting down due to severe error.", true, defaultDBTable1, stringArray0, defaultDBTable0, stringArray0);
      defaultDBTable1.addIndex(dBUniqueIndex0);
      DBSchema dBSchema1 = new DBSchema("=:!Y,A!p", (DBCatalog) null);
      dBSchema1.getTable("inserttriggernewtransit`onrous");
      dBForeignKeyConstraint0.setTable((DBTable) null);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      SQLUtil.fkSpec(dBForeignKeyConstraint0, nameSpec0);
      NameSpec nameSpec1 = NameSpec.IF_REPRODUCIBLE;
      SQLUtil.constraintSpec(dBPrimaryKeyConstraint0, nameSpec0);
      SQLUtil.constraintName(dBPrimaryKeyConstraint0);
      SQLUtil.typeAndName(dBSchema0);
      SQLUtil.createConstraintSpecBuilder(dBForeignKeyConstraint0, nameSpec1);
      NameSpec nameSpec2 = NameSpec.ALWAYS;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("CONSTRAINT <cxsR!P8]z/!N^ja_h ");
      // Undeclared exception!
      try { 
        mockPrintWriter0.print((Object) dBTable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.PrintWriter", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.376271297105852
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      defaultDBTable0.countProviders();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "B,Q+yzWof[oo Iwh[";
      String string0 = "|bSWj_XA-#NoK";
      DefaultDBTable defaultDBTable1 = new DefaultDBTable();
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "B,Q+yzWof[oo Iwh[", false, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("TP.Id~jd>A-;W", true, dBPrimaryKeyConstraint0);
      dBUniqueIndex0.getTable();
      DBSchema dBSchema0 = new DBSchema("Cjkjlw5h`,s");
      DefaultDBTable defaultDBTable2 = new DefaultDBTable("org.databene.jdbacl.SQLUtil", dBSchema0);
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("=:!Y,A!p", false, defaultDBTable2, stringArray0, defaultDBTable2, stringArray0);
      defaultDBTable2.addIndex(dBUniqueIndex0);
      FKChangeRule fKChangeRule0 = FKChangeRule.SET_DEFAULT;
      dBForeignKeyConstraint0.setDeleteRule(fKChangeRule0);
      dBSchema0.getTable("|bSWj_XA-#NoK");
      dBForeignKeyConstraint0.setTable((DBTable) null);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      SQLUtil.fkSpec(dBForeignKeyConstraint0, nameSpec0);
      NameSpec nameSpec1 = NameSpec.IF_REPRODUCIBLE;
      SQLUtil.constraintSpec(dBForeignKeyConstraint0, nameSpec1);
      SQLUtil.constraintName(dBForeignKeyConstraint0);
      SQLUtil.typeAndName(dBSchema0);
      SQLUtil.constraintName(dBPrimaryKeyConstraint0);
      DBNotNullConstraint dBNotNullConstraint0 = null;
      try {
        dBNotNullConstraint0 = new DBNotNullConstraint(defaultDBTable1, "CONSTRAINT =:!Y,A!p ", true, "org.databene.jdbacl.SQLUtil");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Column 'org.databene.jdbacl.SQLUtil' not found in table 'null'
         //
         verifyException("org.databene.jdbacl.model.DefaultDBTable", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.377542262518355
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "B,Q+yzWof[oo Iwh[";
      DefaultDBTable defaultDBTable1 = new DefaultDBTable();
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "B,Q+yzWof[oo Iwh[", false, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("TP.Id~jd>A-;W", true, dBPrimaryKeyConstraint0);
      dBUniqueIndex0.getTable();
      DBSchema dBSchema0 = new DBSchema("Cjkjlw5h`,s");
      DefaultDBTable defaultDBTable2 = new DefaultDBTable("org.databene.jdbacl.SQLUtil", dBSchema0);
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("=:!Y,A!p", true, defaultDBTable2, stringArray0, defaultDBTable2, stringArray0);
      defaultDBTable2.addIndex(dBUniqueIndex0);
      DBSchema dBSchema1 = new DBSchema("|bSWj_XA-#NoK", (DBCatalog) null);
      dBSchema1.getTable("|bSWj_XA-#NoK");
      dBForeignKeyConstraint0.setTable((DBTable) null);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      String string0 = SQLUtil.fkSpec(dBForeignKeyConstraint0, nameSpec0);
      assertEquals("CONSTRAINT =:!Y,A!p FOREIGN KEY (B,Q+yzWof[oo Iwh[, ) REFERENCES org.databene.jdbacl.SQLUtil(B,Q+yzWof[oo Iwh[, )", string0);
      
      NameSpec nameSpec1 = NameSpec.IF_REPRODUCIBLE;
      String string1 = SQLUtil.constraintSpec(dBForeignKeyConstraint0, nameSpec1);
      assertEquals("CONSTRAINT =:!Y,A!p FOREIGN KEY (B,Q+yzWof[oo Iwh[, ) REFERENCES org.databene.jdbacl.SQLUtil(B,Q+yzWof[oo Iwh[, )", string1);
      
      String string2 = SQLUtil.constraintName(dBForeignKeyConstraint0);
      assertEquals("CONSTRAINT =:!Y,A!p ", string2);
      
      String string3 = SQLUtil.typeAndName(dBSchema0);
      assertEquals("schema Cjkjlw5h`,s", string3);
      assertNotNull(string3);
      
      StringBuilder stringBuilder0 = SQLUtil.createConstraintSpecBuilder(dBForeignKeyConstraint0, nameSpec1);
      assertEquals("CONSTRAINT =:!Y,A!p ", stringBuilder0.toString());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.138526235860879
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "B,Q+yzWof[oo Iwh[";
      stringArray0[1] = "B,Q+yzWof[oo Iwh[";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "B,Q+yzWof[oo Iwh[", true, stringArray0);
      defaultDBTable0.getReferrers();
      dBUniqueConstraint0.setOwner(defaultDBTable0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      SQLUtil.ukSpec(dBUniqueConstraint0, nameSpec0);
      SQLUtil.constraintName(dBUniqueConstraint0);
      boolean boolean0 = false;
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "select", false, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("UNIQUE (B,Q+yzWof[oo Iwh[, B,Q+yzWof[oo Iwh[)", false, dBPrimaryKeyConstraint0);
      DBUniqueIndex dBUniqueIndex1 = new DBUniqueIndex("B,Q+yzWof[oo Iwh[", true, dBUniqueConstraint0);
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("B,Q+yzWof[oo Iwh[");
      DBSchema dBSchema0 = new DBSchema("select");
      String string0 = "Q_>,3Cab9*m";
      // Undeclared exception!
      try { 
        defaultDBTable0.getCatalog();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.model.DefaultDBTable", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      TableContainer tableContainer0 = new TableContainer("^>rx|L4A',PAy_[jz!", (CompositeDBObject<? extends DBObject>) null);
      tableContainer0.getSchema();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("/.)", (DBSchema) null);
      String[] stringArray0 = new String[0];
      defaultDBTable0.getUniqueConstraint(stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.ukSpec((DBUniqueConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      String[] stringArray0 = new String[22];
      stringArray0[0] = "?\"$%3YS";
      stringArray0[1] = "fn";
      stringArray0[2] = "fn";
      stringArray0[3] = "fn";
      stringArray0[4] = "fn";
      SQLUtil.renderColumnListWithTableName("fn", stringArray0);
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.394993443200781
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      String string0 = null;
      String[] stringArray0 = new String[2];
      stringArray0[0] = "MD5";
      stringArray0[1] = null;
      SQLUtil.leftJoin((String) null, stringArray0, "MD5", "p:rvH8", stringArray0);
      SQLUtil.innerJoin("MD5", stringArray0, stringArray0[1], "(~(o:(Bd#He;4r", stringArray0);
      DBColumn[] dBColumnArray0 = new DBColumn[0];
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames(dBColumnArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.407114655321993
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[0] = "MD5";
      stringArray0[1] = null;
      SQLUtil.leftJoin((String) null, stringArray0, "MD5", "p:rvH8", stringArray0);
      SQLUtil.innerJoin("MD5", stringArray0, stringArray0[1], "(~(o:(Bd#He;4r", stringArray0);
      SQLUtil.innerJoin("c013800d-00fb-2649-07ec-000000134f30", stringArray0, (String) null, "null as (~(o:(Bd#He;4r on MD5.MD5 = (~(o:(Bd#He;4r.MD5 and MD5.null = (~(o:(Bd#He;4r.null", stringArray0);
      ConstraintDescriptorList constraintDescriptorList0 = new ConstraintDescriptorList();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) constraintDescriptorList0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.4626868458926052
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      String[] stringArray0 = new String[19];
      String string0 = "'";
      stringArray0[0] = "'";
      stringArray0[1] = "BLOB";
      stringArray0[2] = "";
      stringArray0[3] = "alter session";
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      SQLUtil.removeComments("");
      ErrorMessages errorMessages0 = new ErrorMessages();
      // Undeclared exception!
      try { 
        errorMessages0.getNCharacterStream(436);
        fail("Expecting exception: AbstractMethodError");
      
      } catch(AbstractMethodError e) {
         //
         // Method org/apache/derby/diag/ErrorMessages.getNCharacterStream(I)Ljava/io/Reader; is abstract
         //
         verifyException("org.apache.derby.diag.ErrorMessages", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.2478158729152846
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      String[] stringArray0 = new String[9];
      String[] stringArray1 = new String[8];
      stringArray1[0] = "callh),9k";
      stringArray1[1] = "?bu;0u?h:x";
      stringArray1[2] = "?bu;0u?h:x";
      stringArray1[3] = "?bu;0u?h:x";
      stringArray1[4] = "?bu;0u?h:x";
      stringArray1[5] = "?bu;0u?h:x";
      stringArray1[6] = "?bu;0u?h:x";
      stringArray1[7] = "?bu;0u?h:x";
      String string0 = SQLUtil.innerJoin("?bu;0u?h:x", stringArray1, " WHERE ", "?bu;0u?h:x", stringArray1);
      assertEquals(" WHERE  as ?bu;0u?h:x on ?bu;0u?h:x.callh),9k = ?bu;0u?h:x.callh),9k and ?bu;0u?h:x.?bu;0u?h:x = ?bu;0u?h:x.?bu;0u?h:x and ?bu;0u?h:x.?bu;0u?h:x = ?bu;0u?h:x.?bu;0u?h:x and ?bu;0u?h:x.?bu;0u?h:x = ?bu;0u?h:x.?bu;0u?h:x and ?bu;0u?h:x.?bu;0u?h:x = ?bu;0u?h:x.?bu;0u?h:x and ?bu;0u?h:x.?bu;0u?h:x = ?bu;0u?h:x.?bu;0u?h:x and ?bu;0u?h:x.?bu;0u?h:x = ?bu;0u?h:x.?bu;0u?h:x and ?bu;0u?h:x.?bu;0u?h:x = ?bu;0u?h:x.?bu;0u?h:x", string0);
      
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) " WHERE  as ?bu;0u?h:x on ?bu;0u?h:x.callh),9k = ?bu;0u?h:x.callh),9k and ?bu;0u?h:x.?bu;0u?h:x = ?bu;0u?h:x.?bu;0u?h:x and ?bu;0u?h:x.?bu;0u?h:x = ?bu;0u?h:x.?bu;0u?h:x and ?bu;0u?h:x.?bu;0u?h:x = ?bu;0u?h:x.?bu;0u?h:x and ?bu;0u?h:x.?bu;0u?h:x = ?bu;0u?h:x.?bu;0u?h:x and ?bu;0u?h:x.?bu;0u?h:x = ?bu;0u?h:x.?bu;0u?h:x and ?bu;0u?h:x.?bu;0u?h:x = ?bu;0u?h:x.?bu;0u?h:x and ?bu;0u?h:x.?bu;0u?h:x = ?bu;0u?h:x.?bu;0u?h:x");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("\u0001/");
      DBDataType dBDataType0 = DBDataType.getInstance(8, "callh),9k");
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "call", false, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("s{Ab).Sf!f", false, dBPrimaryKeyConstraint0);
      DBTable dBTable0 = dBUniqueIndex0.getTable();
      DBSchema dBSchema0 = new DBSchema("callh),9k");
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      Integer integer1 = RawTransaction.LOCK_ESCALATE;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("callh),9k", dBTable0, dBDataType0, integer1, integer0);
      SQLUtil.renderColumn(defaultDBColumn0);
      String string1 = SQLUtil.renderColumn(defaultDBColumn0);
      assertEquals("callh),9k CALLH),9K(3,2) NULL", string1);
      
      String[] stringArray2 = new String[6];
      stringArray2[0] = "callh),9k CALLH),9K(3,2) NULL";
      stringArray2[1] = "callh),9k";
      stringArray2[2] = "call";
      stringArray2[3] = "callh),9k CALLH),9K(3,2) NULL";
      stringArray2[4] = "\u0001/";
      stringArray2[5] = "\u0001/";
      String string2 = SQLUtil.renderQuery(defaultDBTable0, stringArray2, stringArray0);
      assertEquals("SELECT * FROM \u0001/ WHERE callh),9k CALLH),9K(3,2) NULL = null AND callh),9k = null AND call = null AND callh),9k CALLH),9K(3,2) NULL = null AND \u0001/ = null AND \u0001/ = null", string2);
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("execute");
      // Undeclared exception!
      try { 
        SQLUtil.renderQuery(defaultDBTable0, (String[]) null, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      String string0 = null;
      String string1 = "7SSX";
      // Undeclared exception!
      try { 
        SQLUtil.substituteMarkers((String) null, "7SSX", "7SSX");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=0.9619408850766493
  */
  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      String[] stringArray0 = new String[4];
      String string0 = "'";
      stringArray0[0] = "'";
      stringArray0[1] = "BLOB";
      String string1 = "";
      stringArray0[2] = "";
      String string2 = "alter session";
      stringArray0[3] = "alter session";
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      SQLUtil.renderValue("'");
      ErrorMessages errorMessages0 = new ErrorMessages();
      int int0 = 436;
      // Undeclared exception!
      try { 
        errorMessages0.getNCharacterStream(436);
        fail("Expecting exception: AbstractMethodError");
      
      } catch(AbstractMethodError e) {
         //
         // Method org/apache/derby/diag/ErrorMessages.getNCharacterStream(I)Ljava/io/Reader; is abstract
         //
         verifyException("org.apache.derby.diag.ErrorMessages", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "h),9K");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("h),9K");
      DBDataType.getInstance(782, "y#");
      DBDataType dBDataType0 = DBDataType.getInstance(0, "exec");
      DBSchema dBSchema0 = new DBSchema("drop table");
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("alter materialized view", dBSchema0);
      Integer integer1 = new Integer(0);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("29HWtb/)", defaultDBTable0, dBDataType0, (Integer) null, (Integer) null);
      String string0 = SQLUtil.renderColumn(defaultDBColumn0);
      assertEquals("29HWtb/) EXEC NULL", string0);
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.676428115487582
  */
  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "?\"$%3YS";
      stringArray0[1] = "fn";
      stringArray0[2] = "fn";
      stringArray0[3] = "fn";
      stringArray0[4] = "fn";
      String string0 = SQLUtil.renderColumnListWithTableName("fn", stringArray0);
      assertEquals("fn.?\"$%3YS, fn.fn, fn.fn, fn.fn, fn.fn", string0);
      
      SQLUtil.substituteMarkers("", "fn", "fn");
      String string1 = SQLUtil.renderColumnNames(stringArray0);
      assertEquals("(?\"$%3YS, fn, fn, fn, fn)", string1);
      
      String string2 = SQLUtil.substituteMarkers("?\"$%3YS", "COLUMN_PRIVILEGES", (Object) null);
      assertEquals("?\"$%3YS", string2);
  }

  /**
  //Test case number: 86
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema(" DEFAULT ");
      DBDataType.getInstance((-209617493), " DEFAULT ");
      DBTrigger dBTrigger0 = new DBTrigger("5", dBSchema0);
      dBSchema0.addTrigger(dBTrigger0);
      TableContainer tableContainer0 = new TableContainer((String) null, dBSchema0);
      tableContainer0.getTable(" DEFAULT ");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("drop materialized view", (DBTable) null, (DBDataType) null);
      DBColumn[] dBColumnArray0 = new DBColumn[7];
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[1] = (DBColumn) defaultDBColumn0;
      defaultDBColumn0.setDoc("truncatetriggernewtransit`onrous");
      dBColumnArray0[2] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[3] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[4] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[5] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[6] = (DBColumn) defaultDBColumn0;
      String[] stringArray0 = new String[7];
      stringArray0[0] = "drop materialized view";
      stringArray0[1] = " DEFAULT ";
      stringArray0[2] = "5";
      stringArray0[3] = "truncatetriggernewtransit`onrous";
      stringArray0[4] = "truncatetriggernewtransit`onrous";
      stringArray0[5] = "5";
      stringArray0[6] = null;
      String string0 = SQLUtil.join((String) null, "truncatetriggernewtransit`onrous", stringArray0, "call", "", stringArray0);
      assertEquals("call as  on truncatetriggernewtransit`onrous.drop materialized view = .drop materialized view and truncatetriggernewtransit`onrous. DEFAULT  = . DEFAULT  and truncatetriggernewtransit`onrous.5 = .5 and truncatetriggernewtransit`onrous.truncatetriggernewtransit`onrous = .truncatetriggernewtransit`onrous and truncatetriggernewtransit`onrous.truncatetriggernewtransit`onrous = .truncatetriggernewtransit`onrous and truncatetriggernewtransit`onrous.5 = .5 and truncatetriggernewtransit`onrous.null = .null", string0);
  }
}
