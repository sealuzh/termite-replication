/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 17:10:17 GMT 2019
 */

package wheel.json;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.StringWriter;
import java.io.Writer;
import java.util.Collection;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.Map;
import java.util.function.BiConsumer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import wheel.json.JSONArray;
import wheel.json.JSONObject;
import wheel.json.JSONTokener;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JSONObject_ESTest extends JSONObject_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.3613907891448567
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = new JSONObject(jSONObject0);
      JSONObject.getNames(jSONObject1);
      JSONObject jSONObject2 = new JSONObject((Map) null);
      jSONObject2.put("Ylh2vaX", 1355L);
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.write("g?9Yc{");
      Float float0 = new Float(5172.37664);
      short short0 = (short)1436;
      Short short1 = new Short((short)1436);
      try { 
        jSONObject2.append((String) null, short1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.870815814214963
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Object object0 = new Object();
      String[] stringArray0 = new String[8];
      JSONObject jSONObject0 = new JSONObject((Map) null);
      JSONObject jSONObject1 = new JSONObject("Amle|p?IN<2.s!a", stringArray0);
      jSONObject1.names();
      jSONObject1.optLong("Amle|p?IN<2.s!a");
      jSONObject1.isNull("Amle|p?IN<2.s!a");
      JSONObject jSONObject2 = new JSONObject();
      jSONObject2.optInt("hR@,~Ix\"1Wyj(T");
      jSONObject2.put("(+#nJ6V~|iv*DHu", true);
      JSONObject.getNames(jSONObject2);
      String string0 = "o\\g <&";
      try { 
        jSONObject0.getLong("og <&");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"og <&\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.845325034315053
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      HashMap<Boolean, String> hashMap0 = new HashMap<Boolean, String>();
      Float float0 = new Float((-4719.4F));
      Float float1 = new Float((double) (-4719.4F));
      JSONObject jSONObject1 = new JSONObject(float1);
      Float.min(2126.267F, 331.902F);
      HashMap<Byte, JSONObject> hashMap1 = new HashMap<Byte, JSONObject>();
      jSONArray0.optJSONObject(69);
      jSONObject1.isNull("' and instead saw '");
      JSONTokener jSONTokener0 = new JSONTokener((String) null);
      JSONObject jSONObject2 = null;
      try {
        jSONObject2 = new JSONObject(jSONTokener0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.3480551731466255
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Integer.getInteger("iP#-K6w^f");
      JSONObject.valueToString((Object) null, (-3950), (-3950));
      Object object0 = JSONObject.NULL;
      String[] stringArray0 = new String[5];
      String string0 = "]]HgJM2J";
      stringArray0[0] = "]]HgJM2J";
      stringArray0[1] = "null";
      stringArray0[2] = "null";
      stringArray0[3] = "iP#-K6w^f";
      stringArray0[4] = "iP#-K6w^f";
      JSONObject jSONObject0 = new JSONObject(object0, stringArray0);
      jSONObject0.names();
      Object object1 = new Object();
      jSONObject0.put("null", (Object) "iP#-K6w^f");
      jSONObject0.put("iP#-K6w^f", 0.0);
      Float float0 = new Float((-1642.8646F));
      HashMap<Byte, JSONObject> hashMap0 = new HashMap<Byte, JSONObject>();
      JSONObject.quote("]]HgJM2J");
      JSONObject.doubleToString((-1150.3741045));
      try { 
        JSONObject.numberToString((Number) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null pointer
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.3854674398285334
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String string0 = "Expected a ':' after a key";
      JSONObject jSONObject1 = jSONObject0.put("Expected a ':' after a key", (-1454));
      jSONObject1.get("Expected a ':' after a key");
      JSONObject.getNames(jSONObject0);
      Float float0 = new Float(1.0);
      JSONObject jSONObject2 = jSONObject1.put("SQ'2(2_D}G\\9DgIfZ", (Object) float0);
      jSONObject2.optDouble("Expected a ':' after a key");
      Float.min(45, (-1454));
      HashMap<Byte, JSONObject> hashMap0 = new HashMap<Byte, JSONObject>();
      JSONObject.quote("Expected a ':' after a key");
      try { 
        jSONObject0.getJSONArray("\"Expected a ':' after a key\"");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\\\"Expected a ':' after a key\\\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.289976626978653
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      JSONObject jSONObject1 = jSONObject0.put("`", (Collection) linkedList0);
      Integer integer0 = new Integer(2241);
      linkedList0.add(integer0);
      jSONObject0.optInt("getintern", 2241);
      JSONArray jSONArray0 = new JSONArray();
      jSONArray0.optJSONObject(1523);
      jSONObject1.isNull("`");
      JSONTokener jSONTokener0 = new JSONTokener("getintern");
      JSONObject jSONObject2 = null;
      try {
        jSONObject2 = new JSONObject(jSONTokener0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must begin with '{' at character 1 of getintern
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.613129842728147
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      HashMap<Byte, Integer> hashMap0 = new HashMap<Byte, Integer>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "=u3^fN7";
      Byte byte0 = new Byte((byte)37);
      Integer integer0 = new Integer((byte)37);
      hashMap0.put(byte0, integer0);
      JSONObject jSONObject1 = new JSONObject("=u3^fN7", stringArray0);
      String string0 = "wheel.json.JSONObject$Null";
      try { 
        jSONObject0.getString("=u3^fN7");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"=u3^fN7\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.9296217656001493
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      HashMap<Byte, Integer> hashMap0 = new HashMap<Byte, Integer>();
      HashMap<Boolean, String> hashMap1 = new HashMap<Boolean, String>();
      JSONArray jSONArray0 = new JSONArray();
      JSONArray jSONArray1 = jSONArray0.put(64, (Map) hashMap0);
      jSONArray1.optLong((-298));
      JSONObject.getNames((Object) null);
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.95571359982777
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String string0 = "w/";
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      jSONObject0.put("w/", (Collection) linkedList0);
      String string1 = "";
      Integer integer0 = new Integer(2241);
      String string2 = "A JSONArray text must start with '['";
      LinkedList<Float> linkedList1 = new LinkedList<Float>();
      JSONObject jSONObject1 = null;
      try {
        jSONObject1 = new JSONObject((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.428641534588649
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int int0 = (-692);
      JSONObject.quote("SQ'2(2_D}G\\9DgIfZ");
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.put("] not found.", (double) (-692));
      float float0 = new Integer((-692));
      HashMap<Byte, JSONObject> hashMap0 = new HashMap<Byte, JSONObject>();
      JSONObject.quote("\"SQ'2(2_D}G\\\\9DgIfZ\"");
      Object object0 = new Object();
      JSONTokener jSONTokener0 = new JSONTokener("SQ'2(2_D}G\\9DgIfZ");
      JSONArray jSONArray0 = null;
      try {
        jSONArray0 = new JSONArray(jSONTokener0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONArray text must start with '[' at character 1 of SQ'2(2_D}G\\9DgIfZ
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.48086324721994
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      String[] stringArray0 = new String[0];
      JSONObject jSONObject0 = new JSONObject(object0, stringArray0);
      jSONObject0.optInt("ao4&8Z~ku<*M&O$", 0);
      Object object1 = jSONObject0.opt("su");
      assertNull(object1);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.8165094028227533
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      JSONObject jSONObject0 = new JSONObject(object0);
      String string0 = "min";
      JSONObject.quote("min");
      JSONObject jSONObject1 = new JSONObject();
      try { 
        jSONObject1.put((String) null, (double) 45);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.1190075166192517
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      HashMap<Boolean, String> hashMap0 = new HashMap<Boolean, String>();
      jSONArray0.put(26, (Map) hashMap0);
      jSONArray0.optLong(26);
      JSONObject.getNames((Object) jSONArray0);
      Float float0 = new Float((-4719.4F));
      JSONObject jSONObject0 = new JSONObject(float0);
      JSONArray jSONArray1 = new JSONArray((Collection) linkedList0);
      HashMap<Byte, JSONObject> hashMap1 = new HashMap<Byte, JSONObject>();
      String string0 = "{)6H'tW";
      JSONObject jSONObject1 = null;
      try {
        jSONObject1 = new JSONObject("{)6H'tW");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Expected a ':' after a key at character 7 of {)6H'tW
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.9753134174077998
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      JSONObject jSONObject1 = new JSONObject(jSONObject0);
      jSONObject0.optBoolean("le");
      jSONObject0.optInt("$=p^3/3>$SHB?3SN_");
      jSONObject1.optString("RvNYL|=h*D", "le");
      HashMap<Byte, Boolean> hashMap0 = new HashMap<Byte, Boolean>();
      JSONObject jSONObject2 = new JSONObject((Map) hashMap0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "le";
      stringArray0[1] = "is";
      JSONObject jSONObject3 = new JSONObject((Object) jSONObject2, stringArray0);
      jSONObject2.names();
      jSONObject1.optLong("");
      jSONObject2.isNull("RvNYL|=h*D");
      jSONObject1.optInt("hR@,~Ix\"1Wyj(T");
      JSONObject.getNames(jSONObject0);
      jSONObject1.toJSONArray((JSONArray) null);
      try { 
        jSONObject2.getLong("mUQd");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"mUQd\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.9606439194374157
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = jSONObject0.put("Expected a ':' after a key", 2046);
      jSONObject1.get("Expected a ':' after a key");
      JSONObject.getNames(jSONObject0);
      Float float0 = new Float(1.0);
      JSONObject jSONObject2 = jSONObject1.put("SQ'2(2_D}G\\9DgIfZ", (Object) float0);
      Short short0 = new Short((short)13);
      jSONObject1.put("isequals", (Object) short0);
      JSONObject jSONObject3 = jSONObject1.put("SQ'2(2_D}G\\9DgIfZ", (long) 45);
      jSONObject0.names();
      jSONObject1.keys();
      jSONObject2.optDouble("[]", 0.0);
      jSONObject3.getInt("isequals");
      jSONObject0.opt("istoHexString");
      JSONObject jSONObject4 = null;
      try {
        jSONObject4 = new JSONObject("istoHexString");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must begin with '{' at character 1 of istoHexString
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      try { 
        jSONObject0.put((String) null, (-271));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.471351476599774
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      JSONObject jSONObject0 = new JSONObject(object0);
      jSONObject0.optBoolean("Substring bounds error", false);
      String string0 = "Bad value from toJSONString: ";
      jSONObject0.optLong("Bad value from toJSONString: ");
      JSONArray jSONArray0 = new JSONArray();
      Object object1 = JSONObject.NULL;
      try { 
        jSONObject0.accumulate((String) null, object1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.88603674425947
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      Integer integer0 = new Integer(2245);
      JSONObject jSONObject1 = jSONObject0.put("", (-1.0));
      jSONObject1.toString(2245, 2245);
      jSONObject0.optLong("");
      jSONObject0.getInt("");
      Double double0 = new Double((-1656.2078800589));
      JSONObject jSONObject2 = jSONObject0.accumulate("wheel.jon.JSONToken", double0);
      Byte.valueOf((byte)38);
      jSONObject1.length();
      jSONObject2.put("w/", 0.0);
      String[] stringArray0 = new String[5];
      Double.isFinite(2);
      Double.max((-1656.2078800589), 0.0);
      stringArray0[0] = "wheel.jon.JSONToken";
      stringArray0[1] = "w/";
      stringArray0[2] = "gettoUpperCase";
      stringArray0[3] = "";
      stringArray0[4] = "gethashCode";
      try { 
        jSONObject0.getBoolean("wheel.jon.JSONToken");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"wheel.jon.JSONToken\"] is not a Boolean.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.903377121965236
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      HashMap<Boolean, String> hashMap0 = new HashMap<Boolean, String>();
      jSONArray0.put(26, (Map) hashMap0);
      jSONArray0.optLong(26);
      JSONObject.getNames((Object) jSONArray0);
      Float float0 = new Float((-4719.4F));
      JSONObject jSONObject0 = new JSONObject(float0);
      JSONArray jSONArray1 = new JSONArray((Collection) linkedList0);
      String string0 = "isopt";
      HashMap<Byte, JSONObject> hashMap1 = new HashMap<Byte, JSONObject>();
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        jSONObject0.write((Writer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.009177166361808
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Object object0 = new Object();
      JSONObject jSONObject0 = new JSONObject(object0);
      jSONObject0.optBoolean("Substring bounds error", false);
      jSONObject0.optLong("Bad value from toJSONString: ");
      Integer integer0 = new Integer(2241);
      JSONObject jSONObject1 = jSONObject0.put("Substring bounds error", (Object) null);
      jSONObject1.put("slMm=lVTC)ROz|FnW", (double) 0L);
      jSONObject1.toString(2241);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      linkedList0.add(integer0);
      jSONObject0.optDouble("eh", (double) (-1140));
      JSONObject.getNames(jSONObject0);
      try { 
        jSONObject1.get("getintBitsToFloat");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"getintBitsToFloat\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Object object0 = new Object();
      String[] stringArray0 = new String[8];
      JSONObject jSONObject0 = new JSONObject(object0, stringArray0);
      Object object1 = jSONObject0.opt("su");
      assertNull(object1);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.4986122886681095
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject("|");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must begin with '{' at character 1 of |
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.8157409096117134
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      JSONObject jSONObject1 = jSONObject0.put("[|wR", (Collection) linkedList0);
      Integer integer0 = new Integer(2241);
      jSONObject0.toString();
      String string0 = "!=$mDr5JQ&";
      JSONObject jSONObject2 = jSONObject1.put("!=$mDr5JQ&", (-1313.14880097));
      jSONObject2.toString((-1140));
      LinkedList<Integer> linkedList1 = new LinkedList<Integer>();
      Integer integer1 = new Integer((-1140));
      linkedList1.add(integer1);
      HashMap<Boolean, JSONObject> hashMap0 = new HashMap<Boolean, JSONObject>();
      Boolean boolean0 = new Boolean("L`{}/+IwiM=jeZY");
      hashMap0.put(boolean0, jSONObject1);
      JSONObject jSONObject3 = new JSONObject((Map) hashMap0);
      // Undeclared exception!
      try { 
        JSONObject.getNames(jSONObject3);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Boolean cannot be cast to java.lang.String
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.7941198863727617
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      JSONObject jSONObject1 = jSONObject0.put("w/", (Collection) linkedList0);
      Integer integer0 = new Integer(2241);
      JSONObject jSONObject2 = jSONObject1.put("", (Object) integer0);
      jSONObject0.put("", (-1.0));
      Object object0 = JSONObject.NULL;
      JSONObject.valueToString(object0);
      jSONObject0.optLong("");
      jSONObject0.getInt("");
      Double double0 = new Double((-1656.2078800589));
      JSONObject jSONObject3 = jSONObject0.accumulate("wheel.json.JSONTokener", double0);
      Byte byte0 = Byte.valueOf((byte)12);
      jSONObject3.accumulate("(o", byte0);
      jSONObject1.names();
      JSONObject.quote((String) null);
      try { 
        jSONObject2.getJSONArray(".");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\".\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.941587900689381
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      JSONObject jSONObject1 = jSONObject0.put("SQ'2(2_D}G\\9DgIfZ", (Collection) linkedList0);
      Integer integer0 = new Integer(2241);
      jSONObject0.toString();
      jSONObject0.put("SQ'2(2_D}G\\9DgIfZ", (Object) linkedList0);
      JSONObject jSONObject2 = jSONObject1.put("!=$mDr5JQ&", (-1313.14880097));
      jSONObject2.toString((-1140));
      LinkedList<Integer> linkedList1 = new LinkedList<Integer>();
      jSONObject2.toString();
      Integer integer1 = new Integer((-1140));
      linkedList1.add(integer1);
      HashMap<Boolean, JSONObject> hashMap0 = new HashMap<Boolean, JSONObject>();
      JSONObject jSONObject3 = new JSONObject((Map) hashMap0);
      jSONObject3.optDouble("{\n\"java.lang.String@0000000005\": java.lang.Double@0000000006,\n\"java.lang.String@0000000003\": []\n}", 5922.2718);
      jSONObject3.remove("isdivideUnsigned");
      JSONObject.getNames(jSONObject3);
      try { 
        jSONObject3.get("!=$mDr5JQ&");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"!=$mDr5JQ&\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.3789127546677453
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      JSONObject jSONObject1 = jSONObject0.put("`", (Collection) linkedList0);
      JSONObject jSONObject2 = jSONObject1.put("`", (Object) jSONObject0);
      String string0 = "isrotateRight";
      double double0 = 43.401168847;
      jSONObject1.put("isrotateRight", 43.401168847);
      // Undeclared exception!
      jSONObject2.toString(23);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.1135827560318607
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      HashMap<Byte, Integer> hashMap0 = new HashMap<Byte, Integer>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      JSONObject jSONObject1 = jSONObject0.put("=u3^fN7", (-1754));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "=u3^fN7";
      JSONObject jSONObject2 = new JSONObject("=u3^fN7", stringArray0);
      jSONObject1.names();
      jSONObject1.optLong("=u3^fN7");
      jSONObject1.isNull("=u3^fN7");
      JSONObject.valueToString(jSONObject2, (-1754), (-1754));
      jSONObject2.optInt("wheel.json.JSONObject$Null");
      jSONObject0.isNull("isaddFirst");
      try { 
        jSONObject1.getJSONObject("isaddFirst");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"isaddFirst\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.7786587869237507
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      HashMap<Boolean, String> hashMap0 = new HashMap<Boolean, String>();
      jSONArray0.put(26, (Map) hashMap0);
      jSONArray0.optLong(26);
      JSONObject.getNames((Object) jSONArray0);
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      String string0 = "\\u";
      JSONObject jSONObject1 = jSONObject0.put(string0, 9);
      JSONObject.getNames(jSONObject0);
      Float float0 = new Float((-2485.1258));
      Object object0 = new Object();
      Long long0 = new Long(0L);
      jSONObject1.put("j!L3V#/$f", (Object) long0);
      Float.max(4218.668F, 0.0F);
      jSONObject0.optDouble(string0);
      Float.min(2477.0F, 1212.3F);
      HashMap<Byte, JSONObject> hashMap1 = new HashMap<Byte, JSONObject>();
      JSONObject.valueToString(linkedList0);
      String string1 = JSONObject.doubleToString(4218.668F);
      String string2 = JSONObject.numberToString(long0);
      assertFalse(string2.equals((Object)string1));
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.8509519705330097
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String string0 = "SQ'2(2_D}G\\\\9DgIfZ";
      String[] stringArray0 = new String[9];
      String string1 = "-3IdWSNbQM>b=6M]TR";
      stringArray0[0] = "-3IdWSNbQM>b=6M]TR";
      JSONObject jSONObject1 = new JSONObject((Object) "-3IdWSNbQM>b=6M]TR");
      JSONArray jSONArray0 = jSONObject1.names();
      jSONObject1.toString();
      jSONObject0.optLong("n<|x:");
      String string2 = null;
      jSONObject0.isNull("-3IdWSNbQM>b=6M]TR");
      HashMap<Boolean, Double> hashMap0 = new HashMap<Boolean, Double>();
      JSONObject jSONObject2 = new JSONObject((Map) hashMap0);
      jSONObject2.optBoolean("SQ'2(2_D}G\\9DgIfZ", true);
      String string3 = ",\n";
      try { 
        jSONArray0.getJSONObject((-49));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONArray[-49] not found.
         //
         verifyException("wheel.json.JSONArray", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.738552410291388
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = jSONObject0.put("Expected a ':' after a key", 2046);
      jSONObject1.get("Expected a ':' after a key");
      String[] stringArray0 = JSONObject.getNames(jSONObject0);
      Float float0 = new Float(1.0);
      JSONObject jSONObject2 = jSONObject1.put("SQ'2(2_D}G\\9DgIfZ", (Object) float0);
      jSONObject2.optDouble("Expected a ':' after a key");
      jSONObject1.optLong("&FpN37");
      JSONObject jSONObject3 = new JSONObject("gettoString", stringArray0);
      try { 
        jSONObject3.getJSONObject("Expected a ':' after a key");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"Expected a ':' after a key\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.809661348854758
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      JSONObject.testValidity((Object) null);
      HashMap<Double, Short> hashMap0 = new HashMap<Double, Short>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      int int0 = 39;
      JSONObject.valueToString((Object) null, 39, (-2009));
      jSONObject0.optLong("null", (long) (-2009));
      String string0 = "%qo9sewSQ7F";
      try { 
        jSONObject0.getDouble("%qo9sewSQ7F");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"%qo9sewSQ7F\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.9461749554644676
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      HashMap<JSONObject, Double> hashMap0 = new HashMap<JSONObject, Double>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      String string0 = "\"m|h[$ _vb?R<M>BaA}";
      Object object0 = new Object();
      JSONObject jSONObject1 = jSONObject0.accumulate("\"m|h[$ _vb?R<M>BaA}", "\"m|h[$ _vb?R<M>BaA}");
      try { 
        jSONObject1.getLong("\"m|h[$ _vb?R<M>BaA}");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\\\"m|h[$ _vb?R<M>BaA}\"] is not a number.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.9394312138366043
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      JSONObject jSONObject1 = jSONObject0.put("w/", (Collection) linkedList0);
      Integer integer0 = new Integer(2245);
      jSONObject1.put("", (Object) integer0);
      JSONObject jSONObject2 = jSONObject0.put("", (-1.0));
      jSONObject2.toString(2245, 25);
      jSONObject0.optLong("");
      jSONObject0.getInt("");
      Double double0 = new Double((-1656.2078800589));
      jSONObject0.accumulate("wheel.json.JSONTokener", double0);
      Byte.valueOf((byte)38);
      Float float0 = new Float((float) 25);
      JSONObject jSONObject3 = new JSONObject((Object) "wheel.json.JSONTokener");
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      HashMap<Byte, JSONObject> hashMap0 = new HashMap<Byte, JSONObject>();
      String string0 = "YQ";
      JSONObject jSONObject4 = null;
      try {
        jSONObject4 = new JSONObject("YQ");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must begin with '{' at character 1 of YQ
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.052517241445756
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      JSONObject jSONObject1 = jSONObject0.put("w/", (Collection) linkedList0);
      Integer integer0 = new Integer(2241);
      jSONObject1.put("", (Object) integer0);
      jSONObject0.put("", (-1.0));
      Object object0 = JSONObject.NULL;
      String string0 = JSONObject.valueToString(object0);
      assertEquals("null", string0);
      
      jSONObject0.optLong("");
      int int0 = jSONObject0.getInt("");
      assertEquals((-1), int0);
      
      String[] stringArray0 = new String[7];
      stringArray0[0] = "w/";
      stringArray0[1] = "null";
      stringArray0[2] = "w/";
      stringArray0[3] = "w/";
      stringArray0[4] = "true";
      stringArray0[5] = "";
      stringArray0[6] = "w/";
      JSONObject jSONObject2 = new JSONObject(jSONObject1, stringArray0);
      int int1 = jSONObject2.length();
      assertEquals(2, int1);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.2491709762531196
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      jSONObject0.put("`", (Collection) linkedList0);
      Integer integer0 = new Integer(2241);
      Integer.getInteger("get", (-3854));
      Integer.toUnsignedString((-2173));
      linkedList0.add(integer0);
      Integer integer1 = new Integer(2241);
      long long0 = jSONObject0.optLong("`");
      assertEquals(0L, long0);
      
      String string0 = JSONObject.valueToString((Object) null);
      assertEquals("null", string0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.8655626066955673
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Integer.getInteger("iP#-K6w^f");
      JSONObject.valueToString((Object) null, (-3950), (-3950));
      Object object0 = JSONObject.NULL;
      String[] stringArray0 = new String[5];
      stringArray0[0] = "]]HgJM2J";
      stringArray0[1] = "null";
      stringArray0[2] = "null";
      stringArray0[3] = "iP#-K6w^f";
      stringArray0[4] = "iP#-K6w^f";
      JSONObject jSONObject0 = new JSONObject(object0, stringArray0);
      jSONObject0.names();
      jSONObject0.optLong("]]HgJM2J");
      String string0 = null;
      jSONObject0.isNull((String) null);
      jSONObject0.optInt(",\n");
      Object object1 = new Object();
      JSONObject jSONObject1 = jSONObject0.append("null", (Object) null);
      try { 
        jSONObject1.getInt("null");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"null\"] is not a number.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.1021319371253777
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Integer.getInteger("iP#-K6w^f");
      JSONObject.valueToString((Object) null, (-3950), (-3950));
      Object object0 = JSONObject.NULL;
      String[] stringArray0 = new String[5];
      stringArray0[0] = "]]HgJM2J";
      stringArray0[1] = "null";
      stringArray0[2] = "null";
      stringArray0[3] = "iP#-K6w^f";
      stringArray0[4] = "iP#-K6w^f";
      JSONObject jSONObject0 = new JSONObject(object0, stringArray0);
      jSONObject0.names();
      jSONObject0.optLong("]]HgJM2J");
      jSONObject0.isNull((String) null);
      jSONObject0.optInt("wheel.json.JSONTokener");
      Object object1 = new Object();
      JSONObject jSONObject1 = jSONObject0.append("null", (Object) null);
      JSONObject jSONObject2 = jSONObject1.accumulate("no", (Object) null);
      jSONObject0.names();
      jSONObject1.optJSONArray("no");
      jSONObject0.put("{yCA9'DEx$n", (long) 0);
      Short short0 = new Short((short) (-1382));
      jSONObject2.accumulate("iP#-K6w^f", short0);
      assertEquals(3, jSONObject1.length());
      assertFalse(object0.equals((Object)object1));
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.2370788533537462
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      HashMap<Object, Double> hashMap0 = new HashMap<Object, Double>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      Double double0 = new Double(0.0);
      Double.isFinite(Double.NaN);
      hashMap0.put("&x", double0);
      BiConsumer<Object, Object> biConsumer0 = (BiConsumer<Object, Object>) mock(BiConsumer.class, new ViolatedAssumptionAnswer());
      hashMap0.forEach(biConsumer0);
      hashMap0.put(double0, (Double) null);
      hashMap0.put("&x", (Double) null);
      jSONObject0.optInt("&x", (-374));
      jSONObject0.put("&x", (Map) hashMap0);
      jSONObject0.names();
      String string0 = null;
      try { 
        jSONObject0.get((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.1673440554882104
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = jSONObject0.put("Expected a ':' after a key", 2046);
      Float float0 = new Float((double) 45);
      JSONObject jSONObject2 = jSONObject1.put("SQ'2(2_D}G\\9DgIfZ", (Object) float0);
      jSONObject2.optDouble("Expected a ':' after a key");
      Float.min(45, 2046);
      HashMap<Byte, JSONObject> hashMap0 = new HashMap<Byte, JSONObject>();
      jSONObject1.putOpt("GV^zTIrs3LJI", jSONObject2);
      try { 
        jSONObject0.getJSONArray("SQ'2(2_D}G\\9DgIfZ");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"SQ'2(2_D}G\\\\9DgIfZ\"] is not a JSONArray.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.8843884715468904
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      JSONObject jSONObject1 = jSONObject0.put("w/", (Collection) linkedList0);
      Integer integer0 = new Integer(2241);
      JSONObject jSONObject2 = jSONObject0.put("", (-1.0));
      jSONObject0.optLong("");
      int int0 = jSONObject0.getInt("");
      assertEquals((-1), int0);
      
      Integer integer1 = new Integer(2241);
      jSONObject2.put("", 120);
      jSONObject0.toString(2241);
      jSONObject1.put("05-}Y;d{", (-205.5124301754875));
      double double0 = jSONObject2.optDouble("", (double) 2241);
      assertEquals(120.0, double0, 0.01);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      HashMap<Byte, Integer> hashMap0 = new HashMap<Byte, Integer>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      jSONObject0.toString();
      int int0 = jSONObject0.length();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.0366829607448294
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      HashMap<Boolean, String> hashMap0 = new HashMap<Boolean, String>();
      JSONArray jSONArray1 = jSONArray0.put(26, (Map) hashMap0);
      jSONArray1.optLong(13);
      Integer integer0 = new Integer(2110);
      String[] stringArray0 = JSONObject.getNames((Object) integer0);
      Float float0 = new Float((-4719.4F));
      Float float1 = new Float((double) (-4719.4F));
      JSONObject jSONObject1 = new JSONObject(float1);
      jSONObject0.optInt((String) null);
      Object object0 = new Object();
      JSONObject jSONObject2 = new JSONObject(jSONObject0, stringArray0);
      JSONObject jSONObject3 = jSONObject1.append("$", jSONObject2);
      Integer integer1 = new Integer(26);
      jSONObject3.accumulate("1wo>5/NG1#pIeI", "$");
      jSONObject3.names();
      jSONObject3.optJSONArray("isparseFloat");
      assertEquals(5, jSONObject1.length());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Byte byte0 = new Byte((byte) (-52));
      JSONObject.testValidity(byte0);
      JSONArray jSONArray0 = null;
      try {
        jSONArray0 = new JSONArray("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONArray text must start with '[' at character 0 of 
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Integer.getInteger("iP#-K6w^f");
      String string0 = JSONObject.doubleToString((-1145.71));
      assertEquals("-1145.71", string0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.9018956404837546
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      HashMap<Boolean, String> hashMap0 = new HashMap<Boolean, String>();
      jSONArray0.put(26, (Map) hashMap0);
      jSONArray0.optLong(26);
      JSONObject.getNames((Object) jSONArray0);
      Float float0 = new Float((-4719.4F));
      JSONObject jSONObject0 = new JSONObject(float0);
      JSONArray jSONArray1 = new JSONArray((Collection) linkedList0);
      Float.max(0L, (-4719.4F));
      String string0 = "}Ubd(^6J}m#SWK f:";
      jSONObject0.has("}Ubd(^6J}m#SWK f:");
      StringWriter stringWriter0 = new StringWriter();
      // Undeclared exception!
      try { 
        stringWriter0.append((CharSequence) "}Ubd(^6J}m#SWK f:", (-1127), 66);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.5357754108181845
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      HashMap<Boolean, String> hashMap0 = new HashMap<Boolean, String>();
      jSONArray0.put(26, (Map) hashMap0);
      jSONArray0.optLong(26);
      JSONObject.getNames((Object) jSONArray0);
      Float float0 = new Float((-4719.4F));
      JSONObject jSONObject0 = new JSONObject(float0);
      JSONArray jSONArray1 = new JSONArray((Collection) linkedList0);
      HashMap<Byte, JSONObject> hashMap1 = new HashMap<Byte, JSONObject>();
      jSONObject0.toString((-895));
      try { 
        jSONObject0.get("{\n\"java.lang.String@0000000005\": java.lang.Boolean@0000000006,\n\"java.lang.String@0000000007\": java.lang.Boolean@0000000008,\n\"java.lang.String@0000000009\": \"java.lang.Class@0000000010\"\n}");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"{\\n\\\"java.lang.String@0000000005\\\": java.lang.Boolean@0000000006,\\n\\\"java.lang.String@0000000007\\\": java.lang.Boolean@0000000008,\\n\\\"java.lang.String@0000000009\\\": \\\"java.lang.Class@0000000010\\\"\\n}\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.4864654881162984
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.optLong("z.]h*pu", 0L);
      jSONObject0.remove("P'2%t*S2U~oD_\"I");
      try { 
        jSONObject0.get("P'2%t*S2U~oD_\"I");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"P'2%t*S2U~oD_\\\"I\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=3.1472161560446663
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = jSONObject0.put("\"{9a&IBcuAI", false);
      LinkedList<Byte> linkedList0 = new LinkedList<Byte>();
      jSONObject1.put("", (Collection) linkedList0);
      jSONObject1.remove("\"{9a&IBcuAI");
      jSONObject0.names();
      jSONObject1.remove("wheel.json.JSONObject$Null");
      Object object0 = new Object();
      jSONObject0.accumulate("wheel.json.JSONObject$Null", object0);
      JSONObject.getNames(jSONObject0);
      jSONObject0.optString("wheel.json.JSONObject$Null", "\"{9a&IBcuAI");
      try { 
        jSONObject0.getJSONObject("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] is not a JSONObject.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.5887425001950777
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      JSONObject jSONObject1 = jSONObject0.put("`", (Collection) linkedList0);
      Integer integer0 = new Integer(2241);
      linkedList0.add(integer0);
      Integer integer1 = new Integer(2241);
      jSONObject1.put("`", (Object) null);
      JSONObject jSONObject2 = jSONObject0.put("", (-1.0));
      jSONObject2.optInt(">q}");
      jSONObject0.optLong("");
      try { 
        jSONObject2.getJSONObject("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] is not a JSONObject.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.406433476589128
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      JSONObject jSONObject1 = new JSONObject(jSONObject0);
      jSONObject0.optBoolean("le");
      jSONObject0.optInt("$=p^3/3>$SHB?3SN_");
      jSONObject1.optString("RvNYL|=h*D", "le");
      HashMap<Byte, Boolean> hashMap0 = new HashMap<Byte, Boolean>();
      Float float0 = new Float(0.0F);
      JSONObject jSONObject2 = new JSONObject(float0);
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      Object object0 = new Object();
      Object object1 = new Object();
      jSONObject1.optInt("is", 39);
      jSONObject2.put("<x4ZUJPT%Pm~Sk\"Z,A", true);
      assertEquals(4, jSONObject2.length());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=3.0634319706935447
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      HashMap<Byte, Integer> hashMap0 = new HashMap<Byte, Integer>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      JSONObject jSONObject1 = jSONObject0.put("=u3^fN7", (-1754));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "=u3^fN7";
      Byte byte0 = new Byte((byte)37);
      Integer integer0 = new Integer((byte)37);
      hashMap0.put(byte0, integer0);
      JSONObject jSONObject2 = new JSONObject("=u3^fN7", stringArray0);
      jSONObject1.names();
      jSONObject1.optLong("=u3^fN7");
      jSONObject1.isNull("=u3^fN7");
      jSONObject0.getString("=u3^fN7");
      jSONObject2.optInt("wheel.json.JSONObject$Null");
      jSONObject1.optJSONArray("9u+1Xku28AWf52uW-ed");
      Long long0 = new Long((-1754));
      JSONObject jSONObject3 = jSONObject1.accumulate("=u3^fN7", long0);
      try { 
        jSONObject3.getLong("xp1Gz");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"xp1Gz\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.8086831878343694
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "-3IdWSNbQM>b=6M]TR";
      stringArray0[1] = "SQ'2(2_D}G\\9DgIfZ";
      stringArray0[2] = "Substring bounds error";
      stringArray0[3] = "ac";
      stringArray0[4] = "SQ'2(2_D}G\\9DgIfZ";
      JSONObject jSONObject1 = new JSONObject(jSONObject0, stringArray0);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      linkedList0.removeLastOccurrence("?JOS'Wf");
      try { 
        jSONObject1.getJSONArray("Unterminated string");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"Unterminated string\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      JSONObject jSONObject0 = null;
      String[] stringArray0 = new String[2];
      stringArray0[0] = "JSONArray initial value should be a string or collection or array.";
      stringArray0[1] = "JSONArray initial value should be a string or collection or array.";
      JSONObject jSONObject1 = null;
      try {
        jSONObject1 = new JSONObject((JSONObject) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.19953461806653
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      JSONObject.quote("");
      HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      JSONArray jSONArray0 = new JSONArray();
      jSONObject0.toJSONArray(jSONArray0);
      try { 
        jSONObject0.getJSONObject("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.9766893090132731
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      JSONObject.quote("/J2 asKp|,");
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject("51y}GURD~e(h}~{K");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must begin with '{' at character 1 of 51y}GURD~e(h}~{K
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "}_T~4T76|!<)e8teBb";
      stringArray0[1] = "=u3^fN7";
      stringArray0[2] = "=u3^fN7";
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject((Object) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.4444999928773665
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      JSONObject jSONObject1 = jSONObject0.put("w/", (Collection) linkedList0);
      Integer integer0 = new Integer(2241);
      linkedList0.add(integer0);
      JSONObject jSONObject2 = jSONObject1.put("", (Object) integer0);
      jSONObject0.put("", (-1.0));
      jSONObject0.optLong("");
      jSONObject0.getInt("");
      jSONObject0.optJSONObject("&<Ywh;<6)?z Vp|");
      long long0 = jSONObject2.optLong("");
      assertEquals((-1L), long0);
      
      int int0 = jSONObject1.optInt("w/", 2241);
      assertEquals(2241, int0);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.454539590725994
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      JSONObject jSONObject0 = new JSONObject(object0);
      HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
      JSONObject jSONObject1 = new JSONObject((Map) hashMap0);
      Object object1 = new Object();
      Double double0 = new Double((-4174.1));
      jSONObject1.accumulate("3BFt'N7u", double0);
      assertEquals(1, jSONObject1.length());
      
      jSONObject1.getLong("3BFt'N7u");
      jSONObject0.optInt("ha", 47);
      jSONObject0.optJSONObject("|\ba2or}n");
      assertEquals(1, jSONObject0.length());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.25212664127775
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      jSONObject0.put("`", (Collection) linkedList0);
      Integer integer0 = new Integer(2241);
      Integer.getInteger("get", (-3854));
      Integer.toUnsignedString((-2173));
      linkedList0.add(integer0);
      Integer integer1 = new Integer(2241);
      jSONObject0.optLong("`");
      try { 
        jSONObject0.getJSONObject("`");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"`\"] is not a JSONObject.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.832767015278065
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Float float0 = new Float(0.0F);
      Float.min(0.0F, 0.0F);
      JSONObject jSONObject0 = new JSONObject(float0);
      try { 
        jSONObject0.get("UTWJNK`F|m\"eeOwEz'$");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"UTWJNK`F|m\\\"eeOwEz'$\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.976303396176818
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      jSONObject0.optBoolean("le");
      int int0 = jSONObject0.optInt("$=p^3/3>$SHB?3SN_");
      jSONObject0.optString("RvNYL|=h*D", "le");
      Boolean boolean0 = Boolean.valueOf(false);
      String[] stringArray0 = new String[0];
      JSONObject jSONObject1 = new JSONObject(boolean0, stringArray0);
      jSONObject1.names();
      jSONObject0.optLong("");
      jSONObject0.isNull("mi");
      jSONObject0.optInt("");
      Object object0 = new Object();
      jSONObject1.append("$=p^3/3>$SHB?3SN_", "RvNYL|=h*D");
      Integer integer0 = new Integer(0);
      JSONObject jSONObject2 = jSONObject0.accumulate("", integer0);
      jSONObject2.names();
      jSONObject2.optJSONArray("is");
      assertEquals(1, jSONObject0.length());
      assertTrue(integer0.equals((Object)int0));
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.7280572268695957
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      String[] stringArray0 = new String[0];
      JSONObject jSONObject0 = new JSONObject(object0, stringArray0);
      Object object1 = new Object();
      Object object2 = new Object();
      Short short0 = new Short((short) (-1345));
      JSONArray jSONArray0 = new JSONArray();
      JSONObject.valueToString(jSONArray0);
      try { 
        jSONObject0.getJSONObject("get");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"get\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=0.810116318288409
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String string0 = JSONObject.valueToString(jSONObject0);
      assertNotNull(string0);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.9044864075880135
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      Integer.getInteger("iP#-K6w^f");
      JSONObject.valueToString((Object) null, (-3950), (-3950));
      Object object0 = JSONObject.NULL;
      String[] stringArray0 = new String[5];
      stringArray0[0] = "]]HgJM2J";
      stringArray0[1] = "null";
      stringArray0[2] = "null";
      stringArray0[3] = "iP#-K6w^f";
      stringArray0[4] = "iP#-K6w^f";
      JSONObject jSONObject0 = new JSONObject((Object) "null");
      jSONObject0.names();
      jSONObject0.optLong("]]HgJM2J");
      String string0 = null;
      jSONObject0.isNull((String) null);
      jSONObject0.optBoolean("null", true);
      jSONObject0.optInt(",\n");
      Object object1 = new Object();
      JSONObject jSONObject1 = jSONObject0.append("null", (Object) null);
      try { 
        jSONObject1.getInt("null");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"null\"] is not a number.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.586577333232116
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      jSONObject0.accumulate("qlLX42x?]]_\"@", hashMap0);
      jSONObject0.optString("\"\"", (String) null);
      try { 
        jSONObject0.getDouble((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.019029479702722
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      HashMap<Byte, Integer> hashMap0 = new HashMap<Byte, Integer>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      String string0 = "=u3^fN7";
      JSONObject jSONObject1 = jSONObject0.put("=u3^fN7", (-1754));
      jSONObject0.keys();
      jSONObject1.isNull("}_T~4T76|!<)e8teBb");
      try { 
        jSONObject1.getJSONObject(".wZ*RU}%9/s");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\".wZ*RU}%9/s\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.8900911956102955
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      LinkedList<String> linkedList1 = new LinkedList<String>();
      linkedList0.addAll((Collection<? extends String>) linkedList1);
      JSONObject jSONObject1 = new JSONObject(jSONObject0);
      boolean boolean0 = jSONObject0.optBoolean("le");
      assertFalse(boolean0);
      
      int int0 = jSONObject0.optInt("$=p^3/3>$SHB?3SN_");
      assertEquals(0, int0);
      
      linkedList0.stream();
      jSONObject1.optString("RvNYL|=h*D", "");
      linkedList1.add("is");
      Float float0 = new Float((float) 0);
      JSONObject.valueToString("", 0, 2);
      double double0 = jSONObject1.optDouble("put", (double) 2);
      assertEquals(2.0, double0, 0.01);
      
      jSONObject1.keys();
      String string0 = jSONObject0.optString("U54");
      assertEquals("", string0);
      
      String string1 = jSONObject0.toString(3376);
      assertEquals("{}", string1);
      
      LinkedList<Float> linkedList2 = new LinkedList<Float>();
      LinkedList<Integer> linkedList3 = new LinkedList<Integer>();
      jSONObject0.put("U54", (Collection) linkedList3);
      JSONObject jSONObject2 = new JSONObject((Object) "RvNYL|=h*D");
      JSONArray jSONArray0 = new JSONArray();
      jSONObject2.toJSONArray(jSONArray0);
      assertEquals(3, jSONObject2.length());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.8150151552930605
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      JSONObject jSONObject1 = jSONObject0.put("w/", (Collection) linkedList0);
      Integer integer0 = new Integer(2241);
      JSONObject jSONObject2 = jSONObject1.put("", (Object) integer0);
      jSONObject0.put("", (-1.0));
      long long0 = jSONObject0.optLong("");
      assertEquals((-1L), long0);
      
      jSONObject0.getInt("");
      Integer integer1 = new Integer(2241);
      JSONObject jSONObject3 = jSONObject2.put("(]r;3q/P{]13bOn.vG9", (Object) linkedList0);
      JSONObject jSONObject4 = jSONObject2.put("kLS>yKc:1yCNM~k", 0.0);
      jSONObject0.toString(2241);
      jSONObject3.put("fl", (-205.5124301754875));
      double double0 = jSONObject4.optDouble("kLS>yKc:1yCNM~k", (double) 2241);
      assertEquals(0.0, double0, 0.01);
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.5715508306571473
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      JSONObject jSONObject0 = new JSONObject(object0);
      int int0 = (-1824);
      jSONObject0.toString((-1824), 1839);
      String string0 = "";
      jSONObject0.optLong("");
      jSONObject0.names();
      try { 
        jSONObject0.getLong("{\"java.lang.String@0000000002\": \"java.lang.Class@0000000003\"}");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"{\\\"java.lang.String@0000000002\\\": \\\"java.lang.Class@0000000003\\\"}\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.182228552311554
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.toString(4117, 4117);
      jSONObject0.optLong("{}");
      jSONObject0.names();
      try { 
        jSONObject0.getInt("{}");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"{}\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=3.038304892014002
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      JSONObject jSONObject0 = new JSONObject(object0);
      jSONObject0.optBoolean("Substring bounds error", false);
      String string0 = "Bad value from toJSONString: ";
      jSONObject0.optLong("Bad value from toJSONString: ");
      JSONArray jSONArray0 = new JSONArray();
      JSONObject jSONObject1 = jSONObject0.append("Bad value from toJSONString: ", jSONArray0);
      Byte byte0 = new Byte((byte)0);
      Byte.compare((byte)0, (byte) (-52));
      JSONObject jSONObject2 = jSONObject0.accumulate("] is not a JSONArray.", byte0);
      StringWriter stringWriter0 = new StringWriter();
      Byte.toUnsignedLong((byte)59);
      jSONArray0.toJSONObject((JSONArray) null);
      Long long0 = new Long(0L);
      jSONObject2.append("j^1_nIc|!UkhXN<-", long0);
      Long.max(0L, 185L);
      JSONObject.valueToString(jSONObject1);
      Writer writer0 = jSONArray0.write(stringWriter0);
      jSONObject2.write(writer0);
      jSONObject0.toString(0);
      String string1 = "SR3{%\\p rg8It-4Ip";
      try { 
        jSONObject0.get("SR3{%p rg8It-4Ip");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"SR3{%p rg8It-4Ip\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.511254747961017
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      JSONObject jSONObject1 = jSONObject0.put("w/", (Collection) linkedList0);
      Integer integer0 = new Integer(2241);
      LinkedList<Float> linkedList1 = new LinkedList<Float>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList1);
      JSONObject jSONObject2 = jSONObject1.append("A JSONArray text must start with '['", jSONArray0);
      jSONObject0.toJSONArray(jSONArray0);
      jSONObject2.optDouble("w/", (double) 2241);
      Double double0 = new Double(2241);
      jSONObject2.putOpt("", ",)}R4PP");
      jSONObject1.optDouble("A JSONArray text must start with '['");
      HashMap<Boolean, Boolean> hashMap0 = new HashMap<Boolean, Boolean>();
      JSONObject jSONObject3 = jSONObject2.put("", (Map) hashMap0);
      Byte byte0 = new Byte((byte)55);
      JSONObject.valueToString("", (-767), (byte)24);
      Object object0 = JSONObject.NULL;
      JSONObject jSONObject4 = jSONObject0.put("", (Object) "");
      assertSame(jSONObject4, jSONObject3);
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.5207606466771857
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      JSONObject jSONObject1 = jSONObject0.put("w/", (Collection) linkedList0);
      Integer integer0 = new Integer(2241);
      JSONObject jSONObject2 = new JSONObject(jSONObject1);
      Float float0 = new Float((float) 2241);
      jSONObject2.putOpt("w/", float0);
      jSONObject0.put("", (-1.0));
      jSONObject0.optLong("");
      assertEquals(2, jSONObject0.length());
      
      int int0 = jSONObject0.getInt("");
      jSONObject0.optJSONObject("&<Ywh;<6)?z Vp|");
      int int1 = new Integer((-1));
      assertTrue(int1 == int0);
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.3746517268956926
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String string0 = "`";
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      jSONObject0.put("`", (Collection) linkedList0);
      Integer integer0 = new Integer(2241);
      Integer.max(42, 2241);
      jSONObject0.optInt("`");
      jSONObject0.optString((String) null);
      linkedList0.add(integer0);
      try { 
        Integer.decode("`");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"`\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.498372513679043
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = jSONObject0.put("", false);
      JSONObject jSONObject2 = new JSONObject(jSONObject0);
      String string0 = "n";
      JSONObject jSONObject3 = jSONObject2.put("n", 2046);
      jSONObject1.put("?,}I", (Object) jSONObject2);
      String string1 = "GV^zT\\Irs3LJI";
      jSONObject0.optDouble("GV^zTIrs3LJI");
      HashMap<Byte, JSONObject> hashMap0 = new HashMap<Byte, JSONObject>();
      JSONObject jSONObject4 = jSONObject3.put("P,CW:w8", (Map) hashMap0);
      jSONObject4.putOpt("?,}I", jSONObject1);
      try { 
        jSONObject0.getJSONArray("]Ch");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"]Ch\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.133022110040161
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String string0 = "SQ'2(2_D}G\\\\9DgIfZ";
      JSONObject jSONObject1 = jSONObject0.put("Expected a ':' after a key", 2046);
      Float float0 = new Float((double) 45);
      jSONObject1.optDouble("Expected a ':' after a key");
      Float.min(45, 2046);
      HashMap<Byte, JSONObject> hashMap0 = new HashMap<Byte, JSONObject>();
      jSONObject1.putOpt("SQ'2(2_D}G\\9DgIfZ", jSONObject0);
      try { 
        jSONObject0.getJSONArray("SQ'2(2_D}G\\9DgIfZ");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"SQ'2(2_D}G\\\\9DgIfZ\"] is not a JSONArray.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=2.648007311397833
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      jSONObject0.put("w/", (Collection) linkedList0);
      jSONObject0.put("", (-1.0));
      jSONObject0.optLong("");
      jSONObject0.getInt("");
      jSONObject0.optJSONObject("&<Ywh;<6)?z Vp|");
      Long long0 = new Long(0L);
      JSONObject.valueToString(long0, (-450), (-450));
      try { 
        jSONObject0.getLong("mUQd");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"mUQd\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.0829081047004716
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      HashMap<Byte, Integer> hashMap0 = new HashMap<Byte, Integer>();
      Double double0 = new Double((-1754));
      String string0 = JSONObject.numberToString(double0);
      assertNotNull(string0);
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.948720592834763
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      HashMap<Boolean, String> hashMap0 = new HashMap<Boolean, String>();
      jSONArray0.put(26, (Map) hashMap0);
      jSONArray0.optLong(26);
      JSONObject.getNames((Object) jSONArray0);
      String string0 = "] is not a number.";
      JSONTokener jSONTokener0 = new JSONTokener("] is not a number.");
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject(jSONTokener0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must begin with '{' at character 1 of ] is not a number.
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.8048439463933361
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String string0 = "";
      Integer integer0 = new Integer(2241);
      Integer integer1 = new Integer(2241);
      JSONObject jSONObject1 = jSONObject0.put("", (-1.0));
      try { 
        jSONObject1.getLong("*\u0005@rG_q?$Fl^o7");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"*\\u0005@rG_q?$Fl^o7\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.8148657896913192
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      Integer.getInteger("iP#-K6w^f");
      JSONObject.valueToString((Object) null, (-3950), (-3950));
      Object object0 = JSONObject.NULL;
      Object object1 = new Object();
      HashMap<Byte, JSONObject> hashMap0 = new HashMap<Byte, JSONObject>();
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject("pu");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must begin with '{' at character 1 of pu
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.4646146322079754
  */
  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      JSONObject jSONObject1 = new JSONObject(jSONObject0);
      jSONObject0.optBoolean("le");
      jSONObject0.optInt("$=p^3/3>$SHB?3SN_");
      jSONObject1.optString("RvNYL|=h*D", "le");
      HashMap<Byte, Boolean> hashMap0 = new HashMap<Byte, Boolean>();
      JSONObject jSONObject2 = new JSONObject((Map) hashMap0);
      Float float0 = new Float((-4719.4F));
      Object object0 = JSONObject.NULL;
      JSONObject jSONObject3 = new JSONObject(object0);
      JSONArray jSONArray0 = new JSONArray((Collection) null);
      HashMap<Byte, JSONObject> hashMap1 = new HashMap<Byte, JSONObject>();
      JSONObject jSONObject4 = null;
      try {
        jSONObject4 = new JSONObject((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.6361727723968755
  */
  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      JSONObject jSONObject1 = new JSONObject(jSONObject0);
      jSONObject0.optBoolean("le");
      jSONObject0.optInt("$=p^3/3>$SHB?3SN_");
      String string0 = "RvNYL|=h*D";
      jSONObject1.optString("RvNYL|=h*D", "le");
      HashMap<Byte, Boolean> hashMap0 = new HashMap<Byte, Boolean>();
      JSONObject jSONObject2 = new JSONObject((Map) hashMap0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "le";
      stringArray0[1] = "is";
      JSONObject jSONObject3 = new JSONObject((Object) jSONObject2, stringArray0);
      jSONObject2.names();
      try { 
        jSONObject1.getInt("sp");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"sp\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.705305732516834
  */
  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      linkedList0.removeLastOccurrence(jSONObject0);
      jSONObject0.optInt("_~mG/6YTSz", 88);
      jSONObject0.isNull("_~mG/6YTSz");
      try { 
        jSONObject0.getBoolean("_~mG/6YTSz");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"_~mG/6YTSz\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.0750989420742516
  */
  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      Object object0 = new Object();
      JSONObject jSONObject0 = new JSONObject((Object) "SQ'2(2_D}G\\9DgIfZ");
      long long0 = jSONObject0.optLong((String) null, 1172L);
      assertEquals(1172L, long0);
      assertEquals(3, jSONObject0.length());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.9186308613668221
  */
  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "-3IdWSNbQM>b=6M]TR";
      stringArray0[1] = "SQ'2(2_D}G\\9DgIfZ";
      stringArray0[2] = "Substring bounds error";
      stringArray0[3] = "ac";
      stringArray0[4] = "SQ'2(2_D}G\\9DgIfZ";
      JSONObject jSONObject1 = new JSONObject(jSONObject0, stringArray0);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      linkedList0.removeLastOccurrence("?JOS'Wf");
      int int0 = jSONObject0.optInt("-3IdWSNbQM>b=6M]TR", 32);
      assertEquals(32, int0);
  }

  /**
  //Test case number: 86
  /*Coverage entropy=2.0457648257580447
  */
  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      Integer integer0 = new Integer(0);
      JSONObject jSONObject0 = new JSONObject(integer0);
      try { 
        jSONObject0.getJSONObject("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.0676032882216056
  */
  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      JSONObject.doubleToString((-1.0));
      JSONTokener jSONTokener0 = new JSONTokener("Sz^%tAhi");
      jSONTokener0.next();
      jSONTokener0.skipPast("Null pointer");
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject(jSONTokener0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must begin with '{' at character 8 of Sz^%tAhi
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }
}
