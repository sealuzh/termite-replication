/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 17:08:32 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.FileDescriptor;
import java.io.InputStream;
import java.io.SequenceInputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockRandomAccessFile;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassReader;
import wheel.asm.ClassWriter;
import wheel.asm.FieldVisitor;
import wheel.asm.FieldWriter;
import wheel.asm.Label;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.3944971162597928
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ClassWriter classWriter0 = new ClassWriter((-1));
      classWriter0.version = (-1);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1), "", "\" :TopsZR", (String) null, "");
      fieldWriter0.getSize();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      classWriter0.version = 4;
      Attribute attribute0 = new Attribute("");
      ClassWriter classWriter1 = new ClassWriter(3030);
      fieldWriter0.getSize();
      Attribute attribute1 = new Attribute("\" :TopsZR");
      Attribute attribute2 = attribute0.next;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ByteVector byteVector0 = new ByteVector();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      ByteVector byteVector1 = new ByteVector();
      ByteVector byteVector2 = byteVector1.putUTF8("Signature");
      fieldWriter0.put(byteVector1);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      ByteVector byteVector3 = new ByteVector();
      ByteVector byteVector4 = byteVector2.putInt(65535);
      fieldWriter0.put(byteVector2);
      fieldWriter0.put(byteVector4);
      fieldWriter0.getSize();
      fieldWriter0.put(byteVector1);
      assertFalse(byteVector1.equals((Object)byteVector3));
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.2885387096069334
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(Integer.MAX_VALUE);
      classWriter0.index = Integer.MAX_VALUE;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 16, "", "", ",\" ", (Object) null);
      fieldWriter0.visitAnnotation("", false);
      fieldWriter0.getSize();
      Attribute attribute0 = new Attribute("uJ4+v[B$=33Kk");
      byte[] byteArray0 = new byte[7];
      Attribute attribute1 = new Attribute("");
      Attribute attribute2 = attribute0.next;
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.CanWriteFileFilter");
      char[] charArray0 = new char[3];
      charArray0[0] = 'n';
      charArray0[1] = 'q';
      charArray0[2] = 'g';
      Label[] labelArray0 = new Label[3];
      ClassReader classReader1 = null;
      try {
        classReader1 = new ClassReader(byteArray0, 1016, 9);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1024
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      ByteVector byteVector0 = classWriter0.pool;
      ByteVector byteVector1 = byteVector0.putLong(2);
      byteVector1.put11(1, (-2078));
      byteVector1.putByteArray((byte[]) null, 131072, 1);
      byteVector1.putByteArray((byte[]) null, 1, (-3033));
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 2, "Insensitive", "Insensitive", "Insensitive", "Insensitive");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.4492607610177828
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1287));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "\" :TopsZR", "\" :TopsZR", "\" :TopsZR", (Object) null);
      fieldWriter0.visitAnnotation("\" :TopsZR", true);
      ByteVector byteVector0 = new ByteVector(6);
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, (-152), "\" :TopsZR", "\" :TopsZR", "\" :TopsZR", (Object) null);
      ByteVector byteVector1 = new ByteVector(2);
      byteVector1.putByte(1891);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FieldWriter fieldWriter2 = classWriter0.lastField;
      fieldWriter2.put(byteVector1);
      fieldWriter1.put(byteVector1);
      fieldWriter2.visitAnnotation("\" :TopsZR", true);
      ByteVector byteVector2 = byteVector1.putUTF8("Deprecated");
      fieldWriter0.put(byteVector2);
      int int0 = fieldWriter2.getSize();
      assertEquals(40, int0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "\" :TopsZR");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ClassWriter classWriter0 = new ClassWriter(5);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "Synthetic", "\" :TopsZR", "?3=^`", (Object) null);
      ByteVector byteVector0 = new ByteVector(6);
      ByteVector byteVector1 = byteVector0.put11((-305), 1);
      byteVector1.putInt((-874));
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ByteVector byteVector2 = byteVector1.put11(5, 1);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      ByteVector byteVector3 = byteVector2.putUTF8("");
      byteVector3.putInt(2291);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)56;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)91;
      byteArray0[3] = (byte) (-34);
      byteVector1.data = byteArray0;
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ByteVector", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.2347124125190347
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ClassWriter classWriter0 = new ClassWriter((-1));
      String string0 = "\" :TopsZR";
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1), "", "\" :TopsZR", (String) null, "");
      fieldWriter0.getSize();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      Attribute attribute0 = new Attribute("\" :TopsZR");
      fieldWriter0.visitAttribute(attribute0);
      classWriter0.version = 4;
      Attribute attribute1 = new Attribute("");
      ClassWriter classWriter1 = new ClassWriter(3030);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.5305417951003921
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1287));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "\" :TopsZR", "\" :TopsZR", "\" :TopsZR", (Object) null);
      ByteVector byteVector0 = new ByteVector(6);
      byteVector0.put11(6, 1);
      fieldWriter0.getSize();
      ByteVector byteVector1 = byteVector0.putUTF8("`nv9;ij;x^VjG(5`<:y");
      fieldWriter0.put(byteVector0);
      ByteVector byteVector2 = new ByteVector();
      ByteVector byteVector3 = byteVector0.put12(2, (-460));
      fieldWriter0.getSize();
      fieldWriter0.visitAnnotation("`nv9;ij;x^VjG(5`<:y", true);
      fieldWriter0.put(byteVector0);
      byteVector3.putLong(3248L);
      fieldWriter0.put(byteVector3);
      fieldWriter0.visitAnnotation("", false);
      fieldWriter0.put(byteVector3);
      assertSame(byteVector3, byteVector1);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.5410627804672674
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(826);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, ",\" ", ",\" ", "", "");
      fieldWriter0.getSize();
      Attribute attribute0 = new Attribute("");
      Attribute attribute1 = attribute0.next;
      classWriter0.firstField = fieldWriter0;
      fieldWriter0.visitAnnotation(",\" ", false);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-6);
      ByteVector byteVector0 = new ByteVector(6);
      ByteVector byteVector1 = byteVector0.putInt((-1371));
      fieldWriter0.put(byteVector0);
      fieldWriter0.put(byteVector0);
      fieldWriter0.put(byteVector0);
      ByteVector byteVector2 = byteVector1.putLong(32L);
      classWriter0.firstField.put(byteVector2);
      int int0 = classWriter0.firstField.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.8361623253853443
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "\" :TopsZR");
      ClassWriter classWriter0 = new ClassWriter(5);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4096, "_H~ZDl", "", "?3=^`", "Synthetic");
      ByteVector byteVector0 = new ByteVector(6);
      ByteVector byteVector1 = byteVector0.putInt(905);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byteVector0.put11(1, 3);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      ByteVector byteVector2 = new ByteVector();
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      ByteVector byteVector3 = new ByteVector();
      ByteVector byteVector4 = byteVector1.putUTF8("\" :TopsZR");
      ByteVector byteVector5 = byteVector4.putLong(4096);
      fieldWriter0.put(byteVector5);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockRandomAccessFile mockRandomAccessFile0 = null;
      try {
        mockRandomAccessFile0 = new MockRandomAccessFile("4;x|_#4W", "?3=^`");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal mode \"?3=^`\" must be one of \"r\", \"rw\", \"rws\", or \"rwd\"
         //
         verifyException("java.io.RandomAccessFile", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1));
      String string0 = "\" :TopsZR";
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1), "", "\" :TopsZR", (String) null, "");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.5451449283249332
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1257));
      FieldVisitor fieldVisitor0 = classWriter0.visitField(251658240, "", "`Am;", "5\"&zz:", "5\"&zz:");
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "U?r5", "U?r5", "U?r5", "U?r5");
      fieldWriter0.getSize();
      Attribute attribute0 = new Attribute("U?r5");
      ClassWriter classWriter1 = new ClassWriter(0);
      byte[] byteArray0 = new byte[4];
      classWriter1.visitAnnotation("", false);
      byteArray0[0] = (byte) (-66);
      byteArray0[1] = (byte) (-83);
      byteArray0[2] = (byte) (-17);
      byteArray0[3] = (byte) (-83);
      fieldVisitor0.visitEnd();
      Attribute attribute1 = new Attribute("");
      Attribute attribute2 = attribute1.next;
      fieldWriter0.visitAttribute(attribute1);
      assertFalse(attribute1.isCodeAttribute());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.47370348975956
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ClassWriter classWriter0 = new ClassWriter((-1));
      String string0 = null;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1), "", "\" :TopsZR", (String) null, "");
      fieldWriter0.getSize();
      classWriter0.version = 4;
      Attribute attribute0 = new Attribute("ConstantValue");
      ClassWriter classWriter1 = new ClassWriter(3030);
      fieldWriter0.getSize();
      Attribute attribute1 = new Attribute("\" :TopsZR");
      Attribute attribute2 = attribute0.next;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.visitAttribute(attribute0);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      ByteVector byteVector1 = new ByteVector();
      String string1 = "Signature";
      byteVector1.putUTF8("Signature");
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ClassWriter classWriter0 = new ClassWriter((-1));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1), "", "\" :TopsZR", (String) null, "");
      Attribute attribute0 = new Attribute((String) null);
      Attribute attribute1 = attribute0.next;
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String string0 = "uJ4+v[B$=33Kk";
      ClassWriter classWriter0 = null;
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(bufferedInputStream0, (InputStream) null);
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter((ClassWriter) null, Integer.MAX_VALUE, ",\" ", ",\" ", "uJ4+v[B$=33Kk", sequenceInputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-986));
      Object object0 = new Object();
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 65535, " }.<A5O<'Hcuq", " }.<A5O<'Hcuq", (String) null, object0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value java.lang.Object@7fdb334e
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }
}
