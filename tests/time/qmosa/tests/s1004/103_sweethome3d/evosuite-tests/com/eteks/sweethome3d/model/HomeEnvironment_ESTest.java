/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 17:04:24 GMT 2019
 */

package com.eteks.sweethome3d.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.eteks.sweethome3d.model.AspectRatio;
import com.eteks.sweethome3d.model.Camera;
import com.eteks.sweethome3d.model.CatalogTexture;
import com.eteks.sweethome3d.model.Content;
import com.eteks.sweethome3d.model.HomeEnvironment;
import com.eteks.sweethome3d.model.HomeTexture;
import com.eteks.sweethome3d.model.TexturesCategory;
import com.eteks.sweethome3d.tools.ResourceURLContent;
import com.eteks.sweethome3d.tools.TemporaryURLContent;
import com.eteks.sweethome3d.tools.URLContent;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeListenerProxy;
import java.net.URL;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HomeEnvironment_ESTest extends HomeEnvironment_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.3592809961036476
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment1.setPhotoWidth((-1813));
      homeEnvironment1.setVideoWidth(0);
      homeEnvironment1.setObserverCameraElevationAdjusted(false);
      homeEnvironment1.setSubpartSizeUnderLight((-1813));
      homeEnvironment1.setPhotoQuality(0);
      homeEnvironment1.setAllLevelsVisible(false);
      homeEnvironment1.setVideoAspectRatio(aspectRatio0);
      homeEnvironment1.setWallsAlpha(0);
      List<Camera> list0 = homeEnvironment1.getVideoCameraPath();
      homeEnvironment0.setPhotoHeight(12);
      homeEnvironment1.setLightColor(12);
      homeEnvironment0.setVideoQuality(12);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment1.setLightColor(0);
      Camera camera0 = new Camera(0, (-1813), 2.14658739E9F, 2.14658739E9F, 12, 2.14658739E9F);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent("z[C[sYq[rTXp)BlW*P", "9yV.^l}WJGQ$Oi=nvLQ", homeEnvironment0, list0);
      homeEnvironment0.getVideoQuality();
      boolean boolean0 = homeEnvironment1.isObserverCameraElevationAdjusted();
      assertEquals((-1813.0F), homeEnvironment1.getSubpartSizeUnderLight(), 0.01F);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.3027171066282754
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment1.setVideoWidth(0);
      homeEnvironment1.setPhotoQuality(0);
      homeEnvironment1.setAllLevelsVisible(false);
      homeEnvironment1.setVideoAspectRatio(aspectRatio0);
      homeEnvironment1.setWallsAlpha(537.1F);
      homeEnvironment0.setPhotoHeight(12);
      homeEnvironment1.setLightColor(12);
      homeEnvironment1.setPhotoWidth(0);
      homeEnvironment0.setVideoQuality(13684944);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment1.setLightColor(0);
      HomeEnvironment homeEnvironment2 = homeEnvironment0.clone();
      homeEnvironment2.setVideoFrameRate(12);
      homeEnvironment0.setLightColor(0);
      homeEnvironment1.clone();
      homeEnvironment1.setVideoFrameRate(3);
      homeEnvironment1.getPhotoWidth();
      homeEnvironment0.setPhotoWidth(0);
      int int0 = homeEnvironment0.getVideoWidth();
      assertEquals(0, homeEnvironment0.getLightColor());
      assertEquals(320, int0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.2235185382845533
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment1.setVideoWidth(0);
      homeEnvironment1.setObserverCameraElevationAdjusted(false);
      homeEnvironment1.setPhotoQuality(0);
      homeEnvironment1.setAllLevelsVisible(false);
      homeEnvironment1.setVideoAspectRatio(aspectRatio0);
      homeEnvironment1.setWallsAlpha(537.1F);
      homeEnvironment1.getVideoCameraPath();
      homeEnvironment0.setPhotoHeight(0);
      homeEnvironment1.setLightColor(0);
      homeEnvironment0.setVideoQuality(13684944);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment1.setLightColor(0);
      HomeEnvironment homeEnvironment2 = homeEnvironment0.clone();
      homeEnvironment2.setVideoFrameRate(0);
      AspectRatio aspectRatio1 = AspectRatio.SQUARE_RATIO;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "editorSubFolder.Mac OS X");
      homeEnvironment2.setPhotoAspectRatio(aspectRatio1);
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("@6");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.@6
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.94218229742502
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setVideoWidth(0);
      homeEnvironment1.setObserverCameraElevationAdjusted(false);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("SKY_TEXTURE", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("SKY_TEXTURE", propertyChangeListenerProxy0);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(homeEnvironment1, (String) null, (Object) null, homeEnvironment1);
      propertyChangeListenerProxy1.propertyChange(propertyChangeEvent0);
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent("SKY_TEXTURE", "PHOTO_ASPECT_RATIO", homeEnvironment1, propertyChangeListenerProxy1);
      Object object0 = new Object();
      URL uRL0 = MockURL.getFtpExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      CatalogTexture catalogTexture0 = new CatalogTexture("", "", resourceURLContent0, 380.0F, 1.0F, "SKY_TEXTURE");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment2 = new HomeEnvironment();
      homeEnvironment0.setLightColor(5063);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment2.setVideoAspectRatio(aspectRatio0);
      homeEnvironment1.getVideoHeight();
      assertEquals(5063, homeEnvironment0.getLightColor());
      
      HomeEnvironment.DrawingMode.values();
      homeEnvironment2.getPhotoAspectRatio();
      assertEquals(13684944, homeEnvironment2.getLightColor());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.853253087436612
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoHeight(5);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      homeEnvironment0.setVideoWidth(1723);
      homeEnvironment0.setPhotoWidth(13);
      homeEnvironment0.setPhotoWidth(13);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment1.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment1.setLightColor(2395);
      HomeEnvironment homeEnvironment2 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment2.setVideoAspectRatio(aspectRatio0);
      HomeEnvironment.DrawingMode.values();
      homeEnvironment1.getPhotoAspectRatio();
      assertEquals(HomeEnvironment.DrawingMode.OUTLINE, homeEnvironment1.getDrawingMode());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.75012938226178
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoHeight(5);
      homeEnvironment0.setVideoWidth(1755);
      homeEnvironment0.setPhotoWidth(13);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.setSubpartSizeUnderLight(2395);
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("N", "GROUND_TEXTURE", temporaryURLContent0, 1.5F, 13, "GROUND_TEXTURE", false);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setSkyTexture(homeTexture0);
      homeEnvironment0.getPhotoQuality();
      homeEnvironment0.setSkyTexture(homeTexture0);
      assertEquals(13, homeEnvironment0.getPhotoWidth());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.6376398674083723
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setVideoWidth(0);
      homeEnvironment1.setObserverCameraElevationAdjusted(false);
      homeEnvironment1.setPhotoQuality(0);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("SKY_TEXTURE", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("SKY_TEXTURE", propertyChangeListenerProxy0);
      propertyChangeListenerProxy1.propertyChange((PropertyChangeEvent) null);
      Camera camera0 = new Camera(0, (-201.34465F), 1186.7614F, 2.0F, 2.0F, 0);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent("z[C[sYq[rTXp)BlW*P", (String) null, "||X$jVt", camera0);
      homeEnvironment0.getVideoQuality();
      int int0 = homeEnvironment1.getCeillingLightColor();
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertFalse(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(13684944, int0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      
      homeEnvironment0.setCeillingLightColor(0);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      Camera camera0 = new Camera(1.0F, (-658.2812F), (-150.71542F), (-150.71542F), (-658.2812F), (-658.2812F));
      camera0.clone();
      camera0.setZ(0);
      LinkedList<Camera> linkedList1 = new LinkedList<Camera>();
      Camera.Lens camera_Lens0 = Camera.Lens.SPHERICAL;
      Camera camera1 = new Camera((-1.0F), 1874.31F, (-1.0F), (-1819.0F), 3411.11F, (-658.2812F), 3152L, camera_Lens0);
      LinkedList<Camera> linkedList2 = new LinkedList<Camera>();
      linkedList2.add(camera0);
      CatalogTexture catalogTexture0 = new CatalogTexture("9~51C49u", "CEILING_LIGHT_COLOR", (Content) null, 0.0F, 1706.0F, "9~51C49u", true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setSkyTexture(homeTexture0);
      HomeEnvironment.Property.values();
      int int0 = homeEnvironment0.getCeillingLightColor();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("gJM2J4Fva\u0004{", propertyChangeListener0);
      homeEnvironment0.setSubpartSizeUnderLight((-1.0F));
      URL uRL0 = MockURL.getHttpExample();
      String string0 = "N D\\u3'=c?i9pPLa";
      URL uRL1 = MockURL.URL(uRL0, string0);
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL1);
      CatalogTexture catalogTexture0 = new CatalogTexture("FILL", "s", temporaryURLContent0, (-1.0F), 33.0F, "VDEO_FRAME_RATE", false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setSkyTexture(homeTexture0);
      int int0 = homeEnvironment0.getPhotoQuality();
      assertEquals((-1.0F), homeEnvironment0.getSubpartSizeUnderLight(), 0.01F);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.2241439291538465
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoWidth((-976));
      homeEnvironment0.setPhotoHeight((-976));
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeEnvironment0.setPhotoHeight(1674);
      homeEnvironment0.setPhotoHeight(1674);
      homeEnvironment0.setSubpartSizeUnderLight(537.1F);
      homeEnvironment0.getVideoQuality();
      homeEnvironment0.setPhotoWidth(0);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment0.setSubpartSizeUnderLight(1553.0F);
      homeEnvironment0.getSkyColor();
      homeEnvironment0.getSubpartSizeUnderLight();
      int int0 = homeEnvironment0.getVideoHeight();
      assertEquals(HomeEnvironment.DrawingMode.OUTLINE, homeEnvironment0.getDrawingMode());
      assertEquals(240, int0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.9663881312694826
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("Unsupported aspect ratio ", "", uRLContent0, 0, 2.0F, "", true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, homeTexture0, (-2301), homeTexture0, 1015, 1015);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setVideoWidth((-2301));
      HomeEnvironment homeEnvironment2 = new HomeEnvironment();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.SKY_COLOR;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("Unsupported aspect ratio ", propertyChangeListener0);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment1.setPhotoWidth((-2301));
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL;
      homeEnvironment1.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.setSubpartSizeUnderLight(334.44656F);
      MockURL.getFileExample();
      MockURL.getFileExample();
      homeEnvironment1.getPhotoWidth();
      homeEnvironment0.isObserverCameraElevationAdjusted();
      assertEquals(334.44656F, homeEnvironment0.getSubpartSizeUnderLight(), 0.01F);
      
      int int0 = homeEnvironment2.getVideoFrameRate();
      assertEquals(25, int0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.8493821196946767
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setVideoWidth(0);
      homeEnvironment1.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setPhotoHeight(0);
      homeEnvironment0.setVideoWidth(0);
      homeEnvironment0.setPhotoWidth(0);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment1.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.setSubpartSizeUnderLight(0);
      MockURL.getFileExample();
      MockURL.getFileExample();
      int int0 = homeEnvironment0.getPhotoWidth();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      
      homeEnvironment0.setCeillingLightColor(0);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      Camera camera0 = new Camera(1.0F, (-658.2812F), (-150.71542F), (-150.71542F), 2.0F, 0.0F);
      camera0.clone();
      camera0.setZ((-1819.0F));
      LinkedList<Camera> linkedList1 = new LinkedList<Camera>();
      Camera.Lens camera_Lens0 = Camera.Lens.PINHOLE;
      Camera camera1 = new Camera((-1819.0F), 0.0F, (-1819.0F), 1874.31F, 2581.499F, 3813.0F, 0L, camera_Lens0);
      linkedList1.add(camera1);
      homeEnvironment0.clone();
      int int0 = homeEnvironment0.getVideoQuality();
      assertEquals(0, homeEnvironment0.getCeillingLightColor());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.852140740384332
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.setVideoWidth(0);
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      HomeEnvironment homeEnvironment2 = homeEnvironment0.clone();
      homeEnvironment1.setPhotoQuality(0);
      homeEnvironment2.setVideoWidth(0);
      homeEnvironment1.setPhotoWidth(6);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.setSubpartSizeUnderLight(0);
      MockURL.getFileExample();
      MockURL.getFileExample();
      HomeEnvironment homeEnvironment3 = homeEnvironment0.clone();
      int int0 = homeEnvironment3.getPhotoWidth();
      assertEquals(HomeEnvironment.DrawingMode.OUTLINE, homeEnvironment0.getDrawingMode());
      assertEquals(400, int0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.301160282549396
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment1.setPhotoWidth(157);
      homeEnvironment1.setVideoWidth(0);
      homeEnvironment1.setObserverCameraElevationAdjusted(false);
      homeEnvironment1.setPhotoQuality(0);
      homeEnvironment1.setAllLevelsVisible(false);
      homeEnvironment1.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setSubpartSizeUnderLight(157);
      homeEnvironment1.getVideoCameraPath();
      homeEnvironment0.setPhotoHeight(12);
      homeEnvironment1.setLightColor(12);
      homeEnvironment0.setVideoQuality(13684944);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment1.setLightColor(0);
      HomeEnvironment homeEnvironment2 = homeEnvironment0.clone();
      homeEnvironment2.setVideoFrameRate(12);
      AspectRatio aspectRatio1 = AspectRatio.SQUARE_RATIO;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "editorSubFolder.Mac OS X");
      homeEnvironment2.setPhotoAspectRatio(aspectRatio1);
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("@6");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.@6
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "'\"xHj/Gjnji");
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("'\"xHj/Gjnji", uRLContent0, 0.0F, 0.0F, false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      int int0 = 10;
      homeEnvironment0.setLightColor(10);
      AspectRatio aspectRatio0 = AspectRatio.VIEW_3D_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.7787755691845217
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment0.setPhotoHeight(2395);
      homeEnvironment0.setVideoWidth(13);
      homeEnvironment0.setPhotoWidth(2395);
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.setSubpartSizeUnderLight(0.0F);
      MockURL.getFileExample();
      MockURL.getFileExample();
      homeEnvironment0.getPhotoWidth();
      int int0 = homeEnvironment0.getPhotoQuality();
      assertEquals(13, homeEnvironment0.getVideoWidth());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.8778952727983707
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setCeillingLightColor(0);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      Camera camera0 = new Camera(1.0F, (-658.2812F), (-150.71542F), (-150.71542F), (-658.2812F), (-658.2812F));
      camera0.setFieldOfView(952.0F);
      camera0.setZ(0);
      LinkedList<Camera> linkedList1 = new LinkedList<Camera>();
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.setLightColor(2133891979);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.setVideoFrameRate(2133891979);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment1.setPhotoAspectRatio(aspectRatio0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "editorSubFolder.Mac OS X");
      AspectRatio aspectRatio1 = AspectRatio.VIEW_3D_RATIO;
      homeEnvironment1.setPhotoAspectRatio(aspectRatio1);
      homeEnvironment0.getPhotoWidth();
      homeEnvironment1.setPhotoWidth(0);
      assertEquals(2133891979, homeEnvironment0.getVideoFrameRate());
      assertEquals(2133891979, homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.334501405129635
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setVideoWidth(0);
      homeEnvironment1.setObserverCameraElevationAdjusted(false);
      homeEnvironment1.setPhotoQuality(0);
      homeEnvironment1.setAllLevelsVisible(false);
      homeEnvironment1.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.setPhotoQuality(8192);
      homeEnvironment0.setAllLevelsVisible(true);
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment1.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setWallsAlpha(0);
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setPhotoHeight(8192);
      homeEnvironment0.setLightColor((-2364));
      homeEnvironment0.setVideoQuality(361);
      homeEnvironment1.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setLightColor(1314);
      HomeEnvironment homeEnvironment2 = homeEnvironment0.clone();
      homeEnvironment0.setVideoFrameRate((-10));
      homeEnvironment2.getPhotoWidth();
      homeEnvironment0.getVideoWidth();
      homeEnvironment2.getGroundColor();
      int int0 = homeEnvironment0.getVideoQuality();
      assertEquals((-10), homeEnvironment0.getVideoFrameRate());
      assertEquals(361, int0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.0435081458220186
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-1819), (HomeTexture) null, (-1819), (-1819), (-1819));
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setGroundTexture((HomeTexture) null);
      homeEnvironment0.setAllLevelsVisible(false);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setGroundColor((-1819));
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment0.getVideoFrameRate();
      homeEnvironment1.getPhotoHeight();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("j~P5FY1", propertyChangeListener0);
      homeEnvironment0.setVideoWidth(25);
      HomeEnvironment homeEnvironment2 = new HomeEnvironment(25, (HomeTexture) null, 25, (HomeTexture) null, (-1819), 1294.2F);
      HomeEnvironment homeEnvironment3 = homeEnvironment2.clone();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(homeEnvironment0, "f`:A[s2j|R.,'%Qsk", "j~P5FY1", homeEnvironment3);
      HomeEnvironment.DrawingMode.values();
      homeEnvironment3.getPhotoAspectRatio();
      homeEnvironment3.getDrawingMode();
      homeEnvironment0.getPhotoWidth();
      homeEnvironment1.setVideoCameraPath((List<Camera>) null);
      assertEquals(25, homeEnvironment0.getVideoWidth());
      assertEquals(19, homeEnvironment0.getVideoHeight());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.238846104111004
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment1.setVideoWidth(0);
      homeEnvironment1.setObserverCameraElevationAdjusted(false);
      homeEnvironment1.setPhotoQuality(0);
      homeEnvironment1.setAllLevelsVisible(false);
      homeEnvironment1.setVideoAspectRatio(aspectRatio0);
      homeEnvironment1.setWallsAlpha(537.1F);
      homeEnvironment1.getVideoCameraPath();
      homeEnvironment0.setPhotoHeight(12);
      homeEnvironment1.setLightColor(12);
      homeEnvironment0.setVideoQuality(13684944);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment1.setLightColor(0);
      HomeEnvironment homeEnvironment2 = homeEnvironment0.clone();
      homeEnvironment2.setVideoFrameRate(12);
      Camera camera0 = new Camera(537.1F, 537.1F, 1.5F, 0, 1.5F, 1.3333334F);
      homeEnvironment0.getVideoQuality();
      Random.setNextRandom(1111);
      AspectRatio aspectRatio1 = AspectRatio.VIEW_3D_RATIO;
      assertEquals(AspectRatio.VIEW_3D_RATIO, aspectRatio1);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.239471494980297
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment1.setVideoWidth(0);
      homeEnvironment1.setObserverCameraElevationAdjusted(false);
      homeEnvironment1.setPhotoQuality(0);
      homeEnvironment1.setAllLevelsVisible(false);
      homeEnvironment1.setVideoAspectRatio(aspectRatio0);
      homeEnvironment1.setWallsAlpha(537.1F);
      homeEnvironment1.getVideoCameraPath();
      homeEnvironment0.setPhotoHeight(12);
      homeEnvironment1.setLightColor(12);
      homeEnvironment0.setVideoQuality(13684944);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setVideoWidth((-547));
      homeEnvironment1.setLightColor(0);
      HomeEnvironment homeEnvironment2 = homeEnvironment0.clone();
      homeEnvironment2.setVideoFrameRate(12);
      AspectRatio aspectRatio1 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio1);
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Name is null
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.1873727219717733
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      int int0 = 0;
      homeEnvironment1.setVideoWidth(0);
      homeEnvironment1.setObserverCameraElevationAdjusted(false);
      homeEnvironment1.setPhotoQuality(0);
      homeEnvironment1.setAllLevelsVisible(false);
      homeEnvironment1.setVideoAspectRatio(aspectRatio0);
      homeEnvironment1.setWallsAlpha(537.1F);
      homeEnvironment1.setWallsAlpha(537.1F);
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment1.setPhotoHeight(4);
      homeEnvironment1.setLightColor(0);
      HomeEnvironment homeEnvironment2 = new HomeEnvironment();
      homeEnvironment2.setVideoQuality(13);
      homeEnvironment1.setObserverCameraElevationAdjusted(true);
      homeEnvironment1.setLightColor(6);
      homeEnvironment1.clone();
      homeEnvironment2.setVideoFrameRate(12);
      AspectRatio aspectRatio1 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio1);
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Name is null
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.1698162924117237
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setCeillingLightColor(9);
      homeEnvironment0.setWallsAlpha(9);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.getVideoHeight();
      homeEnvironment0.isAllLevelsVisible();
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      homeEnvironment0.setLightColor((-1607));
      homeEnvironment0.setPhotoHeight(9);
      homeEnvironment0.setVideoWidth((-1819));
      int int0 = homeEnvironment0.getVideoQuality();
      assertTrue(homeEnvironment0.isAllLevelsVisible());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.795294412433909
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setCeillingLightColor(0);
      Camera camera0 = new Camera(0, (-1532.2162F), 2817.228F, (-184.0F), 25.0F, (-184.0F));
      camera0.setPitch(0);
      camera0.clone();
      camera0.setZ((-324.7F));
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      linkedList0.add(camera0);
      linkedList0.spliterator();
      HomeEnvironment homeEnvironment1 = new HomeEnvironment((-1819), (HomeTexture) null, 11, (-69), (-324.7F));
      List<Camera> list0 = homeEnvironment1.getVideoCameraPath();
      homeEnvironment1.setVideoCameraPath(list0);
      homeEnvironment1.getWallsAlpha();
      homeEnvironment1.setVideoCameraPath(linkedList0);
      homeEnvironment1.isAllLevelsVisible();
      homeEnvironment1.getVideoHeight();
      homeEnvironment1.setCeillingLightColor((-1819));
      assertEquals((-1819), homeEnvironment1.getCeillingLightColor());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.300534891680103
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setCeillingLightColor(9);
      homeEnvironment0.setWallsAlpha(9);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.getVideoHeight();
      homeEnvironment0.isAllLevelsVisible();
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment0.setCeillingLightColor(9);
      homeEnvironment0.setVideoFrameRate(8192);
      homeEnvironment0.getSubpartSizeUnderLight();
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setPhotoWidth(8192);
      homeEnvironment0.setPhotoWidth(240);
      homeEnvironment0.getDrawingMode();
      assertEquals(HomeEnvironment.DrawingMode.OUTLINE, homeEnvironment0.getDrawingMode());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoHeight(1502);
      homeEnvironment0.setPhotoQuality(376);
      int int0 = homeEnvironment0.getVideoHeight();
      assertEquals(1502, homeEnvironment0.getPhotoHeight());
      assertEquals(240, int0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.100479061876036
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoWidth(13684944);
      homeEnvironment0.setPhotoWidth(13684944);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.setSkyColor(13684944);
      homeEnvironment0.setWallsAlpha(1.5F);
      homeEnvironment0.setVideoWidth(3);
      homeEnvironment0.setLightColor(11);
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.getGroundColor();
      homeEnvironment0.setPhotoWidth(12);
      assertEquals(AspectRatio.RATIO_3_2, homeEnvironment0.getPhotoAspectRatio());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.1590087786957066
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.setGroundColor(10);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL_AND_OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment1.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(linkedList0);
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment1.setVideoFrameRate(8);
      homeEnvironment1.getSkyTexture();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      homeEnvironment1.setVideoAspectRatio(aspectRatio0);
      HomeEnvironment.DrawingMode.values();
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.getVideoAspectRatio();
      HomeEnvironment homeEnvironment2 = new HomeEnvironment((-980), (HomeTexture) null, (-163), (HomeTexture) null, 10, (-163));
      homeEnvironment2.getVideoQuality();
      HomeEnvironment homeEnvironment3 = new HomeEnvironment(3086, (HomeTexture) null, 0, (HomeTexture) null, 10, 4263.845F);
      homeEnvironment3.getVideoAspectRatio();
      HomeEnvironment homeEnvironment4 = homeEnvironment0.clone();
      homeEnvironment4.getSkyColor();
      homeEnvironment4.setVideoQuality((-163));
      assertEquals(HomeEnvironment.DrawingMode.FILL_AND_OUTLINE, homeEnvironment0.getDrawingMode());
      
      int int0 = homeEnvironment2.getSkyColor();
      assertEquals((-163), int0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.023907271562916
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment0.setPhotoHeight(2395);
      homeEnvironment0.setVideoWidth(13);
      homeEnvironment0.setPhotoWidth(2395);
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      AspectRatio aspectRatio0 = homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.setVideoWidth(2395);
      homeEnvironment0.setLightColor((-380));
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setVideoCameraPath(list0);
      int int0 = homeEnvironment0.getLightColor();
      assertEquals(HomeEnvironment.DrawingMode.OUTLINE, homeEnvironment0.getDrawingMode());
      assertEquals((-380), int0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=3.1258270737189187
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setVideoWidth(0);
      homeEnvironment1.setObserverCameraElevationAdjusted(false);
      homeEnvironment1.setPhotoQuality(0);
      homeEnvironment1.setAllLevelsVisible(false);
      homeEnvironment1.setWallsAlpha(1.0F);
      homeEnvironment1.getVideoCameraPath();
      homeEnvironment0.setPhotoHeight((-5488));
      homeEnvironment1.setLightColor(612);
      homeEnvironment0.setVideoQuality(12);
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.setLightColor((-492));
      HomeEnvironment homeEnvironment2 = homeEnvironment0.clone();
      homeEnvironment1.setVideoFrameRate((-4263));
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment2.setPhotoAspectRatio(aspectRatio0);
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("xX&-('GCKR");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.xX&-('GCKR
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.880653893488026
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoHeight((-6));
      homeEnvironment0.setVideoWidth((-6));
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      homeEnvironment1.getVideoCameraPath();
      homeEnvironment1.setGroundColor(13684944);
      homeEnvironment1.setPhotoWidth((-6));
      homeEnvironment1.setLightColor(1);
      Camera.Lens camera_Lens0 = Camera.Lens.PINHOLE;
      Camera camera0 = new Camera(2014.7668F, 1530.6752F, (-6), 2014.7668F, (-91.0F), 2395.0F, 1409L, camera_Lens0);
      MockURL.getFileExample();
      homeEnvironment0.getPhotoWidth();
      homeEnvironment1.getVideoAspectRatio();
      assertEquals(1, homeEnvironment1.getLightColor());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.966442007031004
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-1819), (HomeTexture) null, (-1819), (-1819), (-1819));
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setGroundTexture((HomeTexture) null);
      homeEnvironment0.setAllLevelsVisible(false);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setGroundColor((-1819));
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment1.setPhotoWidth((-1319));
      homeEnvironment0.getVideoFrameRate();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.SUBPART_SIZE_UNDER_LIGHT;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("j~P5FY1", propertyChangeListener0);
      homeEnvironment0.setVideoWidth(25);
      HomeEnvironment homeEnvironment2 = new HomeEnvironment(25, (HomeTexture) null, 25, (HomeTexture) null, (-1819), 1294.2F);
      HomeEnvironment homeEnvironment3 = homeEnvironment2.clone();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(homeEnvironment0, "f`:A[s2j|R.,'%Qsk", "j~P5FY1", homeEnvironment3);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.setVideoWidth(2147483453);
      homeEnvironment1.setGroundColor(25);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment1.setSubpartSizeUnderLight(25);
      homeEnvironment1.setWallsAlpha(25);
      assertEquals(1610612480, homeEnvironment0.getVideoHeight());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.022794924510636
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoHeight(8);
      homeEnvironment0.setVideoFrameRate(8);
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.setGroundColor(25);
      homeEnvironment0.setVideoWidth(8);
      homeEnvironment0.setGroundColor(25);
      boolean boolean0 = false;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      homeEnvironment0.getDrawingMode();
      homeEnvironment0.getPhotoQuality();
      homeEnvironment0.getVideoFrameRate();
      homeEnvironment0.getCeillingLightColor();
      homeEnvironment0.setVideoQuality(8);
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("<%9");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.<%9
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.748058988887039
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setVideoWidth(0);
      homeEnvironment1.setObserverCameraElevationAdjusted(false);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("SKY_TEXTURE", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("SKY_TEXTURE", propertyChangeListenerProxy0);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent("SKY_TEXTURE", "PHOTO_ASPECT_RATIO", homeEnvironment1, propertyChangeListenerProxy1);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent(homeEnvironment1, "SKY_TEXTURE", object0, "PHOTO_ASPECT_RATIO");
      propertyChangeListenerProxy1.propertyChange(propertyChangeEvent1);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("&*_#usvfgQ`4BTXGzq", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy3 = new PropertyChangeListenerProxy("PHOTO_ASPECT_RATIO", propertyChangeListenerProxy2);
      PropertyChangeListenerProxy propertyChangeListenerProxy4 = new PropertyChangeListenerProxy("PHOTO_ASPECT_RATIO", propertyChangeListenerProxy0);
      propertyChangeListenerProxy4.propertyChange(propertyChangeEvent0);
      propertyChangeListenerProxy2.propertyChange(propertyChangeEvent0);
      propertyChangeListenerProxy3.propertyChange((PropertyChangeEvent) null);
      Camera camera0 = new Camera((-3224.3F), (-3224.3F), 1027.51F, (-3224.3F), 602.8392F, 1.7777778F);
      Object object1 = new Object();
      Object object2 = new Object();
      homeEnvironment1.getPhotoWidth();
      homeEnvironment1.setPhotoWidth(3131);
      homeEnvironment1.getVideoWidth();
      int int0 = homeEnvironment1.getPhotoHeight();
      assertEquals(3131, homeEnvironment1.getPhotoWidth());
      assertEquals(300, int0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=3.186383112867369
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment1.setVideoWidth(34);
      homeEnvironment1.setObserverCameraElevationAdjusted(true);
      homeEnvironment1.setPhotoQuality(0);
      homeEnvironment1.setAllLevelsVisible(true);
      homeEnvironment1.setVideoAspectRatio(aspectRatio0);
      homeEnvironment1.setWallsAlpha(34);
      homeEnvironment1.getVideoCameraPath();
      homeEnvironment0.setPhotoHeight(12);
      homeEnvironment1.setLightColor(12);
      homeEnvironment0.setVideoQuality(13684944);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment1.setLightColor(0);
      HomeEnvironment homeEnvironment2 = homeEnvironment0.clone();
      homeEnvironment2.setVideoFrameRate(12);
      AspectRatio aspectRatio1 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio1);
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Name is null
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.975507230548075
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setCeillingLightColor(9);
      homeEnvironment0.setWallsAlpha(9);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.getVideoHeight();
      homeEnvironment0.isAllLevelsVisible();
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      Camera camera0 = new Camera(240, 9, 0.0F, 1251.8F, 1251.8F, (-1.0F));
      Camera camera1 = camera0.clone();
      camera1.setZ(1251.8F);
      linkedList0.add(camera1);
      homeEnvironment0.setVideoCameraPath(linkedList0);
      homeEnvironment0.getWallsAlpha();
      homeEnvironment0.setVideoCameraPath(linkedList0);
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment0.getVideoHeight();
      homeEnvironment0.setCeillingLightColor(240);
      assertEquals(HomeEnvironment.DrawingMode.OUTLINE, homeEnvironment0.getDrawingMode());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.7518685126965625
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setCeillingLightColor(0);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      Camera camera0 = new Camera(1.0F, (-658.2812F), (-150.71542F), (-150.71542F), 2.0F, 0.0F);
      camera0.clone();
      camera0.setZ((-1819.0F));
      LinkedList<Camera> linkedList1 = new LinkedList<Camera>();
      Camera.Lens camera_Lens0 = Camera.Lens.PINHOLE;
      Camera camera1 = new Camera((-1819.0F), 0.0F, (-1819.0F), 1874.31F, 2581.499F, 3813.0F, 0L, camera_Lens0);
      linkedList1.add(camera1);
      homeEnvironment0.setVideoCameraPath(linkedList1);
      homeEnvironment0.getWallsAlpha();
      homeEnvironment0.setVideoCameraPath(linkedList0);
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment0.getVideoHeight();
      homeEnvironment0.setCeillingLightColor(11);
      assertEquals(11, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.963826488286453
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-1819), (HomeTexture) null, (-1819), (-1819), (-1819));
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setGroundTexture((HomeTexture) null);
      homeEnvironment0.setAllLevelsVisible(false);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setGroundColor((-1819));
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment0.getVideoFrameRate();
      int int0 = 13684944;
      homeEnvironment1.setVideoQuality(25);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      int int1 = 0;
      int int2 = (-569);
      homeEnvironment0.setLightColor((-569));
      HomeEnvironment homeEnvironment2 = homeEnvironment0.clone();
      homeEnvironment2.setVideoFrameRate(25);
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      String string0 = "@6";
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("@6");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.@6
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      Object object0 = new Object();
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      Object object1 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent("nQ/?tB~ rowa", "x#3 |'", (Object) null, object1);
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("{P", propertyChangeListenerProxy1);
      propertyChangeListenerProxy2.propertyChange((PropertyChangeEvent) null);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      Camera camera0 = new Camera(1.7777778F, 1027.51F, 618.0F, 1.5F, 1.7777778F, 1186.7614F);
      Object object2 = new Object();
      Object object3 = new Object();
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent(object2, "PHOTO_ASPECT_RATIO", "z[C[sYq[rTXp)BlW*P", object3);
      int int0 = homeEnvironment0.getVideoQuality();
      assertEquals(0, int0);
      
      homeEnvironment0.getGroundTexture();
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setCeillingLightColor(0);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      Camera camera0 = new Camera(1.0F, (-658.2812F), (-150.71542F), (-150.71542F), (-658.2812F), (-658.2812F));
      camera0.clone();
      camera0.setZ((-1819.0F));
      LinkedList<Camera> linkedList1 = new LinkedList<Camera>();
      homeEnvironment0.setSubpartSizeUnderLight(1874.31F);
      MockURL.getFileExample();
      MockURL.getFileExample();
      homeEnvironment0.getPhotoWidth();
      float float0 = homeEnvironment0.getSubpartSizeUnderLight();
      assertEquals(1874.31F, float0, 0.01F);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.557702411245053
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoHeight(2395);
      homeEnvironment0.setVideoWidth(8);
      homeEnvironment0.setPhotoWidth(2395);
      Camera.Lens camera_Lens0 = Camera.Lens.SPHERICAL;
      Camera camera0 = new Camera(8, 2395, 8, 1876.165F, 2395, (-324.7F), 2395, camera_Lens0);
      camera0.setZ(0.0F);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      Camera.Lens camera_Lens1 = Camera.Lens.PINHOLE;
      Camera camera1 = new Camera(692.0F, 1874.31F, 0.0F, 0L, 692.0F, 1876.165F, 59L, camera_Lens1);
      homeEnvironment0.setSubpartSizeUnderLight(415.846F);
      assertEquals(2395, homeEnvironment0.getPhotoHeight());
      
      MockURL.getFileExample();
      MockURL.getFileExample();
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      int int0 = homeEnvironment1.getPhotoWidth();
      assertEquals(400, int0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      Camera camera0 = new Camera(0.0F, 0.0F, 1.5F, 1.5F, (-2382.2517F), (-2382.2517F));
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(homeEnvironment0, "{P", "{P", camera0);
      Object object0 = new Object();
      Object object1 = new Object();
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent("nQ/?tB~ rowa", "x#3 |'", (Object) null, object1);
      propertyChangeEvent1.toString();
      propertyChangeEvent1.toString();
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("{P", propertyChangeListenerProxy1);
      propertyChangeListenerProxy2.propertyChange((PropertyChangeEvent) null);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent1);
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      Camera camera1 = new Camera(1.7777778F, 1027.51F, 618.0F, 1.5F, 1.7777778F, 1186.7614F);
      Object object2 = new Object();
      Object object3 = new Object();
      PropertyChangeEvent propertyChangeEvent2 = new PropertyChangeEvent(object2, "PHOTO_ASPECT_RATIO", "z[C[sYq[rTXp)BlW*P", object3);
      int int0 = homeEnvironment0.getVideoQuality();
      assertEquals(0, int0);
      
      float float0 = homeEnvironment0.getSubpartSizeUnderLight();
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(300, homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.9687776175299367
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("'\"xHj/Gjnji", uRLContent0, 0.0F, 0.0F, false);
      catalogTexture0.setCategory((TexturesCategory) null);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-2457), homeTexture0, (-2457), homeTexture0, (-2457), 0.0F);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setLightColor(1257);
      homeEnvironment1.setVideoQuality(1932735283);
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      homeEnvironment2.setLightColor(1107);
      HomeEnvironment homeEnvironment3 = homeEnvironment1.clone();
      homeEnvironment0.setVideoFrameRate(0);
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment3.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.getPhotoWidth();
      homeEnvironment2.setPhotoWidth(1257);
      homeEnvironment1.getVideoWidth();
      homeEnvironment1.getVideoAspectRatio();
      homeEnvironment3.getDrawingMode();
      int int0 = homeEnvironment2.getSkyColor();
      assertEquals(0, homeEnvironment0.getVideoFrameRate());
      assertEquals((-2457), int0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.clone();
      homeEnvironment0.setVideoWidth(1006);
      homeEnvironment0.getVideoQuality();
      homeEnvironment0.getGroundColor();
      int int0 = homeEnvironment0.getVideoWidth();
      assertEquals(755, homeEnvironment0.getVideoHeight());
      assertEquals(1006, int0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("PITCH", "", (Content) null, (-461), 206.31483F, "Sg jE");
      TexturesCategory texturesCategory0 = new TexturesCategory("Sg jE");
      catalogTexture0.setCategory(texturesCategory0);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-461), homeTexture0, (-461), 0, (-461));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.WALLS_ALPHA;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("PITCH", propertyChangeListener0);
      homeEnvironment1.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      int int0 = homeEnvironment0.getLightColor();
      assertEquals(0, int0);
      
      int int1 = homeEnvironment0.getVideoWidth();
      assertEquals((-461), homeEnvironment0.getSkyColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(320, int1);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertNotSame(homeEnvironment0, homeEnvironment1);
      assertEquals((-461), homeEnvironment0.getGroundColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals((-461.0F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.5137801058392384
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoHeight(2395);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment0.setVideoCameraPath(linkedList0);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "CEILING_LIGHT_COLOR");
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.getVideoCameraPath();
      int int0 = homeEnvironment0.getLightColor();
      assertEquals(AspectRatio.RATIO_3_2, homeEnvironment0.getPhotoAspectRatio());
      assertEquals(13684944, int0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.5137801058392384
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setVideoWidth(0);
      homeEnvironment1.setObserverCameraElevationAdjusted(false);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("SKY_TEXTURE", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("SKY_TEXTURE", propertyChangeListenerProxy0);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent("SKY_TEXTURE", "PHOTO_ASPECT_RATIO", homeEnvironment1, propertyChangeListenerProxy1);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent(homeEnvironment1, "SKY_TEXTURE", object0, "PHOTO_ASPECT_RATIO");
      propertyChangeListenerProxy1.propertyChange(propertyChangeEvent1);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("&*_#usvfgQ`4BTXGzq", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy3 = new PropertyChangeListenerProxy("PHOTO_ASPECT_RATIO", propertyChangeListenerProxy2);
      PropertyChangeListenerProxy propertyChangeListenerProxy4 = new PropertyChangeListenerProxy("PHOTO_ASPECT_RATIO", propertyChangeListenerProxy0);
      propertyChangeListenerProxy4.propertyChange(propertyChangeEvent0);
      propertyChangeListenerProxy2.propertyChange(propertyChangeEvent0);
      propertyChangeListenerProxy3.propertyChange((PropertyChangeEvent) null);
      PropertyChangeListenerProxy propertyChangeListenerProxy5 = new PropertyChangeListenerProxy("SKY_TEXTURE", propertyChangeListenerProxy3);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.OBSERVER_CAMERA_ELEVATION_ADJUSTED;
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy1);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment1.setPhotoAspectRatio(aspectRatio0);
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("WALLS_ALPHA");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.WALLS_ALPHA
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.7787755691845217
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment0.setPhotoQuality(677);
      homeEnvironment0.setPhotoHeight(2395);
      homeEnvironment0.setVideoWidth(13);
      homeEnvironment0.setPhotoWidth(2395);
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.setSubpartSizeUnderLight(0.0F);
      MockURL.getFileExample();
      MockURL.getFileExample();
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "editorSubFolder.Mac OS X");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "u4TSq)W1Zx1x");
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.5137801058392384
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setVideoWidth(0);
      homeEnvironment1.setObserverCameraElevationAdjusted(false);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("SKY_TEXTURE", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("SKY_TEXTURE", propertyChangeListenerProxy0);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent("SKY_TEXTURE", "PHOTO_ASPECT_RATIO", homeEnvironment1, propertyChangeListenerProxy1);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent(homeEnvironment1, "SKY_TEXTURE", object0, "PHOTO_ASPECT_RATIO");
      propertyChangeListenerProxy1.propertyChange(propertyChangeEvent1);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      propertyChangeListenerProxy1.propertyChange((PropertyChangeEvent) null);
      Camera camera0 = new Camera(0, (-201.34465F), 1186.7614F, 2.0F, 2.0F, 1294.2F);
      PropertyChangeEvent propertyChangeEvent2 = new PropertyChangeEvent("z[C[sYq[rTXp)BlW*P", (String) null, "||X$jVt", camera0);
      homeEnvironment0.getVideoQuality();
      int int0 = homeEnvironment1.getSkyColor();
      assertFalse(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(0, homeEnvironment1.getVideoHeight());
      assertEquals(13427964, int0);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.7787755691845217
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "'\"xHj/Gjnji");
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("'\"xHj/Gjnji", uRLContent0, 0.0F, 0.0F, false);
      catalogTexture0.setCategory((TexturesCategory) null);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setLightColor(10);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.getVideoHeight();
      homeEnvironment0.setGroundTexture(homeTexture0);
      HomeEnvironment.DrawingMode.values();
      homeEnvironment0.getPhotoAspectRatio();
      assertEquals(10, homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.DrawingMode.values();
      homeEnvironment0.setPhotoQuality((-338));
      assertEquals((-338), homeEnvironment0.getPhotoQuality());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.9663881312694826
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.OBSERVER_CAMERA_ELEVATION_ADJUSTED;
      homeEnvironment0.setWallsAlpha((-324.7F));
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("e0&}`~B", propertyChangeListener0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(homeEnvironment0, "e0&}`~B", "e0&}`~B", homeEnvironment1);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      HomeEnvironment homeEnvironment2 = homeEnvironment0.clone();
      homeEnvironment2.getVideoCameraPath();
      homeEnvironment2.setPhotoHeight(2048);
      homeEnvironment0.setVideoFrameRate(2048);
      homeEnvironment2.getVideoHeight();
      HomeEnvironment.DrawingMode[] homeEnvironment_DrawingModeArray0 = HomeEnvironment.DrawingMode.values();
      assertEquals(3, homeEnvironment_DrawingModeArray0.length);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      homeEnvironment0.setCeillingLightColor(13);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      homeEnvironment0.setVideoFrameRate(1111);
      propertyChangeListenerProxy1.propertyChange((PropertyChangeEvent) null);
      propertyChangeListenerProxy1.propertyChange((PropertyChangeEvent) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "editorSubFolder.Mac OS X");
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=3.0227949245106362
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      CatalogTexture catalogTexture0 = new CatalogTexture("VIDEO_ASPECT_RATIO", (Content) null, (-57.8F), 0.0F);
      catalogTexture0.setCategory((TexturesCategory) null);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setSkyTexture(homeTexture0);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_16_9;
      homeEnvironment0.setGroundColor(7);
      homeEnvironment0.setWallsAlpha(2817.228F);
      homeEnvironment0.setWallsAlpha(0.0F);
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setVideoQuality(0);
      homeEnvironment0.setSubpartSizeUnderLight(2817.228F);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      AspectRatio aspectRatio1 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setVideoAspectRatio(aspectRatio1);
      homeEnvironment0.setPhotoHeight(4906);
      int int0 = homeEnvironment0.getVideoQuality();
      assertEquals(2817.228F, homeEnvironment0.getSubpartSizeUnderLight(), 0.01F);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      URL uRL0 = MockURL.getFtpExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("", temporaryURLContent0, 200.52925F, 200.52925F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1081, homeTexture0, 1081, homeTexture0, 1081, 200.52925F);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "ikv dTDxQ#IG2(V");
      homeEnvironment0.getPhotoQuality();
      HomeEnvironment.Property.values();
      int int0 = homeEnvironment0.getVideoFrameRate();
      assertEquals(25, int0);
      
      int int1 = homeEnvironment0.getPhotoQuality();
      assertEquals(0, int1);
      
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      float float0 = homeEnvironment0.getSubpartSizeUnderLight();
      assertEquals(1081, homeEnvironment0.getLightColor());
      assertNotSame(homeEnvironment0, homeEnvironment1);
      assertEquals(1081, homeEnvironment0.getSkyColor());
      assertEquals(200.52925F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(1081, homeEnvironment0.getGroundColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.852140740384332
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setVideoWidth(0);
      homeEnvironment1.setObserverCameraElevationAdjusted(false);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("SKY_TEXTURE", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("SKY_TEXTURE", propertyChangeListenerProxy0);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent("SKY_TEXTURE", "PHOTO_ASPECT_RATIO", homeEnvironment1, propertyChangeListenerProxy1);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent(homeEnvironment1, "SKY_TEXTURE", object0, "PHOTO_ASPECT_RATIO");
      propertyChangeListenerProxy1.propertyChange(propertyChangeEvent1);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("&*_#usvfgQ`4BTXGzq", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy3 = new PropertyChangeListenerProxy("PHOTO_ASPECT_RATIO", propertyChangeListenerProxy2);
      homeEnvironment1.setLightColor(0);
      homeEnvironment1.setVideoQuality((-5488));
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setLightColor(1127);
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      homeEnvironment2.setVideoFrameRate(0);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment1.setVideoAspectRatio(aspectRatio0);
      HomeEnvironment.DrawingMode.values();
      homeEnvironment1.getPhotoAspectRatio();
      assertEquals((-5488), homeEnvironment1.getVideoQuality());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=3.2235185382845533
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment1.setVideoWidth(0);
      homeEnvironment1.setObserverCameraElevationAdjusted(true);
      homeEnvironment1.setPhotoQuality(0);
      homeEnvironment1.setAllLevelsVisible(true);
      homeEnvironment1.setVideoAspectRatio(aspectRatio0);
      homeEnvironment1.setWallsAlpha(537.1F);
      homeEnvironment1.getVideoCameraPath();
      homeEnvironment0.setPhotoHeight(12);
      homeEnvironment1.setLightColor(12);
      homeEnvironment0.setVideoQuality(13684944);
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment1.setLightColor(12);
      HomeEnvironment homeEnvironment2 = homeEnvironment0.clone();
      homeEnvironment2.setVideoFrameRate(2987);
      AspectRatio aspectRatio1 = AspectRatio.FREE_RATIO;
      homeEnvironment2.setPhotoAspectRatio(aspectRatio1);
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Name is null
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.748058988887039
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, 0, 1.3333334F);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL;
      homeEnvironment1.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment1.setVideoFrameRate(0);
      homeEnvironment1.setVideoQuality(0);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setSkyColor(0);
      homeEnvironment1.setVideoAspectRatio(aspectRatio0);
      homeEnvironment1.setVideoWidth(0);
      assertEquals(AspectRatio.RATIO_3_2, homeEnvironment1.getVideoAspectRatio());
      
      homeEnvironment0.getVideoQuality();
      assertEquals(240, homeEnvironment0.getVideoHeight());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.557702411245053
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoHeight(13);
      homeEnvironment0.setVideoWidth(17);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      homeEnvironment1.setPhotoWidth(17);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      int int0 = homeEnvironment0.getPhotoWidth();
      assertEquals(13, homeEnvironment0.getPhotoHeight());
      assertEquals(400, int0);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      URL uRL0 = MockURL.getFtpExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      homeEnvironment1.setSkyColor(319);
      CatalogTexture catalogTexture0 = new CatalogTexture("K;)+G.(ICS", "", temporaryURLContent0, (-2495.829F), (-2495.829F), "ALL_LEVELS_VISIBLE", false);
      // Undeclared exception!
      try { 
        temporaryURLContent0.getJAREntryName();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Content isn't a JAR entry
         //
         verifyException("com.eteks.sweethome3d.tools.URLContent", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.5137801058392384
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setVideoWidth(0);
      homeEnvironment1.setObserverCameraElevationAdjusted(false);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("SKY_TEXTURE", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("SKY_TEXTURE", propertyChangeListenerProxy0);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent("SKY_TEXTURE", "PHOTO_ASPECT_RATIO", homeEnvironment1, propertyChangeListenerProxy1);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent(homeEnvironment1, "SKY_TEXTURE", object0, "PHOTO_ASPECT_RATIO");
      propertyChangeListenerProxy1.propertyChange(propertyChangeEvent1);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      assertFalse(homeEnvironment1.isObserverCameraElevationAdjusted());
      
      propertyChangeListenerProxy1.propertyChange((PropertyChangeEvent) null);
      Camera camera0 = new Camera(0, (-201.34465F), 1186.7614F, 2.0F, 2.0F, 1294.2F);
      PropertyChangeEvent propertyChangeEvent2 = new PropertyChangeEvent("z[C[sYq[rTXp)BlW*P", (String) null, "||X$jVt", camera0);
      homeEnvironment0.getVideoQuality();
      homeEnvironment0.getVideoCameraPath();
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "'\"xHj/Gjnji");
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("'\"xHj/Gjnji", uRLContent0, 0.0F, 0.0F, false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setCeillingLightColor((-2062));
      homeEnvironment0.setLightColor(10);
      AspectRatio aspectRatio0 = AspectRatio.VIEW_3D_RATIO;
      // Undeclared exception!
      try { 
        homeEnvironment0.setVideoAspectRatio(aspectRatio0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unsupported aspect ratio VIEW_3D_RATIO
         //
         verifyException("com.eteks.sweethome3d.model.HomeEnvironment", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=3.193764486816496
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(13, (HomeTexture) null, 13, 13, 13);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.clone();
      homeEnvironment1.setGroundTexture((HomeTexture) null);
      homeEnvironment1.setGroundColor((-54));
      homeEnvironment1.getSkyTexture();
      homeEnvironment0.setVideoWidth(2846);
      homeEnvironment1.getGroundColor();
      AspectRatio aspectRatio0 = AspectRatio.VIEW_3D_RATIO;
      homeEnvironment1.setPhotoAspectRatio(aspectRatio0);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)55;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      homeEnvironment1.setLightColor(13);
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.getVideoWidth();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      homeEnvironment1.getVideoAspectRatio();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      homeEnvironment1.getSkyColor();
      homeEnvironment1.getPhotoAspectRatio();
      homeEnvironment1.getDrawingMode();
      HomeEnvironment.Property[] homeEnvironment_PropertyArray0 = HomeEnvironment.Property.values();
      assertEquals(20, homeEnvironment_PropertyArray0.length);
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.75012938226178
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setVideoWidth(0);
      homeEnvironment1.setObserverCameraElevationAdjusted(false);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("SKY_TEXTURE", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("SKY_TEXTURE", propertyChangeListenerProxy0);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent("SKY_TEXTURE", "PHOTO_ASPECT_RATIO", homeEnvironment1, propertyChangeListenerProxy1);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent(homeEnvironment1, "SKY_TEXTURE", object0, "PHOTO_ASPECT_RATIO");
      propertyChangeListenerProxy1.propertyChange(propertyChangeEvent1);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("&*_#usvfgQ`4BTXGzq", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy3 = new PropertyChangeListenerProxy("PHOTO_ASPECT_RATIO", propertyChangeListenerProxy2);
      PropertyChangeListenerProxy propertyChangeListenerProxy4 = new PropertyChangeListenerProxy("PHOTO_ASPECT_RATIO", propertyChangeListenerProxy0);
      propertyChangeListenerProxy4.propertyChange(propertyChangeEvent0);
      propertyChangeListenerProxy3.propertyChange(propertyChangeEvent0);
      propertyChangeListenerProxy2.propertyChange(propertyChangeEvent0);
      propertyChangeListenerProxy3.propertyChange((PropertyChangeEvent) null);
      Camera camera0 = new Camera((-3224.3F), (-3224.3F), 1027.51F, (-3224.3F), 602.8392F, 1.7777778F);
      Object object1 = new Object();
      Object object2 = new Object();
      homeEnvironment1.getPhotoWidth();
      homeEnvironment1.setPhotoWidth(3131);
      homeEnvironment1.getVideoWidth();
      Random.setNextRandom((-2998));
      homeEnvironment1.getVideoFrameRate();
      assertEquals(3131, homeEnvironment1.getPhotoWidth());
      
      int int0 = homeEnvironment0.getVideoFrameRate();
      assertEquals(25, int0);
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.7914234446919735
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoHeight(2395);
      homeEnvironment0.setVideoWidth(8);
      homeEnvironment0.setPhotoWidth(2395);
      Camera.Lens camera_Lens0 = Camera.Lens.SPHERICAL;
      Camera camera0 = new Camera(8, 2395, 8, 1874.31F, 2395, (-324.7F), 2395, camera_Lens0);
      camera0.setZ(0.0F);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      Camera.Lens camera_Lens1 = Camera.Lens.PINHOLE;
      Camera camera1 = new Camera(692.0F, 1874.31F, 0.0F, 0L, 692.0F, 1874.31F, 59L, camera_Lens1);
      linkedList0.add(camera1);
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment0.getWallsAlpha();
      homeEnvironment0.setVideoCameraPath(linkedList0);
      homeEnvironment0.isAllLevelsVisible();
      int int0 = homeEnvironment0.getPhotoWidth();
      assertEquals(8, homeEnvironment0.getVideoWidth());
      assertEquals(2395, int0);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.6376398674083723
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setVideoWidth(0);
      homeEnvironment1.setObserverCameraElevationAdjusted(false);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("SKY_TEXTURE", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("SKY_TEXTURE", propertyChangeListenerProxy0);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent("SKY_TEXTURE", "PHOTO_ASPECT_RATIO", homeEnvironment1, propertyChangeListenerProxy1);
      propertyChangeListenerProxy1.propertyChange((PropertyChangeEvent) null);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent(homeEnvironment1, "SKY_TEXTURE", object0, "PHOTO_ASPECT_RATIO");
      propertyChangeListenerProxy1.propertyChange(propertyChangeEvent1);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      assertFalse(homeEnvironment1.isObserverCameraElevationAdjusted());
      
      propertyChangeListenerProxy1.propertyChange((PropertyChangeEvent) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Camera camera0 = new Camera(0, (-201.34465F), 1186.7614F, 2.0F, 2.0F, 1292.6882F);
      PropertyChangeEvent propertyChangeEvent2 = new PropertyChangeEvent("z[C[sYq[rTXp)BlW*P", (String) null, "||X$jVt", camera0);
      homeEnvironment0.getVideoQuality();
      boolean boolean0 = homeEnvironment0.isObserverCameraElevationAdjusted();
      assertTrue(boolean0);
      
      int int0 = homeEnvironment0.getGroundColor();
      assertEquals(11053224, int0);
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      
      homeEnvironment0.setCeillingLightColor(0);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("FR>rFn", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("fWg/f Z`}rL:1xz#oX", propertyChangeListenerProxy0);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_WIDTH;
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy1);
      assertEquals(0, homeEnvironment0.getCeillingLightColor());
  }
}
