/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 17:43:52 GMT 2019
 */

package net.sourceforge.schemaspy.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.sql.Connection;
import java.sql.DatabaseMetaData;
import java.sql.ResultSet;
import java.util.LinkedList;
import java.util.List;
import net.sourceforge.schemaspy.Config;
import net.sourceforge.schemaspy.model.ForeignKeyConstraint;
import net.sourceforge.schemaspy.model.Table;
import net.sourceforge.schemaspy.model.TableColumn;
import net.sourceforge.schemaspy.model.xml.SchemaMeta;
import net.sourceforge.schemaspy.model.xml.TableColumnMeta;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ForeignKeyConstraint_ESTest extends ForeignKeyConstraint_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.161528110879957
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int int0 = (-1);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "LhPT^C", 254, 0);
      foreignKeyConstraint0.isCascadeOnDelete();
      foreignKeyConstraint0.isReal();
      foreignKeyConstraint0.getDeleteRuleName();
      foreignKeyConstraint0.isRestrictDelete();
      foreignKeyConstraint0.isCascadeOnDelete();
      foreignKeyConstraint0.getDeleteRuleDescription();
      Config config0 = new Config();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      DatabaseMetaData databaseMetaData0 = mock(DatabaseMetaData.class, new ViolatedAssumptionAnswer());
      String string0 = "@eG|hn";
      String string1 = " references ";
      SchemaMeta schemaMeta0 = null;
      try {
        schemaMeta0 = new SchemaMeta("EXTERNAL", "LhPT^C", (String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Specified meta file \"EXTERNAL\" does not exist
         //
         verifyException("net.sourceforge.schemaspy.model.xml.SchemaMeta", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.5982538439717047
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "t", 2713, 0);
      Config config0 = Config.getInstance();
      config0.getMeta();
      String[] stringArray0 = new String[0];
      Config config1 = new Config(stringArray0);
      Config config2 = new Config(stringArray0);
      config2.getCatalog();
      Config config3 = Config.getInstance();
      config3.getDriverPath();
      FileSystemHandling.shouldAllThrowIOExceptions();
      config2.getDriverPath();
      config0.getLogLevel();
      config2.getSqlFormatter();
      Config config4 = new Config();
      config3.setDriverPath("aNqL~z3u3");
      config0.setDriverPath((String) null);
      String string0 = foreignKeyConstraint0.getDeleteRuleName();
      assertEquals("Cascade on delete", string0);
      
      String string1 = foreignKeyConstraint0.getDeleteRuleAlias();
      assertEquals(2713, foreignKeyConstraint0.getUpdateRule());
      assertEquals("C", string1);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      LinkedList<TableColumn> linkedList0 = new LinkedList<TableColumn>();
      linkedList0.addFirst((TableColumn) null);
      // Undeclared exception!
      try { 
        ForeignKeyConstraint.toString((List<TableColumn>) linkedList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.ForeignKeyConstraint", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.5982538439717047
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "zXaZHZ", (-1), 1);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Config config0 = new Config();
      String string0 = foreignKeyConstraint0.getDeleteRuleAlias();
      assertEquals("R", string0);
      
      System.setCurrentTimeMillis(0L);
      String string1 = foreignKeyConstraint0.getDeleteRuleName();
      assertEquals("Restrict delete", string1);
      assertEquals((-1), foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.029158455224637
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      String string0 = "/]fQcy#cs-Ea+b*R";
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Table table0 = null;
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "/]fQcy#cs-Ea+b*R", (-1), 2166);
      foreignKeyConstraint0.isCascadeOnDelete();
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, " via ", 206, 1);
      foreignKeyConstraint0.isCascadeOnDelete();
      foreignKeyConstraint0.isCascadeOnDelete();
      foreignKeyConstraint1.getDeleteRuleName();
      foreignKeyConstraint1.isRestrictDelete();
      ForeignKeyConstraint foreignKeyConstraint2 = new ForeignKeyConstraint((Table) null, "PrH[PHjqZU", 1, 2166);
      foreignKeyConstraint2.isCascadeOnDelete();
      foreignKeyConstraint0.getDeleteRuleDescription();
      Config.getInstance();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      DatabaseMetaData databaseMetaData0 = mock(DatabaseMetaData.class, new ViolatedAssumptionAnswer());
      String string1 = "3l5yF5KDi<.+h UA";
      SchemaMeta schemaMeta0 = null;
      try {
        schemaMeta0 = new SchemaMeta("PrH[PHjqZU", "UTF-8", "Restrict delete");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Specified meta file \"PrH[PHjqZU\" does not exist
         //
         verifyException("net.sourceforge.schemaspy.model.xml.SchemaMeta", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.053882356878545
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta0).getComments();
      doReturn((String) null).when(tableColumnMeta0).getDefaultValue();
      doReturn(0).when(tableColumnMeta0).getDigits();
      doReturn((String) null).when(tableColumnMeta0).getId();
      doReturn((String) null).when(tableColumnMeta0).getName();
      doReturn(0).when(tableColumnMeta0).getSize();
      doReturn((String) null).when(tableColumnMeta0).getType();
      doReturn(false).when(tableColumnMeta0).isAutoUpdated();
      doReturn(false).when(tableColumnMeta0).isNullable();
      TableColumn tableColumn0 = new TableColumn((Table) null, tableColumnMeta0);
      tableColumn0.setShortType("gohJim");
      tableColumn0.setShortType("gohJim");
      TableColumnMeta tableColumnMeta1 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta1).getComments();
      doReturn((String) null).when(tableColumnMeta1).getDefaultValue();
      doReturn(0).when(tableColumnMeta1).getDigits();
      doReturn((String) null).when(tableColumnMeta1).getId();
      doReturn((String) null).when(tableColumnMeta1).getName();
      doReturn(0).when(tableColumnMeta1).getSize();
      doReturn((String) null).when(tableColumnMeta1).getType();
      doReturn(false).when(tableColumnMeta1).isAutoUpdated();
      doReturn(false).when(tableColumnMeta1).isNullable();
      TableColumn tableColumn1 = new TableColumn((Table) null, tableColumnMeta1);
      tableColumn0.removeChild(tableColumn1);
      tableColumn0.setComments("");
      tableColumn0.removeAParentFKConstraint();
      tableColumn0.setComments("");
      tableColumn0.setIsAutoUpdated(true);
      tableColumn1.removeParent(tableColumn0);
      ForeignKeyConstraint foreignKeyConstraint0 = null;
      try {
        foreignKeyConstraint0 = new ForeignKeyConstraint(tableColumn0, tableColumn1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.TableColumn", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.5179872908529677
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ",");
      String[] stringArray0 = new String[0];
      Config config0 = new Config(stringArray0);
      Config.getInstance();
      config0.getMeta();
      Config config1 = new Config(stringArray0);
      System.setCurrentTimeMillis(1L);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, (String) null, (-447), (-447));
      foreignKeyConstraint0.getDeleteRuleName();
      foreignKeyConstraint0.getName();
      assertEquals((-447), foreignKeyConstraint0.getDeleteRule());
      assertEquals((-447), foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.2407560846182575
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "t0'EX3j{?)+kQ{su)", 2474, 2474);
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "3%8/Kc00", (-1), 3);
      foreignKeyConstraint1.getDeleteRuleDescription();
      Integer integer0 = new Integer(2637);
      assertEquals(2637, (int)integer0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.2407560846182575
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[16];
      byteArray0[1] = (byte) (-24);
      byteArray0[2] = (byte)21;
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "/]fQcy#cs-Ea+b*R", 254, 2);
      Config config0 = new Config();
      config0.getMeta();
      String[] stringArray0 = new String[0];
      Config config1 = new Config(stringArray0);
      config1.setDriverPath("/]fQcy#cs-Ea+b*R");
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "N", 2, (-1039));
      foreignKeyConstraint0.getDeleteRuleDescription();
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      DatabaseMetaData databaseMetaData0 = mock(DatabaseMetaData.class, new ViolatedAssumptionAnswer());
      Connection connection0 = null;
      String[] stringArray1 = new String[3];
      stringArray1[0] = null;
      stringArray1[1] = null;
      stringArray1[2] = "/]fQcy#cs-Ea+b*R";
      Config config2 = null;
      try {
        config2 = new Config(stringArray1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.Config", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "/]fQcy#cs-Ea+b*R", 254, 2);
      Config config0 = Config.getInstance();
      Integer integer0 = new Integer(2);
      Integer.compareUnsigned(2, 254);
      config0.setPort(integer0);
      config0.getMeta();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "/]fQcy#cs-Ea+b*R";
      stringArray0[1] = "/]fQcy#cs-Ea+b*R";
      config0.isLogoEnabled();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)79;
      byteArray0[1] = (byte)2;
      byteArray0[2] = (byte) (-103);
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta0).getComments();
      doReturn((String) null).when(tableColumnMeta0).getDefaultValue();
      doReturn(0).when(tableColumnMeta0).getDigits();
      doReturn((String) null).when(tableColumnMeta0).getId();
      doReturn((String) null).when(tableColumnMeta0).getName();
      doReturn(0).when(tableColumnMeta0).getSize();
      doReturn((String) null).when(tableColumnMeta0).getType();
      doReturn(false).when(tableColumnMeta0).isAutoUpdated();
      doReturn(false).when(tableColumnMeta0).isNullable();
      TableColumn tableColumn0 = new TableColumn((Table) null, tableColumnMeta0);
      tableColumn0.setIsAutoUpdated(true);
      TableColumnMeta tableColumnMeta1 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta1).getComments();
      doReturn((String) null).when(tableColumnMeta1).getDefaultValue();
      doReturn(0).when(tableColumnMeta1).getDigits();
      doReturn((String) null).when(tableColumnMeta1).getId();
      doReturn((String) null).when(tableColumnMeta1).getName();
      doReturn(0).when(tableColumnMeta1).getSize();
      doReturn((String) null).when(tableColumnMeta1).getType();
      doReturn(false).when(tableColumnMeta1).isAutoUpdated();
      doReturn(false).when(tableColumnMeta1).isNullable();
      TableColumn tableColumn1 = new TableColumn((Table) null, tableColumnMeta1);
      TableColumnMeta tableColumnMeta2 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta2).getComments();
      doReturn((String) null).when(tableColumnMeta2).getDefaultValue();
      doReturn(0).when(tableColumnMeta2).getDigits();
      doReturn((String) null).when(tableColumnMeta2).getId();
      doReturn((String) null).when(tableColumnMeta2).getName();
      doReturn(0).when(tableColumnMeta2).getSize();
      doReturn((String) null).when(tableColumnMeta2).getType();
      doReturn(false).when(tableColumnMeta2).isAutoUpdated();
      doReturn(false).when(tableColumnMeta2).isNullable();
      TableColumn tableColumn2 = new TableColumn((Table) null, tableColumnMeta2);
      tableColumn0.removeParent(tableColumn2);
      ForeignKeyConstraint foreignKeyConstraint1 = null;
      try {
        foreignKeyConstraint1 = new ForeignKeyConstraint((TableColumn) null, tableColumn1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.TableColumn", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.4942662253853725
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", 3316, 3316);
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "!u!Ob.gX1cS0|H~A", 3316, 1);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)2;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      int int0 = foreignKeyConstraint0.compareTo(foreignKeyConstraint1);
      Integer integer0 = new Integer(3268);
      assertFalse(integer0.equals((Object)int0));
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "lq>h", 769, 769);
      int int0 = foreignKeyConstraint0.getDeleteRule();
      assertEquals(769, foreignKeyConstraint0.getUpdateRule());
      assertEquals(769, int0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.8837093036731862
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "n&g[ek){3o", (-1), (-1));
      foreignKeyConstraint0.getDeleteRuleAlias();
      System.setCurrentTimeMillis(0L);
      Config config0 = Config.getInstance();
      config0.setDriverPath(">[K0z,mh]Y]'\"");
      foreignKeyConstraint0.getDeleteRuleDescription();
      foreignKeyConstraint0.getDeleteRuleName();
      int int0 = foreignKeyConstraint0.getDeleteRule();
      assertEquals((-1), foreignKeyConstraint0.getUpdateRule());
      assertEquals((-1), int0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta0).getComments();
      doReturn((String) null).when(tableColumnMeta0).getDefaultValue();
      doReturn(0).when(tableColumnMeta0).getDigits();
      doReturn((String) null).when(tableColumnMeta0).getId();
      doReturn((String) null).when(tableColumnMeta0).getName();
      doReturn(0).when(tableColumnMeta0).getSize();
      doReturn((String) null).when(tableColumnMeta0).getType();
      doReturn(false).when(tableColumnMeta0).isAutoUpdated();
      doReturn(false).when(tableColumnMeta0).isNullable();
      TableColumn tableColumn0 = new TableColumn((Table) null, tableColumnMeta0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      tableColumn0.setShortType("gohJim");
      tableColumn0.setShortType("gohJim");
      TableColumnMeta tableColumnMeta1 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta1).getComments();
      doReturn((String) null).when(tableColumnMeta1).getDefaultValue();
      doReturn(0).when(tableColumnMeta1).getDigits();
      doReturn((String) null).when(tableColumnMeta1).getId();
      doReturn((String) null).when(tableColumnMeta1).getName();
      doReturn(0).when(tableColumnMeta1).getSize();
      doReturn((String) null).when(tableColumnMeta1).getType();
      doReturn(false).when(tableColumnMeta1).isAutoUpdated();
      doReturn(false).when(tableColumnMeta1).isNullable();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      TableColumn tableColumn1 = new TableColumn((Table) null, tableColumnMeta1);
      tableColumn0.removeChild(tableColumn1);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      Integer integer0 = new Integer((-146));
      System.setCurrentTimeMillis(0L);
      ForeignKeyConstraint foreignKeyConstraint0 = null;
      try {
        foreignKeyConstraint0 = new ForeignKeyConstraint(tableColumn1, tableColumn1, 626, 3031);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.TableColumn", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "}A}h1TZA}]_", 3316, 3316);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "}A}h1TZA}]_";
      stringArray0[1] = "}A}h1TZA}]_";
      foreignKeyConstraint0.addChildColumn((TableColumn) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      DatabaseMetaData databaseMetaData0 = mock(DatabaseMetaData.class, new ViolatedAssumptionAnswer());
      Connection connection1 = mock(Connection.class, new ViolatedAssumptionAnswer());
      DatabaseMetaData databaseMetaData1 = mock(DatabaseMetaData.class, new ViolatedAssumptionAnswer());
      foreignKeyConstraint0.addParentColumn((TableColumn) null);
      List<TableColumn> list0 = foreignKeyConstraint0.getChildColumns();
      assertEquals(3316, foreignKeyConstraint0.getDeleteRule());
      assertEquals(3316, foreignKeyConstraint0.getUpdateRule());
      assertEquals(0, list0.size());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", 3316, 3316);
      String[] stringArray0 = new String[12];
      stringArray0[0] = "";
      stringArray0[2] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[5] = "";
      stringArray0[7] = "";
      stringArray0[8] = "";
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-103);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byteArray0[1] = (byte)29;
      byteArray0[2] = (byte)2;
      byteArray0[3] = (byte) (-103);
      byteArray0[4] = (byte)2;
      System.setCurrentTimeMillis((-1869L));
      Integer integer0 = new Integer(46);
      foreignKeyConstraint0.getChildTable();
      foreignKeyConstraint0.getParentTable();
      assertEquals(3316, foreignKeyConstraint0.getDeleteRule());
      assertEquals(3316, foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "/]fQcy#cs-Ea+b*R");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "/]fQcy#cs-Ea+b*R");
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "schemaspy.pw", (-1), (-1354));
      foreignKeyConstraint0.isCascadeOnDelete();
      System.setCurrentTimeMillis(783L);
      System.setCurrentTimeMillis((-3231L));
      Integer integer0 = new Integer((-1354));
      assertEquals((-1354), (int)integer0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.4942662253853725
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", (-2514), (-1883));
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "plKEf7|{5\"GvV~Ir ", (-2514), (-2296));
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      foreignKeyConstraint1.compareTo(foreignKeyConstraint0);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      System.setCurrentTimeMillis((-2296));
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "/]fQcy#cs-Ea+b*R", 254, 2);
      Config config0 = new Config();
      config0.getMeta();
      EvoSuiteFile evoSuiteFile0 = null;
      String[] stringArray0 = new String[0];
      Config config1 = new Config(stringArray0);
      config1.getDriverPath();
      config1.getLogLevel();
      config0.getSqlFormatter();
      config0.getDbProperties();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)114;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      // Undeclared exception!
      try { 
        foreignKeyConstraint0.compareTo((ForeignKeyConstraint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.ForeignKeyConstraint", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.7937175017485838
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      String string0 = "";
      Table table0 = null;
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", 3316, 3316);
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "", 253, 253);
      String[] stringArray0 = new String[12];
      stringArray0[0] = "";
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte) (-118);
      byteArray0[2] = (byte) (-103);
      // Undeclared exception!
      try { 
        foreignKeyConstraint1.compareTo(foreignKeyConstraint0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.shouldAllThrowIOExceptions();
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "/]fQcy#cs-Ea+b*R", (-16), 1811);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "-?";
      Config config0 = new Config(stringArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Config config1 = new Config(stringArray0);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      foreignKeyConstraint0.isImplied();
      Integer integer0 = new Integer(1);
      assertEquals(1, (int)integer0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", 3316, 3316);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      System.setCurrentTimeMillis(253);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      System.setCurrentTimeMillis(1129L);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "SFS@.'N7|Kb@kgkB54", 2727, 4);
      foreignKeyConstraint1.getUpdateRule();
      System.setCurrentTimeMillis(2727);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[3];
      FileSystemHandling.shouldAllThrowIOExceptions();
      byteArray0[0] = (byte) (-103);
      byteArray0[2] = (byte) (-103);
      System.setCurrentTimeMillis((byte) (-103));
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      System.setCurrentTimeMillis(0L);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, " remoteSchema: ", (byte) (-118), (-802));
      foreignKeyConstraint0.getUpdateRule();
      System.setCurrentTimeMillis((byte) (-118));
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "C", 1834, 3);
      foreignKeyConstraint0.isRestrictDelete();
      SchemaMeta schemaMeta0 = null;
      try {
        schemaMeta0 = new SchemaMeta((String) null, "}A}h1TZA}]_", "' to ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "/]fQcy#cs-Ea+b*R", 3316, 3316);
      assertFalse(foreignKeyConstraint0.isNullOnDelete());
      
      String[] stringArray0 = new String[4];
      stringArray0[0] = "/]fQcy#cs-Ea+b*R";
      stringArray0[1] = "/]fQcy#cs-Ea+b*R";
      stringArray0[2] = "";
      stringArray0[3] = "/]fQcy#cs-Ea+b*R";
      Config.getInstance();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "UTF-8");
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "", 3316, 2);
      Config.getInstance();
      boolean boolean0 = foreignKeyConstraint1.isNullOnDelete();
      assertTrue(boolean0);
      assertEquals(3316, foreignKeyConstraint1.getUpdateRule());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "}A}h1TZA}]_", 3316, 3316);
      Config.getInstance();
      boolean boolean0 = foreignKeyConstraint0.isNullOnDelete();
      assertFalse(boolean0);
      assertEquals(3316, foreignKeyConstraint0.getDeleteRule());
      assertEquals(3316, foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, (String) null, 2474, (-1));
      foreignKeyConstraint0.isNullOnDelete();
      System.setCurrentTimeMillis(2);
      System.setCurrentTimeMillis(765L);
      Integer integer0 = new Integer(2);
      assertEquals(2, (int)integer0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.2248830687452417
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "/]fQcy#cs-Ea+b*R", 254, 3);
      Config config0 = Config.getInstance();
      Integer integer0 = new Integer(3);
      config0.setPort(integer0);
      config0.getMeta();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "/]fQcy#cs-Ea+b*R";
      stringArray0[1] = "/]fQcy#cs-Ea+b*R";
      Config config1 = new Config(stringArray0);
      config1.getDriverPath();
      Config config2 = Config.getInstance();
      config0.setUser("");
      config1.setDb("/]fQcy#cs-Ea+b*R");
      Config.getInstance();
      config2.getDriverPath();
      Config config3 = new Config(stringArray0);
      config3.getDbSpecificOptions();
      config2.getLogLevel();
      config2.setRenderer("P");
      Config.getInstance();
      config1.getDriverPath();
      config2.getSqlFormatter();
      config2.getDbProperties();
      Config.getInstance();
      config3.setDriverPath("");
      String string0 = foreignKeyConstraint0.getDeleteRuleName();
      assertEquals("Restrict delete", string0);
      assertEquals(254, foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.2904979957976015
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", 253, 253);
      foreignKeyConstraint0.getParentColumns();
      List<TableColumn> list0 = foreignKeyConstraint0.getChildColumns();
      ForeignKeyConstraint.toString(list0);
      foreignKeyConstraint0.getParentColumns();
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta0).getComments();
      doReturn((String) null).when(tableColumnMeta0).getDefaultValue();
      doReturn(0).when(tableColumnMeta0).getDigits();
      doReturn((String) null).when(tableColumnMeta0).getId();
      doReturn((String) null).when(tableColumnMeta0).getName();
      doReturn(0).when(tableColumnMeta0).getSize();
      doReturn((String) null).when(tableColumnMeta0).getType();
      doReturn(false).when(tableColumnMeta0).isAutoUpdated();
      doReturn(false).when(tableColumnMeta0).isNullable();
      TableColumn tableColumn0 = new TableColumn((Table) null, tableColumnMeta0);
      boolean boolean0 = foreignKeyConstraint0.isCascadeOnDelete();
      assertFalse(boolean0);
      
      foreignKeyConstraint0.getDeleteRuleDescription();
      foreignKeyConstraint0.getName();
      assertEquals(253, foreignKeyConstraint0.getDeleteRule());
      assertEquals(253, foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "}A}h1TZA}]_", 3316, 3316);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "}A}h1TZA}]_");
      String[] stringArray0 = new String[4];
      stringArray0[0] = "}A}h1TZA}]_";
      stringArray0[1] = "}A}h1TZA}]_";
      foreignKeyConstraint0.getChildColumns();
      stringArray0[2] = "uJJcFcUA:Lci=)G{<";
      stringArray0[3] = "}A}h1TZA}]_";
      Config config0 = new Config(stringArray0);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      DatabaseMetaData databaseMetaData0 = mock(DatabaseMetaData.class, new ViolatedAssumptionAnswer());
      List<TableColumn> list0 = foreignKeyConstraint0.getChildColumns();
      ForeignKeyConstraint.toString(list0);
      foreignKeyConstraint0.getName();
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "java.util.Collections$UnmodifiableRandomAccessList@0000000003", 3316, 3316);
      foreignKeyConstraint1.getChildColumns();
      assertEquals(3316, foreignKeyConstraint1.getDeleteRule());
      assertEquals(3316, foreignKeyConstraint1.getUpdateRule());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.7937175017485838
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      String string0 = "";
      Table table0 = null;
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", 3316, 3316);
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "", 253, 253);
      String[] stringArray0 = new String[12];
      stringArray0[0] = "";
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)12;
      byteArray0[1] = (byte) (-118);
      byteArray0[2] = (byte) (-103);
      // Undeclared exception!
      try { 
        foreignKeyConstraint1.compareTo(foreignKeyConstraint0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.7937175017485838
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      String string0 = "F";
      Table table0 = null;
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "F", 3316, 3316);
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "F", 253, 253);
      String[] stringArray0 = new String[12];
      stringArray0[0] = "F";
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte) (-118);
      byteArray0[2] = (byte) (-103);
      // Undeclared exception!
      try { 
        foreignKeyConstraint1.compareTo(foreignKeyConstraint0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.4841652152843623
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "T+cYmE2fC* )m'e1)V", 4, 1297);
      FileSystemHandling.shouldAllThrowIOExceptions();
      foreignKeyConstraint0.isRestrictDelete();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      System.setCurrentTimeMillis(1297);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.2248830687452417
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "/]fQcy#cs-Ea+b*R", 254, 2);
      Config config0 = Config.getInstance();
      Integer integer0 = new Integer(2);
      config0.setPort(integer0);
      config0.getMeta();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "/]fQcy#cs-Ea+b*R";
      stringArray0[1] = "/]fQcy#cs-Ea+b*R";
      Config config1 = new Config(stringArray0);
      config1.getDriverPath();
      Config config2 = Config.getInstance();
      config0.setUser("UTF-8");
      Config config3 = Config.getInstance();
      config2.getDriverPath();
      config3.getSqlFormatter();
      config3.getDbProperties();
      Config config4 = Config.getInstance();
      config4.setDriverPath("");
      foreignKeyConstraint0.getDeleteRuleName();
      Integer integer1 = new Integer(3478);
      assertEquals(3478, (int)integer1);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      byte[] byteArray0 = new byte[16];
      byteArray0[1] = (byte) (-24);
      byteArray0[2] = (byte)21;
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "/]fQcy#cs-Ea+b*R", (byte)21, 2);
      Config config0 = new Config();
      String[] stringArray0 = new String[0];
      Config config1 = new Config(stringArray0);
      Config config2 = Config.getInstance();
      config2.getDriverPath();
      Config config3 = Config.getInstance();
      config1.setUser("Cascade on delete");
      Config config4 = Config.getInstance();
      config4.getDriverPath();
      Config config5 = new Config(stringArray0);
      config2.getDbSpecificOptions();
      Config config6 = new Config();
      config5.getParam("nqROz");
      config3.setMaxDbThreads((-408));
      config3.getSqlFormatter();
      Config config7 = Config.getInstance();
      Config config8 = Config.getInstance();
      config8.getColumnExclusions();
      Config.getInstance();
      config8.getParam("UTF-8");
      Config config9 = new Config();
      config7.isEvaluateAllEnabled();
      config6.setFontSize((byte) (-24));
      config0.setSqlFormatter("eJ^F<0Hz");
      config0.setFontSize((-16));
      // Undeclared exception!
      try { 
        foreignKeyConstraint0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.ForeignKeyConstraint", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "/]fQcy#cs-Ea+b*R", (-2189), 254);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "-?");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      Config config0 = new Config(stringArray0);
      String[] stringArray1 = new String[3];
      stringArray1[0] = "UTF-8";
      int int0 = foreignKeyConstraint0.compareTo(foreignKeyConstraint0);
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis(0L);
      Integer integer0 = new Integer((-3377));
      assertFalse(integer0.equals((Object)int0));
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.7937175017485838
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", 3316, 3316);
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "", 253, 253);
      String[] stringArray0 = new String[12];
      stringArray0[0] = "";
      byte byte0 = (byte) (-50);
      EvoSuiteFile evoSuiteFile0 = null;
      byte[] byteArray0 = new byte[3];
      FileSystemHandling.shouldAllThrowIOExceptions();
      byteArray0[0] = (byte) (-50);
      byteArray0[1] = (byte) (-118);
      byteArray0[2] = (byte) (-103);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      // Undeclared exception!
      try { 
        foreignKeyConstraint0.compareTo(foreignKeyConstraint1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.2248830687452417
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "/]fQcy#cs-Ea+b*R", 254, 2);
      Config config0 = Config.getInstance();
      Integer integer0 = new Integer(2);
      config0.setPort(integer0);
      config0.getMeta();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "/]fQcy#cs-Ea+b*R";
      stringArray0[1] = "/]fQcy#cs-Ea+b*R";
      Config config1 = new Config(stringArray0);
      Config config2 = new Config(stringArray0);
      config1.getLogLevel();
      config1.setIndirectColumnExclusions("UTF-8");
      foreignKeyConstraint0.getDeleteRuleAlias();
      System.setCurrentTimeMillis(254);
      SchemaMeta schemaMeta0 = null;
      try {
        schemaMeta0 = new SchemaMeta((String) null, "UTF-8", "UN<dG4Q+Xr");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }
}
