/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 17:39:12 GMT 2019
 */

package org.quickserver.net.server;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.net.Proxy;
import java.net.Socket;
import java.nio.channels.SocketChannel;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.net.MockSocket;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;
import org.quickserver.net.qsadmin.CommandHandler;
import org.quickserver.net.qsadmin.Data;
import org.quickserver.net.server.Authenticator;
import org.quickserver.net.server.ClientAuthenticationHandler;
import org.quickserver.net.server.ClientBinaryHandler;
import org.quickserver.net.server.ClientCommandHandler;
import org.quickserver.net.server.ClientData;
import org.quickserver.net.server.ClientEvent;
import org.quickserver.net.server.ClientExtendedEventHandler;
import org.quickserver.net.server.ClientHandler;
import org.quickserver.net.server.ClientObjectHandler;
import org.quickserver.net.server.ClientWriteHandler;
import org.quickserver.net.server.QuickServer;
import org.quickserver.net.server.TheClient;
import org.quickserver.net.server.impl.BlockingClientHandler;
import org.quickserver.net.server.impl.NonBlockingClientHandler;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TheClient_ESTest extends TheClient_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.26147761112867
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.setTimeoutMsg("");
      theClient0.setClientCommandHandler((ClientCommandHandler) null);
      theClient0.toString();
      theClient0.getCommunicationLogging();
      theClient0.getClientCommandHandler();
      theClient0.getCommunicationLogging();
      theClient0.getClientWriteHandler();
      QuickServer quickServer0 = new QuickServer("+OK QSAdminShell is stopped.");
      quickServer0.setServiceState(331);
      theClient0.setServer(quickServer0);
      theClient0.setClientWriteHandler((ClientWriteHandler) null);
      theClient0.setCommunicationLogging(false);
      theClient0.setClientCommandHandler((ClientCommandHandler) null);
      theClient0.getClientCommandHandler();
      theClient0.setClientCommandHandler((ClientCommandHandler) null);
      theClient0.getClientEventHandler();
      theClient0.getSocketChannel();
      theClient0.getMaxAuthTryMsg();
      theClient0.getSocketChannel();
      theClient0.getServer();
      theClient0.setTimeout((-1));
      theClient0.getClientBinaryHandler();
      theClient0.getClientBinaryHandler();
      assertEquals((-1), theClient0.getTimeout());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.9727115278367817
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getClientExtendedEventHandler();
      theClient0.getClientBinaryHandler();
      theClient0.setClientBinaryHandler((ClientBinaryHandler) null);
      MockSocket mockSocket0 = new MockSocket();
      theClient0.setSocket(mockSocket0);
      theClient0.getClientAuthenticationHandler();
      theClient0.setClientAuthenticationHandler((ClientAuthenticationHandler) null);
      theClient0.getClientObjectHandler();
      theClient0.getServer();
      theClient0.getClientExtendedEventHandler();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      System.setCurrentTimeMillis(1060L);
      System.setCurrentTimeMillis(1060L);
      theClient0.getClientWriteHandler();
      theClient0.getSocket();
      System.setCurrentTimeMillis(1060L);
      theClient0.getClientWriteHandler();
      theClient0.getClientObjectHandler();
      theClient0.getSocketChannel();
      theClient0.getClientExtendedEventHandler();
      theClient0.getClientObjectHandler();
      theClient0.getSocketChannel();
      theClient0.getClientWriteHandler();
      theClient0.getClientWriteHandler();
      assertTrue(theClient0.getCommunicationLogging());
      assertFalse(theClient0.getTrusted());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "no socket");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "'\":uE3i8;X_hNG9uA|");
      TheClient theClient0 = new TheClient();
      Proxy proxy0 = Proxy.NO_PROXY;
      MockSocket mockSocket0 = new MockSocket(proxy0);
      theClient0.setSocket(mockSocket0);
      String string0 = theClient0.toString();
      assertTrue(theClient0.getCommunicationLogging());
      assertFalse(theClient0.getTrusted());
      assertEquals("{TheClient Socket[unconnected], Event: (ClientEvent-Run Blocking)}", string0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.setTimeout(125);
      theClient0.getSocket();
      EvoSuiteFile evoSuiteFile0 = null;
      theClient0.getClientAuthenticationHandler();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      theClient0.setClientAuthenticationHandler((ClientAuthenticationHandler) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      String string0 = "";
      theClient0.setMaxConnectionMsg("");
      theClient0.getTimeout();
      Data data0 = new Data();
      theClient0.setClientData(data0);
      org.quickserver.net.qsadmin.Authenticator authenticator0 = new org.quickserver.net.qsadmin.Authenticator();
      BlockingClientHandler blockingClientHandler0 = new BlockingClientHandler();
      Integer integer0 = new Integer(125);
      // Undeclared exception!
      try { 
        authenticator0.handleAuthentication((ClientHandler) blockingClientHandler0, (Object) integer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // String/Byte mode not implemented!
         //
         verifyException("org.quickserver.net.server.QuickAuthenticationHandler", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.432811072189696
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.setTimeoutMsg("");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "{TheClient ");
      theClient0.setClientCommandHandler((ClientCommandHandler) null);
      theClient0.toString();
      theClient0.getCommunicationLogging();
      theClient0.getClientAuthenticationHandler();
      theClient0.setClientAuthenticationHandler((ClientAuthenticationHandler) null);
      theClient0.getClientCommandHandler();
      boolean boolean0 = theClient0.getCommunicationLogging();
      assertTrue(boolean0);
      
      theClient0.getClientWriteHandler();
      String string0 = theClient0.toString();
      assertEquals("{TheClient no socket, Event: (ClientEvent-Run Blocking)}", string0);
      
      theClient0.getAuthenticator();
      theClient0.setAuthenticator((Authenticator) null);
      theClient0.getSocket();
      int int0 = theClient0.getTimeout();
      assertEquals(0, int0);
      
      theClient0.getServer();
      theClient0.setSocket((Socket) null);
      theClient0.setMaxConnectionMsg("");
      ClientEvent clientEvent0 = ClientEvent.ACCEPT;
      theClient0.setClientEvent(clientEvent0);
      theClient0.getClientExtendedEventHandler();
      theClient0.getMaxConnectionMsg();
      assertFalse(theClient0.getTrusted());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.673415053526696
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "1PkM%zL");
      NonBlockingClientHandler nonBlockingClientHandler0 = new NonBlockingClientHandler((-1));
      nonBlockingClientHandler0.getSocketChannel();
      nonBlockingClientHandler0.setSocketChannel((SocketChannel) null);
      nonBlockingClientHandler0.getSocketChannel();
      assertEquals("<ClientHandler-Pool#-1-ID:1>", nonBlockingClientHandler0.getName());
      
      theClient0.setSocketChannel((SocketChannel) null);
      theClient0.setMaxAuthTryMsg("2R");
      theClient0.setMaxAuthTryMsg("");
      theClient0.getTimeout();
      theClient0.getClientBinaryHandler();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "KI;");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      theClient0.setClientObjectHandler((ClientObjectHandler) null);
      theClient0.getMaxConnectionMsg();
      theClient0.getMaxAuthTryMsg();
      theClient0.getClientWriteHandler();
      assertEquals(0, theClient0.getTimeout());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.435964402895254
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.setMaxAuthTryMsg((String) null);
      theClient0.setMaxAuthTry((-4456));
      theClient0.getClientBinaryHandler();
      theClient0.setClientBinaryHandler((ClientBinaryHandler) null);
      theClient0.setMaxConnectionMsg("L");
      theClient0.getClientWriteHandler();
      theClient0.setClientWriteHandler((ClientWriteHandler) null);
      ClientEvent clientEvent0 = ClientEvent.READ;
      theClient0.setClientEvent(clientEvent0);
      theClient0.setMaxAuthTry(7);
      ClientEvent clientEvent1 = ClientEvent.CLOSE_CON;
      theClient0.setClientEvent(clientEvent1);
      theClient0.toString();
      theClient0.getClientWriteHandler();
      theClient0.getMaxAuthTry();
      theClient0.getMaxAuthTryMsg();
      theClient0.getSocketChannel();
      theClient0.getMaxConnectionMsg();
      theClient0.getAuthenticator();
      theClient0.getServer();
      System.setCurrentTimeMillis(7);
      System.setCurrentTimeMillis(1L);
      theClient0.getSocket();
      theClient0.getClientObjectHandler();
      theClient0.getMaxAuthTryMsg();
      theClient0.getSocketChannel();
      theClient0.getClientExtendedEventHandler();
      theClient0.getClientWriteHandler();
      theClient0.getMaxConnectionMsg();
      theClient0.toString();
      theClient0.getServer();
      theClient0.getMaxAuthTryMsg();
      assertEquals(7, theClient0.getMaxAuthTry());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "\t</store-password>\n");
      TheClient theClient0 = new TheClient();
      theClient0.setTimeout((-1886));
      int int0 = theClient0.getTimeout();
      assertEquals((-1886), int0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.setTrusted(true);
      TheClient theClient1 = new TheClient();
      theClient1.getClientAuthenticationHandler();
      theClient0.toString();
      ClientEvent clientEvent0 = ClientEvent.RUN_BLOCKING;
      theClient1.setClientEvent(clientEvent0);
      theClient0.getTrusted();
      theClient0.getAuthenticator();
      assertTrue(theClient0.getTrusted());
      
      theClient1.getClientWriteHandler();
      assertFalse(theClient1.getTrusted());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.7808459625592628
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getClientCommandHandler();
      theClient0.setClientCommandHandler((ClientCommandHandler) null);
      theClient0.setCommunicationLogging(true);
      theClient0.getClientExtendedEventHandler();
      theClient0.getClientBinaryHandler();
      theClient0.setCommunicationLogging(false);
      theClient0.toString();
      theClient0.getCommunicationLogging();
      MockSocket mockSocket0 = new MockSocket();
      theClient0.getClientData();
      theClient0.getMaxAuthTryMsg();
      assertFalse(theClient0.getCommunicationLogging());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.3781766359449454
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.setTimeoutMsg(";=i8h(_t3<}A}h1TZ");
      BlockingClientHandler blockingClientHandler0 = new BlockingClientHandler(60);
      blockingClientHandler0.getServer();
      theClient0.setServer((QuickServer) null);
      theClient0.setServer((QuickServer) null);
      theClient0.toString();
      theClient0.getAuthenticator();
      theClient0.setAuthenticator((Authenticator) null);
      theClient0.getSocket();
      theClient0.setClientEvent((ClientEvent) null);
      theClient0.getTimeout();
      theClient0.getTrusted();
      blockingClientHandler0.getServer();
      assertEquals("<ClientHandler-Pool#60-ID:1>", blockingClientHandler0.getName());
      
      theClient0.setSocket((Socket) null);
      theClient0.setMaxAuthTryMsg("");
      CommandHandler commandHandler0 = new CommandHandler();
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "{TheClient no socket, Event: (ClientEvent-Run Blocking)}");
      theClient0.setClientCommandHandler(commandHandler0);
      theClient0.setMaxConnectionMsg("");
      theClient0.setTimeoutMsg("");
      theClient0.getClientObjectHandler();
      theClient0.setClientObjectHandler((ClientObjectHandler) null);
      theClient0.getClientBinaryHandler();
      theClient0.getClientEvent();
      assertEquals(0, theClient0.getTimeout());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.675485446901437
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-23);
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte) (-5);
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      theClient0.setTimeoutMsg("");
      theClient0.setClientCommandHandler((ClientCommandHandler) null);
      theClient0.toString();
      theClient0.getClientAuthenticationHandler();
      theClient0.setClientAuthenticationHandler((ClientAuthenticationHandler) null);
      theClient0.getClientCommandHandler();
      TheClient theClient1 = new TheClient();
      String string0 = theClient0.toString();
      assertEquals("{TheClient no socket, Event: (ClientEvent-Run Blocking)}", string0);
      
      theClient0.getTimeoutMsg();
      theClient0.getClientWriteHandler();
      assertTrue(theClient0.getCommunicationLogging());
      assertFalse(theClient0.getTrusted());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.122928297357194
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getClientObjectHandler();
      theClient0.setClientObjectHandler((ClientObjectHandler) null);
      theClient0.setTimeout(411);
      theClient0.setMaxAuthTry((-1));
      theClient0.getAuthenticator();
      theClient0.getSocket();
      theClient0.getMaxAuthTry();
      theClient0.getMaxConnectionMsg();
      theClient0.getClientExtendedEventHandler();
      Data data0 = new Data();
      theClient0.setClientData(data0);
      theClient0.getClientBinaryHandler();
      theClient0.getClientData();
      theClient0.getClientBinaryHandler();
      System.setCurrentTimeMillis((-1));
      theClient0.toString();
      assertEquals(411, theClient0.getTimeout());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.9687776175299367
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.toString();
      CommandHandler commandHandler0 = new CommandHandler();
      theClient0.setClientCommandHandler(commandHandler0);
      theClient0.setCommunicationLogging(false);
      theClient0.getClientExtendedEventHandler();
      theClient0.getClientBinaryHandler();
      theClient0.setCommunicationLogging(true);
      theClient0.toString();
      org.quickserver.net.qsadmin.Authenticator authenticator0 = new org.quickserver.net.qsadmin.Authenticator();
      theClient0.setClientAuthenticationHandler((ClientAuthenticationHandler) null);
      theClient0.getClientEvent();
      theClient0.getClientAuthenticationHandler();
      theClient0.getClientObjectHandler();
      theClient0.setClientObjectHandler((ClientObjectHandler) null);
      theClient0.getClientEvent();
      theClient0.getClientCommandHandler();
      assertTrue(theClient0.getCommunicationLogging());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      String string0 = theClient0.toString();
      assertEquals("{TheClient no socket, Event: (ClientEvent-Run Blocking)}", string0);
      
      CommandHandler commandHandler0 = new CommandHandler();
      theClient0.setClientEventHandler(commandHandler0);
      QuickServer quickServer0 = new QuickServer();
      ClientEvent clientEvent0 = ClientEvent.RUN_BLOCKING;
      theClient0.getClientEvent();
      theClient0.getClientEvent();
      theClient0.getClientEventHandler();
      assertTrue(theClient0.getCommunicationLogging());
      assertFalse(theClient0.getTrusted());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getClientExtendedEventHandler();
      theClient0.getClientObjectHandler();
      theClient0.getAuthenticator();
      QuickServer quickServer0 = new QuickServer("$}&.OZM6qnD|AH<", 0);
      theClient0.setServer(quickServer0);
      theClient0.setAuthenticator((Authenticator) null);
      System.setCurrentTimeMillis(500L);
      theClient0.getServer();
      System.setCurrentTimeMillis(508L);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      TheClient theClient0 = new TheClient();
      org.quickserver.net.qsadmin.Authenticator authenticator0 = new org.quickserver.net.qsadmin.Authenticator();
      theClient0.setClientAuthenticationHandler(authenticator0);
      theClient0.getClientEvent();
      theClient0.getClientAuthenticationHandler();
      theClient0.getClientObjectHandler();
      theClient0.setClientObjectHandler((ClientObjectHandler) null);
      theClient0.getClientEvent();
      theClient0.getClientCommandHandler();
      assertTrue(theClient0.getCommunicationLogging());
      assertFalse(theClient0.getTrusted());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      MockSocket mockSocket0 = new MockSocket();
      TheClient theClient0 = new TheClient();
      int int0 = theClient0.getMaxAuthTry();
      assertEquals(0, int0);
      assertFalse(theClient0.getTrusted());
      assertTrue(theClient0.getCommunicationLogging());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.051435843948024
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.setMaxConnectionMsg("Can't send Binary :DataType.OUT is not in DataMode.BINARY");
      TheClient theClient1 = new TheClient();
      theClient0.getClientWriteHandler();
      theClient1.setClientWriteHandler((ClientWriteHandler) null);
      theClient1.getClientBinaryHandler();
      theClient0.setClientBinaryHandler((ClientBinaryHandler) null);
      theClient0.getServer();
      theClient0.getClientObjectHandler();
      theClient0.getClientWriteHandler();
      theClient0.setClientWriteHandler((ClientWriteHandler) null);
      theClient0.setClientObjectHandler((ClientObjectHandler) null);
      theClient0.getClientExtendedEventHandler();
      theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient0.getClientData();
      theClient0.getMaxConnectionMsg();
      theClient0.getClientData();
      theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      assertTrue(theClient0.getCommunicationLogging());
      assertFalse(theClient0.getTrusted());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      SocketChannel socketChannel0 = SocketChannel.open();
      theClient0.setSocketChannel(socketChannel0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "");
      theClient0.getSocketChannel();
      assertTrue(theClient0.getCommunicationLogging());
      assertFalse(theClient0.getTrusted());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "/~e:#BD#jh2h3;h.sn>");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      TheClient theClient0 = new TheClient();
      theClient0.setServer((QuickServer) null);
      theClient0.setTimeoutMsg("/~e:#BD#jh2h3;h.sn>");
      theClient0.getTimeoutMsg();
      System.setCurrentTimeMillis((-383L));
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "/~e:#BD#jh2h3;h.sn>");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      TheClient theClient0 = new TheClient();
      theClient0.getTimeoutMsg();
      assertFalse(theClient0.getTrusted());
      assertTrue(theClient0.getCommunicationLogging());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      TheClient theClient0 = new TheClient();
      theClient0.setMaxAuthTryMsg("Na],VnN]UtqO_}x4");
      int int0 = theClient0.getTimeout();
      assertEquals(0, int0);
      
      theClient0.getClientBinaryHandler();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "\t</property>\n");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      theClient0.getClientObjectHandler();
      theClient0.setClientObjectHandler((ClientObjectHandler) null);
      theClient0.getMaxAuthTryMsg();
      theClient0.getClientWriteHandler();
      assertTrue(theClient0.getCommunicationLogging());
      assertFalse(theClient0.getTrusted());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      TheClient theClient0 = new TheClient();
      theClient0.getClientData();
      theClient0.setClientData((ClientData) null);
      assertTrue(theClient0.getCommunicationLogging());
      assertFalse(theClient0.getTrusted());
  }
}
