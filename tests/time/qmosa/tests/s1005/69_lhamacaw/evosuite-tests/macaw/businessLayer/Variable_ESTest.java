/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 17:35:48 GMT 2019
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.ConcurrentModificationException;
import java.util.LinkedList;
import java.util.Locale;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.businessLayer.VariableSummary;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.825600262856114
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getName();
      derivedVariable0.setCleaned(true);
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, rawVariable0);
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      derivedVariable0.setCodeBookNumber("s`|WQUFdlo2xg;");
      derivedVariable0.setNotes("qLJ[+(MW/*J7T'DK");
      derivedVariable0.getColumnStart();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, rawVariable0);
      derivedVariable0.getCodeBookNumber();
      assertEquals("s`|WQUFdlo2xg;", derivedVariable0.getCodeBookNumber());
      
      rawVariable0.getIdentifier();
      assertEquals("Unknown", rawVariable0.getCategory());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.7012824364767787
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getName();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      LinkedList<RawVariable> linkedList0 = new LinkedList<RawVariable>();
      LinkedList<RawVariable> linkedList1 = new LinkedList<RawVariable>();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList1.removeAll(linkedList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList1.add(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList3 = derivedVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList4 = derivedVariable0.getOntologyTerms();
      arrayList4.add(ontologyTerm0);
      arrayList3.add(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setOntologyTerms(arrayList1);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      User user0 = new User("", "");
      User user1 = new User(";wkIH2CG>1)e|qMqg", (String) null);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm2, ontologyTerm2);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm4);
      rawVariable0.cloneAttributes(derivedVariable1);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable0.getOntologyTerms();
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms(arrayList4);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.949005970623195
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.clone();
      supportingDocument0.setDescription("$2;1}G");
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.notes = "general.fieldValue.blank";
      rawVariable0.getOntologyTerms();
      rawVariable0.getFilePath();
      User user0 = new User("p^Mya1-,m*.A", "");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      Variable.validateFields(rawVariable0);
      assertEquals("general.fieldValue.blank", rawVariable0.getNotes());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getName();
      derivedVariable0.setCleaned(true);
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User("i'#!X", "");
      User user1 = new User("i'#!X", "clRM@#'IL?");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm.detectFieldChanges(user1, ontologyTerm0, ontologyTerm0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      derivedVariable1.removeOntologyTerm(ontologyTerm2);
      // Undeclared exception!
      try { 
        rawVariable0.cloneAttributes((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.115335173370711
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getName();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart("i'#!X");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      Locale locale0 = Locale.FRENCH;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      ArrayList<String> arrayList1 = new ArrayList<String>();
      Locale.lookupTag(linkedList0, arrayList1);
      rawVariable0.codeBookNumber = "^mE,^";
      locale0.getExtensionKeys();
      LinkedList<RawVariable> linkedList1 = new LinkedList<RawVariable>();
      linkedList1.stream();
      ArrayList<OntologyTerm> arrayList2 = rawVariable0.getOntologyTerms();
      arrayList2.removeAll(linkedList0);
      rawVariable0.setOntologyTerms(arrayList2);
      rawVariable0.getYear();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setColumnEnd("^mE,^");
      User user0 = new User((String) null, "e");
      ValueLabel valueLabel0 = new ValueLabel();
      User user1 = new User("", "UNABLE_TO_GET_ONTOLOGY_TERM_IDENTIFIER");
      Variable.detectFieldChanges(user1, derivedVariable0, rawVariable0);
      RawVariable rawVariable2 = new RawVariable();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      derivedVariable0.getValueLabels();
      derivedVariable0.getIdentifier();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      try { 
        RawVariable.validateFields(rawVariable2);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.0831728948417303
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("variable.label.label");
      rawVariable0.setCleaningStatus("");
      rawVariable0.setCoded(false);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.form = "variable.label.label";
      ontologyTerm0.setTerm("m +H'{G");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      LinkedList<RawVariable> linkedList0 = new LinkedList<RawVariable>();
      linkedList0.stream();
      ontologyTerm0.getDisplayName();
      arrayList0.removeAll(linkedList0);
      arrayList0.add(ontologyTerm0);
      rawVariable0.setOntologyTerms(arrayList0);
      ontologyTerm0.setDescription("");
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.getYear();
      rawVariable0.setColumnEnd(" .|8aw{&N.-{-8t^NhN");
      User user0 = new User("", "");
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setIdentifier((-1151));
      ValueLabel.detectFieldChanges(user0, rawVariable0, valueLabel0, valueLabel0);
      rawVariable0.addValueLabel(valueLabel0);
      rawVariable0.getOntologyTerms();
      rawVariable0.setColumnEnd("=/cV>I5E");
      rawVariable0.getLabel();
      assertEquals("=/cV>I5E", rawVariable0.getColumnEnd());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.82537498038621
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Integer integer0 = new Integer(1);
      linkedList0.add(integer0);
      Integer integer1 = new Integer(1);
      arrayList0.add((Variable) derivedVariable0);
      linkedList0.push(integer1);
      arrayList0.removeAll(linkedList0);
      arrayList0.sort(comparator0);
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.removeSourceVariables(arrayList0);
      derivedVariable0.setSourceVariables(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName("50%27+yQ&L-t");
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      User user0 = new User();
      user0.setFirstName("50%27+yQ&L-t");
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      derivedVariable0.addOntologyTerms(arrayList1);
      RawVariable rawVariable0 = new RawVariable();
      user0.setPassword("\"}p4fFfqlk$");
      rawVariable0.setCleaned(true);
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      derivedVariable0.removeSourceVariable(rawVariable0);
      assertTrue(rawVariable0.isCleaned());
      
      derivedVariable0.getColumnEnd();
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.8339946097614632
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      User user1 = new User("", "");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectFieldChanges(user1, derivedVariable0, derivedVariable1);
      derivedVariable0.setCodeBookNumber("t6MwJCLvmiN");
      derivedVariable1.setNotes("N(Fq*lI=HPkm _yo`&");
      derivedVariable0.getColumnStart();
      Variable.detectFieldChanges(user1, derivedVariable0, derivedVariable1);
      assertEquals("N(Fq*lI=HPkm _yo`&", derivedVariable1.getNotes());
      assertEquals("t6MwJCLvmiN", derivedVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.05569358184064
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      User user1 = new User(".04\"@", ".04\"@");
      Variable variable0 = null;
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, (Variable) null, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.addSupportingDocuments(arrayList0);
      rawVariable0.setQuestionNumber("jzayrFBoyTt&n8w9P8");
      rawVariable0.getFilePath();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName("variable.name.label");
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.getCategory();
      assertEquals("jzayrFBoyTt&n8w9P8", rawVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.8978241447772537
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getName();
      derivedVariable0.setCleaned(true);
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      ArrayList<Object> arrayList1 = new ArrayList<Object>();
      arrayList0.removeAll(arrayList1);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList3 = rawVariable0.getOntologyTerms();
      arrayList3.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList2.add(ontologyTerm1);
      rawVariable0.setOntologyTerms(arrayList0);
      ontologyTerm1.setDescription("SZ|");
      ArrayList<OntologyTerm> arrayList4 = new ArrayList<OntologyTerm>();
      arrayList3.stream();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      rawVariable0.getYear();
      rawVariable0.setColumnEnd("Lv0D");
      rawVariable0.clone();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.clone();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.clone();
      derivedVariable1.containsSupportingDocument(supportingDocument0);
      arrayList4.add(ontologyTerm1);
      ArrayList<OntologyTerm> arrayList5 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      arrayList4.add(ontologyTerm3);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.addOntologyTerms(arrayList4);
      derivedVariable1.getForm();
      Variable.validateFields(rawVariable0);
      assertEquals("Lv0D", rawVariable0.getColumnEnd());
      assertEquals("Unknown", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.8055124628724255
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("variable.label.label");
      rawVariable0.setCleaningStatus("");
      rawVariable0.setCoded(false);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User("", "drfat");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.form = "variable.label.label";
      assertEquals("variable.label.label", rawVariable0.getForm());
      
      ontologyTerm0.setTerm("m +H'{G");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.createVariableSummary();
      derivedVariable0.getName();
      derivedVariable0.getDisplayName();
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.3539190349214616
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = "variable.av|ilability.label";
      User user0 = new User();
      User.detectFieldChanges(user0, user0, user0);
      user0.setAddressLine1("");
      user0.setCity("L&OZu9 c1.:3'6fuq%");
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertNotNull(macawChangeEvent0);
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      
      rawVariable0.setAlias("");
      rawVariable0.setAlias("");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.getDisplayName();
      derivedVariable0.getNotes();
      String string0 = rawVariable0.getAvailability();
      assertEquals("Unknown", string0);
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getNotes());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.0514474029629954
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("variable.label.label");
      rawVariable0.setCleaningStatus("");
      rawVariable0.setCoded(false);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.form = "variable.label.label";
      ontologyTerm0.setTerm("m +H'{G");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setFilePath("");
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      arrayList1.add(supportingDocument0);
      Locale locale0 = Locale.US;
      locale0.getUnicodeLocaleKeys();
      arrayList1.removeAll(arrayList0);
      rawVariable0.addSupportingDocuments(arrayList1);
      derivedVariable0.setAvailability("");
      derivedVariable0.containsSourceVariable(rawVariable0);
      derivedVariable0.getCodeBookNumber();
      derivedVariable0.removeSourceVariable(rawVariable0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.getAlias();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.7592732880680346
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("UNABLE_TO_UPDATE_ALIAS_FILE_PATH");
      ontologyTerm0.setTerm((String) null);
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      LinkedList<RawVariable> linkedList0 = new LinkedList<RawVariable>();
      LinkedList<RawVariable> linkedList1 = new LinkedList<RawVariable>();
      linkedList1.stream();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.removeAll(linkedList0);
      arrayList0.add(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList1.add(ontologyTerm0);
      arrayList1.add(ontologyTerm0);
      rawVariable0.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      User user0 = new User("general.fieldValue.unknown", "cf*");
      User user1 = new User("cf*", (String) null);
      OntologyTerm.detectFieldChanges(user0, ontologyTerm1, ontologyTerm1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm2);
      rawVariable0.cloneAttributes(derivedVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.getOntologyTerms();
      derivedVariable0.removeOntologyTerms(arrayList0);
      derivedVariable0.updateOntologyTerm(ontologyTerm2);
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertFalse(derivedVariable0.isCleaned());
      
      String string0 = derivedVariable1.getCleaningStatus();
      assertEquals("Unknown", string0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.6845198108434345
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      String string0 = "w0cQKjN7#=Fyzu";
      User user0 = new User("w0cQKjN7#=Fyzu", "");
      user0.setFirstName("");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDescription("sd?7");
      supportingDocument0.setTitle("user.status.unverified");
      supportingDocument0.setFilePath("sd?7");
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      derivedVariable0.form = "<w6f|";
      supportingDocument0.setIsNewRecord(true);
      derivedVariable0.getFilePath();
      String string1 = "W~8W#c";
      derivedVariable0.codeBookNumber = "";
      derivedVariable0.columnStart = "";
      supportingDocument0.setFilePath((String) null);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setDocumentCode((String) null);
      // Undeclared exception!
      try { 
        SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.7395494666273708
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getAvailability();
      rawVariable0.setCategory("s|UCU`\"JbCI");
      rawVariable0.setCleaned(true);
      rawVariable0.setNotes("Unknown");
      User user0 = new User();
      User user1 = new User("Unknown", "s|UCU`\"JbCI");
      User.detectFieldChanges(user1, user0, user1);
      user0.setAddressLine1("Unknown");
      user0.setCity("Unknown");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      rawVariable0.setAlias("Unknown");
      rawVariable0.setAlias("s|UCU`\"JbCI");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getSourceVariables();
      derivedVariable0.setCleaned(false);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.clone();
      assertTrue(rawVariable0.isCleaned());
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable1.removeOntologyTerm(ontologyTerm0);
      assertEquals("Unknown", rawVariable1.getAvailability());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.663496277301592
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      User user0 = new User("w0cQKjN7#=Fyzu", "");
      user0.setFirstName("");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.getFilePath();
      derivedVariable0.codeBookNumber = "";
      derivedVariable0.columnStart = "";
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDocumentCode((String) null);
      derivedVariable0.setYear("w0cQKjN7#=Fyzu");
      derivedVariable0.setLabel("W~8W#c");
      derivedVariable0.getColumnStart();
      derivedVariable0.clone();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.addOntologyTerms(arrayList0);
      derivedVariable0.getForm();
      assertEquals("W~8W#c", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setSupportingDocuments(arrayList0);
      derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      derivedVariable0.setCleaned(true);
      arrayList0.add(supportingDocument0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument3 = new SupportingDocument();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setIdentifier((-1908874351));
      User user0 = new User("D_2fH>N|FGi", "ZQzBe.gJL5>{");
      RawVariable rawVariable1 = new RawVariable();
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel valueLabel2 = null;
      // Undeclared exception!
      try { 
        ValueLabel.detectFieldChanges(user0, derivedVariable0, valueLabel0, (ValueLabel) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.ValueLabel", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.7786217155799795
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("y#d+;Q");
      ontologyTerm0.setTerm("!g2Z;am8WTCO35");
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      LinkedList<RawVariable> linkedList0 = new LinkedList<RawVariable>();
      linkedList0.stream();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.removeAll(linkedList0);
      arrayList0.add(ontologyTerm0);
      arrayList0.add(ontologyTerm0);
      rawVariable0.setOntologyTerms(arrayList0);
      ontologyTerm0.setDescription("variable.availability.label");
      arrayList0.stream();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.getYear();
      rawVariable0.setColumnEnd("UNABLE_TO_GET_VALUE_LABEL_IDENTIFIER");
      rawVariable0.clone();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.clone();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList1.add(ontologyTerm1);
      derivedVariable0.addOntologyTerms(arrayList1);
      String string0 = derivedVariable0.getForm();
      assertEquals("", string0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.560923023161317
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getName();
      derivedVariable0.setCleaned(true);
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle("NON_EXISTENT_AVAILABILITY_STATE");
      supportingDocument0.setFilePath("variable.questionNumber.label");
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      supportingDocument0.setIsNewRecord(true);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.getFilePath();
      derivedVariable1.setLabel("UNABLE_TO_CHECK_ALIAS_FILE_PATH_DUPLICATE");
      supportingDocument0.setFilePath("W~8W#c");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument0.setDocumentCode("UNABLE_TO_CHECK_CLEANING_STATE_EXISTS");
      derivedVariable1.setLabel("@DE_FR'{");
      derivedVariable1.getName();
      derivedVariable0.getDisplayName();
      assertTrue(derivedVariable0.isCleaned());
      
      rawVariable0.getColumnEnd();
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.8727000655602617
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getName();
      derivedVariable0.setCleaned(true);
      RawVariable rawVariable0 = new RawVariable();
      Variable.validateFields(derivedVariable0);
      derivedVariable0.createVariableSummary();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      rawVariable0.cloneAttributes(derivedVariable0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      derivedVariable2.removeOntologyTerms(arrayList0);
      // Undeclared exception!
      try { 
        derivedVariable1.updateOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.7119333547517734
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.clone();
      rawVariable0.setCodeBookNumber("|e1PT.T2.%0}");
      rawVariable0.setColumnEnd("variable.alias.label");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("y#d+;Q");
      ontologyTerm0.setTerm("macaw.system.MacawException");
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.setCategory("variable.alias.label");
      rawVariable0.setQuestionNumber("");
      rawVariable0.getCategory();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      rawVariable0.cloneAttributes(derivedVariable1);
      assertEquals("variable.alias.label", rawVariable0.getCategory());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.866586067650031
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIdentifier(0);
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      ArrayList<String> arrayList0 = Variable.validateFields(derivedVariable0);
      Locale.lookupTag(linkedList0, arrayList0);
      Locale locale0 = Locale.ITALIAN;
      locale0.getExtensionKeys();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      derivedVariable0.setFilePath("^mE,^");
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList2 = rawVariable0.getOntologyTerms();
      arrayList2.add(ontologyTerm0);
      rawVariable0.cloneAttributes(derivedVariable0);
      arrayList1.add(ontologyTerm0);
      rawVariable0.setOntologyTerms(arrayList1);
      ontologyTerm0.setDescription("^mE,^");
      arrayList2.stream();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      rawVariable0.getYear();
      rawVariable0.setColumnEnd("Unknown");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.clone();
      Variable.validateFields(rawVariable1);
      rawVariable0.getIdentifier();
      rawVariable0.clone();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      assertEquals("Unknown", rawVariable0.getColumnEnd());
      
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.setCoded(false);
      assertEquals("0", rawVariable2.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.7592732880680346
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("UNABLE_TO_UPDATE_ALIAS_FILE_PATH");
      ontologyTerm0.setTerm((String) null);
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
      
      LinkedList<RawVariable> linkedList0 = new LinkedList<RawVariable>();
      linkedList0.stream();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.removeAll(linkedList0);
      arrayList0.add(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList1.add(ontologyTerm0);
      arrayList1.add(ontologyTerm0);
      rawVariable0.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      User user0 = new User("general.fieldValue.unknown", "cf*");
      User user1 = new User("cf*", (String) null);
      OntologyTerm.detectFieldChanges(user0, ontologyTerm1, ontologyTerm1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.cloneAttributes(derivedVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.getOntologyTerms();
      derivedVariable0.removeOntologyTerms(arrayList0);
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      derivedVariable1.addSupportingDocuments(arrayList2);
      derivedVariable0.updateOntologyTerm(ontologyTerm2);
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      
      derivedVariable1.removeOntologyTerm(ontologyTerm2);
      assertFalse(derivedVariable1.isCoded());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.75012938226178
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnEnd("4'a/bH.qg!Ae");
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.setAlias("user.userID.saveChanges");
      valueLabel0.setLabel("zVN=N~J$<M!LHuZ^:(");
      derivedVariable0.removeValueLabel(valueLabel0);
      derivedVariable0.getCleaningDescription();
      derivedVariable0.setYear("");
      derivedVariable0.isNewRecord();
      derivedVariable0.getQuestionNumber();
      derivedVariable0.setYear("");
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      // Undeclared exception!
      try { 
        derivedVariable0.removeSupportingDocuments(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.8623417620344114
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      User user0 = new User("", "");
      user0.setFirstName("^mE,^");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDescription("variable.isCleaned.saveChanges.changedToNotClean");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setTitle("GWq(g*aT");
      supportingDocument0.setFilePath("^mE,^");
      supportingDocument0.setIsNewRecord(false);
      derivedVariable0.getFilePath();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      supportingDocument2.setFilePath("blank");
      SupportingDocument supportingDocument3 = new SupportingDocument();
      supportingDocument1.setDocumentCode("");
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument1);
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.setSupportingDocuments(arrayList0);
      derivedVariable0.setYear("");
      derivedVariable0.setLabel("A{sT");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.getName();
      derivedVariable0.getDisplayName();
      assertEquals("A{sT", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDescription("sd?7");
      supportingDocument0.setTitle("user.status.unverified");
      supportingDocument0.setFilePath("sd?7");
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      supportingDocument0.setIsNewRecord(true);
      derivedVariable0.getFilePath();
      derivedVariable0.codeBookNumber = "";
      derivedVariable0.columnStart = "";
      supportingDocument0.setFilePath((String) null);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setFileName("variable.category.label");
      supportingDocument1.setDocumentCode((String) null);
      derivedVariable0.setLabel("W~8W#c");
      derivedVariable0.getName();
      derivedVariable0.getDisplayName();
      derivedVariable0.getQuestionNumber();
      assertEquals("W~8W#c", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart("07,D)T|{*wSMol>1%m");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        Variable.validateFields((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.7686042098054195
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getName();
      derivedVariable0.setCleaned(true);
      RawVariable rawVariable0 = new RawVariable();
      Variable.validateFields(derivedVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.cloneAttributes(derivedVariable0);
      derivedVariable1.getName();
      derivedVariable0.getDisplayName();
      assertFalse(derivedVariable0.isCleaned());
      
      derivedVariable1.getColumnStart();
      assertEquals("Unknown", derivedVariable1.getAvailability());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.969607946218233
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = "variable.questionNumber.label";
      rawVariable0.setAlias("user.county.saveChanges");
      rawVariable0.setIsNewRecord(true);
      rawVariable0.setCoded(true);
      rawVariable0.isNewRecord();
      rawVariable0.setQuestionNumber("user.county.saveChanges");
      rawVariable0.setCleaningDescription((String) null);
      assertTrue(rawVariable0.isCoded());
      
      User user0 = new User("variable.questionNumber.label", "user.county.saveChanges");
      user0.setStatus((String) null);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      ArrayList<MacawChangeEvent> arrayList0 = DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals(0, arrayList0.size());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=3.783349364745921
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnEnd("4'a/bH.qg!Ae");
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setLabel("zVN=N~J$<M!LHuZ^:(");
      derivedVariable0.removeValueLabel(valueLabel0);
      derivedVariable0.getCleaningDescription();
      derivedVariable0.setYear("");
      derivedVariable0.isNewRecord();
      derivedVariable0.setYear("");
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setName("d8AtmG$&>~TFeQcAa");
      derivedVariable0.cloneAttributes(derivedVariable1);
      derivedVariable0.getName();
      derivedVariable1.setIdentifier(0);
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      derivedVariable0.setSourceVariables(arrayList1);
      derivedVariable1.setAlias("variable.category.label");
      derivedVariable1.addValueLabel(valueLabel0);
      derivedVariable1.getAlternativeVariable();
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.hasSameDisplayName((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.8624599234428953
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      User user0 = new User("zXU:>I7LHjk|{hp", ",6$.0=X");
      User user1 = new User();
      user1.setFirstName(",6$.0=X");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user1, derivedVariable0, derivedVariable1);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDescription(",6$.0=X");
      supportingDocument0.setTitle("N(Fq*lI=HPkm _yo`&");
      supportingDocument0.setFilePath("zXU:>I7LHjk|{hp");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument1);
      supportingDocument1.setIsNewRecord(true);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.getFilePath();
      supportingDocument1.setFilePath("<w6f|");
      SupportingDocument supportingDocument2 = new SupportingDocument();
      supportingDocument0.setDocumentCode((String) null);
      SupportingDocument.detectFieldChanges(user1, supportingDocument2, supportingDocument2);
      derivedVariable2.setYear("sAb(!/oQgb");
      derivedVariable1.setLabel("N(Fq*lI=HPkm _yo`&");
      derivedVariable0.getName();
      derivedVariable1.getDisplayName();
      derivedVariable2.getSupportingDocuments();
      assertEquals("sAb(!/oQgb", derivedVariable2.getYear());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.0248847886694654
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart("07,D)T|{*wSMol>1%m");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setForm("07,D)T|{*wSMol>1%m");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.iterator();
      arrayList0.add(supportingDocument0);
      derivedVariable0.setSupportingDocuments(arrayList0);
      ArrayList<SupportingDocument> arrayList1 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList1.add(supportingDocument1);
      rawVariable0.removeSupportingDocument(supportingDocument1);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setIdentifier((-1151));
      User user0 = new User("", "}6");
      ArrayList<Variable> arrayList2 = derivedVariable0.getSourceVariables();
      derivedVariable0.setSourceVariables(arrayList2);
      RawVariable rawVariable1 = new RawVariable();
      ValueLabel.detectFieldChanges(user0, rawVariable1, valueLabel0, valueLabel0);
      ArrayList<OntologyTerm> arrayList3 = rawVariable0.getOntologyTerms();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.addOntologyTerms(arrayList3);
      rawVariable2.setColumnEnd("nqsUx4a(F'gwEy%$5");
      derivedVariable0.containsSupportingDocument(supportingDocument2);
      rawVariable2.getColumnEnd();
      assertEquals("nqsUx4a(F'gwEy%$5", rawVariable2.getColumnEnd());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.0605440680174723
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getName();
      derivedVariable0.setCleaned(true);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart("i'#!X");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      Locale locale0 = Locale.FRENCH;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      ArrayList<String> arrayList1 = new ArrayList<String>();
      Locale.lookupTag(linkedList0, arrayList1);
      rawVariable0.codeBookNumber = "^mE,^";
      locale0.getExtensionKeys();
      LinkedList<RawVariable> linkedList1 = new LinkedList<RawVariable>();
      linkedList1.stream();
      ArrayList<OntologyTerm> arrayList2 = rawVariable0.getOntologyTerms();
      arrayList2.removeAll(linkedList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList2.add(ontologyTerm0);
      rawVariable0.setOntologyTerms(arrayList2);
      ontologyTerm0.setDescription("JXZHzr%!");
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.getYear();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setColumnEnd("^mE,^");
      User user0 = new User((String) null, "e");
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setIdentifier((-1151));
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      assertEquals("^mE,^", rawVariable0.getColumnEnd());
      assertEquals("Unknown", rawVariable0.getCategory());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<ValueLabel> arrayList0 = rawVariable0.getValueLabels();
      rawVariable0.setValueLabels(arrayList0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      rawVariable0.removeOntologyTerms(arrayList1);
      ArrayList<SupportingDocument> arrayList2 = rawVariable0.getSupportingDocuments();
      rawVariable0.setSupportingDocuments(arrayList2);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      String string0 = "KF'ZAHKBvi}EYdP,Z3";
      rawVariable0.setQuestionNumber("KF'ZAHKBvi}EYdP,Z3");
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setIdentifier((-1306));
      rawVariable0.removeValueLabel(valueLabel0);
      rawVariable0.setColumnEnd("");
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.048820325203473
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeSupportingDocument((SupportingDocument) null);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.removeOntologyTerms(arrayList0);
      rawVariable0.setAlias("");
      ArrayList<SupportingDocument> arrayList1 = rawVariable0.getSupportingDocuments();
      rawVariable0.setSupportingDocuments(arrayList1);
      rawVariable0.getSupportingDocuments();
      rawVariable0.isCoded();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.addValueLabel(valueLabel0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.containsSourceVariable(rawVariable0);
      rawVariable0.setCleaned(false);
      rawVariable0.setAvailability((String) null);
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.removeSupportingDocuments(arrayList0);
      derivedVariable0.getDisplayItemIdentifier();
      derivedVariable0.setQuestionNumber("0");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDescription("Thm <tt/UN%+44Ru!eK");
      String string0 = null;
      supportingDocument0.setFileName("@]XK,2c0Q");
      supportingDocument0.setDescription((String) null);
      try { 
        SupportingDocument.validateFields(supportingDocument0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=3.5806560020475704
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      ValueLabel[] valueLabelArray0 = new ValueLabel[9];
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabelArray0[0] = valueLabel0;
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabelArray0[1] = valueLabel1;
      ValueLabel valueLabel2 = new ValueLabel();
      valueLabelArray0[2] = valueLabel2;
      ValueLabel valueLabel3 = new ValueLabel();
      valueLabelArray0[3] = valueLabel3;
      ValueLabel valueLabel4 = new ValueLabel();
      valueLabelArray0[4] = valueLabel4;
      ValueLabel valueLabel5 = new ValueLabel();
      valueLabelArray0[5] = valueLabel5;
      ValueLabel valueLabel6 = new ValueLabel();
      valueLabelArray0[6] = valueLabel6;
      ValueLabel valueLabel7 = new ValueLabel();
      valueLabelArray0[7] = valueLabel7;
      ValueLabel valueLabel8 = new ValueLabel();
      valueLabelArray0[8] = valueLabel8;
      arrayList0.toArray(valueLabelArray0);
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable0.clone();
      // Undeclared exception!
      try { 
        derivedVariable0.removeSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.576534609090467
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      Variable.validateFields(derivedVariable0);
      VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
      
      derivedVariable0.getName();
      derivedVariable0.setFilePath("");
      derivedVariable0.getDisplayName();
      derivedVariable0.getSupportingDocuments();
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.625390528762087
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("'i2sV~d");
      derivedVariable0.createVariableSummary();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.removeSourceVariables(arrayList0);
      derivedVariable0.setCoded(true);
      derivedVariable0.removeSupportingDocument((SupportingDocument) null);
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.cloneAttributes(rawVariable0);
      assertEquals("'i2sV~d", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.9276475832038384
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.validateFields(derivedVariable0);
      VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
      
      derivedVariable0.getName();
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertTrue(arrayList0.isEmpty());
      
      RawVariable rawVariable0 = new RawVariable();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, derivedVariable0);
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals(0, macawChangeEvent0.getChangedObjectIdentifier());
      assertNotNull(macawChangeEvent0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.673415053526696
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      User user0 = new User();
      ValueLabel.detectFieldChanges(user0, rawVariable0, valueLabel0, valueLabel0);
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel0.hasSameDisplayName(valueLabel1);
      rawVariable0.setIdentifier((-299));
      rawVariable0.removeValueLabel(valueLabel0);
      RawVariable rawVariable1 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable1.containsSupportingDocument(supportingDocument0);
      rawVariable1.setCleaningStatus(".d.c,1g$n");
      rawVariable0.setAlternativeVariable(rawVariable1);
      // Undeclared exception!
      try { 
        rawVariable1.addOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.5594415416798357
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDescription("sd?7");
      supportingDocument0.setTitle("user.status.unverified");
      supportingDocument0.setFilePath("sd?7");
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setIdentifier((-2004318069));
      User user0 = new User("", "");
      RawVariable rawVariable1 = new RawVariable();
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel.detectFieldChanges(user0, rawVariable0, valueLabel1, valueLabel1);
      rawVariable0.addValueLabel(valueLabel0);
      rawVariable0.getOntologyTerms();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable1.setColumnEnd("user.status.unverified");
      assertEquals("user.status.unverified", rawVariable1.getColumnEnd());
      
      SupportingDocument supportingDocument2 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument2);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.7464921238997273
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      User user0 = new User("w0cQKjN7#=Fyzu", "");
      user0.setPostCode("NxSh].+5;9{IZ");
      user0.setFirstName("w0cQKjN7#=Fyzu");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.getFilePath();
      derivedVariable0.notes = "w0cQKjN7#=Fyzu";
      derivedVariable0.setIsNewRecord(false);
      derivedVariable0.codeBookNumber = "";
      derivedVariable0.columnStart = "";
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.createVariableSummary();
      assertEquals("w0cQKjN7#=Fyzu", derivedVariable0.getNotes());
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.getName();
      derivedVariable1.getDisplayName();
      assertFalse(derivedVariable1.isNewRecord());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=3.6441429225974007
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.cloneAttributes(derivedVariable0);
      User user0 = new User();
      user0.setIdentifier(341);
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      derivedVariable0.setAlias("?");
      rawVariable0.setLabel("?");
      derivedVariable0.setAvailability("?");
      Variable.validateFields(rawVariable0);
      assertEquals("?", rawVariable0.getLabel());
      assertEquals("Unknown", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getOntologyTerms();
      rawVariable0.setYear("e+YKk*x");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.setCleaningDescription("e+YKk*x");
      rawVariable0.setCleaned(true);
      assertEquals("e+YKk*x", rawVariable0.getYear());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIsNewRecord(false);
      derivedVariable1.addSupportingDocument(supportingDocument0);
      derivedVariable0.hasSameDisplayName(derivedVariable1);
      assertFalse(derivedVariable1.isNewRecord());
      assertFalse(derivedVariable1.isCoded());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.3511604142318068
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = "variable.av|ilability.label";
      User user0 = new User();
      User.detectFieldChanges(user0, user0, user0);
      user0.setAddressLine1("");
      user0.setCity("L&OZu9 c1.:3'6fuq%");
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertNotNull(macawChangeEvent0);
      
      rawVariable0.setAlias("");
      rawVariable0.setAlias("");
      assertEquals("", rawVariable0.getAlias());
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getSourceVariables();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable1.getSupportingDocuments();
      derivedVariable0.setSupportingDocuments(arrayList0);
      assertFalse(rawVariable1.isCoded());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.5042900108961854
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getName();
      derivedVariable0.setCleaned(true);
      Variable.validateFields(derivedVariable0);
      derivedVariable0.createVariableSummary();
      assertTrue(derivedVariable0.isCleaned());
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.getName();
      derivedVariable1.getDisplayName();
      assertFalse(derivedVariable1.isNewRecord());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.9440256153973703
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getName();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel1.setIdentifier((-1151));
      User user0 = new User("", "}m{");
      RawVariable rawVariable1 = new RawVariable();
      ValueLabel.detectFieldChanges(user0, rawVariable1, valueLabel0, valueLabel0);
      rawVariable0.addValueLabel(valueLabel0);
      derivedVariable0.getOntologyTerms();
      RawVariable rawVariable2 = new RawVariable();
      RawVariable rawVariable3 = new RawVariable();
      rawVariable3.setColumnEnd("EGG2q\";");
      SupportingDocument supportingDocument3 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument2);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.getCleaningStatus();
      rawVariable3.getAvailability();
      assertEquals("EGG2q\";", rawVariable3.getColumnEnd());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = "variable.availability.label";
      rawVariable0.setAlias("general.fieldValue.unknown");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.getSourceVariables();
      rawVariable0.getValueLabels();
      assertEquals("general.fieldValue.unknown", rawVariable0.getAlias());
      
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.setSupportingDocuments(arrayList0);
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.9391562244933667
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.clear();
      arrayList0.add((SupportingDocument) null);
      arrayList0.add((SupportingDocument) null);
      rawVariable0.addSupportingDocuments(arrayList0);
      rawVariable0.setSupportingDocuments(arrayList0);
      User user0 = new User("(o", "");
      user0.setPhone((String) null);
      user0.setCounty("I=^");
      RawVariable rawVariable1 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      rawVariable0.codeBookNumber = "|\"i%[";
      rawVariable0.getQuestionNumber();
      rawVariable0.isCleaned();
      rawVariable0.getAlias();
      rawVariable0.removeSupportingDocuments(arrayList0);
      rawVariable1.getCleaningDescription();
      rawVariable0.getIdentifier();
      rawVariable0.getAlternativeVariable();
      // Undeclared exception!
      try { 
        rawVariable0.containsSupportingDocument((SupportingDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.786456060735981
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setForm("variable.codeBookNumber.label");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.setSupportingDocuments(arrayList0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList1 = derivedVariable1.getSupportingDocuments();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList1.add(supportingDocument1);
      rawVariable0.removeSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setIdentifier((-1151));
      User user0 = new User("s`|WQUFdlo2xg;", "variable.form.label");
      RawVariable rawVariable1 = new RawVariable();
      User user1 = new User("variable.codeBookNumber.label", "}6");
      rawVariable1.addValueLabel(valueLabel0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.getOntologyTerms();
      RawVariable rawVariable2 = new RawVariable();
      derivedVariable0.setColumnEnd("V6*~L");
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable2.getIdentifier();
      // Undeclared exception!
      try { 
        derivedVariable0.addSourceVariables((ArrayList<Variable>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=3.8768029560122987
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getName();
      derivedVariable0.setCleaned(true);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart("i'#!X");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      LinkedList<RawVariable> linkedList0 = new LinkedList<RawVariable>();
      linkedList0.stream();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList1.removeAll(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList1.add(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      arrayList2.add(ontologyTerm0);
      arrayList2.add(ontologyTerm0);
      rawVariable0.setOntologyTerms(arrayList2);
      ontologyTerm0.setDescription("SZ|");
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      arrayList3.stream();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm2);
      rawVariable0.getYear();
      rawVariable0.setColumnEnd("");
      rawVariable0.clone();
      assertEquals("i'#!X", rawVariable0.getColumnStart());
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.clone();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.clone();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      derivedVariable1.containsSupportingDocument(supportingDocument1);
      ArrayList<OntologyTerm> arrayList4 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      arrayList2.add(ontologyTerm3);
      derivedVariable1.addOntologyTerms(arrayList1);
      derivedVariable0.getForm();
      ArrayList<String> arrayList5 = Variable.validateFields(derivedVariable0);
      assertEquals(1, arrayList5.size());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=3.7119333547517734
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.clone();
      rawVariable0.setCodeBookNumber("|e1PT1.T2.%0}");
      rawVariable0.setColumnEnd("variable.alias.label");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("y#d+;Q");
      ontologyTerm0.setTerm("macaw.system.MacawException");
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.setCategory("variable.alias.label");
      rawVariable0.setQuestionNumber("");
      rawVariable0.getCategory();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      rawVariable0.cloneAttributes(derivedVariable1);
      assertEquals("|e1PT1.T2.%0}", rawVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=3.831924034703167
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("variable.label.label");
      rawVariable0.setCleaningStatus("");
      rawVariable0.setCoded(false);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.form = "variable.label.label";
      ontologyTerm0.setTerm("m +H'{G");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      LinkedList<RawVariable> linkedList0 = new LinkedList<RawVariable>();
      linkedList0.stream();
      arrayList0.removeAll(linkedList0);
      arrayList0.add(ontologyTerm0);
      rawVariable0.setOntologyTerms(arrayList0);
      ontologyTerm0.setDescription("");
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.getYear();
      rawVariable0.setColumnEnd(" .|8aw{&N.-{-8t^NhN");
      rawVariable0.clone();
      Variable.validateFields(rawVariable0);
      rawVariable0.getIdentifier();
      rawVariable0.clone();
      // Undeclared exception!
      try { 
        rawVariable0.containsSupportingDocument((SupportingDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart("07,D)T|{*wSMol>1%m");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setForm("07,D)T|{*wSMol>1%m");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      ArrayList<SupportingDocument> arrayList1 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList1.add(supportingDocument1);
      rawVariable0.removeSupportingDocument(supportingDocument1);
      assertEquals("07,D)T|{*wSMol>1%m", rawVariable0.getForm());
      
      SupportingDocument supportingDocument2 = new SupportingDocument();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.getName();
      derivedVariable0.getDisplayName();
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=3.741786760316629
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("UNABLE_TO_UPDATE_ALIAS_FILE_PATH");
      ontologyTerm0.setTerm((String) null);
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      LinkedList<RawVariable> linkedList0 = new LinkedList<RawVariable>();
      LinkedList<RawVariable> linkedList1 = new LinkedList<RawVariable>();
      linkedList1.stream();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.removeAll(linkedList0);
      arrayList0.add(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList1.add(ontologyTerm0);
      arrayList1.add(ontologyTerm0);
      rawVariable0.setOntologyTerms(arrayList0);
      ontologyTerm0.setDescription("SL|");
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      arrayList2.stream();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      rawVariable0.getYear();
      rawVariable0.setColumnEnd("UNABLE_TO_UPDATE_ALIAS_FILE_PATH");
      rawVariable0.clone();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.clone();
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList1.add(ontologyTerm0);
      derivedVariable0.addOntologyTerms(arrayList3);
      String string0 = derivedVariable0.getForm();
      assertEquals("", string0);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.214534764133424
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart("07,D)T|{*wSMol>1%m");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable0.setSupportingDocuments(arrayList0);
      derivedVariable0.containsSourceVariable(rawVariable0);
      ArrayList<SupportingDocument> arrayList1 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList1.add(supportingDocument0);
      derivedVariable0.removeSupportingDocuments(arrayList1);
      assertEquals("07,D)T|{*wSMol>1%m", rawVariable0.getColumnStart());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=3.088024016491613
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart("07,D)T|{*wSMol>1%m");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setForm("07,D)T|{*wSMol>1%m");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      derivedVariable0.setSupportingDocuments(arrayList0);
      ArrayList<SupportingDocument> arrayList1 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList1.add(supportingDocument1);
      rawVariable0.removeSupportingDocument(supportingDocument1);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setIdentifier((-1151));
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      ValueLabel.detectFieldChanges(user0, rawVariable1, valueLabel0, valueLabel0);
      user0.setPostCode("");
      rawVariable1.addValueLabel(valueLabel0);
      derivedVariable0.getColumnStart();
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      assertEquals("07,D)T|{*wSMol>1%m", rawVariable0.getForm());
      
      RawVariable rawVariable2 = new RawVariable();
      RawVariable rawVariable3 = new RawVariable();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable3, rawVariable3);
      assertEquals("Unknown", rawVariable3.getCategory());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.7808459625592628
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      String string0 = "Ha^%=GkKiE;=kov3TZL";
      derivedVariable0.setName("Ha^%=GkKiE;=kov3TZL");
      derivedVariable0.getLabel();
      derivedVariable0.getColumnEnd();
      derivedVariable0.createVariableSummary();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.codeBookNumber = "";
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.NEW;
      valueLabel1.setIdentifier(0);
      valueLabel1.setEditingOperationType(valueLabel_EditingOperationType0);
      valueLabel0.hasSameDisplayName(valueLabel1);
      ValueLabel.EditingOperationType valueLabel_EditingOperationType1 = ValueLabel.EditingOperationType.NEW;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType1);
      derivedVariable1.removeValueLabel(valueLabel0);
      derivedVariable1.setColumnStart("");
      derivedVariable1.setFilePath("");
      derivedVariable0.removeSourceVariable(derivedVariable1);
      derivedVariable0.getYear();
      // Undeclared exception!
      try { 
        derivedVariable1.containsOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=3.8099992099862403
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("rV)gLD,@r*Q$,zFn5");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.setCategory("V6*~L");
      rawVariable0.setQuestionNumber("<w6f|");
      rawVariable0.getCategory();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      User user0 = new User("<w6f|", "general.fieldValue.unknown");
      User user1 = new User("general.fieldValue.unknown", "w4ixQ7uM4CC6");
      OntologyTerm.detectFieldChanges(user1, ontologyTerm1, ontologyTerm1);
      derivedVariable0.removeOntologyTerm(ontologyTerm1);
      rawVariable0.cloneAttributes(derivedVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      derivedVariable1.removeOntologyTerms(arrayList0);
      derivedVariable1.updateOntologyTerm(ontologyTerm0);
      ArrayList<MacawChangeEvent> arrayList1 = DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertEquals("<w6f|", derivedVariable0.getQuestionNumber());
      assertEquals(2, arrayList1.size());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.7769895692287485
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart("07,D)T|{*wSMol>1%m");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setForm("07,D)T|{*wSMol>1%m");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable0.setSupportingDocuments(arrayList0);
      derivedVariable0.containsSourceVariable(rawVariable0);
      ArrayList<SupportingDocument> arrayList1 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList1.add(supportingDocument0);
      rawVariable0.removeSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      derivedVariable0.removeSupportingDocuments(arrayList1);
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, rawVariable0);
      rawVariable0.getCategory();
      assertEquals("07,D)T|{*wSMol>1%m", rawVariable0.getColumnStart());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.8958646425188386
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      User user1 = new User("rozrYHA?B[q", "");
      Variable.detectFieldChanges(user1, derivedVariable0, derivedVariable0);
      derivedVariable0.setCodeBookNumber("s`|WQUFdlo2xg;");
      derivedVariable0.setNotes("qLJ[+(MW/*J7T'DK");
      derivedVariable0.getColumnStart();
      Variable.detectFieldChanges(user1, derivedVariable0, derivedVariable0);
      assertEquals("qLJ[+(MW/*J7T'DK", derivedVariable0.getNotes());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=3.070375830027805
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      User user1 = new User("variable.notes.label", "rV)gLD,@r*Q$,zFn5");
      user1.setPhone((String) null);
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.setCodeBookNumber("qLJ[+(MW/*J7T'DK");
      ValueLabel valueLabel0 = new ValueLabel();
      user1.setPostCode("variable.columnEnd.label");
      ValueLabel.differencesExist(user0, derivedVariable0, valueLabel0, valueLabel0);
      ValueLabel.detectFieldChanges(user1, derivedVariable0, valueLabel0, valueLabel0);
      derivedVariable0.addValueLabel(valueLabel0);
      derivedVariable0.getOntologyTerms();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setColumnEnd("svv|");
      Variable.validateFields(derivedVariable0);
      derivedVariable1.getAlternativeVariable();
      derivedVariable1.getSourceVariables();
      derivedVariable0.containsSourceVariable(derivedVariable1);
      assertEquals("svv|", derivedVariable0.getColumnEnd());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.6930121983106288
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("variable.label.label");
      rawVariable0.setCleaningStatus("");
      rawVariable0.setCoded(false);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.form = "variable.label.label";
      assertEquals("variable.label.label", rawVariable0.getName());
      
      ontologyTerm0.setTerm("m +H'{G");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.createVariableSummary();
      derivedVariable0.getName();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.getDisplayName();
      RawVariable.validateFields(rawVariable0);
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=3.7422384484409545
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("UNABLE_TO_UPDATE_ALIAS_FILE_PATH");
      ontologyTerm0.setTerm((String) null);
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
      
      LinkedList<RawVariable> linkedList0 = new LinkedList<RawVariable>();
      LinkedList<RawVariable> linkedList1 = new LinkedList<RawVariable>();
      linkedList1.stream();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.removeAll(linkedList0);
      arrayList0.add(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList1.add(ontologyTerm0);
      arrayList1.add(ontologyTerm0);
      rawVariable0.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      User user0 = new User((String) null, "OX6,g`vB|[u*Xz8F*");
      User user1 = new User((String) null, "UNABLE_TO_CHECK_ONTOLOGY_TERM_EXISTS");
      User user2 = new User();
      OntologyTerm.detectFieldChanges(user2, ontologyTerm1, ontologyTerm1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.cloneAttributes(derivedVariable0);
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      rawVariable0.getOntologyTerms();
      derivedVariable1.removeOntologyTerms(arrayList1);
      derivedVariable1.updateOntologyTerm(ontologyTerm1);
      assertFalse(derivedVariable1.isCoded());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.5545558491949714
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getCodeBookNumber();
      User user0 = new User("", "K9E|X\"T");
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<MacawChangeEvent> arrayList0 = RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals(0, arrayList0.size());
      
      derivedVariable0.getQuestionNumber();
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.7567169975450474
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getName();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList0.add(supportingDocument1);
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      rawVariable0.removeSupportingDocument(supportingDocument2);
      SupportingDocument supportingDocument3 = new SupportingDocument();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setIdentifier((-3886));
      User user0 = new User("?[|Ydy@-^JlARhtKDt", "}6");
      RawVariable rawVariable1 = new RawVariable();
      user0.setPostCode("+G=8[Va");
      RawVariable rawVariable2 = new RawVariable();
      ValueLabel.detectFieldChanges(user0, rawVariable2, valueLabel0, valueLabel0);
      RawVariable rawVariable3 = new RawVariable();
      rawVariable1.setAlternativeVariable(rawVariable0);
      ValueLabel valueLabel1 = new ValueLabel();
      rawVariable3.addValueLabel(valueLabel1);
      rawVariable1.getOntologyTerms();
      RawVariable rawVariable4 = new RawVariable();
      rawVariable2.setColumnEnd("?[|Ydy@-^JlARhtKDt");
      assertEquals("?[|Ydy@-^JlARhtKDt", rawVariable2.getColumnEnd());
      
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument1);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.8051063440149733
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.clone();
      ontologyTerm0.clone();
      ontologyTerm0.setTerm("vYzffh`lj\"lw#2");
      ontologyTerm0.clone();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      
      rawVariable0.setCleaningStatus("64A3|oCsQ8Jr");
      rawVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.removeOntologyTerms(arrayList0);
      User user0 = new User("64A3|oCsQ8Jr", "supportingDocument.fileName.saveChanges");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=3.7487813988036907
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("rV)gLD,@r*Q$,zFn5");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.setCategory("V6*~L");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList0.add(ontologyTerm2);
      arrayList0.add(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList2 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      arrayList1.add(ontologyTerm3);
      arrayList2.add(ontologyTerm0);
      rawVariable0.setOntologyTerms(arrayList2);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      User user0 = new User("rV)gLD,@r*Q$,zFn5", "Y_LZg");
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm3);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm4);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.cloneAttributes(rawVariable0);
      assertEquals("Unknown", rawVariable0.getCategory());
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      rawVariable1.getOntologyTerms();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      rawVariable1.getOntologyTerms();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      derivedVariable3.updateOntologyTerm(ontologyTerm7);
      assertFalse(derivedVariable3.isCleaned());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.7567169975450474
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("07,D)T|{*wSMol>1%m");
      RawVariable rawVariable0 = new RawVariable();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList0.add(supportingDocument1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList1 = rawVariable0.getSupportingDocuments();
      derivedVariable0.setSupportingDocuments(arrayList1);
      rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      arrayList1.add(supportingDocument2);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.removeSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument4 = new SupportingDocument();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setIdentifier(618);
      User user0 = new User("", "07,D)T|{*wSMol>1%m");
      RawVariable rawVariable2 = new RawVariable();
      ValueLabel.detectFieldChanges(user0, derivedVariable0, valueLabel0, valueLabel0);
      rawVariable2.getOntologyTerms();
      RawVariable rawVariable3 = new RawVariable();
      rawVariable1.setColumnEnd((String) null);
      SupportingDocument supportingDocument5 = new SupportingDocument();
      boolean boolean1 = derivedVariable0.containsSupportingDocument(supportingDocument2);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(boolean1 == boolean0);
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertTrue(boolean1);
  }

  /**
  //Test case number: 74
  /*Coverage entropy=3.6849250111177536
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart("07,D)T|{*wSMol>1%m");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setForm("07,D)T|{*wSMol>1%m");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      LinkedList<RawVariable> linkedList0 = new LinkedList<RawVariable>();
      LinkedList<RawVariable> linkedList1 = new LinkedList<RawVariable>();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList1.removeAll(linkedList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList1.add(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList3 = rawVariable0.getOntologyTerms();
      arrayList3.add(ontologyTerm0);
      arrayList2.add(ontologyTerm0);
      rawVariable0.setOntologyTerms(arrayList2);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      User user0 = new User("<w6f|", ";wkIH2CG>1)e|qMqg");
      User user1 = new User("<w6f|", "general.fieldValue.unknown");
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm2);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      derivedVariable1.removeOntologyTerm(ontologyTerm3);
      rawVariable0.cloneAttributes(derivedVariable1);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable1.getOntologyTerms();
      derivedVariable0.removeOntologyTerms(arrayList2);
      derivedVariable1.updateOntologyTerm(ontologyTerm0);
      assertEquals("07,D)T|{*wSMol>1%m", derivedVariable1.getColumnStart());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=3.0243288866094233
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      User user1 = new User("rozrYHA?B[q", "");
      Variable.detectFieldChanges(user1, derivedVariable0, derivedVariable0);
      derivedVariable0.setCodeBookNumber("s`|WQUFdlo2xg;");
      ValueLabel valueLabel0 = new ValueLabel();
      user1.setPostCode("e,\"?tthA(ZA[\u0000\u0003");
      ValueLabel.differencesExist(user1, derivedVariable0, valueLabel0, valueLabel0);
      ValueLabel.detectFieldChanges(user0, derivedVariable0, valueLabel0, valueLabel0);
      derivedVariable0.addValueLabel(valueLabel0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setColumnEnd("rCA>&4f$vo!GQ$");
      Variable.validateFields(derivedVariable0);
      assertEquals("s`|WQUFdlo2xg;", derivedVariable0.getCodeBookNumber());
      
      derivedVariable1.getAlternativeVariable();
      derivedVariable1.getSourceVariables();
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
  }
}
