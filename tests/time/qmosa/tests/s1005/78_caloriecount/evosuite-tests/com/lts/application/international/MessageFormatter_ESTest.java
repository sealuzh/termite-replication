/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 18:09:55 GMT 2019
 */

package com.lts.application.international;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.lts.application.ApplicationException;
import com.lts.application.international.MessageFormatter;
import java.io.BufferedInputStream;
import java.io.File;
import java.io.FilterInputStream;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PrintWriter;
import java.io.PushbackInputStream;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.io.StringWriter;
import java.util.Collection;
import java.util.Enumeration;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.MissingResourceException;
import java.util.PropertyResourceBundle;
import java.util.ResourceBundle;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MessageFormatter_ESTest extends MessageFormatter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.1944064129383247
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.addBundle((ResourceBundle) null);
      String string0 = MessageFormatter.DEFAULT_BUNDLE;
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      ApplicationException applicationException0 = new ApplicationException("resources.messages.standard", linkedList0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      MessageFormatter.LoadBundleError messageFormatter_LoadBundleError0 = new MessageFormatter.LoadBundleError("java.properties", applicationException0);
      StringReader stringReader0 = new StringReader(";HYlNqaR7r+FlA!");
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(stringReader0);
      ApplicationException applicationException1 = new ApplicationException(applicationException0, "java.properties", "resources.messages.standard");
      ApplicationException[] applicationExceptionArray0 = new ApplicationException[3];
      applicationExceptionArray0[0] = applicationException0;
      applicationExceptionArray0[1] = applicationException1;
      applicationExceptionArray0[2] = applicationException1;
      linkedList0.toArray(applicationExceptionArray0);
      ApplicationException applicationException2 = new ApplicationException("()}GfD:EZSv07i%3q4", "resources.messages.standard");
      Object object0 = new Object();
      LinkedList<Integer> linkedList1 = new LinkedList<Integer>();
      LinkedList<Integer> linkedList2 = new LinkedList<Integer>(linkedList1);
      Integer integer0 = new Integer((-2057));
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage((Throwable) applicationException1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.1944064129383247
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.addBundle((ResourceBundle) null);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)4;
      byteArray0[1] = (byte)3;
      byteArray0[2] = (byte)2;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)47;
      messageFormatter0.getLastException();
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage(", does not exist in class ", (Object) null, (Object) ", does not exist in class ", (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.addBundle((ResourceBundle) null);
      String string0 = MessageFormatter.DEFAULT_BUNDLE;
      Object object0 = new Object();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      LinkedList<Integer> linkedList1 = new LinkedList<Integer>(linkedList0);
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) linkedList0;
      objectArray0[1] = (Object) "()}GfD:EZSv07i%3q4";
      objectArray0[2] = (Object) "pplcationDirectory";
      objectArray0[3] = (Object) null;
      objectArray0[4] = (Object) "pplcationDirectory";
      objectArray0[7] = (Object) "()}GfD:EZSv07i%3q4";
      objectArray0[6] = (Object) "()}GfD:EZSv07i%3q4";
      Object[] objectArray1 = new Object[3];
      Object object1 = new Object();
      objectArray1[0] = object1;
      objectArray1[1] = (Object) "resources.messages.standard";
      objectArray1[2] = (Object) "=zl#a~.,";
      // Undeclared exception!
      try { 
        messageFormatter0.formatMessage("resources.messages.standard", objectArray1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      ResourceBundle resourceBundle0 = null;
      messageFormatter0.addBundle((ResourceBundle) null);
      String string0 = "()}GfD:EZSv07i%3q4";
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage("()}GfD:EZSv07i%3q4");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale locale0 = Locale.FRENCH;
      Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      String string0 = "Etc-)";
      StackTraceElement stackTraceElement0 = new StackTraceElement("40%xWxz<k=uT'*rG", "Etc-)", "#zO:", (byte)119);
      MockThrowable mockThrowable0 = new MockThrowable((Throwable) null);
      String string1 = "nxC";
      MockThrowable mockThrowable1 = new MockThrowable("nxC", (Throwable) null);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-10);
      sequenceInputStream0.read(byteArray0);
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(sequenceInputStream0);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      String string2 = "KUWi}[5r*2U`b";
      messageFormatter0.formatMessage("KUWi}[5r*2U`b", (Object[]) null, (ResourceBundle) propertyResourceBundle0);
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream((byte) (-10));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.218456332760875
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      ApplicationException applicationException0 = new ApplicationException("resources.messages.standard", (Object[]) messageFormatter0.DEFAULT_BUNDLE_PATH);
      messageFormatter0.myLastException = (Throwable) applicationException0;
      messageFormatter0.getLastException();
      messageFormatter0.getLastException();
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      try { 
        messageFormatter0.initializeResourceBundle((List) linkedList0, (List) linkedList0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Could not find any resource bundle give names: ; and resource path: 
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Locale locale0 = Locale.CANADA;
      locale0.getUnicodeLocaleAttributes();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      linkedList0.add((Locale.LanguageRange) null);
      Locale.getISOCountries();
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      Integer integer0 = new Integer((-2915));
      LinkedList<Integer> linkedList1 = new LinkedList<Integer>();
      Integer integer1 = new Integer((-2915));
      linkedList1.add(integer1);
      Integer integer2 = new Integer((-2915));
      Integer integer3 = new Integer(2034);
      linkedList1.add(integer3);
      Integer integer4 = new Integer(208);
      linkedList1.add(integer4);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.createLoadException(linkedList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Object[] objectArray0 = new Object[8];
      messageFormatter0.listToString((List<String>) null);
      Object object0 = new Object();
      objectArray0[0] = (Object) messageFormatter0;
      objectArray0[1] = (Object) "@~k`l";
      objectArray0[2] = (Object) "@~k`l";
      objectArray0[3] = (Object) "@~k`l";
      objectArray0[7] = (Object) messageFormatter0;
      objectArray0[5] = (Object) "@~k`l";
      objectArray0[6] = (Object) messageFormatter0;
      objectArray0[7] = (Object) "@~k`l";
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream(pipedOutputStream0, (-2187));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.4399756932787802
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Object[] objectArray0 = new Object[2];
      Object object0 = new Object();
      FileSystemHandling.shouldAllThrowIOExceptions();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      MockThrowable mockThrowable0 = new MockThrowable();
      ApplicationException applicationException0 = new ApplicationException(mockThrowable0, "y#d+;Q", objectArray0[0]);
      ApplicationException applicationException1 = new ApplicationException(mockThrowable0, "o+|<0`W7D)xJI", "T.T2.%0}Hws");
      mockThrowable0.addSuppressed(applicationException1);
      applicationException1.getMessage();
      StackTraceElement[] stackTraceElementArray0 = MockThrowable.replacement_getStackTrace(applicationException1);
      ApplicationException applicationException2 = new ApplicationException(applicationException1, (String) null, mockThrowable0);
      Object object1 = new Object();
      Object object2 = new Object();
      List list0 = MessageFormatter.buildList(objectArray0);
      assertEquals(2, list0.size());
      
      StringReader stringReader0 = new StringReader("resources.messages.standard");
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(stringReader0);
      String string0 = messageFormatter0.formatMessage("resources.messages.standard", (Object[]) stackTraceElementArray0, (ResourceBundle) propertyResourceBundle0);
      assertEquals("", string0);
      assertNotNull(string0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      InputStream inputStream0 = null;
      int int0 = 2393;
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);
      Object object0 = new Object();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.tryLoad("", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ResourceBundle", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ClassLoader classLoader1 = classLoader0.getParent();
      ClassLoader classLoader2 = ClassLoader.getSystemClassLoader();
      ClassLoader classLoader3 = classLoader2.getParent();
      ClassLoader classLoader4 = ClassLoader.getSystemClassLoader();
      classLoader0.getParent();
      classLoader2.clearAssertionStatus();
      classLoader1.getParent();
      ClassLoader.getSystemClassLoader();
      classLoader4.setDefaultAssertionStatus(true);
      ClassLoader.getSystemClassLoader();
      classLoader3.getParent();
      ClassLoader.getSystemClassLoader();
      // Undeclared exception!
      try { 
        messageFormatter0.listResources("Error during repository cleanup.\nContinue startup?", (ClassLoader) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale locale0 = Locale.FRENCH;
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      linkedList0.add((Locale.LanguageRange) null);
      Locale.getISOCountries();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0, locale_FilteringMode0);
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0, locale_FilteringMode0);
      linkedList0.add((Locale.LanguageRange) null);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      String string0 = messageFormatter0.listToString(list0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null, 2393);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null);
      String string0 = "(\")[pXk\"\\uW";
      ApplicationException applicationException0 = new ApplicationException(string0);
      ApplicationException applicationException1 = new ApplicationException(applicationException0, "DUW <bSG|`", pushbackInputStream0);
      ApplicationException applicationException2 = new ApplicationException(applicationException0, "messages");
      MockThrowable mockThrowable0 = new MockThrowable(applicationException2);
      MockThrowable.getDefaultStackTrace();
      mockThrowable0.addSuppressed(applicationException1);
      MockThrowable mockThrowable1 = new MockThrowable(applicationException0);
      mockThrowable1.addSuppressed(applicationException1);
      MockThrowable.getDefaultStackTrace();
      Object object0 = new Object();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage((Throwable) mockThrowable1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.4841652152843623
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      ApplicationException applicationException0 = new ApplicationException("hi there", "hi there", messageFormatter0);
      ApplicationException applicationException1 = new ApplicationException(applicationException0, "hi there");
      ApplicationException applicationException2 = new ApplicationException(applicationException0, "applicationDirectory", "hi there", applicationException1);
      MockThrowable mockThrowable0 = new MockThrowable(";`G.zZ", applicationException2);
      ApplicationException applicationException3 = new ApplicationException(mockThrowable0, "|@~k`l", mockThrowable0, "applicationDirectory", messageFormatter0);
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage((Throwable) applicationException3);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.tryLoad((String) null, "hi there");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ResourceBundle", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) messageFormatter0;
      objectArray0[1] = (Object) "com.lts.pest.tree.SimpleTreeListener";
      objectArray0[2] = (Object) messageFormatter0;
      objectArray0[3] = (Object) messageFormatter0;
      objectArray0[4] = (Object) messageFormatter0;
      objectArray0[5] = (Object) "com.lts.pest.tree.SimpleTreeListener";
      objectArray0[6] = (Object) messageFormatter0;
      objectArray0[7] = (Object) "com.lts.pest.tree.SimpleTreeListener";
      // Undeclared exception!
      try { 
        messageFormatter0.formatMessage("com.lts.pest.tree.SimpleTreeListener", objectArray0, (ResourceBundle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Locale locale0 = Locale.CANADA;
      locale0.getUnicodeLocaleKeys();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      linkedList0.add((Locale.LanguageRange) null);
      String[] stringArray0 = Locale.getISOLanguages();
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      Locale.LanguageRange.mapEquivalents(linkedList0, hashMap0);
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      Locale.LanguageRange.mapEquivalents(linkedList1, hashMap0);
      LinkedList<Integer> linkedList2 = new LinkedList<Integer>();
      Integer integer0 = new Integer((-3258));
      linkedList2.add(integer0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      linkedList2.add((Integer) null);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      StringReader stringReader0 = new StringReader("resources.messages.standard");
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(stringReader0);
      String string0 = messageFormatter0.formatMessage("com.lts.application.international.MessageFormatter$LoadBundleError", (Object[]) stringArray0, (ResourceBundle) propertyResourceBundle0);
      assertNull(string0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Object object0 = new Object();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      LinkedList<Integer> linkedList1 = new LinkedList<Integer>(linkedList0);
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) "java.class";
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.formatMessage("java.class", objectArray0, (ResourceBundle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      LinkedList<InputStream> linkedList0 = new LinkedList<InputStream>();
      File file0 = MockFile.createTempFile("resources.messages.standard", "resources.messages.standard");
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      linkedList0.addFirst(mockFileInputStream0);
      // Undeclared exception!
      try { 
        messageFormatter0.initializeResourceBundle((List) linkedList0, (List) linkedList0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.evosuite.runtime.mock.java.io.MockFileInputStream cannot be cast to java.lang.String
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      char[] charArray0 = new char[2];
      charArray0[0] = 'a';
      charArray0[1] = 'a';
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("ntR1|&~S");
      mockPrintWriter0.println(false);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0, false);
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.append((CharSequence) "ntR1|&~S");
      MockPrintWriter mockPrintWriter2 = new MockPrintWriter(mockPrintWriter0, true);
      mockPrintWriter2.print((-323L));
      mockPrintWriter0.print(false);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.temp();
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.6999267696231979
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      List<String> list0 = ResourceBundle.Control.FORMAT_DEFAULT;
      ResourceBundle.Control resourceBundle_Control0 = ResourceBundle.Control.getControl(list0);
      List<String> list1 = resourceBundle_Control0.getFormats("messages");
      Locale locale0 = Locale.CHINESE;
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ClassLoader classLoader1 = classLoader0.getParent();
      ResourceBundle.Control resourceBundle_Control1 = ResourceBundle.Control.getNoFallbackControl(list1);
      List<String> list2 = resourceBundle_Control1.getFormats("8ZX}W!;Vxr");
      classLoader1.getParent();
      // Undeclared exception!
      try { 
        messageFormatter0.initializeResourceBundle(list2, list1, locale0, (ClassLoader) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ResourceBundle", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Locale locale0 = Locale.CANADA;
      ApplicationException applicationException0 = new ApplicationException("; and resource path: ", "h& there", locale0);
      MockThrowable mockThrowable0 = new MockThrowable();
      StringWriter stringWriter0 = new StringWriter(250);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0, false);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter("applicationDirectory");
      mockPrintWriter1.println(true);
      MockPrintWriter mockPrintWriter2 = new MockPrintWriter(stringWriter0, true);
      mockPrintWriter2.append((CharSequence) "applicationDirectory");
      mockThrowable0.printStackTrace((PrintWriter) mockPrintWriter2);
      List<String> list0 = ResourceBundle.Control.FORMAT_CLASS;
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Integer integer0 = new Integer(3);
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage("applicationDirectory", (Object) integer0, (Object) applicationException0, (Object) mockPrintWriter2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.8641220054657963
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Integer integer0 = new Integer(4649);
      Integer integer1 = new Integer(2315);
      Integer integer2 = new Integer((-2497));
      LinkedList<Integer> linkedList1 = new LinkedList<Integer>();
      Integer integer3 = new Integer((-1));
      linkedList0.add(integer1);
      Integer integer4 = new Integer((-540));
      LinkedList<Integer> linkedList2 = new LinkedList<Integer>();
      Integer integer5 = new Integer(127);
      Integer integer6 = new Integer((-1904));
      Integer integer7 = new Integer((-3128));
      linkedList1.add(integer7);
      Integer integer8 = new Integer((-540));
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      classLoader0.getParent();
      Locale locale0 = Locale.GERMAN;
      MessageFormatter messageFormatter0 = new MessageFormatter();
      List<String> list0 = ResourceBundle.Control.FORMAT_DEFAULT;
      try { 
        messageFormatter0.initializeResourceBundle(list0, list0, locale0, classLoader0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Could not find any resource bundle give names: java.class, java.properties; and resource path: java.class, java.properties
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.initializeResourceBundle();
      String string0 = "|@~k`l";
      // Undeclared exception!
      try { 
        ResourceBundle.getBundle("resources.messages.standard");
        fail("Expecting exception: MissingResourceException");
      
      } catch(MissingResourceException e) {
         //
         // Can't find bundle for base name resources.messages.standard, locale en
         //
         verifyException("java.util.ResourceBundle", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.8791326374377332
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "|@~k`l");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      List<String> list0 = ResourceBundle.Control.FORMAT_DEFAULT;
      MessageFormatter messageFormatter1 = new MessageFormatter();
      String string0 = messageFormatter1.listToString(list0);
      assertEquals("java.class, java.properties", string0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.1831569871105287
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null, 2393);
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      bufferedInputStream0.mark((-4086));
      Object object0 = new Object();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      BufferedInputStream bufferedInputStream1 = new BufferedInputStream((InputStream) null);
      BufferedInputStream bufferedInputStream2 = new BufferedInputStream(bufferedInputStream0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      BufferedInputStream bufferedInputStream3 = new BufferedInputStream(sequenceInputStream0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(bufferedInputStream3, 2393);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      List<String> list0 = ResourceBundle.Control.FORMAT_CLASS;
      MessageFormatter messageFormatter1 = new MessageFormatter();
      try { 
        messageFormatter0.initializeResourceBundle(list0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Could not find any resource bundle give names: messages; and resource path: java.class
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.tryLoad("Y&4[1;*L?+S,", "messages");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ResourceBundle", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Object object0 = new Object();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null, 2393);
      String string0 = "Jzk)'FvN?N,,j;VLe";
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) linkedList0;
      Object object1 = new Object();
      objectArray0[1] = object1;
      objectArray0[2] = (Object) null;
      Object object2 = new Object();
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage("?J@<C8bYi\"=tbCSO\"h", (Object) linkedList0, object2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.948720592834763
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      String string0 = ".bak";
      Object object0 = new Object();
      int int0 = (-2070787801);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      linkedList0.add((Integer) null);
      // Undeclared exception!
      try { 
        messageFormatter0.initializeResourceBundle((List) linkedList0, (List) linkedList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ResourceBundle$CacheKey", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      classLoader0.setClassAssertionStatus("g+u<", true);
      classLoader0.setClassAssertionStatus("G~^nt+", true);
      classLoader0.setPackageAssertionStatus("QE4*Xm![ZMtRh8, 6eQ", true);
      classLoader0.setDefaultAssertionStatus(false);
      classLoader0.getParent();
      List list0 = MessageFormatter.buildList((Object[]) null);
      assertEquals(0, list0.size());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)3;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)2;
      byteArray0[3] = (byte)4;
      byteArray0[4] = (byte)2;
      byteArray0[5] = (byte) (-91);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "\";9m");
      MessageFormatter messageFormatter0 = new MessageFormatter();
      List list0 = messageFormatter0.loadCriticalBundles();
      assertTrue(list0.isEmpty());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter(214);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0, false);
      char[] charArray0 = new char[1];
      mockPrintWriter0.print(charArray0);
      mockPrintWriter0.print(charArray0);
      mockPrintWriter0.println(0.0);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter("applicationDirectory");
      MockPrintWriter mockPrintWriter2 = new MockPrintWriter("applicationDirectory");
      mockPrintWriter1.print((double) 214);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.tryLoad("l");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ClassLoader classLoader1 = classLoader0.getParent();
      ClassLoader.getSystemClassLoader();
      classLoader1.getParent();
      classLoader0.clearAssertionStatus();
      ClassLoader classLoader2 = classLoader0.getParent();
      classLoader2.setDefaultAssertionStatus(false);
      ClassLoader classLoader3 = ClassLoader.getSystemClassLoader();
      List list0 = messageFormatter0.listResources("X", classLoader3);
      assertTrue(list0.isEmpty());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Integer integer0 = new Integer(4649);
      Integer integer1 = new Integer((-1073741822));
      Integer integer2 = new Integer((-1073741822));
      Integer integer3 = new Integer((-1));
      linkedList0.add(integer3);
      Integer integer4 = new Integer(230);
      Integer integer5 = new Integer(233);
      Integer integer6 = new Integer(233);
      linkedList0.add(integer6);
      Integer integer7 = new Integer(1);
      LinkedList<Integer> linkedList1 = new LinkedList<Integer>();
      Integer integer8 = new Integer(1);
      linkedList1.add(integer8);
      Integer integer9 = new Integer(4649);
      Integer integer10 = new Integer(1);
      Integer integer11 = new Integer(739);
      linkedList1.add(integer11);
      MessageFormatter messageFormatter1 = new MessageFormatter();
      try { 
        messageFormatter0.formatMessage((String) null, messageFormatter1.DEFAULT_BUNDLE_PATH);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) messageFormatter0;
      objectArray0[1] = (Object) "";
      objectArray0[2] = (Object) messageFormatter0;
      objectArray0[3] = (Object) "";
      objectArray0[4] = (Object) "";
      objectArray0[5] = (Object) "";
      objectArray0[6] = (Object) "";
      objectArray0[7] = (Object) "";
      objectArray0[8] = (Object) "";
      try { 
        messageFormatter0.getMessage("", objectArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      String string0 = "w_w}?\\0Nmr0";
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage("w_w}?\u0000Nmr0");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Integer integer0 = new Integer(1468);
      Integer integer1 = new Integer(1772);
      Integer integer2 = new Integer(1468);
      Integer integer3 = new Integer(0);
      Integer integer4 = new Integer(233);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      linkedList0.add(integer3);
      Integer integer5 = new Integer((-1677));
      LinkedList<Integer> linkedList1 = new LinkedList<Integer>();
      Integer integer6 = new Integer((-1677));
      Integer integer7 = new Integer(230);
      Integer integer8 = new Integer(739);
      linkedList0.add(integer8);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      ApplicationException applicationException0 = messageFormatter0.createLoadException(linkedList1);
      assertEquals("critical.com.lts.application.errors.resourceBundle.load", applicationException0.getKey());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Integer integer0 = new Integer(4649);
      Integer integer1 = new Integer((-1073741822));
      Integer integer2 = new Integer((-1073741822));
      linkedList0.add(integer2);
      Integer integer3 = new Integer(230);
      Integer integer4 = new Integer(233);
      linkedList0.add(integer4);
      Integer integer5 = new Integer(1543);
      LinkedList<Integer> linkedList1 = new LinkedList<Integer>();
      linkedList0.add(integer5);
      Integer integer6 = new Integer((-1791));
      linkedList1.add(integer3);
      // Undeclared exception!
      try { 
        messageFormatter0.createLoadException(linkedList0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Integer cannot be cast to com.lts.application.international.MessageFormatter$LoadBundleError
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null, 2393);
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      BufferedInputStream bufferedInputStream1 = new BufferedInputStream((InputStream) null);
      BufferedInputStream bufferedInputStream2 = new BufferedInputStream(bufferedInputStream0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null, 2393);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      PushbackInputStream pushbackInputStream1 = new PushbackInputStream(pushbackInputStream0, 2393);
      MessageFormatter messageFormatter1 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter1.addResourceBundles();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      classLoader0.getParent();
      ClassLoader classLoader1 = ClassLoader.getSystemClassLoader();
      classLoader1.setDefaultAssertionStatus(true);
      ClassLoader classLoader2 = ClassLoader.getSystemClassLoader();
      classLoader1.setPackageAssertionStatus("Z!", true);
      classLoader2.getParent();
      classLoader1.clearAssertionStatus();
      ClassLoader classLoader3 = classLoader2.getParent();
      classLoader2.setDefaultAssertionStatus(false);
      ClassLoader.getSystemClassLoader();
      classLoader3.getParent();
      // Undeclared exception!
      try { 
        messageFormatter0.initializeResourceBundle((List<String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter(214);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0, true);
      char[] charArray0 = new char[2];
      charArray0[0] = 'a';
      charArray0[1] = 'a';
      mockPrintWriter0.print(charArray0);
      mockPrintWriter0.print(charArray0);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter("ntR1|&~S");
      mockPrintWriter0.append('_');
      mockPrintWriter0.print((double) 214);
      mockPrintWriter1.println(false);
      MockPrintWriter mockPrintWriter2 = new MockPrintWriter(mockPrintWriter1, false);
      StringWriter stringWriter1 = stringWriter0.append('a');
      stringWriter1.append((CharSequence) "ntR1|&~S");
      MockPrintWriter mockPrintWriter3 = new MockPrintWriter(mockPrintWriter1, true);
      mockPrintWriter3.print((-323L));
      mockPrintWriter1.print(false);
      mockPrintWriter0.print("-}CT7b)`SG!o>=U&Jl1");
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.temp();
  }
}
