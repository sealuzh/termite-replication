/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 18:10:08 GMT 2019
 */

package org.dom4j.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.dom4j.io.OutputFormat;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class OutputFormat_ESTest extends OutputFormat_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.2407560846182575
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      boolean boolean0 = true;
      OutputFormat outputFormat1 = new OutputFormat();
      outputFormat0.setLineSeparator("VpS :r");
      String string0 = "-indentSize";
      String[] stringArray0 = new String[9];
      stringArray0[0] = ">%X^SgU}";
      stringArray0[1] = "-indentSize";
      stringArray0[2] = ">%X^SgU}";
      stringArray0[3] = "VpS :r";
      stringArray0[4] = "VpS :r";
      stringArray0[5] = "VpS :r";
      stringArray0[6] = "VpS :r";
      stringArray0[7] = "VpS :r";
      stringArray0[8] = ">%X^SgU}";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 1);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \">%X^SgU}\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.5637041569201946
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setSuppressDeclaration(true);
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat0.setLineSeparator("");
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.setIndent("-lineSeparator");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-xhtml>%X^MSgU}";
      stringArray0[1] = "-lineSeparator";
      stringArray0[2] = "";
      outputFormat1.parseOptions(stringArray0, 0);
      outputFormat1.setNewLineAfterDeclaration(false);
      outputFormat0.setIndent(true);
      outputFormat1.getLineSeparator();
      outputFormat0.setIndent("-lineSeparator");
      assertTrue(outputFormat0.isSuppressDeclaration());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.9847882836811908
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.getEncoding();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "UTF-8";
      stringArray0[1] = "UTF-8";
      stringArray0[2] = "UTF-8";
      stringArray0[3] = "UTF-8";
      stringArray0[4] = "UTF-8";
      stringArray0[5] = "UTF-8";
      stringArray0[6] = "UTF-8";
      outputFormat0.setEncoding("");
      outputFormat0.setNewLineAfterNTags((-1697));
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.getEncoding();
      outputFormat0.parseOptions(stringArray0, 0);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-163));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -163
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.614263644648828
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setSuppressDeclaration(true);
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      String[] stringArray0 = new String[8];
      stringArray0[0] = ",ZZqde,p`y7";
      stringArray0[1] = "O!0b|r9iLv";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "-newlines";
      stringArray0[5] = "mWJOXj2|k%4>X6Igr%";
      stringArray0[6] = "[6OeW}Aup";
      stringArray0[7] = "Y?ImfQ:P[R";
      outputFormat1.parseOptions(stringArray0, 2);
      String[] stringArray1 = new String[5];
      outputFormat1.setLineSeparator("-indent");
      stringArray1[0] = "-xhtmlUTF-8";
      stringArray1[1] = "-xhtmlUTF-8";
      stringArray1[2] = "-indent";
      stringArray1[3] = "-xhtmlUTF-8";
      stringArray1[4] = "A";
      outputFormat1.parseOptions(stringArray1, 1);
      OutputFormat outputFormat2 = new OutputFormat();
      outputFormat2.setNewLineAfterDeclaration(true);
      OutputFormat outputFormat3 = new OutputFormat();
      outputFormat1.setIndent(true);
      OutputFormat.createPrettyPrint();
      outputFormat3.parseOptions(stringArray1, 2);
      outputFormat0.getAttributeQuoteCharacter();
      assertTrue(outputFormat0.isSuppressDeclaration());
      
      outputFormat2.setIndent("A");
      OutputFormat outputFormat4 = OutputFormat.createCompactFormat();
      outputFormat2.setIndent("-xhtmlUTF-8");
      outputFormat4.setIndent((String) null);
      assertFalse(outputFormat4.isNewlines());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.93504084661911
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null);
      outputFormat0.setLineSeparator("-expandEmpty-expan~Empty-xhtHlUTF-8");
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.setIndent("-xhtml>%X^MSgU}");
      String[] stringArray0 = new String[9];
      stringArray0[0] = "-expandEmpty-expan~Empty-xhtHlUTF-8";
      stringArray0[1] = null;
      stringArray0[2] = null;
      stringArray0[3] = null;
      stringArray0[8] = "-expandEmpty-expan~Empty-xhtHlUTF-8";
      stringArray0[5] = null;
      stringArray0[6] = "-xhtml>%X^MSgU}";
      stringArray0[7] = "-xhtml>%X^MSgU}";
      stringArray0[8] = null;
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.7567169975450474
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.setIndentSize((-137));
      outputFormat0.setXHTML(true);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setXHTML(true);
      outputFormat0.setIndent("7Zwe:o");
      outputFormat0.isXHTML();
      assertEquals("7Zwe:o", outputFormat0.getIndent());
      
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      assertEquals('\"', outputFormat1.getAttributeQuoteCharacter());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.258069577840546
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.setLineSeparator("");
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.setIndent("+OKA$z.pS_e_sqP#\"");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-newlines";
      stringArray0[1] = "";
      stringArray0[2] = "+OKA$z.pS_e_sqP#\"";
      stringArray0[3] = "+OKA$z.pS_e_sqP#\"";
      stringArray0[4] = "-newlines";
      stringArray0[5] = "+OKA$z.pS_e_sqP#\"";
      stringArray0[6] = "+OKA$z.pS_e_sqP#\"";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setNewLineAfterDeclaration(false);
      assertEquals("+OKA$z.pS_e_sqP#\"", outputFormat0.getIndent());
      
      outputFormat0.setIndent(true);
      outputFormat0.getLineSeparator();
      int int0 = outputFormat0.parseOptions(stringArray0, 0);
      assertEquals(1, int0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.9885676564524344
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("VpS :r");
      outputFormat0.setLineSeparator((String) null);
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.setIndent("-xhtml>%X^MSgU}");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-xhtml>%X^MSgU}";
      stringArray0[1] = "VpS :r";
      stringArray0[2] = "-xhtml>%X^MSgU}";
      stringArray0[3] = "-xhtml>%X^MSgU}";
      stringArray0[4] = "-xhtml>%X^MSgU}";
      stringArray0[5] = "-xhtml>%X^MSgU}";
      stringArray0[6] = null;
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setIndent(false);
      outputFormat0.getLineSeparator();
      outputFormat0.setIndent(">gDy=T~e[FsxDN}J}U");
      assertFalse(outputFormat0.isNewLineAfterDeclaration());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.8355442696465665
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat0.setAttributeQuoteCharacter('\"');
      outputFormat0.getEncoding();
      String string0 = outputFormat0.getEncoding();
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertTrue(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isNewlines());
      assertEquals("UTF-8", string0);
      assertFalse(outputFormat0.isPadText());
      
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      assertEquals("  ", outputFormat1.getIndent());
      assertTrue(outputFormat1.isTrimText());
      assertFalse(outputFormat1.isExpandEmptyElements());
      assertEquals("\n", outputFormat1.getLineSeparator());
      assertTrue(outputFormat1.isNewlines());
      assertTrue(outputFormat1.isNewLineAfterDeclaration());
      assertTrue(outputFormat1.isPadText());
      assertFalse(outputFormat1.isSuppressDeclaration());
      assertFalse(outputFormat1.isOmitEncoding());
      assertFalse(outputFormat1.isXHTML());
      assertEquals(0, outputFormat1.getNewLineAfterNTags());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("AOd_wj");
      String[] stringArray0 = new String[9];
      stringArray0[0] = "AOd_wj";
      stringArray0[1] = "AOd_wj";
      stringArray0[2] = "AOd_wj";
      stringArray0[3] = "AOd_wj";
      stringArray0[4] = "AOd_wj";
      stringArray0[5] = "A";
      stringArray0[6] = "-xhtmlUTF-8";
      OutputFormat outputFormat1 = new OutputFormat("g<K+%n^ZpsM", true, "A");
      outputFormat0.setAttributeQuoteCharacter('\'');
      assertEquals('\'', outputFormat0.getAttributeQuoteCharacter());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.5407000528031478
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null);
      outputFormat0.setNewLineAfterNTags((-3712));
      String[] stringArray0 = new String[5];
      stringArray0[0] = null;
      stringArray0[1] = ">%X^SgU}";
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.setIndent(false);
      outputFormat0.getLineSeparator();
      outputFormat0.parseOptions(stringArray0, 1);
      assertEquals((-3712), outputFormat0.getNewLineAfterNTags());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.012572655080551
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      int int0 = (-1166);
      outputFormat1.setIndentSize((-1166));
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setIndent((String) null);
      outputFormat0.setSuppressDeclaration(false);
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      boolean boolean0 = false;
      outputFormat1.setPadText(false);
      outputFormat2.setOmitEncoding(true);
      char char0 = '!';
      // Undeclared exception!
      try { 
        outputFormat2.setAttributeQuoteCharacter('!');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (!)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.788336980067754
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setEncoding("-lineSeparator");
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setSuppressDeclaration(true);
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setIndentSize(0);
      outputFormat0.setOmitEncoding(true);
      outputFormat1.setIndent("");
      outputFormat0.setIndent("l#4");
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('%');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (%)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.924886245768638
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("\n");
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setPadText(true);
      outputFormat0.setTrimText(false);
      outputFormat0.setNewlines(true);
      String[] stringArray0 = new String[0];
      outputFormat0.setXHTML(true);
      String[] stringArray1 = new String[0];
      outputFormat0.parseOptions(stringArray1, 4);
      outputFormat0.setIndent("\n");
      outputFormat0.isPadText();
      assertTrue(outputFormat0.isXHTML());
      assertTrue(outputFormat0.isPadText());
      
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      assertTrue(outputFormat1.isNewlines());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.1045757807017087
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setEncoding((String) null);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setLineSeparator("t?< 8C");
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.setTrimText(false);
      outputFormat0.setOmitEncoding(false);
      String[] stringArray0 = new String[14];
      stringArray0[0] = ">%X^SgU}";
      stringArray0[2] = "-xhtmlUTF-8";
      stringArray0[3] = "t?< 8C";
      stringArray0[4] = null;
      stringArray0[6] = null;
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.getEncoding();
      assertTrue(outputFormat0.isSuppressDeclaration());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null);
      outputFormat0.setLineSeparator((String) null);
      outputFormat0.setIndent((String) null);
      outputFormat0.setTrimText(true);
      outputFormat0.setOmitEncoding(true);
      String[] stringArray0 = new String[6];
      stringArray0[0] = null;
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setIndent(false);
      assertTrue(outputFormat0.isOmitEncoding());
      assertTrue(outputFormat0.isSuppressDeclaration());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true);
      outputFormat0.getAttributeQuoteCharacter();
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('G');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (G)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.24319204066033
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null, false);
      outputFormat0.setExpandEmptyElements(true);
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setLineSeparator((String) null);
      outputFormat1.setEncoding(",p77tY");
      outputFormat0.setTrimText(false);
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat0.isOmitEncoding();
      outputFormat0.setNewlines(true);
      outputFormat0.isExpandEmptyElements();
      outputFormat0.setIndentSize((-1862));
      OutputFormat.createPrettyPrint();
      outputFormat0.setIndent(true);
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setTrimText(false);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat1.isExpandEmptyElements();
      String[] stringArray0 = new String[0];
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1862));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1862
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.192898685950695
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setPadText(true);
      outputFormat0.setPadText(false);
      outputFormat0.isXHTML();
      outputFormat0.getIndent();
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.getLineSeparator();
      outputFormat0.setNewLineAfterNTags((-1794256718));
      outputFormat0.setLineSeparator("\n");
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setIndent((String) null);
      assertFalse(outputFormat0.isPadText());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.0113645074166633
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("VpS :r", false, "HCyHEXBT-qQMP");
      outputFormat0.setLineSeparator("HCyHEXBT-qQMP");
      outputFormat0.setIndentSize(2489);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "VKuLiKe`TzjJ #";
      stringArray0[1] = "HCyHEXBT-qQMP";
      stringArray0[2] = "u-\"JH:L N9GO";
      stringArray0[3] = "VpS :r";
      stringArray0[4] = "HCyHEXBT-qQMP";
      stringArray0[5] = "u-\"JH:L N9GO";
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.setIndent(false);
      outputFormat0.setIndent(true);
      assertEquals("HCyHEXBT-qQMP", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.19953461806653
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("AOd_wj");
      String[] stringArray0 = new String[4];
      stringArray0[0] = "AOd_wj";
      outputFormat0.setIndent("");
      outputFormat0.setLineSeparator("");
      outputFormat0.setIndentSize((-1152774979));
      String[] stringArray1 = new String[3];
      stringArray1[0] = "";
      stringArray1[1] = "u-\"JH:L N9GO";
      outputFormat0.parseOptions(stringArray1, 1369);
      boolean boolean0 = true;
      outputFormat0.setNewLineAfterDeclaration(true);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1885496142));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1885496142
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.301608716407634
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("VpS :r");
      outputFormat0.setLineSeparator((String) null);
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.setIndent("-xhtml>%X^MSgU}");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-xhtml>%X^MSgU}";
      stringArray0[1] = "VpS :r";
      stringArray0[2] = "-xhtml>%X^MSgU}";
      stringArray0[3] = "-xhtml>%X^MSgU}";
      stringArray0[4] = "-xhtml>%X^MSgU}";
      stringArray0[5] = "-xhtml>%X^MSgU}";
      stringArray0[6] = null;
      outputFormat0.setNewLineAfterDeclaration(false);
      assertEquals("-xhtml>%X^MSgU}", outputFormat0.getIndent());
      
      outputFormat0.setIndent(false);
      outputFormat0.getLineSeparator();
      outputFormat0.setIndent("");
      assertEquals("UTF-8", outputFormat0.getEncoding());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      outputFormat0.parseOptions(stringArray0, 2);
      String[] stringArray1 = new String[3];
      stringArray1[0] = "";
      outputFormat0.setOmitEncoding(false);
      stringArray1[1] = "-indent";
      stringArray1[2] = "";
      outputFormat0.parseOptions(stringArray1, 872);
      String string0 = outputFormat0.getEncoding();
      assertEquals("", outputFormat0.getIndent());
      assertFalse(outputFormat0.isXHTML());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isPadText());
      assertFalse(outputFormat0.isTrimText());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isNewlines());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertEquals("UTF-8", string0);
      assertEquals("\n", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.576534609090467
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("I,;");
      outputFormat0.setXHTML(false);
      outputFormat0.isNewlines();
      outputFormat0.setIndent((String) null);
      outputFormat0.setEncoding("I,;");
      outputFormat0.isExpandEmptyElements();
      outputFormat0.setPadText(false);
      outputFormat0.setPadText(true);
      outputFormat0.isTrimText();
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.setIndent("I,;");
      assertTrue(outputFormat0.isPadText());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.852140740384332
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("VpS :r");
      outputFormat0.setLineSeparator((String) null);
      outputFormat0.setNewLineAfterNTags(2921);
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.setIndent("VpS :r");
      outputFormat0.setIndent("-xhtml>%X^MSgU}");
      outputFormat0.setTrimText(true);
      outputFormat0.setOmitEncoding(true);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-xhtml>%X^MSgU}";
      stringArray0[1] = "VpS :r";
      stringArray0[2] = "-xhtml>%X^MSgU}";
      stringArray0[3] = "-xhtml>%X^MSgU}";
      stringArray0[4] = "-xhtml>%X^MSgU}";
      stringArray0[5] = "-xhtml>%X^MSgU}";
      outputFormat0.parseOptions(stringArray0, 2921);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setIndent(false);
      outputFormat0.getLineSeparator();
      outputFormat0.setIndent(">gDy=T~e[FsxDN}J}U");
      outputFormat0.setIndent("-expandEmpty-xhtml>%X^MSgU}");
      assertEquals("-expandEmpty-xhtml>%X^MSgU}", outputFormat0.getIndent());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.3512204845008253
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setNewLineAfterNTags((-729));
      outputFormat0.setIndentSize((-2560));
      outputFormat0.setNewlines(true);
      outputFormat0.setNewLineAfterNTags((-2560));
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat0.setIndent(true);
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.setIndentSize(1733);
      outputFormat0.isTrimText();
      outputFormat1.isNewLineAfterDeclaration();
      outputFormat0.setNewlines(true);
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setIndent(false);
      outputFormat1.getNewLineAfterNTags();
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat1.setNewLineAfterDeclaration(false);
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      outputFormat1.setSuppressDeclaration(true);
      outputFormat1.getLineSeparator();
      outputFormat0.isPadText();
      assertEquals((-2560), outputFormat0.getNewLineAfterNTags());
      
      outputFormat1.setXHTML(true);
      outputFormat2.setOmitEncoding(true);
      OutputFormat outputFormat3 = OutputFormat.createCompactFormat();
      assertEquals('\"', outputFormat3.getAttributeQuoteCharacter());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.362843374280337
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[1] = "";
      outputFormat0.setNewlines(true);
      outputFormat0.setIndentSize((-1231));
      outputFormat0.setNewlines(false);
      outputFormat0.setNewLineAfterDeclaration(false);
      stringArray0[2] = "";
      stringArray0[3] = "";
      outputFormat0.setIndentSize(1661);
      outputFormat0.setIndent("");
      outputFormat0.setLineSeparator((String) null);
      outputFormat0.parseOptions(stringArray0, 4);
      assertFalse(outputFormat0.isNewlines());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.1624275821145096
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.setSuppressDeclaration(false);
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat0.setIndentSize(3296);
      outputFormat0.setLineSeparator((String) null);
      outputFormat1.setNewLineAfterDeclaration(false);
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.isPadText();
      outputFormat2.setIndent(true);
      outputFormat0.isSuppressDeclaration();
      assertTrue(outputFormat0.isSuppressDeclaration());
      
      outputFormat2.isNewLineAfterDeclaration();
      outputFormat1.setNewLineAfterDeclaration(false);
      outputFormat2.setIndent((String) null);
      OutputFormat outputFormat3 = OutputFormat.createPrettyPrint();
      assertTrue(outputFormat3.isPadText());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.852140740384332
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      assertFalse(outputFormat0.isNewlines());
      assertTrue(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isPadText());
      
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      assertEquals("  ", outputFormat1.getIndent());
      
      outputFormat1.setIndent((String) null);
      String[] stringArray0 = new String[0];
      outputFormat1.parseOptions(stringArray0, 570);
      boolean boolean0 = outputFormat1.isXHTML();
      assertFalse(boolean0);
      assertEquals("\n", outputFormat1.getLineSeparator());
      assertEquals(0, outputFormat1.getNewLineAfterNTags());
      assertEquals("UTF-8", outputFormat1.getEncoding());
      assertTrue(outputFormat1.isTrimText());
      assertTrue(outputFormat1.isPadText());
      assertFalse(outputFormat1.isOmitEncoding());
      assertTrue(outputFormat1.isNewlines());
      assertFalse(outputFormat1.isSuppressDeclaration());
      assertEquals('\"', outputFormat1.getAttributeQuoteCharacter());
      assertFalse(outputFormat1.isExpandEmptyElements());
      assertTrue(outputFormat1.isNewLineAfterDeclaration());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.3823452227303257
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setEncoding("-lineSeparator");
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setIndentSize(0);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setIndent("l#4");
      outputFormat0.getEncoding();
      outputFormat0.setIndent("org.dom4j.io.OutputFormat");
      assertEquals("org.dom4j.io.OutputFormat", outputFormat0.getIndent());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.0385617635055233
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[0] = "\"=C9m*>P$No@PM:o\"L!";
      stringArray0[1] = "";
      stringArray0[2] = "\"=C9m*>P$No@PM:o\"L!";
      stringArray0[3] = "\"=C9m*>P$No@PM:o\"L!";
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      int int0 = outputFormat0.parseOptions(stringArray0, 0);
      assertFalse(outputFormat0.isPadText());
      assertEquals(0, int0);
      assertFalse(outputFormat0.isNewlines());
      assertTrue(outputFormat0.isTrimText());
      
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      assertEquals("UTF-8", outputFormat1.getEncoding());
      assertEquals("  ", outputFormat1.getIndent());
      assertEquals("\n", outputFormat1.getLineSeparator());
      assertEquals(0, outputFormat1.getNewLineAfterNTags());
      assertTrue(outputFormat1.isPadText());
      assertFalse(outputFormat1.isSuppressDeclaration());
      assertTrue(outputFormat1.isTrimText());
      assertTrue(outputFormat1.isNewLineAfterDeclaration());
      assertFalse(outputFormat1.isExpandEmptyElements());
      assertTrue(outputFormat1.isNewlines());
      assertFalse(outputFormat1.isOmitEncoding());
      assertFalse(outputFormat1.isXHTML());
      assertEquals('\"', outputFormat1.getAttributeQuoteCharacter());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.357838240407283
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true);
      outputFormat0.setOmitEncoding(true);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.getLineSeparator();
      outputFormat0.getIndent();
      assertTrue(outputFormat0.isOmitEncoding());
      
      boolean boolean0 = outputFormat1.isNewlines();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.042432731247459
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      String[] stringArray0 = new String[3];
      stringArray0[0] = null;
      stringArray0[1] = "-,nfE{='.[$1-Cc";
      stringArray0[2] = "";
      outputFormat0.parseOptions(stringArray0, 1);
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat1 = new OutputFormat();
      outputFormat1.parseOptions(stringArray0, 1);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-478));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -478
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.003224567265651
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.setTrimText(true);
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setIndent("r! kS?PTquD");
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setIndent(true);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.setTrimText(false);
      outputFormat0.getEncoding();
      assertFalse(outputFormat0.isTrimText());
      
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setSuppressDeclaration(false);
      outputFormat1.setIndentSize(1812);
      outputFormat1.setIndentSize(1812);
      outputFormat1.setNewLineAfterDeclaration(true);
      outputFormat1.setOmitEncoding(false);
      outputFormat1.getIndent();
      assertFalse(outputFormat1.isNewlines());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-,nfE{='.[$1", false, "-indent");
      String string0 = outputFormat0.getLineSeparator();
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("\n", string0);
      assertFalse(outputFormat0.isXHTML());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isPadText());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isNewlines());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertEquals("-,nfE{='.[$1", outputFormat0.getIndent());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertEquals("-indent", outputFormat0.getEncoding());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "AOd_wj";
      stringArray0[1] = "-indent";
      stringArray0[2] = "-lineSeparator";
      stringArray0[3] = "x%DRl7";
      stringArray0[4] = "@GJ[XLs`HPVTh%";
      stringArray0[5] = "@J2q3tA.5JM`T#bL";
      stringArray0[6] = "-lineSeparator";
      outputFormat0.parseOptions(stringArray0, 433);
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isXHTML());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isPadText());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.8493821196946767
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("AOd_wj");
      String[] stringArray0 = new String[9];
      stringArray0[0] = "AOd_wj";
      stringArray0[1] = "AOd_wj";
      stringArray0[2] = "AOd_wj";
      stringArray0[3] = "AOd_wj";
      stringArray0[4] = "AOd_wj";
      stringArray0[5] = "A";
      outputFormat0.setTrimText(true);
      stringArray0[6] = "-xhtmlUTF-8";
      stringArray0[7] = "AOd_wj";
      outputFormat0.setPadText(false);
      outputFormat0.setIndent("A");
      outputFormat0.parseOptions(stringArray0, 2421);
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.isPadText();
      outputFormat0.isOmitEncoding();
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.isPadText();
      outputFormat0.isXHTML();
      outputFormat0.getEncoding();
      assertEquals("A", outputFormat0.getIndent());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null);
      outputFormat0.setLineSeparator(">%X^SgU}");
      outputFormat0.setIndent(false);
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setIndent(false);
      outputFormat0.getLineSeparator();
      outputFormat0.setIndent((String) null);
      assertEquals(">%X^SgU}", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null, false, "oRUoT!&kCHUT Aw");
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('n');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (n)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null);
      outputFormat0.setLineSeparator(">%X^SgU}");
      outputFormat0.setIndent(false);
      outputFormat0.getLineSeparator();
      outputFormat0.setIndent("");
      assertEquals(">%X^SgU}", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.19953461806653
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null);
      outputFormat0.setLineSeparator(">%X^SgU}");
      outputFormat0.setIndent(false);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setIndent(true);
      outputFormat0.getLineSeparator();
      outputFormat0.setIndent(">%X^SgU}");
      assertEquals(">%X^SgU}", outputFormat0.getIndent());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.9315813157625517
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.setSuppressDeclaration(false);
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat0.setLineSeparator((String) null);
      outputFormat0.setNewLineAfterDeclaration(false);
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.isPadText();
      outputFormat2.setLineSeparator((String) null);
      outputFormat2.setIndent(true);
      outputFormat0.isSuppressDeclaration();
      boolean boolean0 = outputFormat2.isNewLineAfterDeclaration();
      assertTrue(boolean0);
      
      outputFormat1.setNewLineAfterDeclaration(false);
      outputFormat1.setIndent("?T:47<Ub`fq");
      assertFalse(outputFormat1.isNewLineAfterDeclaration());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.554214363317246
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("AOd_wj");
      String[] stringArray0 = new String[9];
      stringArray0[0] = "AOd_wj";
      outputFormat0.setIndent("");
      outputFormat0.setEncoding("org.dom4j.io.OutputFormat");
      outputFormat0.setLineSeparator("[/-qqO=v");
      outputFormat0.getNewLineAfterNTags();
      OutputFormat outputFormat1 = new OutputFormat("", true);
      outputFormat1.setPadText(true);
      outputFormat1.parseOptions(stringArray0, 0);
      outputFormat0.setExpandEmptyElements(true);
      outputFormat1.isPadText();
      outputFormat1.setOmitEncoding(true);
      outputFormat1.isOmitEncoding();
      outputFormat1.setSuppressDeclaration(true);
      outputFormat1.setExpandEmptyElements(true);
      outputFormat1.setNewLineAfterDeclaration(true);
      outputFormat1.setIndent(".B.@Q51M4c|N\")");
      assertEquals(".B.@Q51M4c|N\")", outputFormat1.getIndent());
  }
}
