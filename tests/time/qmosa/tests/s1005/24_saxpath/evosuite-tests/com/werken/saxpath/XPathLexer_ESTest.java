/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 17:35:35 GMT 2019
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.4840680630851981
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.star();
      assertEquals("c", token0.getTokenText());
      assertEquals(20, token0.getTokenType());
      
      Token token1 = xPathLexer0.not();
      assertEquals("o", token1.getTokenText());
      assertEquals(23, token1.getTokenType());
      
      Token token2 = xPathLexer0.dollar();
      assertEquals("m", token2.getTokenText());
      
      Token token3 = xPathLexer0.literal();
      assertEquals("werken", token3.getTokenText());
      assertNotNull(token3);
      assertEquals(27, token3.getTokenType());
      
      xPathLexer0.getPreviousToken();
      Token token4 = xPathLexer0.leftBracket();
      assertEquals("s", token4.getTokenText());
      assertEquals(3, token4.getTokenType());
      
      xPathLexer0.setXPath("");
      xPathLexer0.div();
      Token token5 = xPathLexer0.doubleColon();
      assertEquals(19, token5.getTokenType());
      
      boolean boolean0 = xPathLexer0.isIdentifierChar('U');
      assertTrue(boolean0);
      
      Token token6 = xPathLexer0.dollar();
      assertEquals(26, token6.getTokenType());
      
      Token token7 = xPathLexer0.nextToken();
      assertEquals((-1), token7.getTokenType());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.9525396388681973
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("J8p5:7<K2|iU5iL=U");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals(":", token1.getTokenText());
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.currentPosition();
      Token token2 = xPathLexer0.equals();
      assertEquals(21, token2.getTokenType());
      assertEquals("7", token2.getTokenText());
      
      xPathLexer0.consume();
      Token token3 = xPathLexer0.leftParen();
      assertEquals(1, token3.getTokenType());
      assertEquals("K", token3.getTokenText());
      
      xPathLexer0.currentPosition();
      xPathLexer0.operatorName();
      xPathLexer0.currentPosition();
      xPathLexer0.nextToken();
      Token token4 = xPathLexer0.getPreviousToken();
      assertEquals(30, token4.getTokenType());
      assertEquals("2", token4.getTokenText());
      
      Token token5 = xPathLexer0.pipe();
      assertEquals("|", token5.getTokenText());
      assertEquals(17, token5.getTokenType());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals("iU5iL=U", token6.getTokenText());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.606178225012111
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      String string0 = "u{oZij=";
      xPathLexer0.slashes();
      xPathLexer0.colon();
      xPathLexer0.setXPath("u{oZij=");
      xPathLexer0.rightParen();
      xPathLexer0.comma();
      xPathLexer0.colon();
      xPathLexer0.leftBracket();
      xPathLexer0.at();
      xPathLexer0.nextToken();
      xPathLexer0.and();
      xPathLexer0.consume((-2066));
      xPathLexer0.minus();
      // Undeclared exception!
      try { 
        xPathLexer0.nextToken();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.192809805816539
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      
      xPathLexer0.colon();
      xPathLexer0.setXPath("u{oZij=");
      Token token1 = xPathLexer0.rightParen();
      assertEquals("u", token1.getTokenText());
      assertEquals(2, token1.getTokenType());
      
      Token token2 = xPathLexer0.comma();
      assertEquals(32, token2.getTokenType());
      assertEquals("{", token2.getTokenText());
      
      Token token3 = xPathLexer0.colon();
      assertEquals("o", token3.getTokenText());
      assertEquals(18, token3.getTokenType());
      
      Token token4 = xPathLexer0.leftBracket();
      assertEquals(3, token4.getTokenType());
      assertEquals("Z", token4.getTokenText());
      
      xPathLexer0.at();
      Token token5 = xPathLexer0.nextToken();
      assertEquals("j", token5.getTokenText());
      
      xPathLexer0.and();
      xPathLexer0.consume(1729);
      Token token6 = xPathLexer0.identifier();
      assertEquals(15, token6.getTokenType());
      
      xPathLexer0.nextToken();
      xPathLexer0.getPreviousToken();
      xPathLexer0.equals();
      xPathLexer0.setXPath("com.werken.saxpath.XPathLexer");
      Token token7 = xPathLexer0.number();
      assertEquals(30, token7.getTokenType());
      
      xPathLexer0.at();
      Token token8 = xPathLexer0.at();
      assertEquals(16, token8.getTokenType());
      assertEquals("o", token8.getTokenText());
      
      xPathLexer0.and();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.currentPosition();
      xPathLexer0.consume();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token9 = xPathLexer1.leftParen();
      assertEquals(1, token9.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.currentPosition();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token10 = xPathLexer1.equals();
      assertEquals(21, token10.getTokenType());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.121333433368162
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.slashes();
      xPathLexer0.colon();
      xPathLexer0.rightParen();
      xPathLexer0.setXPath("u{oZij=");
      xPathLexer0.rightParen();
      xPathLexer0.comma();
      xPathLexer0.doubleColon();
      xPathLexer0.leftBracket();
      xPathLexer0.at();
      xPathLexer0.nextToken();
      xPathLexer0.and();
      xPathLexer0.consume(1729);
      xPathLexer0.identifier();
      xPathLexer0.nextToken();
      xPathLexer0.getPreviousToken();
      xPathLexer0.star();
      xPathLexer0.equals();
      xPathLexer0.setXPath("u{oZij=");
      xPathLexer0.number();
      xPathLexer0.at();
      xPathLexer0.at();
      xPathLexer0.and();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.currentPosition();
      xPathLexer0.equals();
      xPathLexer0.consume();
      xPathLexer0.leftParen();
      xPathLexer0.currentPosition();
      xPathLexer0.operatorName();
      xPathLexer0.currentPosition();
      XPathLexer xPathLexer1 = new XPathLexer();
      assertFalse(xPathLexer1.equals((Object)xPathLexer0));
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.0445859208002335
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.slashes();
      xPathLexer0.colon();
      xPathLexer0.setXPath("X5gr+^3JIy8G");
      xPathLexer0.rightParen();
      xPathLexer0.comma();
      xPathLexer0.colon();
      xPathLexer0.leftBracket();
      xPathLexer0.at();
      xPathLexer0.nextToken();
      xPathLexer0.and();
      xPathLexer0.consume(1729);
      xPathLexer0.identifier();
      xPathLexer0.nextToken();
      xPathLexer0.getPreviousToken();
      xPathLexer0.star();
      xPathLexer0.equals();
      xPathLexer0.setXPath("X5gr+^3JIy8G");
      xPathLexer0.number();
      xPathLexer0.at();
      xPathLexer0.at();
      xPathLexer0.and();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.currentPosition();
      xPathLexer0.equals();
      xPathLexer0.consume();
      xPathLexer0.leftParen();
      xPathLexer0.currentPosition();
      xPathLexer0.operatorName();
      xPathLexer0.currentPosition();
      XPathLexer xPathLexer1 = new XPathLexer();
      assertNull(xPathLexer1.getXPath());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.2175146995445436
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      
      xPathLexer0.colon();
      xPathLexer0.setXPath("u{oZij=");
      Token token1 = xPathLexer0.rightParen();
      assertEquals("u", token1.getTokenText());
      
      xPathLexer0.colon();
      Token token2 = xPathLexer0.colon();
      assertEquals(18, token2.getTokenType());
      
      Token token3 = xPathLexer0.leftBracket();
      assertEquals("Z", token3.getTokenText());
      assertEquals(3, token3.getTokenType());
      
      Token token4 = xPathLexer0.at();
      assertEquals("i", token4.getTokenText());
      assertEquals(16, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(15, token5.getTokenType());
      assertEquals("j", token5.getTokenText());
      
      xPathLexer0.and();
      xPathLexer0.consume(1729);
      Token token6 = xPathLexer0.minus();
      assertEquals(6, token6.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.nextToken();
      xPathLexer0.getPreviousToken();
      Token token7 = xPathLexer0.star();
      assertEquals(20, token7.getTokenType());
      
      Token token8 = xPathLexer0.equals();
      assertEquals(21, token8.getTokenType());
      
      xPathLexer0.setXPath("N3!Hpl?I=S{");
      xPathLexer0.number();
      xPathLexer0.consume(3633);
      xPathLexer0.hasMoreChars();
      Token token9 = xPathLexer0.rightParen();
      assertEquals(2, token9.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("N3!Hpl?I=S{");
      Token token10 = xPathLexer1.plus();
      assertEquals(5, token10.getTokenType());
      assertEquals("N", token10.getTokenText());
      
      xPathLexer0.and();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer1.nextToken();
      Token token11 = xPathLexer1.number();
      assertEquals(30, token11.getTokenType());
      
      int int0 = xPathLexer0.currentPosition();
      assertEquals(3634, int0);
      
      xPathLexer0.or();
      Token token12 = xPathLexer1.not();
      assertEquals(23, token12.getTokenType());
      assertEquals("!", token12.getTokenText());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.1945946801549199
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(")", token0.getTokenText());
      assertEquals(2, token0.getTokenType());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      
      xPathLexer0.comma();
      Token token2 = xPathLexer0.literal();
      assertNull(token2);
      
      Token token3 = xPathLexer0.comma();
      assertEquals(32, token3.getTokenType());
      
      Token token4 = xPathLexer0.leftBracket();
      assertEquals(3, token4.getTokenType());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.8822476776520647
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("b>%");
      Token token0 = xPathLexer0.identifier();
      assertEquals("b", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.setXPath("b>%");
      Token token1 = xPathLexer1.rightParen();
      assertEquals(2, token1.getTokenType());
      
      Token token2 = xPathLexer0.colon();
      assertEquals("b", token2.getTokenText());
      assertEquals(18, token2.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.and();
      Token token3 = xPathLexer0.at();
      assertEquals(">", token3.getTokenText());
      assertEquals(16, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals((-1), token4.getTokenType());
      
      xPathLexer0.and();
      Token token5 = xPathLexer0.identifier();
      assertEquals(15, token5.getTokenType());
      
      xPathLexer0.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer0.getPreviousToken();
      Token token6 = xPathLexer3.star();
      assertEquals(20, token6.getTokenType());
      
      Token token7 = xPathLexer3.equals();
      assertEquals(21, token7.getTokenType());
      
      xPathLexer2.setXPath("Mq8/yftPXd(=Lnf9,");
      Token token8 = xPathLexer1.number();
      assertEquals(30, token8.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer(")");
      xPathLexer4.currentPosition();
      xPathLexer2.div();
      XPathLexer xPathLexer5 = new XPathLexer("");
      xPathLexer5.endPosition();
      XPathLexer xPathLexer6 = new XPathLexer();
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token9 = xPathLexer0.pipe();
      assertEquals(17, token9.getTokenType());
      assertEquals("%", token9.getTokenText());
      
      XPathLexer xPathLexer8 = new XPathLexer();
      xPathLexer3.mod();
      xPathLexer4.literal();
      Token token10 = xPathLexer1.leftParen();
      assertEquals(1, token10.getTokenType());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.037453200660391
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")");
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      assertEquals(")", token0.getTokenText());
      
      Token token1 = xPathLexer0.number();
      token1.toString();
      token1.toString();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.whitespace();
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      
      String string0 = token1.toString();
      assertEquals("[ (30) ()", string0);
      
      xPathLexer0.operatorName();
      Token token3 = xPathLexer0.dollar();
      assertEquals(26, token3.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("J8p5:7<K2|iU5iL=U");
      Token token4 = xPathLexer1.nextToken();
      assertEquals(15, token4.getTokenType());
      assertEquals("J8p5", token4.getTokenText());
      
      Token token5 = xPathLexer1.whitespace();
      assertEquals((-2), token5.getTokenType());
      
      Token token6 = xPathLexer1.comma();
      assertEquals("7", token6.getTokenText());
      assertEquals(32, token6.getTokenType());
      
      xPathLexer1.identifier();
      xPathLexer0.relationalOperator();
      Token token7 = xPathLexer1.slashes();
      assertEquals("<", token7.getTokenText());
      assertEquals(11, token7.getTokenType());
      
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('^');
      assertFalse(boolean0);
      
      xPathLexer0.currentPosition();
      Token token8 = xPathLexer1.leftBracket();
      assertEquals("K", token8.getTokenText());
      assertEquals(3, token8.getTokenType());
      
      Token token9 = xPathLexer1.nextToken();
      assertEquals(30, token9.getTokenType());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.2087333776798346
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("i?}issj");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
      
      xPathLexer0.or();
      Token token1 = xPathLexer0.notEquals();
      token1.toString();
      token1.toString();
      String string0 = token1.toString();
      assertEquals("[ (22) (?})", string0);
      
      xPathLexer0.setPreviousToken(token1);
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('2');
      assertFalse(boolean0);
      
      Token token2 = xPathLexer0.colon();
      assertEquals("i", token2.getTokenText());
      
      Token token3 = xPathLexer0.minus();
      assertEquals(6, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("sj", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
      
      xPathLexer0.colon();
      xPathLexer0.notEquals();
      xPathLexer0.literal();
      Token token5 = xPathLexer0.rightBracket();
      assertEquals(4, token5.getTokenType());
      
      xPathLexer0.consume(1472);
      Token token6 = xPathLexer0.doubleColon();
      assertEquals(19, token6.getTokenType());
      
      Token token7 = xPathLexer0.number();
      assertEquals(30, token7.getTokenType());
      
      xPathLexer0.slashes();
      Token token8 = xPathLexer0.slashes();
      assertEquals(11, token8.getTokenType());
      
      xPathLexer0.getXPath();
      xPathLexer0.consume(1472);
      xPathLexer0.mod();
      xPathLexer0.literal();
      Token token9 = xPathLexer0.leftParen();
      assertEquals(1, token9.getTokenType());
      
      Token token10 = xPathLexer0.rightParen();
      assertEquals(2, token10.getTokenType());
      
      Token token11 = xPathLexer0.literal();
      assertNull(token11);
      
      Token token12 = xPathLexer0.colon();
      assertEquals(18, token12.getTokenType());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.0035644962626913
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      
      xPathLexer0.colon();
      xPathLexer0.setXPath("u{oZij=");
      Token token1 = xPathLexer0.rightParen();
      assertEquals("u", token1.getTokenText());
      
      Token token2 = xPathLexer0.comma();
      assertEquals(32, token2.getTokenType());
      
      Token token3 = xPathLexer0.colon();
      assertEquals("o", token3.getTokenText());
      
      Token token4 = xPathLexer0.leftBracket();
      assertEquals("Z", token4.getTokenText());
      assertEquals(3, token4.getTokenType());
      
      Token token5 = xPathLexer0.at();
      assertEquals("i", token5.getTokenText());
      assertEquals(16, token5.getTokenType());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals(15, token6.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.consume(1729);
      Token token7 = xPathLexer0.minus();
      assertEquals(6, token7.getTokenType());
      
      xPathLexer0.nextToken();
      xPathLexer0.getPreviousToken();
      Token token8 = xPathLexer0.star();
      assertEquals(20, token8.getTokenType());
      
      Token token9 = xPathLexer0.equals();
      assertEquals(21, token9.getTokenType());
      
      xPathLexer0.setXPath("u{oZij=");
      Token token10 = xPathLexer0.number();
      assertEquals(30, token10.getTokenType());
      
      xPathLexer0.consume(713);
      xPathLexer0.hasMoreChars();
      Token token11 = xPathLexer0.rightParen();
      assertEquals(2, token11.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("WvfSYO`");
      Token token12 = xPathLexer0.plus();
      assertEquals(5, token12.getTokenType());
      
      xPathLexer1.and();
      xPathLexer1.identifierOrOperatorName();
      Token token13 = xPathLexer1.nextToken();
      assertEquals("`", token13.getTokenText());
      
      Token token14 = xPathLexer0.pipe();
      assertEquals(17, token14.getTokenType());
      
      int int0 = xPathLexer0.currentPosition();
      assertEquals(716, int0);
      
      xPathLexer1.or();
      Token token15 = xPathLexer0.not();
      assertEquals(23, token15.getTokenType());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.2718482576291685
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      
      xPathLexer0.colon();
      xPathLexer0.setXPath("u{oZij=");
      Token token1 = xPathLexer0.rightParen();
      assertEquals("u", token1.getTokenText());
      assertEquals(2, token1.getTokenType());
      
      xPathLexer0.comma();
      Token token2 = xPathLexer0.colon();
      assertEquals(18, token2.getTokenType());
      assertEquals("o", token2.getTokenText());
      
      Token token3 = xPathLexer0.leftBracket();
      assertEquals("Z", token3.getTokenText());
      assertEquals(3, token3.getTokenType());
      
      xPathLexer0.at();
      Token token4 = xPathLexer0.nextToken();
      assertEquals("j", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.consume(1729);
      xPathLexer0.identifier();
      xPathLexer0.nextToken();
      xPathLexer0.getPreviousToken();
      Token token5 = xPathLexer0.star();
      assertEquals(20, token5.getTokenType());
      
      xPathLexer0.equals();
      xPathLexer0.setXPath("3'nWAD=<3PP!txf0");
      xPathLexer0.number();
      xPathLexer0.at();
      xPathLexer0.setXPath("com.werken.saxpath.XPathLexer");
      Token token6 = xPathLexer0.at();
      assertEquals(16, token6.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.currentPosition();
      Token token7 = xPathLexer0.equals();
      assertEquals("o", token7.getTokenText());
      assertEquals(21, token7.getTokenType());
      
      xPathLexer0.consume();
      Token token8 = xPathLexer0.leftParen();
      assertEquals(1, token8.getTokenType());
      
      xPathLexer0.currentPosition();
      xPathLexer0.operatorName();
      int int0 = xPathLexer0.currentPosition();
      assertEquals(4, int0);
      
      xPathLexer0.relationalOperator();
      Token token9 = xPathLexer0.comma();
      assertEquals(32, token9.getTokenType());
      assertEquals("w", token9.getTokenText());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.766302204420276
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.slashes();
      xPathLexer0.colon();
      xPathLexer0.setXPath("u{oZij=");
      xPathLexer0.rightParen();
      xPathLexer0.colon();
      xPathLexer0.slashes();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.pipe();
      xPathLexer0.plus();
      xPathLexer0.consume();
      xPathLexer0.colon();
      xPathLexer0.rightBracket();
      xPathLexer0.plus();
      xPathLexer0.leftBracket();
      xPathLexer0.or();
      xPathLexer0.getPreviousToken();
      xPathLexer0.comma();
      XPathLexer xPathLexer1 = new XPathLexer("u{oZij=");
      xPathLexer1.div();
      xPathLexer1.at();
      xPathLexer0.minus();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.setXPath(" *4Ni`;`6}aq");
      xPathLexer2.identifierOrOperatorName();
      XPathLexer xPathLexer3 = new XPathLexer("u{oZij=");
      xPathLexer3.nextToken();
      xPathLexer1.setXPath("u{oZij=");
      Token token0 = xPathLexer1.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.917651166150745
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.slashes();
      XPathLexer xPathLexer1 = new XPathLexer("qM:jyG");
      xPathLexer1.leftBracket();
      xPathLexer0.consume();
      xPathLexer1.number();
      xPathLexer1.number();
      xPathLexer0.whitespace();
      xPathLexer0.leftParen();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.star();
      XPathLexer xPathLexer3 = new XPathLexer("}tYy=P(t2ZEJwT[,!e");
      xPathLexer3.at();
      xPathLexer3.plus();
      xPathLexer3.rightBracket();
      xPathLexer2.consume((-2810));
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer2.doubleColon();
      xPathLexer1.number();
      // Undeclared exception!
      try { 
        xPathLexer2.slashes();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.9229144718458693
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")si0X=3");
      xPathLexer0.dots();
      XPathLexer xPathLexer1 = new XPathLexer(")si0X=3");
      xPathLexer1.colon();
      xPathLexer1.setXPath("");
      xPathLexer1.rightParen();
      xPathLexer0.colon();
      xPathLexer1.and();
      xPathLexer0.at();
      xPathLexer0.nextToken();
      xPathLexer1.and();
      xPathLexer0.identifier();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.getPreviousToken();
      xPathLexer0.star();
      xPathLexer1.equals();
      xPathLexer1.setXPath("");
      xPathLexer1.number();
      XPathLexer xPathLexer3 = new XPathLexer(") (");
      xPathLexer3.currentPosition();
      xPathLexer0.div();
      xPathLexer1.endPosition();
      XPathLexer xPathLexer4 = new XPathLexer();
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token0 = xPathLexer5.pipe();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer6.mod();
      xPathLexer6.literal();
      Token token1 = xPathLexer4.leftParen();
      assertFalse(token1.equals((Object)token0));
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.270687671991008
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("b>%");
      xPathLexer0.equals();
      xPathLexer0.and();
      xPathLexer0.setXPath("b>%");
      xPathLexer0.slashes();
      XPathLexer xPathLexer1 = new XPathLexer("b>%");
      xPathLexer1.dollar();
      xPathLexer0.or();
      xPathLexer0.and();
      xPathLexer0.literal();
      int int0 = 1472;
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.rightBracket();
      xPathLexer1.consume((-1143));
      xPathLexer1.doubleColon();
      xPathLexer0.slashes();
      // Undeclared exception!
      try { 
        xPathLexer1.slashes();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.7468147782438477
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("b>%");
      xPathLexer0.dots();
      xPathLexer0.leftBracket();
      xPathLexer0.number();
      xPathLexer0.number();
      xPathLexer0.whitespace();
      xPathLexer0.leftParen();
      xPathLexer0.colon();
      xPathLexer0.minus();
      xPathLexer0.plus();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.nextToken();
      xPathLexer0.colon();
      xPathLexer0.notEquals();
      xPathLexer0.literal();
      int int0 = 1472;
      xPathLexer1.rightBracket();
      xPathLexer1.consume((-2408));
      xPathLexer1.doubleColon();
      // Undeclared exception!
      try { 
        xPathLexer1.number();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.8833900445834437
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      
      xPathLexer0.colon();
      xPathLexer0.setXPath("u{oZij=");
      xPathLexer0.rightParen();
      Token token1 = xPathLexer0.colon();
      assertEquals("{", token1.getTokenText());
      
      xPathLexer0.and();
      Token token2 = xPathLexer0.at();
      assertEquals("o", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("Zij", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.consume(1729);
      xPathLexer0.identifier();
      xPathLexer0.nextToken();
      xPathLexer0.getPreviousToken();
      Token token4 = xPathLexer0.star();
      assertEquals(20, token4.getTokenType());
      
      Token token5 = xPathLexer0.equals();
      assertEquals(21, token5.getTokenType());
      
      Token token6 = xPathLexer0.leftBracket();
      assertEquals(3, token6.getTokenType());
      
      xPathLexer0.or();
      XPathLexer xPathLexer1 = new XPathLexer("u{oZij=");
      xPathLexer1.getPreviousToken();
      Token token7 = xPathLexer0.comma();
      assertEquals(32, token7.getTokenType());
      
      xPathLexer1.div();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token8 = xPathLexer2.at();
      assertEquals(16, token8.getTokenType());
      
      Token token9 = xPathLexer2.minus();
      assertEquals(6, token9.getTokenType());
      
      xPathLexer2.identifierOrOperatorName();
      Token token10 = xPathLexer2.nextToken();
      assertEquals((-1), token10.getTokenType());
      
      xPathLexer0.setXPath("com.werken.saxpath.XPathLexer");
      Token token11 = xPathLexer2.whitespace();
      assertEquals((-2), token11.getTokenType());
      
      xPathLexer0.getPreviousToken();
      Token token12 = xPathLexer2.rightParen();
      assertEquals(2, token12.getTokenType());
      
      Token token13 = xPathLexer1.plus();
      assertEquals("u", token13.getTokenText());
      assertEquals(5, token13.getTokenType());
      
      Token token14 = xPathLexer0.notEquals();
      assertEquals("co", token14.getTokenText());
      assertEquals(22, token14.getTokenType());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.1389710514691918
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.slashes();
      xPathLexer0.colon();
      xPathLexer0.equals();
      xPathLexer0.and();
      xPathLexer0.setXPath("com.werken.saxpath.XPathLexer");
      xPathLexer0.div();
      xPathLexer0.slashes();
      xPathLexer0.dollar();
      xPathLexer0.relationalOperator();
      xPathLexer0.and();
      xPathLexer0.currentPosition();
      xPathLexer0.dots();
      xPathLexer0.consume();
      xPathLexer0.at();
      xPathLexer0.setXPath("");
      xPathLexer0.number();
      xPathLexer0.at();
      xPathLexer0.at();
      xPathLexer0.and();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.currentPosition();
      xPathLexer0.equals();
      xPathLexer0.consume();
      xPathLexer0.leftParen();
      xPathLexer0.currentPosition();
      xPathLexer0.operatorName();
      xPathLexer0.currentPosition();
      XPathLexer xPathLexer1 = new XPathLexer();
      assertNull(xPathLexer1.getXPath());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.1640486209139658
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      
      xPathLexer0.colon();
      xPathLexer0.setXPath("u{oZij=");
      Token token1 = xPathLexer0.rightParen();
      assertEquals(2, token1.getTokenType());
      assertEquals("u", token1.getTokenText());
      
      Token token2 = xPathLexer0.comma();
      assertEquals("{", token2.getTokenText());
      assertEquals(32, token2.getTokenType());
      
      Token token3 = xPathLexer0.colon();
      assertEquals(18, token3.getTokenType());
      
      Token token4 = xPathLexer0.leftBracket();
      assertEquals(3, token4.getTokenType());
      
      xPathLexer0.at();
      Token token5 = xPathLexer0.nextToken();
      assertEquals("j", token5.getTokenText());
      
      xPathLexer0.and();
      xPathLexer0.consume(1729);
      xPathLexer0.identifier();
      xPathLexer0.nextToken();
      Token token6 = xPathLexer0.getPreviousToken();
      assertEquals((-1), token6.getTokenType());
      
      Token token7 = xPathLexer0.star();
      assertEquals(20, token7.getTokenType());
      
      xPathLexer0.equals();
      xPathLexer0.setXPath("3'nWAD=<3PP!txf0");
      Token token8 = xPathLexer0.number();
      assertEquals("3", token8.getTokenText());
      assertEquals(30, token8.getTokenType());
      
      xPathLexer0.at();
      Token token9 = xPathLexer0.at();
      assertEquals("n", token9.getTokenText());
      assertEquals(16, token9.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token10 = xPathLexer1.plus();
      assertEquals(5, token10.getTokenType());
      assertEquals("c", token10.getTokenText());
      
      xPathLexer0.operatorName();
      xPathLexer0.relationalOperator();
      Token token11 = xPathLexer1.whitespace();
      assertEquals((-2), token11.getTokenType());
      assertEquals("", token11.getTokenText());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.32666692598027
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("AQc>E-O-ce9#~M'$zw");
      Token token0 = xPathLexer0.pipe();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      xPathLexer0.or();
      xPathLexer0.colon();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.plus();
      xPathLexer0.leftBracket();
      xPathLexer0.rightParen();
      xPathLexer0.notEquals();
      xPathLexer0.not();
      xPathLexer0.relationalOperator();
      xPathLexer0.rightParen();
      xPathLexer0.hasMoreChars();
      // Undeclared exception!
      try { 
        xPathLexer0.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.0403553548360605
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      
      xPathLexer0.colon();
      xPathLexer0.setXPath("u{oZij=");
      Token token1 = xPathLexer0.rightParen();
      assertEquals("u", token1.getTokenText());
      assertEquals(2, token1.getTokenType());
      
      Token token2 = xPathLexer0.plus();
      assertEquals("{", token2.getTokenText());
      assertEquals(5, token2.getTokenType());
      
      Token token3 = xPathLexer0.colon();
      assertEquals("o", token3.getTokenText());
      assertEquals(18, token3.getTokenType());
      
      Token token4 = xPathLexer0.leftBracket();
      assertEquals("Z", token4.getTokenText());
      assertEquals(3, token4.getTokenType());
      
      Token token5 = xPathLexer0.at();
      assertEquals("i", token5.getTokenText());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals(15, token6.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.consume(1729);
      xPathLexer0.identifier();
      xPathLexer0.nextToken();
      xPathLexer0.getPreviousToken();
      Token token7 = xPathLexer0.star();
      assertEquals(20, token7.getTokenType());
      
      xPathLexer0.equals();
      Token token8 = xPathLexer0.at();
      assertEquals(16, token8.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.currentPosition();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token9 = xPathLexer1.equals();
      assertEquals(21, token9.getTokenType());
      
      xPathLexer1.consume();
      Token token10 = xPathLexer0.leftParen();
      assertEquals(1, token10.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.currentPosition();
      xPathLexer1.operatorName();
      int int0 = xPathLexer0.currentPosition();
      assertEquals(1739, int0);
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token11 = xPathLexer2.minus();
      assertEquals(6, token11.getTokenType());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.884381759284857
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#K\"LD[ia?;2<h6Lkk#Z");
      int int0 = (-1223);
      xPathLexer0.leftParen();
      xPathLexer0.mod();
      xPathLexer0.consume((-1223));
      // Undeclared exception!
      try { 
        xPathLexer0.or();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.0781367491766662
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")si0X=3");
      xPathLexer0.dots();
      xPathLexer0.leftBracket();
      xPathLexer0.number();
      xPathLexer0.number();
      xPathLexer0.whitespace();
      xPathLexer0.leftParen();
      xPathLexer0.dollar();
      xPathLexer0.star();
      xPathLexer0.at();
      xPathLexer0.plus();
      xPathLexer0.hasMoreChars();
      xPathLexer0.and();
      xPathLexer0.div();
      xPathLexer0.mod();
      xPathLexer0.pipe();
      boolean boolean0 = xPathLexer0.isIdentifierChar('}');
      assertFalse(boolean0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.230312475011471
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("i?}issj");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
      
      xPathLexer0.or();
      Token token1 = xPathLexer0.notEquals();
      token1.toString();
      token1.toString();
      token1.toString();
      String string0 = token1.toString();
      assertEquals("[ (22) (?})", string0);
      
      xPathLexer0.setPreviousToken(token1);
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('2');
      assertFalse(boolean0);
      
      xPathLexer0.colon();
      Token token2 = xPathLexer0.minus();
      assertEquals(6, token2.getTokenType());
      assertEquals("s", token2.getTokenText());
      
      Token token3 = xPathLexer0.plus();
      assertEquals(5, token3.getTokenType());
      assertEquals("s", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("j", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
      
      xPathLexer0.colon();
      xPathLexer0.notEquals();
      xPathLexer0.literal();
      Token token5 = xPathLexer0.rightBracket();
      assertEquals(4, token5.getTokenType());
      
      xPathLexer0.consume(1472);
      Token token6 = xPathLexer0.doubleColon();
      assertEquals(19, token6.getTokenType());
      
      Token token7 = xPathLexer0.number();
      assertEquals(30, token7.getTokenType());
      
      xPathLexer0.slashes();
      Token token8 = xPathLexer0.slashes();
      assertEquals(11, token8.getTokenType());
      
      xPathLexer0.getXPath();
      xPathLexer0.consume(1472);
      Token token9 = xPathLexer0.colon();
      assertEquals(18, token9.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.literal();
      xPathLexer0.leftParen();
      Token token10 = xPathLexer0.rightParen();
      assertEquals(2, token10.getTokenType());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.200514380208235
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")");
      Token token0 = xPathLexer0.pipe();
      assertEquals(")", token0.getTokenText());
      assertEquals(17, token0.getTokenType());
      
      Token token1 = xPathLexer0.number();
      token1.toString();
      token1.toString();
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertNotNull(token2);
      
      Token token3 = xPathLexer0.whitespace();
      assertEquals((-2), token3.getTokenType());
      
      Token token4 = xPathLexer0.rightBracket();
      assertEquals(4, token4.getTokenType());
      
      String string0 = token1.toString();
      assertEquals("[ (30) ()", string0);
      
      xPathLexer0.operatorName();
      Token token5 = xPathLexer0.dollar();
      assertEquals(26, token5.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("J8p5:7<K2|iU5iL=U");
      Token token6 = xPathLexer1.comma();
      assertEquals(32, token6.getTokenType());
      assertEquals("J", token6.getTokenText());
      
      Token token7 = xPathLexer1.identifier();
      assertEquals("8p5", token7.getTokenText());
      assertEquals(15, token7.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token8 = xPathLexer1.slashes();
      assertEquals(":", token8.getTokenText());
      assertEquals(11, token8.getTokenType());
      
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('^');
      assertFalse(boolean0);
      
      Token token9 = xPathLexer0.plus();
      assertEquals(5, token9.getTokenType());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.0232687398041187
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.notEquals();
      Token token1 = xPathLexer0.identifier();
      assertEquals("m.werken.saxpath.XPathLexer", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      token0.toString();
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (22) (co)", string0);
      
      Token token3 = xPathLexer0.comma();
      assertEquals(32, token3.getTokenType());
      
      xPathLexer0.isIdentifierStartChar('W');
      xPathLexer0.colon();
      Token token4 = xPathLexer0.minus();
      assertEquals(6, token4.getTokenType());
      
      Token token5 = xPathLexer0.plus();
      assertEquals(5, token5.getTokenType());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals((-1), token6.getTokenType());
      
      Token token7 = xPathLexer0.colon();
      assertEquals(18, token7.getTokenType());
      
      xPathLexer0.notEquals();
      xPathLexer0.mod();
      XPathLexer xPathLexer1 = new XPathLexer("jOhT!@@#sT}` 8");
      Token token8 = xPathLexer1.literal();
      assertNull(token8);
      
      Token token9 = xPathLexer0.rightBracket();
      assertEquals(4, token9.getTokenType());
      
      xPathLexer1.consume(158);
      Token token10 = xPathLexer1.doubleColon();
      assertEquals(19, token10.getTokenType());
      
      Token token11 = xPathLexer0.number();
      assertEquals(30, token11.getTokenType());
      
      xPathLexer0.slashes();
      Token token12 = xPathLexer1.slashes();
      assertEquals(11, token12.getTokenType());
      
      xPathLexer1.getXPath();
      XPathLexer xPathLexer2 = new XPathLexer(")");
      xPathLexer2.consume(1472);
      xPathLexer0.mod();
      xPathLexer0.literal();
      Token token13 = xPathLexer1.leftParen();
      assertEquals(1, token13.getTokenType());
      
      Token token14 = xPathLexer2.rightParen();
      assertEquals(2, token14.getTokenType());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.2474948738505414
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("En0Zu}N4'egaI");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("En0Zu", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken(token1);
      assertEquals("}N4'egaI", token1.getTokenText());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.7182893921333786
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("i?}issj");
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.or();
      xPathLexer0.notEquals();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken((Token) null);
      assertEquals("i?}issj", xPathLexer0.getXPath());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.9188746042620823
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.slashes();
      xPathLexer0.colon();
      xPathLexer0.setXPath("u{oZij=");
      xPathLexer0.rightParen();
      xPathLexer0.comma();
      xPathLexer0.colon();
      xPathLexer0.leftBracket();
      xPathLexer0.at();
      xPathLexer0.nextToken();
      xPathLexer0.literal();
      xPathLexer0.and();
      xPathLexer0.notEquals();
      xPathLexer0.not();
      XPathLexer xPathLexer1 = new XPathLexer("u{oZij=");
      xPathLexer1.dots();
      xPathLexer1.not();
      xPathLexer1.star();
      xPathLexer1.minus();
      xPathLexer0.plus();
      xPathLexer0.minus();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.dollar();
      xPathLexer0.dots();
      xPathLexer1.rightBracket();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-1328));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      XPathLexer xPathLexer0 = null;
      try {
        xPathLexer0 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.264690483001633
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.comma();
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(3, token0.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.or();
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.minus();
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      
      Token token3 = xPathLexer0.equals();
      assertEquals(21, token3.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.isIdentifierChar('k');
      Token token4 = xPathLexer0.slashes();
      assertEquals(11, token4.getTokenType());
      
      Token token5 = xPathLexer0.comma();
      assertEquals(32, token5.getTokenType());
      
      xPathLexer0.and();
      Token token6 = xPathLexer0.minus();
      assertEquals(6, token6.getTokenType());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.6500960775197
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.rightParen();
      assertEquals(2, token0.getTokenType());
      
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.getXPath();
      Token token2 = xPathLexer0.whitespace();
      assertEquals((-2), token2.getTokenType());
      
      xPathLexer0.leftBracket();
      xPathLexer0.not();
      xPathLexer0.notEquals();
      xPathLexer0.notEquals();
      Token token3 = xPathLexer0.slashes();
      assertEquals(11, token3.getTokenType());
      
      xPathLexer0.identifier();
      xPathLexer0.getPreviousToken();
      xPathLexer0.consume(0);
      xPathLexer0.isIdentifierChar('F');
      Token token4 = xPathLexer0.notEquals();
      assertEquals(22, token4.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.colon();
      xPathLexer0.setXPath("");
      xPathLexer0.getXPath();
      Token token5 = xPathLexer0.plus();
      assertEquals(5, token5.getTokenType());
      
      Token token6 = xPathLexer0.colon();
      assertEquals(18, token6.getTokenType());
      
      Token token7 = xPathLexer0.leftParen();
      assertEquals(1, token7.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.minus();
      Token token8 = xPathLexer0.not();
      assertEquals(23, token8.getTokenType());
      
      xPathLexer0.getXPath();
      Token token9 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token9.getTokenType());
      assertNotNull(token9);
      
      xPathLexer0.consume();
      xPathLexer0.div();
      Token token10 = xPathLexer0.minus();
      assertEquals(6, token10.getTokenType());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.33847176309406
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("pd^9>");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("pd", token0.getTokenText());
      assertEquals(19, token0.getTokenType());
      
      Token token1 = xPathLexer0.not();
      assertEquals("^", token1.getTokenText());
      assertEquals(23, token1.getTokenType());
      
      Token token2 = xPathLexer0.notEquals();
      assertEquals(22, token2.getTokenType());
      assertEquals("9>", token2.getTokenText());
      
      Token token3 = xPathLexer0.at();
      assertEquals(16, token3.getTokenType());
      
      Token token4 = xPathLexer0.whitespace();
      assertEquals((-2), token4.getTokenType());
      assertEquals("", token4.getTokenText());
      
      Token token5 = xPathLexer0.leftParen();
      assertEquals(1, token5.getTokenType());
      
      xPathLexer0.operatorName();
      Token token6 = xPathLexer0.nextToken();
      assertEquals((-1), token6.getTokenType());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.001094572216842
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.nextToken();
      xPathLexer0.colon();
      xPathLexer0.dots();
      xPathLexer0.dollar();
      xPathLexer0.dots();
      xPathLexer0.operatorName();
      xPathLexer0.doubleColon();
      xPathLexer0.operatorName();
      xPathLexer0.whitespace();
      xPathLexer0.colon();
      xPathLexer0.dollar();
      xPathLexer0.relationalOperator();
      xPathLexer0.number();
      xPathLexer0.identifier();
      xPathLexer0.plus();
      xPathLexer0.relationalOperator();
      xPathLexer0.number();
      xPathLexer0.not();
      xPathLexer0.slashes();
      xPathLexer0.mod();
      xPathLexer0.comma();
      xPathLexer0.nextToken();
      xPathLexer0.endPosition();
      xPathLexer0.relationalOperator();
      xPathLexer0.operatorName();
      xPathLexer0.div();
      xPathLexer0.equals();
      xPathLexer0.doubleColon();
      xPathLexer0.minus();
      xPathLexer0.leftParen();
      xPathLexer0.or();
      xPathLexer0.rightBracket();
      xPathLexer0.relationalOperator();
      xPathLexer0.leftParen();
      xPathLexer0.comma();
      xPathLexer0.getPreviousToken();
      xPathLexer0.plus();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.4332020183374246
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.notEquals();
      xPathLexer0.identifier();
      token0.toString();
      xPathLexer0.dots();
      token0.toString();
      token0.toString();
      xPathLexer0.comma();
      token0.toString();
      token0.toString();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.star();
      xPathLexer0.leftParen();
      xPathLexer0.pipe();
      xPathLexer0.leftParen();
      xPathLexer0.endPosition();
      xPathLexer0.dots();
      xPathLexer0.not();
      xPathLexer0.star();
      xPathLexer0.minus();
      xPathLexer0.plus();
      xPathLexer0.minus();
      xPathLexer0.dollar();
      xPathLexer0.dots();
      xPathLexer0.rightBracket();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-1328));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.3125628595222434
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("b>%");
      Token token0 = xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      assertEquals(">", token1.getTokenText());
      
      Token token2 = xPathLexer0.getPreviousToken();
      assertEquals("b", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.rightParen();
      assertEquals("%", token3.getTokenText());
      assertEquals(2, token3.getTokenType());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.218456332760875
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.and();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.950785342820836
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.div();
      xPathLexer0.leftBracket();
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      
      xPathLexer0.minus();
      xPathLexer0.mod();
      xPathLexer0.literal();
      xPathLexer0.comma();
      xPathLexer0.literal();
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      Token token2 = xPathLexer0.pipe();
      assertEquals(17, token2.getTokenType());
      
      xPathLexer0.plus();
      xPathLexer0.consume();
      Token token3 = xPathLexer0.colon();
      assertEquals(18, token3.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      Token token4 = xPathLexer0.rightBracket();
      assertEquals(4, token4.getTokenType());
      
      Token token5 = xPathLexer0.plus();
      assertEquals(5, token5.getTokenType());
      
      xPathLexer0.leftBracket();
      xPathLexer0.or();
      Token token6 = xPathLexer0.getPreviousToken();
      assertEquals((-1), token6.getTokenType());
      
      xPathLexer0.comma();
      xPathLexer0.div();
      Token token7 = xPathLexer0.at();
      assertEquals(16, token7.getTokenType());
      
      Token token8 = xPathLexer0.minus();
      assertEquals(6, token8.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      Token token9 = xPathLexer0.comma();
      assertEquals(32, token9.getTokenType());
      
      Token token10 = xPathLexer0.leftBracket();
      assertEquals(3, token10.getTokenType());
      
      Token token11 = xPathLexer0.identifier();
      assertEquals(15, token11.getTokenType());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.2557433592566034
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.leftBracket();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.dots();
      xPathLexer0.getXPath();
      Token token0 = xPathLexer0.at();
      xPathLexer0.div();
      xPathLexer0.comma();
      xPathLexer0.mod();
      xPathLexer0.relationalOperator();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.1054006017731175
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")si0X=3");
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals(")", token0.getTokenText());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals("s", token1.getTokenText());
      assertEquals(3, token1.getTokenType());
      
      xPathLexer0.consume();
      xPathLexer0.number();
      Token token2 = xPathLexer0.number();
      assertEquals("", token2.getTokenText());
      
      Token token3 = xPathLexer0.whitespace();
      assertEquals("", token3.getTokenText());
      
      Token token4 = xPathLexer0.leftParen();
      assertEquals("=", token4.getTokenText());
      
      Token token5 = xPathLexer0.star();
      assertEquals(20, token5.getTokenType());
      assertEquals("3", token5.getTokenText());
      
      xPathLexer0.at();
      Token token6 = xPathLexer0.plus();
      assertEquals(5, token6.getTokenType());
      
      Token token7 = xPathLexer0.rightBracket();
      xPathLexer0.consume(114);
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token8 = xPathLexer1.doubleColon();
      assertEquals(19, token8.getTokenType());
      
      Token token9 = xPathLexer0.number();
      assertEquals(30, token9.getTokenType());
      
      Token token10 = xPathLexer0.slashes();
      assertEquals(11, token10.getTokenType());
      
      Token token11 = xPathLexer0.identifier();
      assertEquals(15, token11.getTokenType());
      
      xPathLexer1.setPreviousToken(token7);
      assertEquals(4, token7.getTokenType());
      
      Token token12 = xPathLexer1.leftParen();
      assertEquals(1, token12.getTokenType());
      
      Token token13 = xPathLexer1.not();
      assertEquals(23, token13.getTokenType());
      
      Token token14 = xPathLexer0.at();
      assertEquals(16, token14.getTokenType());
      
      int int0 = xPathLexer1.currentPosition();
      assertEquals(4, int0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=3.034563706628883
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      
      xPathLexer0.number();
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      
      Token token3 = xPathLexer0.whitespace();
      assertEquals((-2), token3.getTokenType());
      
      Token token4 = xPathLexer0.leftParen();
      assertEquals(1, token4.getTokenType());
      
      Token token5 = xPathLexer0.dollar();
      assertEquals(26, token5.getTokenType());
      
      Token token6 = xPathLexer0.star();
      assertEquals(20, token6.getTokenType());
      
      xPathLexer0.and();
      Token token7 = xPathLexer0.at();
      assertEquals(16, token7.getTokenType());
      
      Token token8 = xPathLexer0.plus();
      assertEquals(5, token8.getTokenType());
      
      xPathLexer0.hasMoreChars();
      xPathLexer0.and();
      xPathLexer0.div();
      xPathLexer0.literal();
      Token token9 = xPathLexer0.comma();
      assertEquals(32, token9.getTokenType());
      
      Token token10 = xPathLexer0.rightParen();
      assertEquals(2, token10.getTokenType());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.7380886179149198
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<c");
      xPathLexer0.dots();
      xPathLexer0.colon();
      xPathLexer0.minus();
      xPathLexer0.plus();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.nextToken();
      xPathLexer1.colon();
      xPathLexer0.notEquals();
      xPathLexer1.literal();
      xPathLexer0.rightBracket();
      xPathLexer0.consume(1);
      xPathLexer1.doubleColon();
      xPathLexer0.number();
      xPathLexer1.slashes();
      xPathLexer1.slashes();
      xPathLexer0.getXPath();
      xPathLexer0.consume(1);
      xPathLexer1.mod();
      Token token0 = xPathLexer1.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.9099817216574335
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("J8p5:7<K2|iU5iL=U");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("J8p5", token0.getTokenText());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals(":", token1.getTokenText());
      
      xPathLexer0.and();
      xPathLexer0.identifierOrOperatorName();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("7", token2.getTokenText());
      assertEquals(30, token2.getTokenType());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=3.144373293895905
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("b>%");
      Token token0 = xPathLexer0.equals();
      assertEquals(21, token0.getTokenType());
      assertEquals("b", token0.getTokenText());
      
      xPathLexer0.and();
      xPathLexer0.setXPath("b>%");
      xPathLexer0.div();
      XPathLexer xPathLexer1 = new XPathLexer("b>%");
      Token token1 = xPathLexer1.dollar();
      assertEquals(26, token1.getTokenType());
      assertEquals("b", token1.getTokenText());
      
      Token token2 = xPathLexer1.relationalOperator();
      assertNotNull(token2);
      assertEquals(9, token2.getTokenType());
      assertEquals(">", token2.getTokenText());
      
      Token token3 = xPathLexer1.comma();
      assertEquals("%", token3.getTokenText());
      
      Token token4 = xPathLexer1.literal();
      assertNull(token4);
      
      Token token5 = xPathLexer0.comma();
      assertEquals(32, token5.getTokenType());
      assertEquals("b", token5.getTokenText());
      
      Token token6 = xPathLexer1.leftBracket();
      assertEquals(3, token6.getTokenType());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.0374623069217828
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.div();
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(19, token1.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.at();
      xPathLexer0.and();
      xPathLexer0.at();
      Token token2 = xPathLexer0.comma();
      assertEquals(32, token2.getTokenType());
      
      Token token3 = xPathLexer0.dots();
      assertEquals(13, token3.getTokenType());
      
      Token token4 = xPathLexer0.whitespace();
      assertEquals((-2), token4.getTokenType());
      
      Token token5 = xPathLexer0.rightBracket();
      assertEquals(4, token5.getTokenType());
      
      Token token6 = xPathLexer0.number();
      assertEquals(30, token6.getTokenType());
      
      xPathLexer0.and();
      Token token7 = xPathLexer0.dollar();
      assertEquals(26, token7.getTokenType());
      
      xPathLexer0.or();
      Token token8 = xPathLexer0.nextToken();
      assertEquals((-1), token8.getTokenType());
      
      Token token9 = xPathLexer0.at();
      assertEquals(16, token9.getTokenType());
      
      Token token10 = xPathLexer0.identifierOrOperatorName();
      assertNull(token10);
      
      Token token11 = xPathLexer0.minus();
      assertEquals(6, token11.getTokenType());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=3.5033089107889723
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("L(Sb#: s{bm}a^?gF{");
      xPathLexer0.operatorName();
      xPathLexer0.comma();
      xPathLexer0.literal();
      xPathLexer0.dollar();
      xPathLexer0.doubleColon();
      xPathLexer0.identifier();
      xPathLexer0.and();
      xPathLexer0.dots();
      xPathLexer0.comma();
      xPathLexer0.star();
      xPathLexer0.rightBracket();
      xPathLexer0.notEquals();
      xPathLexer0.literal();
      xPathLexer0.plus();
      xPathLexer0.leftParen();
      xPathLexer0.or();
      xPathLexer0.comma();
      xPathLexer0.plus();
      xPathLexer0.equals();
      xPathLexer0.and();
      xPathLexer0.literal();
      xPathLexer0.getPreviousToken();
      xPathLexer0.rightBracket();
      // Undeclared exception!
      try { 
        xPathLexer0.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.881987830662059
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.leftParen();
      xPathLexer0.colon();
      xPathLexer0.and();
      xPathLexer0.leftParen();
      Token token0 = xPathLexer0.colon();
      assertEquals(18, token0.getTokenType());
      
      xPathLexer0.div();
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      
      xPathLexer0.literal();
      Token token3 = xPathLexer0.notEquals();
      assertEquals(22, token3.getTokenType());
      
      Token token4 = xPathLexer0.not();
      assertEquals(23, token4.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.leftParen();
      Token token5 = xPathLexer0.plus();
      assertEquals(5, token5.getTokenType());
      
      xPathLexer0.number();
      Token token6 = xPathLexer0.star();
      assertEquals(20, token6.getTokenType());
      
      Token token7 = xPathLexer0.number();
      assertEquals(30, token7.getTokenType());
      
      xPathLexer0.leftBracket();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.leftParen();
      xPathLexer0.relationalOperator();
      xPathLexer0.mod();
      Token token8 = xPathLexer0.identifier();
      assertEquals(15, token8.getTokenType());
      
      xPathLexer0.mod();
      Token token9 = xPathLexer0.nextToken();
      assertEquals((-1), token9.getTokenType());
      
      Token token10 = xPathLexer0.leftParen();
      assertEquals(1, token10.getTokenType());
      
      Token token11 = xPathLexer0.leftBracket();
      assertEquals(3, token11.getTokenType());
      
      xPathLexer0.div();
      char char0 = xPathLexer0.LA(0);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.1767800160142987
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      
      xPathLexer0.div();
      Token token1 = xPathLexer0.comma();
      assertEquals(32, token1.getTokenType());
      
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      
      Token token3 = xPathLexer0.slashes();
      assertEquals(11, token3.getTokenType());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.2779078718979793
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("En0Zu}N4'egaI");
      Token token0 = xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken(token0);
      assertEquals("En0Zu", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      assertEquals("}", token1.getTokenText());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.3177247747368084
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.mod();
      xPathLexer0.dots();
      Token token0 = xPathLexer0.colon();
      assertEquals(18, token0.getTokenType());
      
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals((-1), token3.getTokenType());
      
      Token token4 = xPathLexer0.dots();
      assertEquals(13, token4.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      Token token5 = xPathLexer0.leftBracket();
      assertEquals(3, token5.getTokenType());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.5085367320210596
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.not();
      xPathLexer0.leftBracket();
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      
      xPathLexer0.literal();
      xPathLexer0.or();
      xPathLexer0.doubleColon();
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
      
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(4, token3.getTokenType());
      
      xPathLexer0.leftParen();
      Token token4 = xPathLexer0.star();
      assertEquals(20, token4.getTokenType());
      
      Token token5 = xPathLexer0.doubleColon();
      assertEquals(19, token5.getTokenType());
      
      xPathLexer0.leftBracket();
      Token token6 = xPathLexer0.slashes();
      assertEquals(11, token6.getTokenType());
      
      xPathLexer0.setXPath("");
      Token token7 = xPathLexer0.nextToken();
      assertEquals((-1), token7.getTokenType());
      
      Token token8 = xPathLexer0.pipe();
      assertEquals(17, token8.getTokenType());
      
      xPathLexer0.literal();
      Token token9 = xPathLexer0.literal();
      assertNull(token9);
      
      Token token10 = xPathLexer0.leftBracket();
      assertEquals(3, token10.getTokenType());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=3.0520467336709514
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.relationalOperator();
      xPathLexer0.rightParen();
      xPathLexer0.and();
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      
      xPathLexer0.dots();
      xPathLexer0.getPreviousToken();
      Token token1 = xPathLexer0.rightParen();
      assertEquals(2, token1.getTokenType());
      
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      
      Token token3 = xPathLexer0.star();
      assertEquals(20, token3.getTokenType());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.4920042096395505
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.colon();
      assertEquals(18, token0.getTokenType());
      
      xPathLexer0.or();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNotNull(token1);
      assertEquals(15, token1.getTokenType());
      
      xPathLexer0.star();
      Token token2 = xPathLexer0.star();
      assertEquals(20, token2.getTokenType());
      
      Token token3 = xPathLexer0.slashes();
      assertEquals(11, token3.getTokenType());
      
      Token token4 = xPathLexer0.comma();
      assertEquals(32, token4.getTokenType());
      
      xPathLexer0.mod();
      XPathLexer xPathLexer1 = new XPathLexer("uB}ea112K.hpbuiKWC");
      Token token5 = xPathLexer1.pipe();
      assertEquals(17, token5.getTokenType());
      assertEquals("u", token5.getTokenText());
      
      Token token6 = xPathLexer1.leftBracket();
      assertEquals(3, token6.getTokenType());
      assertEquals("B", token6.getTokenText());
      
      Token token7 = xPathLexer0.nextToken();
      assertEquals((-1), token7.getTokenType());
      
      Token token8 = xPathLexer1.plus();
      assertEquals(5, token8.getTokenType());
      assertEquals("}", token8.getTokenText());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.5036494148407646
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("En0Zu}N4'egaI");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals("}", token1.getTokenText());
      
      Token token2 = xPathLexer0.comma();
      assertEquals("N", token2.getTokenText());
      
      Token token3 = xPathLexer0.literal();
      assertNull(token3);
      
      Token token4 = xPathLexer0.comma();
      assertEquals(32, token4.getTokenType());
      
      Token token5 = xPathLexer0.leftBracket();
      assertEquals(3, token5.getTokenType());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.1460335222041784
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.nextToken();
      xPathLexer0.not();
      xPathLexer0.comma();
      xPathLexer0.identifier();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.4466856169199285
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.comma();
      assertEquals(32, token0.getTokenType());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.1517933465769423
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      
      xPathLexer0.comma();
      Token token2 = xPathLexer0.literal();
      assertNull(token2);
      
      Token token3 = xPathLexer0.comma();
      assertEquals(32, token3.getTokenType());
      
      Token token4 = xPathLexer0.leftBracket();
      assertEquals(3, token4.getTokenType());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.5097963580179017
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("J8p5:7<K2|iU5iL=U");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("J8p5", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(30, token2.getTokenType());
      assertEquals("7", token2.getTokenText());
      
      xPathLexer0.setPreviousToken(token1);
      assertEquals(":", token1.getTokenText());
      assertEquals(18, token1.getTokenType());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.8594165987794438
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("J8p5:7<K2|iU5iL=U");
      Token token0 = xPathLexer0.comma();
      assertEquals(32, token0.getTokenType());
      assertEquals("J", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifier();
      assertEquals("8p5", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      assertEquals(":", token2.getTokenText());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.9341659629582093
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("b>%");
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals("b", token0.getTokenText());
      
      Token token1 = xPathLexer0.comma();
      assertEquals(">", token1.getTokenText());
      
      xPathLexer0.literal();
      Token token2 = xPathLexer0.comma();
      assertEquals(32, token2.getTokenType());
      
      Token token3 = xPathLexer0.leftBracket();
      assertEquals(3, token3.getTokenType());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=3.4753237071514405
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.slashes();
      xPathLexer0.pipe();
      xPathLexer0.leftBracket();
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      
      Token token2 = xPathLexer0.equals();
      assertEquals(21, token2.getTokenType());
      
      Token token3 = xPathLexer0.at();
      assertEquals(16, token3.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.leftParen();
      Token token4 = xPathLexer0.star();
      assertEquals(20, token4.getTokenType());
      
      Token token5 = xPathLexer0.whitespace();
      assertEquals((-2), token5.getTokenType());
      
      Token token6 = xPathLexer0.pipe();
      assertEquals(17, token6.getTokenType());
      
      xPathLexer0.div();
      Token token7 = xPathLexer0.leftBracket();
      assertEquals(3, token7.getTokenType());
      
      Token token8 = xPathLexer0.rightBracket();
      assertEquals(4, token8.getTokenType());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.6146201777712217
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("En0Zu}N4'egaI");
      xPathLexer0.nextToken();
      xPathLexer0.plus();
      xPathLexer0.equals();
      xPathLexer0.comma();
      xPathLexer0.literal();
      xPathLexer0.plus();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.885700150847151
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.or();
      xPathLexer0.mod();
      xPathLexer0.and();
      Token token0 = xPathLexer0.colon();
      assertEquals(18, token0.getTokenType());
      
      Token token1 = xPathLexer0.rightParen();
      assertEquals(2, token1.getTokenType());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("kSRC2CKM.");
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }
}
