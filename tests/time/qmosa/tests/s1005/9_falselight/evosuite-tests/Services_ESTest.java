/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 17:53:57 GMT 2019
 */


import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Services_ESTest extends Services_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.5642900265283206
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://#:79");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "");
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("127.0.0.1", 79);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      byte[] byteArray0 = new byte[9];
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      byteArray0[6] = (byte)28;
      byteArray0[3] = (byte)28;
      byteArray0[2] = (byte)79;
      byteArray0[3] = (byte)28;
      byteArray0[4] = (byte)79;
      byteArray0[5] = (byte)79;
      byteArray0[6] = (byte)79;
      byteArray0[5] = (byte)79;
      byteArray0[8] = (byte)79;
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress1 = new EvoSuiteRemoteAddress("**URL Mal Form\u00E9** (", 1);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress1);
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTP("", (byte)79);
      System.setCurrentTimeMillis((byte)79);
      System.setCurrentTimeMillis((-607L));
      System.setCurrentTimeMillis((-607L));
      String string0 = services_HTTP_Result0.toString();
      assertEquals("**** Resultat : \n** Fonctionnement : false\n** Temps : 0 ms\n** Poid de la page : 0 octets\n** Code de page : 0\n** Erreur g\u00E9n\u00E9r\u00E9e : **Erreur d'E/S** (org.evosuite.runtime.mock.java.lang.MockThrowable: Could not find: ) **.\n****", string0);
      
      System.setCurrentTimeMillis((byte)79);
      System.setCurrentTimeMillis(0L);
      Services.testPOP3("", (byte)79);
      Services.testSMTP("", (byte)79);
      System.setCurrentTimeMillis(0);
      Services.testHTTPS("", (byte)79);
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testSMTP("", 2010);
      assertEquals(0L, services_SIMPLE_Result0.time);
      assertFalse(services_SIMPLE_Result0.works);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.2261289670319746
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://#:79");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "RP{`st979lZ/C6");
      EvoSuiteURL evoSuiteURL1 = new EvoSuiteURL("http://#:79");
      NetworkHandling.createRemoteTextFile(evoSuiteURL1, "");
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)79;
      byteArray0[3] = (byte)7;
      byteArray0[2] = (byte)79;
      byteArray0[3] = (byte)7;
      byteArray0[4] = (byte)79;
      byteArray0[5] = (byte)79;
      byteArray0[6] = (byte)79;
      byteArray0[5] = (byte)79;
      byteArray0[8] = (byte)79;
      EvoSuiteRemoteAddress evoSuiteRemoteAddress1 = new EvoSuiteRemoteAddress("**URL Mal Form\u00E9** (", 1);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress1);
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTP("#", (byte)79);
      assertEquals(15, services_HTTP_Result0.page_weight);
      assertTrue(services_HTTP_Result0.works);
      
      System.setCurrentTimeMillis((byte)79);
      System.setCurrentTimeMillis(0L);
      Services.testPOP3("#", (byte)79);
      Services.testSMTP("qaVli|/K~", 863);
      System.setCurrentTimeMillis(714L);
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testSMTP("RP{`st979lZ/C6", 0);
      assertFalse(services_SIMPLE_Result0.works);
      assertEquals(0L, services_SIMPLE_Result0.time);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://#:79");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "");
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      byte[] byteArray0 = new byte[15];
      byteArray0[0] = (byte)79;
      byteArray0[3] = (byte)79;
      byteArray0[2] = (byte)79;
      byteArray0[3] = (byte)79;
      byteArray0[4] = (byte)79;
      byteArray0[5] = (byte)79;
      byteArray0[6] = (byte)79;
      byteArray0[5] = (byte)79;
      byteArray0[8] = (byte)79;
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress1 = new EvoSuiteRemoteAddress("127.0.0.1", 79);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress1);
      Services.testSMTP("", (byte)79);
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testPOP3("kO0?]?je'/", (-1004));
      assertEquals(0L, services_SIMPLE_Result0.time);
      assertFalse(services_SIMPLE_Result0.works);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("https://|d!cW}L");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "** Code de page : ");
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("** Poid de la page : ", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTPS("|d!cW}L", (-1));
      assertEquals(19, services_HTTP_Result0.page_weight);
      assertTrue(services_HTTP_Result0.works);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTPS((String) null, (-1));
      assertEquals(0L, services_HTTP_Result0.time);
      assertFalse(services_HTTP_Result0.works);
      assertEquals(0, services_HTTP_Result0.code);
      assertEquals(0, services_HTTP_Result0.page_weight);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte)113;
      byteArray0[3] = (byte)1;
      byteArray0[4] = (byte) (-47);
      byteArray0[5] = (byte)79;
      byteArray0[6] = (byte) (-32);
      byteArray0[7] = (byte)0;
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      Services.testHTTP((String) null, (-1));
      boolean boolean0 = NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.436476186791162
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = new Services.HTTP_Result();
      services_HTTP_Result0.Error = null;
      services_HTTP_Result0.toString();
      Services services0 = new Services();
      services_HTTP_Result0.toString();
      Services.SIMPLE_Result services_SIMPLE_Result0 = new Services.SIMPLE_Result();
      services_SIMPLE_Result0.reset();
      services_SIMPLE_Result0.reset();
      assertFalse(services_SIMPLE_Result0.works);
      assertEquals(0L, services_SIMPLE_Result0.time);
      
      String string0 = services_HTTP_Result0.toString();
      assertEquals("**** Resultat : \n** Fonctionnement : false\n** Temps : 0 ms\n** Poid de la page : 0 octets\n** Code de page : 0\n** Erreur g\u00E9n\u00E9r\u00E9e : null.\n****", string0);
      
      Services.testPOP3("GjJeku|_3KZ ~3ko", 0);
      Services.testSMTP((String) null, 0);
      Services.testSMTP("R3\"j;)27q", 0);
      Services.SIMPLE_Result services_SIMPLE_Result1 = Services.testSMTP((String) null, (-1651));
      assertFalse(services_SIMPLE_Result1.works);
      
      Services.testSMTP("", 0);
      Services.SIMPLE_Result services_SIMPLE_Result2 = Services.testSMTP("", 0);
      assertEquals(0L, services_SIMPLE_Result2.time);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Services.SIMPLE_Result services_SIMPLE_Result0 = new Services.SIMPLE_Result();
      services_SIMPLE_Result0.works = false;
      services_SIMPLE_Result0.works = false;
      services_SIMPLE_Result0.reset();
      String string0 = services_SIMPLE_Result0.toString();
      assertEquals("**** Resultat : \n** Fonctionnement : false\n** Temps : 0 ms\n** Erreur g\u00E9n\u00E9r\u00E9e : .\n****", string0);
      
      services_SIMPLE_Result0.reset();
      services_SIMPLE_Result0.time = (-263L);
      services_SIMPLE_Result0.reset();
      services_SIMPLE_Result0.reset();
      assertFalse(services_SIMPLE_Result0.works);
      assertEquals(0L, services_SIMPLE_Result0.time);
      
      Services.HTTP_Result services_HTTP_Result0 = new Services.HTTP_Result();
      services_HTTP_Result0.reset();
      assertEquals(0L, services_HTTP_Result0.time);
      assertEquals(0, services_HTTP_Result0.code);
      assertEquals(0, services_HTTP_Result0.page_weight);
      assertFalse(services_HTTP_Result0.works);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://#:79");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "");
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)79;
      byteArray0[0] = (byte)7;
      byteArray0[2] = (byte)79;
      byteArray0[3] = (byte)7;
      byteArray0[5] = (byte)79;
      byteArray0[5] = (byte)79;
      byteArray0[6] = (byte)79;
      byteArray0[5] = (byte)79;
      byteArray0[8] = (byte)79;
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress1 = new EvoSuiteRemoteAddress("**URL Mal Form\u00E9** (", 1);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress1);
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTP("#", (byte)79);
      services_HTTP_Result0.toString();
      System.setCurrentTimeMillis(76L);
      System.setCurrentTimeMillis((byte)79);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testPOP3("", (-376));
      services_SIMPLE_Result0.reset();
      String string0 = services_SIMPLE_Result0.toString();
      assertEquals("**** Resultat : \n** Fonctionnement : false\n** Temps : 0 ms\n** Erreur g\u00E9n\u00E9r\u00E9e : .\n****", string0);
      
      services_SIMPLE_Result0.works = false;
      services_SIMPLE_Result0.time = (-1801L);
      services_SIMPLE_Result0.reset();
      assertEquals(0L, services_SIMPLE_Result0.time);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      System.setCurrentTimeMillis((-726L));
      System.setCurrentTimeMillis(1347L);
      Services.HTTP_Result services_HTTP_Result0 = new Services.HTTP_Result();
      services_HTTP_Result0.toString();
      String string0 = services_HTTP_Result0.toString();
      assertEquals("**** Resultat : \n** Fonctionnement : false\n** Temps : 0 ms\n** Poid de la page : 0 octets\n** Code de page : 0\n** Erreur g\u00E9n\u00E9r\u00E9e : .\n****", string0);
      
      services_HTTP_Result0.page_weight = (-3989);
      services_HTTP_Result0.time = (-726L);
      services_HTTP_Result0.Error = "a.dl";
      services_HTTP_Result0.time = (long) (-3989);
      services_HTTP_Result0.code = (-1236);
      Services.HTTP_Result services_HTTP_Result1 = Services.testHTTP("a.dl", (-3989));
      assertEquals(0, services_HTTP_Result1.code);
      assertEquals(0L, services_HTTP_Result1.time);
      assertEquals(0, services_HTTP_Result1.page_weight);
      assertFalse(services_HTTP_Result1.works);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTPS("", (-3630));
      assertEquals(0L, services_HTTP_Result0.time);
      assertEquals(0, services_HTTP_Result0.page_weight);
      assertFalse(services_HTTP_Result0.works);
      assertEquals(0, services_HTTP_Result0.code);
  }
}
