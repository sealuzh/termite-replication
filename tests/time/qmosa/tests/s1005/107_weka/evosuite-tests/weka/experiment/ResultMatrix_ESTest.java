/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 18:07:24 GMT 2019
 */

package weka.experiment;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import weka.experiment.ResultMatrixCSV;
import weka.experiment.ResultMatrixGnuPlot;
import weka.experiment.ResultMatrixHTML;
import weka.experiment.ResultMatrixLatex;
import weka.experiment.ResultMatrixPlainText;
import weka.experiment.ResultMatrixSignificance;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ResultMatrix_ESTest extends ResultMatrix_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=4.070843669941492
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 0);
      resultMatrixLatex0.getDefaultEnumerateColNames();
      resultMatrixLatex0.m_EnumerateRowNames = false;
      String[] stringArray0 = new String[4];
      stringArray0[0] = " ";
      stringArray0[2] = " ";
      ResultMatrixLatex.main(stringArray0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      String[] stringArray1 = new String[3];
      stringArray1[0] = "$\bullet$";
      stringArray1[1] = "./|gkOw#%(";
      stringArray1[2] = "(";
      resultMatrixPlainText0.setOptions(stringArray1);
      resultMatrixPlainText0.TIE_STRING = "";
      resultMatrixPlainText0.toStringKey();
      resultMatrixLatex0.clear();
      resultMatrixLatex0.getDefaultShowAverage();
      resultMatrixLatex0.getDisplayCol(0);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixPlainText0);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixLatex1);
      resultMatrixPlainText0.getRowCount();
      resultMatrixPlainText1.toStringRanking();
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.1243658097838045
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      resultMatrixPlainText0.m_PrintColNames = true;
      resultMatrixPlainText0.getStdDevPrec();
      int[][] intArray0 = new int[8][8];
      int[] intArray1 = new int[8];
      intArray1[0] = 1;
      intArray1[1] = 0;
      intArray1[2] = 0;
      intArray1[3] = 1;
      intArray1[4] = 5061;
      intArray1[5] = 1;
      intArray1[6] = 1;
      intArray1[7] = 0;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[4];
      intArray2[0] = 2;
      intArray2[1] = 2;
      intArray2[2] = 0;
      intArray2[3] = 4886;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[1];
      intArray3[0] = 1;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[2];
      intArray4[0] = 1;
      intArray4[1] = 1;
      intArray0[3] = intArray4;
      int[] intArray5 = new int[5];
      intArray5[0] = 2;
      intArray5[1] = 1;
      intArray5[2] = 1;
      intArray5[3] = 1;
      intArray5[4] = 4886;
      intArray0[4] = intArray5;
      int[] intArray6 = new int[1];
      intArray6[0] = 4886;
      intArray0[5] = intArray6;
      int[] intArray7 = new int[4];
      intArray7[0] = 4886;
      intArray7[1] = 1;
      intArray7[2] = 16;
      intArray7[3] = 1;
      intArray0[6] = intArray7;
      int[] intArray8 = new int[5];
      intArray8[0] = 16;
      intArray8[1] = 2;
      intArray8[2] = 2;
      intArray8[3] = 16;
      intArray8[4] = 4933;
      intArray0[7] = intArray8;
      resultMatrixPlainText0.m_Significance = intArray0;
      // Undeclared exception!
      try { 
        resultMatrixHTML0.padString((String) null, 5061, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.7368636794269894
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixLatex0);
      resultMatrixLatex0.toArray();
      resultMatrixPlainText1.setShowAverage(false);
      Vector<String> vector0 = new Vector<String>();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[2];
      intArray0[0] = 26;
      intArray0[1] = 1;
      resultMatrixPlainText0.m_RowOrder = intArray0;
      resultMatrixGnuPlot0.toStringKey();
      vector0.add("(");
      Vector<String> vector1 = new Vector<String>();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(1, 1);
      resultMatrixGnuPlot0.clearHeader();
      vector1.add("[");
      resultMatrixCSV0.setRowNameWidth(38);
      resultMatrixGnuPlot0.removeFilterName(" ");
      resultMatrixCSV0.toStringRanking();
      resultMatrixCSV0.printColNamesTipText();
      resultMatrixCSV0.stdDevPrecTipText();
      ResultMatrixPlainText resultMatrixPlainText2 = new ResultMatrixPlainText();
      resultMatrixPlainText2.getDefaultRowNameWidth();
      resultMatrixPlainText1.getColOrder();
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.7809095789131466
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      resultMatrixGnuPlot0.clearSummary();
      resultMatrixGnuPlot0.setPrintRowNames(false);
      int[] intArray0 = new int[5];
      intArray0[0] = 2;
      resultMatrixGnuPlot0.toArray();
      intArray0[1] = 0;
      resultMatrixGnuPlot0.toStringKey();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixSignificance0);
      resultMatrixCSV0.getSummaryTitle(0);
      resultMatrixCSV0.getRowName(0);
      resultMatrixGnuPlot0.clearHeader();
      resultMatrixCSV0.setRowNameWidth((-1279));
      resultMatrixGnuPlot0.removeFilterName("Key:\n1 col0\n");
      resultMatrixCSV0.toStringRanking();
      resultMatrixCSV0.printColNamesTipText();
      resultMatrixCSV0.stdDevPrecTipText();
      resultMatrixCSV0.stdDevPrecTipText();
      resultMatrixCSV0.getAverage(17);
      resultMatrixGnuPlot0.getMeanWidth();
      resultMatrixCSV0.toStringKey();
      resultMatrixSignificance0.toStringSummary();
      resultMatrixCSV0.isStdDev(222);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.9831178982477073
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixLatex0);
      resultMatrixLatex0.toArray();
      resultMatrixLatex0.listOptions();
      resultMatrixPlainText1.setShowAverage(false);
      Vector<String> vector0 = new Vector<String>();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.toStringKey();
      vector0.add("(");
      Vector<String> vector1 = new Vector<String>();
      vector1.add(" ");
      resultMatrixPlainText1.getOptions();
      vector1.add("Array-Dimensions of 'new int[][]': ");
      resultMatrixPlainText0.getShowAverage();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.toStringRanking();
      ResultMatrixPlainText resultMatrixPlainText2 = new ResultMatrixPlainText(resultMatrixHTML0);
      resultMatrixPlainText2.setRemoveFilterName(true);
      resultMatrixLatex0.setCountWidth(2);
      resultMatrixLatex0.doubleToString(0, 2053);
      resultMatrixLatex0.setEnumerateColNames(true);
      resultMatrixLatex0.getDefaultEnumerateColNames();
      resultMatrixPlainText0.getCountWidth();
      resultMatrixPlainText2.getDefaultStdDevWidth();
      resultMatrixLatex0.getDisplayName();
      resultMatrixPlainText1.getDefaultPrintRowNames();
      resultMatrixLatex0.getSignificance(0, 50);
      assertEquals(2, resultMatrixLatex0.getCountWidth());
      
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixPlainText0);
      resultMatrixHTML0.getDefaultRowNameWidth();
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.270140539522612
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2, 4);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      Vector<String> vector0 = new Vector<String>();
      int int0 = 0;
      resultMatrixGnuPlot0.setMeanPrec(0);
      resultMatrixGnuPlot0.m_Mean = null;
      resultMatrixGnuPlot0.setRowOrder((int[]) null);
      resultMatrixGnuPlot0.getPrintRowNames();
      int[][] intArray0 = new int[8][9];
      intArray0[0] = null;
      intArray0[1] = null;
      intArray0[2] = null;
      intArray0[3] = null;
      intArray0[4] = null;
      intArray0[5] = null;
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (-52.0);
      doubleArray0[1] = (double) 4;
      resultMatrixCSV1.m_Counts = doubleArray0;
      intArray0[6] = null;
      intArray0[7] = null;
      // Undeclared exception!
      try { 
        resultMatrixCSV0.setSummary(intArray0, intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.4429289144581467
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.m_EnumerateRowNames = false;
      resultMatrixCSV0.countWidthTipText();
      resultMatrixCSV0.setPrintColNames(false);
      resultMatrixCSV0.m_ShowAverage = false;
      resultMatrixCSV0.m_RemoveFilterName = true;
      resultMatrixCSV0.setSignificanceWidth(0);
      resultMatrixCSV0.setColName(0, "()");
      resultMatrixCSV0.toStringSummary();
      resultMatrixCSV0.getColCount();
      resultMatrixCSV0.m_ColNameWidth = 1;
      ResultMatrixSignificance resultMatrixSignificance0 = null;
      try {
        resultMatrixSignificance0 = new ResultMatrixSignificance(0, (-2803));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.76644351989246
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      resultMatrixGnuPlot0.clearSummary();
      int[] intArray0 = new int[5];
      intArray0[0] = 2;
      resultMatrixGnuPlot0.toArray();
      intArray0[1] = 0;
      intArray0[2] = 1;
      intArray0[3] = 2;
      resultMatrixGnuPlot0.clear();
      intArray0[4] = 0;
      resultMatrixGnuPlot0.setRowOrder(intArray0);
      resultMatrixSignificance0.getDefaultShowStdDev();
      assertEquals(50, resultMatrixSignificance0.getRowNameWidth());
      
      resultMatrixSignificance0.m_RowNameWidth = 180;
      resultMatrixSignificance0.setRowOrder((int[]) null);
      resultMatrixSignificance0.setMeanPrec(2);
      resultMatrixSignificance0.getVisibleRowCount();
      resultMatrixGnuPlot0.setStdDevWidth(1);
      resultMatrixGnuPlot0.m_PrintRowNames = false;
      resultMatrixGnuPlot0.m_ShowStdDev = false;
      resultMatrixSignificance0.getDefaultPrintColNames();
      resultMatrixSignificance0.setShowAverage(false);
      resultMatrixSignificance0.toStringSummary();
      resultMatrixGnuPlot0.clearHeader();
      resultMatrixGnuPlot0.getDefaultRowNameWidth();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.toStringSummary();
      resultMatrixSignificance0.significanceWidthTipText();
      assertEquals(0, resultMatrixSignificance0.getStdDevWidth());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.0119546488601108
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2, 4);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      Vector<String> vector0 = new Vector<String>();
      int[] intArray0 = new int[5];
      intArray0[0] = 0;
      intArray0[1] = 2;
      intArray0[2] = 4;
      intArray0[3] = 1;
      intArray0[4] = 1;
      resultMatrixGnuPlot0.m_RankingWins = intArray0;
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.toStringKey();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.5346868225900514
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 1);
      resultMatrixGnuPlot0.clearSummary();
      resultMatrixGnuPlot0.setPrintRowNames(true);
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.toArray();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.5338121880117566
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setPrintRowNames(false);
      resultMatrixHTML0.removeFilterName("\tThe maximum width for the row names (0 = optimal).\n\t(default: ");
      resultMatrixHTML0.isRowName(2326);
      assertFalse(resultMatrixHTML0.getPrintRowNames());
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      int[] intArray0 = new int[5];
      intArray0[0] = 1;
      intArray0[2] = 2;
      intArray0[3] = 0;
      intArray0[4] = 2326;
      resultMatrixLatex0.m_ColOrder = intArray0;
      resultMatrixLatex0.m_PrintColNames = false;
      resultMatrixLatex0.clear();
      resultMatrixLatex0.getDefaultShowAverage();
      String string0 = resultMatrixLatex0.rowNameWidthTipText();
      assertEquals("The maximum width for the row names (0 = optimal).", string0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.5756223589158176
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      
      resultMatrixCSV0.m_CountWidth = 2780;
      resultMatrixCSV0.m_PrintColNames = false;
      resultMatrixCSV0.toStringRanking();
      double[][] doubleArray0 = new double[7][4];
      double[] doubleArray1 = new double[8];
      doubleArray1[0] = (double) 1;
      doubleArray1[1] = (double) 2;
      doubleArray1[2] = 0.0;
      doubleArray1[3] = (double) 0;
      doubleArray1[4] = (double) 2;
      doubleArray1[5] = (double) 1;
      doubleArray1[6] = (double) 0;
      doubleArray1[7] = Double.NaN;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[6];
      doubleArray2[0] = (double) 2;
      doubleArray2[1] = Double.NaN;
      doubleArray2[2] = (double) 2780;
      doubleArray2[3] = (double) 2780;
      doubleArray2[4] = Double.NaN;
      doubleArray2[5] = 0.0;
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[5];
      doubleArray3[0] = (double) 0;
      doubleArray3[1] = (double) 1;
      doubleArray3[2] = (double) 1;
      doubleArray3[3] = (double) 2780;
      doubleArray3[4] = (double) 2;
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[4];
      doubleArray4[0] = Double.NaN;
      doubleArray4[1] = Double.NaN;
      doubleArray4[2] = (double) 2;
      doubleArray4[3] = 0.0;
      doubleArray0[3] = doubleArray4;
      double[] doubleArray5 = new double[2];
      doubleArray5[0] = 0.0;
      doubleArray5[1] = Double.NaN;
      doubleArray0[4] = doubleArray5;
      double[] doubleArray6 = new double[0];
      doubleArray0[5] = doubleArray6;
      double[] doubleArray7 = new double[5];
      doubleArray7[0] = Double.NaN;
      doubleArray7[1] = 0.0;
      doubleArray7[2] = 0.0;
      doubleArray7[3] = (double) 0;
      doubleArray7[4] = (double) 2780;
      doubleArray0[6] = doubleArray7;
      resultMatrixCSV0.m_StdDev = doubleArray0;
      resultMatrixCSV0.setEnumerateColNames(true);
      resultMatrixCSV0.toStringSummary();
      resultMatrixCSV0.setEnumerateColNames(true);
      resultMatrixCSV0.removeFilterName("&[SHo_A9\"d%@=,X*J");
      resultMatrixCSV0.removeFilterNameTipText();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(16, 2);
      resultMatrixPlainText0.setShowAverage(true);
      resultMatrixPlainText0.getDefaultCountWidth();
      resultMatrixPlainText0.colNameWidthTipText();
      assertFalse(resultMatrixPlainText0.getRemoveFilterName());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.5234077489133457
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.m_EnumerateRowNames = false;
      resultMatrixCSV0.countWidthTipText();
      resultMatrixCSV0.m_ShowAverage = false;
      resultMatrixCSV0.m_RemoveFilterName = true;
      resultMatrixCSV0.setSignificanceWidth(0);
      resultMatrixCSV0.setColName(0, ")");
      resultMatrixCSV0.toStringSummary();
      resultMatrixCSV0.getColCount();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      int[] intArray0 = new int[7];
      intArray0[0] = 2;
      intArray0[1] = 0;
      intArray0[2] = 1;
      intArray0[3] = 1;
      intArray0[4] = (-4106);
      intArray0[5] = 0;
      intArray0[6] = 180;
      resultMatrixSignificance0.setRowOrder(intArray0);
      resultMatrixSignificance0.getVisibleRowCount();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      resultMatrixGnuPlot0.setStdDevWidth(1);
      resultMatrixSignificance0.getDefaultPrintColNames();
      resultMatrixSignificance0.setRemoveFilterName(true);
      resultMatrixSignificance0.setShowAverage(true);
      resultMatrixSignificance0.toStringSummary();
      assertTrue(resultMatrixSignificance0.getShowAverage());
      
      resultMatrixGnuPlot0.clearHeader();
      resultMatrixGnuPlot0.getDefaultRowNameWidth();
      int int0 = resultMatrixGnuPlot0.getDisplayRow((-1297));
      assertEquals((-1), int0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.8528789326488377
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixLatex0);
      resultMatrixLatex0.toArray();
      resultMatrixLatex0.listOptions();
      resultMatrixPlainText1.setShowAverage(false);
      Vector<String> vector0 = new Vector<String>();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.toStringKey();
      vector0.add("(");
      Vector<String> vector1 = new Vector<String>();
      vector1.add(" ");
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(1, 1);
      resultMatrixCSV0.getRowName(1);
      resultMatrixGnuPlot0.clearHeader();
      vector1.add("[");
      resultMatrixCSV0.setRowNameWidth(38);
      resultMatrixGnuPlot0.removeFilterName((String) null);
      resultMatrixCSV0.toStringRanking();
      resultMatrixCSV0.printColNamesTipText();
      resultMatrixCSV0.stdDevPrecTipText();
      resultMatrixCSV0.stdDevPrecTipText();
      resultMatrixCSV0.getAverage(0);
      resultMatrixPlainText1.getDefaultRowNameWidth();
      resultMatrixPlainText1.setStdDevWidth(0);
      resultMatrixCSV0.setColNameWidth(2);
      assertEquals(38, resultMatrixCSV0.getRowNameWidth());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.3302194132130043
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[] intArray0 = new int[9];
      intArray0[0] = 0;
      intArray0[1] = 2;
      intArray0[2] = 1;
      intArray0[3] = 0;
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getRowName(1);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      resultMatrixGnuPlot0.clearHeader();
      Vector<String> vector0 = new Vector<String>();
      vector0.add("[");
      resultMatrixGnuPlot0.getSummaryTitle(1);
      resultMatrixCSV0.setRowNameWidth(0);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(1618, 1);
      ResultMatrixCSV resultMatrixCSV2 = new ResultMatrixCSV(resultMatrixHTML0);
      resultMatrixCSV0.toStringRanking();
      resultMatrixCSV2.printColNamesTipText();
      ResultMatrixCSV resultMatrixCSV3 = new ResultMatrixCSV();
      resultMatrixCSV3.stdDevPrecTipText();
      resultMatrixGnuPlot0.getMeanWidth();
      ResultMatrixCSV resultMatrixCSV4 = null;
      try {
        resultMatrixCSV4 = new ResultMatrixCSV(1, (-1));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.9521689026447406
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixLatex0);
      resultMatrixLatex0.toArray();
      resultMatrixPlainText0.m_RankingLosses = null;
      resultMatrixLatex0.listOptions();
      resultMatrixPlainText1.setShowAverage(false);
      Vector<String> vector0 = new Vector<String>();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.toStringKey();
      vector0.add("(");
      Vector<String> vector1 = new Vector<String>();
      vector1.add(" ");
      resultMatrixPlainText1.getOptions();
      vector1.add("*");
      resultMatrixPlainText0.getShowAverage();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setStdDevPrec(26);
      resultMatrixHTML0.toStringRanking();
      ResultMatrixPlainText resultMatrixPlainText2 = new ResultMatrixPlainText(resultMatrixHTML0);
      resultMatrixPlainText2.setRemoveFilterName(true);
      assertTrue(resultMatrixPlainText2.getRemoveFilterName());
      
      resultMatrixLatex0.setCountWidth(2);
      resultMatrixLatex0.doubleToString(0, 2053);
      assertEquals(2, resultMatrixLatex0.getCountWidth());
      
      resultMatrixGnuPlot0.clearHeader();
      resultMatrixGnuPlot0.getDefaultRowNameWidth();
      assertEquals(50, resultMatrixGnuPlot0.getRowNameWidth());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.291697895352307
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[] intArray0 = new int[9];
      intArray0[0] = 0;
      intArray0[1] = 2;
      intArray0[2] = 1;
      intArray0[3] = 0;
      intArray0[4] = (-1338);
      intArray0[5] = 1;
      intArray0[6] = 1;
      intArray0[7] = 1;
      int[][] intArray1 = new int[1][4];
      intArray1[0] = intArray0;
      resultMatrixHTML0.m_Wins = intArray1;
      intArray0[8] = (-465);
      resultMatrixHTML0.setColOrder(intArray0);
      resultMatrixHTML0.getDefaultPrintColNames();
      int int0 = resultMatrixHTML0.getSignificanceWidth();
      assertEquals(0, resultMatrixHTML0.getColNameWidth());
      assertEquals(0, int0);
      assertEquals(2, resultMatrixHTML0.getDefaultStdDevPrec());
      assertFalse(resultMatrixHTML0.getEnumerateRowNames());
      assertFalse(resultMatrixHTML0.getDefaultRemoveFilterName());
      assertFalse(resultMatrixHTML0.getShowAverage());
      assertEquals(1, resultMatrixHTML0.getColCount());
      assertEquals(1, resultMatrixHTML0.getRowCount());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.710686196894511
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.m_SignificanceWidth = 687;
      resultMatrixSignificance0.setPrintRowNames(false);
      resultMatrixSignificance0.getColName(0);
      assertFalse(resultMatrixSignificance0.getPrintRowNames());
      
      Vector<String> vector0 = new Vector<String>();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(1, 22);
      resultMatrixGnuPlot0.toStringKey();
      vector0.add("");
      vector0.add((String) null);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      resultMatrixCSV0.getRowName(893);
      resultMatrixGnuPlot0.clearHeader();
      vector0.add((String) null);
      resultMatrixCSV0.setRowNameWidth((-2355));
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot1.removeFilterName("");
      resultMatrixCSV0.toStringRanking();
      resultMatrixCSV0.printColNamesTipText();
      resultMatrixCSV0.stdDevPrecTipText();
      resultMatrixCSV0.stdDevPrecTipText();
      resultMatrixCSV0.getAverage((-2653));
      int int0 = resultMatrixGnuPlot0.getMeanWidth();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=4.027978995130219
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      String[] stringArray0 = new String[3];
      int[] intArray0 = new int[6];
      intArray0[0] = 0;
      intArray0[1] = 1;
      intArray0[2] = 0;
      intArray0[3] = 1;
      intArray0[4] = 2;
      intArray0[5] = 2;
      resultMatrixGnuPlot0.m_ColOrder = intArray0;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      String string0 = resultMatrixSignificance0.padString("23R}~w0cQ", 16, false);
      assertEquals("23R}~w0cQ       ", string0);
      
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      resultMatrixSignificance1.setPrintRowNames(true);
      resultMatrixSignificance1.setSignificanceWidth(32);
      assertTrue(resultMatrixSignificance1.getPrintRowNames());
      
      resultMatrixSignificance0.countWidthTipText();
      resultMatrixSignificance0.setCount(1, 0);
      ResultMatrixLatex.main(stringArray0);
      resultMatrixSignificance0.removeFilterNameTipText();
      assertEquals(1, resultMatrixSignificance0.getColCount());
      
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      ResultMatrixCSV resultMatrixCSV2 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      resultMatrixCSV2.getDefaultPrintColNames();
      assertFalse(resultMatrixCSV2.getShowStdDev());
      assertEquals(2, resultMatrixCSV2.getStdDevPrec());
      assertFalse(resultMatrixCSV2.getEnumerateColNames());
      assertEquals(0, resultMatrixCSV2.getMeanWidth());
      assertEquals(0, resultMatrixCSV2.getVisibleRowCount());
      assertTrue(resultMatrixCSV2.getPrintColNames());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.9943347457173597
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 0);
      resultMatrixLatex0.getRevision();
      resultMatrixLatex0.TIE_STRING = "&[d9ob18d2>$";
      resultMatrixLatex0.getDisplayName();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      resultMatrixCSV0.toStringKey();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(3, 1);
      resultMatrixGnuPlot0.getDefaultColNameWidth();
      assertEquals(50, resultMatrixGnuPlot0.getColNameWidth());
      assertFalse(resultMatrixGnuPlot0.getEnumerateColNames());
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      resultMatrixSignificance0.getDisplayCol((-214));
      String[] stringArray0 = resultMatrixSignificance0.getOptions();
      assertEquals(18, stringArray0.length);
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setShowStdDev(true);
      String string0 = resultMatrixPlainText0.toStringKey();
      assertEquals("Key:\n(1) col0\n", string0);
      
      resultMatrixPlainText0.getMeanPrec();
      assertEquals(5, resultMatrixPlainText0.getCountWidth());
      assertTrue(resultMatrixPlainText0.getPrintColNames());
      assertFalse(resultMatrixPlainText0.getEnumerateRowNames());
      assertEquals(25, resultMatrixPlainText0.getRowNameWidth());
      
      resultMatrixSignificance0.getDefaultEnumerateColNames();
      assertEquals(0, resultMatrixSignificance0.getMeanWidth());
      assertEquals(0, resultMatrixSignificance0.getRowCount());
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertEquals(0, resultMatrixSignificance0.getStdDevWidth());
      assertEquals(0, resultMatrixSignificance0.getRowNameWidth());
      assertEquals(0, resultMatrixSignificance0.getSignificanceWidth());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.143869677950408
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getDefaultRowNameWidth();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixPlainText0);
      resultMatrixHTML0.getDefaultEnumerateColNames();
      int[][] intArray0 = new int[8][3];
      int[] intArray1 = new int[7];
      intArray1[0] = 0;
      intArray1[1] = 2;
      intArray1[2] = 1;
      intArray1[3] = (-1442);
      intArray1[4] = 1;
      intArray1[5] = 25;
      intArray1[6] = 2;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[7];
      intArray2[0] = 0;
      intArray2[1] = 0;
      intArray2[2] = 0;
      intArray2[3] = 2;
      intArray2[4] = (-1442);
      intArray2[5] = 25;
      intArray2[6] = 0;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[0];
      intArray0[2] = intArray3;
      int[] intArray4 = new int[3];
      intArray4[0] = 25;
      intArray4[1] = 0;
      intArray4[2] = (-722);
      intArray0[3] = intArray4;
      int[] intArray5 = new int[9];
      intArray5[0] = 1;
      intArray5[1] = 1;
      intArray5[2] = 0;
      intArray5[3] = 2;
      intArray5[4] = 0;
      intArray5[5] = 1;
      intArray5[6] = (-722);
      intArray5[7] = 1;
      intArray5[8] = 25;
      intArray0[4] = intArray5;
      int[] intArray6 = new int[6];
      intArray6[0] = 2;
      intArray6[1] = (-167);
      intArray6[2] = 1;
      intArray6[3] = 0;
      intArray6[4] = 0;
      intArray6[5] = 2;
      intArray0[5] = intArray6;
      int[] intArray7 = new int[8];
      intArray7[0] = 0;
      intArray7[1] = (-167);
      intArray7[2] = (-167);
      intArray7[3] = (-761);
      intArray7[4] = (-1442);
      intArray7[5] = 1;
      intArray7[6] = (-1442);
      intArray7[7] = 2;
      intArray0[6] = intArray7;
      int[] intArray8 = new int[2];
      intArray8[0] = 0;
      intArray8[1] = 0;
      intArray0[7] = intArray8;
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.setRanking(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.2078364093007297
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (double) 2;
      doubleArray0[1] = (double) 1;
      boolean boolean0 = false;
      resultMatrixSignificance0.m_Counts = doubleArray0;
      resultMatrixSignificance0.getDisplayCol(0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = null;
      try {
        resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixSignificance0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.9821657033443265
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (double) 2;
      doubleArray0[1] = (double) 1;
      resultMatrixSignificance0.m_EnumerateColNames = false;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = (double) 1;
      resultMatrixSignificance0.m_Counts = doubleArray0;
      int int0 = resultMatrixSignificance0.getDisplayCol(0);
      String[] stringArray0 = resultMatrixSignificance0.getOptions();
      assertEquals(17, stringArray0.length);
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setShowStdDev(false);
      resultMatrixPlainText0.m_EnumerateColNames = true;
      String string0 = resultMatrixPlainText0.toStringKey();
      assertEquals("Key:\n(1) col0\n", string0);
      
      int int1 = resultMatrixPlainText0.getMeanPrec();
      assertEquals(2, int1);
      
      resultMatrixSignificance0.getDefaultEnumerateColNames();
      assertEquals(0, resultMatrixSignificance0.getDefaultCountWidth());
      
      int int2 = resultMatrixPlainText0.getDefaultStdDevWidth();
      assertFalse(resultMatrixPlainText0.getShowStdDev());
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
      assertEquals(0, resultMatrixPlainText0.getColNameWidth());
      assertTrue(int2 == int0);
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      assertEquals(25, resultMatrixPlainText0.getRowNameWidth());
      assertFalse(resultMatrixPlainText0.getRemoveFilterName());
      assertEquals(5, resultMatrixPlainText0.getCountWidth());
      assertFalse(resultMatrixPlainText0.getEnumerateRowNames());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(0, int2);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.43720084859267
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(1, 0);
      resultMatrixHTML0.m_RowNameWidth = 621;
      int int0 = (-366);
      // Undeclared exception!
      try { 
        resultMatrixHTML0.doubleToString(0.0, (-366));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.291697895352307
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[] intArray0 = new int[9];
      intArray0[0] = 0;
      intArray0[1] = 2;
      intArray0[2] = 1;
      intArray0[3] = 0;
      intArray0[4] = (-1338);
      intArray0[5] = 1;
      intArray0[6] = 1;
      intArray0[7] = 1;
      intArray0[8] = (-465);
      resultMatrixHTML0.setColOrder(intArray0);
      resultMatrixHTML0.getDefaultPrintColNames();
      resultMatrixHTML0.setEnumerateRowNames(false);
      assertEquals(0, resultMatrixHTML0.getDefaultSignificanceWidth());
      assertEquals(2, resultMatrixHTML0.getDefaultMeanPrec());
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(0, resultMatrixHTML0.getCountWidth());
      assertEquals(1, resultMatrixHTML0.getColCount());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.9619521191434837
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (double) 2;
      doubleArray0[1] = (double) 1;
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(21, 21);
      resultMatrixLatex0.getDisplayName();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixSignificance0);
      String string0 = resultMatrixCSV0.toStringKey();
      assertEquals("Key,\n(1),col0\n", string0);
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 2);
      resultMatrixGnuPlot0.getDefaultColNameWidth();
      String[] stringArray0 = new String[8];
      stringArray0[0] = ">WYs,Z2w(c^b.@6";
      stringArray0[1] = "*";
      stringArray0[2] = "c8Q)SN_a";
      stringArray0[3] = ")";
      stringArray0[4] = "LaTeX";
      stringArray0[5] = ")";
      stringArray0[6] = " ";
      stringArray0[7] = "*";
      ResultMatrixLatex.main(stringArray0);
      resultMatrixCSV0.getShowAverage();
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertEquals(1, resultMatrixCSV0.getRowCount());
      assertTrue(resultMatrixCSV0.getEnumerateColNames());
      assertFalse(resultMatrixCSV0.getPrintColNames());
      assertEquals(40, resultMatrixCSV0.getRowNameWidth());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=4.116524264833396
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixLatex0);
      resultMatrixLatex0.toArray();
      resultMatrixLatex0.listOptions();
      resultMatrixPlainText1.setShowAverage(false);
      String[][] stringArray0 = resultMatrixPlainText0.toArray();
      assertEquals(1, resultMatrixPlainText0.getVisibleColCount());
      assertEquals(3, stringArray0.length);
      
      String[] stringArray1 = new String[3];
      stringArray1[0] = ")";
      stringArray1[1] = "(";
      stringArray1[2] = "*";
      ResultMatrixPlainText.main(stringArray1);
      resultMatrixLatex0.addHeader("\footnotesize ", "Whether to output column names or just numbers representing them.");
      resultMatrixPlainText1.getOptions();
      resultMatrixPlainText0.getShowAverage();
      resultMatrixPlainText1.setRemoveFilterName(false);
      resultMatrixLatex0.setCountWidth(1617);
      resultMatrixLatex0.doubleToString(1, 3184);
      resultMatrixLatex0.getDefaultEnumerateColNames();
      resultMatrixPlainText0.getCountWidth();
      resultMatrixPlainText0.getDefaultStdDevWidth();
      resultMatrixLatex0.getDisplayName();
      resultMatrixPlainText0.getDefaultPrintRowNames();
      resultMatrixLatex0.getSignificance(3184, 50);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixPlainText0);
      resultMatrixHTML0.getDefaultRowNameWidth();
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(0, resultMatrixHTML0.getColNameWidth());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertFalse(resultMatrixHTML0.getEnumerateRowNames());
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=4.060315381211616
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Z~r@)z(1fwDDAWe<fh";
      ResultMatrixLatex.main(stringArray0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixGnuPlot0);
      resultMatrixGnuPlot1.padString(" ", 0);
      resultMatrixGnuPlot1.getDefaultShowStdDev();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot1);
      String[] stringArray1 = resultMatrixSignificance0.getOptions();
      assertEquals(18, stringArray1.length);
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setShowStdDev(false);
      resultMatrixPlainText0.toStringKey();
      resultMatrixPlainText0.getMeanPrec();
      resultMatrixSignificance0.getDefaultEnumerateColNames();
      resultMatrixPlainText0.getDefaultStdDevWidth();
      resultMatrixGnuPlot1.padString(" ", 1131, true);
      assertEquals(2, resultMatrixGnuPlot1.getMeanPrec());
      
      String string0 = resultMatrixPlainText0.toStringMatrix();
      assertEquals("Dataset                   (1) col0 \n-----------------------------------\nrow0                       (0)    |\n-----------------------------------\n(v/ /*)                           |\n", string0);
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=4.225364148437818
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixLatex0);
      resultMatrixLatex0.toArray();
      resultMatrixLatex0.listOptions();
      resultMatrixPlainText1.setShowAverage(false);
      resultMatrixPlainText0.toArray();
      String[] stringArray0 = new String[3];
      stringArray0[0] = ")";
      stringArray0[1] = "(";
      stringArray0[2] = "*";
      ResultMatrixPlainText.main(stringArray0);
      resultMatrixLatex0.addHeader("\footnotesize ", "Whether to output column names or just numbers representing them.");
      String[] stringArray1 = resultMatrixPlainText1.getOptions();
      resultMatrixPlainText1.setOptions(stringArray1);
      resultMatrixPlainText1.toStringKey();
      resultMatrixLatex0.clear();
      resultMatrixPlainText0.removeFilterName("]_pu~");
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixPlainText0);
      resultMatrixLatex1.getDefaultShowAverage();
      resultMatrixLatex0.getDisplayCol(418);
      resultMatrixLatex0.addHeader("v", "(");
      ResultMatrixSignificance.main(stringArray0);
      assertFalse(stringArray0.equals((Object)stringArray1));
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.975227293135089
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 0);
      resultMatrixLatex0.getDefaultEnumerateColNames();
      resultMatrixLatex0.m_EnumerateRowNames = false;
      String[] stringArray0 = new String[4];
      stringArray0[0] = " ";
      stringArray0[1] = "$\bullet$";
      stringArray0[2] = " ";
      stringArray0[3] = "$circ$";
      ResultMatrixLatex.main(stringArray0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      String[] stringArray1 = new String[3];
      stringArray1[0] = "$\bullet$";
      stringArray1[1] = "./|gkOw#%(";
      stringArray1[2] = "(";
      resultMatrixPlainText0.getShowAverage();
      resultMatrixPlainText0.setRemoveFilterName(false);
      resultMatrixLatex0.setCountWidth(0);
      String string0 = resultMatrixLatex0.doubleToString((-38.43457), 0);
      assertEquals("-38.", string0);
      
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      resultMatrixLatex1.getDefaultEnumerateColNames();
      int int0 = resultMatrixPlainText0.getCountWidth();
      assertEquals(0, int0);
      
      resultMatrixPlainText0.getDefaultStdDevWidth();
      resultMatrixLatex0.getDisplayName();
      resultMatrixPlainText0.getDefaultPrintRowNames();
      assertFalse(resultMatrixPlainText0.getRemoveFilterName());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertFalse(resultMatrixPlainText0.getEnumerateRowNames());
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      assertEquals(0, resultMatrixPlainText0.getDefaultColNameWidth());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=3.2886062789553234
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[] intArray0 = new int[2];
      intArray0[0] = 0;
      intArray0[1] = 1;
      int[][] intArray1 = new int[9][9];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      intArray1[4] = intArray0;
      intArray1[5] = intArray0;
      intArray1[6] = intArray0;
      intArray1[7] = intArray0;
      intArray1[8] = intArray0;
      resultMatrixCSV0.m_Significance = intArray1;
      // Undeclared exception!
      try { 
        resultMatrixCSV0.padString((String) null, 10, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=3.7772322196480217
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      boolean[] booleanArray0 = new boolean[1];
      booleanArray0[0] = true;
      resultMatrixSignificance0.m_RowHidden = booleanArray0;
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixSignificance0);
      resultMatrixSignificance1.clearRanking();
      resultMatrixSignificance1.toString();
      resultMatrixSignificance1.m_SignificanceWidth = 97;
      resultMatrixSignificance1.setShowAverage(true);
      resultMatrixSignificance1.getColName(0);
      // Undeclared exception!
      try { 
        resultMatrixSignificance1.padString((String) null, 0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.8079706261051394
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.toString();
      resultMatrixSignificance0.printRowNamesTipText();
      resultMatrixSignificance0.padString("", (-4500));
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(1, 2);
      int int0 = 10;
      resultMatrixPlainText0.m_RowNameWidth = 10;
      resultMatrixPlainText0.toStringKey();
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.setSize(0, (-4500));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=4.136368850919554
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDisplayName();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "v";
      stringArray0[1] = "v";
      stringArray0[2] = " ";
      stringArray0[3] = "CSV";
      ResultMatrixSignificance.main(stringArray0);
      resultMatrixCSV0.getOptions();
      resultMatrixCSV0.setRowName(120, " ");
      resultMatrixCSV0.setRowName(120, "v");
      resultMatrixCSV0.toStringMatrix();
      resultMatrixCSV0.isRowName(0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      resultMatrixLatex0.getDefaultPrintColNames();
      resultMatrixCSV0.printRowNamesTipText();
      resultMatrixCSV0.globalInfo();
      int[][] intArray0 = new int[9][9];
      int[] intArray1 = new int[3];
      intArray1[0] = 0;
      intArray1[1] = 2;
      intArray1[2] = 0;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[5];
      intArray2[0] = 1;
      intArray2[1] = 2;
      intArray2[2] = 2;
      intArray2[3] = 2;
      intArray2[4] = 0;
      int[] intArray3 = new int[2];
      intArray3[0] = 0;
      intArray3[1] = 1;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[3];
      intArray4[0] = 1;
      intArray4[1] = 0;
      intArray4[2] = 1;
      intArray0[3] = intArray4;
      int[] intArray5 = new int[1];
      intArray5[0] = 1;
      intArray0[4] = intArray5;
      int[] intArray6 = new int[1];
      intArray6[0] = 0;
      intArray0[5] = intArray6;
      int[] intArray7 = new int[2];
      intArray7[0] = 5667;
      intArray7[1] = 10;
      intArray0[6] = intArray7;
      int[] intArray8 = new int[0];
      intArray0[7] = intArray8;
      int[] intArray9 = new int[7];
      intArray9[0] = 10;
      intArray9[1] = 120;
      intArray9[2] = (-2018);
      intArray9[3] = 2;
      intArray9[4] = 1;
      intArray9[5] = 0;
      intArray9[6] = 2;
      intArray0[8] = intArray9;
      resultMatrixLatex0.setRanking(intArray0);
      int[][] intArray10 = new int[0][7];
      resultMatrixLatex0.m_Significance = intArray10;
      resultMatrixLatex0.m_Significance = intArray10;
      // Undeclared exception!
      try { 
        resultMatrixLatex0.getHeader("q<");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.344441234962104
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.m_ShowStdDev = true;
      int[] intArray0 = new int[6];
      resultMatrixGnuPlot0.setShowStdDev(false);
      intArray0[0] = 0;
      double[][] doubleArray0 = new double[8][2];
      double[] doubleArray1 = new double[6];
      doubleArray1[0] = (double) 0;
      doubleArray1[1] = (double) 632;
      doubleArray1[2] = (double) 0;
      doubleArray1[3] = (double) 2;
      doubleArray1[4] = (double) 0;
      doubleArray1[5] = (double) 632;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[5];
      doubleArray2[0] = (double) 0;
      doubleArray2[1] = (double) 1;
      doubleArray2[2] = (double) 0;
      doubleArray2[3] = (double) 1;
      doubleArray2[4] = (double) 0;
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[2];
      doubleArray3[0] = (double) 2;
      doubleArray3[1] = (double) 632;
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[8];
      doubleArray4[0] = (double) 0;
      doubleArray4[1] = (double) 0;
      doubleArray4[2] = (double) 1;
      doubleArray4[3] = (double) 1;
      doubleArray4[4] = (double) 2;
      doubleArray4[5] = (double) 2;
      doubleArray4[6] = (double) 0;
      doubleArray4[7] = (double) 0;
      doubleArray0[3] = doubleArray4;
      double[] doubleArray5 = new double[9];
      doubleArray5[0] = (double) 0;
      doubleArray5[1] = (double) 1;
      doubleArray5[2] = (double) 0;
      doubleArray5[3] = (double) 0;
      doubleArray5[4] = (double) 1;
      doubleArray5[5] = (double) 0;
      doubleArray5[6] = (double) 632;
      doubleArray5[7] = (double) 632;
      doubleArray5[8] = (double) 2;
      doubleArray0[4] = doubleArray5;
      double[] doubleArray6 = new double[9];
      doubleArray6[0] = (double) 0;
      doubleArray6[1] = (double) 0;
      doubleArray6[3] = (double) 0;
      doubleArray6[4] = (double) 1;
      doubleArray6[5] = (double) 1;
      doubleArray6[6] = (double) 1;
      doubleArray6[7] = (double) 2;
      doubleArray6[8] = (double) 2;
      doubleArray0[5] = doubleArray6;
      double[] doubleArray7 = new double[2];
      doubleArray7[0] = (double) 2;
      doubleArray7[1] = (double) 0;
      doubleArray0[6] = doubleArray7;
      double[] doubleArray8 = new double[3];
      doubleArray8[0] = 0.0;
      doubleArray8[1] = (double) 0;
      doubleArray8[2] = (double) 0;
      doubleArray0[7] = doubleArray8;
      resultMatrixGnuPlot0.m_Mean = doubleArray0;
      intArray0[1] = 632;
      intArray0[2] = 1;
      intArray0[3] = 0;
      intArray0[4] = 1;
      intArray0[5] = 2;
      resultMatrixGnuPlot0.m_RowOrder = intArray0;
      resultMatrixGnuPlot0.setMeanPrec(0);
      resultMatrixGnuPlot0.m_SignificanceWidth = 415;
      resultMatrixGnuPlot0.setRowOrder(intArray0);
      resultMatrixGnuPlot0.getPrintRowNames();
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.setSize((-1766), 2);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=3.786649512624406
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      resultMatrixGnuPlot0.clearSummary();
      int[] intArray0 = new int[5];
      intArray0[0] = 2;
      resultMatrixGnuPlot0.toArray();
      intArray0[1] = 0;
      intArray0[2] = 1;
      intArray0[3] = 2;
      resultMatrixGnuPlot0.clear();
      intArray0[4] = 0;
      resultMatrixGnuPlot0.setRowOrder(intArray0);
      resultMatrixSignificance0.getDefaultShowStdDev();
      resultMatrixSignificance0.m_RowNameWidth = 180;
      resultMatrixSignificance0.setRowOrder((int[]) null);
      resultMatrixGnuPlot0.setSignificanceWidth(180);
      resultMatrixSignificance0.getVisibleRowCount();
      resultMatrixGnuPlot0.setStdDevWidth(1);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      resultMatrixLatex0.setEnumerateColNames(false);
      resultMatrixLatex0.getDefaultEnumerateColNames();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(2593, 0);
      resultMatrixPlainText0.getDefaultStdDevWidth();
      resultMatrixLatex0.getDisplayName();
      resultMatrixPlainText0.getDefaultPrintRowNames();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      resultMatrixLatex1.getSignificance((-4953), 0);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(2, 2592);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.7981115463653143
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      int[] intArray0 = new int[9];
      intArray0[0] = 1;
      intArray0[1] = 0;
      intArray0[2] = 2;
      intArray0[3] = 1;
      intArray0[4] = 0;
      intArray0[5] = 1;
      intArray0[6] = 1;
      intArray0[7] = (-1898);
      intArray0[8] = 0;
      resultMatrixPlainText0.m_ColOrder = intArray0;
      resultMatrixPlainText0.LOSS_STRING = "eX>Gm?cj{:=[%qAT&Q";
      assertEquals(1, resultMatrixPlainText0.getVisibleColCount());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(0, resultMatrixPlainText0.getColNameWidth());
      
      String string0 = resultMatrixPlainText0.toStringMatrix();
      assertEquals("Dataset                   null         \n---------------------------------------\nrow0                       (0)   0.00 |\n---------------------------------------\n(v/ /eX>Gm?cj{:=[%qAT&Q)              |\n", string0);
      
      resultMatrixPlainText0.getRowCount();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.globalInfo();
      assertFalse(resultMatrixHTML0.getShowAverage());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.5126054128694313
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixGnuPlot0);
      resultMatrixGnuPlot1.padString(" ", 0);
      resultMatrixGnuPlot1.getDefaultShowStdDev();
      resultMatrixGnuPlot0.isSignificance(2);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixGnuPlot0.globalInfo();
      resultMatrixLatex0.assign(resultMatrixGnuPlot1);
      resultMatrixLatex0.globalInfo();
      assertEquals(50, resultMatrixLatex0.getRowNameWidth());
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot1);
      resultMatrixCSV0.stdDevPrecTipText();
      resultMatrixCSV0.getAverage(0);
      resultMatrixGnuPlot0.getMeanWidth();
      assertFalse(resultMatrixGnuPlot0.getDefaultRemoveFilterName());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.6889638668880638
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 0);
      assertEquals(0, resultMatrixGnuPlot0.getRowCount());
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      String[] stringArray0 = new String[3];
      int[] intArray0 = new int[6];
      intArray0[0] = 0;
      intArray0[1] = 1;
      intArray0[2] = 0;
      intArray0[3] = 1;
      intArray0[4] = 2;
      intArray0[5] = 2;
      resultMatrixGnuPlot0.m_ColOrder = intArray0;
      stringArray0[0] = "";
      Vector<String> vector0 = new Vector<String>();
      resultMatrixGnuPlot0.toStringKey();
      vector0.add("*");
      resultMatrixGnuPlot0.m_HeaderKeys = vector0;
      vector0.add("");
      resultMatrixCSV0.LEFT_PARENTHESES = "";
      resultMatrixCSV0.getRowName((-657));
      stringArray0[1] = "";
      stringArray0[2] = "*";
      resultMatrixGnuPlot0.clearHeader();
      vector0.add("");
      resultMatrixCSV0.setRowNameWidth(26);
      resultMatrixGnuPlot0.removeFilterName(")/{#q)P.!b|1f&^");
      resultMatrixCSV0.m_RowNames = stringArray0;
      resultMatrixCSV0.toStringRanking();
      resultMatrixCSV0.printColNamesTipText();
      resultMatrixCSV0.stdDevPrecTipText();
      resultMatrixCSV0.stdDevPrecTipText();
      resultMatrixCSV0.getAverage(0);
      assertEquals(26, resultMatrixCSV0.getRowNameWidth());
      
      int int0 = resultMatrixGnuPlot0.getMeanWidth();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=3.4644069157650135
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2, 4);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      Vector<String> vector0 = new Vector<String>();
      resultMatrixGnuPlot0.toStringKey();
      resultMatrixCSV1.LOSS_STRING = "*";
      vector0.add("c*U4Y6f");
      vector0.ensureCapacity(2893);
      vector0.add((String) null);
      resultMatrixCSV1.getRowName(1618);
      int[] intArray0 = new int[8];
      intArray0[0] = 0;
      intArray0[2] = 2;
      intArray0[3] = 2893;
      intArray0[4] = 2;
      intArray0[5] = 2;
      intArray0[6] = 259;
      intArray0[7] = 4;
      resultMatrixCSV0.m_ColOrder = intArray0;
      resultMatrixGnuPlot0.clearHeader();
      vector0.add("Key:\n1 col0\n2 col1\n");
      resultMatrixCSV0.setRowNameWidth(1);
      ResultMatrixCSV resultMatrixCSV2 = new ResultMatrixCSV(0, 26);
      ResultMatrixCSV resultMatrixCSV3 = new ResultMatrixCSV(resultMatrixCSV2);
      resultMatrixCSV3.toStringRanking();
      resultMatrixCSV0.printColNamesTipText();
      resultMatrixCSV0.stdDevPrecTipText();
      assertEquals(1, resultMatrixCSV0.getRowNameWidth());
      
      resultMatrixGnuPlot0.getMeanWidth();
      resultMatrixCSV1.getDefaultEnumerateRowNames();
      assertEquals(2, resultMatrixCSV1.getMeanPrec());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=4.021188229469785
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.m_SignificanceWidth = 687;
      resultMatrixSignificance0.setPrintRowNames(false);
      resultMatrixSignificance0.getColName(0);
      resultMatrixSignificance0.padString("(1)", 32, true);
      resultMatrixSignificance0.setPrintRowNames(false);
      resultMatrixSignificance0.setSignificanceWidth(606);
      resultMatrixSignificance0.countWidthTipText();
      resultMatrixSignificance0.setCount(606, 0);
      String[] stringArray0 = new String[3];
      stringArray0[0] = " ";
      stringArray0[1] = ")";
      resultMatrixSignificance0.clearSummary();
      stringArray0[2] = "*";
      ResultMatrixLatex.main(stringArray0);
      resultMatrixSignificance0.removeFilterNameTipText();
      resultMatrixSignificance0.getDefaultEnumerateColNames();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.toStringKey();
      resultMatrixSignificance0.getCount((-717));
      assertTrue(resultMatrixSignificance0.getEnumerateRowNames());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.282601941581496
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDefaultSignificanceWidth();
      resultMatrixCSV0.m_CountWidth = 0;
      resultMatrixCSV0.getRevision();
      resultMatrixCSV0.setCountWidth((-1));
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      String string0 = resultMatrixHTML0.toStringKey();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td colspan=\"2\"><b>Key</b></td></tr>\n   <tr><td><b>(1)</b></td><td>col0</td></tr>\n</table>\n", string0);
      
      resultMatrixHTML0.getAverage((-717));
      assertEquals(25, resultMatrixHTML0.getRowNameWidth());
      assertTrue(resultMatrixHTML0.getPrintRowNames());
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertTrue(resultMatrixHTML0.getEnumerateColNames());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      
      resultMatrixCSV0.getDisplayName();
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      assertFalse(resultMatrixCSV0.getRemoveFilterName());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=3.4234608049578097
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDefaultSignificanceWidth();
      resultMatrixCSV0.getRevision();
      resultMatrixCSV0.setCountWidth(2);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixSignificance0);
      resultMatrixHTML0.toStringKey();
      resultMatrixHTML0.getAverage(35);
      resultMatrixCSV0.getDisplayName();
      assertEquals(2, resultMatrixCSV0.getCountWidth());
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.clear();
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=4.136171412922413
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 0);
      resultMatrixLatex0.getDefaultEnumerateColNames();
      resultMatrixLatex0.m_EnumerateRowNames = false;
      String[] stringArray0 = new String[4];
      stringArray0[0] = " ";
      stringArray0[2] = " ";
      ResultMatrixLatex.main(stringArray0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      String[] stringArray1 = new String[3];
      stringArray1[0] = "$\bullet$";
      stringArray1[1] = "./|gkOw#%(";
      stringArray1[2] = "(";
      resultMatrixPlainText0.setOptions(stringArray1);
      resultMatrixPlainText0.TIE_STRING = "";
      resultMatrixPlainText0.toStringKey();
      resultMatrixLatex0.clear();
      resultMatrixLatex0.getDefaultShowAverage();
      resultMatrixLatex0.getDisplayCol(0);
      resultMatrixLatex0.addHeader("(", "}\"($:;.B7{RvXf");
      ResultMatrixSignificance.main(stringArray0);
      assertFalse(stringArray0.equals((Object)stringArray1));
  }

  /**
  //Test case number: 44
  /*Coverage entropy=3.396689616480482
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.m_EnumerateRowNames = false;
      resultMatrixCSV0.countWidthTipText();
      resultMatrixCSV0.m_ShowAverage = false;
      resultMatrixCSV0.m_RemoveFilterName = false;
      resultMatrixCSV0.setSignificanceWidth(0);
      resultMatrixCSV0.setColName(0, ")");
      resultMatrixCSV0.toStringRanking();
      resultMatrixCSV0.getColCount();
      resultMatrixCSV0.m_ColNameWidth = 1;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 2);
      resultMatrixSignificance0.toStringSummary();
      resultMatrixSignificance0.setSignificanceWidth((-1931));
      resultMatrixSignificance0.getDisplayName();
      resultMatrixSignificance0.getDefaultShowStdDev();
      resultMatrixSignificance0.getSignificanceWidth();
      resultMatrixSignificance0.toStringSummary();
      // Undeclared exception!
      try { 
        resultMatrixCSV0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=3.4935839402298634
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getColNameWidth();
      resultMatrixHTML0.getDisplayName();
      resultMatrixHTML0.toStringRanking();
      resultMatrixHTML0.setSignificanceWidth(0);
      resultMatrixHTML0.trimString("-ranking data not set-", (-1));
      resultMatrixHTML0.m_ColNameWidth = 0;
      resultMatrixHTML0.setRowName(160, "-ranking data not set-");
      resultMatrixHTML0.setCount(0, 0);
      resultMatrixHTML0.getDefaultEnumerateColNames();
      resultMatrixHTML0.toStringSummary();
      resultMatrixHTML0.getEnumerateRowNames();
      ResultMatrixLatex resultMatrixLatex0 = null;
      try {
        resultMatrixLatex0 = new ResultMatrixLatex(0, (-1148));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=4.002085478345607
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.m_SignificanceWidth = 687;
      resultMatrixSignificance0.setPrintRowNames(true);
      resultMatrixSignificance0.getColName(0);
      resultMatrixSignificance0.getRevision();
      assertFalse(resultMatrixSignificance0.getEnumerateRowNames());
      
      resultMatrixSignificance0.setPrintRowNames(false);
      resultMatrixSignificance0.countWidthTipText();
      resultMatrixSignificance0.setCount(606, 0);
      String[] stringArray0 = new String[3];
      stringArray0[0] = " ";
      stringArray0[1] = ")";
      stringArray0[2] = "*";
      ResultMatrixLatex.main(stringArray0);
      resultMatrixSignificance0.removeFilterNameTipText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixSignificance0);
      resultMatrixCSV0.getDefaultPrintColNames();
      assertTrue(resultMatrixSignificance0.getDefaultEnumerateColNames());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=3.1084644497821365
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[7];
      intArray0[0] = 1;
      intArray0[1] = 2;
      intArray0[2] = 1;
      intArray0[3] = 1;
      intArray0[4] = 0;
      intArray0[5] = 2;
      intArray0[6] = (-569);
      resultMatrixGnuPlot0.m_RankingLosses = intArray0;
      resultMatrixGnuPlot0.clearSummary();
      int int0 = resultMatrixGnuPlot0.getDefaultMeanPrec();
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
      assertEquals(2, int0);
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=3.5338121880117566
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setPrintRowNames(false);
      resultMatrixHTML0.getColName((-1050));
      resultMatrixHTML0.removeFilterName("\tThe maximum width for the row names (0 = optimal).\n\t(default: ");
      resultMatrixHTML0.isRowName(2326);
      assertTrue(resultMatrixHTML0.getEnumerateRowNames());
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      int[] intArray0 = new int[5];
      intArray0[0] = 1;
      intArray0[1] = (-1050);
      intArray0[2] = 2;
      intArray0[3] = 0;
      intArray0[4] = 2326;
      resultMatrixLatex0.m_ColOrder = intArray0;
      resultMatrixLatex0.m_PrintColNames = false;
      resultMatrixLatex0.clear();
      boolean boolean0 = resultMatrixLatex0.getDefaultShowAverage();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=3.7254076141590984
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      resultMatrixGnuPlot0.clearSummary();
      resultMatrixGnuPlot0.setPrintRowNames(false);
      int[] intArray0 = new int[5];
      intArray0[0] = 2;
      resultMatrixGnuPlot0.toArray();
      intArray0[1] = 0;
      intArray0[2] = 1;
      intArray0[3] = 2;
      intArray0[4] = 0;
      resultMatrixGnuPlot0.setRowOrder(intArray0);
      resultMatrixSignificance0.getDefaultShowStdDev();
      resultMatrixSignificance0.m_RowNameWidth = 180;
      resultMatrixSignificance0.setRowOrder((int[]) null);
      resultMatrixSignificance0.getVisibleRowCount();
      resultMatrixGnuPlot0.setStdDevWidth(1);
      resultMatrixSignificance0.getDefaultPrintColNames();
      resultMatrixSignificance0.setRemoveFilterName(false);
      resultMatrixSignificance0.setShowAverage(false);
      resultMatrixSignificance0.toStringSummary();
      resultMatrixGnuPlot0.clearHeader();
      resultMatrixGnuPlot0.getDefaultRowNameWidth();
      assertEquals(1, resultMatrixGnuPlot0.getStdDevWidth());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=3.144073801240875
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getDefaultColNameWidth();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      int[] intArray0 = new int[7];
      intArray0[0] = 2;
      intArray0[1] = 0;
      intArray0[2] = 50;
      intArray0[3] = 2;
      intArray0[4] = 2;
      intArray0[5] = 26;
      intArray0[6] = 2;
      resultMatrixGnuPlot0.m_RankingLosses = intArray0;
      String string0 = resultMatrixCSV0.getColName(0);
      assertEquals("col0", string0);
      assertNotNull(string0);
      
      resultMatrixCSV0.getDefaultPrintColNames();
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertFalse(resultMatrixCSV0.getEnumerateRowNames());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertEquals(1, resultMatrixCSV0.getRowCount());
      assertEquals(50, resultMatrixCSV0.getRowNameWidth());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=3.725397341206755
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      resultMatrixGnuPlot0.clearSummary();
      resultMatrixGnuPlot0.setPrintRowNames(false);
      int[] intArray0 = new int[5];
      intArray0[0] = 2;
      resultMatrixGnuPlot0.toArray();
      intArray0[1] = 0;
      intArray0[2] = 1;
      intArray0[3] = 2;
      intArray0[4] = 0;
      resultMatrixGnuPlot0.setRowOrder(intArray0);
      resultMatrixSignificance0.getDefaultShowStdDev();
      resultMatrixSignificance0.m_RowNameWidth = 180;
      resultMatrixSignificance0.setRowOrder((int[]) null);
      int[][] intArray1 = new int[8][6];
      intArray1[0] = null;
      intArray1[1] = null;
      intArray1[2] = null;
      intArray1[3] = intArray0;
      intArray1[4] = intArray0;
      intArray1[5] = intArray0;
      intArray1[6] = intArray0;
      intArray1[7] = null;
      resultMatrixSignificance0.m_Significance = intArray1;
      resultMatrixSignificance0.getVisibleRowCount();
      resultMatrixGnuPlot0.setStdDevWidth(1);
      resultMatrixSignificance0.getDefaultPrintColNames();
      resultMatrixSignificance0.setRemoveFilterName(false);
      resultMatrixSignificance0.setShowAverage(false);
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.toStringSummary();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=3.683807521278588
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      resultMatrixGnuPlot0.clearSummary();
      int[] intArray0 = new int[5];
      intArray0[0] = 2;
      resultMatrixGnuPlot0.toArray();
      intArray0[1] = 0;
      intArray0[2] = 1;
      intArray0[3] = 2;
      resultMatrixGnuPlot0.clear();
      intArray0[4] = 0;
      resultMatrixGnuPlot0.setRowOrder(intArray0);
      resultMatrixSignificance0.getDefaultShowStdDev();
      resultMatrixSignificance0.m_RowNameWidth = 180;
      resultMatrixSignificance0.setRowOrder((int[]) null);
      resultMatrixGnuPlot0.setSignificanceWidth(180);
      resultMatrixSignificance0.getVisibleRowCount();
      resultMatrixGnuPlot0.setStdDevWidth(1);
      resultMatrixGnuPlot0.m_PrintRowNames = false;
      resultMatrixSignificance0.LEFT_PARENTHESES = "Jqgu?>id#O2.[`9";
      resultMatrixSignificance0.getDefaultPrintColNames();
      resultMatrixSignificance0.setShowAverage(false);
      resultMatrixSignificance0.toStringSummary();
      resultMatrixGnuPlot0.clearHeader();
      resultMatrixGnuPlot0.getDefaultRowNameWidth();
      assertEquals(1, resultMatrixGnuPlot0.getStdDevWidth());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=3.990454085326325
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      String[] stringArray0 = new String[0];
      ResultMatrixSignificance.main(stringArray0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 2112);
      resultMatrixSignificance0.m_ShowStdDev = false;
      resultMatrixSignificance0.getColName(1462);
      assertEquals(2112, resultMatrixSignificance0.getRowCount());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=3.43218299038007
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(492, 0);
      resultMatrixSignificance0.setColHidden(3923, true);
      assertFalse(resultMatrixSignificance0.getShowAverage());
      assertEquals(0, resultMatrixSignificance0.getRowCount());
      assertEquals(0, resultMatrixSignificance0.getDefaultCountWidth());
      assertEquals(0, resultMatrixSignificance0.getDefaultStdDevWidth());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertEquals(492, resultMatrixSignificance0.getColCount());
      assertFalse(resultMatrixSignificance0.getRemoveFilterName());
  }
}
