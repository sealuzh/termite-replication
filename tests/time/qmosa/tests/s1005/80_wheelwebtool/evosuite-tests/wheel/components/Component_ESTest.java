/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 17:46:34 GMT 2019
 */

package wheel.components;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.CharBuffer;
import java.util.Calendar;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.TimeZone;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.util.MockCalendar;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.evosuite.runtime.mock.java.util.MockGregorianCalendar;
import org.junit.runner.RunWith;
import org.xmlpull.mxp1_serializer.MXSerializer;
import org.xmlpull.v1.XmlPullParserFactory;
import org.xmlpull.v1.XmlSerializer;
import org.xmlpull.v1.wrapper.XmlPullWrapperFactory;
import org.xmlpull.v1.wrapper.XmlSerializerWrapper;
import org.xmlpull.v1.wrapper.classic.XmlSerializerDelegate;
import wheel.ErrorPage;
import wheel.components.ActionExpression;
import wheel.components.Any;
import wheel.components.Block;
import wheel.components.Checkbox;
import wheel.components.Component;
import wheel.components.DateInput;
import wheel.components.ElExpression;
import wheel.components.FileInput;
import wheel.components.Form;
import wheel.components.FormElement;
import wheel.components.Hidden;
import wheel.components.Image;
import wheel.components.Label;
import wheel.components.Link;
import wheel.components.NumberInput;
import wheel.components.Radio;
import wheel.components.Select;
import wheel.components.StandaloneComponent;
import wheel.components.Submit;
import wheel.components.Table;
import wheel.components.TableBlock;
import wheel.components.TableRow;
import wheel.components.Text;
import wheel.components.TextArea;
import wheel.components.TextInput;
import wheel.components.ValidationError;
import wheel.components.XmlEntityRef;
import wheel.util.DynamicSelectModel;
import wheel.util.StringSelectModel;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Component_ESTest extends Component_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.7397310094376675
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Text text0 = new Text(errorPage0, (Object) null);
      ErrorPage errorPage1 = new ErrorPage();
      String string0 = "";
      NumberInput numberInput0 = new NumberInput(errorPage1, "", "");
      // Undeclared exception!
      try { 
        numberInput0.pre();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      String string0 = "@!GUJ]LYlU>#wJ";
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("http://xmlpull.org/v1/doc/properties.html#serializer-indentation");
      // Undeclared exception!
      try { 
        xmlEntityRef0.tt();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.6496367174974482
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Component component0 = null;
      String string0 = "ouject";
      Radio radio0 = new Radio((Component) null, "ouject", "ouject");
      String string1 = "/";
      DateInput dateInput0 = new DateInput(radio0, "/", "/", "/");
      dateInput0.actionBinding("./gU=kOw#(");
      String[] stringArray0 = new String[15];
      // Undeclared exception!
      try { 
        radio0.legend((Object) "./gU=kOw#(");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.522826751321436
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Component component0 = null;
      String string0 = "ouje_ct";
      Radio radio0 = new Radio((Component) null, "ouje_ct", "ouje_ct");
      String string1 = "/";
      DateInput dateInput0 = new DateInput(radio0, "/", "/", "/");
      String string2 = "./gkOw#(";
      Component component1 = dateInput0.actionBinding("./gkOw#(");
      String[] stringArray0 = new String[23];
      stringArray0[0] = "/";
      // Undeclared exception!
      try { 
        component1.id("java.lang.String@0000000014");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No top level component found.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.9027294403169526
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Text text0 = new Text(errorPage0, (Object) null);
      errorPage0.big();
      ErrorPage errorPage1 = new ErrorPage();
      String string0 = "~@>a)1V*1J#H!";
      ActionExpression actionExpression0 = new ActionExpression("~@>a)1V*1J#H!");
      ActionExpression actionExpression1 = new ActionExpression("~@>a)1V*1J#H!");
      errorPage1.fieldset();
      // Undeclared exception!
      try { 
        text0.noscript();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.8597562766944122
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Text text0 = new Text(errorPage0, (Object) null);
      ErrorPage errorPage1 = new ErrorPage();
      String string0 = "~@>a)1V*1J*#H!";
      Component component0 = errorPage1.fieldset();
      // Undeclared exception!
      try { 
        component0.tfoot();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Tfoot component can be added only to a Table.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.05101731136056
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Component component0 = errorPage0.entity("Z(^QvQ[oJA8A*Y");
      ActionExpression actionExpression0 = new ActionExpression("label");
      Form form0 = new Form(component0, "xR$SxsnV\"0r-0", actionExpression0);
      Form form1 = form0.renderHint("Z(^QvQ[oJA8A*Y");
      Form form2 = form1.addFormValidationError("Q+dn@DK(>>tE|");
      Checkbox checkbox0 = new Checkbox(form0, "n8{RjK\"bK#1g20ZpO7w", "rvx%]DI?@O(;W%3-");
      FormElement formElement0 = checkbox0.validationRule("A|eM7");
      Form form3 = form0.addFormElement(formElement0);
      Form form4 = form3.renderHint("xR$SxsnV\"0r-0");
      Form form5 = form4.renderHint("n8{RjK\"bK#1g20ZpO7w");
      form2.addFormValidationRule((String) null, "Q+dn@DK(>>tE|");
      form5.numberInput("A|eM7");
      FormElement formElement1 = form0.passwordInput((String) null);
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertFalse(formElement1._isGeneratedId());
      assertEquals("Z(^QvQ[oJA8A*Y", component0.getComponentId());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.339907862060135
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Component component0 = errorPage0.entity("Z(^QvQ[oJA8A*Y");
      ActionExpression actionExpression0 = new ActionExpression("label");
      Form form0 = new Form(component0, "xR$SxsnV\"0r-0", actionExpression0);
      Form form1 = form0.renderHint("Z(^QvQ[oJA8A*Y");
      Form form2 = form1.addFormValidationError("Q+dn@DK(>>tE|");
      form0.iframe();
      Checkbox checkbox0 = new Checkbox(form0, "n8{RjK\"bK#1g20ZpO7w", "rvx%]DI?@O(;W%3-");
      FormElement formElement0 = checkbox0.validationRule("A|eM7");
      Form form3 = form0.addFormElement(formElement0);
      Form form4 = form3.renderHint("xR$SxsnV\"0r-0");
      form4.renderHint("n8{RjK\"bK#1g20ZpO7w");
      Form form5 = form2.addFormValidationRule((String) null, "Q+dn@DK(>>tE|");
      form5.param("n8{RjK\"bK#1g20ZpO7w", "Z(^QvQ[oJA8A*Y");
      form0.h4((Object) actionExpression0);
      form3.textarea("BkRqU-f&ULM:iX\"{z5[");
      // Undeclared exception!
      try { 
        form5.get("A|eM7");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not find component with id 'A|eM7'.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.757423980905269
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Form form0 = new Form("dnP");
      String string0 = "xT:g";
      Radio radio0 = new Radio(form0, "dnP", "xT:g");
      DateInput dateInput0 = new DateInput(radio0, "xT:g", "xT:g", "dnP");
      dateInput0.actionBinding("java.lang.String@0000000014");
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      ElExpression elExpression0 = new ElExpression("h2");
      String string1 = "java.lang.String@0000000013";
      Checkbox checkbox0 = new Checkbox(dateInput0, "java.lang.String@0000000013", "java.lang.String@0000000014");
      // Undeclared exception!
      try { 
        checkbox0.label((Object) dynamicSelectModel0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.5594415416798357
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      String string0 = "dnP";
      Form form0 = new Form("dnP");
      Radio radio0 = new Radio(form0, "dnP", "xT:g");
      DateInput dateInput0 = new DateInput(radio0, "xT:g", "xT:g", "dnP");
      // Undeclared exception!
      try { 
        form0.radio("dnP");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.4990104312963832
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      String string0 = "java.lang.String@0000000014";
      Form form0 = new Form("java.lang.String@0000000014");
      Form form1 = form0.addFormValidationRule("java.lang.String@0000000014", "java.lang.String@0000000014");
      String string1 = "java.lang.String@0000000011";
      ElExpression elExpression0 = new ElExpression("java.lang.String@0000000011");
      ElExpression elExpression1 = elExpression0.errorMessage("Wtlg*K].bM^Am91F");
      form1.findAll(elExpression1);
      form0.getEngine();
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("Wtlg*K].bM^Am91F");
      form1.getFormElements();
      // Undeclared exception!
      try { 
        xmlEntityRef0.var();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.8002064530043036
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("java.lng.StrinV@0000d00011");
      ElExpression elExpression0 = new ElExpression("EB)r3|Ju^}BJH,");
      elExpression0.errorMessage("dir");
      ActionExpression actionExpression0 = new ActionExpression("L}W^sHv@pb0Y0)5");
      ErrorPage errorPage0 = new ErrorPage();
      Component component0 = errorPage0.fieldset();
      assertEquals("Block_1", component0.getComponentId());
      
      ErrorPage errorPage1 = new ErrorPage();
      Form form0 = new Form("~@>a)1V*1J*#H!");
      assertEquals("~@>a)1V*1J*#H!", form0.getComponentId());
      
      Byte byte0 = new Byte((byte)0);
      errorPage0.dfn((Object) "L}W^sHv@pb0Y0)5");
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.691771101137313
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      String string0 = "<VK`+A#";
      byte byte0 = (byte) (-19);
      ErrorPage errorPage0 = new ErrorPage();
      errorPage0.kbd();
      // Undeclared exception!
      try { 
        errorPage0.getSubmittedForm();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Tried to access a form, but none was submitted.
         //
         verifyException("wheel.components.StandaloneComponent", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.8555743682222117
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Text text0 = new Text(errorPage0, (Object) null);
      StandaloneComponent standaloneComponent0 = text0.getPage();
      ActionExpression actionExpression0 = new ActionExpression("~@>a)1V*1J*#H!");
      Component component0 = standaloneComponent0.fieldset();
      Link link0 = new Link(component0, errorPage0);
      link0.defaultTagName();
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("hr");
      ActionExpression actionExpression1 = new ActionExpression("a");
      // Undeclared exception!
      try { 
        text0.b();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.3126328398468408
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Text text0 = new Text(errorPage0, (Object) null);
      ErrorPage errorPage1 = new ErrorPage();
      ActionExpression actionExpression0 = new ActionExpression("~@>a)1V*1J*#H!");
      actionExpression0.javascript("~@>a)1V*1J*#H!");
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("~@>a)1V*1J*#H!");
      // Undeclared exception!
      try { 
        text0.td();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Td component can be added only to a TableRow.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.370502500924008
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("<VK`+A#");
      Component component0 = xmlEntityRef0.addInternalRenderHint("<VK`+A#");
      String string0 = "./|gkOw#%(";
      String string1 = "java.lang.String@0000000013";
      Checkbox checkbox0 = new Checkbox(component0, "java.lang.String@0000000013", "<VK`+A#");
      // Undeclared exception!
      try { 
        checkbox0.dl();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.0339894236201754
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Component component0 = errorPage0.entity("Z(^QvQ[oJA8A*Y");
      // Undeclared exception!
      try { 
        component0.title("Z(^QvQ[oJA8A*Y");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.StandaloneComponent", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.6496367174974482
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Component component0 = null;
      String string0 = "ouject";
      Radio radio0 = new Radio((Component) null, "ouject", "ouject");
      String string1 = "/";
      DateInput dateInput0 = new DateInput(radio0, "/", "/", "/");
      dateInput0.actionBinding("./gU=kOw#(");
      String[] stringArray0 = new String[15];
      stringArray0[0] = "/";
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        radio0.b(object0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.240470048214312
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Text text0 = new Text(errorPage0, (Object) null);
      StandaloneComponent standaloneComponent0 = text0.getPage();
      ActionExpression actionExpression0 = new ActionExpression("~@>a)1V*1J*#H!");
      Form form0 = new Form(standaloneComponent0, "~@>a)1V*1J*#H!", actionExpression0);
      form0.defaultTagName();
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef(": $('#");
      form0.p();
      xmlEntityRef0._setParent(form0);
      Image image0 = new Image(standaloneComponent0, "form", "form");
      TableRow tableRow0 = new TableRow(standaloneComponent0);
      errorPage0.sup((Object) "form");
      Checkbox checkbox0 = new Checkbox(text0, "java.lang.String@0000000011", "java.lang.String@0000000011");
      FormElement formElement0 = checkbox0.value("~@>a)1V*1J*#H!");
      formElement0.hashCode();
      String string0 = "/";
      Table table0 = new Table(tableRow0, "/");
      Table table1 = table0.renderHint("</");
      Table table2 = table1.id("java.lang.String@0000000016");
      TableBlock tableBlock0 = table2.tfoot();
      tableBlock0.tr();
      Block block0 = new Block(formElement0);
      // Undeclared exception!
      try { 
        text0.caption();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Thead component can be added only to a Table.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      String string0 = ").s,8_C>(y";
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef(").s,8_C>(y");
      // Undeclared exception!
      try { 
        xmlEntityRef0.cite();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.7541441926845747
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Component component0 = errorPage0.entity("Z(^QvQ[oJA8A*Y");
      // Undeclared exception!
      try { 
        component0.button();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.960841804955975
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      String string0 = "noscript";
      ErrorPage errorPage0 = new ErrorPage();
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("dnWRP");
      XmlEntityRef xmlEntityRef1 = new XmlEntityRef("");
      ActionExpression actionExpression0 = new ActionExpression("");
      actionExpression0.event("noscript");
      // Undeclared exception!
      try { 
        xmlEntityRef1.q((Object) actionExpression0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.407494209446948
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      DateInput dateInput0 = new DateInput(errorPage0, "Z(^QvQ[oJA8A*Y", "Z(^QvQ[oJA8A*Y", "Z(^QvQ[oJA8A*Y");
      dateInput0.fieldBinding("");
      boolean boolean0 = true;
      dateInput0._getTopLevelComponent(true);
      errorPage0.hashCode();
      // Undeclared exception!
      try { 
        errorPage0.remove("Z(^QvQ[oJA8A*Y");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.3128868859883
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      String string0 = "";
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("");
      xmlEntityRef0.attribute("", "");
      // Undeclared exception!
      try { 
        xmlEntityRef0.textInput("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.1179251883779973
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      String string0 = "object";
      Radio radio0 = new Radio((Component) null, "object", "object");
      String string1 = "/";
      DateInput dateInput0 = new DateInput(radio0, "/", "/", "/");
      // Undeclared exception!
      try { 
        dateInput0.head();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.9844935290697798
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      String string0 = "<VK`+A#";
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("<VK`+A#");
      String string1 = null;
      XmlEntityRef xmlEntityRef1 = new XmlEntityRef((String) null);
      // Undeclared exception!
      try { 
        xmlEntityRef1.param((CharSequence) null, (CharSequence) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.95571359982777
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      String string0 = "noscript";
      ErrorPage errorPage0 = new ErrorPage();
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef(" (text value=");
      String string1 = ";Y";
      // Undeclared exception!
      try { 
        xmlEntityRef0.small((Object) ";Y");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.0141266108053313
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Form form0 = new Form("java.lang.String@0000000014");
      String[] stringArray0 = new String[0];
      form0._buildFromSerializedString(stringArray0);
      // Undeclared exception!
      try { 
        form0.dt();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.19953461806653
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      String string0 = "<VK`+A#";
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("<VK`+A#");
      xmlEntityRef0.addInternalRenderHint("<VK`+A#");
      byte byte0 = (byte) (-19);
      XmlEntityRef xmlEntityRef1 = new XmlEntityRef("<VK`+A#");
      // Undeclared exception!
      try { 
        xmlEntityRef1.button();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      String string0 = "http://xmlpull.org/v1/doc/properties.html#serializer-indentation";
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("http://xmlpull.org/v1/doc/properties.html#serializer-indentation");
      List<ActionExpression> list0 = new LinkedList<ActionExpression>();
      Boolean boolean0 = new Boolean("http://xmlpull.org/v1/doc/properties.html#serializer-indentation");
      // Undeclared exception!
      try { 
        xmlEntityRef0.a();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.961444577761223
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Component component0 = errorPage0.entity("Z(^QvQ[oJA8A*Y");
      String string0 = "label";
      ActionExpression actionExpression0 = new ActionExpression("label");
      Form form0 = new Form(component0, "xR$SxsnV\"0r-0", actionExpression0);
      Form form1 = form0.renderHint("Z(^QvQ[oJA8A*Y");
      form1.addFormValidationError("Q+dn@DK(>>tE|");
      Submit submit0 = new Submit(errorPage0, "+W$a%rO", "A|eM7");
      form0.h1();
      FormElement formElement0 = submit0.value("Z(^QvQ[oJA8A*Y");
      Form form2 = new Form("Z(^QvQ[oJA8A*Y");
      // Undeclared exception!
      try { 
        form2.addFormElement(formElement0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.8331196159417207
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      errorPage0.entity("\"U'^(^n0)OV");
      ErrorPage errorPage1 = new ErrorPage();
      errorPage1.img("A|eM7", "Va;GsB$k");
      Component component0 = errorPage0.h1();
      Image image0 = new Image(component0, (CharSequence) null, (CharSequence) null);
      // Undeclared exception!
      try { 
        image0.thead();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Thead component can be added only to a Table.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.7584659213760516
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Text text0 = new Text(errorPage0, (Object) null);
      ErrorPage errorPage1 = new ErrorPage();
      errorPage0.isPageRewinding();
      ActionExpression actionExpression0 = new ActionExpression("~@>a)1V*1J*#H!");
      actionExpression0.javascript("~@>a)1V*1J*#H!");
      errorPage0.strong();
      // Undeclared exception!
      try { 
        text0.dfn();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.9474691327293434
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      String string0 = "org.mvel.conversion.IntArrayCH$2";
      String string1 = "noscript";
      ErrorPage errorPage0 = new ErrorPage();
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("org.mvel.conversion.IntArrayCH$2");
      String string2 = ";Y";
      errorPage0.meta();
      errorPage0.getEngine();
      String string3 = "";
      // Undeclared exception!
      try { 
        xmlEntityRef0.dd();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.3597473990481395
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      String string0 = "java.lang.String@0000000014";
      Form form0 = new Form("java.lang.String@0000000014");
      Form form1 = form0.addFormValidationRule("java.lang.String@0000000014", "java.lang.String@0000000014");
      String string1 = "java.lang.String@0000000011";
      ElExpression elExpression0 = new ElExpression("java.lang.String@0000000011");
      String string2 = "Wtlg*K].bM^Am91F";
      ElExpression elExpression1 = elExpression0.errorMessage("Wtlg*K].bM^Am91F");
      form1.findAll(elExpression1);
      String string3 = "no content available to check for white spaces";
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("no content available to check for white spaces");
      // Undeclared exception!
      try { 
        xmlEntityRef0.form("java.lang.String@0000000011");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.19953461806653
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      String string0 = "<VK`+A#";
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("<VK`+A#");
      xmlEntityRef0.addInternalRenderHint("<VK`+A#");
      byte byte0 = (byte) (-19);
      XmlEntityRef xmlEntityRef1 = new XmlEntityRef("<VK`+A#");
      // Undeclared exception!
      try { 
        xmlEntityRef1.h6();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.689955661714993
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Text text0 = new Text(errorPage0, (Object) null);
      text0.getPage();
      String string0 = ".O-U";
      Checkbox checkbox0 = new Checkbox(errorPage0, ".O-U", "java.lang.String@0000000016");
      // Undeclared exception!
      try { 
        checkbox0.dl();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      String string0 = ").s,8_C>(y";
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef(").s,8_C>(y");
      // Undeclared exception!
      try { 
        xmlEntityRef0.end();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not end compoennt, already at root.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.3560944046864845
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String string0 = "";
      errorPage0.getEngine();
      String string1 = null;
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("");
      Table table0 = new Table(errorPage0, "");
      errorPage0.ul();
      Table table1 = table0.id((String) null);
      TableBlock tableBlock0 = table1.tfoot();
      DateInput dateInput0 = new DateInput(tableBlock0, "", (String) null, "");
      dateInput0.actionBinding("v-b]NnXFw`$^v=dHOA");
      Radio radio0 = new Radio(table1, "bdo", (String) null);
      // Undeclared exception!
      try { 
        radio0.dateFormat("bdo", (Object) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Failed to initialize SimpleDateFormat with pattern 'bdo'.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=3.043971407632169
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Component component0 = errorPage0.entity("Z(^QvQ[oJA8A*Y");
      ActionExpression actionExpression0 = new ActionExpression("label");
      Form form0 = new Form(component0, "xR$SxsnV\"0r-0", actionExpression0);
      Form form1 = form0.renderHint("Z(^QvQ[oJA8A*Y");
      Form form2 = form1.addFormValidationError("Q+dn@DK(>>tE|");
      Checkbox checkbox0 = new Checkbox(form0, "n8{RjK\"bK#1g20ZpO7w", "rvx%]DI?@O(;W%3-");
      FormElement formElement0 = checkbox0.validationRule("A|eM7");
      Form form3 = form0.addFormElement(formElement0);
      Form form4 = form3.renderHint("xR$SxsnV\"0r-0");
      form4.renderHint("n8{RjK\"bK#1g20ZpO7w");
      form2.addFormValidationRule((String) null, "Q+dn@DK(>>tE|");
      form0.h4((Object) actionExpression0);
      DynamicSelectModel dynamicSelectModel0 = formElement0.selectModel();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.enumeration("p4");
      Select select0 = null;
      try {
        select0 = new Select((Component) null, "BkRqU-f&ULM:iX\"{z5[", "[", dynamicSelectModel1, "[");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No top level component found.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.4241710186205307
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Radio radio0 = new Radio((Component) null, "object", "object");
      DateInput dateInput0 = new DateInput(radio0, "/", "/", "/");
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("h");
      // Undeclared exception!
      try { 
        xmlEntityRef0.find("_Es8[~");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No top level component found.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.612627200585351
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Component component0 = errorPage0.entity("Z(^QvQ[oJA8A*Y");
      // Undeclared exception!
      try { 
        component0.find("-UN");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not find component with id -UN on the page.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.1944064129383247
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      String string0 = ").s,8_C>(y";
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef(").s,8_C>(y");
      String string1 = "pfRa";
      Component component0 = xmlEntityRef0.addInternalRenderHint("pfRa");
      // Undeclared exception!
      try { 
        component0.abbr();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.757423980905269
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Form form0 = new Form("dnP");
      String string0 = "xT:g";
      Radio radio0 = new Radio(form0, "dnP", "xT:g");
      DateInput dateInput0 = new DateInput(radio0, "xT:g", "xT:g", "dnP");
      dateInput0.actionBinding("java.lang.String@0000000014");
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      ElExpression elExpression0 = new ElExpression("h2");
      String string1 = "java.lang.String@0000000013";
      Checkbox checkbox0 = new Checkbox(dateInput0, "java.lang.String@0000000013", "java.lang.String@0000000014");
      // Undeclared exception!
      try { 
        checkbox0.li((Object) form0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.9186300741193203
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Component component0 = errorPage0.entity("Z(^QvQ[oJA8A*Y");
      ActionExpression actionExpression0 = new ActionExpression("label");
      Form form0 = new Form(component0, "xR$SxsnV\"0r-0", actionExpression0);
      Form form1 = form0.renderHint("Z(^QvQ[oJA8A*Y");
      form0.addFormValidationRule("Q+dn@DK(>>tE|", "label");
      Block block0 = new Block(form1);
      block0.small();
      TableBlock tableBlock0 = new TableBlock(block0);
      Table table0 = new Table(form1, "xR$SxsnV\"0r-0");
      String string0 = "NEW org/mvel/util/FastList";
      // Undeclared exception!
      try { 
        actionExpression0.extractComponent();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.ActionExpression", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.9557135998277697
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      String string0 = " (text value=";
      String string1 = "noscript";
      ErrorPage errorPage0 = new ErrorPage();
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef(" (text value=");
      String string2 = ";Y";
      // Undeclared exception!
      try { 
        xmlEntityRef0.small();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      String string0 = "Col component can be added only to a TableBlock.";
      String string1 = "m";
      String string2 = "rO<'wPrGLn0N%.m";
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("rO<'wPrGLn0N%.m");
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(1016, 1016, (-2286), (-2286), (-2286), (-2286));
      // Undeclared exception!
      try { 
        xmlEntityRef0.big((Object) mockGregorianCalendar0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.807254857897129
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      String string0 = "dnP";
      Form form0 = new Form("dnP");
      Radio radio0 = new Radio(form0, "dnP", "xT:g");
      DateInput dateInput0 = new DateInput(radio0, "xT:g", "xT:g", "dnP");
      String string1 = "./|gkOw#%(";
      String string2 = "java.lang.String@0000000014";
      Component component0 = dateInput0.actionBinding("java.lang.String@0000000014");
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      ElExpression elExpression0 = new ElExpression("h2");
      // Undeclared exception!
      try { 
        component0.radioGroup("./|gkOw#%(", dynamicSelectModel0, elExpression0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.1660899068057584
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      String string0 = "ar";
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel1 = new DynamicSelectModel();
      dynamicSelectModel0.enumeration("ar");
      String string1 = ",to$dz+ 1*7-G{";
      String string2 = "java.lang.String@0000000011";
      dynamicSelectModel0.reset();
      Double double0 = new Double(0.0);
      String string3 = "|";
      ErrorPage errorPage0 = new ErrorPage();
      ActionExpression actionExpression0 = new ActionExpression("|");
      ActionExpression actionExpression1 = actionExpression0.submitForm(true);
      Object[] objectArray0 = new Object[2];
      Object object0 = new Object();
      objectArray0[0] = object0;
      objectArray0[1] = (Object) ",to$dz+ 1*7-G{";
      ActionExpression actionExpression2 = actionExpression1.parameters(objectArray0);
      ActionExpression actionExpression3 = actionExpression2.javascript("java.lang.String@0000000011");
      ActionExpression actionExpression4 = actionExpression3.event("|");
      errorPage0.actionBinding(actionExpression4);
      // Undeclared exception!
      try { 
        errorPage0._getTopLevelComponent(false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No top level component found.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.44157661660604
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      TableBlock tableBlock0 = new TableBlock(errorPage0);
      String string0 = "!G-$[mi9<67R";
      ElExpression elExpression0 = new ElExpression("!G-$[mi9<67R");
      // Undeclared exception!
      try { 
        tableBlock0.renderHint(elExpression0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not evaluate expression !G-$[mi9<67R in class wheel.ErrorPage
         //
         verifyException("wheel.components.ElExpression", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.8196179836121846
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Text text0 = new Text(errorPage0, (Object) null);
      StandaloneComponent standaloneComponent0 = text0.getPage();
      String string0 = "~@>a)1V*1J*#H!";
      ActionExpression actionExpression0 = new ActionExpression("~@>a)1V*1J*#H!");
      standaloneComponent0.fieldset();
      ElExpression elExpression0 = new ElExpression("failed to call clone() on reader ");
      Text text1 = null;
      try {
        text1 = new Text(text0, elExpression0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not evaluate expression failed to call clone() on reader  in class wheel.ErrorPage
         //
         verifyException("wheel.components.ElExpression", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      String string0 = "Col component can be added only to a TableBlock.";
      String string1 = "iframe";
      Form form0 = new Form("Col component can be added only to a TableBlock.");
      Form form1 = form0.addFormValidationRule("Col component can be added only to a TableBlock.", "Col component can be added only to a TableBlock.");
      String string2 = "ZGKE)K>kJ1Wb";
      // Undeclared exception!
      try { 
        form1.dfn((Object) "Col component can be added only to a TableBlock.");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.162409200836301
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      String string0 = "@!GUJ]LYlU>#wJ";
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("http://xmlpull.org/v1/doc/properties.html#serializer-indentation");
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try { 
        xmlEntityRef0.a((Object) "http://xmlpull.org/v1/doc/properties.html#serializer-indentation");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.9557135998277697
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      String string0 = "i";
      ErrorPage errorPage0 = new ErrorPage();
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("dnWRP");
      String string1 = "";
      String string2 = "";
      // Undeclared exception!
      try { 
        xmlEntityRef0.sup();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.0113645074166633
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      String string0 = "http://xmlpull.org/v1/doc/properties.html#serializer-indentation";
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("http://xmlpull.org/v1/doc/properties.html#serializer-indentation");
      XmlEntityRef xmlEntityRef1 = new XmlEntityRef("http://xmlpull.org/v1/doc/properties.html#serializer-indentation");
      // Undeclared exception!
      try { 
        xmlEntityRef1.h2((Object) "http://xmlpull.org/v1/doc/properties.html#serializer-indentation");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.763692537276884
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      dynamicSelectModel0.setComponent((Component) null);
      Double double0 = new Double((-1.0));
      ErrorPage errorPage0 = new ErrorPage();
      String string0 = "java.lang.String@0000000016";
      errorPage0.map("java.lang.String@0000000016");
      Table table0 = null;
      try {
        table0 = new Table((Component) null, "~!%yhIU ^#+");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No top level component found.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      String string0 = "@!UJ],YlU>#wJ";
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("@!UJ],YlU>#wJ");
      // Undeclared exception!
      try { 
        xmlEntityRef0.remove(">%`F?Vmp)y");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=3.224809777310377
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      errorPage0.getEngine();
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("");
      Table table0 = new Table(errorPage0, "");
      assertEquals("Table_1", table0.getComponentId());
      
      errorPage0.ul();
      Table table1 = table0.id((String) null);
      TableBlock tableBlock0 = table1.tfoot();
      Any any0 = tableBlock0.col();
      FileInput fileInput0 = new FileInput(any0, "", "");
      XmlEntityRef xmlEntityRef1 = new XmlEntityRef((String) null);
      errorPage0.nbsp();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.53537238052067
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Text text0 = new Text(errorPage0, (Object) null);
      text0.getPage();
      String string0 = "~@>a)1V*1J*#H!";
      ActionExpression actionExpression0 = new ActionExpression("~@>a)1V*1J*#H!");
      // Undeclared exception!
      try { 
        text0.link();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.5733489168904575
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      errorPage0.entity("Z(^QvQ[oJA8A*Y");
      Component component0 = errorPage0.img((String) null, (String) null);
      // Undeclared exception!
      try { 
        component0.img("7eH}JN<'>z+,PF", (String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=3.217126027418045
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String string0 = "";
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("");
      Table table0 = new Table(errorPage0, "");
      errorPage0.label();
      errorPage0.ul();
      Table table1 = table0.id((String) null);
      TableBlock tableBlock0 = table1.tfoot();
      Any any0 = tableBlock0.col();
      String string1 = "";
      FileInput fileInput0 = new FileInput(any0, "", "");
      XmlEntityRef xmlEntityRef1 = new XmlEntityRef("");
      // Undeclared exception!
      try { 
        fileInput0.abbr((Object) xmlEntityRef1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.1944064129383247
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("http://xmlpull.org/v1/doc/properties.html#serializer-indentation");
      xmlEntityRef0._getActions();
      Boolean boolean0 = new Boolean("http://xmlpull.org/v1/doc/properties.html#serializer-indentation");
      boolean boolean1 = new Boolean("http://xmlpull.org/v1/doc/properties.html#serializer-indentation");
      // Undeclared exception!
      try { 
        xmlEntityRef0.htmlText(boolean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.73077369710111
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Component component0 = errorPage0.entity("Z(^QvQ[oJA8A*Y");
      String string0 = "A\\|eM7";
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("A|eM7");
      xmlEntityRef0._getActions();
      Boolean boolean0 = new Boolean("Z(^QvQ[oJA8A*Y");
      String string1 = "";
      Boolean boolean1 = new Boolean("");
      // Undeclared exception!
      try { 
        component0.htmlText("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      String string0 = "8&znaF]g-c[7~\"";
      Form form0 = new Form("8&znaF]g-c[7~\"");
      // Undeclared exception!
      try { 
        form0.sub((Object) "8&znaF]g-c[7~\"");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.5349381642809825
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Text text0 = new Text(errorPage0, (Object) null);
      ElExpression elExpression0 = new ElExpression(".O-U");
      elExpression0.errorMessage("k}2L!R#9d]$F:M;ASEs");
      ErrorPage errorPage1 = new ErrorPage();
      // Undeclared exception!
      try { 
        text0.sub((Object) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("@!UJ],YlU>#wJ");
      String string0 = "no content available to check for white spaces";
      // Undeclared exception!
      try { 
        xmlEntityRef0.form("no content available to check for white spaces");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.6230638602885423
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Form form0 = new Form("@,yJ],lU>#w");
      Form form1 = form0.renderHint("@,yJ],lU>#w");
      // Undeclared exception!
      try { 
        form1.col();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Col component can be added only to a TableBlock.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.9557135998277697
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("java.lang.String@0000000012");
      Double double0 = new Double(0.0);
      // Undeclared exception!
      try { 
        xmlEntityRef0.sup((Object) double0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.6272990314087483
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Text text0 = new Text(errorPage0, (Object) null);
      XmlPullWrapperFactory xmlPullWrapperFactory0 = XmlPullWrapperFactory.newInstance();
      MXSerializer mXSerializer0 = new MXSerializer();
      XmlSerializerWrapper xmlSerializerWrapper0 = xmlPullWrapperFactory0.newSerializerWrapper((XmlSerializer) mXSerializer0);
      XmlSerializerDelegate xmlSerializerDelegate0 = new XmlSerializerDelegate(xmlSerializerWrapper0);
      errorPage0._renderClassReferenceFromHints(xmlSerializerDelegate0);
      ErrorPage errorPage1 = new ErrorPage();
      ActionExpression actionExpression0 = new ActionExpression("~@>a)1r*1J*#H!");
      actionExpression0.javascript("~@>a)1r*1J*#H!");
      // Undeclared exception!
      try { 
        text0.dfn();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.498075862058163
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Form form0 = new Form("dnP");
      form0.toString();
      // Undeclared exception!
      try { 
        form0.fieldset();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=3.1397973250357807
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, (String) null);
      ActionExpression actionExpression0 = new ActionExpression("yeipIMGWpSy");
      Object[] objectArray0 = new Object[0];
      ActionExpression actionExpression1 = actionExpression0.parameters(objectArray0);
      ActionExpression actionExpression2 = actionExpression1.javascript((String) null);
      ActionExpression actionExpression3 = actionExpression2.updateComponent("");
      Form form0 = new Form(errorPage0, "yeipIMGWpSy", actionExpression3);
      Component component0 = form0.link();
      Form form1 = form0.renderHint("yeipIMGWpSy");
      Component component1 = form0.p();
      Radio radio0 = new Radio(form1, "", "l\"[D#(X';_:8o4");
      radio0.defaultDomEvent();
      List<ValidationError> list0 = form1.getValidationErrors();
      Object object0 = new Object();
      Link link0 = new Link(table0, component1);
      assertEquals("Block_2", component1.getComponentId());
      
      form0.acronym((Object) list0);
      form0.acronym();
      StringBuilder stringBuilder0 = new StringBuilder();
      StringBuilder stringBuilder1 = stringBuilder0.append(4224);
      StringBuilder stringBuilder2 = stringBuilder1.append((Object) "yeipIMGWpSy");
      Image image0 = new Image(component0, (CharSequence) null, stringBuilder2);
      image0.defaultTagName();
      Form form2 = form1.addFormElement(radio0);
      Text text0 = new Text(component0, "onclick");
      form2.h5();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertFalse(radio0._isGeneratedId());
      assertEquals("yeipIMGWpSy", form2.getComponentId());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.081397583645935
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      String string0 = "object";
      Radio radio0 = new Radio((Component) null, "object", "object");
      DateInput dateInput0 = new DateInput(radio0, "/", "/", "/");
      String string1 = "./|gkOw#%(";
      dateInput0.fieldBinding("");
      // Undeclared exception!
      try { 
        dateInput0._getTopLevelComponent(true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No top level component found.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.9655852740428252
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, (String) null);
      TableBlock tableBlock0 = table0.thead();
      Any any0 = tableBlock0.col();
      Class<Image> class0 = Image.class;
      XmlPullWrapperFactory xmlPullWrapperFactory0 = XmlPullWrapperFactory.newInstance((String) null, class0);
      XmlPullParserFactory xmlPullParserFactory0 = XmlPullParserFactory.newInstance("D@u~4r6#ckU2mC9%G,", class0);
      xmlPullParserFactory0.setFeature("D@u~4r6#ckU2mC9%G,", true);
      XmlPullWrapperFactory.newInstance(xmlPullParserFactory0);
      Class<Hidden> class1 = Hidden.class;
      XmlPullWrapperFactory.newInstance("java.lang.String@0000000011", class1);
      errorPage0.h4();
      XmlSerializerWrapper xmlSerializerWrapper0 = xmlPullWrapperFactory0.newSerializerWrapper();
      // Undeclared exception!
      try { 
        any0.renderComponent(xmlSerializerWrapper0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Any", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.793339192691188
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Text text0 = new Text(errorPage0, (Object) null);
      text0.getPage();
      ActionExpression actionExpression0 = new ActionExpression("~@>a)1V*1J*#H!");
      ActionExpression actionExpression1 = actionExpression0.javascript("~@>a)1V*1J*#H!");
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("address");
      ActionExpression actionExpression2 = actionExpression1.parameter(xmlEntityRef0);
      actionExpression2.updateComponent("address");
      ErrorPage errorPage1 = new ErrorPage();
      XmlEntityRef xmlEntityRef1 = new XmlEntityRef("{");
      xmlEntityRef1.create();
      ElExpression elExpression0 = new ElExpression("address");
      ElExpression elExpression1 = elExpression0.errorMessage("-l/M/");
      elExpression1.errorMessage("_");
      NumberInput numberInput0 = new NumberInput(text0, "java.lang.String@0000000017", "{");
      // Undeclared exception!
      try { 
        numberInput0.p((Object) "address");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.9714549503478573
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      dynamicSelectModel0.setComponent((Component) null);
      Double double0 = new Double((-1.0));
      dynamicSelectModel0.enumeration("0*e~7f$^");
      ErrorPage errorPage0 = new ErrorPage();
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("java.lang.String@0000000011");
      xmlEntityRef0.create();
      // Undeclared exception!
      try { 
        xmlEntityRef0.imageSubmit("P%Y!$x", "java.lang.String@0000000011");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.6793116600239184
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Component component0 = errorPage0.img("-UN", "_Es8[~");
      // Undeclared exception!
      try { 
        component0.tbody();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Tbody component can be added only to a Table.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=2.763121399980001
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      errorPage0.style();
      errorPage0.getEngine();
      String string0 = null;
      errorPage0.em();
      // Undeclared exception!
      try { 
        errorPage0.getSubmittedForm();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Tried to access a form, but none was submitted.
         //
         verifyException("wheel.components.StandaloneComponent", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.407494209446948
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("http://xmlpull.org/v1/doc/properties.html#serializer-indentation");
      XmlEntityRef xmlEntityRef1 = new XmlEntityRef("");
      ActionExpression actionExpression0 = new ActionExpression("http://xmlpull.org/v1/doc/properties.html#serializer-indentation");
      Checkbox checkbox0 = new Checkbox(xmlEntityRef1, "r;t)LxDkfzd5Gh`K", ",4Sv,7KZqo6 J");
      TimeZone timeZone0 = TimeZone.getTimeZone("6`oDvBl");
      Locale locale0 = Locale.FRENCH;
      Calendar calendar0 = MockCalendar.getInstance(timeZone0, locale0);
      actionExpression0.parameter(calendar0);
      ActionExpression actionExpression1 = new ActionExpression("r;t)LxDkfzd5Gh`K");
      // Undeclared exception!
      try { 
        xmlEntityRef1.form("http://xmlpull.org/v1/doc/properties.html#serializer-indentation", actionExpression1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.1032731737259827
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Component component0 = null;
      String string0 = "ar";
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel1 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel2 = new DynamicSelectModel();
      String string1 = "attribute position must be 0..";
      String string2 = ",to$dz+ 1*7-G{";
      String string3 = "java.lang.String@0000000011";
      Checkbox checkbox0 = new Checkbox((Component) null, ",to$dz+ 1*7-G{", "java.lang.String@0000000011");
      Double double0 = new Double(0.0);
      String string4 = "Lo\"i8]";
      // Undeclared exception!
      try { 
        checkbox0.get("Lo\"i8]");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No top level component found.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.704483263052221
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      String string0 = "1gTuZXd";
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("1gTuZXd");
      ErrorPage errorPage0 = new ErrorPage();
      errorPage0.dt((Object) xmlEntityRef0);
      // Undeclared exception!
      try { 
        errorPage0.getSubmittedForm();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Tried to access a form, but none was submitted.
         //
         verifyException("wheel.components.StandaloneComponent", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.909573661851514
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      String string0 = "";
      ErrorPage errorPage0 = new ErrorPage();
      errorPage0.noframes();
      // Undeclared exception!
      try { 
        errorPage0.reset("v\"1j0,mTMKd4");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.650913856705622
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Component component0 = null;
      String string0 = "object";
      Radio radio0 = new Radio((Component) null, "object", "object");
      DateInput dateInput0 = new DateInput(radio0, "-/", "-/", "-/");
      String string1 = "./|gkOw%";
      dateInput0.actionBinding("./|gkOw%");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "-/";
      stringArray0[1] = "-/";
      // Undeclared exception!
      try { 
        dateInput0.em();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Form form0 = new Form("");
      form0.addFormValidationError("");
      // Undeclared exception!
      try { 
        form0.code((Object) "gEx}RT5GdS:+?Z0J6");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=3.3254330177791562
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      errorPage0.getEngine();
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("");
      Table table0 = new Table(errorPage0, "");
      assertEquals("Table_1", table0.getComponentId());
      
      errorPage0.ul();
      Table table1 = table0.id((String) null);
      TableBlock tableBlock0 = table1.tfoot();
      tableBlock0.h5((Object) table1);
      Any any0 = tableBlock0.col();
      errorPage0.a((Object) null);
      table1.code((Object) tableBlock0);
      FileInput fileInput0 = new FileInput(any0, "", "");
      assertFalse(table0._isGeneratedId());
      
      XmlEntityRef xmlEntityRef1 = new XmlEntityRef("");
      XmlEntityRef xmlEntityRef2 = new XmlEntityRef((String) null);
      assertEquals("wheel_components_XmlEntityRef", xmlEntityRef2.getComponentId());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      String string0 = "java.lang.String@0000000012";
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("java.lang.String@0000000012");
      // Undeclared exception!
      try { 
        xmlEntityRef0.h5((Object) "java.lang.String@0000000012");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=3.1826873260458597
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Component component0 = errorPage0.entity("Z(^QvQ[oJA8A*Y");
      ActionExpression actionExpression0 = new ActionExpression("label");
      Form form0 = new Form(component0, "xR$SxsnV\"0r-0", actionExpression0);
      Form form1 = form0.renderHint("Z(^QvQ[oJA8A*Y");
      form1.addFormValidationError("Q+dn@DK(>>tE|");
      Checkbox checkbox0 = new Checkbox(form0, "n8{RjK\"bK#1g20ZpO7w", "rvx%]DI?@O(;W%3-");
      FormElement formElement0 = checkbox0.validationRule("A|eM7");
      Form form2 = form0.addFormElement(formElement0);
      form2.text("A|eM7");
      Form form3 = form2.renderHint("xR$SxsnV\"0r-0");
      form3.renderHint("n8{RjK\"bK#1g20ZpO7w");
      form1.id("A|eM7");
      form0.placeholder(":)N.lAtI^Gc");
      form0._isBuilt();
      // Undeclared exception!
      try { 
        checkbox0.nbsp();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=3.1038901935101593
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Component component0 = errorPage0.entity("Z(^QvQ[oJNA8A*Y");
      errorPage0.img("d6X2E", "_Es8[~");
      Table table0 = new Table(errorPage0, "A|eM7");
      Table table1 = table0.id("A|eM7");
      TableBlock tableBlock0 = table1.thead();
      tableBlock0.renderHint("");
      DateInput dateInput0 = new DateInput(table1, "d6X2E", (String) null, "");
      // Undeclared exception!
      try { 
        component0.text(dateInput0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=2.8391035332261323
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Text text0 = new Text(errorPage0, (Object) null);
      StandaloneComponent standaloneComponent0 = text0.getPage();
      ActionExpression actionExpression0 = new ActionExpression("~@>a)1V*1J*#H!");
      ActionExpression actionExpression1 = actionExpression0.javascript("~@>a)1V*1J*#H!");
      String string0 = "address";
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("address");
      ActionExpression actionExpression2 = actionExpression1.parameter(xmlEntityRef0);
      ActionExpression actionExpression3 = actionExpression2.updateComponent("address");
      ActionExpression actionExpression4 = actionExpression3.event("{");
      text0.actionBinding(actionExpression4);
      // Undeclared exception!
      try { 
        text0.q((Object) standaloneComponent0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=2.6500175996736255
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Text text0 = new Text(errorPage0, (Object) null);
      ErrorPage errorPage1 = new ErrorPage();
      ActionExpression actionExpression0 = new ActionExpression("~@>a)1V*1J#H!");
      ActionExpression actionExpression1 = new ActionExpression("~@>a)1V*1J#H!");
      String string0 = "address";
      actionExpression0.javascript("address");
      Text text1 = new Text(errorPage1, actionExpression0);
      TextArea textArea0 = new TextArea(errorPage0, "{", "~@>a)1V*1J#H!");
      // Undeclared exception!
      try { 
        text1.q((Object) textArea0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=2.0447969209589383
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      String string0 = "http://xmlpull.org/v1/doc/properties.html#serializer-indentation";
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("http://xmlpull.org/v1/doc/properties.html#serializer-indentation");
      // Undeclared exception!
      try { 
        xmlEntityRef0.wrapSelf();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No top level component found.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 90
  /*Coverage entropy=3.2359948270915724
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String string0 = "";
      errorPage0.getEngine();
      String string1 = null;
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("");
      Table table0 = new Table(errorPage0, "");
      errorPage0.ul();
      Table table1 = table0.id((String) null);
      TableBlock tableBlock0 = table1.tfoot();
      Any any0 = tableBlock0.col();
      String string2 = "";
      FileInput fileInput0 = new FileInput(any0, "", "");
      XmlEntityRef xmlEntityRef1 = new XmlEntityRef("");
      // Undeclared exception!
      try { 
        fileInput0.abbr((Object) xmlEntityRef1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=2.958778989556868
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      errorPage0._setGeneratedId(true);
      Component component0 = errorPage0.entity("Z(^QvQ[oJA8A*Y");
      String string0 = "-UN";
      MockDate mockDate0 = new MockDate();
      // Undeclared exception!
      try { 
        component0.h1((Object) mockDate0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 92
  /*Coverage entropy=2.4153670453945355
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Component component0 = null;
      String string0 = "object";
      Radio radio0 = new Radio((Component) null, "object", "object");
      String string1 = "/";
      DateInput dateInput0 = new DateInput(radio0, "/", "/", "/");
      String string2 = "./|gkOw#%(";
      dateInput0.actionBinding("./|gkOw#%(");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "/";
      // Undeclared exception!
      try { 
        radio0.dateFormat("/", dateInput0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unsupported type given for dateFormat. Supported types are: Date, Calendar, Long/long .
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.8976492786748422
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      String string0 = "object";
      Radio radio0 = new Radio((Component) null, "object", "object");
      String string1 = "/";
      DateInput dateInput0 = new DateInput(radio0, "/", "/", "/");
      // Undeclared exception!
      try { 
        radio0.dateFormat((String) null, "object");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Failed to initialize SimpleDateFormat with pattern 'null'.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=2.2745180899177107
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Component component0 = null;
      String string0 = "qvZ2WI_biJfa7_H";
      Checkbox checkbox0 = new Checkbox((Component) null, "qvZ2WI_biJfa7_H", "}8dq#Fa+n");
      FormElement formElement0 = checkbox0.validationRule("qvZ2WI_biJfa7_H");
      Hidden hidden0 = new Hidden(formElement0, "}8dq#Fa+n", "qvZ2WI_biJfa7_H");
      Submit submit0 = new Submit(formElement0, "}8dq#Fa+n", "}8dq#Fa+n");
      // Undeclared exception!
      try { 
        submit0.h1((Object) hidden0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=2.327900800509066
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      String string0 = "java.lang.String@0000000016";
      String string1 = "/";
      FileInput fileInput0 = new FileInput((Component) null, "java.lang.String@0000000014", "jaa.langString@0000000011");
      String string2 = "0";
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("0");
      xmlEntityRef0.renderHint("jaa.langString@0000000011");
      fileInput0.getTempFileLocation();
      XmlEntityRef xmlEntityRef1 = new XmlEntityRef("java.lang.String@0000000014");
      // Undeclared exception!
      try { 
        xmlEntityRef1.dd();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 96
  /*Coverage entropy=3.0081828434508333
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Checkbox checkbox0 = new Checkbox(errorPage0, ",", "A|eM7");
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("A|eM7");
      ActionExpression actionExpression0 = new ActionExpression("A|eM7");
      Form form0 = new Form(checkbox0, ",", actionExpression0);
      Form form1 = form0.addFormValidationError(",");
      Component component0 = form0.p();
      assertEquals("Block_1", component0.getComponentId());
      
      Radio radio0 = new Radio(form0, ",", "Rb'XD`\"e!&'1K@`?");
      radio0.defaultDomEvent();
      form1.getValidationErrors();
      Component component1 = form0.acronym();
      Image image0 = new Image(form1, "Rb'XD`\"e!&'1K@`?", "A|eM7");
      image0.defaultTagName();
      Form form2 = new Form(",");
      Text text0 = new Text(component1, actionExpression0);
      text0.setHtml(true);
      form0.h5();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(form0.equals((Object)form2));
      assertEquals(",", form0.getComponentId());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=3.107625181542587
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Object object0 = new Object();
      ErrorPage errorPage0 = new ErrorPage();
      errorPage0.em(object0);
      Submit submit0 = new Submit(errorPage0, "dnP", "IAD7?Zf}n");
      Table table0 = new Table(errorPage0, "IAD7?Zf}n");
      Table table1 = table0.id("IAD7?Zf}n");
      Table table2 = table1.renderHint("dnP");
      TableBlock tableBlock0 = table2.tbody();
      TableBlock tableBlock1 = tableBlock0.renderHint("dnP");
      Label label0 = new Label(submit0, tableBlock1);
      label0.s();
      Checkbox checkbox0 = new Checkbox(submit0, "", "zU8IiJ(`%I]d0");
      String string0 = "Y}K}vY5wo\\1eniQ";
      String string1 = "a-dT=";
      String string2 = "expected <[CDATA[ for comment start";
      ElExpression elExpression0 = new ElExpression("");
      DynamicSelectModel dynamicSelectModel0 = null;
      try {
        dynamicSelectModel0 = new DynamicSelectModel(elExpression0, elExpression0, elExpression0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not create DynamicSelection model. Collection attribute was null or not an el-expression.
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  /**
  //Test case number: 98
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      String string0 = "Col component can be added only to a TableBlock.";
      Form form0 = new Form("Col component can be added only to a TableBlock.");
      form0.addFormValidationRule("Col component can be added only to a TableBlock.", "Col component can be added only to a TableBlock.");
      String string1 = "ZGKE)K>kJ1Wb";
      String string2 = "em";
      // Undeclared exception!
      try { 
        form0.s((Object) "iframe");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 99
  /*Coverage entropy=2.407494209446948
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Form form0 = new Form("\n,");
      ErrorPage errorPage0 = new ErrorPage();
      NumberInput numberInput0 = new NumberInput(form0, "\n,", "L3!cHQn_PQEjm56l5");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "\n,";
      stringArray0[1] = "\n,";
      stringArray0[2] = "L3!cHQn_PQEjm56l5";
      stringArray0[3] = "L3!cHQn_PQEjm56l5";
      stringArray0[4] = "\n,";
      stringArray0[5] = ";LF2{V9W4E:p;=8s:";
      stringArray0[6] = "L3!cHQn_PQEjm56l5";
      numberInput0._setSubmitValue(stringArray0);
      // Undeclared exception!
      try { 
        form0.title("noscript");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 100
  /*Coverage entropy=2.772006603250724
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      String string0 = "";
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      dynamicSelectModel0.enumeration("");
      ErrorPage errorPage0 = new ErrorPage();
      errorPage0.tt();
      Form form0 = new Form("");
      // Undeclared exception!
      try { 
        form0.id("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No top level component found.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 101
  /*Coverage entropy=2.7596372926299058
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Component component0 = errorPage0.tt();
      component0.strike();
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        errorPage0.getSubmittedForm();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Tried to access a form, but none was submitted.
         //
         verifyException("wheel.components.StandaloneComponent", e);
      }
  }

  /**
  //Test case number: 102
  /*Coverage entropy=2.1944064129383247
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      String string0 = ").s,8_C>(y";
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef(").s,8_C>(y");
      Component component0 = xmlEntityRef0.addInternalRenderHint("pfRa");
      // Undeclared exception!
      try { 
        component0.h1((Object) "pfRa");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 103
  /*Coverage entropy=2.9673853666145713
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Text text0 = new Text(errorPage0, (Object) null);
      text0.getPage();
      DateInput dateInput0 = new DateInput(text0, "/", "/", "/");
      String string0 = "./|gkOw#%(";
      String string1 = null;
      dateInput0.actionBinding((String) null);
      // Undeclared exception!
      try { 
        dateInput0.code();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 104
  /*Coverage entropy=2.353363451324745
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef(").s,8_C>(y");
      String string0 = "pfRa";
      xmlEntityRef0.addInternalRenderHint("pfRa");
      byte byte0 = (byte) (-3);
      Byte byte1 = new Byte((byte) (-3));
      // Undeclared exception!
      try { 
        xmlEntityRef0.strong((Object) byte1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 105
  /*Coverage entropy=2.1944064129383247
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef(").s,8_o>7y");
      String string0 = "{collection token:<<";
      xmlEntityRef0.addInternalRenderHint("{collection token:<<");
      byte byte0 = (byte) (-3);
      Byte byte1 = new Byte((byte) (-3));
      // Undeclared exception!
      try { 
        xmlEntityRef0.h3();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 106
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      String string0 = "@!UJ],YlU>#wJ";
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("@!UJ],YlU>#wJ");
      String string1 = "";
      // Undeclared exception!
      try { 
        xmlEntityRef0.noscript();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 107
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      String string0 = "Col component can be added only to a TableBlock.";
      String string1 = "iframe";
      Form form0 = new Form("Col component can be added only to a TableBlock.");
      form0.addFormValidationRule("Col component can be added only to a TableBlock.", "Col component can be added only to a TableBlock.");
      // Undeclared exception!
      try { 
        form0.code();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 108
  /*Coverage entropy=2.650913856705622
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      String string0 = "object";
      Radio radio0 = new Radio((Component) null, "object", "object");
      String string1 = "/";
      DateInput dateInput0 = new DateInput(radio0, "/", "/", "/");
      String string2 = "./|gkOw#%(";
      dateInput0.actionBinding("./|gkOw#%(");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "/";
      // Undeclared exception!
      try { 
        dateInput0.code();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 109
  /*Coverage entropy=3.1329672494094893
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      String string0 = "dnP";
      Form form0 = new Form("dnP");
      ErrorPage errorPage0 = new ErrorPage();
      ErrorPage errorPage1 = new ErrorPage();
      Component component0 = errorPage1.pre();
      component0.code();
      Component component1 = errorPage1.wBlock("dnP");
      // Undeclared exception!
      try { 
        component1.head();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.StandaloneComponent", e);
      }
  }

  /**
  //Test case number: 110
  /*Coverage entropy=2.0141266108053313
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      String string0 = "java.lang.String@0000000011";
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("java.lang.String@0000000011");
      // Undeclared exception!
      try { 
        xmlEntityRef0.ul();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 111
  /*Coverage entropy=2.9576836374835027
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel1 = new DynamicSelectModel();
      dynamicSelectModel0.enumeration("");
      Double double0 = new Double(0.0);
      ErrorPage errorPage0 = new ErrorPage();
      StandaloneComponent standaloneComponent0 = errorPage0._getTopLevelComponent(true);
      Submit submit0 = new Submit(standaloneComponent0, "", "pr=~Of8( !");
      Checkbox checkbox0 = new Checkbox(submit0, ",to$dz+ 1*7-G{", "|");
      FormElement formElement0 = checkbox0.validationRule("java.lang.String@0000000011", (String) null);
      Checkbox checkbox1 = new Checkbox(formElement0, (String) null, "expected ");
      FormElement formElement1 = checkbox0.value("|");
      Link link0 = new Link(formElement0, dynamicSelectModel0);
      Table table0 = new Table(formElement0, "java.lang.String@0000000011");
      table0.tbody();
      Table table1 = new Table(checkbox0, ",to$dz+ 1*7-G{");
      TableBlock tableBlock0 = table0.tfoot();
      TableRow tableRow0 = tableBlock0.tr();
      tableRow0.createTh();
      Block block0 = new Block(formElement1);
      // Undeclared exception!
      try { 
        errorPage0.caption();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Thead component can be added only to a Table.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 112
  /*Coverage entropy=2.3190095981344987
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      String string0 = "Col component can be added only to a TableBlock.";
      String string1 = "iframe";
      Form form0 = new Form("Col component can be added only to a TableBlock.");
      Form form1 = form0.addFormValidationRule("Col component can be added only to a TableBlock.", "Col component can be added only to a TableBlock.");
      Form form2 = new Form("Col component can be added only to a TableBlock.");
      form2.renderHint("iframe");
      Component component0 = form1.attribute("iframe", "iframe");
      // Undeclared exception!
      try { 
        component0.var((Object) form0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 113
  /*Coverage entropy=2.887732462231445
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      errorPage0.getEngine();
      String string0 = "";
      Hidden hidden0 = new Hidden(errorPage0, "", "");
      FormElement formElement0 = hidden0.value("");
      formElement0.getComponentId();
      // Undeclared exception!
      try { 
        hidden0.label();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 114
  /*Coverage entropy=2.8545152408923746
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Text text0 = new Text(errorPage0, (Object) null);
      String string0 = "G]de-?ra6]l7hP*mY";
      Table table0 = new Table(errorPage0, "G]de-?ra6]l7hP*mY");
      // Undeclared exception!
      try { 
        table0.id("G]de-?ra6]l7hP*mY");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.AbstractMap", e);
      }
  }

  /**
  //Test case number: 115
  /*Coverage entropy=2.3169392047597572
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      String string0 = "Col component can be added only to a TableBlock.";
      String string1 = "iframe";
      Form form0 = new Form("Col component can be added only to a TableBlock.");
      form0.addFormValidationError("iframe");
      String string2 = "il?!$\\An=s;Os";
      Form form1 = form0.addFormValidationRule("ZGKE)K>kJ1Wb", "il?!$An=s;Os");
      String string3 = "c$LVrPS8$s<G<ihe~p";
      Form form2 = form1.addFormValidationError("c$LVrPS8$s<G<ihe~p");
      Form form3 = form2.renderHint("ZGKE)K>kJ1Wb");
      form0.attribute("", "iframe");
      form0.addFormValidationError("iframe");
      String string4 = "7?0aOE5";
      // Undeclared exception!
      try { 
        form3.ins();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 116
  /*Coverage entropy=2.3169392047597572
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      String string0 = "Col component can be added only to a TableBlock.";
      String string1 = "iframe";
      Form form0 = new Form("Col component can be added only to a TableBlock.");
      form0.addFormValidationError("iframe");
      String string2 = "il?!$\\An=s;Os";
      Form form1 = form0.addFormValidationRule("ZGKE)K>kJ1Wb", "il?!$An=s;Os");
      String string3 = "c9VrPS8$s<G<ihe~p";
      Form form2 = form1.addFormValidationError("c9VrPS8$s<G<ihe~p");
      form2.renderHint("ZGKE)K>kJ1Wb");
      form0.attribute("", "iframe");
      // Undeclared exception!
      try { 
        form2.pre((Object) "il?!$An=s;Os");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 117
  /*Coverage entropy=2.3957094260849363
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Hidden hidden0 = new Hidden((Component) null, "gQ?S]*Hbl_j5]", "Td component can be added only to a TableRow.");
      FormElement formElement0 = hidden0.value("ZtMDGnJ");
      formElement0.getComponentId();
      // Undeclared exception!
      try { 
        formElement0.label();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 118
  /*Coverage entropy=2.2246935662934053
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      String string0 = "";
      Form form0 = new Form("");
      Form form1 = form0.renderHint("");
      String string1 = "";
      // Undeclared exception!
      try { 
        form1.p();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 119
  /*Coverage entropy=2.3168084546157512
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      errorPage0.getEngine();
      Form form0 = new Form((String) null);
      String string0 = "br";
      // Undeclared exception!
      try { 
        form0.passwordInput("br");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 120
  /*Coverage entropy=2.350831216726228
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Form form0 = new Form("Col component can be added only to a TableBlock.");
      Form form1 = new Form("q");
      form0.addFormValidationError("");
      Form form2 = form1.renderHint("iframe");
      // Undeclared exception!
      try { 
        form2.textarea("[^9");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 121
  /*Coverage entropy=2.1436544409890836
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      String string0 = ";s,8_C>(";
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef(";s,8_C>(");
      xmlEntityRef0.addInternalRenderHint(";s,8_C>(");
      byte byte0 = (byte) (-19);
      Byte byte1 = new Byte((byte) (-19));
      XmlEntityRef xmlEntityRef1 = new XmlEntityRef(";s,8_C>(");
      String string1 = "Y]Au6Z)WA /J";
      // Undeclared exception!
      try { 
        xmlEntityRef1.passwordInput(";s,8_C>(");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 122
  /*Coverage entropy=1.948720592834763
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("@!UJ],YlU>#wJ");
      // Undeclared exception!
      try { 
        xmlEntityRef0.reset("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 123
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      String string0 = "}(S";
      Form form0 = new Form("}(S");
      form0.addFormValidationError("}(S");
      // Undeclared exception!
      try { 
        form0.link();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 124
  /*Coverage entropy=2.2679499454185312
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Component component0 = null;
      String string0 = "qvZ2WI_biJfa7_H";
      Checkbox checkbox0 = new Checkbox((Component) null, "qvZ2WI_biJfa7_H", "}dq#\"a+n");
      FormElement formElement0 = checkbox0.validationRule("qvZ2WI_biJfa7_H");
      Hidden hidden0 = new Hidden(formElement0, "}dq#\"a+n", "qvZ2WI_biJfa7_H");
      // Undeclared exception!
      try { 
        checkbox0.dt((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 125
  /*Coverage entropy=2.812944491544979
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Object object0 = new Object();
      Component component0 = errorPage0.em(object0);
      Label label0 = new Label(component0, component0);
      label0.s();
      component0.dd((Object) label0);
      // Undeclared exception!
      try { 
        errorPage0.getSubmittedForm();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Tried to access a form, but none was submitted.
         //
         verifyException("wheel.components.StandaloneComponent", e);
      }
  }

  /**
  //Test case number: 126
  /*Coverage entropy=2.8717930031188414
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Text text0 = new Text(errorPage0, (Object) null);
      StandaloneComponent standaloneComponent0 = text0.getPage();
      ActionExpression actionExpression0 = new ActionExpression("~@>a)1V*1J*#H!");
      Component component0 = standaloneComponent0.fieldset();
      int int0 = 96;
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(3834, 3834, 96, 3834, 3834);
      TextInput textInput0 = new TextInput(standaloneComponent0, "~@>a)1V*1J*#H!", "~@>a)1V*1J*#H!");
      Text text1 = new Text(component0, textInput0);
      byte byte0 = (byte) (-20);
      Byte.compare((byte) (-20), (byte)12);
      text0.setHtml(false);
      // Undeclared exception!
      try { 
        errorPage0.getSubmittedForm();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Tried to access a form, but none was submitted.
         //
         verifyException("wheel.components.StandaloneComponent", e);
      }
  }

  /**
  //Test case number: 127
  /*Coverage entropy=2.6687524735445822
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Component component0 = null;
      Radio radio0 = new Radio((Component) null, "ouject", "ouject");
      DateInput dateInput0 = new DateInput(radio0, "/", "/", "/");
      dateInput0.actionBinding("./|gkOw#%(");
      String[] stringArray0 = new String[15];
      stringArray0[0] = "/";
      stringArray0[1] = "/";
      stringArray0[2] = "./|gkOw#%(";
      stringArray0[3] = "ouject";
      stringArray0[4] = "ouject";
      // Undeclared exception!
      try { 
        radio0.area(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 128
  /*Coverage entropy=2.724465988682904
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String string0 = "could not create constructor: ";
      String string1 = ",to$dz+ 1*7-G{";
      String string2 = "java.lang.String@0000000013";
      Checkbox checkbox0 = new Checkbox(errorPage0, ",to$dz+ 1*7-G{", "java.lang.String@0000000013");
      Double double0 = new Double(0.0);
      // Undeclared exception!
      try { 
        checkbox0.li((Object) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 129
  /*Coverage entropy=2.258426135894722
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel1 = new DynamicSelectModel();
      dynamicSelectModel0.enumeration("ar");
      String string0 = "attribute position must be 0..";
      String string1 = "java.lang.String@0000000011";
      Checkbox checkbox0 = new Checkbox((Component) null, ",to$dz+ 1*7-G{", "java.lang.String@0000000011");
      Double double0 = new Double(0.0);
      // Undeclared exception!
      try { 
        checkbox0.li((Object) "attribute position must be 0..");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 130
  /*Coverage entropy=2.101387339879761
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("dnWRP");
      ActionExpression actionExpression0 = new ActionExpression("");
      Checkbox checkbox0 = new Checkbox(xmlEntityRef0, "", "java.lang.String@0000000011");
      String string0 = null;
      Table table0 = null;
      try {
        table0 = new Table(xmlEntityRef0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 131
  /*Coverage entropy=2.0499251260871434
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Component component0 = null;
      String string0 = "./|gkOw#%(";
      String[] stringArray0 = new String[5];
      stringArray0[2] = "/";
      stringArray0[1] = "/";
      stringArray0[2] = "./|gkOw#%(";
      Checkbox checkbox0 = new Checkbox((Component) null, "jaa.langString@0000000011", "./|gkOw#%(");
      // Undeclared exception!
      try { 
        checkbox0.dl();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 132
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("http://xmlpull.org/v1/doc/properties.html#serializer-indentation");
      // Undeclared exception!
      try { 
        xmlEntityRef0.getPage();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 133
  /*Coverage entropy=3.196747448263954
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      errorPage0.getEngine();
      String string0 = null;
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("");
      Table table0 = new Table(errorPage0, "");
      errorPage0.ul();
      Table table1 = table0.id((String) null);
      TableBlock tableBlock0 = table1.tfoot();
      Any any0 = tableBlock0.col();
      String string1 = "";
      FileInput fileInput0 = new FileInput(any0, "", "");
      ElExpression elExpression0 = new ElExpression("");
      fileInput0.setMetadataBind(elExpression0);
      table0.add(tableBlock0);
      char[] charArray0 = new char[3];
      charArray0[0] = '9';
      charArray0[1] = 'P';
      charArray0[2] = '';
      // Undeclared exception!
      try { 
        CharBuffer.wrap(charArray0, 116, 2196);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  /**
  //Test case number: 134
  /*Coverage entropy=3.2361740298024206
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      errorPage0.getEngine();
      String string0 = null;
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("");
      Table table0 = new Table(errorPage0, "");
      Component component0 = errorPage0.ul();
      Table table1 = table0.id((String) null);
      TableBlock tableBlock0 = table1.tfoot();
      Any any0 = tableBlock0.col();
      String string1 = "";
      FileInput fileInput0 = new FileInput(any0, "", "");
      ElExpression elExpression0 = new ElExpression("");
      fileInput0.setMetadataBind(elExpression0);
      table0.add(tableBlock0);
      char[] charArray0 = new char[3];
      charArray0[0] = '9';
      charArray0[2] = 'm';
      component0.sup((Object) "");
      // Undeclared exception!
      try { 
        CharBuffer.wrap(charArray0, 116, 2196);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  /**
  //Test case number: 135
  /*Coverage entropy=2.711400864883044
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Text text0 = new Text(errorPage0, (Object) null);
      Submit submit0 = new Submit(text0, ".O-U", "fieldset");
      // Undeclared exception!
      try { 
        submit0.h1();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 136
  /*Coverage entropy=2.8839117089145034
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Object object0 = new Object();
      Link link0 = new Link(errorPage0, object0);
      Checkbox checkbox0 = new Checkbox(link0, "java.lang.String@0000000016", "No corresponding component found for end expression '");
      FormElement formElement0 = checkbox0.label("No corresponding component found for end expression '");
      Hidden hidden0 = new Hidden(formElement0, "java.lang.String@0000000013", "java.lang.String@0000000013");
      FormElement formElement1 = hidden0.value("No corresponding component found for end expression '");
      ActionExpression actionExpression0 = new ActionExpression("U8ei");
      ActionExpression actionExpression1 = actionExpression0.updateComponent("No corresponding component found for end expression '");
      ActionExpression actionExpression2 = actionExpression1.event("Q4GR:{b#z/");
      Form form0 = new Form(hidden0, "Q4GR:{b#z/", actionExpression2);
      Form form1 = form0.addFormElement(formElement1);
      form1.getInvalidFields();
      assertTrue(link0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertEquals("Q4GR:{b#z/", form1.getComponentId());
  }

  /**
  //Test case number: 137
  /*Coverage entropy=2.9215769932624296
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Text text0 = new Text(errorPage0, (Object) null);
      StandaloneComponent standaloneComponent0 = text0.getPage();
      String string0 = "";
      NumberInput numberInput0 = new NumberInput(standaloneComponent0, "", "");
      errorPage0.getEngine();
      numberInput0.afterAdd();
      // Undeclared exception!
      try { 
        numberInput0.noframes();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 138
  /*Coverage entropy=2.4965636115512178
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      Component component0 = null;
      Radio radio0 = new Radio((Component) null, "object", "object");
      DateInput dateInput0 = new DateInput(radio0, "/", "/", "/");
      String string0 = "./|gkOw#%(";
      Component component1 = dateInput0.actionBinding("./|gkOw#%(");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "/";
      stringArray0[1] = "/";
      stringArray0[2] = "./|gkOw#%(";
      String string1 = "java.lang.String@0000000011";
      Table table0 = null;
      try {
        table0 = new Table(component1, "java.lang.String@0000000011");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No top level component found.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 139
  /*Coverage entropy=1.7214787039105834
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      String string0 = null;
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef((String) null);
      StringSelectModel stringSelectModel0 = new StringSelectModel();
      Select select0 = null;
      try {
        select0 = new Select(xmlEntityRef0, (String) null, "", stringSelectModel0, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 140
  /*Coverage entropy=1.7653327875937666
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      String string0 = "http://xmlpull.org/v1/doc/properties.html#serializer-indentation";
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("http://xmlpull.org/v1/doc/properties.html#serializer-indentation");
      NumberInput numberInput0 = null;
      try {
        numberInput0 = new NumberInput(xmlEntityRef0, "http://xmlpull.org/v1/doc/properties.html#serializer-indentation", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 141
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      String string0 = "Col component can be added only to a TableBlock.";
      String string1 = "iframe";
      Checkbox checkbox0 = new Checkbox((Component) null, "Col component can be added only to a TableBlock.", "iframe");
      Form form0 = new Form("Col component can be added only to a TableBlock.");
      form0.addFormValidationRule("Col component can be added only to a TableBlock.", "Col component can be added only to a TableBlock.");
      // Undeclared exception!
      try { 
        checkbox0.style();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 142
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("@,yJ],lU>#w");
      // Undeclared exception!
      try { 
        xmlEntityRef0._wrapComponentId("@,yJ],lU>#w");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No top level component found.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 143
  /*Coverage entropy=1.6574520104243486
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      Checkbox checkbox0 = new Checkbox((Component) null, (String) null, "del");
      // Undeclared exception!
      try { 
        checkbox0.label((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.FormElement", e);
      }
  }

  /**
  //Test case number: 144
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      Form form0 = new Form("<RFa,='GIOh#3z-cu");
      String string0 = "legend";
      // Undeclared exception!
      try { 
        form0.id("dQ)353f\"peN-");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No top level component found.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 145
  /*Coverage entropy=2.6905784952935448
  */
  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String[] stringArray0 = new String[7];
      stringArray0[2] = "L3!cHQn_PQEjm56l5";
      stringArray0[3] = "L3!cHQn_PQEjm56l5";
      stringArray0[5] = ";LF2{V9W4E:p;=8s:";
      stringArray0[6] = "L3!cHQn_PQEjm56l5";
      Component component0 = errorPage0.pre();
      assertTrue(component0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }
}
