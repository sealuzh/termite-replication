/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 29 18:35:44 GMT 2020
 */

package wheel.json;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.StringWriter;
import java.io.Writer;
import java.util.Collection;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.Map;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.json.JSONArray;
import wheel.json.JSONObject;
import wheel.json.JSONTokener;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JSONObject_ESTest extends JSONObject_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.9258667938196188
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject((Object) "#WK1[1Vuw");
      LinkedList<String> linkedList0 = new LinkedList<String>();
      jSONObject0.put("eRnO[sI2q@", (Collection) linkedList0);
      JSONObject.valueToString(jSONObject0, 18, 2);
      assertEquals(4, jSONObject0.length());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.030521579987331
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.accumulate("", "");
      JSONObject jSONObject1 = jSONObject0.put("Xr2uy 4x", 799);
      String string0 = jSONObject1.toString((-2247));
      assertNotNull(string0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("}B:W`c*Q}CJXHL H|#^");
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject(jSONTokener0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must begin with '{' at character 1 of }B:W`c*Q}CJXHL H|#^
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.5171063970610277
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Integer integer0 = new Integer(614);
      String[] stringArray0 = JSONObject.getNames((Object) integer0);
      assertNotNull(stringArray0);
      
      JSONObject jSONObject0 = new JSONObject(integer0, stringArray0);
      assertEquals(5, jSONObject0.length());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.5229550675313184
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = jSONObject0.putOpt("wheel.json.JSONException", "wheel.json.JSONException");
      Object object0 = jSONObject1.remove("wheel.json.JSONException");
      assertEquals("wheel.json.JSONException", object0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.094729047527649
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.put("Xr2uy 4x", 799);
      int int0 = jSONObject0.optInt("Xr2uy 4x");
      assertEquals(799, int0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.4941751382893085
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.put("co", (-624));
      Object object0 = jSONObject0.opt("co");
      assertEquals((-624), object0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      int int0 = jSONObject0.length();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.put("JSONObject[", "JSONObject[");
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      int int0 = jSONObject0.length();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.094408629847781
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Double double0 = new Double(91);
      JSONObject jSONObject0 = new JSONObject(double0);
      jSONObject0.keys();
      assertEquals(3, jSONObject0.length());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.4941751382893085
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.put("co", (-624));
      boolean boolean0 = jSONObject0.has("co");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.8462202193216335
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.accumulate("", "");
      String string0 = jSONObject0.getString("");
      assertNotNull(string0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.8462202193216335
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.putOpt("", jSONObject0);
      JSONObject jSONObject1 = jSONObject0.getJSONObject("");
      assertSame(jSONObject0, jSONObject1);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.3625664136253977
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject((Object) "#WK1[1Vuw");
      jSONObject0.put("\"java.lang.Object@0000000001\"", 91);
      jSONObject0.get("\"java.lang.Object@0000000001\"");
      assertEquals(4, jSONObject0.length());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String string0 = jSONObject0.toString(110, (-2956));
      assertEquals("{}", string0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      String string0 = jSONObject0.toString(0, 47);
      assertEquals("{}", string0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String string0 = jSONObject0.toString((-13), 47);
      assertEquals("{}", string0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      String string0 = jSONObject0.toString(0);
      assertEquals("{}", string0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Integer integer0 = new Integer(91);
      JSONObject.testValidity(integer0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      String string0 = JSONObject.quote((String) null);
      assertEquals("\"\"", string0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      String string0 = JSONObject.quote("wheel.json.JSONObject$1");
      assertEquals("\"wheel.json.JSONObject$1\"", string0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      String string0 = JSONObject.quote("");
      assertEquals("\"\"", string0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      JSONObject jSONObject1 = jSONObject0.putOpt("Expected '", (Object) null);
      assertSame(jSONObject0, jSONObject1);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Double double0 = new Double(614);
      String[] stringArray0 = new String[3];
      JSONObject jSONObject0 = new JSONObject(double0, stringArray0);
      JSONObject jSONObject1 = jSONObject0.putOpt((String) null, jSONObject0);
      assertEquals(0, jSONObject1.length());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.2337380151460802
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject((Object) "#WK1[1Vuw");
      jSONObject0.put("\"java.lang.Object@0000000001\"", (Map) null);
      assertEquals(4, jSONObject0.length());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.277034259466139
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.put("JSONObject[", "JSONObject[");
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      JSONObject jSONObject1 = jSONObject0.put("'zq*Z#6/Zw>]L", (Map) hashMap0);
      assertEquals(2, jSONObject1.length());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.277034259466139
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = jSONObject0.put("3#a0", (-1L));
      assertEquals(1, jSONObject1.length());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.094729047527649
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = jSONObject0.put("", (long) 577);
      long long0 = jSONObject1.optLong("");
      assertEquals(577L, long0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.277034259466139
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = jSONObject0.put("] is not a Boolean.", 0);
      assertSame(jSONObject0, jSONObject1);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.277034259466139
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = jSONObject0.put("", (-513));
      assertSame(jSONObject0, jSONObject1);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.2130075659799042
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = jSONObject0.put("lo", (-1.0));
      assertSame(jSONObject1, jSONObject0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      try { 
        jSONObject0.put((String) null, 0.0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String string0 = jSONObject0.optString("gettoHexString", "] is not a Boolean.");
      assertEquals("] is not a Boolean.", string0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String string0 = jSONObject0.optString("", "");
      assertEquals("", string0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      String string0 = jSONObject0.optString((String) null);
      assertEquals("", string0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      String string0 = jSONObject0.optString("");
      assertEquals("", string0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.9320738874454946
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      long long0 = jSONObject0.optLong("EX", 0L);
      assertEquals(0L, long0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      long long0 = jSONObject0.optLong((String) null, 1973L);
      assertEquals(1973L, long0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.9061547465398496
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      long long0 = jSONObject0.optLong("");
      assertEquals(0L, long0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      String[] stringArray0 = new String[4];
      JSONObject jSONObject0 = new JSONObject("9 4T`lHE\"sM\"L", stringArray0);
      JSONObject jSONObject1 = jSONObject0.optJSONObject((String) null);
      assertNull(jSONObject1);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject((Map) null);
      JSONArray jSONArray0 = jSONObject0.optJSONArray("getreplaceAll");
      assertNull(jSONArray0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.8734641445321512
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      int int0 = jSONObject0.optInt("dV\"Ke{", 0);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.9320738874454946
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      HashMap<Object, Double> hashMap0 = new HashMap<Object, Double>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      int int0 = jSONObject0.optInt("Jq33Dr.e7<h(w", (-424));
      assertEquals((-424), int0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.551051583822962
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject((Object) "#WK1[1Vuw");
      int int0 = jSONObject0.optInt("null", 60);
      assertEquals(60, int0);
      assertEquals(3, jSONObject0.length());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      int int0 = jSONObject0.optInt((String) null);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      double double0 = jSONObject0.optDouble("isvalueOf", 1.0);
      assertEquals(1.0, double0, 0.01);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      double double0 = jSONObject0.optDouble(",^G3", (-605.1219988061));
      assertEquals((-605.1219988061), double0, 0.01);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.3097558619082146
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Byte byte0 = new Byte((byte)83);
      JSONObject jSONObject0 = new JSONObject(byte0);
      double double0 = jSONObject0.optDouble((String) null, 0.0);
      assertEquals(0.0, double0, 0.01);
      assertEquals(1, jSONObject0.length());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      double double0 = jSONObject0.optDouble((String) null);
      assertEquals(Double.NaN, double0, 0.01);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      double double0 = jSONObject0.optDouble("");
      assertEquals(Double.NaN, double0, 0.01);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      HashMap<Integer, Long> hashMap0 = new HashMap<Integer, Long>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      boolean boolean0 = jSONObject0.optBoolean((String) null, true);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      Object object0 = jSONObject0.opt("Iitu3t*5#R\"");
      assertNull(object0);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      HashMap<Double, Float> hashMap0 = new HashMap<Double, Float>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      Object object0 = jSONObject0.opt("");
      assertNull(object0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.6829081047004717
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Double double0 = new Double(0.0);
      String string0 = JSONObject.numberToString(double0);
      assertNotNull(string0);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      boolean boolean0 = jSONObject0.isNull("{\"java.lang.String@0000000003\": java.lang.Boolean@0000000006}");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      boolean boolean0 = jSONObject0.has("co");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      try { 
        jSONObject0.getString((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.488507861129921
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Byte byte0 = new Byte((byte)1);
      JSONObject jSONObject0 = new JSONObject(byte0);
      try { 
        jSONObject0.getString("zFE}muCX87");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"zFE}muCX87\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.0116009116784799
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Float float0 = new Float((-207.57F));
      String[] stringArray0 = new String[4];
      JSONObject jSONObject0 = new JSONObject(float0, stringArray0);
      try { 
        jSONObject0.getLong("isformat");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"isformat\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.4821693083585323
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject((Object) "#WK1[1Vuw");
      try { 
        jSONObject0.getJSONObject((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      try { 
        jSONObject0.getJSONArray((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      try { 
        jSONObject0.getJSONArray("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      try { 
        jSONObject0.getInt((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      try { 
        jSONObject0.getDouble((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject((Map) null);
      try { 
        jSONObject0.getDouble("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String[] stringArray0 = new String[7];
      try { 
        jSONObject0.getBoolean(stringArray0[0]);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      try { 
        jSONObject0.get((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      try { 
        jSONObject0.get("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      String string0 = JSONObject.doubleToString(0.0);
      assertEquals("0", string0);
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.4750763110546947
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      Byte byte0 = new Byte((byte) (-23));
      try { 
        jSONObject0.append((String) null, byte0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.6861635740111958
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.putOpt("vcD%{3_`", jSONObject0);
      // Undeclared exception!
      jSONObject0.toString(799, 799);
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.7677281666160183
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.putOpt("vcD%{3_`", jSONObject0);
      // Undeclared exception!
      jSONObject0.toString(59);
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      try { 
        jSONObject0.put((String) null, false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray();
      String[] stringArray0 = new String[5];
      JSONObject jSONObject0 = new JSONObject(jSONArray0, stringArray0);
      HashMap<Float, Boolean> hashMap0 = new HashMap<Float, Boolean>();
      try { 
        jSONObject0.put((String) null, (Map) hashMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.1428074196753928
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject((Object) "#WK1[1Vuw");
      LinkedList<String> linkedList0 = new LinkedList<String>();
      try { 
        jSONObject0.put((String) null, (Collection) linkedList0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      try { 
        jSONObject0.put((String) null, (-240));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      // Undeclared exception!
      try { 
        JSONObject.getNames((JSONObject) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.469483727358999
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject((Object) "#WK1[1Vuw");
      try { 
        jSONObject0.getInt("istoUnsignedString");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"istoUnsignedString\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.469483727358999
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject((Object) "#WK1[1Vuw");
      try { 
        jSONObject0.getDouble("(4I2?x{");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"(4I2?x{\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=0.7776612957621659
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      try { 
        jSONObject0.getBoolean("Bad value from toJSONString: ");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"Bad value from toJSONString: \"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener((String) null);
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject(jSONTokener0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      String[] stringArray0 = new String[8];
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject((JSONObject) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject("wheel.json.JSONException");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must begin with '{' at character 1 of wheel.json.JSONException
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      String[] stringArray0 = new String[0];
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject((Object) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.4849258911092231
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      HashMap<Double, Float> hashMap0 = new HashMap<Double, Float>();
      jSONObject0.put("", (Map) hashMap0);
      StringWriter stringWriter0 = new StringWriter();
      Writer writer0 = jSONObject0.write(stringWriter0);
      assertSame(stringWriter0, writer0);
  }

  /**
  //Test case number: 87
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      String string0 = JSONObject.valueToString(object0, 0, 0);
      assertEquals("null", string0);
  }

  /**
  //Test case number: 88
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      String string0 = JSONObject.valueToString((Object) null, (-1718), (-1718));
      assertEquals("null", string0);
  }

  /**
  //Test case number: 89
  /*Coverage entropy=0.8855741515766717
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      HashMap<Object, JSONObject> hashMap0 = new HashMap<Object, JSONObject>();
      String string0 = JSONObject.valueToString(hashMap0);
      assertNotNull(string0);
      assertEquals("{}", string0);
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.2677946372884996
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject((Object) "#WK1[1Vuw");
      JSONObject.valueToString(jSONObject0);
      assertEquals(3, jSONObject0.length());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      String string0 = JSONObject.valueToString(object0);
      assertEquals("null", string0);
  }

  /**
  //Test case number: 92
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      String string0 = JSONObject.valueToString((Object) null);
      assertEquals("null", string0);
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.806426029973026
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Float float0 = new Float((-207.57F));
      String[] stringArray0 = new String[4];
      JSONObject jSONObject0 = new JSONObject(float0, stringArray0);
      jSONObject0.append("yz7)", "9 4T`lHE\"sM\"L");
      String string0 = jSONObject0.toString(724, 724);
      assertNotNull(string0);
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.6867831479680375
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject((Object) "");
      String string0 = jSONObject0.toString();
      assertNotNull(string0);
      assertEquals(3, jSONObject0.length());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.794917310517627
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      Short short0 = new Short((short)1017);
      jSONObject0.putOpt("joi", short0);
      String string0 = jSONObject0.toString();
      assertNotNull(string0);
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.4451858789480827
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray();
      JSONArray jSONArray1 = jSONArray0.put((-99.1682709062));
      String[] stringArray0 = new String[4];
      JSONObject jSONObject0 = new JSONObject("9 4T`lHE\"sM\"L", stringArray0);
      JSONArray jSONArray2 = jSONObject0.toJSONArray(jSONArray1);
      assertNotNull(jSONArray2);
      assertEquals(1, jSONArray2.length());
      assertNotSame(jSONArray2, jSONArray1);
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.167723997949895
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray();
      JSONObject jSONObject0 = new JSONObject((Object) "#WK1[1Vuw");
      JSONArray jSONArray1 = jSONObject0.toJSONArray(jSONArray0);
      assertNull(jSONArray1);
      assertEquals(3, jSONObject0.length());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.1648729119013703
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Byte byte0 = new Byte((byte)83);
      JSONObject jSONObject0 = new JSONObject(byte0);
      jSONObject0.toJSONArray((JSONArray) null);
      assertEquals(1, jSONObject0.length());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=0.9433483923290391
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Float float0 = new Float(Double.NaN);
      try { 
        JSONObject.valueToString(float0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSON does not allow non-finite numbers.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 100
  /*Coverage entropy=1.2130075659799042
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      try { 
        jSONObject0.put("JSONObject[", Double.NaN);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSON does not allow non-finite numbers.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 101
  /*Coverage entropy=1.4270610433807247
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = jSONObject0.append("PuX6'lb|`e&W(_", (Object) null);
      assertSame(jSONObject1, jSONObject0);
  }

  /**
  //Test case number: 102
  /*Coverage entropy=0.7776612957621659
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      try { 
        jSONObject0.getJSONArray("!QfN;y-*}RN;%A");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"!QfN;y-*}RN;%A\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 103
  /*Coverage entropy=1.4375503412075572
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Double double0 = new Double(0.0);
      JSONObject jSONObject0 = new JSONObject(double0);
      try { 
        jSONObject0.getJSONObject(",\n");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\",\\n\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 104
  /*Coverage entropy=1.4821693083585323
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject((Object) "#WK1[1Vuw");
      try { 
        jSONObject0.getLong((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 105
  /*Coverage entropy=1.3208883431493221
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      JSONObject jSONObject1 = new JSONObject(jSONObject0, stringArray0);
      assertFalse(jSONObject1.equals((Object)jSONObject0));
  }

  /**
  //Test case number: 106
  /*Coverage entropy=1.0587872171855681
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Byte byte0 = new Byte((byte)59);
      JSONObject jSONObject0 = new JSONObject(byte0);
      try { 
        jSONObject0.put((String) null, (Object) "YvU>tP*Y0?Zz");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 107
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.put("JSONObject[", "JSONObject[");
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      String string0 = jSONObject0.optString("JSONObject[");
      assertNotNull(string0);
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Float float0 = new Float((-207.57F));
      String[] stringArray0 = new String[4];
      JSONObject jSONObject0 = new JSONObject(float0, stringArray0);
      JSONObject jSONObject1 = jSONObject0.optJSONObject(".");
      assertNull(jSONObject1);
  }

  /**
  //Test case number: 109
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONArray jSONArray0 = jSONObject0.optJSONArray("");
      assertNull(jSONArray0);
  }

  /**
  //Test case number: 110
  /*Coverage entropy=1.0851886129676505
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Float float0 = new Float((double) (-1718));
      String string0 = JSONObject.valueToString(float0, 523, 91);
      assertNotNull(string0);
  }

  /**
  //Test case number: 111
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      try { 
        JSONObject.numberToString((Number) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null pointer
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 112
  /*Coverage entropy=0.9502705392332347
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.put("JSONObject[", "JSONObject[");
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      JSONArray jSONArray0 = jSONObject0.names();
      assertEquals(1, jSONArray0.length());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONArray jSONArray0 = jSONObject0.names();
      assertNull(jSONArray0);
  }

  /**
  //Test case number: 114
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Object object0 = new Object();
      String[] stringArray0 = JSONObject.getNames(object0);
      assertNull(stringArray0);
  }

  /**
  //Test case number: 115
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      String[] stringArray0 = JSONObject.getNames((Object) null);
      assertNull(stringArray0);
  }

  /**
  //Test case number: 116
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      String[] stringArray0 = new String[4];
      JSONObject jSONObject0 = new JSONObject("9 4T`lHE\"sM\"L", stringArray0);
      String[] stringArray1 = JSONObject.getNames(jSONObject0);
      assertNull(stringArray1);
  }

  /**
  //Test case number: 117
  /*Coverage entropy=1.4562909245092568
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject((Object) "#WK1[1Vuw");
      String[] stringArray0 = JSONObject.getNames(jSONObject0);
      assertEquals(3, jSONObject0.length());
      assertNotNull(stringArray0);
      assertEquals(3, stringArray0.length);
  }

  /**
  //Test case number: 118
  /*Coverage entropy=1.7677614722893296
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      JSONObject jSONObject1 = jSONObject0.put("", 0.0);
      long long0 = jSONObject1.getLong("");
      assertEquals(0L, long0);
  }

  /**
  //Test case number: 119
  /*Coverage entropy=2.21106887114461
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = jSONObject0.accumulate("", "");
      long long0 = jSONObject1.optLong("", (-6L));
      assertEquals(1, jSONObject0.length());
      assertEquals((-6L), long0);
  }

  /**
  //Test case number: 120
  /*Coverage entropy=1.9722469794234416
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      HashMap<Double, Float> hashMap0 = new HashMap<Double, Float>();
      jSONObject0.put("", (Map) hashMap0);
      JSONObject jSONObject1 = jSONObject0.getJSONObject("");
      assertEquals(0, jSONObject1.length());
  }

  /**
  //Test case number: 121
  /*Coverage entropy=1.4280648236309732
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Float float0 = new Float((-207.57F));
      String[] stringArray0 = new String[4];
      JSONObject jSONObject0 = new JSONObject(float0, stringArray0);
      JSONObject jSONObject1 = jSONObject0.put("getoptString", (Object) "9 4T`lHE\"sM\"L");
      try { 
        jSONObject1.getJSONObject("getoptString");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"getoptString\"] is not a JSONObject.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 122
  /*Coverage entropy=1.8343719702816235
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.append(")$[5]", "");
      JSONArray jSONArray0 = jSONObject0.getJSONArray(")$[5]");
      assertEquals(1, jSONArray0.length());
  }

  /**
  //Test case number: 123
  /*Coverage entropy=1.4280648236309732
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      Set<Map.Entry<String, String>> set0 = (Set<Map.Entry<String, String>>)hashMap0.entrySet();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      JSONObject jSONObject1 = jSONObject0.putOpt("0aOE5fj", set0);
      try { 
        jSONObject1.getJSONArray("0aOE5fj");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"0aOE5fj\"] is not a JSONArray.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 124
  /*Coverage entropy=1.5600040073151407
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject((Object) "#WK1[1Vuw");
      Double double0 = new Double((-700.0));
      jSONObject0.putOpt("", double0);
      jSONObject0.getInt("");
      assertEquals(4, jSONObject0.length());
  }

  /**
  //Test case number: 125
  /*Coverage entropy=1.6761389064361045
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.put("Xr2uy 4x", true);
      int int0 = jSONObject0.optInt("Xr2uy 4x");
      assertEquals(1, jSONObject0.length());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 126
  /*Coverage entropy=1.9862665178647392
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.accumulate("", "");
      boolean boolean0 = jSONObject0.optBoolean("", false);
      assertEquals(1, jSONObject0.length());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 127
  /*Coverage entropy=2.0947290475276494
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.put("", false);
      boolean boolean0 = jSONObject0.optBoolean("");
      assertEquals(1, jSONObject0.length());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 128
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      String string0 = JSONObject.doubleToString((-394.3026));
      assertEquals("-394.3026", string0);
  }

  /**
  //Test case number: 129
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      String string0 = JSONObject.doubleToString(Double.NaN);
      assertEquals("null", string0);
  }

  /**
  //Test case number: 130
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      String string0 = JSONObject.doubleToString(1904.0);
      assertEquals("1904", string0);
  }

  /**
  //Test case number: 131
  /*Coverage entropy=1.5229550675313184
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.put("", (Object) "#WK1[1Vuw");
      try { 
        jSONObject0.append("", jSONObject0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[] is not a JSONArray.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 132
  /*Coverage entropy=1.5229550675313184
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.accumulate(",", jSONObject0);
      assertEquals(1, jSONObject0.length());
  }

  /**
  //Test case number: 133
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject((Map) null);
      boolean boolean0 = jSONObject0.optBoolean((String) null);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 134
  /*Coverage entropy=0.410116318288409
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("{O-dh");
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject(jSONTokener0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Expected a ':' after a key at character 5 of {O-dh
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 135
  /*Coverage entropy=1.8392629672726302
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      Object object0 = JSONObject.NULL;
      JSONObject jSONObject1 = jSONObject0.putOpt("wheel.json.JSONException", object0);
      boolean boolean0 = jSONObject1.optBoolean("wheel.json.JSONException");
      assertEquals(1, jSONObject0.length());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 136
  /*Coverage entropy=1.9061547465398496
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      int int0 = jSONObject0.optInt("");
      assertEquals(0, int0);
  }

  /**
  //Test case number: 137
  /*Coverage entropy=1.6528388233121019
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      Byte byte0 = new Byte((byte)83);
      JSONObject jSONObject0 = new JSONObject(byte0);
      long long0 = jSONObject0.optLong("sho");
      assertEquals(1, jSONObject0.length());
      assertEquals(0L, long0);
  }

  /**
  //Test case number: 138
  /*Coverage entropy=1.5002692973717837
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject((Object) "#WK1[1Vuw");
      boolean boolean0 = jSONObject0.optBoolean("S!/T/*y", true);
      assertTrue(boolean0);
      assertEquals(3, jSONObject0.length());
  }

  /**
  //Test case number: 139
  /*Coverage entropy=1.3625664136253977
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject((Object) "#WK1[1Vuw");
      boolean boolean0 = jSONObject0.isNull("");
      assertTrue(boolean0);
      assertEquals(3, jSONObject0.length());
  }

  /**
  //Test case number: 140
  /*Coverage entropy=0.8675632284814612
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject("{}");
      assertEquals(0, jSONObject0.length());
  }

  /**
  //Test case number: 141
  /*Coverage entropy=1.8228804629889481
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject((Object) "#WK1[1Vuw");
      StringWriter stringWriter0 = new StringWriter();
      jSONObject0.write(stringWriter0);
      assertEquals(3, jSONObject0.length());
  }

  /**
  //Test case number: 142
  /*Coverage entropy=1.2130075659799042
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.put("Bad value from toJSONString: ", (double) (short)1017);
      assertEquals(1, jSONObject0.length());
  }

  /**
  //Test case number: 143
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      Object object0 = jSONObject0.remove("\t");
      assertNull(object0);
  }

  /**
  //Test case number: 144
  /*Coverage entropy=1.094408629847781
  */
  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject((Object) "#WK1[1Vuw");
      jSONObject0.put("Geto", 0L);
      assertEquals(4, jSONObject0.length());
  }

  /**
  //Test case number: 145
  /*Coverage entropy=1.8835205291162307
  */
  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject((Object) "#WK1[1Vuw");
      LinkedList<String> linkedList0 = new LinkedList<String>();
      JSONObject jSONObject1 = jSONObject0.put("eRnO[sI2q@", (Collection) linkedList0);
      StringWriter stringWriter0 = new StringWriter();
      jSONObject1.write(stringWriter0);
      assertEquals(4, jSONObject0.length());
  }

  /**
  //Test case number: 146
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      double double0 = jSONObject0.optDouble("-\"JH:L N9");
      assertEquals(Double.NaN, double0, 0.01);
  }

  /**
  //Test case number: 147
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      boolean boolean0 = jSONObject0.has((String) null);
      assertFalse(boolean0);
  }
}
