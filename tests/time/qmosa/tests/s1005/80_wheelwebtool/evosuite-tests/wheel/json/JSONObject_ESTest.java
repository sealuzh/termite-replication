/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 17:35:38 GMT 2019
 */

package wheel.json;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.StringWriter;
import java.io.Writer;
import java.util.Collection;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.Map;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.json.JSONArray;
import wheel.json.JSONObject;
import wheel.json.JSONTokener;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JSONObject_ESTest extends JSONObject_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.2288204732610413
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = jSONObject0.put("] is not a Boolean.", (-794));
      JSONObject jSONObject2 = jSONObject1.put("] is not a Boolean.", false);
      JSONObject jSONObject3 = jSONObject2.put("] is not a Boolean.", 0.0);
      Object object0 = jSONObject0.get("] is not a Boolean.");
      Double.max((-794), 1257.20641763741);
      jSONObject0.toString(4);
      String[] stringArray0 = JSONObject.getNames(object0);
      HashMap<Integer, Integer> hashMap0 = new HashMap<Integer, Integer>();
      JSONObject jSONObject4 = new JSONObject((Map) hashMap0);
      Double.sum((-794), 4);
      jSONObject4.optDouble("");
      Integer integer0 = new Integer(4);
      jSONObject3.toString(59);
      jSONObject3.optInt("Hlk')~1eZ]SAFx1=a");
      Long long0 = new Long((-5288L));
      JSONObject jSONObject5 = new JSONObject(jSONObject1, stringArray0);
      JSONObject jSONObject6 = jSONObject4.put("{\"java.lang.String@0000000002\": java.lang.Double@0000000005}", (Object) jSONObject5);
      Double double0 = new Double(0.0);
      try { 
        jSONObject6.getLong("{\"java.lang.String@0000000002\": java.lang.Double@0000000005}");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"{\\\"java.lang.String@0000000002\\\": java.lang.Double@0000000005}\"] is not a number.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.348746977826932
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Double double0 = new Double((-394.3026));
      JSONObject jSONObject0 = new JSONObject();
      LinkedList<Short> linkedList0 = new LinkedList<Short>();
      jSONObject0.put("ismax", (Collection) linkedList0);
      jSONObject0.accumulate("", "");
      assertEquals(2, jSONObject0.length());
      
      LinkedList<String> linkedList1 = new LinkedList<String>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList1);
      HashMap<JSONArray, Object> hashMap0 = new HashMap<JSONArray, Object>();
      Boolean.valueOf(true);
      Object object0 = JSONObject.NULL;
      hashMap0.put(jSONArray0, object0);
      LinkedList<Object> linkedList2 = new LinkedList<Object>();
      Long long0 = new Long((-1400L));
      linkedList2.add((Object) long0);
      JSONObject.quote("");
      JSONObject jSONObject1 = new JSONObject((Map) hashMap0);
      jSONObject1.isNull("to");
      jSONObject1.length();
      jSONObject1.optLong("kL\"98-47{6q", 0L);
      assertEquals(1, jSONObject1.length());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.9236348607016178
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Double double0 = new Double((-394.3026));
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.toString((-602));
      HashMap<Double, Long> hashMap0 = new HashMap<Double, Long>();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      JSONTokener jSONTokener0 = new JSONTokener("{}");
      JSONObject jSONObject1 = new JSONObject(jSONTokener0);
      try { 
        jSONObject1.getString("va");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"va\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.0364788089358186
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = jSONObject0.put("] is not a Boolean.", (-794));
      JSONObject jSONObject2 = jSONObject1.put("] is not a Boolean.", false);
      JSONObject jSONObject3 = jSONObject2.put("] is not a Boolean.", 0.0);
      Object object0 = jSONObject0.get("] is not a Boolean.");
      Object object1 = jSONObject2.remove("] is not a Boolean.");
      assertEquals(0.0, object1);
      
      Double.max((-794), 1257.20641763741);
      jSONObject0.toString(4);
      String[] stringArray0 = JSONObject.getNames(object0);
      assertNotNull(stringArray0);
      
      HashMap<Integer, Integer> hashMap0 = new HashMap<Integer, Integer>();
      JSONObject jSONObject4 = new JSONObject((Map) hashMap0);
      Double.sum((-794), 4);
      double double0 = jSONObject4.optDouble("");
      assertEquals(Double.NaN, double0, 0.01);
      
      Integer integer0 = new Integer(4);
      String string0 = jSONObject3.toString(59);
      assertEquals("{}", string0);
      
      int int0 = jSONObject3.optInt("Hlk')~1eZ]SAFx1=a");
      assertEquals(0, int0);
      
      Long long0 = new Long((-5288L));
      JSONObject jSONObject5 = new JSONObject(jSONObject1, stringArray0);
      jSONObject4.put("{}", (Object) jSONObject5);
      assertEquals(11, stringArray0.length);
      
      jSONObject3.opt("pd");
      String string1 = JSONObject.quote("{}");
      assertEquals("\"{}\"", string1);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.9648367222236796
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Double double0 = new Double((-394.3026));
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = jSONObject0.accumulate("", "");
      LinkedList<String> linkedList0 = new LinkedList<String>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      HashMap<JSONArray, Object> hashMap0 = new HashMap<JSONArray, Object>();
      Boolean.valueOf(true);
      Object object0 = JSONObject.NULL;
      hashMap0.put(jSONArray0, object0);
      JSONObject.quote("");
      JSONObject jSONObject2 = new JSONObject((Map) hashMap0);
      jSONObject1.isNull("");
      jSONObject2.length();
      jSONObject1.has("");
      try { 
        jSONObject2.getInt("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.392717401081337
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      Double double0 = new Double((-3165.479895927546));
      JSONObject.testValidity(double0);
      JSONObject.quote("'/)vi$b7t}+vG_Nl`");
      Float float0 = new Float(0.0);
      Float.sum((-1602.8583F), (-1602.8583F));
      Boolean boolean0 = new Boolean(false);
      JSONObject.valueToString(boolean0, (-1715), 82);
      JSONObject jSONObject1 = new JSONObject((Object) "");
      Long long0 = new Long(523);
      JSONObject jSONObject2 = new JSONObject();
      jSONObject2.putOpt((String) null, jSONObject1);
      jSONObject1.toString(37);
      Byte byte0 = new Byte((byte) (-38));
      JSONObject.testValidity("java.lang.Boolean@0000000002");
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.518351837463467
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Double double0 = new Double(0.0);
      JSONObject.testValidity("{U|0");
      JSONObject.quote("@&a-3@3<@TSF");
      Float float0 = new Float(0.0);
      Float.sum(0.0F, 0.0F);
      Boolean boolean0 = new Boolean(false);
      JSONObject.valueToString("{", (-1715), 523);
      JSONObject jSONObject0 = new JSONObject(boolean0);
      StringWriter stringWriter0 = new StringWriter(92);
      stringWriter0.append('L');
      jSONObject0.write(stringWriter0);
      String string0 = "Missing value";
      try { 
        jSONObject0.getString("Missing value");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"Missing value\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.9726101970548617
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = jSONObject0.put("] is not a Boolean.", (-791));
      JSONObject jSONObject2 = jSONObject1.put("] is not a Boolean.", false);
      JSONObject jSONObject3 = jSONObject2.put("] is not a Boolean.", 0.0);
      jSONObject0.get("] is not a Boolean.");
      Double.max((-791), 1257.20641763741);
      HashMap<JSONObject, Boolean> hashMap0 = new HashMap<JSONObject, Boolean>();
      JSONObject jSONObject4 = new JSONObject((Map) hashMap0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "] is not a Boolean.";
      jSONObject0.optDouble("] is not a Boolean.");
      Integer integer0 = new Integer((-791));
      int int0 = 31;
      jSONObject3.toString(31);
      jSONObject3.optInt("] is not a Boolean.");
      try { 
        Long.valueOf("{\"java.lang.String@0000000002\": java.lang.Double@0000000005}");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"{\"java.lang.String@0000000002\": java.lang.Double@0000000005}\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.114633960455645
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      JSONObject.valueToString("Expected a ':' after a key", 24, 24);
      Long long0 = new Long((-1L));
      String[] stringArray0 = new String[4];
      stringArray0[0] = "\"java.lang.String@0000000001\"";
      String string0 = "[zGd*Rz)v~Kk=.";
      stringArray0[1] = "[zGd*Rz)v~Kk=.";
      stringArray0[2] = "Expected a ':' after a key";
      stringArray0[3] = "Expected a ':' after a key";
      JSONObject jSONObject0 = new JSONObject(long0, stringArray0);
      jSONObject0.optLong("[zGd*Rz)v~Kk=.");
      double double0 = (-1666.15);
      jSONObject0.optDouble((String) null, (-1666.15));
      JSONTokener jSONTokener0 = new JSONTokener("\"java.lang.String@0000000001\"");
      JSONArray jSONArray0 = null;
      try {
        jSONArray0 = new JSONArray(jSONTokener0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONArray text must start with '[' at character 1 of \"java.lang.String@0000000001\"
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.8733084968679945
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = jSONObject0.put("] is not a Boolean.", (-791));
      JSONObject jSONObject2 = jSONObject1.put("] is not a Boolean.", false);
      jSONObject2.put("] is not a Boolean.", 0.0);
      jSONObject0.get("] is not a Boolean.");
      Double.max((-791), 1257.20641763741);
      HashMap<JSONObject, Boolean> hashMap0 = new HashMap<JSONObject, Boolean>();
      JSONObject jSONObject3 = new JSONObject((Map) hashMap0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "] is not a Boolean.";
      stringArray0[1] = "] is not a Boolean.";
      JSONObject jSONObject4 = new JSONObject(jSONObject3, stringArray0);
      Long long0 = new Long(1862);
      jSONObject2.putOpt("gettoHexString", long0);
      jSONObject1.toString((-791));
      Object object0 = new Object();
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.toString((-602));
      HashMap<Double, Long> hashMap0 = new HashMap<Double, Long>();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      Object object0 = new Object();
      try { 
        jSONObject0.put((String) null, (double) (-602));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.1356219397587948
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String string0 = "{U|0";
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject("{U|0");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Expected a ':' after a key at character 4 of {U|0
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.6709837360438047
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.entrySet();
      hashMap0.put("JSONObject[", "JSONObject[");
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      jSONObject0.names();
      assertEquals(1, jSONObject0.length());
      
      Double double0 = new Double(3113.748565661);
      JSONObject jSONObject1 = jSONObject0.put("JSONObject[", (Object) null);
      jSONObject1.optDouble("1yqm^;3q|g\"7FK_", Double.NaN);
      jSONObject0.optString("?^*r+6=ex8'm", (String) null);
      JSONObject.valueToString(hashMap0);
      jSONObject0.keys();
      jSONObject0.optBoolean("JSONObject[");
      JSONObject.quote((String) null);
      HashMap<Byte, Long> hashMap1 = new HashMap<Byte, Long>();
      Byte byte0 = new Byte((byte)93);
      Long long0 = new Long(18L);
      Byte byte1 = new Byte((byte)23);
      Long long1 = new Long(0L);
      hashMap1.put(byte1, long1);
      Long long2 = new Long(18L);
      int int0 = jSONObject0.optInt((String) null, (int) (byte)23);
      assertEquals(0, jSONObject0.length());
      assertEquals(23, int0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.85524404635847
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.entrySet();
      hashMap0.put("JSONObject[", "JSONObject[");
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      jSONObject0.names();
      Double double0 = new Double(3113.748565661);
      JSONObject jSONObject1 = jSONObject0.put("JSONObject[", (Object) null);
      jSONObject1.optDouble("1yqm^;3q|g\"7FK_", Double.NaN);
      jSONObject0.optString("?^*r+6=ex8'm", (String) null);
      JSONObject.valueToString(hashMap0);
      jSONObject0.keys();
      jSONObject0.optBoolean("JSONObject[");
      hashMap0.put("!P5{lM6{;7r:YcY:`", "Y4");
      jSONObject0.has("Y4");
      jSONObject0.optDouble("L7sG+{QvJ<L", (-1564.05967264729));
      JSONObject.doubleToString(3113.748565661);
      JSONObject.getNames(jSONObject0);
      jSONObject0.optDouble("OE_2", Double.NaN);
      assertEquals(0, jSONObject0.length());
      
      JSONObject.getNames((Object) null);
      String string0 = JSONObject.valueToString((Object) null);
      assertEquals("null", string0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.8163966762338446
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      Set<Map.Entry<String, String>> set0 = (Set<Map.Entry<String, String>>)hashMap0.entrySet();
      hashMap0.put("JSONObject[", "JSONObject[");
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      String string0 = "W^WPWzU\\s^";
      hashMap0.put("] is not a number.", "W^WPWzUs^");
      JSONObject.getNames((Object) set0);
      jSONObject0.optDouble((String) null);
      jSONObject0.optString("");
      JSONObject jSONObject1 = jSONObject0.putOpt("0aOE5fj", set0);
      JSONObject.quote((String) null);
      JSONObject.getNames(jSONObject0);
      jSONObject1.optBoolean((String) null, true);
      try { 
        jSONObject1.getJSONArray("0aOE5fj");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"0aOE5fj\"] is not a JSONArray.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.3913876544277937
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Double double0 = new Double((-394.3026));
      JSONObject.testValidity(double0);
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = jSONObject0.accumulate("", "");
      String string0 = "Z#6/Zw>]L<6)dugmQu";
      jSONObject1.optBoolean("Z#6/Zw>]L<6)dugmQu", true);
      JSONObject.valueToString(double0, 1, 1);
      try { 
        jSONObject0.getBoolean("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] is not a Boolean.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.019770647980608
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Double double0 = new Double((-394.3026));
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = jSONObject0.accumulate("", "");
      LinkedList<String> linkedList0 = new LinkedList<String>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      HashMap<JSONArray, Object> hashMap0 = new HashMap<JSONArray, Object>();
      Boolean.valueOf(true);
      Object object0 = JSONObject.NULL;
      Object object1 = JSONObject.NULL;
      JSONObject.valueToString(object1);
      JSONObject.getNames(jSONObject1);
      assertEquals(1, jSONObject0.length());
      
      jSONObject1.put("", (-2782L));
      jSONObject1.length();
      long long0 = jSONObject0.optLong("", (-2782L));
      assertEquals((-2782L), long0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.1058175031230464
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Double double0 = new Double((-394.3026));
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = jSONObject0.accumulate("", "");
      LinkedList<String> linkedList0 = new LinkedList<String>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      HashMap<JSONArray, Object> hashMap0 = new HashMap<JSONArray, Object>();
      Boolean.valueOf(true);
      Object object0 = JSONObject.NULL;
      hashMap0.put(jSONArray0, object0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      stringArray0[1] = "4N";
      jSONObject0.getString("");
      JSONObject jSONObject2 = new JSONObject(jSONObject0, stringArray0);
      JSONObject jSONObject3 = new JSONObject((Map) hashMap0);
      jSONObject3.optBoolean("");
      try { 
        jSONObject1.getJSONObject("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] is not a JSONObject.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.224743820397637
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      String string0 = "JSONObject[";
      hashMap0.entrySet();
      hashMap0.put("JSONObject[", "JSONObject[");
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      JSONArray jSONArray0 = new JSONArray();
      jSONArray0.optJSONObject(35);
      JSONObject jSONObject1 = jSONObject0.accumulate("", (Object) null);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      JSONArray jSONArray1 = new JSONArray((Collection) linkedList0);
      HashMap<JSONArray, Object> hashMap1 = new HashMap<JSONArray, Object>();
      Boolean.valueOf(false);
      Object object0 = JSONObject.NULL;
      Double double0 = new Double((-806.881747701));
      hashMap1.put(jSONArray0, double0);
      JSONObject.quote("getnumberToString");
      JSONObject jSONObject2 = new JSONObject((Map) hashMap1);
      jSONObject1.isNull("getnumberToString");
      jSONObject2.length();
      JSONTokener jSONTokener0 = new JSONTokener("getnumberToString");
      JSONObject jSONObject3 = null;
      try {
        jSONObject3 = new JSONObject(jSONTokener0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must begin with '{' at character 1 of getnumberToString
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.766973708492349
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = jSONObject0.put("] is not a Boolean.", (-794));
      JSONObject jSONObject2 = jSONObject1.put("] is not a Boolean.", false);
      JSONObject jSONObject3 = jSONObject2.put("] is not a Boolean.", 0.0);
      jSONObject0.get("] is not a Boolean.");
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      jSONObject3.accumulate("] is not a Boolean.", jSONArray0);
      String[] stringArray0 = new String[0];
      JSONObject jSONObject4 = new JSONObject(jSONObject0, stringArray0);
      String string0 = jSONObject2.toString((-1));
      assertNotNull(string0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.815022337567891
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.entrySet();
      hashMap0.put("JSONObject[", "JSONObject[");
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      jSONObject0.names();
      Double double0 = new Double(3113.748565661);
      JSONObject jSONObject1 = jSONObject0.put("JSONObject[", (Object) null);
      jSONObject1.optDouble("1yqm^;3q|g\"7FK_", Double.NaN);
      jSONObject0.optString("?^*r+6=ex8'm", (String) null);
      JSONObject.valueToString(hashMap0);
      jSONObject0.keys();
      jSONObject0.optBoolean("JSONObject[");
      String[] stringArray0 = new String[8];
      stringArray0[0] = "Y4";
      stringArray0[1] = null;
      stringArray0[2] = null;
      stringArray0[3] = "Y4";
      stringArray0[4] = "1yqm^;3q|g\"7FK_";
      stringArray0[5] = "?^*r+6=ex8'm";
      stringArray0[6] = "?^*r+6=ex8'm";
      stringArray0[7] = null;
      JSONObject jSONObject2 = new JSONObject(jSONObject1, stringArray0);
      // Undeclared exception!
      try { 
        jSONObject2.write((Writer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.8299341714698483
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.toString((-602));
      HashMap<Double, Long> hashMap0 = new HashMap<Double, Long>();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      Boolean boolean0 = new Boolean("{}");
      jSONObject0.accumulate("si", (Object) null);
      JSONObject jSONObject1 = null;
      try {
        jSONObject1 = new JSONObject("C729z4<`Gz(");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must begin with '{' at character 1 of C729z4<`Gz(
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.149919149661047
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Double double0 = new Double((-394.3026));
      JSONObject jSONObject0 = new JSONObject();
      String string0 = "";
      JSONObject jSONObject1 = jSONObject0.accumulate("", "");
      String string1 = "";
      LinkedList<String> linkedList0 = new LinkedList<String>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      HashMap<JSONArray, Object> hashMap0 = new HashMap<JSONArray, Object>();
      Boolean.valueOf(true);
      Object object0 = JSONObject.NULL;
      hashMap0.put(jSONArray0, object0);
      try { 
        jSONObject1.append("", (Object) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[] is not a JSONArray.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.3087611329154805
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String string0 = "] is not a Boolean.";
      JSONObject jSONObject1 = jSONObject0.put("] is not a Boolean.", false);
      JSONObject jSONObject2 = jSONObject1.put("] is not a Boolean.", 0.0);
      jSONObject1.optBoolean("] is not a Boolean.", false);
      jSONObject0.get("] is not a Boolean.");
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      jSONObject2.accumulate("] is not a Boolean.", jSONArray0);
      String string1 = "";
      String[] stringArray0 = new String[8];
      stringArray0[0] = "] is not a Boolean.";
      try { 
        jSONArray0.getBoolean(8);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONArray[8] not found.
         //
         verifyException("wheel.json.JSONArray", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.5813758486724776
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.toString((-660));
      int int0 = (-989);
      JSONObject.quote("{}");
      Boolean boolean0 = Boolean.valueOf("F7t)5=bwU");
      JSONObject.getNames((Object) boolean0);
      jSONObject0.optDouble("");
      jSONObject0.optString("\"{}\"");
      Integer integer0 = new Integer(787);
      JSONObject jSONObject1 = jSONObject0.putOpt((String) null, integer0);
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.put("] is not a JSONArray.", "getvalueOf");
      JSONObject.getNames(jSONObject0);
      jSONObject0.optBoolean("", false);
      String string0 = "wheel.json.JSONTokener";
      try { 
        jSONObject1.getJSONArray("wheel.json.JSONTokener");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"wheel.json.JSONTokener\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.572738843081669
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.entrySet();
      hashMap0.put(":=Di'eh:_z9Zp43", ":=Di'eh:_z9Zp43");
      JSONObject jSONObject1 = new JSONObject((Map) hashMap0);
      hashMap0.put((String) null, "] is not a number.");
      JSONObject.getNames((Object) jSONObject1);
      jSONObject1.optDouble("gettoHexString");
      jSONObject1.optString("gettoHexString");
      JSONObject jSONObject2 = jSONObject0.putOpt("gettoString", (Object) null);
      String string0 = "D:j+z,nFvl*wzB!K";
      hashMap0.put("has", "D:j+z,nFvl*wzB!K");
      JSONObject.getNames(jSONObject2);
      jSONObject2.optBoolean((String) null, true);
      try { 
        jSONObject2.getJSONArray("g&#{$xYD;s");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"g&#{$xYD;s\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.725690686736986
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Double double0 = new Double((-394.3026));
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = jSONObject0.accumulate("", "");
      LinkedList<String> linkedList0 = new LinkedList<String>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      HashMap<JSONArray, Object> hashMap0 = new HashMap<JSONArray, Object>();
      Boolean.valueOf(true);
      Short short0 = new Short((short)1189);
      JSONObject jSONObject2 = new JSONObject(short0);
      jSONObject1.optString("", "] is not a Boolean.");
      JSONObject jSONObject3 = new JSONObject();
      jSONObject3.names();
      jSONObject0.optDouble(">LbR");
      jSONObject0.optJSONObject("");
      JSONObject.getNames(jSONObject1);
      try { 
        jSONArray0.getJSONObject((short)1189);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONArray[1189] not found.
         //
         verifyException("wheel.json.JSONArray", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.2794363344601427
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject.quote("'/)vi$b7t}+vG_Nl`");
      Float float0 = new Float(0.0);
      Float.sum((-1602.8583F), (-1602.8583F));
      Boolean boolean0 = new Boolean(false);
      JSONObject.valueToString(boolean0, (-1715), 82);
      String string0 = "";
      JSONObject jSONObject1 = new JSONObject((Object) "");
      StringWriter stringWriter0 = new StringWriter(523);
      StringWriter stringWriter1 = stringWriter0.append('L');
      jSONObject1.optDouble("", 1767.43171);
      jSONObject0.write(stringWriter1);
      try { 
        jSONObject1.getString("\"'/)vi$b7t}+vG_Nl`\"");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\\\"'/)vi$b7t}+vG_Nl`\\\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.8537138629742436
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      JSONObject.testValidity("\"`f~uBsq>mCMa[4");
      JSONObject.quote("\"`f~uBsq>mCMa[4");
      Float float0 = new Float((double) (-1715));
      Float.sum((-1715), (-1715));
      JSONObject.valueToString(float0, 523, 82);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "\"\"`f~uBsq>mCMa[4\"";
      stringArray0[1] = "";
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.3762116692033977
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Double double0 = new Double((-394.3026));
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = jSONObject0.accumulate("", "");
      LinkedList<String> linkedList0 = new LinkedList<String>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      HashMap<JSONArray, Object> hashMap0 = new HashMap<JSONArray, Object>();
      Boolean.valueOf(true);
      Object object0 = JSONObject.NULL;
      hashMap0.put(jSONArray0, object0);
      JSONObject.quote("");
      JSONObject jSONObject2 = new JSONObject((Map) hashMap0);
      jSONObject1.isNull("");
      jSONObject2.length();
      jSONObject1.has("y837Iv(CP$epQoN|l'U");
      try { 
        jSONObject2.getInt("y837Iv(CP$epQoN|l'U");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"y837Iv(CP$epQoN|l'U\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.9296217656001493
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      String string0 = "JSONObject[";
      hashMap0.entrySet();
      hashMap0.put("JSONObject[", "JSONObject[");
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      jSONObject0.names();
      String string1 = "] is not a number.";
      String string2 = "W^WPWzU\\s^";
      String string3 = "";
      Double.isFinite((-2826.0966340730624));
      int int0 = 13;
      try { 
        jSONObject0.put((String) null, 13);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.8393579695774942
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Long long0 = new Long((-2L));
      String string0 = "T^";
      Long.compare((-2L), (-1L));
      Long.max((-1L), 685L);
      Long.getLong("T^", (-2L));
      JSONObject.numberToString(long0);
      HashMap<Double, JSONObject> hashMap0 = new HashMap<Double, JSONObject>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      jSONObject0.put("T^", (Collection) null);
      HashMap<Byte, Long> hashMap1 = new HashMap<Byte, Long>();
      JSONArray jSONArray0 = null;
      try {
        jSONArray0 = new JSONArray("T^");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONArray text must start with '[' at character 1 of T^
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.185879228128865
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = jSONObject0.put("] is not a Boolean.", (-791));
      JSONObject jSONObject2 = jSONObject1.put("] is not a Boolean.", false);
      jSONObject2.put("] is not a Boolean.", (double) (-791));
      jSONObject0.get("] is not a Boolean.");
      Double.max((-791), 1257.20641763741);
      HashMap<JSONObject, Boolean> hashMap0 = new HashMap<JSONObject, Boolean>();
      JSONObject jSONObject3 = new JSONObject((Map) hashMap0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "] is not a Boolean.";
      Short short0 = new Short((short) (-4666));
      try { 
        jSONObject1.getJSONObject("] is not a Boolean.");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"] is not a Boolean.\"] is not a JSONObject.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.6220322287852307
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "KwRwNt@";
      stringArray0[1] = "KwRwNt@";
      LinkedList<Short> linkedList0 = new LinkedList<Short>();
      JSONArray jSONArray1 = new JSONArray((Collection) linkedList0);
      HashMap<JSONArray, Object> hashMap0 = new HashMap<JSONArray, Object>();
      hashMap0.put(jSONArray1, jSONArray1);
      JSONTokener jSONTokener0 = new JSONTokener("KwRwNt@");
      String string0 = "kM`HE1z]QT\")";
      JSONObject jSONObject0 = new JSONObject(hashMap0, stringArray0);
      jSONObject0.names();
      jSONObject0.optDouble("/$|w}jN");
      jSONObject0.optJSONObject("/$|w}jN");
      // Undeclared exception!
      try { 
        JSONObject.getNames((JSONObject) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.812547336409513
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.names();
      jSONObject0.optBoolean((String) null, true);
      Short short0 = new Short((short) (-1414));
      Short.toUnsignedLong((short) (-1414));
      Short.toUnsignedInt((short) (-1414));
      JSONObject.numberToString(short0);
      String string0 = "f@9}QG\"Jnp#=qpX^D4";
      JSONObject jSONObject1 = jSONObject0.put("f@9}QG\"Jnp#=qpX^D4", (-256.9390863914));
      jSONObject1.optLong("", (long) (short) (-1414));
      jSONObject1.toString();
      try { 
        jSONObject0.put((String) null, false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "KwRwNt@";
      Double.min(Double.NaN, Double.NaN);
      try { 
        JSONObject.numberToString((Number) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null pointer
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.967702179415161
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.entrySet();
      hashMap0.put("JSONObject[", "JSONObject[");
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      jSONObject0.names();
      Double double0 = new Double(3113.748565661);
      JSONObject jSONObject1 = jSONObject0.put("JSONObject[", (Object) null);
      hashMap0.put("Mv[5}}<Z&{$duj", "n8JLoR");
      jSONObject1.optDouble("1yqm^;3q|g\"7FK_", Double.NaN);
      jSONObject0.optString("?^*r+6=ex8'm", (String) null);
      JSONObject.valueToString(hashMap0);
      jSONObject0.keys();
      jSONObject0.optBoolean("JSONObject[");
      hashMap0.put("!P5{lM6{;7r:YcY:`", "Y4");
      jSONObject0.has("Y4");
      jSONObject0.optDouble("L7sG+{QvJ<L", (-1564.05967264729));
      JSONObject.doubleToString(3113.748565661);
      JSONObject.getNames(jSONObject0);
      jSONObject0.optDouble("OE_2", Double.NaN);
      JSONObject.getNames((Object) null);
      JSONObject jSONObject2 = null;
      try {
        jSONObject2 = new JSONObject(jSONObject1, (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.706743462478978
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Double double0 = new Double((-394.3026));
      JSONObject.testValidity(double0);
      JSONObject jSONObject0 = new JSONObject();
      String string0 = "";
      JSONObject jSONObject1 = jSONObject0.accumulate("", "");
      jSONObject1.optBoolean("", true);
      Double.isFinite((-2826.0966340730624));
      JSONObject jSONObject2 = jSONObject0.put("", 13);
      JSONObject.quote("");
      jSONObject2.put("", true);
      try { 
        jSONObject2.append("", "");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[] is not a JSONArray.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.236880602488567
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = jSONObject0.put("] is not a Boolean.", (-794));
      JSONObject jSONObject2 = jSONObject1.put("] is not a Boolean.", false);
      JSONObject jSONObject3 = jSONObject2.put("] is not a Boolean.", 0.0);
      jSONObject0.get("] is not a Boolean.");
      Double.max((-794), 1257.20641763741);
      jSONObject0.toString(4);
      String[] stringArray0 = JSONObject.getNames(jSONObject3);
      HashMap<Integer, Integer> hashMap0 = new HashMap<Integer, Integer>();
      JSONObject jSONObject4 = new JSONObject((Map) hashMap0);
      Double.sum((-794), 4);
      jSONObject4.optDouble("] is not a Boolean.");
      Integer integer0 = new Integer(4);
      jSONObject3.toString(59);
      jSONObject3.optInt("Hlk')~1eZ]SAFx1=a");
      Long long0 = new Long((-5288L));
      JSONObject jSONObject5 = new JSONObject(jSONObject1, stringArray0);
      jSONObject4.put("{\"java.lang.String@0000000002\": java.lang.Double@0000000005}", (Object) jSONObject5);
      jSONObject3.opt("pd");
      Object object0 = JSONObject.NULL;
      JSONObject.testValidity(object0);
      Object object1 = jSONObject2.remove(">[aV`!v^>]o/4=LDuU");
      assertNull(object1);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=3.1181222496945598
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = jSONObject0.put("] is not a Boolean.", (-794));
      JSONObject jSONObject2 = jSONObject1.put("] is not a Boolean.", false);
      JSONObject jSONObject3 = jSONObject2.put("] is not a Boolean.", 0.0);
      assertEquals(1, jSONObject0.length());
      
      jSONObject0.get("] is not a Boolean.");
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      JSONObject jSONObject4 = jSONObject3.accumulate("] is not a Boolean.", jSONArray0);
      jSONObject4.optBoolean(" at character ");
      Boolean boolean0 = Boolean.TRUE;
      jSONObject4.optDouble("JSON does not allow non-finite numbers.", 0.0);
      JSONObject jSONObject5 = jSONObject1.append("{.~7|G{s", linkedList0);
      jSONObject1.toJSONArray(jSONArray0);
      linkedList0.add((Object) "{.~7|G{s");
      jSONObject5.optString("P|k[a", "kM`HE1z]QT\")");
      jSONObject4.names();
      jSONObject5.optDouble(",\n");
      jSONObject1.optJSONObject("T6 Lf^z?*#FH5mFIZ>D");
      JSONObject.getNames(jSONObject2);
      jSONObject1.accumulate("[", ",\n");
      double double0 = jSONObject0.optDouble("] not found.");
      assertEquals(Double.NaN, double0, 0.01);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.5168760810714366
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Double double0 = new Double((-394.3026));
      LinkedList<String> linkedList0 = new LinkedList<String>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      HashMap<JSONArray, Object> hashMap0 = new HashMap<JSONArray, Object>();
      Boolean.valueOf(true);
      Object object0 = JSONObject.NULL;
      Short short0 = new Short((short) (-430));
      hashMap0.put(jSONArray0, short0);
      hashMap0.put(jSONArray0, object0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      stringArray0[1] = "4N";
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      boolean boolean0 = jSONObject0.optBoolean("");
      assertFalse(boolean0);
      
      jSONObject0.optJSONObject("getreverseBytes");
      assertEquals(1, jSONObject0.length());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.9555320856075205
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = jSONObject0.put("] is not a Boolean.", false);
      JSONObject jSONObject2 = jSONObject1.put("] is not a Boolean.", 0.0);
      jSONObject0.get("] is not a Boolean.");
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      JSONObject jSONObject3 = jSONObject2.accumulate("] is not a Boolean.", jSONArray0);
      jSONObject3.optBoolean(" at character ");
      Boolean boolean0 = Boolean.TRUE;
      jSONObject0.append("{.~7|G{s", linkedList0);
      jSONObject0.toJSONArray(jSONArray0);
      JSONObject.quote("[xtY;");
      HashMap<Object, Long> hashMap0 = new HashMap<Object, Long>();
      JSONObject jSONObject4 = new JSONObject((Map) hashMap0);
      jSONObject0.isNull("[xtY;");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "[xtY;";
      stringArray0[1] = "] is not a Boolean.";
      stringArray0[2] = " at character ";
      JSONObject jSONObject5 = new JSONObject((Object) jSONObject0, stringArray0);
      jSONObject5.length();
      jSONObject4.has("] is not a Boolean.");
      Float float0 = new Float((-183.9155532));
      JSONObject jSONObject6 = new JSONObject(float0);
      try { 
        jSONObject6.getInt("dec");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"dec\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.7262515228493167
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      Set<Map.Entry<String, String>> set0 = (Set<Map.Entry<String, String>>)hashMap0.entrySet();
      hashMap0.put("JSONObject[", "JSONObject[");
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      String string0 = "] is not a number.";
      String string1 = "W^WPWzU\\s^";
      hashMap0.put("] is not a number.", "W^WPWzUs^");
      JSONObject.getNames((Object) set0);
      jSONObject0.optDouble("Kc2bT(HXL");
      jSONObject0.optString("");
      JSONObject jSONObject1 = jSONObject0.putOpt("0aOE5fj", set0);
      hashMap0.put("", "Kc2bT(HXL");
      JSONObject.getNames(jSONObject0);
      jSONObject1.optBoolean((String) null, true);
      try { 
        jSONObject1.getLong("`HJ#P<_");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"`HJ#P<_\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.9413955191157655
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.entrySet();
      String string0 = hashMap0.put("JSONObject[", "JSONObject[");
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      jSONObject0.names();
      Double double0 = new Double(3113.748565661);
      JSONObject jSONObject1 = jSONObject0.put("JSONObject[", (Object) null);
      jSONObject1.optDouble("1yqm^;3q|g\"7FK_", Double.NaN);
      jSONObject0.optString("?^*r+6=ex8'm", (String) null);
      JSONObject.valueToString(hashMap0);
      jSONObject0.keys();
      jSONObject0.optBoolean("JSONObject[");
      String[] stringArray0 = new String[8];
      stringArray0[0] = "7?";
      stringArray0[1] = null;
      String[] stringArray1 = new String[9];
      stringArray1[0] = "?^*r+6=ex8'm";
      jSONObject1.put("hi", 0L);
      stringArray1[1] = null;
      stringArray1[2] = "?^*r+6=ex8'm";
      stringArray1[3] = null;
      stringArray1[4] = "JSONObject[";
      stringArray1[5] = null;
      stringArray1[6] = "1yqm^;3q|g\"7FK_";
      stringArray1[7] = null;
      stringArray1[8] = "JSONObject[";
      JSONObject jSONObject2 = new JSONObject(jSONObject1, stringArray1);
      JSONObject jSONObject3 = new JSONObject((Map) hashMap0);
      jSONObject1.optBoolean("{\"java.lang.String@0000000003\":\"java.lang.String@0000000003\"}");
      try { 
        jSONObject0.getJSONObject(string0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=3.1854796392442175
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      Set<Map.Entry<String, String>> set0 = (Set<Map.Entry<String, String>>)hashMap0.entrySet();
      hashMap0.put("JSONObject[", "JSONObject[");
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      hashMap0.put("] is not a number.", "W^WPWzUs^");
      JSONObject.getNames((Object) set0);
      jSONObject0.optDouble("Kc2bT(HXL");
      jSONObject0.optString("");
      JSONObject jSONObject1 = jSONObject0.putOpt("0aOE5fj", set0);
      hashMap0.put("", "Kc2bT(HXL");
      Byte byte0 = new Byte((byte)37);
      JSONObject.valueToString(byte0);
      JSONObject.getNames(jSONObject1);
      long long0 = (-490L);
      Long long1 = new Long((-490L));
      JSONObject jSONObject2 = jSONObject0.accumulate("1", long1);
      try { 
        jSONObject2.put((String) null, 410L);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.8198194609628917
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "KwRwNt@";
      stringArray0[1] = "V#4\"ZS";
      stringArray0[2] = "KaxDavdw)7#cW";
      stringArray0[3] = "Expected a ',' or '}'";
      Float float0 = new Float(317.9280417339);
      Object object0 = JSONObject.NULL;
      HashMap<JSONArray, Object> hashMap0 = new HashMap<JSONArray, Object>();
      hashMap0.put(jSONArray0, "V#4\"ZS");
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      JSONObject jSONObject1 = new JSONObject(jSONObject0, stringArray0);
      HashMap<Double, Byte> hashMap1 = new HashMap<Double, Byte>();
      try { 
        jSONObject1.getJSONObject("/I:1qqW6V2npWnMrb!");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"/I:1qqW6V2npWnMrb!\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.6835702566349657
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Double double0 = new Double((-394.3026));
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.names();
      String string0 = "1yqm^;3q|g\"7FK_";
      Double double1 = new Double(3113.748565661);
      JSONObject jSONObject1 = jSONObject0.put("G2O2;wkI", (Object) "G2O2;wkI");
      jSONObject0.optDouble("1yqm^;3q|g\"7FK_", (-1314.27700534));
      jSONObject1.optString("?^*r+6=ex8'm", (String) null);
      Object object0 = new Object();
      JSONObject.valueToString(object0);
      jSONObject1.keys();
      jSONObject1.optBoolean((String) null);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "hV";
      stringArray0[1] = "G2O2;wkI";
      stringArray0[2] = "1yqm^;3q|g\"7FK_";
      stringArray0[3] = "G2O2;wkI";
      JSONObject jSONObject2 = new JSONObject(jSONObject1, stringArray0);
      HashMap<String, Double> hashMap0 = null;
      try {
        hashMap0 = new HashMap<String, Double>(34, 0.0F);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal load factor: 0.0
         //
         verifyException("java.util.HashMap", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=3.024357516070701
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Double double0 = new Double((-394.3026));
      JSONObject.testValidity(double0);
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = jSONObject0.accumulate("", "");
      jSONObject1.optBoolean("Z#6/Zw>]L<6)dugmQu", true);
      jSONObject0.names();
      jSONObject1.optInt("Z#6/Zw>]L<6)dugmQu", 1);
      jSONObject0.toString(1);
      String string0 = null;
      JSONTokener jSONTokener0 = new JSONTokener((String) null);
      jSONTokener0.syntaxError("");
      JSONObject.doubleToString((-394.3026));
      jSONObject1.optBoolean((String) null);
      jSONObject0.toString();
      jSONObject1.has("]{6C'");
      try { 
        jSONObject1.getInt("null");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"null\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.088864780629012
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.entrySet();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      jSONObject0.names();
      Double double0 = new Double(3113.748565661);
      jSONObject0.optString("?^*r+6=ex8'm", (String) null);
      JSONObject.valueToString(hashMap0);
      jSONObject0.keys();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "Y4";
      stringArray0[3] = "Y4";
      stringArray0[4] = "1yqm^;3q|g\"7FK_";
      stringArray0[5] = "?^*r+6=ex8'm";
      stringArray0[6] = "?^*r+6=ex8'm";
      StringWriter stringWriter0 = new StringWriter(87);
      try { 
        jSONObject0.getString("?^*r+6=ex8'm");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"?^*r+6=ex8'm\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.817100188822071
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.entrySet();
      hashMap0.put("JSONObject[", "JSONObject[");
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      jSONObject0.names();
      Double double0 = new Double(3113.748565661);
      JSONObject jSONObject1 = jSONObject0.put("JSONObject[", (Object) null);
      jSONObject1.optDouble("1yqm^;3q|g\"7FK_", Double.NaN);
      jSONObject0.optString("getreverseBytes");
      JSONObject jSONObject2 = jSONObject1.putOpt(",]mD.UT6.OKZ}joG", jSONObject0);
      hashMap0.put("?^*r+6=ex8'm", "JSONObject[");
      JSONObject.getNames(jSONObject0);
      jSONObject0.optBoolean("8}d!tN", true);
      try { 
        jSONObject2.getJSONArray((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.4630889397221387
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Double double0 = new Double((-394.3026));
      JSONObject.testValidity(double0);
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = jSONObject0.accumulate("", "");
      jSONObject1.optBoolean("Z#6/Zw>]L<6)dugmQu", false);
      jSONObject1.toString(1, 13);
      boolean boolean0 = new Boolean("{\"java.lang.String@0000000002\": \"java.lang.String@0000000002\"}");
      jSONObject0.has("Z#6/Zw>]L<6)dugmQu");
      JSONArray jSONArray0 = new JSONArray();
      try { 
        jSONArray0.getJSONObject((-4154));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONArray[-4154] not found.
         //
         verifyException("wheel.json.JSONArray", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=3.1958494577640844
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = jSONObject0.put("] is not a Boolean.", (-794));
      JSONObject jSONObject2 = jSONObject1.put("] is not a Boolean.", false);
      JSONObject jSONObject3 = jSONObject2.put("] is not a Boolean.", 0.0);
      Object object0 = jSONObject0.get("] is not a Boolean.");
      Double.max((-794), 1257.20641763741);
      jSONObject0.toString(4);
      String[] stringArray0 = JSONObject.getNames(object0);
      HashMap<Integer, Integer> hashMap0 = new HashMap<Integer, Integer>();
      JSONObject jSONObject4 = new JSONObject((Map) hashMap0);
      Double.sum((-794), 4);
      jSONObject4.optDouble("");
      Integer integer0 = new Integer(4);
      jSONObject3.toString(59);
      jSONObject3.optInt("Hlk')~1eZ]SAFx1=a");
      Long long0 = new Long((-5288L));
      JSONObject jSONObject5 = new JSONObject(jSONObject1, stringArray0);
      jSONObject4.put("{\"java.lang.String@0000000002\": java.lang.Double@0000000005}", (Object) jSONObject5);
      jSONObject3.opt("pd");
      JSONObject jSONObject6 = new JSONObject(jSONObject2);
      try { 
        jSONObject6.getJSONObject("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.756907185039636
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = jSONObject0.put("] is not :a Boolean.", false);
      JSONObject jSONObject2 = jSONObject1.put("] is not :a Boolean.", 0.0);
      Double double0 = new Double(0.0);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      JSONObject jSONObject3 = jSONObject2.accumulate("] is not :a Boolean.", jSONArray0);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "] is not :a Boolean.";
      stringArray0[1] = "";
      stringArray0[2] = "] is not :a Boolean.";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "] is not :a Boolean.";
      stringArray0[7] = "] is not :a Boolean.";
      JSONObject jSONObject4 = new JSONObject("] is not :a Boolean.", stringArray0);
      jSONObject1.optJSONArray("");
      JSONObject jSONObject5 = new JSONObject();
      try { 
        jSONObject3.getDouble((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=3.0836285541379103
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.accumulate("", "");
      LinkedList<String> linkedList0 = new LinkedList<String>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      HashMap<JSONArray, Object> hashMap0 = new HashMap<JSONArray, Object>();
      Boolean.valueOf(true);
      Object object0 = JSONObject.NULL;
      hashMap0.put(jSONArray0, object0);
      String[] stringArray0 = new String[19];
      stringArray0[0] = "";
      stringArray0[1] = "4N";
      JSONObject jSONObject1 = new JSONObject(jSONObject0, stringArray0);
      JSONObject jSONObject2 = new JSONObject((Map) hashMap0);
      jSONObject2.optBoolean("");
      JSONObject jSONObject3 = null;
      try {
        jSONObject3 = new JSONObject("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must begin with '{' at character 0 of 
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=3.0050571228377554
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = jSONObject0.put("] is not a Boolean.", false);
      JSONObject jSONObject2 = jSONObject1.put("] is not a Boolean.", 0.0);
      jSONObject0.get("] is not a Boolean.");
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      JSONObject jSONObject3 = jSONObject2.accumulate("] is not a Boolean.", jSONArray0);
      jSONObject3.optBoolean(" at characer ");
      Boolean boolean0 = Boolean.TRUE;
      JSONObject jSONObject4 = jSONObject0.append("{.~7|G{s", linkedList0);
      jSONObject0.toJSONArray(jSONArray0);
      linkedList0.add((Object) "{.~7|G{s");
      JSONObject.quote("wheel.json.JSONObject");
      JSONObject jSONObject5 = new JSONObject((Map) null);
      jSONObject5.optBoolean(",");
      jSONObject1.isNull("] not found.");
      jSONObject4.length();
      jSONObject0.optLong("{.~7|G{s", (long) 2);
      try { 
        jSONObject1.getJSONArray("] not found.");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"] not found.\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.036141640986104
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Boolean boolean0 = new Boolean(false);
      boolean boolean1 = true;
      Boolean.compare(false, true);
      String[] stringArray0 = new String[1];
      String string0 = "";
      stringArray0[0] = "";
      JSONObject jSONObject0 = new JSONObject(boolean0, stringArray0);
      jSONObject0.toJSONArray((JSONArray) null);
      jSONObject0.put("0X(Q,C%!;Et$K", false);
      try { 
        jSONObject0.getBoolean("}dq#\"a+n");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"}dq#\\\"a+n\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.967712002320679
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Double double0 = new Double((-394.3026));
      Double double1 = new Double((-394.3026));
      JSONObject jSONObject0 = new JSONObject();
      Float float0 = new Float((-1.0F));
      jSONObject0.accumulate("wheel.json.JSONObject$Null", float0);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      HashMap<JSONArray, Object> hashMap0 = new HashMap<JSONArray, Object>();
      Boolean.valueOf(true);
      Object object0 = JSONObject.NULL;
      HashMap<JSONArray, Object> hashMap1 = new HashMap<JSONArray, Object>();
      hashMap1.put(jSONArray0, jSONObject0);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "wheel.json.JSONObject$Null";
      stringArray0[1] = "4N";
      stringArray0[2] = "4N";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "4N";
      stringArray0[7] = "";
      JSONObject jSONObject1 = new JSONObject(jSONObject0, stringArray0);
      JSONObject jSONObject2 = new JSONObject((Map) hashMap0);
      jSONObject2.optBoolean("");
      try { 
        jSONObject2.getJSONObject("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.6829273201267343
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.toString((-660));
      jSONObject0.toString((-989), (-989));
      try { 
        jSONObject0.getBoolean("null");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"null\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.46784528224175
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = jSONObject0.accumulate("", "");
      String string0 = "Z#6/Zw>]L<6)dugmQu";
      jSONObject1.optBoolean("Z#6/Zw>]L<6)dugmQu", true);
      jSONObject1.toString(1, 13);
      try { 
        jSONObject0.getBoolean("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] is not a Boolean.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      int int0 = 69;
      JSONObject.valueToString((Object) null, (-846), 69);
      String string0 = "";
      JSONTokener jSONTokener0 = new JSONTokener("");
      try { 
        jSONTokener0.next(69);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Substring bounds error at character 0 of 
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      JSONObject.valueToString(object0, 0, 0);
      JSONObject jSONObject0 = new JSONObject();
      assertEquals(0, jSONObject0.length());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.8114225799837422
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.entrySet();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      jSONObject0.names();
      Short short0 = new Short((short) (-1414));
      Short.toUnsignedLong((short) (-1414));
      Short.toUnsignedInt((short) (-1414));
      jSONObject0.put("PEtH+gbq>8@E", (double) 64122);
      JSONObject.quote("isisInfinite");
      HashMap<Byte, Long> hashMap1 = new HashMap<Byte, Long>();
      Byte byte0 = new Byte((byte)23);
      Long long0 = new Long(0L);
      hashMap1.put(byte0, long0);
      Long long1 = new Long(2823L);
      assertFalse(long1.equals((Object)long0));
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.4167494630210795
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "KwRwNt@";
      stringArray0[1] = "V#4\"ZS";
      stringArray0[2] = "KaxDavdw)7#cW";
      stringArray0[3] = "Expected a ',' or '}'";
      jSONArray0.put((-316.349));
      stringArray0[4] = "A JSONObject text must begin with '{'";
      JSONObject jSONObject0 = new JSONObject(jSONArray0, stringArray0);
      jSONObject0.toJSONArray(jSONArray0);
      JSONObject.getNames(jSONObject0);
      Boolean boolean0 = new Boolean("A JSONObject text must begin with '{'");
      JSONObject jSONObject1 = jSONObject0.accumulate("KaxDavdw)7#cW", boolean0);
      try { 
        jSONObject1.getJSONArray("KaxDavdw)7#cW");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"KaxDavdw)7#cW\"] is not a JSONArray.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.2531054371588475
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String string0 = "] is not a Boolean.";
      JSONObject jSONObject1 = jSONObject0.put("] is not a Boolean.", (-794));
      JSONObject jSONObject2 = jSONObject1.put("] is not a Boolean.", false);
      jSONObject2.put("] is not a Boolean.", 0.0);
      jSONObject0.get("] is not a Boolean.");
      String string1 = "1yqm^;3q|g\"7FK_";
      String string2 = null;
      double double0 = (-1564.05967264729);
      Double double1 = new Double(Double.NaN);
      try { 
        jSONObject0.put((String) null, (Object) double1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.650740885003537
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      HashMap<Boolean, String> hashMap0 = new HashMap<Boolean, String>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      jSONObject0.optInt(" FL=\"-KV=K51foLbb");
      try { 
        jSONObject0.getBoolean((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.7600624763682045
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = jSONObject0.put("] is not :a Boolean.", false);
      JSONObject jSONObject2 = jSONObject1.put("] is not :a Boolean.", 0.0);
      jSONObject0.get("] is not :a Boolean.");
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      JSONObject jSONObject3 = jSONObject2.accumulate("] is not :a Boolean.", jSONArray0);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "] is not :a Boolean.";
      stringArray0[1] = "";
      stringArray0[2] = "] is not :a Boolean.";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "] is not :a Boolean.";
      stringArray0[7] = "] is not :a Boolean.";
      JSONObject jSONObject4 = new JSONObject("] is not :a Boolean.", stringArray0);
      jSONObject1.optJSONArray("");
      JSONObject jSONObject5 = new JSONObject();
      JSONObject.valueToString(jSONObject3);
      JSONTokener jSONTokener0 = new JSONTokener((String) null);
      JSONTokener jSONTokener1 = new JSONTokener("] is not :a Boolean.");
      JSONObject jSONObject6 = null;
      try {
        jSONObject6 = new JSONObject("@87");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must begin with '{' at character 1 of @87
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.2407809451836247
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "KwRwNt@";
      String string0 = "V#4\"ZS";
      stringArray0[1] = "V#4\"ZS";
      stringArray0[2] = "KaxDavdw)7#cW";
      String string1 = "Expected a ',' or '}'";
      stringArray0[3] = "Expected a ',' or '}'";
      Float float0 = new Float(317.9280417339);
      JSONObject jSONObject0 = new JSONObject(float0);
      jSONObject0.toString();
      jSONObject0.put("Expected a ',' or '}'", false);
      try { 
        jSONArray0.getJSONObject(10);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONArray[10] not found.
         //
         verifyException("wheel.json.JSONArray", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.4967941443989226
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = jSONObject0.put("] is not a Boolean.", (-794));
      JSONObject jSONObject2 = jSONObject1.put("] is not a Boolean.", false);
      jSONObject2.put("] is not a Boolean.", 0.0);
      jSONObject0.get("] is not a Boolean.");
      Double.max((-794), 1257.20641763741);
      int int0 = 4;
      JSONObject jSONObject3 = null;
      try {
        jSONObject3 = new JSONObject("] is not a Boolean.");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must begin with '{' at character 1 of ] is not a Boolean.
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.7890475260378214
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      Double double0 = new Double((-394.3026));
      JSONObject.testValidity(double0);
      JSONObject jSONObject0 = new JSONObject();
      String string0 = "";
      JSONObject jSONObject1 = jSONObject0.accumulate("", "");
      jSONObject1.optBoolean("", true);
      Double.isFinite((-2826.0966340730624));
      JSONObject jSONObject2 = jSONObject0.put("", 13);
      jSONObject2.toString();
      jSONObject2.put("", true);
      try { 
        jSONObject2.append("", "");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[] is not a JSONArray.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.600313501893539
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String string0 = "] is not a Boolean.";
      JSONObject jSONObject1 = jSONObject0.put("] is not a Boolean.", (-794));
      JSONObject jSONObject2 = jSONObject1.put("] is not a Boolean.", false);
      JSONObject jSONObject3 = jSONObject2.put("] is not a Boolean.", 0.0);
      jSONObject0.get("] is not a Boolean.");
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      JSONObject jSONObject4 = jSONObject3.accumulate("] is not a Boolean.", jSONArray0);
      String string1 = " at character ";
      jSONObject4.optBoolean(" at character ");
      String string2 = "getdoubleToLongBits";
      Boolean boolean0 = Boolean.TRUE;
      String string3 = "{.~7|G{s";
      jSONObject1.append("{.~7|G{s", linkedList0);
      jSONObject1.toJSONArray(jSONArray0);
      linkedList0.add((Object) "{.~7|G{s");
      String string4 = "P|k[a";
      JSONObject jSONObject5 = null;
      try {
        jSONObject5 = new JSONObject((JSONTokener) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.166330769463752
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      Double double0 = new Double((-394.3026));
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.accumulate("", "");
      String string0 = "";
      LinkedList<String> linkedList0 = new LinkedList<String>();
      HashMap<JSONArray, Object> hashMap0 = new HashMap<JSONArray, Object>();
      boolean boolean0 = true;
      Boolean.valueOf(true);
      JSONObject jSONObject1 = null;
      try {
        jSONObject1 = new JSONObject((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      String[] stringArray0 = new String[0];
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject((Object) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      double double0 = 0.0;
      JSONObject.doubleToString(0.0);
      JSONTokener jSONTokener0 = new JSONTokener("PZY{2B");
      jSONTokener0.toString();
      JSONArray jSONArray0 = null;
      try {
        jSONArray0 = new JSONArray(jSONTokener0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONArray text must start with '[' at character 1 of PZY{2B
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=3.0949845215221923
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      Set<Map.Entry<String, String>> set0 = (Set<Map.Entry<String, String>>)hashMap0.entrySet();
      hashMap0.put("JSONObject[", "JSONObject[");
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      String string0 = "W^WPWzU\\s^";
      hashMap0.put("] is not a number.", "W^WPWzUs^");
      JSONObject.getNames(jSONObject0);
      jSONObject0.optDouble("Kc2bT(HXL");
      JSONObject.doubleToString(Double.NaN);
      JSONObject jSONObject1 = jSONObject0.putOpt("0aOE5fj", set0);
      hashMap0.put("", "Kc2bT(HXL");
      JSONObject.getNames(jSONObject0);
      jSONObject1.optBoolean((String) null, true);
      JSONArray jSONArray0 = null;
      try {
        jSONArray0 = new JSONArray((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.0829081047004716
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      Double double0 = new Double(1.0);
      Double.max(1.0, (-2074.3388167821));
      Double.min(1.0, 0.0);
      JSONObject.numberToString(double0);
      JSONArray jSONArray0 = new JSONArray();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "<c";
      stringArray0[1] = "java.lang.Double@0000000001";
      stringArray0[2] = "java.lang.Double@0000000001";
      stringArray0[3] = "java.lang.Double@0000000001";
      stringArray0[4] = "java.lang.Double@0000000001";
      stringArray0[5] = "";
      try { 
        jSONArray0.getJSONArray(0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONArray[0] not found.
         //
         verifyException("wheel.json.JSONArray", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.0115053753997263
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      HashMap<Float, Integer> hashMap0 = new HashMap<Float, Integer>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      String string0 = "Jj1ipWYfIG+Qk-";
      String string1 = "\\d$>C(";
      try { 
        jSONObject0.get("d$>C(");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"d$>C(\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.2322067503076204
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      try { 
        jSONObject0.getInt(".");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\".\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "KwRwNt@";
      stringArray0[1] = "V#4\"ZS";
      stringArray0[2] = "KaxDavdw)7#cW";
      stringArray0[3] = "Expected a ',' or '}'";
      int int0 = 69;
      jSONArray0.optJSONObject(69);
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject((JSONObject) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.7305017813188235
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      Double double0 = new Double((-394.3026));
      JSONObject jSONObject0 = new JSONObject();
      JSONObject.valueToString(double0, (-602), (-602));
      HashMap<Double, Long> hashMap0 = new HashMap<Double, Long>();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      Object object0 = new Object();
  }

  /**
  //Test case number: 79
  /*Coverage entropy=3.119588403583581
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = jSONObject0.put("] is not a Boolean.", (-794));
      JSONObject jSONObject2 = jSONObject1.put("] is not a Boolean.", false);
      JSONObject jSONObject3 = jSONObject2.put("] is not a Boolean.", 0.0);
      Object object0 = jSONObject0.get("] is not a Boolean.");
      Double.max((-794), 1257.20641763741);
      int int0 = 4;
      jSONObject0.toString(4);
      JSONObject.getNames(object0);
      HashMap<Integer, Integer> hashMap0 = new HashMap<Integer, Integer>();
      JSONObject jSONObject4 = new JSONObject((Map) hashMap0);
      Integer integer0 = new Integer(32);
      hashMap0.put((Integer) null, integer0);
      jSONObject4.optDouble("");
      Integer integer1 = new Integer(4);
      Integer.getInteger("", integer1);
      hashMap0.put(integer1, integer1);
      JSONObject jSONObject5 = jSONObject3.putOpt("Kc2bT(HXL", jSONObject2);
      jSONObject5.names();
      jSONObject2.names();
      try { 
        jSONObject4.getJSONArray("Tpu!m");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"Tpu!m\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.435248379655235
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.entrySet();
      hashMap0.put((String) null, (String) null);
      hashMap0.put("JSONObject[", "JSONObject[");
      JSONObject jSONObject0 = new JSONObject();
      String[] stringArray0 = new String[0];
      JSONObject jSONObject1 = new JSONObject(jSONObject0, stringArray0);
      jSONObject0.putOpt("%l_bXu4tHY9_e-!", hashMap0);
      // Undeclared exception!
      try { 
        jSONObject0.toString(1862);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.2803883738651898
  */
  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.entrySet();
      hashMap0.put((String) null, (String) null);
      hashMap0.put("JSONObject[", "JSONObject[");
      Float float0 = new Float(1075.98443);
      JSONObject jSONObject0 = new JSONObject(float0);
      jSONObject0.optBoolean((String) null);
      JSONTokener jSONTokener0 = new JSONTokener((String) null);
      JSONTokener jSONTokener1 = new JSONTokener("is");
      JSONObject jSONObject1 = null;
      try {
        jSONObject1 = new JSONObject(jSONTokener1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must begin with '{' at character 1 of is
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.2285834617692037
  */
  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "KwRwNt@";
      stringArray0[1] = "V#4\"ZS";
      stringArray0[2] = "KaxDavdw)7#cW";
      JSONObject.valueToString("KaxDavdw)7#cW", 2310, 2310);
      JSONObject jSONObject0 = new JSONObject();
      assertEquals(0, jSONObject0.length());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.0116585526031
  */
  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      Short short0 = new Short((short) (-1829));
      String[] stringArray0 = new String[7];
      stringArray0[0] = "true";
      stringArray0[1] = "a:p";
      stringArray0[2] = "getnotify";
      stringArray0[3] = "is";
      stringArray0[4] = "GGK?EyJYGUF";
      stringArray0[5] = "false";
      stringArray0[6] = "q{Lx4a_iN8 K~E";
      JSONObject jSONObject0 = new JSONObject(short0, stringArray0);
      Short short1 = new Short((short) (-1829));
      jSONObject0.putOpt("eO|QQ$;}|*", short1);
      assertEquals(1, jSONObject0.length());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.370026761579231
  */
  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "KwRwNt@";
      String string0 = "V#4\"ZS";
      stringArray0[1] = "V#4\"ZS";
      stringArray0[2] = "KaxDavdw)7#cW";
      stringArray0[3] = "Expected a ',' or '}'";
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.optString("V#4\"ZS");
      jSONObject0.putOpt("3113.7485656610", jSONArray0);
      JSONObject jSONObject1 = new JSONObject((Object) "KaxDavdw)7#cW");
      jSONObject1.optBoolean("va", false);
      String string1 = ". @r]sQ_S,2<y\\6?Uq7";
      try { 
        jSONObject0.getString("KwRwNt@");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"KwRwNt@\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=2.2886994877704794
  */
  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      Double double0 = new Double((-1.0));
      String[] stringArray0 = new String[7];
      stringArray0[0] = "A JSONArray text must start with '['";
      stringArray0[1] = "wNV`=CEDkH";
      stringArray0[2] = "BJTu?wCW]j9W1u";
      stringArray0[3] = "V#&=r\u0004 -u)";
      stringArray0[4] = "wheel.json.JSONException";
      stringArray0[5] = "\t";
      stringArray0[6] = "efhS]|0G]|@qMz~jL*";
      JSONObject jSONObject0 = new JSONObject(double0, stringArray0);
      HashMap<String, Integer> hashMap0 = new HashMap<String, Integer>();
      Integer integer0 = new Integer(10);
      hashMap0.put("wNV`=CEDkH", integer0);
      Integer integer1 = new Integer((-240));
      hashMap0.put("wheel.json.JSONException", integer1);
      JSONObject jSONObject1 = jSONObject0.put("gV8H/]>P>aI%1$-", (Map) hashMap0);
      jSONObject1.optDouble("JSONObject[");
      try { 
        jSONObject1.getString("gettoString");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"gettoString\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.5249780504310533
  */
  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      String string0 = "JSONObject[";
      hashMap0.entrySet();
      hashMap0.put("JSONObject[", "JSONObject[");
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      jSONObject0.names();
      String string1 = "ha";
      try { 
        jSONObject0.get("ha");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"ha\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.2322067503076204
  */
  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      HashMap<Long, JSONObject> hashMap0 = new HashMap<Long, JSONObject>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      String string0 = "JSONArray[";
      try { 
        jSONObject0.getJSONArray("JSONArray[");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"JSONArray[\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=2.215419552773604
  */
  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      Object object0 = new Object();
      JSONObject jSONObject0 = new JSONObject(object0);
      jSONObject0.optBoolean("'", true);
      boolean boolean0 = jSONObject0.optBoolean("1");
      assertFalse(boolean0);
      
      jSONObject0.optString("A JSONArray text must start with '['", "A JSONArray text must start with '['");
      assertEquals(1, jSONObject0.length());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=0.6237180760658338
  */
  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      JSONObject.quote("(N");
      HashMap<JSONArray, Object> hashMap0 = new HashMap<JSONArray, Object>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      Object object0 = new Object();
  }
}
