/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 08:04:45 GMT 2019
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileDescriptor;
import java.io.ObjectOutputStream;
import java.io.PipedOutputStream;
import java.io.PrintStream;
import java.io.PushbackInputStream;
import java.io.UnsupportedEncodingException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.050469885856446
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player((-4346));
      player0.setJoinOK(player1, false);
      player1.toString();
      assertEquals(0.0F, player1.getY(), 0.01F);
      
      player1.setY(0.1F);
      player1.isConnected();
      player0.getMoney();
      player1.getPictureId();
      player0.isJoinOK(player1, false);
      player0.getX();
      player1.pack();
      float float0 = player0.getY();
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.376466713945438
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Player player0 = new Player();
      player0.type();
      player0.getTimeOfDeath();
      player0.getZ();
      Player player1 = new Player();
      player0.setJoinOK(player1, false);
      player1.toString();
      player1.setY(2609.0F);
      player0.isConnected();
      player1.getMoney();
      Player player2 = new Player(1088, "", "", 5);
      player2.getPictureId();
      player0.isJoinOK(player1, true);
      player1.getX();
      assertEquals(2609.0F, player1.getY(), 0.01F);
      
      player2.pack();
      float float0 = player2.getY();
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.7874335778425303
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Player player0 = new Player();
      player0.setMoney(1540.0F);
      player0.isConnected();
      byte[] byteArray0 = player0.pack();
      Player player1 = new Player(1414, "", 3867);
      Player player2 = new Player((-1797));
      player1.setDead((long) 3867);
      player1.setMoney((-1720.0226F));
      Player player3 = new Player((short)4919, "", "Player.unpack(): *** WARNING *** data is not of proper type!", 1);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-64), 1369);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.321585437079472
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MockPrintStream mockPrintStream0 = new MockPrintStream("s8;");
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
      bufferedOutputStream0.write(125);
      mockPrintStream0.print(0L);
      bufferedOutputStream0.write((-19726));
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream(bufferedOutputStream0);
      Player player0 = new Player((-730), (String) null, (-19726));
      player0.setDead((-34L));
      player0.type();
      player0.getTimeOfDeath();
      player0.getZ();
      Player player1 = new Player(5, "Player.unpack(): *** WARNING *** data is not of proper type!", "zFi<!{0:@$X\":gn8i8s", (short)4919, 1);
      player1.setDead((-168L));
      player0.isConnected();
      player1.getMoney();
      player0.getPictureId();
      player1.isJoinOK(player0, true);
      player0.getX();
      player1.pack();
      float float0 = player0.getY();
      assertEquals((-34L), player0.getTimeOfDeath());
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.1958550791509905
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Player player0 = new Player();
      player0.setMoney(1540.0F);
      player0.setX((-1.0F));
      byte[] byteArray0 = player0.pack();
      player0.setDead((-2797L));
      Party party0 = new Party();
      Player player1 = new Player((-1), "", (-1));
      Player player2 = new Player((short)4919);
      player1.unpack(byteArray0);
      player2.isJoinOK(player1, false);
      player2.getMoney();
      player0.getMoney();
      player0.getY();
      assertEquals((-1.0F), player0.getX(), 0.01F);
      
      int int0 = player2.type();
      assertEquals(5, int0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      int int0 = 40;
      String string0 = "";
      Player player0 = new Player(40, "=~$", "", 40);
      player0.getZ();
      int int1 = 1;
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.317426916740261
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Player player0 = new Player((-730), (String) null, (-19726));
      player0.type();
      player0.getTimeOfDeath();
      player0.getZ();
      player0.setJoinOK(player0, false);
      player0.toString();
      player0.setY(0.0F);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-25);
      player0.setDead((long) 1);
      player0.isConnected();
      player0.getMoney();
      player0.getPictureId();
      player0.isJoinOK(player0, true);
      player0.getX();
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      System.setCurrentTimeMillis((-1L));
      Player player0 = new Player((-81), "", "", (-81), (-81));
      assertEquals(0.0F, player0.getY(), 0.01F);
      
      player0.setY((-1L));
      int int0 = player0.getStrength();
      assertEquals((-81), int0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.6772245773362195
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      System.setCurrentTimeMillis((-838L));
      Player player0 = new Player();
      player0.setDead((-545L));
      player0.setX((-838L));
      player0.pack();
      player0.getX();
      player0.getY();
      player0.getY();
      player0.getX();
      float float0 = player0.getY();
      assertEquals((-545L), player0.getTimeOfDeath());
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int int0 = 9472;
      Player player0 = new Player(9472, ".*[.]class$", 4919);
      Party party0 = new Party();
      party0.prev = party0;
      player0.head = party0;
      boolean boolean0 = true;
      player0.setDead((long) 4919, true);
      // Undeclared exception!
      try { 
        player0.gangStrength();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // state.Party cannot be cast to state.Player
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.022794924510636
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Player player0 = new Player((-19726), "", "j{", (-19726));
      MockPrintStream mockPrintStream0 = new MockPrintStream("Y7qxK");
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream(bufferedOutputStream0);
      player0.setConnected(false);
      objectOutputStream0.writeBoolean(false);
      player0.setZ((-19726));
      DataOutputStream dataOutputStream0 = new DataOutputStream(objectOutputStream0);
      player0.pack(dataOutputStream0);
      player0.setX((-19726));
      player0.getTimeOfDeath();
      player0.pack(dataOutputStream0);
      player0.isConnected();
      player0.gangStrength();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-3);
      byteArray0[1] = (byte) (-84);
      byteArray0[2] = (byte)4;
      byteArray0[3] = (byte)41;
      byteArray0[4] = (byte)27;
      byteArray0[5] = (byte) (-84);
      byteArray0[6] = (byte)48;
      byteArray0[7] = (byte)55;
      byteArray0[8] = (byte)26;
      player0.getZ();
      player0.unpack(byteArray0);
      assertEquals((-19726.0F), player0.getZ(), 0.01F);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.885074759977858
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player(4, "L", 3072);
      player0.setX((-1036.4625F));
      byte[] byteArray0 = player0.pack();
      player0.setDead((long) 10);
      player0.setDead((-2545L), true);
      Party party0 = new Party();
      Player player1 = new Player((short)4919, "L", (-1808));
      player1.remove(player0);
      player0.add(party0);
      player1.remove(party0);
      Party party1 = player1.head;
      player1.add((Party) null);
      player0.setX((-51.1F));
      player1.getZ();
      player0.unpack(byteArray0);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player1.unpack(dataInputStream0);
      assertEquals((-2545L), player0.getTimeOfDeath());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.256688166669972
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Player player0 = new Player((-730), (String) null, (-19726));
      player0.type();
      player0.setZ(4738.897F);
      player0.getTimeOfDeath();
      player0.getZ();
      player0.setJoinOK(player0, false);
      player0.toString();
      player0.setY(0.0F);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-25);
      player0.isConnected();
      player0.getMoney();
      player0.getPictureId();
      player0.isJoinOK(player0, true);
      player0.getX();
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Player player0 = new Player();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      Player player1 = new Player((-25940), (String) null, (String) null, 2809);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 255);
      DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
      dataInputStream0.markSupported();
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertFalse(boolean0);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-1", player0.getName());
      
      player1.getIP();
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertFalse(player1.isDead());
      assertEquals(1, player1.getStrength());
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(2809, player1.getPictureId());
      assertTrue(player1.isConnected());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.786456060735981
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Player player0 = new Player(2636, "P%Vr@wkA\"V$:0y;T4j", "a3", 172);
      Player player1 = new Player();
      player0.setX((short)4919);
      player0.remove(player1);
      Party party0 = player0.gangBoss();
      party0.next = (Party) player1;
      player1.add(party0);
      player1.remove(player0);
      Player player2 = new Player(37);
      player2.setX(37);
      player1.add(player2);
      player0.setX(0.1F);
      Player player3 = new Player(2636);
      player1.getZ();
      player1.setY(0.1F);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)30;
      byteArray0[1] = (byte)55;
      byteArray0[2] = (byte) (-91);
      byteArray0[3] = (byte) (-91);
      byteArray0[4] = (byte)55;
      byteArray0[5] = (byte)30;
      byteArray0[6] = (byte) (-91);
      byteArray0[7] = (byte)10;
      player1.unpack(byteArray0);
      assertEquals(0.1F, player1.getY(), 0.01F);
      
      int int0 = player3.getStrength();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/27_gangup");
      FileSystemHandling.appendDataToFile(evoSuiteFile0, (byte[]) null);
      MockPrintStream mockPrintStream0 = new MockPrintStream("s8;");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "");
      char[] charArray0 = new char[9];
      charArray0[0] = '\\';
      charArray0[1] = 'P';
      charArray0[2] = '\'';
      charArray0[3] = 'A';
      charArray0[4] = 'M';
      charArray0[5] = 'X';
      charArray0[6] = '+';
      charArray0[7] = '@';
      charArray0[8] = 'n';
      mockPrintStream0.println(charArray0);
      Player player0 = new Player((-19726), "s8;", 2287);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream0);
      player0.pack(dataOutputStream0);
      player0.pack();
      assertEquals(2287, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Player player0 = new Player(3465);
      Player player1 = new Player(3465);
      player1.setDead((-454L));
      player0.setY(0.1F);
      player0.getY();
      float float0 = Player.TOLERANCE;
      player1.getPictureId();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      DataInputStream dataInputStream0 = new DataInputStream(mockFileInputStream0);
      DataInputStream dataInputStream1 = new DataInputStream(mockFileInputStream0);
      DataInputStream dataInputStream2 = new DataInputStream(dataInputStream0);
      player1.isJoinOK(player0, false);
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream("J.x ]sm0zda_2Y", "s8;");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // s8;
         //
         verifyException("java.io.PrintStream", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.8148657896913192
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      int int0 = (-19726);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/27_gangup");
      FileSystemHandling.appendDataToFile(evoSuiteFile0, (byte[]) null);
      MockPrintStream mockPrintStream0 = new MockPrintStream("s8;");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu/termite/projects/27_gangup");
      FileSystemHandling.appendStringToFile(evoSuiteFile1, (String) null);
      Player player0 = new Player((-19726), (String) null, 2287);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream0);
      // Undeclared exception!
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.022794924510636
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Player player0 = new Player((-19726), "", "j{", (-19726));
      MockPrintStream mockPrintStream0 = new MockPrintStream("Y7qxK");
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream(bufferedOutputStream0);
      player0.setConnected(false);
      objectOutputStream0.writeBoolean(false);
      player0.setZ((-19726));
      DataOutputStream dataOutputStream0 = new DataOutputStream(objectOutputStream0);
      player0.pack(dataOutputStream0);
      player0.setX((-19726));
      player0.getTimeOfDeath();
      player0.pack(dataOutputStream0);
      player0.isConnected();
      player0.gangStrength();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-3);
      byteArray0[1] = (byte) (-84);
      byteArray0[2] = (byte)4;
      byteArray0[3] = (byte)41;
      byteArray0[4] = (byte)27;
      byteArray0[5] = (byte) (-102);
      byteArray0[6] = (byte)48;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      dataInputStream0.markSupported();
      player0.unpack(dataInputStream0);
      player0.getIP();
      player0.toString();
      assertFalse(player0.isConnected());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Player player0 = new Player(1);
      Player player1 = new Player((-1733), "", (short)4919);
      player1.reset(false);
      player0.isJoinOK(player1, false);
      player1.prev = (Party) player0;
      player1.setMoney((-1733));
      player1.getMoney();
      boolean boolean0 = player1.isJoinOK(player0, false);
      assertEquals((-1733.0F), player1.getMoney(), 0.01F);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.9747025681553483
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Player player0 = new Player((-987), "", (-987));
      player0.setDead();
      player0.getSubparty();
      player0.setDead();
      player0.setConnected(true);
      player0.getMoney();
      player0.setZ(0.0F);
      player0.setDead();
      player0.reset(true);
      player0.getName();
      player0.toString();
      player0.setConnected(true);
      player0.getName();
      player0.getPictureId();
      player0.setDead((long) (-987), true);
      player0.setConnected(false);
      player0.setDead(2716L);
      assertFalse(player0.isConnected());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.852140740384332
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Player player0 = new Player(0);
      player0.setDead((-5346L));
      Player player1 = new Player(0, "", "M/-68zj6bk'", 0, 4686);
      player0.head = (Party) player1;
      player0.gangStrength();
      float float0 = 80.57993F;
      player0.setX(80.57993F);
      player0.gangStrength();
      player0.pack();
      player0.reset(false);
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Player player0 = new Player((-1006));
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)37;
      Player player1 = new Player(1, "state.Player", (String) null, (-596));
      Player player2 = new Player(10);
      Player player3 = (Player)player1.gangBoss();
      assertEquals((-596), player3.getPictureId());
      
      byte[] byteArray1 = new byte[0];
      player2.unpack(byteArray1);
      assertEquals("0.0.0.0", player2.getIP());
      assertEquals(1, player2.getStrength());
      assertTrue(player2.isConnected());
      assertEquals("Player10", player2.getName());
      assertEquals(0.0F, player2.getY(), 0.01F);
      assertEquals(10.0F, player2.getX(), 0.01F);
      assertEquals(0L, player2.getTimeOfDeath());
      assertFalse(player2.isDead());
      assertEquals(0, player2.getPictureId());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "[p!3'r,8");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "[p!3'r,8");
      Player player0 = new Player((-3436), "[p!3'r,8", "[p!3'r,8", (-596));
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "[p!3'r,8");
      Party party0 = new Party();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "[p!3'r,8");
      party0.remove(player0);
      player0.boss = party0;
      player0.getStrength();
      byte[] byteArray0 = new byte[1];
      player0.getSubparty();
      byteArray0[0] = (byte)105;
      player0.unpack(byteArray0);
      player0.boss.remove(party0);
      party0.next = (Party) player0;
      party0.prev = player0.boss;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "[p!3'r,8");
      player0.getY();
      player0.getX();
      player0.getStrength();
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)37;
      byteArray0[2] = (byte)37;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      Player player0 = new Player((-967), "(?pA:T?<", (byte)37);
      // Undeclared exception!
      try { 
        player0.unpack((DataInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.8493821196946767
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Player player0 = new Player(0, (String) null, (String) null, 0, 0);
      player0.getName();
      int int0 = player0.getStrength();
      assertEquals(0, int0);
      
      float float0 = player0.getZ();
      assertEquals(0.0F, float0, 0.01F);
      
      float float1 = player0.getX();
      assertEquals(10.0F, float1, 0.01F);
      
      int int1 = player0.gangStrength();
      assertFalse(player0.isDead());
      assertEquals(0, int1);
      
      player0.reset(false);
      byte[] byteArray0 = new byte[1];
      player0.unpack(byteArray0);
      assertEquals(0, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.487795765617483
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Player player0 = new Player();
      player0.pack();
      player0.setMoney(10.0F);
      player0.setX(10.0F);
      player0.pack();
      player0.setDead((-2801L));
      player0.setDead((-2801L), true);
      Party party0 = new Party();
      party0.remove(player0);
      party0.head = (Party) player0;
      party0.remove(player0);
      player0.add(party0);
      player0.setX(0.0F);
      player0.getZ();
      player0.reset(true);
      player0.getPictureId();
      player0.setDead();
      player0.type();
      player0.getTimeOfDeath();
      player0.getZ();
      Player player1 = new Player((short)4919, "Player.unpack(): *** WARNING *** data is not of proper type!", "Player.unpack(): *** WARNING *** data is not of proper type!", (short)4919, 0);
      player0.isJoinOK(player1, false);
      player1.pack();
      player0.getY();
      player0.getX();
      player1.isJoinOK(player0, false);
      assertEquals(1392409281320L, player0.getTimeOfDeath());
      assertEquals("Player-1", player0.toString());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Player player0 = new Player(5, "EE6|^<(t:-<;", "", 5);
      player0.toString();
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals(5, player0.getPictureId());
      assertEquals("EE6|^<(t:-<;", player0.getIP());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.0248847886694654
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Player player0 = new Player((-1808), "L", 10);
      player0.gangStrength();
      player0.getSubparty();
      player0.type();
      player0.getZ();
      player0.getX();
      Player player1 = new Player((short)4919, "L", "L", 2);
      System.setCurrentTimeMillis(5);
      System.setCurrentTimeMillis(15000L);
      byte[] byteArray0 = player0.pack();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      player1.setY((-1808));
      player0.unpack(byteArray0);
      assertEquals((-16), player0.getId());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.6422165264472737
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      int int0 = (-19726);
      Player player0 = new Player(1495, "j{", "j{", 1495, (-805));
      player0.gangStrength();
      player0.setX(0.0F);
      player0.gangStrength();
      player0.pack();
      player0.reset(false);
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.376742981833967
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      MockPrintStream mockPrintStream0 = new MockPrintStream("s8;");
      PrintStream printStream0 = mockPrintStream0.append('^');
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(printStream0);
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte) (-23);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)5;
      bufferedOutputStream0.write(byteArray0);
      bufferedOutputStream0.write(940);
      Player player0 = new Player((byte) (-23), "", "8Oo", (byte)5, 3508);
      Player player1 = new Player();
      player0.gangStrength();
      player0.isJoinOK(player1, false);
      MockPrintStream mockPrintStream1 = null;
      try {
        mockPrintStream1 = new MockPrintStream((String) null, " [<9le.ycNTB*");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Player player0 = new Player((-4952));
      player0.getIP();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)37;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)37;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      Player player1 = new Player(55, " !D<:4", "module.ModuleBrowserDialog$ModuleFilter", (-256));
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      player0.isDead();
      byteArrayInputStream0.read();
      byte[] byteArray1 = new byte[1];
      byteArray1[0] = (byte)105;
      // Undeclared exception!
      try { 
        byteArrayInputStream0.read(byteArray1, 9527, (-1));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.8493821196946767
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Player player0 = new Player();
      player0.gangStrength();
      player0.setDead(2189L);
      player0.gangStrength();
      player0.isConnected();
      player0.getY();
      player0.setX(0.0F);
      player0.setZ(0.0F);
      player0.isDead();
      float float0 = player0.getZ();
      assertEquals(2189L, player0.getTimeOfDeath());
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.786724494755577
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Player player0 = new Player((-1808), "L", 10);
      Player player1 = new Player();
      player1.gangStrength();
      System.setCurrentTimeMillis((-1808));
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.562200162369491
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Player player0 = new Player((-5289), "Z=", "Z=", (-5289));
      player0.reset(false);
      int int0 = player0.type();
      assertEquals(5, int0);
      
      float float0 = player0.getZ();
      assertEquals(0.0F, float0, 0.01F);
      
      float float1 = player0.getX();
      assertEquals(10.0F, float1, 0.01F);
      assertFalse(player0.isDead());
      assertEquals(0L, player0.getTimeOfDeath());
      
      Player player1 = new Player(2, "Z=", "/(I nJ$itDfk3>qp2#", 5);
      assertEquals(1, player1.getStrength());
      
      Player player2 = new Player(2, "Z=", "", (short)4919, (-358));
      assertTrue(player2.isConnected());
      assertEquals((-358), player2.getStrength());
      assertEquals(4919, player2.getPictureId());
      assertEquals(0.0F, player2.getY(), 0.01F);
      assertEquals("Z=", player2.getIP());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.557702411245053
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Player player0 = new Player((-1425), "XWax/^f 7+28", (-1425));
      player0.setZ((-1425));
      Party party0 = new Party();
      player0.head = party0;
      player0.getSubparty();
      player0.head.remove(party0);
      party0.prev = player0.head;
      player0.setY((-1425));
      player0.getPictureId();
      party0.remove(player0.head);
      player0.setDead();
      player0.setDead((long) (-1425));
      player0.setDead((long) (-1425), false);
      assertEquals((-1425L), player0.getTimeOfDeath());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Player player0 = new Player((-1006));
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)37;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      String string0 = "e_,jNW)wWGKJ";
      Player player1 = new Player(0, "e_,jNW)wWGKJ", "e_,jNW)wWGKJ", (byte)0);
      player0.head = (Party) player1;
      player1.getPictureId();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      PushbackInputStream pushbackInputStream0 = null;
      try {
        pushbackInputStream0 = new PushbackInputStream(mockFileInputStream0, (byte)0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // size <= 0
         //
         verifyException("java.io.PushbackInputStream", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      MockPrintStream mockPrintStream0 = new MockPrintStream("s8;");
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
      bufferedOutputStream0.write((-19726));
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream(bufferedOutputStream0);
      Player player0 = new Player(3, "", "", (-19726));
      player0.getPictureId();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      PushbackInputStream pushbackInputStream0 = null;
      try {
        pushbackInputStream0 = new PushbackInputStream(mockFileInputStream0, (-19726));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // size <= 0
         //
         verifyException("java.io.PushbackInputStream", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Player player0 = new Player((-1006));
      player0.pack();
      Player player1 = new Player((byte)0);
      player0.setY((byte)0);
      float float0 = Player.TOLERANCE;
      player0.getX();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      PushbackInputStream pushbackInputStream0 = null;
      try {
        pushbackInputStream0 = new PushbackInputStream(mockFileInputStream0, (-1006));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // size <= 0
         //
         verifyException("java.io.PushbackInputStream", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Player player0 = new Player(3, "state.Party", "", 3, (-2220));
      int int0 = player0.getPictureId();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals("state.Party", player0.getIP());
      assertEquals(3, int0);
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals((-2220), player0.getStrength());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Player player0 = new Player(1212, "gc&\\HH}", "gc&\\HH}", (-2260));
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)41;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)12;
      byteArray0[6] = (byte) (-38);
      byteArray0[7] = (byte) (-58);
      player0.unpack(byteArray0);
      assertEquals((-2260), player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Player player0 = new Player();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      // Undeclared exception!
      try { 
        player0.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Player player0 = new Player((-1006));
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      dataInputStream0.markSupported();
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertEquals("Player-1006", player0.toString());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertFalse(boolean0);
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      System.setCurrentTimeMillis((-1L));
      Player player0 = new Player((-11815), "8xD!wh0}8)aJz|", (-11815));
      Player player1 = new Player((-1561), "8xD!wh0}8)aJz|", "[3+iiHol\"m?ibK9Wo", (short)4919);
      player0.isJoinOK(player1, true);
      System.setCurrentTimeMillis((-11815));
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Player player0 = new Player((-2080), "W{", (-2080));
      Player player1 = new Player((-950), "AnMV$", "AnMV$", (-1612), 0);
      Party party0 = player1.boss;
      player0.boss = (Party) player0;
      player0.setX(466.6F);
      float float0 = Player.MOVE_DISTANCE;
      assertEquals(0.1F, float0, 0.01F);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      MockPrintStream mockPrintStream0 = new MockPrintStream("s8;");
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
      bufferedOutputStream0.write((-19726));
      Player player0 = new Player(10, (String) null, (-1556));
      Player player1 = new Player((-1556));
      player1.setJoinOK(player0, true);
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals((-1556), player0.getPictureId());
      assertEquals(1, player1.getStrength());
      assertTrue(player1.isConnected());
      assertEquals("Player-1556", player1.toString());
      assertEquals("0.0.0.0", player1.getIP());
      assertFalse(player1.isDead());
      assertEquals(0, player1.getPictureId());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      System.setCurrentTimeMillis((-11L));
      Player player0 = new Player(37, "", "", 5, 5);
      player0.setZ((-1782.594F));
      float float0 = player0.getY();
      assertEquals((-1782.594F), player0.getZ(), 0.01F);
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.879376754279852
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Player player0 = new Player((-2646));
      player0.setDead();
      player0.getZ();
      player0.getY();
      player0.toString();
      player0.setDead((long) (-2646));
      player0.getName();
      player0.getPictureId();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-84);
      byteArray0[2] = (byte)117;
      player0.unpack(byteArray0);
      assertEquals((-2646L), player0.getTimeOfDeath());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.7825850929940454
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      System.setCurrentTimeMillis((-1L));
      Player player0 = new Player(1825, "K", 1835);
      player0.reset(false);
      Player player1 = new Player(2117);
      player0.isJoinOK(player1, false);
      Player player2 = new Player(1825);
      player0.setDead(2888L);
      player2.setY((-826.51465F));
      player1.getY();
      float float0 = Player.TOLERANCE;
      player2.getX();
      player1.getPictureId();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(mockFileInputStream0);
      PushbackInputStream pushbackInputStream1 = null;
      try {
        pushbackInputStream1 = new PushbackInputStream(pushbackInputStream0, (-737));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // size <= 0
         //
         verifyException("java.io.PushbackInputStream", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      MockPrintStream mockPrintStream0 = new MockPrintStream("s8;");
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
      File file0 = MockFile.createTempFile("s8;", "I)AEoOAW%bFz");
      MockPrintStream mockPrintStream1 = new MockPrintStream(file0);
      PrintStream printStream0 = mockPrintStream1.append(';');
      BufferedOutputStream bufferedOutputStream1 = new BufferedOutputStream(printStream0);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)0;
      bufferedOutputStream0.write(byteArray0);
      bufferedOutputStream0.write((-1621));
      Player player0 = new Player((-19726), "", "I)AEoOAW%bFz", (byte) (-23), (-1621));
      player0.pack();
      assertTrue(player0.isConnected());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals((-1621), player0.getStrength());
      assertEquals((-23), player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("", player0.getIP());
  }
}
