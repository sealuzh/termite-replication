/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 08:04:59 GMT 2019
 */

package wheel.json;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.StringWriter;
import java.io.Writer;
import java.util.Collection;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.Map;
import java.util.function.BiFunction;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import wheel.json.JSONArray;
import wheel.json.JSONObject;
import wheel.json.JSONTokener;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JSONObject_ESTest extends JSONObject_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.6079971826256068
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Float float0 = new Float((-2294.8252F));
      JSONObject jSONObject0 = new JSONObject(float0);
      Byte byte0 = new Byte((byte) (-36));
      jSONObject0.optDouble("", (-2475.340921727432));
      Byte byte1 = new Byte((byte) (-36));
      Byte.toUnsignedLong((byte)32);
      JSONObject.numberToString(float0);
      JSONObject jSONObject1 = jSONObject0.putOpt("java.lang.Float@0000000008", "java.lang.Float@0000000008");
      jSONObject1.optLong("java.lang.Float@0000000008", 0L);
      assertEquals(4, jSONObject0.length());
      
      String string0 = JSONObject.doubleToString((-288.4));
      assertEquals("-288.4", string0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.6730366045635394
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.optLong("", 0L);
      jSONObject0.optDouble((String) null, 0.0);
      Byte byte0 = new Byte((byte)3);
      Byte.toUnsignedLong((byte) (-105));
      JSONObject.numberToString(byte0);
      JSONObject jSONObject1 = new JSONObject();
      jSONObject1.toJSONArray((JSONArray) null);
      jSONObject0.opt("");
      try { 
        jSONObject1.getLong("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.65354344190089
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject.getNames((Object) jSONObject0);
      jSONObject0.toString(0);
      String string0 = "\\u";
      JSONObject jSONObject1 = jSONObject0.put(string0, 2450.355263380567);
      String string1 = "J*q:h:=1.<>";
      Boolean boolean0 = new Boolean("{}");
      jSONObject0.put("vnQ*xw>G Q", (Object) "vnQ*xw>G Q");
      jSONObject0.optLong("vnQ*xw>G Q");
      jSONObject0.get("vnQ*xw>G Q");
      jSONObject1.optJSONObject(string0);
      Integer integer0 = new Integer(0);
      HashMap<Float, Integer> hashMap0 = new HashMap<Float, Integer>();
      Float float0 = new Float(2450.355263380567);
      hashMap0.put(float0, integer0);
      Float float1 = new Float(1145.3);
      hashMap0.put(float1, integer0);
      Short short0 = new Short((short) (-1216));
      Object object0 = JSONObject.NULL;
      try { 
        jSONObject1.append("vnQ*xw>G Q", (Object) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[vnQ*xw>G Q] is not a JSONArray.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.758353074658803
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String[] stringArray0 = new String[0];
      JSONObject jSONObject0 = new JSONObject("", stringArray0);
      jSONObject0.putOpt("", ".");
      jSONObject0.optInt("");
      JSONTokener jSONTokener0 = new JSONTokener("<|Wc");
      Byte.toUnsignedLong((byte)115);
      Float float0 = new Float(0.0F);
      JSONObject.numberToString(float0);
      jSONObject0.putOpt("w_lxojpY]dOL:/S6ta", "java.lang.Float@0000000006");
      assertEquals(2, jSONObject0.length());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.887913500368097
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Object object0 = null;
      JSONObject.valueToString((Object) null, 621, 621);
      HashMap<Float, Integer> hashMap0 = new HashMap<Float, Integer>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      jSONObject0.toString();
      JSONArray jSONArray0 = new JSONArray();
      Integer integer0 = new Integer(621);
      hashMap0.getOrDefault(jSONArray0, integer0);
      int int0 = 128;
      StringWriter stringWriter0 = new StringWriter(128);
      stringWriter0.append((CharSequence) "null");
      stringWriter0.append('v');
      Writer writer0 = jSONArray0.write(stringWriter0);
      jSONObject0.write(writer0);
      String string0 = "++#$O37%AlH+E^\\\\2";
      String string1 = ")km:]G[]g?/mv /";
      jSONObject0.optLong(")km:]G[]g?/mv /");
      try { 
        jSONObject0.get("70IgA[*");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"70IgA[*\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.7871388197801212
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.optLong("", 0L);
      jSONObject0.optDouble((String) null, 0.0);
      Byte byte0 = new Byte((byte)3);
      Byte.toUnsignedLong((byte) (-105));
      JSONObject.numberToString(byte0);
      jSONObject0.putOpt("istoString", byte0);
      assertEquals(1, jSONObject0.length());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.7488823425981885
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      JSONObject.valueToString((Object) null, 621, 621);
      HashMap<Float, Integer> hashMap0 = new HashMap<Float, Integer>();
      JSONObject jSONObject0 = new JSONObject((Object) hashMap0);
      jSONObject0.toString();
      JSONArray jSONArray0 = new JSONArray();
      JSONObject jSONObject1 = new JSONObject("{\"java.lang.String@0000000004\":\"java.lang.Class@0000000005\",\"java.lang.String@0000000002\":java.lang.Boolean@0000000003}");
      Byte byte0 = new Byte((byte)69);
      JSONObject jSONObject2 = jSONObject1.accumulate("#8n>", "null");
      jSONObject2.optJSONObject("0_hd2#w)1`y}");
      JSONObject jSONObject3 = new JSONObject((Map) hashMap0);
      Integer integer0 = new Integer(23);
      Integer integer1 = new Integer(23);
      Integer integer2 = new Integer(621);
      hashMap0.put((Float) null, integer2);
      short short0 = (short)1090;
      Short short1 = new Short((short)148);
      String string0 = null;
      try { 
        jSONObject1.append((String) null, (Object) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      try { 
        JSONObject.numberToString((Number) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null pointer
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.0567677722485245
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String[] stringArray0 = new String[0];
      JSONObject jSONObject0 = new JSONObject("", stringArray0);
      jSONObject0.putOpt("", ".");
      jSONObject0.optInt("");
      HashMap<Double, Float> hashMap0 = new HashMap<Double, Float>();
      JSONObject jSONObject1 = new JSONObject((Map) hashMap0);
      JSONObject.getNames((Object) jSONObject1);
      String string0 = jSONObject1.optString("", "");
      assertEquals("", string0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.8245336019882985
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      JSONObject.valueToString((Object) null, 621, 621);
      HashMap<Float, Integer> hashMap0 = new HashMap<Float, Integer>();
      JSONObject jSONObject0 = new JSONObject((Object) hashMap0);
      jSONObject0.toString();
      JSONArray jSONArray0 = new JSONArray();
      JSONObject jSONObject1 = new JSONObject("{\"java.lang.String@0000000004\":\"java.lang.Class@0000000005\",\"java.lang.String@0000000002\":java.lang.Boolean@0000000003}");
      Byte byte0 = new Byte((byte)69);
      JSONObject jSONObject2 = jSONObject1.accumulate("#8n>", "null");
      jSONObject2.optJSONObject("0_hd2#w)1`y}");
      JSONObject jSONObject3 = new JSONObject((Map) hashMap0);
      Integer integer0 = new Integer(620);
      Integer integer1 = new Integer(620);
      hashMap0.put((Float) null, integer1);
      Short short0 = new Short((short)1090);
      jSONObject0.append("jz(M|<", "#8n>");
      jSONObject0.put("#8n>", 1L);
      jSONObject3.optDouble("000");
      JSONObject jSONObject4 = jSONObject2.put("isaccumulate", (long) (short)1090);
      assertNotSame(jSONObject4, jSONObject0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.709410874668873
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Short short0 = new Short((short)4);
      JSONObject.valueToString(short0);
      Object object0 = new Object();
      Object object1 = JSONObject.NULL;
      Short.compare((short)4, (short)0);
      Boolean boolean0 = new Boolean("r");
      Byte byte0 = new Byte((byte) (-74));
      JSONObject jSONObject0 = new JSONObject((Object) "java.lang.Short@0000000001");
      boolean boolean1 = jSONObject0.isNull("r");
      assertTrue(boolean1);
      
      jSONObject0.toString(125);
      assertEquals(3, jSONObject0.length());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.670792086347495
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Object object0 = new Object();
      JSONObject jSONObject0 = new JSONObject(object0);
      try { 
        jSONObject0.put((String) null, (-356.52189));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.8242202192383004
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      JSONObject.valueToString((Object) null, 621, 621);
      HashMap<Float, Integer> hashMap0 = new HashMap<Float, Integer>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      jSONObject0.toString();
      JSONArray jSONArray0 = new JSONArray();
      StringWriter stringWriter0 = new StringWriter(128);
      stringWriter0.append((CharSequence) "null");
      Writer writer0 = jSONArray0.write(stringWriter0);
      jSONObject0.write(writer0);
      jSONObject0.optDouble("++#$O37%AlH+E^\\2");
      jSONObject0.optJSONArray("va");
      jSONObject0.toString();
      try { 
        jSONObject0.put("true", Double.NaN);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSON does not allow non-finite numbers.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.2682898214660536
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      Float float0 = new Float((float) 2330L);
      Boolean boolean0 = new Boolean("");
      jSONObject0.put("wD$ZS89ygQdtNecM", true);
      jSONObject0.optBoolean("wD$ZS89ygQdtNecM");
      Boolean boolean1 = new Boolean("");
      JSONTokener jSONTokener0 = new JSONTokener("|-3");
      try { 
        jSONObject0.getDouble("|-3");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"|-3\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.4370338247793026
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Float float0 = new Float((-2294.8252F));
      JSONObject jSONObject0 = new JSONObject(float0);
      Byte byte0 = new Byte((byte) (-36));
      JSONObject jSONObject1 = new JSONObject();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "] is no|a Boolean.";
      int int0 = (-4206);
      JSONObject.valueToString(jSONObject0, (byte) (-36), (-4206));
      try { 
        jSONObject1.getJSONArray("UC0[FV[VfXx>");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"UC0[FV[VfXx>\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.736973395050699
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      Short short0 = new Short((short) (-18));
      String[] stringArray0 = JSONObject.getNames((Object) jSONObject0);
      Object object0 = new Object();
      JSONObject jSONObject1 = new JSONObject((Object) jSONObject0, stringArray0);
      jSONObject0.names();
      jSONObject1.toString((-1537));
      jSONObject0.optJSONObject("");
      Integer integer0 = new Integer((-1332));
      HashMap<Float, Integer> hashMap0 = new HashMap<Float, Integer>();
      Float float0 = new Float((double) (short) (-18));
      Float float1 = new Float(1.0);
      hashMap0.put(float1, integer0);
      Float float2 = new Float((double) (-1537));
      Float float3 = new Float((-2346.539));
      hashMap0.put(float3, (Integer) null);
      Short short1 = new Short((short) (-4394));
      Object object1 = JSONObject.NULL;
      Float float4 = new Float((-2346.539));
      jSONObject1.append("", float4);
      Object object2 = new Object();
      Short.compare((short) (-312), (short) (-756));
      Boolean boolean0 = new Boolean("");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.505550950858002
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      HashMap<JSONArray, JSONArray> hashMap0 = new HashMap<JSONArray, JSONArray>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      jSONObject0.optLong(".", (long) 47);
      Integer integer0 = new Integer(47);
      Integer integer1 = new Integer(656);
      Integer.getInteger(".", integer1);
      JSONObject.getNames((Object) integer0);
      jSONObject0.remove("[");
      Float float0 = new Float((-31.42751F));
      JSONObject jSONObject1 = jSONObject0.put("wheel.json.JSONException", (Object) null);
      jSONObject1.optBoolean("[");
      Boolean boolean0 = new Boolean("Q$re 9#Nij");
      jSONObject1.optString("", ".");
      Long long0 = new Long(47);
      JSONTokener jSONTokener0 = new JSONTokener("te7CBE8auG,Q{*[UTM>");
      jSONTokener0.nextValue();
      jSONTokener0.nextTo('\"');
      JSONObject jSONObject2 = null;
      try {
        jSONObject2 = new JSONObject(jSONTokener0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must begin with '{' at character 19 of te7CBE8auG,Q{*[UTM>
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.1708098259355384
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Float float0 = new Float((-1070.58344358));
      JSONObject.valueToString(float0);
      Object object0 = JSONObject.NULL;
      JSONObject.getNames(object0);
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject("_D)$bB[xVG%/<IgW");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must begin with '{' at character 1 of _D)$bB[xVG%/<IgW
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.898721714467755
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      JSONObject.valueToString((Object) null, 621, 621);
      HashMap<Float, Integer> hashMap0 = new HashMap<Float, Integer>();
      JSONObject jSONObject0 = new JSONObject((Object) hashMap0);
      jSONObject0.toString();
      JSONArray jSONArray0 = new JSONArray();
      JSONObject jSONObject1 = new JSONObject("{\"java.lang.String@0000000004\":\"java.lang.Class@0000000005\",\"java.lang.String@0000000002\":java.lang.Boolean@0000000003}");
      Byte byte0 = new Byte((byte)69);
      JSONObject jSONObject2 = jSONObject1.accumulate("#8n>", "null");
      jSONObject2.optJSONObject("0_hd2#w)1`y}");
      JSONObject jSONObject3 = new JSONObject((Map) hashMap0);
      Integer integer0 = new Integer(620);
      Integer integer1 = new Integer(620);
      hashMap0.put((Float) null, integer1);
      short short0 = (short)1090;
      Short short1 = new Short((short)1090);
      jSONObject0.append("jz(M|<", "#8n>");
      jSONObject0.put("#8n>", 1L);
      // Undeclared exception!
      try { 
        JSONObject.valueToString(hashMap0, (-2551), (-926));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.0493282367572085
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Short short0 = new Short((short)4);
      Float float0 = new Float(0.0F);
      String string0 = "8q),\"";
      Boolean boolean0 = Boolean.TRUE;
      JSONObject jSONObject0 = new JSONObject(boolean0);
      Integer integer0 = new Integer(2458);
      JSONObject jSONObject1 = jSONObject0.put("6bGU$+H|75^S", (Object) integer0);
      Short.toUnsignedInt((short)9);
      JSONArray jSONArray0 = new JSONArray();
      jSONObject1.toJSONArray(jSONArray0);
      JSONObject jSONObject2 = new JSONObject();
      try { 
        jSONObject2.getJSONArray("\n");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\\n\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.964025527646945
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = jSONObject0.putOpt("", "");
      int int0 = 3497;
      HashMap<JSONObject, Object> hashMap0 = new HashMap<JSONObject, Object>();
      HashMap<JSONObject, Object> hashMap1 = new HashMap<JSONObject, Object>();
      hashMap1.put(jSONObject0, (Object) null);
      JSONObject jSONObject2 = jSONObject1.put("", (Map) hashMap0);
      jSONObject2.remove("");
      JSONObject jSONObject3 = new JSONObject();
      jSONObject1.optDouble("istoString", (-22.196707960381));
      jSONObject0.put("to", 0L);
      String string0 = "] is not a Boolean.";
      try { 
        jSONObject3.getBoolean((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.6141342688540805
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      Object object0 = new Object();
      LinkedList<Double> linkedList0 = new LinkedList<Double>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      LinkedList<Object> linkedList1 = new LinkedList<Object>();
      linkedList0.removeAll(linkedList1);
      String string0 = JSONObject.valueToString(jSONArray0, 101, 9);
      assertEquals("[]", string0);
      
      boolean boolean0 = jSONObject0.isNull("java.lang.Long@0000000008.");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.048836609591917
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      Object object0 = new Object();
      String string0 = JSONObject.valueToString((Object) null, 827, 827);
      Integer.getInteger("\b", (-1969));
      JSONObject.getNames((Object) null);
      JSONObject.quote((String) null);
      Float float0 = new Float((float) (-1969));
      Double double0 = new Double(3454.404254219);
      String string1 = JSONObject.valueToString(double0, (-3530), (-682));
      assertFalse(string1.equals((Object)string0));
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.6412871195761536
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Short short0 = new Short((short) (-2728));
      String[] stringArray0 = JSONObject.getNames((Object) short0);
      Object object0 = new Object();
      JSONObject jSONObject0 = new JSONObject(object0, stringArray0);
      jSONObject0.names();
      JSONArray jSONArray0 = new JSONArray();
      jSONObject0.toString((-274));
      String string0 = "cmjMWc-&{sF";
      Float float0 = new Float(1.0F);
      jSONObject0.put("cmjMWc-&{sF", (Object) float0);
      Short.toUnsignedInt((short) (-2728));
      try { 
        jSONArray0.put((-274), (Map) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONArray[-274] not found.
         //
         verifyException("wheel.json.JSONArray", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.7980021635821193
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String string0 = "8";
      JSONObject jSONObject1 = jSONObject0.putOpt("8", "8");
      jSONObject1.optInt("8");
      String string1 = null;
      try { 
        jSONObject0.getDouble((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.7099284913365564
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Float float0 = new Float((-2294.8252F));
      JSONObject jSONObject0 = new JSONObject(float0);
      Byte byte0 = new Byte((byte) (-36));
      jSONObject0.optDouble("", (-2475.340921727432));
      Byte byte1 = new Byte((byte) (-36));
      HashMap<Float, Integer> hashMap0 = new HashMap<Float, Integer>();
      hashMap0.put((Float) null, (Integer) null);
      Float float1 = new Float((-2475.340921727432));
      Float float2 = new Float((-2294.8252F));
      String string0 = "Substring bounds error";
      try { 
        Integer.valueOf("Substring bounds error", (-1515));
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // radix -1515 less than Character.MIN_RADIX
         //
         verifyException("java.lang.Integer", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.0775864028427025
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject.getNames(jSONObject0);
      int int0 = 0;
      jSONObject0.toString(0);
      String string0 = "\\u";
      JSONObject jSONObject1 = jSONObject0.put(string0, 2450.355263380567);
      String string1 = null;
      jSONObject1.optBoolean("J*q:h:=1.<>", true);
      JSONObject jSONObject2 = jSONObject0.put("vnQ*xw>G Q", (Object) "vnQ*xw>G Q");
      jSONObject0.optLong("vnQ*xw>G Q");
      jSONObject0.get("vnQ*xw>G Q");
      short short0 = (short)4;
      Short short1 = new Short((short)4);
      JSONObject.valueToString(short1);
      JSONObject.valueToString("{}");
      jSONObject1.optDouble("vnQ*xw>G Q");
      jSONObject1.optInt((String) null);
      jSONObject2.optDouble("vnQ*xw>G Q", 2732.51122126);
      try { 
        jSONObject2.put((String) null, true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.9216162924453175
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject.getNames(jSONObject0);
      jSONObject0.toString(0);
      String string0 = "\\u";
      JSONObject jSONObject1 = jSONObject0.put(string0, 2450.355263380567);
      String string1 = "J*q:h:=1.<>";
      Boolean boolean0 = new Boolean("{}");
      jSONObject0.put("vnQ*xw>G Q", (Object) "vnQ*xw>G Q");
      jSONObject0.optLong("vnQ*xw>G Q");
      jSONObject0.get("vnQ*xw>G Q");
      Short short0 = new Short((short)4);
      JSONObject.valueToString(short0);
      JSONObject.valueToString("{}");
      jSONObject0.optDouble("{}");
      jSONObject0.optInt("{}");
      Object object0 = new Object();
      JSONObject.quote("vnQ*xw>G Q");
      try { 
        jSONObject1.getLong("J*q:h:=1.<>");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"J*q:h:=1.<>\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.3415199407687246
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Object object0 = new Object();
      JSONObject jSONObject0 = new JSONObject(object0);
      jSONObject0.isNull("#H");
      HashMap<JSONObject, Object> hashMap0 = new HashMap<JSONObject, Object>();
      HashMap<JSONObject, Object> hashMap1 = new HashMap<JSONObject, Object>();
      hashMap1.put(jSONObject0, "Null key.");
      jSONObject0.put("Null key.", (Map) hashMap0);
      JSONObject jSONObject1 = new JSONObject();
      BiFunction<Object, Object, Double> biFunction0 = (BiFunction<Object, Object, Double>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      hashMap0.replaceAll(biFunction0);
      jSONObject0.optDouble("to", 3071.218016596822);
      String string0 = ",:]}/\\\"[{;=#";
      jSONObject0.put(",:]}/\"[{;=#", 0L);
      jSONObject0.optDouble("app", 1.0);
      Object object1 = new Object();
      jSONObject0.opt(",:]}/\"[{;=#");
      JSONObject.quote(",\n");
      try { 
        jSONObject0.getLong("\",\n\"");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\\\",\\n\\\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.3035766239325492
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Float float0 = new Float((-2294.8252F));
      JSONObject jSONObject0 = new JSONObject(float0);
      Byte byte0 = new Byte((byte) (-36));
      JSONObject jSONObject1 = new JSONObject(byte0);
      String string0 = jSONObject0.toString((-274));
      Float float1 = new Float(1.0F);
      Object object0 = new Object();
      String string1 = JSONObject.quote("{\n\"java.lang.String@0000000002\": java.lang.Boolean@0000000003,\n\"java.lang.String@0000000004\": java.lang.Boolean@0000000005,\n\"java.lang.String@0000000006\": \"java.lang.Class@0000000007\"\n}");
      assertFalse(string1.equals((Object)string0));
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      HashMap<Object, Integer> hashMap0 = new HashMap<Object, Integer>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      String string0 = null;
      jSONObject0.toString(53, 60);
      try { 
        jSONObject0.getJSONArray((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.810414954275841
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      HashMap<Byte, Object> hashMap0 = new HashMap<Byte, Object>();
      hashMap0.put((Byte) null, (Object) null);
      hashMap0.put((Byte) null, (Object) null);
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      jSONObject0.has("] is not a Boolean.");
      jSONObject0.optString("(s^$|y[<A)2\"");
      String string0 = "gettoString";
      jSONObject0.optDouble("gettoString");
      LinkedList<JSONArray> linkedList0 = new LinkedList<JSONArray>();
      JSONObject jSONObject1 = jSONObject0.put("YqhNxN+", (Collection) linkedList0);
      jSONObject0.optBoolean("] is not a Boolean.");
      Boolean boolean0 = new Boolean(false);
      linkedList0.removeLastOccurrence(boolean0);
      jSONObject1.names();
      jSONObject1.isNull("wheel.json.JSONException");
      JSONTokener jSONTokener0 = new JSONTokener("gettoString");
      JSONArray jSONArray0 = null;
      try {
        jSONArray0 = new JSONArray(jSONTokener0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONArray text must start with '[' at character 1 of gettoString
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.2141364168236586
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Float float0 = new Float((-2294.8252F));
      JSONObject jSONObject0 = new JSONObject(float0);
      byte byte0 = (byte) (-36);
      Byte byte1 = new Byte((byte) (-36));
      JSONObject.testValidity(byte1);
      Object object0 = new Object();
      Integer integer0 = Integer.valueOf((int) (byte) (-36));
      JSONObject.valueToString(integer0, 827, 44);
      try { 
        jSONObject0.getJSONArray("oC+D/uS4aZD4!-d6");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"oC+D/uS4aZD4!-d6\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.030762166839304
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject.getNames(jSONObject0);
      jSONObject0.toString(0);
      String string0 = "\\u";
      JSONObject jSONObject1 = jSONObject0.put(string0, 2450.355263380567);
      jSONObject1.optBoolean("J*q:h:=1.<>", true);
      JSONObject jSONObject2 = jSONObject0.put("vnQ*xw>G Q", (Object) "vnQ*xw>G Q");
      jSONObject0.optLong("vnQ*xw>G Q");
      jSONObject0.get("vnQ*xw>G Q");
      Short short0 = new Short((short)4);
      JSONObject.valueToString(short0);
      JSONObject.valueToString("{}");
      jSONObject0.optInt("{}");
      jSONObject0.optDouble(string0, (-2219.733027271714));
      JSONObject jSONObject3 = jSONObject2.put(string0, false);
      jSONObject2.optLong(string0, (long) 0);
      jSONObject2.optBoolean("java.lang.Short@0000000007", false);
      jSONObject0.optLong("\"\"", 0L);
      jSONObject2.optJSONObject("java.lang.Short@0000000007");
      jSONObject3.length();
      try { 
        jSONObject2.get("\"java.lang.String@0000000008\"");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\\\"java.lang.String@0000000008\\\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.3612296323290933
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Object object0 = new Object();
      JSONObject jSONObject0 = new JSONObject(object0);
      String[] stringArray0 = new String[0];
      JSONObject jSONObject1 = new JSONObject(jSONObject0, stringArray0);
      JSONObject.testValidity(object0);
      int int0 = 47;
      Object object1 = new Object();
      jSONObject1.optBoolean(".");
      String string0 = "\\";
      Boolean boolean0 = new Boolean("getnotify");
      jSONObject1.optString("] is not a JSONObject.", "getnotify");
      try { 
        jSONObject0.getDouble("= 4");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"= 4\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.788490352562607
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.optLong("", 0L);
      jSONObject0.optDouble((String) null, 0.0);
      jSONObject0.optInt((String) null, (-3169));
      try { 
        jSONObject0.put((String) null, (-895L));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.635461147195488
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Object object0 = new Object();
      JSONObject jSONObject0 = new JSONObject(object0);
      String[] stringArray0 = new String[0];
      JSONObject jSONObject1 = new JSONObject(jSONObject0, stringArray0);
      JSONObject jSONObject2 = null;
      try {
        jSONObject2 = new JSONObject((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.837759896200898
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      JSONObject jSONObject0 = new JSONObject(object0);
      jSONObject0.length();
      jSONObject0.optLong("000");
      jSONObject0.toString(0);
      JSONObject.valueToString(jSONObject0);
      jSONObject0.names();
      jSONObject0.optLong("h-7mO$gdP|Q>D", (long) 1);
      jSONObject0.optBoolean("wheel.json.JSONObject@0000000001", false);
      jSONObject0.opt("'");
      JSONObject.valueToString("000");
      jSONObject0.optLong("", 0L);
      String string0 = "\\u";
      JSONTokener jSONTokener0 = new JSONTokener(string0);
      JSONArray jSONArray0 = null;
      try {
        jSONArray0 = new JSONArray(jSONTokener0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONArray text must start with '[' at character 1 of \\u
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.848744552361007
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Object object0 = new Object();
      JSONObject jSONObject0 = new JSONObject(object0);
      jSONObject0.isNull("#H");
      jSONObject0.toString(16, (-1996));
      String string0 = "X|, ";
      jSONObject0.optInt("X|, ");
      JSONObject.valueToString(jSONObject0);
      jSONObject0.toString();
      try { 
        jSONObject0.getLong("Null key.");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"Null key.\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.8540059226242978
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String string0 = "";
      JSONObject jSONObject0 = new JSONObject("", stringArray0);
      JSONObject jSONObject1 = jSONObject0.putOpt("", ".");
      jSONObject0.optInt("");
      try { 
        jSONObject1.put((String) null, (Object) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.9193618394362675
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      Boolean boolean0 = Boolean.valueOf((String) null);
      Boolean.logicalXor(false, false);
      Boolean.getBoolean((String) null);
      try { 
        jSONObject0.accumulate((String) null, boolean0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.6466410668376574
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      JSONObject.valueToString((Object) null, 621, 621);
      HashMap<Float, Integer> hashMap0 = new HashMap<Float, Integer>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      jSONObject0.toString();
      JSONArray jSONArray0 = new JSONArray();
      Integer integer0 = new Integer(621);
      hashMap0.getOrDefault(jSONArray0, integer0);
      StringWriter stringWriter0 = new StringWriter(128);
      stringWriter0.append((CharSequence) "null");
      stringWriter0.append('v');
      Writer writer0 = jSONArray0.write(stringWriter0);
      jSONObject0.write(writer0);
      assertEquals("nullv[]{}", writer0.toString());
      
      jSONObject0.optDouble("++#$O37%AlH+E^\\2");
      jSONObject0.optJSONArray("va");
      jSONObject0.toString();
      jSONObject0.optJSONObject("^4.wH");
      JSONObject jSONObject1 = new JSONObject((Map) hashMap0);
      Integer integer1 = new Integer(621);
      Integer.min(70, 621);
      hashMap0.put((Float) null, integer1);
      Short short0 = new Short((short) (-938));
      JSONObject jSONObject2 = jSONObject1.append("no", short0);
      Short.compare((short) (-938), (short) (-938));
      jSONObject2.put("/CpSV/AUb", (Object) jSONArray0);
      jSONObject1.optInt("va", 29);
      int int0 = jSONObject0.optInt("is", (int) (short) (-938));
      assertEquals((-938), int0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.4993646124305886
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      String string0 = "sh";
      JSONTokener jSONTokener0 = new JSONTokener("sh");
      short short0 = (short)4;
      Short short1 = new Short((short)4);
      Boolean boolean0 = Boolean.valueOf(true);
      JSONObject.valueToString(boolean0);
      JSONObject.valueToString(short1);
      String string1 = "0";
      JSONArray jSONArray0 = null;
      try {
        jSONArray0 = new JSONArray("0");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONArray text must start with '[' at character 1 of 0
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.6175957547716004
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Float float0 = new Float((-2294.8252F));
      JSONObject jSONObject0 = new JSONObject(float0);
      String string0 = "";
      Float.isFinite(0.0F);
      Float.sum(0.0F, 477.3F);
      Float.max(0.0F, 0.0F);
      jSONObject0.optInt("");
      jSONObject0.optString("");
      jSONObject0.toString();
      try { 
        jSONObject0.getLong("5M*RKiFp6r.");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"5M*RKiFp6r.\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.9018956404837546
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Object object0 = new Object();
      JSONObject jSONObject0 = new JSONObject(object0);
      String[] stringArray0 = new String[1];
      JSONObject jSONObject1 = new JSONObject(jSONObject0);
      JSONObject jSONObject2 = new JSONObject(jSONObject1, stringArray0);
      assertEquals(1, jSONObject1.length());
      assertEquals(1, jSONObject0.length());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.4097337960822074
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Float float0 = new Float((-2294.8252F));
      JSONObject jSONObject0 = new JSONObject(float0);
      Byte byte0 = new Byte((byte) (-36));
      JSONObject jSONObject1 = new JSONObject(byte0);
      jSONObject0.optJSONArray("com");
      jSONObject1.toString();
      jSONObject0.optJSONObject("{\"java.lang.String@0000000009\":\"java.lang.Class@0000000010\"}");
      Integer integer0 = new Integer((byte) (-36));
      HashMap<Float, Integer> hashMap0 = new HashMap<Float, Integer>();
      Float float1 = new Float(1145.3);
      hashMap0.put(float1, integer0);
      Short short0 = new Short((short)2153);
      Object object0 = JSONObject.NULL;
      jSONObject1.append("gettoUnsignedInt", object0);
      Object object1 = new Object();
      Short.compare((short)1057, (short)10);
      Boolean boolean0 = new Boolean("\b");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      String string0 = null;
      JSONTokener jSONTokener0 = new JSONTokener((String) null);
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject(jSONTokener0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.8380061618097847
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.optLong("", 0L);
      Boolean boolean0 = new Boolean("J*q:h:=1.<>");
      JSONObject jSONObject1 = jSONObject0.put("", (Object) null);
      jSONObject1.optLong("");
      String string0 = "] is not a number.";
      try { 
        jSONObject1.get("] is not a number.");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"] is not a number.\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.4731393732169413
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      String[] stringArray0 = new String[6];
      stringArray0[0] = "Y<.|H-w]4%";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = ">";
      stringArray0[4] = "";
      stringArray0[5] = ",_A<Z>}@iS>^3";
      JSONObject jSONObject0 = new JSONObject(object0, stringArray0);
      try { 
        jSONObject0.getDouble("java.lang.Float@00000000030");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"java.lang.Float@00000000030\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.833100463227792
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Object object0 = new Object();
      JSONObject jSONObject0 = new JSONObject(object0);
      jSONObject0.isNull("#H");
      HashMap<JSONObject, Object> hashMap0 = new HashMap<JSONObject, Object>();
      HashMap<JSONObject, Object> hashMap1 = new HashMap<JSONObject, Object>();
      hashMap1.put(jSONObject0, "Null key.");
      JSONObject jSONObject1 = jSONObject0.put("Null key.", (Map) hashMap0);
      JSONObject jSONObject2 = new JSONObject();
      jSONObject0.optDouble("to", 3071.218016596822);
      JSONObject jSONObject3 = jSONObject0.put(",:]}/\"[{;=#", 0L);
      jSONObject0.optDouble("app", 1.0);
      jSONObject1.optDouble("#H", 1.0);
      jSONObject3.put("getwait", true);
      jSONObject2.optLong("app", 0L);
      Double double0 = new Double(3071.218016596822);
      JSONObject.valueToString(double0);
      try { 
        jSONObject2.getInt("#H");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"#H\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.273240950709536
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject.getNames(jSONObject0);
      jSONObject0.toString(0);
      String string0 = "\\u";
      JSONObject jSONObject1 = jSONObject0.put(string0, 2450.355263380567);
      String string1 = "";
      try { 
        jSONObject1.getBoolean(string0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\\\\u\"] is not a Boolean.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=3.039395843744082
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      String[] stringArray0 = new String[0];
      JSONObject jSONObject0 = new JSONObject("", stringArray0);
      JSONObject jSONObject1 = jSONObject0.putOpt("", ".");
      jSONObject0.optInt("");
      JSONTokener jSONTokener0 = new JSONTokener("<|Wc");
      JSONTokener jSONTokener1 = new JSONTokener("eP@~?[OPYE");
      boolean boolean0 = jSONObject1.isNull("");
      assertEquals(1, jSONObject0.length());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.7983142990005727
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      HashMap<JSONObject, JSONObject> hashMap0 = new HashMap<JSONObject, JSONObject>();
      hashMap0.values();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      hashMap0.put(jSONObject0, jSONObject0);
      JSONObject jSONObject1 = new JSONObject((Map) hashMap0);
      jSONObject1.toString(34, 34);
      double double0 = 0.0;
      Float float0 = new Float(0.0);
      JSONObject.valueToString(float0, 1331, 1331);
      Float.isFinite(1331);
      jSONObject0.put("#zy*Ay 0.NtNw4@:s!i", (long) 34);
      JSONObject jSONObject2 = jSONObject1.put("' and instead saw '", 34);
      jSONObject0.put("#zy*Ay 0.NtNw4@:s!i", true);
      Boolean boolean0 = Boolean.FALSE;
      jSONObject2.putOpt("yK#", boolean0);
      jSONObject1.optLong("#zy*Ay 0.NtNw4@:s!i", (long) 34);
      JSONTokener jSONTokener0 = new JSONTokener("{\"wheel.json.JSONObject@0000000001\": {}}");
      JSONArray jSONArray0 = null;
      try {
        jSONArray0 = new JSONArray(jSONTokener0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONArray text must start with '[' at character 1 of {\"wheel.json.JSONObject@0000000001\": {}}
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      String string0 = null;
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.665483935920882
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Short short0 = new Short((short)4);
      JSONObject.valueToString(short0);
      Object object0 = new Object();
      Short short1 = new Short((short)4);
      JSONObject.valueToString("J*q:h:=1.<>");
      JSONObject.valueToString((Object) null);
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.put("thuaanD", 0.0);
      jSONObject0.optDouble("null");
      String string0 = null;
      jSONObject0.optInt((String) null);
      Object object1 = new Object();
      jSONObject0.put("java.lang.Short@0000000001", 0.0);
      JSONObject.doubleToString(Double.NaN);
      try { 
        jSONObject0.getLong((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.2727873018919276
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Float float0 = new Float((-2294.8252F));
      JSONObject jSONObject0 = new JSONObject(float0);
      Byte byte0 = new Byte((byte) (-36));
      JSONObject jSONObject1 = new JSONObject(byte0);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "] is not a Boolean.";
      stringArray0[1] = "Ku()xZzP";
      stringArray0[2] = "\f";
      stringArray0[3] = "'";
      stringArray0[4] = "!^bcd=BbU%+`ZfZC=";
      stringArray0[5] = "Expected a ',' or '}'";
      JSONObject jSONObject2 = new JSONObject(jSONObject0, stringArray0);
      int int0 = jSONObject2.optInt("'", 42);
      assertEquals(42, int0);
      assertEquals(3, jSONObject0.length());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      String[] stringArray0 = new String[6];
      stringArray0[0] = "td";
      stringArray0[1] = "-QL8O'%m2Rcv/'L`|";
      stringArray0[2] = "Null key.";
      stringArray0[3] = "getkeySet";
      stringArray0[4] = "va";
      stringArray0[5] = "Rt!FR5C}L/%d8#k(";
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject((JSONObject) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.4986122886681095
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("sh");
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject("sh");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must begin with '{' at character 1 of sh
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[0] = "";
      stringArray0[1] = "000";
      stringArray0[2] = "";
      stringArray0[3] = "[]";
      stringArray0[4] = "fcB4!uKs'@m~SP";
      stringArray0[5] = "*u$oSt3Ei~Z/!";
      stringArray0[6] = "] is not a JSONArray.";
      String string0 = "Ru3";
      stringArray0[7] = "Ru3";
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject((Object) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.297559296488735
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String string0 = "";
      JSONObject jSONObject1 = jSONObject0.putOpt("", "");
      jSONObject1.optInt("");
      JSONTokener jSONTokener0 = new JSONTokener("");
      Object object0 = new Object();
      JSONObject.quote("");
      String string1 = "L@";
      try { 
        jSONObject0.getLong("L@");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"L@\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.232716582315242
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      JSONObject.valueToString((Object) null, 621, 621);
      HashMap<Float, Integer> hashMap0 = new HashMap<Float, Integer>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      jSONObject0.toString();
      JSONArray jSONArray0 = new JSONArray();
      StringWriter stringWriter0 = new StringWriter(128);
      stringWriter0.append((CharSequence) "null");
      stringWriter0.append('v');
      Writer writer0 = jSONArray0.write(stringWriter0);
      jSONObject0.write(writer0);
      jSONObject0.optDouble("++#$O37%AlH+E^\\2");
      jSONObject0.optJSONArray("va");
      jSONObject0.length();
      try { 
        jSONObject0.getString("|,rO]7I");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"|,rO]7I\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.9702742015102395
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      JSONObject jSONObject0 = new JSONObject(object0);
      jSONObject0.length();
      jSONObject0.optLong("000");
      jSONObject0.toString(0);
      jSONObject0.toString(1);
      jSONObject0.names();
      jSONObject0.optLong("h-7mO$gdP|Q>D", (long) 1);
      String string0 = "'";
      jSONObject0.optBoolean("{\"java.lang.String@0000000002\": \"java.lang.Class@0000000003\"}", false);
      jSONObject0.opt("'");
      JSONObject.valueToString("'");
      jSONObject0.optString("000");
      jSONObject0.toString();
      try { 
        jSONObject0.getLong("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.498465423456379
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      Object object0 = new Object();
      JSONObject jSONObject0 = new JSONObject(object0);
      jSONObject0.isNull("JSONArray initial value should be a string or collection or array.");
      HashMap<JSONObject, Object> hashMap0 = new HashMap<JSONObject, Object>();
      HashMap<JSONObject, Object> hashMap1 = new HashMap<JSONObject, Object>();
      hashMap1.put(jSONObject0, "Null key.");
      JSONObject jSONObject1 = jSONObject0.put("Null key.", (Map) hashMap0);
      JSONObject jSONObject2 = new JSONObject();
      jSONObject0.optDouble("to", 3071.218016596822);
      JSONObject jSONObject3 = jSONObject0.put(",]}/\"[{;=#", 0L);
      jSONObject0.optDouble("[pD8CHH", 1.0);
      Object object1 = new Object();
      jSONObject1.opt("7A");
      Byte byte0 = new Byte((byte) (-74));
      jSONObject3.put("&Ms5q\u0002a[XB:xx_Gt", (Object) ",]}/\"[{;=#");
      int int0 = jSONObject1.optInt("JSONArray initial value should be a string or collection or array.", 766);
      assertEquals(4, jSONObject1.length());
      assertEquals(766, int0);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.938355421673595
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      Object object0 = new Object();
      JSONObject jSONObject0 = new JSONObject(object0);
      jSONObject0.isNull("#H");
      jSONObject0.toString(16, (-1996));
      String string0 = "X|, ";
      jSONObject0.optInt("X|, ");
      jSONObject0.optString("wheel.json.JSONObject$Null");
      jSONObject0.toString();
      try { 
        jSONObject0.getLong("Null key.");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"Null key.\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=3.0089894083063307
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject.getNames(jSONObject0);
      jSONObject0.toString(0);
      String string0 = "\\u";
      JSONObject jSONObject1 = jSONObject0.put(string0, 2450.355263380567);
      jSONObject1.optBoolean("J*q:h:=1.<>", true);
      JSONObject jSONObject2 = jSONObject0.put("vnQ*xw>G Q", (Object) "vnQ*xw>G Q");
      jSONObject0.optLong("vnQ*xw>G Q");
      jSONObject0.get("vnQ*xw>G Q");
      Short short0 = new Short((short)4);
      JSONObject.valueToString(short0);
      JSONObject.valueToString("{}");
      jSONObject0.optInt("{}");
      jSONObject0.optDouble(string0, (-2219.733027271714));
      JSONObject jSONObject3 = jSONObject2.put(string0, true);
      jSONObject2.optLong(string0, (long) 0);
      JSONObject.valueToString("{}");
      String string1 = "eVs9k{A";
      try { 
        jSONObject3.getInt("eVs9k{A");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"eVs9k{A\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.005650379825582
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      Object object0 = new Object();
      JSONObject jSONObject0 = new JSONObject(object0);
      String[] stringArray0 = new String[0];
      JSONArray jSONArray0 = jSONObject0.names();
      assertNotNull(jSONArray0);
      
      JSONObject jSONObject1 = new JSONObject(jSONObject0, stringArray0);
      JSONObject jSONObject2 = new JSONObject(jSONObject1, stringArray0);
      assertEquals(1, jSONObject0.length());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      JSONArray jSONArray1 = new JSONArray();
      jSONArray0.toJSONObject(jSONArray1);
      HashMap<JSONArray, Short> hashMap0 = new HashMap<JSONArray, Short>();
      jSONArray1.put(0, (Map) hashMap0);
      // Undeclared exception!
      try { 
        JSONObject.getNames((JSONObject) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.8742483506497112
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String string0 = "\\u";
      jSONObject0.optLong(string0, 2330L);
      String string1 = "1V2E_$PD_";
      jSONObject0.optString(string0);
      jSONObject0.toString();
      try { 
        jSONObject0.getLong((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.5490230514048333
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      Object object0 = new Object();
      String[] stringArray0 = new String[1];
      Byte byte0 = new Byte((byte)98);
      JSONObject jSONObject0 = new JSONObject(byte0, stringArray0);
      boolean boolean0 = jSONObject0.optBoolean("\f", true);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.592435999354804
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String string0 = "\\u";
      jSONObject0.optLong(string0, 2330L);
      JSONObject.getNames((Object) string0);
      jSONObject0.remove(string0);
      Float float0 = new Float((float) 2330L);
      JSONObject jSONObject1 = jSONObject0.put(string0, (Object) float0);
      jSONObject1.optBoolean(string0);
      Boolean boolean0 = new Boolean("");
      jSONObject0.optString("", string0);
      double double0 = new Long(2330L);
      jSONObject0.put("wD$ZS89ygQdtNecM", true);
      jSONObject0.opt(string0);
      Boolean boolean1 = new Boolean("");
      Byte byte0 = new Byte((byte)37);
      JSONTokener jSONTokener0 = new JSONTokener("}%T_2!:s1R");
      JSONArray jSONArray0 = null;
      try {
        jSONArray0 = new JSONArray(jSONTokener0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONArray text must start with '[' at character 1 of }%T_2!:s1R
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.0003369130523185
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String string0 = "";
      JSONObject jSONObject1 = jSONObject0.put("Expected a ':' after a key", (-356.52189));
      LinkedList<Boolean> linkedList0 = new LinkedList<Boolean>();
      Boolean boolean0 = Boolean.TRUE;
      linkedList0.add(boolean0);
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      jSONArray0.optJSONObject(92);
      jSONObject1.append("", (Object) null);
      try { 
        jSONObject0.getJSONArray("Expected a ':' after a key");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"Expected a ':' after a key\"] is not a JSONArray.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      HashMap<Byte, Float> hashMap0 = new HashMap<Byte, Float>();
      byte byte0 = (byte) (-105);
      Byte byte1 = new Byte((byte) (-105));
      Float float0 = new Float((-1340.7533F));
      StringWriter stringWriter0 = new StringWriter(919);
      StringWriter stringWriter1 = stringWriter0.append('N');
      JSONObject.doubleToString((-1.0));
      stringWriter0.close();
      // Undeclared exception!
      try { 
        stringWriter1.append((CharSequence) "-1", 594, (int) (byte) (-105));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.3631282231415276
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      Object object0 = new Object();
      JSONObject jSONObject0 = new JSONObject(object0);
      jSONObject0.isNull("#H");
      String string0 = "Null key.";
      HashMap<JSONObject, Object> hashMap0 = new HashMap<JSONObject, Object>();
      HashMap<JSONObject, Object> hashMap1 = new HashMap<JSONObject, Object>();
      String string1 = "[]";
      Boolean boolean0 = new Boolean("[]");
      hashMap1.remove((Object) boolean0, (Object) null);
      hashMap1.put(jSONObject0, "Null key.");
      JSONObject jSONObject1 = jSONObject0.put("Null key.", (Map) hashMap0);
      try { 
        jSONObject1.getBoolean("Null key.");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"Null key.\"] is not a Boolean.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=3.1220803773656294
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      JSONObject.valueToString((Object) null, 621, 621);
      HashMap<Float, Integer> hashMap0 = new HashMap<Float, Integer>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      jSONObject0.toString();
      JSONArray jSONArray0 = new JSONArray();
      JSONObject jSONObject1 = new JSONObject("{}");
      Byte byte0 = new Byte((byte)69);
      JSONObject jSONObject2 = jSONObject1.accumulate("#pn>", "null");
      jSONObject2.optJSONObject("0_hd2#w)1`y}");
      JSONObject jSONObject3 = new JSONObject((Map) hashMap0);
      Integer integer0 = new Integer(620);
      Integer integer1 = new Integer(620);
      hashMap0.put((Float) null, integer1);
      Short short0 = new Short((short)1090);
      jSONObject0.append("jz(M|<", "#pn>");
      jSONObject0.put("#pn>", 1L);
      assertEquals(2, jSONObject0.length());
      
      jSONObject3.optDouble("000");
      JSONObject jSONObject4 = jSONObject2.put("isaccumulate", (long) (short)1090);
      assertEquals(2, jSONObject4.length());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.7389896102893403
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      Short short0 = new Short((short)4);
      Integer integer0 = new Integer((-64089270));
      JSONObject.valueToString(integer0);
      Object object0 = new Object();
      Object object1 = JSONObject.NULL;
      Boolean boolean0 = new Boolean(" (eY>");
      Byte byte0 = new Byte((byte)72);
      Object object2 = new Object();
      assertFalse(object2.equals((Object)object0));
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      String[] stringArray0 = new String[1];
      JSONTokener jSONTokener0 = new JSONTokener("sh");
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject(jSONTokener0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must begin with '{' at character 1 of sh
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=2.51215915001446
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      Float float0 = new Float(Double.NaN);
      Float.isFinite(3806.0F);
      JSONObject jSONObject0 = new JSONObject(float0);
      JSONObject.getNames(jSONObject0);
      jSONObject0.keys();
      jSONObject0.optBoolean((String) null, false);
      Float.sum(0.0F, 3806.0F);
      Integer integer0 = new Integer(0);
      Integer.divideUnsigned(1018, 125);
      Integer.sum(46, 8);
      Integer.divideUnsigned(125, 4);
      try { 
        jSONObject0.getString((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.613129842728147
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      Long long0 = new Long((-1L));
      String[] stringArray0 = new String[4];
      stringArray0[0] = "' and instead saw '";
      stringArray0[1] = "Substring bounds error";
      stringArray0[2] = "{U;Z:>wH";
      stringArray0[3] = "";
      JSONObject jSONObject0 = new JSONObject(long0, stringArray0);
      boolean boolean0 = jSONObject0.optBoolean("Substring bounds error", false);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.9175503412075572
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      Float float0 = new Float((-2294.8252F));
      JSONObject jSONObject0 = new JSONObject(float0);
      try { 
        jSONObject0.getString("8\"Q>PS{-");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"8\\\"Q>PS{-\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.7606352457244663
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String string0 = "";
      jSONObject0.putOpt("", "");
      JSONObject.getNames(jSONObject0);
      String string1 = null;
      try { 
        jSONObject0.getDouble((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.541280958396051
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      HashMap<Float, String> hashMap0 = new HashMap<Float, String>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      boolean boolean0 = jSONObject0.optBoolean("'");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.166330769463752
  */
  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      HashMap<Byte, Float> hashMap0 = new HashMap<Byte, Float>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      Byte byte0 = new Byte((byte) (-105));
      Float float0 = new Float((-1340.7533F));
      StringWriter stringWriter0 = new StringWriter(919);
      stringWriter0.append('N');
      int int0 = (-274);
      jSONObject0.toString(919);
      Float float1 = new Float((-1340.7533F));
      Long long0 = new Long((-743L));
      jSONObject0.put("true", (Object) long0);
      Short.toUnsignedInt((byte) (-105));
      JSONArray jSONArray0 = new JSONArray();
      try { 
        jSONArray0.put((-3306), (Map) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONArray[-3306] not found.
         //
         verifyException("wheel.json.JSONArray", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.4731393732169413
  */
  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      String[] stringArray0 = new String[6];
      stringArray0[0] = "Y<.|H-w]4%";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = ">";
      stringArray0[4] = "N2>c>3vNCZwK$M2?e6";
      stringArray0[5] = ",_A<Z>}@iS>^3";
      JSONObject jSONObject0 = new JSONObject(object0, stringArray0);
      try { 
        jSONObject0.getJSONObject("Y<.|H-w]4%");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"Y<.|H-w]4%\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.6241026221599717
  */
  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.optLong("", 0L);
      double double0 = jSONObject0.optDouble((String) null, 0.0);
      assertEquals(0.0, double0, 0.01);
      
      Byte byte0 = new Byte((byte)3);
      JSONTokener jSONTokener0 = new JSONTokener("e1P@~?[OPYE");
      boolean boolean0 = jSONObject0.isNull("e1P@~?[OPYE");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 84
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      JSONObject.quote("ish$ashCode");
      HashMap<Object, Integer> hashMap0 = new HashMap<Object, Integer>();
      Object object0 = new Object();
      String string0 = JSONObject.quote("ish$ashCode");
      assertEquals("\"ish$ashCode\"", string0);
  }

  /**
  //Test case number: 85
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      try { 
        jSONObject0.getJSONObject((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }
}
