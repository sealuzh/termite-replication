/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 07:48:18 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.PipedInputStream;
import java.io.SequenceInputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassReader;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.6410821009116294
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(953);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "G", "G", (String) null, "G");
      fieldWriter0.visitAnnotation("KXuvvoA+", true);
      ByteVector byteVector0 = new ByteVector(2411);
      fieldWriter0.put(byteVector0);
      fieldWriter0.visitAnnotation("G", true);
      fieldWriter0.visitAnnotation("KXuvvoA+", true);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "RuntimeVisibleAnnotations");
      ByteVector byteVector1 = byteVector0.putUTF8("G");
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, (-75), "G", "", "W`,%6r6", "5haI507$q");
      fieldWriter1.put(byteVector1);
      fieldWriter0.getSize();
      fieldWriter1.next = fieldWriter0;
      FieldWriter fieldWriter2 = fieldWriter1.next;
      Attribute attribute0 = new Attribute("5haI507$q");
      fieldWriter1.next.visitAttribute(attribute0);
      fieldWriter1.getSize();
      fieldWriter1.visitAnnotation("", false);
      // Undeclared exception!
      try { 
        fieldWriter1.next.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Attribute attribute0 = new Attribute("The FileFilter must not be null");
      Attribute attribute1 = new Attribute("nX");
      attribute0.next = attribute1;
      Attribute attribute2 = attribute0.next;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)53;
      ClassWriter classWriter0 = new ClassWriter((byte)53);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 184, "nX", "", "The FileFilter must not be null", (Object) null);
      classWriter0.newUTF8("");
      ByteVector byteVector0 = classWriter0.pool;
      byteVector0.data = byteArray0;
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0108643020548935
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int int0 = 953;
      ClassWriter classWriter0 = new ClassWriter(953);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 953, "TDNRHynd7z82(Kd)<", "org.apache.commons.io.filefilter.SuffixFileFilter", "2q", (Object) null);
      fieldWriter0.getSize();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      byte[] byteArray0 = new byte[0];
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0, 1);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      PipedInputStream pipedInputStream1 = new PipedInputStream(613);
      BufferedInputStream bufferedInputStream1 = new BufferedInputStream(pipedInputStream1, 9);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pipedInputStream1, pipedInputStream1);
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(bufferedInputStream0, bufferedInputStream1);
      pipedInputStream1.markSupported();
      BufferedInputStream bufferedInputStream2 = new BufferedInputStream(pipedInputStream1, 10);
      SequenceInputStream sequenceInputStream2 = new SequenceInputStream(bufferedInputStream1, bufferedInputStream0);
      ByteVector byteVector0 = new ByteVector();
      ObjectInputStream objectInputStream0 = null;
      try {
        objectInputStream0 = new ObjectInputStream(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0832409930999294
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Attribute attribute0 = new Attribute("q");
      Attribute attribute1 = attribute0.next;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)53;
      ClassWriter classWriter0 = new ClassWriter((byte)53);
      String string0 = null;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 184, "X", "", "q", (Object) null);
      classWriter0.newUTF8("r<%%!ybA^3u~++");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.054669564528501
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Attribute attribute0 = new Attribute("q");
      Attribute attribute1 = attribute0.next;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)53;
      ClassWriter classWriter0 = new ClassWriter((byte)53);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 184, "nX", "", "q", (Object) null);
      classWriter0.newUTF8("r<%%!ybA^3u~++");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.49057893774639
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(65535);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 65535, "org.apache.commons.io.filefilter.NotFileFilter", "RHPS!$OxDeTX ", "0UT", (Object) null);
      classWriter0.addUninitializedType("/:wcbAT;", 65535);
      fieldWriter0.visitAnnotation("D!EU tep&Y", false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "/:wcbAT;");
      classWriter0.visitAnnotation("'pCBY|J^;[cG4", false);
      ByteVector byteVector0 = new ByteVector();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "$$cVty_p");
      ByteVector byteVector1 = byteVector0.putInt(1);
      fieldWriter0.put(byteVector0);
      fieldWriter0.getSize();
      ByteVector byteVector2 = classWriter0.pool;
      fieldWriter0.put(byteVector2);
      assertFalse(byteVector2.equals((Object)byteVector1));
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.6330507367208313
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "TDNRHynd7z82}`Kd)<", "bD0", "3]CiR&56d", "bD0");
      fieldWriter0.getSize();
      Attribute attribute0 = new Attribute("bD0");
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector1 = byteVector0.putUTF8("");
      byteVector1.putByte(24);
      ByteVector byteVector2 = byteVector1.putLong(1);
      ByteVector byteVector3 = byteVector2.putShort(24);
      ByteVector byteVector4 = byteVector3.put11(24, (-444));
      // Undeclared exception!
      fieldWriter0.put(byteVector4);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = "q";
      Attribute attribute0 = new Attribute("q");
      Attribute attribute1 = attribute0.next;
      ClassWriter classWriter0 = new ClassWriter((byte)53);
      String string1 = "";
      String string2 = null;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 184, "nX", "", "q", (Object) null);
      FieldWriter fieldWriter1 = null;
      try {
        fieldWriter1 = new FieldWriter(classWriter0, 184, (String) null, "q", "(QOY0EF", (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.4895424853149775
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "TDNRHyd7z82}`Kd)<", "bD0", "3]CiR&56d", "bD0");
      fieldWriter0.getSize();
      Attribute attribute0 = new Attribute("bD0");
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.putUTF8("");
      ByteVector byteVector2 = byteVector1.putLong(1);
      ByteVector byteVector3 = byteVector2.putShort(24);
      ByteVector byteVector4 = byteVector3.put11(24, (-444));
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector4);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.8659992569610426
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "", "n2r:Gfr_U;", "", (Object) null);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(229);
      String string0 = "";
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 229, "", "p7O7E>_", "p7O7E>_", classWriter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.ClassWriter@5
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1719));
      String string0 = "";
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 14, "", "", (String) null, (Object) null);
      Attribute attribute0 = new Attribute("");
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pipedInputStream0, pipedInputStream0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(bufferedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }
}
