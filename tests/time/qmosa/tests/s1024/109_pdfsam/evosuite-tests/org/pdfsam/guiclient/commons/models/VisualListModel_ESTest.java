/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 08:16:22 GMT 2019
 */

package org.pdfsam.guiclient.commons.models;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.AWTEventMulticaster;
import java.awt.RenderingHints;
import java.awt.event.HierarchyBoundsListener;
import java.awt.event.HierarchyListener;
import java.awt.event.WindowListener;
import java.awt.event.WindowStateListener;
import java.awt.image.IndexColorModel;
import java.awt.image.RescaleOp;
import java.awt.image.renderable.ParameterBlock;
import java.util.ArrayDeque;
import java.util.ArrayList;
import java.util.Collection;
import java.util.ConcurrentModificationException;
import java.util.HashMap;
import java.util.HashSet;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Stack;
import java.util.TreeSet;
import java.util.Vector;
import javax.media.jai.CollectionOp;
import javax.media.jai.OperationRegistry;
import javax.media.jai.operator.FPXDescriptor;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JLayeredPane;
import javax.swing.event.ListDataListener;
import javax.swing.plaf.metal.MetalComboBoxEditor;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.pdfsam.guiclient.commons.models.VisualListModel;
import org.pdfsam.guiclient.dto.VisualPageListItem;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class VisualListModel_ESTest extends VisualListModel_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(stack0);
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      visualListModel0.moveUpIndex(1);
      Integer integer1 = JLayeredPane.DEFAULT_LAYER;
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      Stack<VisualPageListItem> stack1 = new Stack<VisualPageListItem>();
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      assertEquals(1, visualListModel0.getSize());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.8726148197971448
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(stack0);
      stack0.add((VisualPageListItem) null);
      Integer integer0 = new Integer(90);
      Integer integer1 = JLayeredPane.PALETTE_LAYER;
      Integer.getInteger((String) null);
      Integer integer2 = FPXDescriptor.MAX_RESOLUTION;
      Integer.remainderUnsigned(90, 1);
      Integer integer3 = JLayeredPane.MODAL_LAYER;
      Integer[] integerArray0 = new Integer[8];
      integerArray0[0] = integer1;
      integerArray0[1] = integer2;
      integerArray0[2] = integer3;
      integerArray0[3] = integer3;
      Integer integer4 = JLayeredPane.PALETTE_LAYER;
      integerArray0[4] = integer4;
      integerArray0[5] = integer1;
      integerArray0[6] = integer2;
      integerArray0[7] = integer0;
      DefaultComboBoxModel<Integer> defaultComboBoxModel0 = new DefaultComboBoxModel<Integer>(integerArray0);
      DefaultComboBoxModel<Integer> defaultComboBoxModel1 = new DefaultComboBoxModel<Integer>(integerArray0);
      int[] intArray0 = new int[1];
      intArray0[0] = 0;
      visualListModel0.reverseElements(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt((-1), false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.0709763739725617
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(stack0);
      stack0.add((VisualPageListItem) null);
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      visualListModel0.addElement((VisualPageListItem) null);
      int[] intArray0 = new int[0];
      visualListModel0.moveUpIndexes(intArray0);
      Integer[] integerArray0 = new Integer[6];
      integerArray0[0] = integer0;
      Integer integer1 = JLayeredPane.POPUP_LAYER;
      integerArray0[1] = integer1;
      integerArray0[2] = integer0;
      Integer integer2 = new Integer((int) integerArray0[1]);
      integerArray0[3] = integer2;
      Integer integer3 = JLayeredPane.MODAL_LAYER;
      integerArray0[4] = integer3;
      integerArray0[5] = integer0;
      DefaultComboBoxModel<Integer> defaultComboBoxModel0 = new DefaultComboBoxModel<Integer>(integerArray0);
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>();
      defaultComboBoxModel0.removeListDataListener(jComboBox0);
      JComboBox<Integer> jComboBox1 = new JComboBox<Integer>(defaultComboBoxModel0);
      MetalComboBoxEditor.UIResource metalComboBoxEditor_UIResource0 = new MetalComboBoxEditor.UIResource();
      visualListModel0.addListDataListener(jComboBox0);
      visualListModel0.reverseElements(intArray0);
      int[] intArray1 = new int[2];
      intArray1[0] = (int) integerArray0[1];
      intArray1[1] = 0;
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 300
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.0970992492955554
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(stack0);
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      stack0.ensureCapacity(0);
      visualListModel0.removeElements(0, 0, true);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
      List<VisualPageListItem> list0 = new ArrayList<VisualPageListItem>();
      visualListModel0.elementChanged((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) stack0);
      assertEquals(9, visualListModel0.getSize());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.9226853935616632
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(stack0);
      stack0.trimToSize();
      Boolean boolean0 = new Boolean(true);
      int[] intArray0 = new int[1];
      visualListModel0.addElement((VisualPageListItem) null);
      intArray0[0] = 0;
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
      // Undeclared exception!
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.220771997665955
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[7];
      int int0 = 0;
      Integer[] integerArray0 = new Integer[7];
      integerArray0[0] = (Integer) 0;
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      integerArray0[2] = integer0;
      integerArray0[3] = (Integer) 0;
      Integer.divideUnsigned(35, 1);
      Integer integer1 = JLayeredPane.DEFAULT_LAYER;
      visualListModel0.addElement((VisualPageListItem) null);
      integerArray0[4] = integer1;
      integerArray0[5] = (Integer) 0;
      integerArray0[6] = (Integer) 0;
      int[] intArray1 = new int[1];
      intArray1[0] = int0;
      visualListModel0.moveUpIndexes(intArray1);
      DefaultComboBoxModel<Integer> defaultComboBoxModel0 = new DefaultComboBoxModel<Integer>(integerArray0);
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>();
      defaultComboBoxModel0.removeListDataListener(jComboBox0);
      JComboBox<Integer> jComboBox1 = new JComboBox<Integer>(defaultComboBoxModel0);
      MetalComboBoxEditor.UIResource metalComboBoxEditor_UIResource0 = new MetalComboBoxEditor.UIResource();
      visualListModel0.addListDataListener(jComboBox1);
      intArray0[1] = 0;
      visualListModel0.reverseElements(intArray1);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.moveDownIndex(0);
      visualListModel0.undeleteElements(intArray0);
      assertEquals(7, intArray0.length);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.0474852025259684
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[7];
      int int0 = 0;
      Integer[] integerArray0 = new Integer[7];
      integerArray0[0] = (Integer) 0;
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      integerArray0[2] = integer0;
      integerArray0[3] = (Integer) 0;
      Integer.divideUnsigned(35, 1);
      Integer integer1 = JLayeredPane.DEFAULT_LAYER;
      visualListModel0.addElement((VisualPageListItem) null);
      integerArray0[4] = integer1;
      integerArray0[5] = (Integer) 0;
      integerArray0[6] = (Integer) 0;
      int[] intArray1 = new int[1];
      intArray1[0] = int0;
      visualListModel0.moveUpIndexes(intArray1);
      DefaultComboBoxModel<Integer> defaultComboBoxModel0 = new DefaultComboBoxModel<Integer>(integerArray0);
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>();
      JComboBox<Integer> jComboBox1 = new JComboBox<Integer>(defaultComboBoxModel0);
      MetalComboBoxEditor.UIResource metalComboBoxEditor_UIResource0 = new MetalComboBoxEditor.UIResource();
      visualListModel0.addListDataListener(jComboBox1);
      intArray0[1] = 0;
      visualListModel0.reverseElements(intArray1);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.moveDownIndex(0);
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.958404951695567
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.clearData();
      int[] intArray0 = new int[1];
      visualListModel0.reverseElements(intArray0);
      visualListModel0.elementChanged((VisualPageListItem) null);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[3];
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = visualPageListItemArray0[1];
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.reverseElements(intArray0);
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      visualListModel0.moveUpIndex(1);
      Integer integer1 = JLayeredPane.DEFAULT_LAYER;
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      HierarchyBoundsListener hierarchyBoundsListener0 = AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      assertNull(hierarchyBoundsListener0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.665051708997462
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(stack0);
      stack0.add((VisualPageListItem) null);
      int int0 = 0;
      int int1 = 0;
      stack0.set(0, (VisualPageListItem) null);
      boolean boolean0 = false;
      Boolean boolean1 = new Boolean(true);
      stack0.ensureCapacity(0);
      visualListModel0.removeElements(0, 0, false);
      HierarchyBoundsListener hierarchyBoundsListener0 = mock(HierarchyBoundsListener.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.113049695753
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.reverseElements(intArray0);
      visualListModel0.elementChanged((VisualPageListItem) null);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[4];
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.reverseElements(intArray0);
      DefaultComboBoxModel<Integer> defaultComboBoxModel0 = new DefaultComboBoxModel<Integer>();
      defaultComboBoxModel0.getElementAt(42);
      visualListModel0.moveDownIndex((-253));
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(defaultComboBoxModel0);
      int[] intArray1 = new int[4];
      intArray1[0] = (-253);
      intArray1[1] = (-253);
      intArray1[2] = (-253);
      intArray1[3] = (-253);
      try { 
        visualListModel0.undeleteElements(intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -253
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.0473092967465583
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      intArray0[0] = 236;
      visualListModel0.reverseElements(intArray0);
      visualListModel0.elementChanged((VisualPageListItem) null);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      visualPageListItemArray0[0] = null;
      visualListModel0.setData(visualPageListItemArray0);
      try { 
        visualListModel0.removeElements(intArray0, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 236
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.438811626317316
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.reverseElements(intArray0);
      visualListModel0.elementChanged((VisualPageListItem) null);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[4];
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.addAllElements((Collection<VisualPageListItem>) vector0);
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      Integer[] integerArray0 = new Integer[1];
      Integer integer0 = new Integer(90);
      Integer integer1 = JLayeredPane.PALETTE_LAYER;
      Integer.getInteger("Could not find class [");
      Integer integer2 = FPXDescriptor.MAX_RESOLUTION;
      Integer.remainderUnsigned(90, 90);
      Integer integer3 = JLayeredPane.DEFAULT_LAYER;
      DefaultComboBoxModel<Integer> defaultComboBoxModel0 = new DefaultComboBoxModel<Integer>(integerArray0);
      DefaultComboBoxModel<Integer> defaultComboBoxModel1 = new DefaultComboBoxModel<Integer>(integerArray0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(90, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 90
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.3842713196839629
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(stack0);
      int int0 = 0;
      stack0.trimToSize();
      boolean boolean0 = true;
      Boolean boolean1 = new Boolean(true);
      int[] intArray0 = new int[1];
      intArray0[0] = 0;
      // Undeclared exception!
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.6694351084945749
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[3];
      Integer[] integerArray0 = new Integer[7];
      integerArray0[0] = (Integer) 0;
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      integerArray0[2] = integer0;
      integerArray0[3] = (Integer) 0;
      Integer.divideUnsigned(35, 1);
      Integer integer1 = JLayeredPane.DEFAULT_LAYER;
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.addElement((VisualPageListItem) null);
      integerArray0[4] = integer1;
      integerArray0[5] = (Integer) 0;
      integerArray0[6] = (Integer) 0;
      int[] intArray1 = new int[1];
      intArray1[0] = (int) integerArray0[5];
      visualListModel0.moveUpIndexes(intArray1);
      DefaultComboBoxModel<Integer> defaultComboBoxModel0 = new DefaultComboBoxModel<Integer>(integerArray0);
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>();
      JComboBox<Integer> jComboBox1 = new JComboBox<Integer>(defaultComboBoxModel0);
      defaultComboBoxModel0.removeListDataListener(jComboBox1);
      JComboBox<Integer> jComboBox2 = new JComboBox<Integer>(defaultComboBoxModel0);
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.3120076729259056
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Integer.divideUnsigned(102, 1);
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.addElement((VisualPageListItem) null);
      int[] intArray0 = new int[1];
      intArray0[0] = 102;
      try { 
        visualListModel0.moveUpIndexes(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 101
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.4841652152843623
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      VisualPageListItem visualPageListItem0 = null;
      stack0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(stack0);
      int int0 = 0;
      stack0.trimToSize();
      Boolean boolean0 = new Boolean(true);
      visualListModel0.clearData();
      Stack<Integer> stack1 = new Stack<Integer>();
      VisualListModel visualListModel1 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[9];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = null;
      VisualPageListItem visualPageListItem1 = null;
      try {
        visualPageListItem1 = new VisualPageListItem((-861), "org.apache.log4j.Layout");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.1756260027254717
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(stack0);
      stack0.trimToSize();
      stack0.add((VisualPageListItem) null);
      int[] intArray0 = new int[1];
      intArray0[0] = 0;
      visualListModel0.removeElements(intArray0, true);
      stack0.add((VisualPageListItem) null);
      stack0.removeElement((Object) null);
      stack0.ensureCapacity(0);
      visualListModel0.removeElements(0, 0, true);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
      // Undeclared exception!
      try { 
        visualListModel0.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.7022227534918575
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      VisualPageListItem visualPageListItem0 = null;
      int[] intArray0 = new int[1];
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[3];
      visualPageListItemArray0[1] = null;
      int int0 = (-3663);
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.setData(visualPageListItemArray0);
      Stack<Integer> stack0 = new Stack<Integer>();
      visualListModel0.setData(visualPageListItemArray0);
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        visualListModel0.removeElements(intArray0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.6574520104243486
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[3];
      int int0 = 1;
      intArray0[0] = 1;
      Integer[] integerArray0 = new Integer[7];
      integerArray0[0] = (Integer) 1;
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      integerArray0[2] = integer0;
      integerArray0[3] = (Integer) 1;
      Integer integer1 = JLayeredPane.DEFAULT_LAYER;
      visualListModel0.addElement((VisualPageListItem) null);
      integerArray0[4] = integer1;
      integerArray0[5] = (Integer) 1;
      integerArray0[6] = (Integer) 1;
      int[] intArray1 = new int[1];
      intArray1[0] = int0;
      visualListModel0.moveUpIndexes(intArray1);
      DefaultComboBoxModel<Integer> defaultComboBoxModel0 = new DefaultComboBoxModel<Integer>(integerArray0);
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>();
      defaultComboBoxModel0.removeListDataListener(jComboBox0);
      JComboBox<Integer> jComboBox1 = new JComboBox<Integer>(defaultComboBoxModel0);
      jComboBox1.getEditor();
      visualListModel0.addListDataListener(jComboBox1);
      intArray0[1] = 0;
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      try { 
        visualListModel0.reverseElements(intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.3791235169376774
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      VisualListModel visualListModel1 = new VisualListModel();
      int[] intArray0 = new int[5];
      intArray0[0] = (-2503);
      intArray0[1] = 1664;
      intArray0[2] = 6;
      intArray0[3] = 736;
      intArray0[4] = 0;
      visualListModel1.undeleteElements(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel1.removeElements(6, (-2503), true);
      visualListModel1.reverseElements(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      OperationRegistry operationRegistry0 = new OperationRegistry();
      ParameterBlock parameterBlock0 = new ParameterBlock();
      CollectionOp collectionOp0 = new CollectionOp(operationRegistry0, "", parameterBlock0);
      // Undeclared exception!
      try { 
        visualListModel1.prependAllElements(collectionOp0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No descriptor by name \"\" is registered under mode \"collection\".
         //
         verifyException("javax.media.jai.OperationRegistry", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.143654440989084
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.elementChanged((VisualPageListItem) null);
      visualListModel0.updateElementAt(5000, (VisualPageListItem) null);
      Stack<VisualPageListItem> stack1 = new Stack<VisualPageListItem>();
      stack1.add((VisualPageListItem) null);
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      stack1.addAll((Collection<? extends VisualPageListItem>) stack0);
      Stack<VisualPageListItem> stack2 = new Stack<VisualPageListItem>();
      stack1.add((VisualPageListItem) null);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[6];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[5] = null;
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.setData((Vector<VisualPageListItem>) stack1);
      assertEquals(2, visualListModel0.getSize());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      HierarchyBoundsListener hierarchyBoundsListener0 = mock(HierarchyBoundsListener.class, new ViolatedAssumptionAnswer());
      HierarchyBoundsListener hierarchyBoundsListener1 = AWTEventMulticaster.add(hierarchyBoundsListener0, hierarchyBoundsListener0);
      AWTEventMulticaster.remove(hierarchyBoundsListener1, hierarchyBoundsListener1);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      HierarchyBoundsListener hierarchyBoundsListener2 = AWTEventMulticaster.add(hierarchyBoundsListener1, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add(hierarchyBoundsListener2, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove(hierarchyBoundsListener1, hierarchyBoundsListener1);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add(hierarchyBoundsListener2, (HierarchyBoundsListener) null);
      int[] intArray0 = null;
      // Undeclared exception!
      try { 
        visualListModel0.moveDownIndexes((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.9442957733960458
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(stack0);
      stack0.trimToSize();
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      stack0.removeElement((Object) null);
      stack0.ensureCapacity(0);
      visualListModel0.removeElements(0, 0, false);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
      // Undeclared exception!
      try { 
        visualListModel0.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.9669966330119029
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(stack0);
      stack0.trimToSize();
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      stack0.removeElement((Object) null);
      stack0.ensureCapacity(0);
      visualListModel0.removeElements(0, 0, true);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
      // Undeclared exception!
      try { 
        visualListModel0.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.148674223310102
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.reverseElements(intArray0);
      visualListModel0.elementChanged((VisualPageListItem) null);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[4];
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.addAllElements((Collection<VisualPageListItem>) vector0);
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.reverseElements(intArray0);
      HierarchyBoundsListener hierarchyBoundsListener0 = mock(HierarchyBoundsListener.class, new ViolatedAssumptionAnswer());
      HierarchyBoundsListener hierarchyBoundsListener1 = AWTEventMulticaster.add(hierarchyBoundsListener0, hierarchyBoundsListener0);
      HierarchyBoundsListener hierarchyBoundsListener2 = AWTEventMulticaster.add(hierarchyBoundsListener1, hierarchyBoundsListener1);
      HierarchyBoundsListener hierarchyBoundsListener3 = AWTEventMulticaster.add(hierarchyBoundsListener1, hierarchyBoundsListener1);
      HierarchyBoundsListener hierarchyBoundsListener4 = AWTEventMulticaster.add(hierarchyBoundsListener1, hierarchyBoundsListener3);
      HierarchyBoundsListener hierarchyBoundsListener5 = AWTEventMulticaster.add(hierarchyBoundsListener1, hierarchyBoundsListener4);
      HierarchyBoundsListener hierarchyBoundsListener6 = AWTEventMulticaster.remove(hierarchyBoundsListener3, hierarchyBoundsListener1);
      AWTEventMulticaster.remove(hierarchyBoundsListener3, hierarchyBoundsListener3);
      AWTEventMulticaster.remove(hierarchyBoundsListener4, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, hierarchyBoundsListener3);
      AWTEventMulticaster.remove(hierarchyBoundsListener6, hierarchyBoundsListener5);
      AWTEventMulticaster.remove(hierarchyBoundsListener2, hierarchyBoundsListener4);
      AWTEventMulticaster.remove(hierarchyBoundsListener4, hierarchyBoundsListener3);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      float[] floatArray0 = new float[4];
      floatArray0[0] = 0.0F;
      floatArray0[1] = 0.0F;
      floatArray0[2] = 255.0F;
      floatArray0[3] = (-1222.24F);
      HashMap<RenderingHints.Key, Object> hashMap0 = new HashMap<RenderingHints.Key, Object>(192);
      RenderingHints renderingHints0 = new RenderingHints(hashMap0);
      RescaleOp rescaleOp0 = new RescaleOp(floatArray0, floatArray0, renderingHints0);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-76);
      byteArray0[1] = (byte)109;
      byteArray0[2] = (byte) (-56);
      byteArray0[3] = (byte)120;
      byteArray0[4] = (byte) (-56);
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel(23, 9, byteArray0, (byte)109, false, 1179);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Number of bits must be between 1 and 16.
         //
         verifyException("java.awt.image.IndexColorModel", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.8125233095327788
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[7];
      Integer[] integerArray0 = new Integer[7];
      integerArray0[0] = (Integer) 0;
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      integerArray0[2] = integer0;
      integerArray0[3] = (Integer) 0;
      Integer.divideUnsigned(35, 1);
      Integer integer1 = JLayeredPane.DEFAULT_LAYER;
      visualListModel0.addElement((VisualPageListItem) null);
      integerArray0[4] = integer1;
      integerArray0[5] = (Integer) 0;
      integerArray0[6] = (Integer) 0;
      int[] intArray1 = new int[1];
      intArray1[0] = (int) integerArray0[5];
      visualListModel0.moveUpIndexes(intArray1);
      DefaultComboBoxModel<Integer> defaultComboBoxModel0 = new DefaultComboBoxModel<Integer>(integerArray0);
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>();
      defaultComboBoxModel0.removeListDataListener(jComboBox0);
      JComboBox<Integer> jComboBox1 = new JComboBox<Integer>(defaultComboBoxModel0);
      MetalComboBoxEditor.UIResource metalComboBoxEditor_UIResource0 = new MetalComboBoxEditor.UIResource();
      JComboBox<Integer> jComboBox2 = new JComboBox<Integer>(defaultComboBoxModel0);
      MetalComboBoxEditor.UIResource metalComboBoxEditor_UIResource1 = new MetalComboBoxEditor.UIResource();
      Vector<Object> vector0 = new Vector<Object>();
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      visualListModel0.reverseElements(intArray1);
      visualListModel0.rotateClockwiseElements(intArray0);
      Vector<VisualPageListItem> vector1 = new Vector<VisualPageListItem>();
      assertEquals("[]", vector1.toString());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.214822123914343
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.reverseElements(intArray0);
      visualListModel0.elementChanged((VisualPageListItem) null);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[4];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.getSize();
      // Undeclared exception!
      try { 
        visualListModel0.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      Integer[] integerArray0 = new Integer[8];
      Integer integer0 = JLayeredPane.PALETTE_LAYER;
      integerArray0[0] = integer0;
      integerArray0[1] = integerArray0[0];
      Integer integer1 = JLayeredPane.DEFAULT_LAYER;
      integerArray0[2] = integer1;
      Integer.getInteger("] using ", (-1));
      Integer integer2 = JLayeredPane.POPUP_LAYER;
      integerArray0[3] = integer2;
      Integer integer3 = new Integer((int) integerArray0[2]);
      integerArray0[4] = integer3;
      Integer integer4 = FPXDescriptor.MAX_RESOLUTION;
      integerArray0[5] = integer4;
      Integer.min(1984, (int) integerArray0[1]);
      visualListModel0.undeleteElements(intArray0);
      Integer.getInteger("The Hiearchy.overrideAsNeeded method has been deprecated.");
      Integer integer5 = FPXDescriptor.MAX_RESOLUTION;
      Integer integer6 = JLayeredPane.DEFAULT_LAYER;
      integerArray0[7] = integer6;
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      int[] intArray1 = null;
      // Undeclared exception!
      try { 
        visualListModel0.reverseElements((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.3010386369482903
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.elementChanged((VisualPageListItem) null);
      visualListModel0.updateElementAt(5000, (VisualPageListItem) null);
      Stack<VisualPageListItem> stack1 = new Stack<VisualPageListItem>();
      stack1.add((VisualPageListItem) null);
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      stack1.addAll((Collection<? extends VisualPageListItem>) stack0);
      Stack<VisualPageListItem> stack2 = new Stack<VisualPageListItem>();
      stack1.add((VisualPageListItem) null);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[6];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[5] = null;
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.addElementAt(visualPageListItemArray0[0], (-1));
      visualListModel0.prependAllElements(stack1);
      assertEquals(8, visualListModel0.getSize());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.2292999338277912
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Integer[] integerArray0 = new Integer[9];
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      integerArray0[0] = integer0;
      Integer integer1 = JLayeredPane.DEFAULT_LAYER;
      integerArray0[1] = integer1;
      Integer integer2 = JLayeredPane.POPUP_LAYER;
      integerArray0[2] = integer2;
      Integer integer3 = JLayeredPane.POPUP_LAYER;
      integerArray0[3] = integer3;
      Integer integer4 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer integer5 = FPXDescriptor.MAX_RESOLUTION;
      integerArray0[5] = integer5;
      Integer integer6 = Integer.getInteger("", (int) integerArray0[2]);
      integerArray0[6] = integer6;
      Integer integer7 = JLayeredPane.PALETTE_LAYER;
      Integer.remainderUnsigned((-2416), (int) integerArray0[3]);
      integerArray0[7] = integer7;
      Integer integer8 = JLayeredPane.DRAG_LAYER;
      integerArray0[8] = integer8;
      visualListModel0.moveUpIndex(1);
      int[] intArray0 = new int[2];
      intArray0[0] = 0;
      Integer integer9 = JLayeredPane.DEFAULT_LAYER;
      visualListModel0.moveUpIndexes(intArray0);
      Integer[] integerArray1 = new Integer[0];
      DefaultComboBoxModel<Integer> defaultComboBoxModel0 = new DefaultComboBoxModel<Integer>(integerArray1);
      int[] intArray1 = new int[5];
      intArray1[0] = (int) integerArray0[8];
      intArray1[1] = (int) integerArray0[2];
      intArray1[2] = (int) integerArray0[6];
      intArray1[3] = 0;
      intArray1[4] = (int) integerArray0[2];
      visualListModel0.reverseElements(intArray1);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.moveDownIndex(0);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.0709763739725617
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      Integer[] integerArray0 = new Integer[8];
      Integer integer0 = JLayeredPane.PALETTE_LAYER;
      integerArray0[0] = integer0;
      Integer integer1 = JLayeredPane.MODAL_LAYER;
      integerArray0[1] = integer1;
      Integer integer2 = JLayeredPane.DEFAULT_LAYER;
      integerArray0[2] = integer2;
      Integer.getInteger((String) null, integer1);
      Integer integer3 = JLayeredPane.DRAG_LAYER;
      integerArray0[3] = integer3;
      Integer integer4 = new Integer((int) integerArray0[2]);
      integerArray0[4] = integer4;
      Integer integer5 = JLayeredPane.PALETTE_LAYER;
      integerArray0[5] = integer5;
      Integer.getInteger("");
      Integer integer6 = FPXDescriptor.MAX_RESOLUTION;
      integerArray0[6] = integer6;
      Integer integer7 = JLayeredPane.DEFAULT_LAYER;
      integerArray0[7] = integer7;
      Integer.divideUnsigned(4598, (-957));
      int[] intArray1 = new int[3];
      intArray1[0] = (int) integerArray0[1];
      intArray1[1] = (int) integerArray0[6];
      intArray1[2] = (-1);
      visualListModel0.reverseElements(intArray1);
      Integer.compare((int) integerArray0[4], (int) integerArray0[7]);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      visualListModel0.addAllElements((int) integerArray0[4], (Collection<VisualPageListItem>) hashSet0);
      assertTrue(hashSet0.isEmpty());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.786724494755577
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      VisualListModel visualListModel0 = new VisualListModel();
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.getValidElements();
      Vector<VisualPageListItem> vector0 = null;
      // Undeclared exception!
      try { 
        visualListModel1.setData((Vector<VisualPageListItem>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.6815563206157873
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      VisualListModel visualListModel1 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      visualListModel1.setData(visualPageListItemArray0);
      VisualListModel visualListModel2 = new VisualListModel();
      VisualListModel visualListModel3 = new VisualListModel();
      int int0 = 1984;
      int int1 = 732;
      int[] intArray0 = new int[1];
      intArray0[0] = 1984;
      try { 
        visualListModel1.rotateClockwiseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 1984
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.221839667773992
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.reverseElements(intArray0);
      visualListModel0.elementChanged((VisualPageListItem) null);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[4];
      visualListModel0.undeleteElements(intArray0);
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualListModel0.setData(visualPageListItemArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      int[] intArray1 = new int[5];
      intArray1[0] = (-3663);
      VisualListModel visualListModel2 = new VisualListModel();
      int[] intArray2 = new int[1];
      intArray2[0] = 3086;
      try { 
        visualListModel0.rotateClockwiseElements(intArray2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 3086
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.7214787039105834
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      VisualPageListItem visualPageListItem0 = null;
      stack0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(stack0);
      visualListModel0.data = (Vector<VisualPageListItem>) stack0;
      visualListModel0.getElements();
      // Undeclared exception!
      try { 
        visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Vector$Itr", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.9909065731902369
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(stack0);
      stack0.add((VisualPageListItem) null);
      stack0.ensureCapacity(0);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.clone();
      linkedHashSet0.retainAll(stack0);
      visualListModel0.prependAllElements(linkedHashSet0);
      assertEquals(1, visualListModel0.getSize());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.6969987794394548
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[3];
      Integer[] integerArray0 = new Integer[7];
      integerArray0[0] = (Integer) 0;
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      integerArray0[2] = integer0;
      integerArray0[3] = (Integer) 0;
      Integer.divideUnsigned(35, 1);
      Integer integer1 = JLayeredPane.DEFAULT_LAYER;
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.addElement((VisualPageListItem) null);
      integerArray0[4] = integer1;
      integerArray0[5] = (Integer) 0;
      integerArray0[6] = (Integer) 0;
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[2];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualListModel0.setData(visualPageListItemArray0);
      assertEquals(2, visualListModel0.getSize());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[7];
      Integer[] integerArray0 = new Integer[7];
      integerArray0[0] = (Integer) 0;
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      integerArray0[2] = integer0;
      intArray0[3] = 0;
      Integer.divideUnsigned(35, 1);
      Integer integer1 = JLayeredPane.DEFAULT_LAYER;
      visualListModel0.addElement((VisualPageListItem) null);
      integerArray0[4] = integer1;
      integerArray0[5] = (Integer) 0;
      integerArray0[6] = (Integer) 0;
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      vector0.add((VisualPageListItem) null);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[0];
      visualListModel0.setData(visualPageListItemArray0);
      assertEquals(0, visualPageListItemArray0.length);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.1944064129383247
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      Integer[] integerArray0 = new Integer[8];
      Integer integer0 = JLayeredPane.PALETTE_LAYER;
      integerArray0[0] = integer0;
      Integer integer1 = JLayeredPane.MODAL_LAYER;
      integerArray0[1] = integer1;
      Integer integer2 = JLayeredPane.DEFAULT_LAYER;
      integerArray0[2] = integer2;
      Integer integer3 = JLayeredPane.DRAG_LAYER;
      integerArray0[3] = integer3;
      Integer integer4 = new Integer((int) integerArray0[2]);
      integerArray0[4] = integer4;
      Integer integer5 = JLayeredPane.PALETTE_LAYER;
      integerArray0[5] = integer5;
      Integer.getInteger("The Hiearchy.overrideAsNeeded method has been deprecated.");
      Integer integer6 = FPXDescriptor.MAX_RESOLUTION;
      integerArray0[6] = integer6;
      Integer integer7 = JLayeredPane.DEFAULT_LAYER;
      integerArray0[7] = integer7;
      DefaultComboBoxModel<Integer> defaultComboBoxModel0 = new DefaultComboBoxModel<Integer>(integerArray0);
      int[] intArray1 = new int[3];
      intArray1[0] = (int) integerArray0[1];
      DefaultComboBoxModel<Integer> defaultComboBoxModel1 = new DefaultComboBoxModel<Integer>(integerArray0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.moveDownIndexes(intArray1);
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt((-3028), false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      visualListModel0.addAllElements((-3969), (Collection<VisualPageListItem>) hashSet0);
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem(4237);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      Integer[] integerArray0 = new Integer[8];
      Integer integer0 = JLayeredPane.PALETTE_LAYER;
      integerArray0[0] = integer0;
      Integer integer1 = JLayeredPane.MODAL_LAYER;
      integerArray0[1] = integer1;
      Integer.compare((-1041), 17);
      Integer integer2 = JLayeredPane.DEFAULT_LAYER;
      integerArray0[2] = integer2;
      Integer integer3 = JLayeredPane.DRAG_LAYER;
      integerArray0[3] = integer3;
      Integer integer4 = new Integer((int) integerArray0[2]);
      integerArray0[4] = integer4;
      Integer integer5 = JLayeredPane.PALETTE_LAYER;
      integerArray0[1] = integer5;
      Integer.getInteger("");
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.reverseElements(intArray0);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.9314830515574797
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.undeleteElements(intArray0);
      int[] intArray1 = new int[1];
      intArray1[0] = 3927;
      visualListModel0.moveUpIndexes(intArray1);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.removeListDataListener((ListDataListener) null);
      visualListModel0.moveUpIndexes(intArray0);
      Integer[] integerArray0 = new Integer[1];
      integerArray0[0] = (Integer) 3927;
      DefaultComboBoxModel<Integer> defaultComboBoxModel0 = new DefaultComboBoxModel<Integer>(integerArray0);
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>();
      Vector<Integer> vector0 = new Vector<Integer>();
      ArrayDeque<AWTEventMulticaster> arrayDeque0 = new ArrayDeque<AWTEventMulticaster>();
      ArrayDeque<AWTEventMulticaster> arrayDeque1 = arrayDeque0.clone();
      vector0.retainAll(arrayDeque1);
      DefaultComboBoxModel<Integer> defaultComboBoxModel1 = new DefaultComboBoxModel<Integer>(vector0);
      Integer[] integerArray1 = new Integer[6];
      integerArray1[0] = (Integer) 3927;
      integerArray1[2] = (Integer) 3927;
      integerArray1[3] = (Integer) 3927;
      integerArray1[4] = (Integer) 3927;
      integerArray1[5] = (Integer) 3927;
      DefaultComboBoxModel<Integer> defaultComboBoxModel2 = new DefaultComboBoxModel<Integer>(integerArray1);
      JComboBox<Integer> jComboBox1 = new JComboBox<Integer>(defaultComboBoxModel0);
      MetalComboBoxEditor.UIResource metalComboBoxEditor_UIResource0 = new MetalComboBoxEditor.UIResource();
      visualListModel0.addListDataListener(jComboBox1);
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      visualListModel0.reverseElements(intArray0);
      int[] intArray2 = new int[6];
      intArray2[0] = (int) integerArray1[2];
      intArray2[1] = (int) integerArray1[2];
      intArray2[2] = 3927;
      intArray2[3] = (int) integerArray1[3];
      intArray2[4] = 3927;
      visualListModel0.rotateClockwiseElements(intArray2);
      Vector<VisualPageListItem> vector1 = new Vector<VisualPageListItem>();
      assertEquals(10, vector1.capacity());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.229299933827791
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      HierarchyBoundsListener hierarchyBoundsListener0 = mock(HierarchyBoundsListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(hierarchyBoundsListener0, hierarchyBoundsListener0);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      int[] intArray0 = new int[7];
      intArray0[0] = 3086;
      intArray0[1] = 3086;
      intArray0[2] = 3086;
      intArray0[3] = 3086;
      intArray0[4] = 3086;
      intArray0[5] = (-792);
      intArray0[6] = 3086;
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.getValidElements();
      // Undeclared exception!
      try { 
        visualListModel0.getElementAt((-792));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      int int0 = 292;
      String string0 = "";
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.moveUpIndexes((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[0];
      visualListModel0.setData(visualPageListItemArray0);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[2];
      intArray0[0] = (-8);
      intArray0[1] = 0;
      visualListModel0.removeElements(intArray0, false);
      visualListModel0.removeElements((-8), (-1196), false);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.4993646124305886
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      arrayList0.ensureCapacity(92);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.clone();
      linkedHashSet0.retainAll(arrayList0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.prependAllElements(linkedHashSet0);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.2292999338277912
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Integer[] integerArray0 = new Integer[9];
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      integerArray0[0] = integer0;
      Integer integer1 = JLayeredPane.DEFAULT_LAYER;
      integerArray0[1] = integer1;
      Integer integer2 = JLayeredPane.POPUP_LAYER;
      integerArray0[2] = integer2;
      Integer integer3 = JLayeredPane.POPUP_LAYER;
      integerArray0[3] = integer3;
      Integer integer4 = JLayeredPane.FRAME_CONTENT_LAYER;
      integerArray0[5] = integer3;
      Integer integer5 = Integer.getInteger("", (int) integerArray0[2]);
      integerArray0[6] = integer5;
      Integer integer6 = JLayeredPane.PALETTE_LAYER;
      Integer.remainderUnsigned((-2416), (int) integerArray0[3]);
      integerArray0[7] = integer6;
      Integer integer7 = JLayeredPane.DRAG_LAYER;
      integerArray0[8] = integer7;
      visualListModel0.moveUpIndex(1);
      int[] intArray0 = new int[2];
      intArray0[0] = 0;
      Integer integer8 = JLayeredPane.DEFAULT_LAYER;
      visualListModel0.moveUpIndexes(intArray0);
      Integer[] integerArray1 = new Integer[0];
      int[] intArray1 = new int[5];
      intArray1[1] = (int) integerArray0[2];
      intArray1[2] = (int) integerArray0[6];
      intArray1[3] = 0;
      intArray1[4] = (int) integerArray0[2];
      Integer.getInteger("", (-2416));
      visualListModel0.reverseElements(intArray1);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.undeleteElements(intArray1);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveUpIndex((-1));
      VisualListModel visualListModel1 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel1.data;
      assertEquals(0, vector0.size());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.8306007398058715
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[3];
      int int0 = 0;
      Integer[] integerArray0 = new Integer[7];
      integerArray0[0] = (Integer) 0;
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      integerArray0[2] = integer0;
      integerArray0[3] = (Integer) 0;
      Integer.divideUnsigned(35, 1);
      Integer integer1 = JLayeredPane.DEFAULT_LAYER;
      visualListModel0.addElement((VisualPageListItem) null);
      integerArray0[4] = integer1;
      integerArray0[5] = (Integer) 0;
      integerArray0[6] = (Integer) 0;
      int[] intArray1 = new int[1];
      intArray1[0] = int0;
      visualListModel0.moveUpIndexes(intArray1);
      DefaultComboBoxModel<Integer> defaultComboBoxModel0 = new DefaultComboBoxModel<Integer>(integerArray0);
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>();
      defaultComboBoxModel0.removeListDataListener(jComboBox0);
      JComboBox<Integer> jComboBox1 = new JComboBox<Integer>(defaultComboBoxModel0);
      jComboBox1.getEditor();
      visualListModel0.addListDataListener(jComboBox1);
      intArray0[1] = 0;
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      visualListModel0.reverseElements(intArray1);
      // Undeclared exception!
      try { 
        visualListModel0.rotateClockwiseElements(intArray1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.addAllElements(973, (Collection<VisualPageListItem>) stack0);
      assertEquals(10, stack0.capacity());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.1084013788541878
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      Integer integer1 = JLayeredPane.POPUP_LAYER;
      Integer integer2 = JLayeredPane.POPUP_LAYER;
      Integer integer3 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer integer4 = FPXDescriptor.MAX_RESOLUTION;
      Integer integer5 = Integer.getInteger("", (-5788));
      Integer integer6 = JLayeredPane.PALETTE_LAYER;
      Integer integer7 = JLayeredPane.DRAG_LAYER;
      visualListModel0.moveUpIndex((-1283));
      Integer integer8 = JLayeredPane.DEFAULT_LAYER;
      visualListModel0.moveUpIndexes(intArray0);
      Integer[] integerArray0 = new Integer[2];
      integerArray0[0] = integer1;
      integerArray0[1] = integer5;
      DefaultComboBoxModel<Integer> defaultComboBoxModel0 = new DefaultComboBoxModel<Integer>(integerArray0);
      visualListModel0.reverseElements(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel1.subList((int) integerArray0[0], (-5788));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(300) > toIndex(-5788)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      HierarchyBoundsListener hierarchyBoundsListener0 = mock(HierarchyBoundsListener.class, new ViolatedAssumptionAnswer());
      HierarchyBoundsListener hierarchyBoundsListener1 = AWTEventMulticaster.add(hierarchyBoundsListener0, hierarchyBoundsListener0);
      AWTEventMulticaster.remove(hierarchyBoundsListener1, hierarchyBoundsListener1);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, hierarchyBoundsListener1);
      HierarchyBoundsListener hierarchyBoundsListener2 = AWTEventMulticaster.add(hierarchyBoundsListener1, hierarchyBoundsListener1);
      HierarchyBoundsListener hierarchyBoundsListener3 = AWTEventMulticaster.add(hierarchyBoundsListener2, (HierarchyBoundsListener) null);
      HierarchyBoundsListener hierarchyBoundsListener4 = AWTEventMulticaster.remove(hierarchyBoundsListener2, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove(hierarchyBoundsListener3, (HierarchyBoundsListener) null);
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      HierarchyBoundsListener hierarchyBoundsListener5 = AWTEventMulticaster.remove(hierarchyBoundsListener3, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, hierarchyBoundsListener5);
      AWTEventMulticaster.remove(hierarchyBoundsListener2, hierarchyBoundsListener4);
      AWTEventMulticaster.remove(hierarchyBoundsListener2, (HierarchyBoundsListener) null);
      visualListModel0.removeElements(intArray0, true);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.490403227787064
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      visualListModel0.getSize();
      visualListModel0.getValidElements();
      visualListModel0.subList(4108, 4108);
      visualListModel0.prependAllElements((Collection<VisualPageListItem>) null);
      int[] intArray0 = new int[7];
      intArray0[1] = 4108;
      intArray0[2] = 0;
      intArray0[3] = 0;
      intArray0[4] = 4108;
      intArray0[5] = 0;
      intArray0[6] = 4108;
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.addAllElements((-1593), (Collection<VisualPageListItem>) null);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      DefaultComboBoxModel<Integer> defaultComboBoxModel0 = new DefaultComboBoxModel<Integer>();
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(defaultComboBoxModel0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      int[] intArray0 = new int[1];
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.getElementAt(0);
      visualListModel0.reverseElements(intArray0);
      assertArrayEquals(new int[] {0}, intArray0);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex(114);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.6868977693384444
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 0;
      int int1 = 0;
      visualListModel0.subList(0, 0);
      visualListModel0.getElements();
      RescaleOp rescaleOp0 = new RescaleOp((-1.0F), 0.0F, (RenderingHints) null);
      int int2 = (-461);
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel(0, (-2776), (byte[]) null, 65535, false, 62);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Number of pixel bits must be > 0
         //
         verifyException("java.awt.image.ColorModel", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.3597473990481395
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.undeleteElements(intArray0);
      int[] intArray1 = new int[1];
      intArray1[0] = 3927;
      visualListModel0.moveUpIndexes(intArray1);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.removeListDataListener((ListDataListener) null);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.subList((-1), (-1), true);
      Object object0 = new Object();
      visualListModel0.reverseElements(intArray0);
      visualListModel0.moveDownIndexes(intArray1);
      assertFalse(intArray1.equals((Object)intArray0));
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      intArray0[0] = 1644;
      visualListModel0.rotateClockwiseElements(intArray0);
      assertArrayEquals(new int[] {1644}, intArray0);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      HierarchyBoundsListener hierarchyBoundsListener0 = mock(HierarchyBoundsListener.class, new ViolatedAssumptionAnswer());
      HierarchyBoundsListener hierarchyBoundsListener1 = AWTEventMulticaster.add(hierarchyBoundsListener0, hierarchyBoundsListener0);
      AWTEventMulticaster.remove(hierarchyBoundsListener1, hierarchyBoundsListener1);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, hierarchyBoundsListener1);
      HierarchyBoundsListener hierarchyBoundsListener2 = AWTEventMulticaster.add(hierarchyBoundsListener1, hierarchyBoundsListener1);
      HierarchyBoundsListener hierarchyBoundsListener3 = AWTEventMulticaster.add(hierarchyBoundsListener2, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove(hierarchyBoundsListener2, (HierarchyBoundsListener) null);
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.remove(hierarchyBoundsListener3, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyListener) aWTEventMulticaster0, (HierarchyListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove(hierarchyBoundsListener3, hierarchyBoundsListener3);
      AWTEventMulticaster.add(hierarchyBoundsListener2, (HierarchyBoundsListener) aWTEventMulticaster0);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.getValidElements();
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getValidElements();
      visualListModel0.elementsChanged();
      visualListModel0.appendAllElements((Collection<VisualPageListItem>) null);
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      HierarchyBoundsListener hierarchyBoundsListener0 = mock(HierarchyBoundsListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(hierarchyBoundsListener0, hierarchyBoundsListener0);
      AWTEventMulticaster.remove((HierarchyBoundsListener) aWTEventMulticaster0, (HierarchyBoundsListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster0, (HierarchyBoundsListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster1, (HierarchyBoundsListener) null);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.remove((HierarchyBoundsListener) aWTEventMulticaster1, (HierarchyBoundsListener) null);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.remove((HierarchyBoundsListener) aWTEventMulticaster2, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) aWTEventMulticaster2, (HierarchyBoundsListener) aWTEventMulticaster2);
      AWTEventMulticaster.add((WindowStateListener) aWTEventMulticaster1, (WindowStateListener) aWTEventMulticaster3);
      AWTEventMulticaster.add((HierarchyListener) aWTEventMulticaster2, (HierarchyListener) aWTEventMulticaster4);
      AWTEventMulticaster.remove((WindowListener) aWTEventMulticaster4, (WindowListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.remove((HierarchyBoundsListener) aWTEventMulticaster2, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) aWTEventMulticaster5, (HierarchyBoundsListener) aWTEventMulticaster3);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) aWTEventMulticaster2);
      // Undeclared exception!
      try { 
        visualListModel0.setData((VisualPageListItem[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.4399756932787804
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[2];
      intArray0[0] = 0;
      intArray0[1] = 0;
      visualListModel0.removeElements(intArray0, false);
      visualListModel0.removeElements(0, (-1196), false);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.4399756932787804
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      Stack<Integer> stack1 = new Stack<Integer>();
      DefaultComboBoxModel<Integer> defaultComboBoxModel0 = new DefaultComboBoxModel<Integer>(stack1);
      Integer integer0 = new Integer(46);
      stack1.add(integer0);
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(defaultComboBoxModel0);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      Class<AWTEventMulticaster> class0 = AWTEventMulticaster.class;
      jComboBox0.getListeners(class0);
      JComboBox<Integer> jComboBox1 = new JComboBox<Integer>(defaultComboBoxModel0);
      int[] intArray0 = new int[5];
      intArray0[0] = 46;
      intArray0[1] = 46;
      intArray0[2] = 46;
      intArray0[3] = 46;
      intArray0[4] = 46;
      visualListModel0.removeElements(intArray0, true);
      visualListModel0.removeElements(1975, (-1196), true);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[3];
      Integer[] integerArray0 = new Integer[7];
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.removeElements(3493, 3493, true);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt((-3804), true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3804
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addAllElements((-2503), (Collection<VisualPageListItem>) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) null);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.getElements();
      Object object0 = visualListModel0.getElementAt(2945);
      assertNull(object0);
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.1341286000959614
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      HierarchyBoundsListener hierarchyBoundsListener0 = mock(HierarchyBoundsListener.class, new ViolatedAssumptionAnswer());
      HierarchyBoundsListener hierarchyBoundsListener1 = AWTEventMulticaster.add(hierarchyBoundsListener0, hierarchyBoundsListener0);
      AWTEventMulticaster.remove(hierarchyBoundsListener1, hierarchyBoundsListener1);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, hierarchyBoundsListener1);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.removeListDataListener((ListDataListener) null);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.subList(0, 0, false);
      Object object0 = new Object();
      visualListModel0.reverseElements(intArray0);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.0069724918931837
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.undeleteElements(intArray0);
      int[] intArray1 = new int[1];
      intArray1[0] = 3927;
      visualListModel0.moveUpIndexes(intArray1);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.removeListDataListener((ListDataListener) null);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.subList(0, 0, true);
      Object object0 = new Object();
      visualListModel0.reverseElements(intArray0);
      assertFalse(intArray0.equals((Object)intArray1));
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.7275737911350801
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      HierarchyBoundsListener hierarchyBoundsListener0 = mock(HierarchyBoundsListener.class, new ViolatedAssumptionAnswer());
      HierarchyBoundsListener hierarchyBoundsListener1 = AWTEventMulticaster.add(hierarchyBoundsListener0, hierarchyBoundsListener0);
      AWTEventMulticaster.remove(hierarchyBoundsListener1, hierarchyBoundsListener1);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, hierarchyBoundsListener1);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      HierarchyBoundsListener hierarchyBoundsListener2 = AWTEventMulticaster.add(hierarchyBoundsListener1, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, hierarchyBoundsListener1);
      HierarchyBoundsListener hierarchyBoundsListener3 = AWTEventMulticaster.add((HierarchyBoundsListener) null, hierarchyBoundsListener2);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, hierarchyBoundsListener3);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      int[] intArray0 = new int[3];
      visualListModel0.rotateClockwiseElements(intArray0);
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>();
      visualListModel0.removeListDataListener(jComboBox0);
      visualListModel0.undeleteElements(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel1.subList(0, (-712), true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(0) > toIndex(-712)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.subList(871, (-786), false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(871) > toIndex(-786)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      visualListModel0.removeListDataListener((ListDataListener) null);
      visualListModel0.subList(125, 1, true);
      Object object0 = new Object();
  }
}
