/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 08:05:00 GMT 2019
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.8897403810505469
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("`>aZ");
      xPathLexer0.not();
      xPathLexer0.rightParen();
      xPathLexer0.pipe();
      xPathLexer0.or();
      xPathLexer0.identifier();
      xPathLexer0.dollar();
      xPathLexer0.mod();
      XPathLexer xPathLexer1 = new XPathLexer("[ (");
      xPathLexer1.isIdentifierStartChar('^');
      xPathLexer0.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.nextToken();
      xPathLexer0.rightBracket();
      xPathLexer0.whitespace();
      xPathLexer0.mod();
      xPathLexer0.not();
      xPathLexer2.div();
      xPathLexer2.operatorName();
      XPathLexer xPathLexer3 = new XPathLexer("[ (");
      xPathLexer3.literal();
      xPathLexer1.slashes();
      xPathLexer0.equals();
      xPathLexer1.and();
      xPathLexer0.isIdentifierStartChar('^');
      xPathLexer3.literal();
      // Undeclared exception!
      try { 
        xPathLexer2.LA((-3823));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.8338176969064843
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Z+!ylRlTLM}");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.rightParen();
      assertEquals("Z", token0.getTokenText());
      assertEquals(2, token0.getTokenType());
      
      xPathLexer0.getXPath();
      Token token1 = xPathLexer0.star();
      assertEquals("+", token1.getTokenText());
      assertEquals(20, token1.getTokenType());
      
      Token token2 = xPathLexer0.doubleColon();
      assertEquals("!y", token2.getTokenText());
      assertEquals(19, token2.getTokenType());
      
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertEquals("lRlTLM", token3.getTokenText());
      
      xPathLexer0.identifier();
      XPathLexer xPathLexer1 = new XPathLexer("o$mI");
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.number();
      Token token4 = xPathLexer1.nextToken();
      assertEquals(15, token4.getTokenType());
      
      Token token5 = xPathLexer1.leftParen();
      assertEquals("$", token5.getTokenText());
      
      Token token6 = xPathLexer2.leftParen();
      assertEquals(1, token6.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("/\"V8&Mge'xOjJm");
      xPathLexer2.setXPath("com.werken.saxpath.XPathLexer");
      xPathLexer1.endPosition();
      Token token7 = xPathLexer3.colon();
      assertEquals(18, token7.getTokenType());
      assertEquals("/", token7.getTokenText());
      
      Token token8 = xPathLexer2.number();
      assertEquals(30, token8.getTokenType());
      
      xPathLexer2.or();
      XPathLexer xPathLexer4 = new XPathLexer();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer2.mod();
      XPathLexer xPathLexer6 = new XPathLexer("Z+!ylRlTLM}");
      xPathLexer5.and();
      int int0 = xPathLexer1.endPosition();
      assertEquals(4, int0);
      
      Token token9 = xPathLexer3.slashes();
      assertEquals("\"", token9.getTokenText());
      assertEquals(11, token9.getTokenType());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.8854078798998646
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.div();
      xPathLexer0.dots();
      Token token0 = xPathLexer0.plus();
      assertEquals("o", token0.getTokenText());
      assertEquals(5, token0.getTokenType());
      
      Token token1 = xPathLexer0.minus();
      assertEquals(6, token1.getTokenType());
      assertEquals("m", token1.getTokenText());
      
      xPathLexer0.nextToken();
      xPathLexer0.and();
      xPathLexer0.and();
      Token token2 = xPathLexer0.dollar();
      assertEquals(26, token2.getTokenType());
      assertEquals("w", token2.getTokenText());
      
      xPathLexer0.or();
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(4, token3.getTokenType());
      
      Token token4 = xPathLexer0.comma();
      assertEquals(32, token4.getTokenType());
      
      Token token5 = xPathLexer0.identifier();
      assertEquals("ken.saxpath.XPathLexer", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
      
      Token token6 = xPathLexer0.star();
      assertEquals(20, token6.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.setXPath("%@%");
      Token token7 = xPathLexer1.dots();
      assertEquals("%", token7.getTokenText());
      
      Token token8 = xPathLexer0.notEquals();
      assertEquals(22, token8.getTokenType());
      
      xPathLexer1.or();
      xPathLexer0.getPreviousToken();
      Token token9 = xPathLexer1.number();
      assertEquals(30, token9.getTokenType());
      
      xPathLexer1.mod();
      Token token10 = xPathLexer0.leftParen();
      assertEquals(1, token10.getTokenType());
      
      Token token11 = xPathLexer1.colon();
      assertEquals(18, token11.getTokenType());
      
      xPathLexer1.div();
      Token token12 = xPathLexer0.dots();
      assertEquals(13, token12.getTokenType());
      
      boolean boolean0 = xPathLexer1.isIdentifierChar('k');
      assertTrue(boolean0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.0808252578305444
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Z+!ylRlTLM}");
      xPathLexer0.mod();
      xPathLexer0.rightParen();
      xPathLexer0.getXPath();
      xPathLexer0.star();
      xPathLexer0.doubleColon();
      xPathLexer0.pipe();
      xPathLexer0.and();
      xPathLexer0.consume();
      xPathLexer0.notEquals();
      xPathLexer0.colon();
      xPathLexer0.nextToken();
      xPathLexer0.dollar();
      xPathLexer0.colon();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.and();
      xPathLexer0.relationalOperator();
      xPathLexer0.dollar();
      xPathLexer0.dollar();
      xPathLexer0.pipe();
      xPathLexer0.and();
      xPathLexer0.comma();
      xPathLexer0.at();
      xPathLexer0.isIdentifierChar('!');
      xPathLexer0.consume((-3449));
      xPathLexer0.rightParen();
      xPathLexer0.notEquals();
      // Undeclared exception!
      try { 
        xPathLexer0.slashes();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.8619570002393886
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("equ*XT\"On8D?dDvV[");
      xPathLexer0.mod();
      XPathLexer xPathLexer1 = new XPathLexer("_m+r+v}+T\"xBF{7fd");
      xPathLexer1.doubleColon();
      xPathLexer1.or();
      xPathLexer1.not();
      xPathLexer1.number();
      xPathLexer1.whitespace();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.identifierOrOperatorName();
      xPathLexer2.leftParen();
      xPathLexer1.nextToken();
      xPathLexer2.comma();
      xPathLexer0.leftParen();
      xPathLexer0.setXPath("");
      xPathLexer2.endPosition();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer3 = null;
      try {
        xPathLexer3 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.3297095090871371
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4f(y@*vGC)}),");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.dollar();
      token0.toString();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (26) (4)", string0);
      
      xPathLexer0.at();
      Token token1 = xPathLexer0.slashes();
      assertEquals("(", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
      
      Token token2 = xPathLexer0.not();
      assertEquals(23, token2.getTokenType());
      assertEquals("y", token2.getTokenText());
      
      xPathLexer0.mod();
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token3 = xPathLexer0.nextToken();
      assertEquals(16, token3.getTokenType());
      assertEquals("@", token3.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token4 = xPathLexer3.star();
      assertEquals(20, token4.getTokenType());
      
      xPathLexer1.hasMoreChars();
      xPathLexer1.consume();
      xPathLexer0.consume(107);
      Token token5 = xPathLexer3.rightParen();
      assertEquals(2, token5.getTokenType());
      
      Token token6 = xPathLexer3.whitespace();
      assertEquals((-2), token6.getTokenType());
      
      boolean boolean0 = xPathLexer2.hasMoreChars();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.7564863503029928
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(";',!");
      xPathLexer0.or();
      xPathLexer0.number();
      Token token0 = xPathLexer0.doubleColon();
      xPathLexer0.notEquals();
      xPathLexer0.equals();
      xPathLexer0.notEquals();
      xPathLexer0.leftParen();
      xPathLexer0.colon();
      xPathLexer0.operatorName();
      xPathLexer0.LA(1);
      xPathLexer0.not();
      xPathLexer0.leftParen();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.isIdentifierStartChar('\uFFFF');
      xPathLexer0.nextToken();
      xPathLexer0.hasMoreChars();
      xPathLexer0.consume((-1943));
      xPathLexer0.rightParen();
      // Undeclared exception!
      try { 
        xPathLexer0.whitespace();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-3449));
      // Undeclared exception!
      try { 
        xPathLexer0.mod();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.4609977587461174
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4f(y@*vGC)}),");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.dollar();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (26) (4)", string0);
      
      xPathLexer0.at();
      Token token1 = xPathLexer0.slashes();
      assertEquals("(", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
      
      Token token2 = xPathLexer0.not();
      assertEquals(23, token2.getTokenType());
      assertEquals("y", token2.getTokenText());
      
      xPathLexer0.at();
      XPathLexer xPathLexer1 = new XPathLexer(" )mx");
      xPathLexer1.endPosition();
      xPathLexer1.leftParen();
      Token token3 = xPathLexer1.leftParen();
      assertEquals(")", token3.getTokenText());
      
      xPathLexer0.div();
      xPathLexer0.mod();
      xPathLexer1.getPreviousToken();
      Token token4 = xPathLexer0.at();
      assertEquals(16, token4.getTokenType());
      assertEquals("*", token4.getTokenText());
      
      xPathLexer0.setPreviousToken(token0);
      int int0 = xPathLexer1.endPosition();
      assertEquals(4, int0);
      
      Token token5 = xPathLexer1.minus();
      assertEquals(6, token5.getTokenType());
      assertEquals("m", token5.getTokenText());
      
      xPathLexer1.and();
      Token token6 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token6.getTokenType());
      assertEquals("vGC", token6.getTokenText());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.9359070520988484
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("equ*XT\"On8D?dDvV[");
      xPathLexer0.mod();
      XPathLexer xPathLexer1 = new XPathLexer("_m+r+v}+T\"xBF{7fd");
      Token token0 = xPathLexer1.doubleColon();
      assertEquals(19, token0.getTokenType());
      assertEquals("_m", token0.getTokenText());
      
      Token token1 = xPathLexer1.or();
      assertNull(token1);
      
      xPathLexer1.and();
      Token token2 = xPathLexer1.number();
      assertEquals(30, token2.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.identifierOrOperatorName();
      Token token3 = xPathLexer1.nextToken();
      assertEquals(5, token3.getTokenType());
      assertEquals("+", token3.getTokenText());
      
      Token token4 = xPathLexer2.comma();
      assertEquals(32, token4.getTokenType());
      
      Token token5 = xPathLexer0.leftParen();
      assertEquals("e", token5.getTokenText());
      assertEquals(1, token5.getTokenType());
      
      xPathLexer2.endPosition();
      Token token6 = xPathLexer0.nextToken();
      assertEquals("qu", token6.getTokenText());
      assertEquals(15, token6.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.mod();
      xPathLexer1.endPosition();
      XPathLexer xPathLexer4 = new XPathLexer("");
      Token token7 = xPathLexer4.slashes();
      assertEquals(11, token7.getTokenType());
      
      Token token8 = xPathLexer1.whitespace();
      assertEquals((-2), token8.getTokenType());
      assertEquals("", token8.getTokenText());
      
      Token token9 = xPathLexer3.not();
      assertEquals(23, token9.getTokenType());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.3560953265588345
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(3, token0.getTokenType());
      
      xPathLexer0.div();
      xPathLexer0.or();
      xPathLexer0.at();
      Token token1 = xPathLexer0.slashes();
      Token token2 = xPathLexer0.not();
      assertEquals(23, token2.getTokenType());
      
      xPathLexer0.endPosition();
      xPathLexer0.leftParen();
      Token token3 = xPathLexer0.leftParen();
      assertEquals(1, token3.getTokenType());
      
      xPathLexer0.div();
      xPathLexer0.mod();
      Token token4 = xPathLexer0.at();
      assertEquals(16, token4.getTokenType());
      
      xPathLexer0.setPreviousToken(token1);
      assertEquals(11, token1.getTokenType());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(0, int0);
      
      Token token5 = xPathLexer0.minus();
      assertEquals(6, token5.getTokenType());
      
      xPathLexer0.and();
      Token token6 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token6.getTokenType());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.1147182098251722
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      xPathLexer0.rightBracket();
      xPathLexer0.plus();
      Token token0 = xPathLexer0.number();
      xPathLexer0.nextToken();
      token0.toString();
      token0.toString();
      xPathLexer0.div();
      token0.toString();
      token0.toString();
      token0.toString();
      xPathLexer0.leftBracket();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.dollar();
      xPathLexer0.comma();
      xPathLexer0.and();
      xPathLexer0.leftBracket();
      xPathLexer0.equals();
      xPathLexer0.star();
      xPathLexer0.identifier();
      xPathLexer0.getXPath();
      xPathLexer0.whitespace();
      xPathLexer0.identifier();
      xPathLexer0.plus();
      xPathLexer0.consume();
      xPathLexer0.operatorName();
      xPathLexer0.setXPath(")z qx (gFJ");
      xPathLexer0.number();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.or();
      xPathLexer0.colon();
      xPathLexer0.hasMoreChars();
      xPathLexer0.pipe();
      xPathLexer0.doubleColon();
      int int0 = xPathLexer0.endPosition();
      assertEquals(10, int0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.277027544623369
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("equ*XT\"On8D?dDvV[");
      xPathLexer0.mod();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = null;
      try {
        xPathLexer1 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.65548592208044
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("equ*XT\"On8D?dDvV[");
      xPathLexer0.comma();
      XPathLexer xPathLexer1 = new XPathLexer("_m+r+v}+T\"xBF{7fd");
      xPathLexer1.doubleColon();
      xPathLexer1.or();
      xPathLexer1.not();
      xPathLexer0.leftBracket();
      xPathLexer1.number();
      xPathLexer0.at();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.identifierOrOperatorName();
      xPathLexer1.nextToken();
      xPathLexer2.comma();
      xPathLexer0.leftParen();
      xPathLexer0.setXPath("");
      xPathLexer2.endPosition();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer3 = null;
      try {
        xPathLexer3 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.9522146688178257
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\"sOEOh %}2");
      Token token0 = xPathLexer0.dots();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.nextToken();
      token1.toString();
      Token token2 = xPathLexer0.whitespace();
      assertEquals((-2), token2.getTokenType());
      assertEquals("", token2.getTokenText());
      
      token1.toString();
      xPathLexer0.leftParen();
      String string0 = token0.toString();
      assertEquals("[ (13) (\")", string0);
      
      String string1 = token1.toString();
      assertEquals("[ (-1) (sOEOh %}2)", string1);
      
      xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken(token1);
      xPathLexer0.getPreviousToken();
      xPathLexer0.number();
      xPathLexer0.mod();
      XPathLexer xPathLexer1 = new XPathLexer("\"sOEOh %}2");
      Token token3 = xPathLexer1.leftParen();
      assertEquals(1, token3.getTokenType());
      assertEquals("\"", token3.getTokenText());
      
      Token token4 = xPathLexer1.colon();
      assertEquals(18, token4.getTokenType());
      assertEquals("s", token4.getTokenText());
      
      xPathLexer1.div();
      Token token5 = xPathLexer1.number();
      assertEquals(30, token5.getTokenType());
      assertEquals("", token5.getTokenText());
      
      Token token6 = xPathLexer0.getPreviousToken();
      assertEquals((-1), token6.getTokenType());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.2680842177352765
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      String string0 = "Z+!ylRlTLM}";
      XPathLexer xPathLexer0 = new XPathLexer("Z+!ylRlTLM}");
      xPathLexer0.mod();
      xPathLexer0.rightParen();
      xPathLexer0.getXPath();
      xPathLexer0.star();
      xPathLexer0.doubleColon();
      xPathLexer0.consume();
      Token token0 = xPathLexer0.dollar();
      token0.toString();
      xPathLexer0.setPreviousToken((Token) null);
      xPathLexer0.star();
      xPathLexer0.mod();
      Token token1 = xPathLexer0.rightParen();
      token1.toString();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.hasMoreChars();
      token1.toString();
      Token token2 = xPathLexer1.not();
      // Undeclared exception!
      try { 
        token2.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.162204063097704
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      
      xPathLexer0.plus();
      Token token1 = xPathLexer0.plus();
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
      
      token1.toString();
      token1.toString();
      token1.toString();
      token1.toString();
      xPathLexer0.div();
      token1.toString();
      token1.toString();
      String string0 = token1.toString();
      assertEquals("[ (5) (()", string0);
      
      xPathLexer0.leftBracket();
      xPathLexer0.setPreviousToken(token1);
      xPathLexer0.doubleColon();
      Token token3 = xPathLexer0.comma();
      assertEquals(32, token3.getTokenType());
      
      xPathLexer0.plus();
      xPathLexer0.and();
      Token token4 = xPathLexer0.leftBracket();
      assertEquals(3, token4.getTokenType());
      
      Token token5 = xPathLexer0.equals();
      assertEquals(21, token5.getTokenType());
      
      Token token6 = xPathLexer0.star();
      assertEquals(20, token6.getTokenType());
      
      xPathLexer0.identifier();
      xPathLexer0.getXPath();
      Token token7 = xPathLexer0.whitespace();
      assertEquals((-2), token7.getTokenType());
      
      xPathLexer0.identifier();
      xPathLexer0.plus();
      xPathLexer0.consume();
      xPathLexer0.operatorName();
      xPathLexer0.setXPath(")z qx (gFJ");
      Token token8 = xPathLexer0.number();
      assertEquals(30, token8.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      Token token9 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token9.getTokenType());
      
      xPathLexer0.or();
      Token token10 = xPathLexer0.colon();
      assertEquals(")", token10.getTokenText());
      assertEquals(18, token10.getTokenType());
      
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertTrue(boolean0);
      
      Token token11 = xPathLexer0.doubleColon();
      assertEquals(19, token11.getTokenType());
      assertEquals("z ", token11.getTokenText());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(10, int0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.835917644491543
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      String string0 = "Z+!ylRlTLM}";
      XPathLexer xPathLexer0 = new XPathLexer("Z+!ylRlTLM}");
      xPathLexer0.mod();
      xPathLexer0.rightParen();
      xPathLexer0.getXPath();
      xPathLexer0.star();
      xPathLexer0.doubleColon();
      xPathLexer0.pipe();
      xPathLexer0.and();
      xPathLexer0.notEquals();
      xPathLexer0.colon();
      xPathLexer0.nextToken();
      xPathLexer0.whitespace();
      xPathLexer0.colon();
      xPathLexer0.relationalOperator();
      xPathLexer0.rightBracket();
      xPathLexer0.and();
      xPathLexer0.dollar();
      xPathLexer0.pipe();
      xPathLexer0.and();
      xPathLexer0.at();
      xPathLexer0.isIdentifierChar('!');
      xPathLexer0.consume((-3449));
      xPathLexer0.rightParen();
      xPathLexer0.notEquals();
      // Undeclared exception!
      try { 
        xPathLexer0.or();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.1834888415344675
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Z+!ylRlTLM}");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.rightParen();
      assertEquals("Z", token0.getTokenText());
      
      xPathLexer0.getXPath();
      xPathLexer0.star();
      Token token1 = xPathLexer0.doubleColon();
      assertEquals("!y", token1.getTokenText());
      
      Token token2 = xPathLexer0.pipe();
      assertEquals("l", token2.getTokenText());
      
      xPathLexer0.and();
      xPathLexer0.consume();
      Token token3 = xPathLexer0.notEquals();
      assertEquals(22, token3.getTokenType());
      assertEquals("lT", token3.getTokenText());
      
      Token token4 = xPathLexer0.colon();
      assertEquals("L", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(15, token5.getTokenType());
      
      Token token6 = xPathLexer0.dollar();
      assertEquals("}", token6.getTokenText());
      
      Token token7 = xPathLexer0.colon();
      assertEquals(18, token7.getTokenType());
      
      Token token8 = xPathLexer0.identifierOrOperatorName();
      assertNull(token8);
      
      xPathLexer0.and();
      xPathLexer0.dollar();
      Token token9 = xPathLexer0.dollar();
      assertEquals(26, token9.getTokenType());
      
      Token token10 = xPathLexer0.pipe();
      assertEquals(17, token10.getTokenType());
      
      xPathLexer0.and();
      Token token11 = xPathLexer0.comma();
      assertEquals(32, token11.getTokenType());
      
      Token token12 = xPathLexer0.at();
      assertEquals(16, token12.getTokenType());
      
      xPathLexer0.nextToken();
      xPathLexer0.div();
      xPathLexer0.setPreviousToken((Token) null);
      xPathLexer0.div();
      XPathLexer xPathLexer1 = new XPathLexer("Z+!ylRlTLM}");
      xPathLexer1.identifier();
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token13 = xPathLexer2.not();
      assertEquals(23, token13.getTokenType());
      
      Token token14 = xPathLexer2.number();
      assertEquals(30, token14.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("Z+!ylRlTLM}");
      xPathLexer3.operatorName();
      Token token15 = xPathLexer1.leftParen();
      assertEquals("+", token15.getTokenText());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.5216690379633375
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume();
      xPathLexer0.plus();
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      
      xPathLexer0.slashes();
      Token token2 = xPathLexer0.plus();
      assertEquals(5, token2.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.div();
      xPathLexer0.consume();
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertFalse(boolean0);
      
      Token token3 = xPathLexer0.not();
      assertEquals(23, token3.getTokenType());
      
      xPathLexer0.getXPath();
      xPathLexer0.star();
      xPathLexer0.consume();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.setXPath("");
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.comma();
      xPathLexer0.operatorName();
      xPathLexer0.slashes();
      Token token4 = xPathLexer0.dollar();
      assertEquals(26, token4.getTokenType());
      
      Token token5 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token5.getTokenType());
      assertNotNull(token5);
      
      xPathLexer0.getXPath();
      Token token6 = xPathLexer0.leftParen();
      assertEquals(1, token6.getTokenType());
      
      Token token7 = xPathLexer0.star();
      assertEquals(20, token7.getTokenType());
      
      xPathLexer0.minus();
      Token token8 = xPathLexer0.slashes();
      assertEquals(11, token8.getTokenType());
      
      Token token9 = xPathLexer0.minus();
      assertEquals(6, token9.getTokenType());
      
      Token token10 = xPathLexer0.comma();
      assertEquals(32, token10.getTokenType());
      
      Token token11 = xPathLexer0.comma();
      assertEquals(32, token11.getTokenType());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.9656573532885475
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Z+!ylRlTLM}");
      xPathLexer0.mod();
      xPathLexer0.rightParen();
      xPathLexer0.getXPath();
      xPathLexer0.star();
      xPathLexer0.minus();
      xPathLexer0.doubleColon();
      xPathLexer0.pipe();
      xPathLexer0.and();
      xPathLexer0.consume();
      xPathLexer0.notEquals();
      xPathLexer0.colon();
      xPathLexer0.nextToken();
      xPathLexer0.dollar();
      xPathLexer0.colon();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.and();
      xPathLexer0.dollar();
      xPathLexer0.dollar();
      xPathLexer0.pipe();
      xPathLexer0.and();
      xPathLexer0.comma();
      xPathLexer0.at();
      xPathLexer0.isIdentifierChar('!');
      xPathLexer0.consume((-3449));
      // Undeclared exception!
      try { 
        xPathLexer0.div();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.7989446432306178
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\"sOEOh %}2");
      Token token0 = xPathLexer0.dots();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (13) (\")", string0);
      
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.nextToken();
      token1.toString();
      token1.toString();
      Token token2 = xPathLexer0.whitespace();
      assertEquals("", token2.getTokenText());
      assertEquals((-2), token2.getTokenType());
      
      String string1 = token1.toString();
      assertEquals("[ (-1) (sOEOh %}2)", string1);
      
      xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken(token1);
      Token token3 = xPathLexer0.literal();
      assertEquals(27, token3.getTokenType());
      assertEquals("E", token3.getTokenText());
      
      char char0 = xPathLexer0.LA(1);
      assertEquals('h', char0);
      
      Token token4 = xPathLexer0.comma();
      assertEquals(32, token4.getTokenType());
      assertEquals("h", token4.getTokenText());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.116312572617831
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("^J-Ru");
      xPathLexer0.pipe();
      xPathLexer0.mod();
      xPathLexer0.equals();
      xPathLexer0.star();
      xPathLexer0.star();
      xPathLexer0.leftParen();
      xPathLexer0.pipe();
      xPathLexer0.leftParen();
      xPathLexer0.setXPath("^J-Ru");
      xPathLexer0.whitespace();
      xPathLexer0.isIdentifierChar('J');
      xPathLexer0.currentPosition();
      xPathLexer0.equals();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.isIdentifierChar('J');
      xPathLexer0.pipe();
      Token token0 = xPathLexer0.getPreviousToken();
      assertNull(token0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.7062765758599667
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.equals();
      xPathLexer0.whitespace();
      xPathLexer0.leftParen();
      xPathLexer0.rightBracket();
      xPathLexer0.doubleColon();
      xPathLexer0.identifier();
      xPathLexer0.setXPath("2oy)m");
      xPathLexer0.not();
      xPathLexer0.pipe();
      xPathLexer0.relationalOperator();
      xPathLexer0.div();
      xPathLexer0.comma();
      xPathLexer0.literal();
      xPathLexer0.and();
      xPathLexer0.at();
      xPathLexer0.isIdentifierChar('7');
      xPathLexer0.colon();
      xPathLexer0.leftBracket();
      xPathLexer0.plus();
      xPathLexer0.notEquals();
      xPathLexer0.and();
      xPathLexer0.notEquals();
      xPathLexer0.setXPath("");
      xPathLexer0.plus();
      xPathLexer0.whitespace();
      xPathLexer0.equals();
      xPathLexer0.consume();
      xPathLexer0.not();
      xPathLexer0.plus();
      xPathLexer0.consume();
      xPathLexer0.consume(1639);
      assertEquals("", xPathLexer0.getXPath());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.9547931784948394
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(")", token0.getTokenText());
      
      xPathLexer0.plus();
      Token token1 = xPathLexer0.plus();
      xPathLexer0.nextToken();
      token1.toString();
      token1.toString();
      String string0 = token1.toString();
      assertEquals("[ (5) (()", string0);
      
      xPathLexer0.and();
      xPathLexer0.and();
      Token token2 = xPathLexer0.dollar();
      assertEquals(26, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("oS=/");
      xPathLexer1.or();
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(4, token3.getTokenType());
      
      Token token4 = xPathLexer0.comma();
      assertEquals(32, token4.getTokenType());
      
      Token token5 = xPathLexer1.identifier();
      assertEquals("oS", token5.getTokenText());
      
      Token token6 = xPathLexer1.star();
      assertEquals("=", token6.getTokenText());
      assertEquals(20, token6.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.setXPath("");
      XPathLexer xPathLexer3 = new XPathLexer("oS=/");
      xPathLexer3.dots();
      Token token7 = xPathLexer2.notEquals();
      assertEquals(22, token7.getTokenType());
      
      xPathLexer1.or();
      Token token8 = xPathLexer0.getPreviousToken();
      assertEquals((-1), token8.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token9 = xPathLexer4.number();
      assertEquals(30, token9.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.mod();
      xPathLexer2.leftParen();
      Token token10 = xPathLexer0.colon();
      assertEquals(18, token10.getTokenType());
      
      xPathLexer5.div();
      XPathLexer xPathLexer6 = new XPathLexer("[ (5) (()");
      Token token11 = xPathLexer6.dots();
      assertEquals("[", token11.getTokenText());
      assertEquals(13, token11.getTokenType());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.92819476520619
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("iWMSd(Ou2<]YX|U");
      xPathLexer0.div();
      xPathLexer0.consume((-264));
      // Undeclared exception!
      try { 
        xPathLexer0.identifierOrOperatorName();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.7249872752262312
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.leftBracket();
      xPathLexer0.at();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.comma();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.dots();
      xPathLexer0.relationalOperator();
      xPathLexer0.doubleColon();
      xPathLexer0.nextToken();
      xPathLexer0.or();
      xPathLexer0.hasMoreChars();
      xPathLexer0.or();
      xPathLexer0.or();
      xPathLexer0.currentPosition();
      xPathLexer0.leftParen();
      xPathLexer0.minus();
      xPathLexer0.slashes();
      xPathLexer0.equals();
      xPathLexer0.hasMoreChars();
      xPathLexer0.consume();
      xPathLexer0.slashes();
      xPathLexer0.not();
      xPathLexer0.doubleColon();
      xPathLexer0.hasMoreChars();
      xPathLexer0.whitespace();
      xPathLexer0.div();
      xPathLexer0.div();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.6293761510240463
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("`>aZ");
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      assertEquals("`", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightParen();
      Token token2 = xPathLexer0.pipe();
      assertEquals(17, token2.getTokenType());
      assertEquals("a", token2.getTokenText());
      
      xPathLexer0.or();
      Token token3 = xPathLexer0.identifier();
      assertEquals("Z", token3.getTokenText());
      
      Token token4 = xPathLexer0.dollar();
      assertEquals(26, token4.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("u}P");
      Token token5 = xPathLexer1.at();
      assertEquals("u", token5.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("u}P");
      xPathLexer0.endPosition();
      xPathLexer0.leftParen();
      Token token6 = xPathLexer0.leftParen();
      assertEquals(1, token6.getTokenType());
      
      xPathLexer2.div();
      xPathLexer0.mod();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.getPreviousToken();
      Token token7 = xPathLexer0.at();
      assertEquals(16, token7.getTokenType());
      
      xPathLexer3.setPreviousToken(token1);
      assertEquals(">", token1.getTokenText());
      assertEquals(2, token1.getTokenType());
      
      xPathLexer1.endPosition();
      Token token8 = xPathLexer2.minus();
      assertEquals("u", token8.getTokenText());
      assertEquals(6, token8.getTokenType());
      
      xPathLexer0.and();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token9 = xPathLexer4.identifierOrOperatorName();
      assertEquals(15, token9.getTokenType());
      assertNotNull(token9);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.129911691649279
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      
      xPathLexer0.identifier();
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(19, token1.getTokenType());
      
      Token token2 = xPathLexer0.not();
      assertEquals(23, token2.getTokenType());
      
      xPathLexer0.number();
      xPathLexer0.identifierOrOperatorName();
      Token token3 = xPathLexer0.identifier();
      assertEquals(15, token3.getTokenType());
      
      xPathLexer0.number();
      xPathLexer0.nextToken();
      Token token4 = xPathLexer0.comma();
      assertEquals(32, token4.getTokenType());
      
      xPathLexer0.leftParen();
      xPathLexer0.setXPath("com.werken.saxpath.XPathLexer");
      Token token5 = xPathLexer0.rightParen();
      assertEquals("c", token5.getTokenText());
      
      Token token6 = xPathLexer0.notEquals();
      assertEquals("om", token6.getTokenText());
      assertEquals(22, token6.getTokenType());
      
      xPathLexer0.or();
      Token token7 = xPathLexer0.slashes();
      assertEquals(".", token7.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token8 = xPathLexer1.rightParen();
      assertEquals(2, token8.getTokenType());
      
      Token token9 = xPathLexer0.literal();
      assertNull(token9);
      
      Token token10 = xPathLexer0.star();
      assertEquals(20, token10.getTokenType());
      
      Token token11 = xPathLexer1.slashes();
      assertEquals(11, token11.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('U');
      assertTrue(boolean0);
      
      Token token12 = xPathLexer0.number();
      assertEquals(30, token12.getTokenType());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.9422460231703953
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4f(y@*vGC)}),");
      xPathLexer0.consume();
      xPathLexer0.slashes();
      Token token0 = xPathLexer0.doubleColon();
      token0.toString();
      token0.toString();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.identifier();
      xPathLexer0.not();
      token1.toString();
      token1.toString();
      token1.toString();
      xPathLexer0.notEquals();
      token1.toString();
      xPathLexer0.whitespace();
      xPathLexer0.nextToken();
      xPathLexer0.div();
      xPathLexer0.setPreviousToken(token1);
      xPathLexer0.div();
      xPathLexer0.identifier();
      xPathLexer0.pipe();
      xPathLexer0.operatorName();
      boolean boolean0 = xPathLexer0.isIdentifierChar('>');
      assertFalse(boolean0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.7911800260845028
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      String string0 = "com.werken.saxpath.XPathLexer";
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.div();
      xPathLexer0.dots();
      xPathLexer0.minus();
      xPathLexer0.nextToken();
      xPathLexer0.minus();
      xPathLexer0.and();
      xPathLexer0.and();
      xPathLexer0.not();
      xPathLexer0.nextToken();
      xPathLexer0.consume();
      xPathLexer0.div();
      xPathLexer0.div();
      xPathLexer0.and();
      xPathLexer0.consume();
      xPathLexer0.comma();
      xPathLexer0.operatorName();
      xPathLexer0.equals();
      xPathLexer0.not();
      xPathLexer0.colon();
      xPathLexer0.operatorName();
      xPathLexer0.leftParen();
      xPathLexer0.pipe();
      xPathLexer0.consume();
      xPathLexer0.minus();
      xPathLexer0.setXPath("com.werken.saxpath.XPathLexer");
      xPathLexer0.identifier();
      // Undeclared exception!
      try { 
        xPathLexer0.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.9860389925370128
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\"sOEOh %}2");
      Token token0 = xPathLexer0.dots();
      token0.toString();
      xPathLexer0.number();
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.identifier();
      XPathLexer xPathLexer1 = new XPathLexer("[ (13) (\")");
      xPathLexer1.number();
      xPathLexer0.nextToken();
      xPathLexer0.plus();
      xPathLexer0.leftParen();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      token0.toString();
      xPathLexer0.notEquals();
      Token token2 = xPathLexer0.whitespace();
      xPathLexer1.nextToken();
      xPathLexer2.div();
      xPathLexer0.setPreviousToken(token2);
      xPathLexer2.div();
      xPathLexer2.identifier();
      xPathLexer1.not();
      xPathLexer0.number();
      XPathLexer xPathLexer3 = new XPathLexer("\"sOEOh %}2");
      xPathLexer2.operatorName();
      Token token3 = xPathLexer0.leftParen();
      assertNotSame(token3, token1);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.9071930611147492
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\"sOEOh %}2");
      Token token0 = xPathLexer0.dots();
      token0.toString();
      XPathLexer xPathLexer1 = new XPathLexer("[ (13) (\")");
      xPathLexer0.or();
      xPathLexer1.setPreviousToken((Token) null);
      Token token1 = xPathLexer0.nextToken();
      token1.toString();
      xPathLexer0.whitespace();
      Token token2 = xPathLexer0.at();
      token2.toString();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.setPreviousToken((Token) null);
      xPathLexer1.literal();
      xPathLexer2.number();
      xPathLexer0.and();
      Token token3 = xPathLexer1.or();
      assertNull(token3);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.6687474461932639
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4f(y@*vGC)}),");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.dollar();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      xPathLexer0.setPreviousToken((Token) null);
      Token token1 = xPathLexer0.rightBracket();
      assertEquals("f", token1.getTokenText());
      assertEquals(4, token1.getTokenType());
      
      xPathLexer0.setPreviousToken((Token) null);
      Token token2 = xPathLexer0.star();
      String string0 = token2.toString();
      assertEquals("[ (20) (()", string0);
      
      String string1 = token0.toString();
      assertEquals("[ (26) (4)", string1);
      
      Token token3 = xPathLexer0.whitespace();
      Token token4 = xPathLexer0.leftParen();
      assertEquals("@", token4.getTokenText());
      
      String string2 = token3.toString();
      assertEquals("[ (-2) ()", string2);
      
      XPathLexer xPathLexer1 = new XPathLexer("[ (26) (4)");
      Token token5 = xPathLexer1.nextToken();
      assertEquals("[", token5.getTokenText());
      assertEquals(3, token5.getTokenType());
      
      xPathLexer1.setPreviousToken(token2);
      Token token6 = xPathLexer0.literal();
      assertNull(token6);
      
      char char0 = xPathLexer0.LA(1736);
      assertEquals('\uFFFF', char0);
      
      Token token7 = xPathLexer0.leftParen();
      assertEquals(1, token7.getTokenType());
      
      Token token8 = xPathLexer1.number();
      assertEquals(30, token8.getTokenType());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.6800858660360158
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4f(y@*vGC)}),");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.dollar();
      token0.toString();
      token0.toString();
      Token token1 = xPathLexer0.at();
      Token token2 = xPathLexer0.slashes();
      xPathLexer0.not();
      xPathLexer0.at();
      token0.toString();
      Token token3 = xPathLexer0.not();
      token1.toString();
      token1.toString();
      token0.toString();
      xPathLexer0.notEquals();
      token3.toString();
      xPathLexer0.whitespace();
      xPathLexer0.nextToken();
      xPathLexer0.div();
      xPathLexer0.setPreviousToken(token2);
      xPathLexer0.div();
      xPathLexer0.identifier();
      xPathLexer0.pipe();
      xPathLexer0.operatorName();
      boolean boolean0 = xPathLexer0.isIdentifierChar('>');
      assertFalse(boolean0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.6252777911631155
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      assertEquals(")", token0.getTokenText());
      
      Token token1 = xPathLexer0.plus();
      assertEquals(5, token1.getTokenType());
      
      Token token2 = xPathLexer0.number();
      Token token3 = xPathLexer0.nextToken();
      assertEquals(1, token3.getTokenType());
      assertEquals("(", token3.getTokenText());
      
      token2.toString();
      token2.toString();
      xPathLexer0.div();
      token2.toString();
      token2.toString();
      String string0 = token2.toString();
      assertEquals("[ (30) ()", string0);
      
      Token token4 = xPathLexer0.leftBracket();
      assertEquals(3, token4.getTokenType());
      
      xPathLexer0.setPreviousToken(token2);
      Token token5 = xPathLexer0.dollar();
      assertEquals(26, token5.getTokenType());
      
      xPathLexer0.comma();
      xPathLexer0.and();
      xPathLexer0.pipe();
      xPathLexer0.number();
      Token token6 = xPathLexer0.comma();
      assertEquals(32, token6.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("[ (30) ()");
      Token token7 = xPathLexer1.not();
      assertEquals(23, token7.getTokenType());
      assertEquals("[", token7.getTokenText());
      
      xPathLexer0.mod();
      xPathLexer0.nextToken();
      Token token8 = xPathLexer0.pipe();
      assertEquals(17, token8.getTokenType());
      
      xPathLexer0.nextToken();
      Token token9 = xPathLexer0.star();
      assertEquals(20, token9.getTokenType());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.975102728219374
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.equals();
      assertEquals(21, token0.getTokenType());
      
      Token token1 = xPathLexer0.minus();
      assertEquals(6, token1.getTokenType());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertNotNull(token2);
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.at();
      assertEquals(16, token3.getTokenType());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.7646221358849683
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.comma();
      xPathLexer0.comma();
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(19, token1.getTokenType());
      
      Token token2 = xPathLexer0.comma();
      assertEquals(32, token2.getTokenType());
      
      Token token3 = xPathLexer0.equals();
      assertEquals(21, token3.getTokenType());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.189458019148689
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("equ*XT\"On8D?dDvV[");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.slashes();
      Token token1 = xPathLexer0.doubleColon();
      token1.toString();
      token1.toString();
      token1.toString();
      xPathLexer0.setPreviousToken(token1);
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.setPreviousToken(token0);
      xPathLexer1.identifier();
      xPathLexer0.not();
      String string0 = token0.toString();
      assertEquals("[ (11) (q)", string0);
      
      String string1 = token1.toString();
      assertEquals("[ (19) (u*)", string1);
      
      Token token2 = xPathLexer1.notEquals();
      assertEquals(22, token2.getTokenType());
      
      Token token3 = xPathLexer0.whitespace();
      assertEquals("", token3.getTokenText());
      assertEquals((-2), token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("n8D", token4.getTokenText());
      
      xPathLexer1.div();
      xPathLexer0.setPreviousToken((Token) null);
      xPathLexer1.div();
      Token token5 = xPathLexer0.identifier();
      assertEquals(15, token5.getTokenType());
      
      Token token6 = xPathLexer0.not();
      assertEquals("?", token6.getTokenText());
      assertEquals(23, token6.getTokenType());
      
      Token token7 = xPathLexer1.number();
      assertEquals(30, token7.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer0.operatorName();
      Token token8 = xPathLexer0.leftParen();
      assertEquals(1, token8.getTokenType());
      assertEquals("d", token8.getTokenText());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.993711308778674
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.div();
      xPathLexer0.dots();
      xPathLexer0.minus();
      xPathLexer0.nextToken();
      xPathLexer0.and();
      xPathLexer0.and();
      xPathLexer0.dollar();
      xPathLexer0.rightBracket();
      xPathLexer0.comma();
      xPathLexer0.identifier();
      xPathLexer0.star();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.setXPath("%@%");
      xPathLexer1.dots();
      xPathLexer0.notEquals();
      xPathLexer1.or();
      xPathLexer0.getPreviousToken();
      xPathLexer1.number();
      xPathLexer1.mod();
      xPathLexer0.leftParen();
      xPathLexer1.colon();
      Token token0 = xPathLexer1.div();
      assertNull(token0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.691735059102455
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.0191552440386924
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Z+!ylRlTLM}");
      xPathLexer0.mod();
      xPathLexer0.rightParen();
      xPathLexer0.getXPath();
      xPathLexer0.star();
      xPathLexer0.minus();
      xPathLexer0.doubleColon();
      xPathLexer0.pipe();
      xPathLexer0.and();
      xPathLexer0.consume();
      xPathLexer0.notEquals();
      xPathLexer0.colon();
      xPathLexer0.nextToken();
      xPathLexer0.dollar();
      xPathLexer0.colon();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.and();
      xPathLexer0.dollar();
      xPathLexer0.dollar();
      xPathLexer0.pipe();
      xPathLexer0.and();
      xPathLexer0.mod();
      xPathLexer0.nextToken();
      xPathLexer0.rightBracket();
      xPathLexer0.whitespace();
      xPathLexer0.mod();
      xPathLexer0.not();
      xPathLexer0.dots();
      xPathLexer0.div();
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=3.367772414351164
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(3, token0.getTokenType());
      
      xPathLexer0.div();
      xPathLexer0.or();
      xPathLexer0.at();
      Token token1 = xPathLexer0.slashes();
      Token token2 = xPathLexer0.not();
      assertEquals(23, token2.getTokenType());
      
      xPathLexer0.endPosition();
      xPathLexer0.leftParen();
      xPathLexer0.leftParen();
      xPathLexer0.div();
      xPathLexer0.mod();
      Token token3 = xPathLexer0.at();
      assertEquals(16, token3.getTokenType());
      
      xPathLexer0.setPreviousToken(token1);
      assertEquals(11, token1.getTokenType());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(0, int0);
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token4 = xPathLexer1.star();
      assertEquals(20, token4.getTokenType());
      
      Token token5 = xPathLexer0.doubleColon();
      assertEquals(19, token5.getTokenType());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.6520088233982395
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.slashes();
      Token token2 = xPathLexer0.not();
      assertEquals(23, token2.getTokenType());
      
      Token token3 = xPathLexer0.plus();
      assertEquals(5, token3.getTokenType());
      
      xPathLexer0.leftParen();
      Token token4 = xPathLexer0.slashes();
      assertEquals(11, token4.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.rightParen();
      Token token5 = xPathLexer0.nextToken();
      assertEquals((-1), token5.getTokenType());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(0, int0);
      
      Token token6 = xPathLexer0.dollar();
      assertEquals(26, token6.getTokenType());
      
      Token token7 = xPathLexer0.literal();
      assertNull(token7);
      
      char char0 = xPathLexer0.LA(21);
      assertEquals('\uFFFF', char0);
      
      xPathLexer0.leftParen();
      xPathLexer0.comma();
      Token token8 = xPathLexer0.dots();
      assertEquals(13, token8.getTokenType());
      
      Token token9 = xPathLexer0.rightParen();
      assertEquals(2, token9.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token10 = xPathLexer1.identifier();
      assertEquals(15, token10.getTokenType());
      
      Token token11 = xPathLexer1.whitespace();
      assertEquals((-2), token11.getTokenType());
      
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.1717746578773287
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.comma();
      xPathLexer0.identifier();
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.identifier();
      assertEquals(15, token1.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.notEquals();
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.or();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.number();
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(4, token3.getTokenType());
      
      Token token4 = xPathLexer0.dots();
      assertEquals(13, token4.getTokenType());
      
      Token token5 = xPathLexer0.number();
      assertEquals(30, token5.getTokenType());
      
      Token token6 = xPathLexer0.identifierOrOperatorName();
      assertNull(token6);
      
      Token token7 = xPathLexer0.notEquals();
      assertEquals(22, token7.getTokenType());
      
      xPathLexer0.consume(1219);
      xPathLexer0.and();
      xPathLexer0.whitespace();
      Token token8 = xPathLexer0.doubleColon();
      assertEquals(19, token8.getTokenType());
      
      Token token9 = xPathLexer0.star();
      assertEquals(20, token9.getTokenType());
      
      xPathLexer0.mod();
      Token token10 = xPathLexer0.comma();
      assertEquals(32, token10.getTokenType());
      
      xPathLexer0.dollar();
      xPathLexer0.dollar();
      Token token11 = xPathLexer0.rightParen();
      assertEquals(2, token11.getTokenType());
      
      Token token12 = xPathLexer0.dollar();
      assertEquals(26, token12.getTokenType());
      
      Token token13 = xPathLexer0.leftBracket();
      assertEquals(3, token13.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.literal();
      xPathLexer0.leftParen();
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('8');
      assertFalse(boolean0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.8208744760542495
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("equ*XT\"On8D?dDvV[");
      xPathLexer0.slashes();
      xPathLexer0.dots();
      xPathLexer0.minus();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.and();
      xPathLexer0.dollar();
      xPathLexer0.rightBracket();
      xPathLexer1.comma();
      xPathLexer1.identifier();
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer("");
      xPathLexer3.dots();
      xPathLexer3.notEquals();
      xPathLexer1.or();
      xPathLexer3.getPreviousToken();
      xPathLexer3.number();
      xPathLexer2.mod();
      xPathLexer0.leftParen();
      xPathLexer1.colon();
      Token token0 = xPathLexer1.div();
      assertNull(token0);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.3524198522012854
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      String string0 = "k=GB)`){g|\"";
      XPathLexer xPathLexer0 = new XPathLexer("k=GB)`){g|\"");
      xPathLexer0.relationalOperator();
      xPathLexer0.literal();
      xPathLexer0.nextToken();
      xPathLexer0.leftBracket();
      Token token0 = xPathLexer0.colon();
      xPathLexer0.dollar();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.844514148778493
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(";',!");
      xPathLexer0.or();
      xPathLexer0.number();
      Token token0 = xPathLexer0.doubleColon();
      xPathLexer0.notEquals();
      xPathLexer0.equals();
      xPathLexer0.notEquals();
      xPathLexer0.leftParen();
      xPathLexer0.colon();
      xPathLexer0.operatorName();
      xPathLexer0.LA(1);
      xPathLexer0.not();
      xPathLexer0.leftParen();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.nextToken();
      xPathLexer0.rightBracket();
      xPathLexer0.whitespace();
      xPathLexer0.mod();
      xPathLexer0.not();
      xPathLexer0.dots();
      xPathLexer0.div();
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.literal();
      assertNull(token1);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.9958105786238114
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4f(y@*vGC)}),");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.dollar();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      xPathLexer0.setPreviousToken((Token) null);
      xPathLexer0.pipe();
      xPathLexer0.number();
      xPathLexer0.comma();
      XPathLexer xPathLexer1 = new XPathLexer("[ (");
      xPathLexer1.not();
      xPathLexer0.mod();
      xPathLexer0.nextToken();
      xPathLexer1.rightBracket();
      xPathLexer1.whitespace();
      xPathLexer0.mod();
      xPathLexer1.not();
      xPathLexer1.dots();
      xPathLexer0.div();
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.literal();
      assertNull(token1);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.0003254677112468
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\"sOEOh %}2");
      Token token0 = xPathLexer0.dots();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.nextToken();
      token1.toString();
      Token token2 = xPathLexer0.whitespace();
      assertEquals((-2), token2.getTokenType());
      assertEquals("", token2.getTokenText());
      
      token1.toString();
      Token token3 = xPathLexer0.leftParen();
      assertEquals("O", token3.getTokenText());
      assertEquals(1, token3.getTokenType());
      
      String string0 = token0.toString();
      assertEquals("[ (13) (\")", string0);
      
      String string1 = token1.toString();
      assertEquals("[ (-1) (sOEOh %}2)", string1);
      
      xPathLexer0.nextToken();
      xPathLexer0.mod();
      Token token4 = xPathLexer0.not();
      assertEquals(23, token4.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.dots();
      xPathLexer0.div();
      xPathLexer0.operatorName();
      Token token5 = xPathLexer1.literal();
      assertNull(token5);
      
      Token token6 = xPathLexer0.identifier();
      assertEquals("Oh", token6.getTokenText());
      
      Token token7 = xPathLexer1.identifier();
      assertEquals(15, token7.getTokenType());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.6595163674265512
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4f(y@*vGC)}),");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.dollar();
      token0.toString();
      token0.toString();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (26) (4)", string0);
      
      xPathLexer0.setPreviousToken((Token) null);
      Token token1 = xPathLexer0.pipe();
      assertEquals("f", token1.getTokenText());
      
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      
      Token token3 = xPathLexer0.comma();
      assertEquals(32, token3.getTokenType());
      assertEquals("(", token3.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("[ (");
      Token token4 = xPathLexer1.not();
      assertEquals("[", token4.getTokenText());
      assertEquals(23, token4.getTokenType());
      
      xPathLexer0.mod();
      Token token5 = xPathLexer0.nextToken();
      assertEquals("y", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
      
      Token token6 = xPathLexer0.pipe();
      assertEquals(17, token6.getTokenType());
      
      Token token7 = xPathLexer0.nextToken();
      assertEquals("*", token7.getTokenText());
      
      Token token8 = xPathLexer0.star();
      assertEquals(20, token8.getTokenType());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.529678357031607
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.literal();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
  }
}
