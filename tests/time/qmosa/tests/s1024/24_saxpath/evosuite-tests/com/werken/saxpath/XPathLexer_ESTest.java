/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 30 09:39:12 GMT 2020
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.4836531323010221
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Z+!ylRlTLM}");
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.4897087038588192
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Z+!ylRlTLM}");
      xPathLexer0.consume();
      xPathLexer0.rightParen();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.4927983298381057
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Z+!ylRlTLM}");
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      xPathLexer0.pipe();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.7282957205379674
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">Gi:/y vkDw");
      xPathLexer0.nextToken();
      xPathLexer0.comma();
      xPathLexer0.leftParen();
      xPathLexer0.colon();
      xPathLexer0.equals();
      xPathLexer0.not();
      xPathLexer0.leftParen();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.031759218569271
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">Gi:/y vkDw");
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('p');
      assertTrue(boolean0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.identifier();
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4f(y@*vGC)}),");
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      Token token0 = xPathLexer0.plus();
      assertEquals(")", token0.getTokenText());
      
      Token token1 = xPathLexer0.plus();
      assertEquals(5, token1.getTokenType());
      assertEquals(" ", token1.getTokenText());
      
      Token token2 = xPathLexer0.not();
      assertEquals("(", token2.getTokenText());
      assertEquals(23, token2.getTokenType());
      
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      String string0 = xPathLexer0.getXPath();
      assertNull(string0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Z+!ylRlTLM}");
      String string0 = xPathLexer0.getXPath();
      assertEquals("Z+!ylRlTLM}", string0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("");
      String string0 = xPathLexer0.getXPath();
      assertEquals("", string0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.5323407625503742
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">Gi:/y vkDw");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.getPreviousToken();
      assertEquals(9, token0.getTokenType());
      assertEquals(">", token0.getTokenText());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.6019654157279901
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\"sOEOh %}2");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.getPreviousToken();
      assertEquals((-1), token0.getTokenType());
      assertEquals("", token0.getTokenText());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      int int0 = xPathLexer0.endPosition();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">Gi:/y vkDw");
      int int0 = xPathLexer0.endPosition();
      assertEquals(11, int0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\"sOEOh %}2");
      int int0 = xPathLexer0.currentPosition();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume();
      int int0 = xPathLexer0.currentPosition();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      char char0 = xPathLexer0.LA(0);
      assertEquals('c', char0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      xPathLexer0.setPreviousToken((Token) null);
      assertEquals(") (", xPathLexer0.getXPath());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      boolean boolean0 = xPathLexer0.isIdentifierStartChar(':');
      assertFalse(boolean0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4f(y@*vGC)}),");
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('6');
      assertFalse(boolean0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.9502705392332347
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Z+!ylRlTLM}");
      boolean boolean0 = xPathLexer0.isIdentifierChar('!');
      assertFalse(boolean0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      boolean boolean0 = xPathLexer0.isIdentifierChar('7');
      assertTrue(boolean0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.9502705392332347
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      boolean boolean0 = xPathLexer0.isIdentifierChar('A');
      assertTrue(boolean0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("G");
      xPathLexer0.consume(0);
      assertEquals("G", xPathLexer0.getXPath());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      // Undeclared exception!
      try { 
        xPathLexer0.LA(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("k=GB)`){\"");
      char char0 = xPathLexer0.LA(54);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-584));
      // Undeclared exception!
      try { 
        xPathLexer0.slashes();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Z+!ylRlTLM}");
      // Undeclared exception!
      try { 
        xPathLexer0.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.werken.saxpath.XPathLexer", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Z+!ylRlTLM}");
      xPathLexer0.consume((-3449));
      // Undeclared exception!
      try { 
        xPathLexer0.or();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("(lq}S&{:K'5/iQxJ");
      xPathLexer0.consume((-663));
      // Undeclared exception!
      try { 
        xPathLexer0.literal();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.351673301904631
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("iWMSd(Ou2<]YX|U");
      xPathLexer0.consume((-264));
      // Undeclared exception!
      try { 
        xPathLexer0.identifierOrOperatorName();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.2538575896013526
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-3449));
      // Undeclared exception!
      try { 
        xPathLexer0.identifierOrOperatorName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.consume((-615));
      // Undeclared exception!
      try { 
        xPathLexer0.dots();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("com.werken.saxpath.Token");
      xPathLexer0.consume((-256));
      // Undeclared exception!
      try { 
        xPathLexer0.div();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4f(y@*vGC)}),");
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-455));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      XPathLexer xPathLexer0 = null;
      try {
        xPathLexer0 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.werken.saxpath.XPathLexer", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.50437832209605
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("9<!2m-Lb(el.afa");
      Token token0 = xPathLexer0.at();
      assertEquals(16, token0.getTokenType());
      assertEquals("9", token0.getTokenText());
      
      Token token1 = xPathLexer0.leftParen();
      assertEquals("<", token1.getTokenText());
      assertEquals(1, token1.getTokenType());
      
      Token token2 = xPathLexer0.not();
      assertEquals(23, token2.getTokenType());
      assertEquals("!", token2.getTokenText());
      
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token3.getTokenType());
      assertEquals("2m-Lb", token3.getTokenText());
      assertNotNull(token3);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.187977599817239
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">Gi:/y vkDw");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(">", token0.getTokenText());
      assertEquals(9, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("Gi", token1.getTokenText());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals(12, token2.getTokenType());
      assertEquals(":/", token2.getTokenText());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.8310204811135162
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Z+!ylRlTLM}");
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.2067368439362585
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5 @Z}Wn");
      Token token0 = xPathLexer0.number();
      assertEquals("5", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.137808159182962
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("8.hS = /JZ,.xiuZJ");
      Token token0 = xPathLexer0.number();
      assertEquals("8.", token0.getTokenText());
      assertEquals(31, token0.getTokenType());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">Gi:/y vkDw");
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">Gi:/y vkDw");
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">Gi:/y vkDw");
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">Gi:/y vkDw");
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.083377640644436
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.whitespace();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.0791512728828505
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Rg *)i_?OM\"nc;Y");
      xPathLexer0.setXPath("com.werken.saxpath.XPathLexer");
      xPathLexer0.consume();
      xPathLexer0.comma();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.1224275114908304
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("k=GB)`){\"");
      Token token0 = xPathLexer0.comma();
      Token token1 = xPathLexer0.rightParen();
      assertEquals("=", token1.getTokenText());
      assertEquals(2, token1.getTokenType());
      
      xPathLexer0.setPreviousToken(token0);
      assertEquals(32, token0.getTokenType());
      assertEquals("k", token0.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("GB", token2.getTokenText());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.1512246307010938
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("(lq}S&{:K'5/iQxI");
      Token token0 = xPathLexer0.comma();
      assertEquals(32, token0.getTokenType());
      assertEquals("(", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightParen();
      assertEquals("l", token1.getTokenText());
      assertEquals(2, token1.getTokenType());
      
      Token token2 = xPathLexer0.notEquals();
      xPathLexer0.setPreviousToken(token2);
      assertEquals("q}", token2.getTokenText());
      assertEquals(22, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("S", token3.getTokenText());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.4204552241466717
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4f(y@*vGC)}),");
      Token token0 = xPathLexer0.doubleColon();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(19, token0.getTokenType());
      assertEquals("4f", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals("", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.2209493567720209
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Z+!ylRlTLM}");
      xPathLexer0.rightParen();
      xPathLexer0.doubleColon();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.047407004399469
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\"sOEOh %}2");
      Token token0 = xPathLexer0.dots();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(13, token0.getTokenType());
      assertEquals("\"", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("sOEOh %}2", token1.getTokenText());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.0275668525304953
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("[", token0.getTokenText());
      assertEquals(3, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals("", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=0.9345071288432268
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=0.9768208953135659
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("co", token0.getTokenText());
      assertEquals(19, token0.getTokenType());
      
      Token token1 = xPathLexer0.dots();
      assertEquals(14, token1.getTokenType());
      assertEquals("m.", token1.getTokenText());
      
      Token token2 = xPathLexer0.leftBracket();
      assertEquals(3, token2.getTokenType());
      assertEquals("w", token2.getTokenText());
      
      Token token3 = xPathLexer0.minus();
      assertEquals("e", token3.getTokenText());
      assertEquals(6, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("rken.saxpath.XPathLexer", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=0.8725846978719726
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.dots();
      assertEquals("c", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("om.werken.saxpath.XPathLexer", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=0.7810925852737755
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-nWAo1 ;4|-");
      Token token0 = xPathLexer0.pipe();
      assertEquals("-", token0.getTokenText());
      assertEquals(17, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("nWAo1", token1.getTokenText());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=0.9077618896938154
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.dots();
      assertEquals("c", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.minus();
      assertEquals("o", token1.getTokenText());
      assertEquals(6, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("m.werken.saxpath.XPathLexer", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.8895790552461028
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Z+!ylRlTLM}");
      Token token0 = xPathLexer0.rightParen();
      assertEquals(2, token0.getTokenType());
      assertEquals("Z", token0.getTokenText());
      
      Token token1 = xPathLexer0.star();
      assertEquals(20, token1.getTokenType());
      assertEquals("+", token1.getTokenText());
      
      Token token2 = xPathLexer0.pipe();
      assertEquals(17, token2.getTokenType());
      assertEquals("!", token2.getTokenText());
      
      Token token3 = xPathLexer0.colon();
      assertEquals("y", token3.getTokenText());
      assertEquals(18, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("lRlTLM", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=0.7439920825769217
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("k=GB)`){\"");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("k", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.1677770302429065
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">Gi:/y vkDw");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(">", token0.getTokenText());
      assertEquals(9, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftParen();
      assertEquals(1, token1.getTokenType());
      assertEquals("G", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("i", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=0.7810925852737755
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4f(y@*vGC)}),");
      Token token0 = xPathLexer0.pipe();
      assertEquals("4", token0.getTokenText());
      assertEquals(17, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("f", token1.getTokenText());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=0.9425044392057335
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      assertEquals("co", token0.getTokenText());
      
      Token token1 = xPathLexer0.dots();
      assertEquals("m.", token1.getTokenText());
      assertEquals(14, token1.getTokenType());
      
      Token token2 = xPathLexer0.minus();
      assertEquals(6, token2.getTokenType());
      assertEquals("w", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("erken.saxpath.XPathLexer", token3.getTokenText());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=0.8106536471487246
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("com.werken.saxpath.XPathLexer", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=0.6291888683933532
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("k=GB)`){\"");
      Token token0 = xPathLexer0.comma();
      assertEquals(32, token0.getTokenType());
      assertEquals("k", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightParen();
      assertEquals("=", token1.getTokenText());
      assertEquals(2, token1.getTokenType());
      
      Token token2 = xPathLexer0.dots();
      assertEquals("G", token2.getTokenText());
      assertEquals(13, token2.getTokenType());
      
      Token token3 = xPathLexer0.notEquals();
      assertEquals(22, token3.getTokenType());
      assertEquals("B)", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals((-1), token4.getTokenType());
      assertEquals("`){\"", token4.getTokenText());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=0.7164516354046382
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("_;%*>s{gFng{c<5");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("_", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=0.9248342910553471
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Z+!ylRlTLM}");
      Token token0 = xPathLexer0.star();
      assertEquals("Z", token0.getTokenText());
      assertEquals(20, token0.getTokenType());
      
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(19, token1.getTokenType());
      assertEquals("+!", token1.getTokenText());
      
      Token token2 = xPathLexer0.pipe();
      assertEquals(17, token2.getTokenType());
      assertEquals("y", token2.getTokenText());
      
      Token token3 = xPathLexer0.notEquals();
      assertEquals("lR", token3.getTokenText());
      assertEquals(22, token3.getTokenType());
      
      Token token4 = xPathLexer0.colon();
      assertEquals(18, token4.getTokenType());
      assertEquals("l", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("TLM", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=0.9454405568232104
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\"sOEOh %}2");
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("\"", token0.getTokenText());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("OEOh", token2.getTokenText());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=0.9596511408552356
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Z+!ylRlTLM}");
      Token token0 = xPathLexer0.rightParen();
      assertEquals(2, token0.getTokenType());
      assertEquals("Z", token0.getTokenText());
      
      Token token1 = xPathLexer0.star();
      assertEquals("+", token1.getTokenText());
      assertEquals(20, token1.getTokenType());
      
      Token token2 = xPathLexer0.doubleColon();
      assertEquals(19, token2.getTokenType());
      assertEquals("!y", token2.getTokenText());
      
      Token token3 = xPathLexer0.pipe();
      assertEquals(17, token3.getTokenType());
      
      Token token4 = xPathLexer0.notEquals();
      assertEquals("Rl", token4.getTokenText());
      assertEquals(22, token4.getTokenType());
      
      Token token5 = xPathLexer0.colon();
      assertEquals(18, token5.getTokenType());
      assertEquals("T", token5.getTokenText());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals(15, token6.getTokenType());
      assertEquals("LM", token6.getTokenText());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=0.938920547810086
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("k=GB)`){\"");
      Token token0 = xPathLexer0.comma();
      assertEquals("k", token0.getTokenText());
      assertEquals(32, token0.getTokenType());
      
      Token token1 = xPathLexer0.rightParen();
      assertEquals("=", token1.getTokenText());
      assertEquals(2, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("GB", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.literal();
      assertNotNull(token3);
      assertEquals("`", token3.getTokenText());
      assertEquals(27, token3.getTokenType());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=0.9454405568232104
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\"sOEOh %}2");
      Token token0 = xPathLexer0.dots();
      assertEquals("\"", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      xPathLexer0.whitespace();
      Token token1 = xPathLexer0.whitespace();
      assertEquals("", token1.getTokenText());
      assertEquals((-2), token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("EOh", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.0465431047398406
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4f(y@*vGC)}),");
      Token token0 = xPathLexer0.slashes();
      assertEquals("4", token0.getTokenText());
      assertEquals(11, token0.getTokenType());
      
      Token token1 = xPathLexer0.doubleColon();
      assertEquals("f(", token1.getTokenText());
      assertEquals(19, token1.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      Token token2 = xPathLexer0.not();
      assertEquals(23, token2.getTokenType());
      assertEquals("@", token2.getTokenText());
      
      Token token3 = xPathLexer0.notEquals();
      assertEquals("*v", token3.getTokenText());
      assertEquals(22, token3.getTokenType());
      
      Token token4 = xPathLexer0.whitespace();
      assertEquals((-2), token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(15, token5.getTokenType());
      assertEquals("C", token5.getTokenText());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=0.8177174986975012
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("k=GB)`){\"");
      Token token0 = xPathLexer0.rightParen();
      assertEquals(2, token0.getTokenType());
      assertEquals("k", token0.getTokenText());
      
      Token token1 = xPathLexer0.doubleColon();
      assertEquals("=G", token1.getTokenText());
      assertEquals(19, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("B", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.1586721183720834
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4f(y@*vGC)}),");
      Token token0 = xPathLexer0.slashes();
      assertEquals("4", token0.getTokenText());
      assertEquals(11, token0.getTokenType());
      
      xPathLexer0.not();
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      assertEquals("(", token1.getTokenText());
      
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      assertEquals("y", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(16, token3.getTokenType());
      assertEquals("@", token3.getTokenText());
      
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertEquals("", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=0.4511636006386335
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("k=GB)`){\"");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals("k", token0.getTokenText());
      assertEquals(3, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(21, token1.getTokenType());
      assertEquals("=", token1.getTokenText());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=0.7486157063094812
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")`8m\";7pdSO*Wh{ f`<");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(")", token0.getTokenText());
      assertEquals(4, token0.getTokenType());
      
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      assertEquals("`", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(30, token2.getTokenType());
      assertEquals("8", token2.getTokenText());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.1801158826288314
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("6");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.3335388265039958
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4f(y@*vGC)}),");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("4", token0.getTokenText());
      
      xPathLexer0.not();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(1, token1.getTokenType());
      assertEquals("(", token1.getTokenText());
      
      Token token2 = xPathLexer0.not();
      assertEquals("y", token2.getTokenText());
      assertEquals(23, token2.getTokenType());
      
      Token token3 = xPathLexer0.dots();
      assertEquals("@", token3.getTokenText());
      assertEquals(13, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(20, token4.getTokenType());
      assertEquals("*", token4.getTokenText());
      
      Token token5 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token5.getTokenType());
      assertEquals("vGC", token5.getTokenText());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.1987556751841328
  */
  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Z+!ylRlTLM}");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("+", token0.getTokenText());
      assertEquals(5, token0.getTokenType());
      
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(19, token1.getTokenType());
      assertEquals("!y", token1.getTokenText());
      
      Token token2 = xPathLexer0.pipe();
      assertEquals("l", token2.getTokenText());
      assertEquals(17, token2.getTokenType());
      
      xPathLexer0.consume();
      Token token3 = xPathLexer0.notEquals();
      assertEquals(22, token3.getTokenType());
      assertEquals("lT", token3.getTokenText());
      
      Token token4 = xPathLexer0.colon();
      assertEquals(18, token4.getTokenType());
      assertEquals("L", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("M", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=0.9010123671394462
  */
  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Rg *)i_?OM\"nc;Y");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("Rg", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(20, token1.getTokenType());
      assertEquals("*", token1.getTokenText());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=0.9771833658354496
  */
  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 84
  /*Coverage entropy=0.6473442249981198
  */
  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (9) (>)");
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      assertEquals("", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(1, token1.getTokenType());
      assertEquals("(", token1.getTokenText());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=0.6001882813317664
  */
  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("(lq}S&{:K'5/iQxJ");
      Token token0 = xPathLexer0.star();
      assertEquals(20, token0.getTokenType());
      assertEquals("(", token0.getTokenText());
      
      Token token1 = xPathLexer0.comma();
      assertEquals("l", token1.getTokenText());
      assertEquals(32, token1.getTokenType());
      
      Token token2 = xPathLexer0.rightParen();
      assertEquals("q", token2.getTokenText());
      assertEquals(2, token2.getTokenType());
      
      Token token3 = xPathLexer0.notEquals();
      assertEquals("}S", token3.getTokenText());
      assertEquals(22, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("&{:K'5/iQxJ", token4.getTokenText());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=0.9020819467299719
  */
  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("0?\"NG%Q");
      Token token0 = xPathLexer0.number();
      assertEquals("0", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      assertEquals("?", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
      assertEquals("", token2.getTokenText());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.0037839868563472
  */
  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Z+!ylRlTLM}");
      xPathLexer0.consume();
      xPathLexer0.rightParen();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.2324016880996873
  */
  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\"sOEOh %}2");
      Token token0 = xPathLexer0.dots();
      assertEquals("\"", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
      assertEquals("sOEOh", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
      
      Token token3 = xPathLexer0.comma();
      assertEquals(32, token3.getTokenType());
      assertEquals("%", token3.getTokenText());
      
      Token token4 = xPathLexer0.not();
      assertEquals("}", token4.getTokenText());
      assertEquals(23, token4.getTokenType());
      
      Token token5 = xPathLexer0.number();
      assertEquals(30, token5.getTokenType());
      assertEquals("2", token5.getTokenText());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume(1);
      assertNull(xPathLexer0.getXPath());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=0.6014718389526734
  */
  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">Gi:/y vkDw");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(9, token0.getTokenType());
      assertEquals(">", token0.getTokenText());
      
      Token token1 = xPathLexer0.comma();
      assertEquals("G", token1.getTokenText());
      assertEquals(32, token1.getTokenType());
      
      Token token2 = xPathLexer0.leftParen();
      assertEquals("i", token2.getTokenText());
      assertEquals(1, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(":", token3.getTokenText());
      assertEquals(18, token3.getTokenType());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">Gi:/y vkDw");
      Token token0 = xPathLexer0.dollar();
      assertEquals(">", token0.getTokenText());
      assertEquals(26, token0.getTokenType());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">Gi:/y vkDw");
      Token token0 = xPathLexer0.getPreviousToken();
      assertNull(token0);
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.4204552241466717
  */
  @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Z+!ylRlTLM}");
      Token token0 = xPathLexer0.pipe();
      xPathLexer0.setPreviousToken(token0);
      assertEquals("Z", token0.getTokenText());
      assertEquals(17, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals("", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }
}
