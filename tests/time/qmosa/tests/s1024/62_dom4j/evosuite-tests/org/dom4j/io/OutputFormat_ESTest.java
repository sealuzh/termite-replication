/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 08:15:35 GMT 2019
 */

package org.dom4j.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.dom4j.io.OutputFormat;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class OutputFormat_ESTest extends OutputFormat_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.5496656600614331
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-xhtml!6zN<4Ld^oo5V", false);
      outputFormat0.setIndent(true);
      outputFormat0.setIndent("-expandEmpty");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "XWax/^Wf 7+28";
      outputFormat0.parseOptions(stringArray0, 0);
      String[] stringArray1 = new String[4];
      stringArray1[0] = "-xhtml!6zN<4Ld^oo5V";
      stringArray1[1] = "-indent";
      stringArray1[2] = "-xhtml!6zN<4Ld^oo5V";
      stringArray1[3] = "CFs;_&ucZd@]@";
      outputFormat0.parseOptions(stringArray1, 0);
      outputFormat0.getLineSeparator();
      assertEquals("-xhtml!6zN<4Ld^oo5V", outputFormat0.getIndent());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.359179909943633
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat(":I`+^Y1L*dIx|HP7");
      outputFormat0.setIndent(":I`+^Y1L*dIx|HP7");
      assertFalse(outputFormat0.isOmitEncoding());
      
      OutputFormat.createCompactFormat();
      OutputFormat.createPrettyPrint();
      OutputFormat.createCompactFormat();
      OutputFormat.createCompactFormat();
      String[] stringArray0 = new String[17];
      stringArray0[0] = ":I`+^Y1L*dIx|HP7";
      stringArray0[1] = "-omitEncoding";
      stringArray0[2] = ":I`+^Y1L*dIx|HP7";
      stringArray0[3] = " Ng~T{zeu_^*fL";
      stringArray0[4] = "-omitEncoding";
      int int0 = outputFormat0.parseOptions(stringArray0, 1);
      assertTrue(outputFormat0.isOmitEncoding());
      assertEquals(2, int0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.376742981833967
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setXHTML(true);
      outputFormat0.setPadText(true);
      outputFormat0.setNewlines(true);
      outputFormat0.isExpandEmptyElements();
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.setPadText(true);
      char char0 = ' ';
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter(' ');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character ( )
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.6699134869638135
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      String[] stringArray0 = new String[16];
      stringArray0[0] = "XWax/^f 7+28";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.isSuppressDeclaration();
      outputFormat0.setIndent(false);
      outputFormat0.setIndent("XWax/^f 7+28");
      OutputFormat outputFormat2 = new OutputFormat();
      outputFormat2.isOmitEncoding();
      outputFormat1.setSuppressDeclaration(false);
      outputFormat1.setTrimText(false);
      OutputFormat outputFormat3 = new OutputFormat("yG", true, "yG");
      outputFormat3.setExpandEmptyElements(false);
      outputFormat3.setTrimText(false);
      outputFormat2.setOmitEncoding(true);
      outputFormat1.setOmitEncoding(false);
      outputFormat0.setOmitEncoding(false);
      outputFormat2.setIndentSize((-550));
      OutputFormat outputFormat4 = OutputFormat.createPrettyPrint();
      assertTrue(outputFormat4.isTrimText());
      
      outputFormat4.setTrimText(false);
      outputFormat0.setIndent("");
      outputFormat2.isOmitEncoding();
      assertEquals(0, outputFormat2.getNewLineAfterNTags());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.0787692411134904
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setTrimText(false);
      String[] stringArray0 = new String[1];
      outputFormat0.setIndent("-expandEmpty");
      OutputFormat.createCompactFormat();
      OutputFormat.createCompactFormat();
      OutputFormat outputFormat2 = new OutputFormat("-indentSize", true, "");
      outputFormat2.setIndent(true);
      outputFormat1.parseOptions(stringArray0, 88);
      OutputFormat outputFormat3 = new OutputFormat("  ");
      outputFormat3.isOmitEncoding();
      outputFormat1.setAttributeQuoteCharacter('\'');
      assertEquals('\'', outputFormat1.getAttributeQuoteCharacter());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.834057744295917
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      OutputFormat.createPrettyPrint();
      outputFormat0.setIndent("");
      OutputFormat.createCompactFormat();
      OutputFormat.createPrettyPrint();
      OutputFormat.createCompactFormat();
      OutputFormat.createCompactFormat();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "-DxpanQEmptyey5=[~8yAW,'9m";
      stringArray0[1] = "";
      outputFormat0.setAttributeQuoteCharacter('\"');
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "-DxpanQEmptyey5=[~8yAW,'9m";
      stringArray0[5] = "-DxpanQEmptyey5=[~8yAW,'9m";
      stringArray0[6] = "-DxpanQEmptyey5=[~8yAW,'9m";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1801340952));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1801340952
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.152029243580368
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      OutputFormat.createCompactFormat();
      OutputFormat.createCompactFormat();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      OutputFormat.createCompactFormat();
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      assertFalse(outputFormat2.isNewlines());
      
      OutputFormat outputFormat3 = OutputFormat.createCompactFormat();
      outputFormat3.setIndent(true);
      outputFormat0.setNewlines(false);
      outputFormat1.setIndent(true);
      OutputFormat.createCompactFormat();
      outputFormat2.setNewlines(true);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-trimText";
      stringArray0[1] = "-trimText";
      stringArray0[2] = "-trimText";
      outputFormat0.parseOptions(stringArray0, 0);
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat4 = OutputFormat.createCompactFormat();
      assertFalse(outputFormat4.isSuppressDeclaration());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.2193165293390864
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.getEncoding();
      outputFormat0.setIndent(true);
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setNewlines(true);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "-trimText";
      stringArray0[1] = "-encoding";
      stringArray0[2] = "-xhtml";
      stringArray0[3] = "]\\vy'{W!bGI]k6kP";
      outputFormat1.parseOptions(stringArray0, 0);
      assertEquals("-xhtml", outputFormat1.getEncoding());
      
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      assertEquals('\"', outputFormat2.getAttributeQuoteCharacter());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.011451284335643
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setTrimText(false);
      String[] stringArray0 = new String[1];
      outputFormat0.setIndent("-expandEmpty");
      stringArray0[0] = "XWax/^Wf 7+28";
      outputFormat0.parseOptions(stringArray0, 0);
      String[] stringArray1 = new String[9];
      stringArray1[0] = "-newlines";
      stringArray1[1] = "_{Ns;U";
      String[] stringArray2 = new String[7];
      stringArray2[0] = "-expandEmpty";
      stringArray2[1] = "zGq0Qd7'";
      stringArray2[2] = "-expandEmpty";
      stringArray2[3] = "_{Ns;U";
      stringArray2[4] = "-expandEmpty";
      stringArray2[5] = "zGq0Qd7'";
      stringArray2[6] = "-newlines";
      outputFormat1.parseOptions(stringArray2, 0);
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat1.parseOptions(stringArray1, 0);
      assertFalse(outputFormat1.isTrimText());
      
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      assertEquals('\"', outputFormat2.getAttributeQuoteCharacter());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.763393936425376
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      assertTrue(outputFormat1.isNewlines());
      assertTrue(outputFormat1.isPadText());
      assertEquals("  ", outputFormat1.getIndent());
      assertTrue(outputFormat1.isTrimText());
      
      outputFormat0.setIndent((String) null);
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isNewlines());
      
      OutputFormat.createCompactFormat();
      OutputFormat outputFormat2 = new OutputFormat((String) null);
      assertEquals(0, outputFormat2.getNewLineAfterNTags());
      assertEquals("\n", outputFormat2.getLineSeparator());
      assertFalse(outputFormat2.isPadText());
      assertFalse(outputFormat2.isXHTML());
      assertEquals("UTF-8", outputFormat2.getEncoding());
      assertFalse(outputFormat2.isTrimText());
      assertFalse(outputFormat2.isSuppressDeclaration());
      assertTrue(outputFormat2.isNewLineAfterDeclaration());
      assertFalse(outputFormat2.isExpandEmptyElements());
      assertFalse(outputFormat2.isOmitEncoding());
      assertFalse(outputFormat2.isNewlines());
      assertEquals('\"', outputFormat2.getAttributeQuoteCharacter());
      
      OutputFormat.createCompactFormat();
      OutputFormat.createCompactFormat();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "-DxpanQEmptyey5=[~8yAW,'9m";
      OutputFormat outputFormat3 = OutputFormat.createCompactFormat();
      assertFalse(outputFormat3.isNewlines());
      assertEquals(0, outputFormat3.getNewLineAfterNTags());
      assertTrue(outputFormat3.isTrimText());
      assertFalse(outputFormat3.isExpandEmptyElements());
      assertFalse(outputFormat3.isSuppressDeclaration());
      assertFalse(outputFormat3.isOmitEncoding());
      assertEquals('\"', outputFormat3.getAttributeQuoteCharacter());
      assertEquals("UTF-8", outputFormat3.getEncoding());
      assertFalse(outputFormat3.isPadText());
      assertFalse(outputFormat3.isXHTML());
      assertTrue(outputFormat3.isNewLineAfterDeclaration());
      assertEquals("\n", outputFormat3.getLineSeparator());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.3876362280213312
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      String[] stringArray0 = new String[1];
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.4973043486407955
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setEncoding("nTEv`Wb");
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.setTrimText(true);
      outputFormat0.setEncoding((String) null);
      outputFormat0.setXHTML(true);
      outputFormat0.setIndent("");
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setTrimText(true);
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setPadText(true);
      outputFormat0.setEncoding(":");
      outputFormat0.isXHTML();
      outputFormat0.setXHTML(true);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.isTrimText();
      outputFormat0.setIndent(true);
      outputFormat0.setXHTML(true);
      outputFormat0.isOmitEncoding();
      outputFormat0.setEncoding("(qO-");
      outputFormat0.isXHTML();
      outputFormat0.isOmitEncoding();
      outputFormat0.isExpandEmptyElements();
      outputFormat0.isPadText();
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.setPadText(false);
      outputFormat0.setNewLineAfterNTags((-419));
      assertEquals("(qO-", outputFormat0.getEncoding());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.62726916212545
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "XWax/^Wf 7+28";
      outputFormat1.parseOptions(stringArray0, 0);
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.isSuppressDeclaration();
      outputFormat0.setIndent(false);
      outputFormat1.setSuppressDeclaration(true);
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat1.setIndent(false);
      outputFormat0.setLineSeparator("");
      outputFormat1.parseOptions(stringArray0, 0);
      outputFormat1.isNewLineAfterDeclaration();
      outputFormat1.isXHTML();
      assertTrue(outputFormat1.isSuppressDeclaration());
      
      boolean boolean0 = outputFormat0.isExpandEmptyElements();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.4575530066893423
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.getLineSeparator();
      outputFormat0.setLineSeparator("\n");
      outputFormat0.setLineSeparator("\n");
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setXHTML(true);
      outputFormat0.setIndent("{=K#`");
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setSuppressDeclaration(true);
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat0.isXHTML();
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      outputFormat0.setNewLineAfterNTags(1760);
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.setSuppressDeclaration(true);
      outputFormat1.setNewLineAfterNTags(1760);
      outputFormat1.isOmitEncoding();
      outputFormat0.isSuppressDeclaration();
      outputFormat0.setOmitEncoding(true);
      outputFormat1.getAttributeQuoteCharacter();
      outputFormat0.isSuppressDeclaration();
      outputFormat1.setIndent("-expandEmpty-xhtml");
      assertEquals("-expandEmpty-xhtml", outputFormat1.getIndent());
      
      String string0 = outputFormat2.getEncoding();
      assertEquals("UTF-8", string0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.4211543976032597
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true, "");
      outputFormat0.setIndentSize(0);
      outputFormat0.setTrimText(true);
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setPadText(true);
      outputFormat0.setXHTML(true);
      outputFormat0.setTrimText(true);
      outputFormat0.isExpandEmptyElements();
      outputFormat0.getIndent();
      outputFormat0.getLineSeparator();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat0.getEncoding();
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      outputFormat2.setNewlines(true);
      outputFormat2.setXHTML(true);
      OutputFormat outputFormat3 = OutputFormat.createCompactFormat();
      outputFormat3.setOmitEncoding(true);
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat0.setIndent(false);
      outputFormat1.setNewlines(false);
      outputFormat3.setSuppressDeclaration(false);
      outputFormat1.setSuppressDeclaration(true);
      OutputFormat.createPrettyPrint();
      outputFormat1.setSuppressDeclaration(false);
      outputFormat1.setNewLineAfterDeclaration(true);
      outputFormat3.setXHTML(true);
      outputFormat1.setNewlines(false);
      assertFalse(outputFormat1.isSuppressDeclaration());
      
      boolean boolean0 = outputFormat0.isPadText();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.384415616105067
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      String string0 = "";
      String string1 = "P+_:h[7TS(";
      OutputFormat outputFormat0 = new OutputFormat("", true, "P+_:h[7TS(");
      outputFormat0.setIndent(true);
      outputFormat0.setIndentSize((-1743));
      outputFormat0.setPadText(false);
      outputFormat0.setEncoding("P+_:h[7TS(");
      outputFormat0.getIndent();
      boolean boolean0 = true;
      outputFormat0.setPadText(true);
      outputFormat0.setEncoding("");
      outputFormat0.setIndentSize((-1743));
      outputFormat0.setIndent(true);
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('K');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (K)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.763393936425376
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setNewLineAfterDeclaration(false);
      OutputFormat.createCompactFormat();
      OutputFormat.createCompactFormat();
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      OutputFormat.createCompactFormat();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "XWax/^Wm 7+2i8";
      stringArray0[1] = "XWax/^Wm 7+2i8";
      stringArray0[2] = "XWax/^Wm 7+2i8";
      stringArray0[3] = "XWax/^Wm 7+2i8";
      stringArray0[4] = "XWax/^Wm 7+2i8";
      stringArray0[5] = "XWax/^Wm 7+2i8";
      stringArray0[6] = "XWax/^Wm 7+2i8";
      stringArray0[7] = "XWax/^Wm 7+2i8";
      stringArray0[8] = "XWax/^Wm 7+2i8";
      // Undeclared exception!
      try { 
        outputFormat1.parseOptions(stringArray0, (-1971401883));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1971401883
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.658019409981987
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setIndent("");
      outputFormat1.setNewLineAfterNTags((-1));
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.getIndent();
      outputFormat0.setLineSeparator("");
      outputFormat0.setNewLineAfterDeclaration(true);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[1] = "  ";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "  ";
      stringArray0[5] = "";
      stringArray0[6] = "";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.getEncoding();
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.setPadText(true);
      int int0 = outputFormat1.getNewLineAfterNTags();
      assertEquals((-1), int0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.176511362405637
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("|&SfOt$@", true);
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat0.setExpandEmptyElements(true);
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      outputFormat1.setNewLineAfterNTags((-1309));
      outputFormat0.setIndentSize((-1309));
      outputFormat0.setIndentSize((-1141));
      outputFormat0.setIndentSize((-1));
      outputFormat1.isSuppressDeclaration();
      outputFormat2.setTrimText(false);
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.isNewlines();
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat1.setNewLineAfterNTags(0);
      outputFormat2.isSuppressDeclaration();
      outputFormat2.setSuppressDeclaration(false);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "|&SfOt$@";
      stringArray0[1] = "|&SfOt$@";
      stringArray0[2] = "|&SfOt$@";
      stringArray0[3] = "|&SfOt$@";
      stringArray0[4] = "|&SfOt$@";
      stringArray0[5] = "|&SfOt$@";
      stringArray0[6] = "|&SfOt$@";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1387));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1387
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null, true);
      outputFormat0.setIndent(false);
      outputFormat0.setIndentSize((-2017));
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isXHTML());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isPadText());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isTrimText());
      assertTrue(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isOmitEncoding());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.114355452291088
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "XWax/fWf 7+28";
      outputFormat0.setEncoding((String) null);
      outputFormat0.setTrimText(false);
      outputFormat0.parseOptions(stringArray0, 0);
      assertFalse(outputFormat0.isTrimText());
      
      outputFormat1.parseOptions(stringArray0, 2109);
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      assertEquals("  ", outputFormat2.getIndent());
      assertTrue(outputFormat2.isPadText());
      assertTrue(outputFormat2.isNewlines());
      assertTrue(outputFormat2.isTrimText());
      
      OutputFormat outputFormat3 = OutputFormat.createCompactFormat();
      assertFalse(outputFormat3.isXHTML());
      assertFalse(outputFormat3.isExpandEmptyElements());
      assertTrue(outputFormat3.isTrimText());
      assertFalse(outputFormat3.isSuppressDeclaration());
      assertEquals('\"', outputFormat3.getAttributeQuoteCharacter());
      assertEquals(0, outputFormat3.getNewLineAfterNTags());
      assertEquals("UTF-8", outputFormat3.getEncoding());
      assertFalse(outputFormat3.isPadText());
      assertFalse(outputFormat3.isOmitEncoding());
      assertTrue(outputFormat3.isNewLineAfterDeclaration());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.520566386740246
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", false);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      outputFormat0.setIndent(false);
      outputFormat0.parseOptions(stringArray0, 1406);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.isNewLineAfterDeclaration();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setNewLineAfterNTags(276);
      outputFormat0.setPadText(true);
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      outputFormat2.setLineSeparator("");
      OutputFormat.createCompactFormat();
      outputFormat2.setSuppressDeclaration(true);
      outputFormat1.getNewLineAfterNTags();
      outputFormat2.setEncoding("");
      outputFormat2.isSuppressDeclaration();
      outputFormat1.isPadText();
      outputFormat1.setTrimText(true);
      outputFormat1.getEncoding();
      assertEquals(276, outputFormat1.getNewLineAfterNTags());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.288709335374666
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setXHTML(true);
      outputFormat1.setIndent("");
      outputFormat1.setNewLineAfterNTags((-1));
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.getIndent();
      outputFormat0.setLineSeparator("");
      outputFormat0.setNewLineAfterDeclaration(false);
      String[] stringArray0 = new String[0];
      outputFormat1.setNewLineAfterNTags(2147483645);
      outputFormat0.parseOptions(stringArray0, 4624);
      outputFormat1.isNewLineAfterDeclaration();
      outputFormat0.isXHTML();
      outputFormat1.isExpandEmptyElements();
      assertEquals(2147483645, outputFormat1.getNewLineAfterNTags());
      
      String string0 = outputFormat0.getLineSeparator();
      assertEquals("", string0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("5kJ[+hGyI[o5tO6", false);
      boolean boolean0 = outputFormat0.isPadText();
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isXHTML());
      assertFalse(boolean0);
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isOmitEncoding());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isTrimText());
      assertEquals("5kJ[+hGyI[o5tO6", outputFormat0.getIndent());
      assertFalse(outputFormat0.isNewlines());
      assertEquals("\n", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.3990880518223046
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      String[] stringArray0 = new String[1];
      String string0 = "XWax/^f 7+28";
      stringArray0[0] = "XWax/^f 7+28";
      outputFormat1.setIndent(false);
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.isSuppressDeclaration();
      String string1 = "";
      outputFormat0.setIndent(false);
      boolean boolean0 = false;
      outputFormat1.setSuppressDeclaration(true);
      outputFormat0.setNewLineAfterNTags(0);
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('U');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (U)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.123404041320771
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      OutputFormat outputFormat3 = OutputFormat.createPrettyPrint();
      outputFormat3.setNewLineAfterDeclaration(false);
      outputFormat2.setIndent("");
      outputFormat3.setIndent("p107bn2HM_xLUh");
      outputFormat2.setLineSeparator("");
      OutputFormat outputFormat4 = OutputFormat.createCompactFormat();
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat4.isNewlines();
      outputFormat0.setTrimText(true);
      outputFormat1.setNewLineAfterDeclaration(false);
      outputFormat3.setNewLineAfterDeclaration(true);
      assertTrue(outputFormat3.isNewLineAfterDeclaration());
      
      outputFormat4.setIndent("");
      outputFormat4.setNewLineAfterDeclaration(false);
      outputFormat4.setSuppressDeclaration(false);
      assertEquals('\"', outputFormat4.getAttributeQuoteCharacter());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.6577828173758835
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isNewlines());
      
      OutputFormat.createPrettyPrint();
      OutputFormat.createCompactFormat();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      OutputFormat.createCompactFormat();
      OutputFormat.createCompactFormat();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "?<4xL(#k";
      stringArray0[1] = "-expandEmptyey5=[~8yAW,'9m";
      stringArray0[2] = "?<4xL(#k";
      int int0 = outputFormat1.getNewLineAfterNTags();
      assertEquals(0, int0);
      
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      assertEquals("  ", outputFormat2.getIndent());
      assertTrue(outputFormat2.isTrimText());
      assertTrue(outputFormat2.isNewlines());
      assertTrue(outputFormat2.isPadText());
      
      OutputFormat outputFormat3 = OutputFormat.createCompactFormat();
      assertFalse(outputFormat3.isNewlines());
      assertFalse(outputFormat3.isPadText());
      assertEquals("UTF-8", outputFormat3.getEncoding());
      assertFalse(outputFormat3.isSuppressDeclaration());
      assertFalse(outputFormat3.isOmitEncoding());
      assertFalse(outputFormat3.isExpandEmptyElements());
      assertTrue(outputFormat3.isTrimText());
      assertFalse(outputFormat3.isXHTML());
      assertEquals('\"', outputFormat3.getAttributeQuoteCharacter());
      assertTrue(outputFormat3.isNewLineAfterDeclaration());
      assertEquals("\n", outputFormat3.getLineSeparator());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.609063925123211
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-xhtml", false, "-xhtml");
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.setOmitEncoding(false);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "-xhtml";
      stringArray0[1] = "-xhtml";
      stringArray0[2] = "-xhtml";
      stringArray0[3] = "I*";
      stringArray0[4] = "I*";
      stringArray0[5] = "I*";
      stringArray0[6] = "I*";
      stringArray0[7] = "I*";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setIndent(false);
      outputFormat0.setEncoding("I*");
      outputFormat0.getIndent();
      outputFormat0.setXHTML(true);
      outputFormat0.setIndent(true);
      OutputFormat.createPrettyPrint();
      outputFormat0.isTrimText();
      assertEquals("I*", outputFormat0.getEncoding());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.6733445970662721
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-xhtml", false, "-xhtml");
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.setOmitEncoding(false);
      assertFalse(outputFormat0.isXHTML());
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = "-xhtml";
      stringArray0[1] = "-xhtml";
      stringArray0[2] = "-xhtml";
      stringArray0[3] = "-xhtml";
      stringArray0[4] = "-xhtml";
      stringArray0[5] = "-xhtml";
      stringArray0[6] = "-xhtml";
      stringArray0[7] = "-xhtml";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setEncoding("-xhtml");
      outputFormat0.getIndent();
      outputFormat0.setXHTML(true);
      assertTrue(outputFormat0.isXHTML());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("O?", true, "-omitEncoding");
      String string0 = outputFormat0.getEncoding();
      assertFalse(outputFormat0.isPadText());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isOmitEncoding());
      assertEquals("O?", outputFormat0.getIndent());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertEquals("-omitEncoding", string0);
      assertFalse(outputFormat0.isXHTML());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertTrue(outputFormat0.isNewlines());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.6439556568820564
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      OutputFormat.createCompactFormat();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "g8[(-p`1rqq!,w`r";
      stringArray0[1] = "&98afC5>*";
      stringArray0[2] = "I*";
      stringArray0[3] = "Invalid attribute quote character (";
      stringArray0[4] = "-M[4/={~77a5bu";
      stringArray0[5] = "SD3%wg";
      stringArray0[6] = "1WBQ{";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.5115925435891486
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-xhtml!6zN<4Ld^oo5V", false);
      assertFalse(outputFormat0.isXHTML());
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-xhtml!6zN<4Ld^oo5V";
      stringArray0[1] = "-xhtml!6zN<4Ld^oo5V";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.parseOptions(stringArray0, 4097);
      OutputFormat outputFormat1 = new OutputFormat("-xhtml!6zN<4Ld^oo5V");
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.parseOptions(stringArray0, 2);
      outputFormat0.getLineSeparator();
      assertTrue(outputFormat0.isXHTML());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.7481104631645707
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setIndent("-xhtml");
      OutputFormat.createPrettyPrint();
      OutputFormat.createCompactFormat();
      OutputFormat.createCompactFormat();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      outputFormat0.setIndent("*");
      outputFormat0.setXHTML(false);
      assertEquals("*", outputFormat0.getIndent());
      
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      assertEquals('\"', outputFormat1.getAttributeQuoteCharacter());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null, false);
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('a');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (a)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.3102720537919934
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat(":I`+^Y1L*dIx|HP7");
      assertEquals(":I`+^Y1L*dIx|HP7", outputFormat0.getIndent());
      
      outputFormat0.setIndent(":I`+^Y1L*dIx|HP7");
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      String[] stringArray0 = new String[4];
      stringArray0[0] = ":I`+^Y1L*dIx|HP7";
      stringArray0[1] = ":I`+^Y1L*dIx|HP7";
      stringArray0[2] = ":I`+^Y1L*dIx|HP7";
      stringArray0[3] = ":I`+^Y1L*dIx|HP7";
      outputFormat1.parseOptions(stringArray0, 2);
      outputFormat0.setIndentSize(1288);
      assertFalse(outputFormat0.isPadText());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isNewlines());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isXHTML());
      
      OutputFormat.createCompactFormat();
      String[] stringArray1 = new String[2];
      stringArray1[0] = "ey5=[~8yAW,'9m";
      stringArray1[1] = ":I`+^Y1L*dIx|HP7";
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      assertTrue(outputFormat2.isPadText());
      assertTrue(outputFormat2.isNewlines());
      assertEquals("  ", outputFormat2.getIndent());
      
      OutputFormat outputFormat3 = OutputFormat.createCompactFormat();
      assertEquals('\"', outputFormat3.getAttributeQuoteCharacter());
      assertFalse(outputFormat3.isXHTML());
      assertFalse(outputFormat3.isExpandEmptyElements());
      assertTrue(outputFormat3.isTrimText());
      assertFalse(outputFormat3.isSuppressDeclaration());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.6398176562092117
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isNewlines());
      
      OutputFormat.createCompactFormat();
      OutputFormat.createCompactFormat();
      OutputFormat.createPrettyPrint();
      OutputFormat.createCompactFormat();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setIndent(false);
      outputFormat1.setIndent(true);
      assertEquals("  ", outputFormat1.getIndent());
      
      OutputFormat outputFormat2 = new OutputFormat("?<4xL(#k");
      assertEquals('\"', outputFormat2.getAttributeQuoteCharacter());
      assertFalse(outputFormat2.isPadText());
      assertEquals(0, outputFormat2.getNewLineAfterNTags());
      assertFalse(outputFormat2.isOmitEncoding());
      assertEquals("UTF-8", outputFormat2.getEncoding());
      assertFalse(outputFormat2.isTrimText());
      assertTrue(outputFormat2.isNewLineAfterDeclaration());
      assertFalse(outputFormat2.isExpandEmptyElements());
      assertFalse(outputFormat2.isNewlines());
      assertFalse(outputFormat2.isSuppressDeclaration());
      assertEquals("\n", outputFormat2.getLineSeparator());
      assertFalse(outputFormat2.isXHTML());
      assertEquals("?<4xL(#k", outputFormat2.getIndent());
      
      OutputFormat outputFormat3 = OutputFormat.createPrettyPrint();
      assertEquals("  ", outputFormat3.getIndent());
      assertTrue(outputFormat3.isNewlines());
      assertTrue(outputFormat3.isPadText());
      assertTrue(outputFormat3.isTrimText());
      
      OutputFormat outputFormat4 = OutputFormat.createCompactFormat();
      assertEquals("\n", outputFormat4.getLineSeparator());
      assertFalse(outputFormat4.isNewlines());
      assertEquals(0, outputFormat4.getNewLineAfterNTags());
      assertFalse(outputFormat4.isSuppressDeclaration());
      assertFalse(outputFormat4.isPadText());
      assertFalse(outputFormat4.isExpandEmptyElements());
      assertEquals("UTF-8", outputFormat4.getEncoding());
      assertTrue(outputFormat4.isTrimText());
      assertFalse(outputFormat4.isOmitEncoding());
      assertEquals('\"', outputFormat4.getAttributeQuoteCharacter());
      assertTrue(outputFormat4.isNewLineAfterDeclaration());
      assertFalse(outputFormat4.isXHTML());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.8340577442959165
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat(":I`+^Y1L*dIx|HP7");
      outputFormat0.setIndent(":I`+^Y1L*dIx|HP7");
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      OutputFormat.createCompactFormat();
      outputFormat1.setIndentSize((-1447140115));
      OutputFormat.createPrettyPrint();
      OutputFormat.createCompactFormat();
      OutputFormat.createCompactFormat();
      outputFormat0.setIndent(true);
      String[] stringArray0 = new String[4];
      outputFormat0.parseOptions(stringArray0, 408);
      assertEquals("  ", outputFormat0.getIndent());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.1746703358172643
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("S[%:gE", false);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "]\\vy'";
      stringArray0[1] = "S[%:gE";
      stringArray0[2] = "S[%:gE";
      stringArray0[3] = "";
      stringArray0[4] = "S[%:gE";
      outputFormat0.setPadText(false);
      stringArray0[5] = "S[%:gE";
      stringArray0[6] = "S[%:gE";
      outputFormat0.parseOptions(stringArray0, 2);
      outputFormat0.setIndent(false);
      String[] stringArray1 = new String[2];
      stringArray1[0] = "_{Ns/r;#U";
      stringArray1[1] = "";
      int int0 = (-1880);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray1, (-1880));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1880
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.848708463510862
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setXHTML(true);
      outputFormat0.setPadText(true);
      outputFormat0.setNewlines(true);
      outputFormat0.isExpandEmptyElements();
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.setPadText(true);
      outputFormat0.setIndent(false);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "y5=[~8yAW,'9m";
      stringArray0[1] = "Y!;t09<8//Gx";
      stringArray0[2] = "Y!;t09<8//Gx";
      stringArray0[3] = "y5=[~8yAW,'9m";
      stringArray0[4] = "Y!;t09<8//Gx";
      stringArray0[5] = "-xhtmlS[%:gE";
      outputFormat0.parseOptions(stringArray0, 0);
      assertTrue(outputFormat0.isNewlines());
      assertTrue(outputFormat0.isPadText());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.6511351440615436
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createCompactFormat();
      outputFormat0.setNewlines(false);
      String[] stringArray0 = new String[9];
      stringArray0[1] = "-trimText";
      stringArray0[3] = "-trimText";
      stringArray0[4] = ">KMP@[";
      stringArray0[5] = "-new6ines";
      stringArray0[8] = "-trimText";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-3179));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3179
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.2193160896995403
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-xhtml!6zN<4Ld^oo5V", false);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-expandEmpty";
      stringArray0[1] = "";
      stringArray0[2] = "-xhtml!6zN<4Ld^oo5V";
      stringArray0[3] = "-xhtml!6zN<4Ld^oo5V";
      stringArray0[4] = "";
      stringArray0[5] = "-xhtml!6zN<4Ld^oo5V";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.parseOptions(stringArray0, 1);
      assertTrue(outputFormat0.isExpandEmptyElements());
      
      OutputFormat.createPrettyPrint();
      OutputFormat.createCompactFormat();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      assertTrue(outputFormat1.isTrimText());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.6220763533496259
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-xhtml!6zN<4Ld^oo5V", false);
      outputFormat0.setLineSeparator("-xhtml!6zN<4Ld^oo5V");
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-expandEmptyS[%:gE";
      stringArray0[1] = "-xhtml!6zN<4Ld^oo5V";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setIndent((String) null);
      String[] stringArray1 = new String[7];
      stringArray1[0] = null;
      stringArray1[1] = "Invalid attribute quote character (";
      stringArray1[2] = "-expandEmptyS[%:gE";
      stringArray1[3] = null;
      stringArray1[4] = "Y`aNd^g5tL";
      outputFormat0.setSuppressDeclaration(true);
      stringArray1[5] = "Invalid attribute quote character (";
      stringArray1[6] = "Invalid attribute quote character (";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray1, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.769085815231613
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      String[] stringArray0 = new String[16];
      stringArray0[0] = "XWax/^f 7+28";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.isSuppressDeclaration();
      outputFormat0.setIndent(false);
      outputFormat0.setIndent("XWax/^f 7+28");
      OutputFormat outputFormat2 = new OutputFormat();
      outputFormat2.isOmitEncoding();
      outputFormat1.setSuppressDeclaration(false);
      outputFormat1.setTrimText(false);
      OutputFormat outputFormat3 = new OutputFormat("yG", true, "yG");
      outputFormat3.setIndent("yG");
      outputFormat3.setExpandEmptyElements(false);
      outputFormat2.setNewLineAfterDeclaration(false);
      outputFormat3.setTrimText(false);
      outputFormat2.setIndent(true);
      outputFormat2.setOmitEncoding(true);
      outputFormat1.setOmitEncoding(false);
      assertFalse(outputFormat1.isTrimText());
      
      outputFormat0.setOmitEncoding(false);
      outputFormat2.setIndentSize((-550));
      OutputFormat outputFormat4 = OutputFormat.createPrettyPrint();
      assertTrue(outputFormat4.isTrimText());
      
      outputFormat4.setTrimText(false);
      outputFormat0.setIndent("");
      assertFalse(outputFormat0.isSuppressDeclaration());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.5927012444032393
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-xhtml!6zN<4Ld^oo5V", false);
      outputFormat0.setLineSeparator("-xhtml!6zN<4Ld^oo5V");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-xhtml!6zN<4Ld^oo5V";
      stringArray0[1] = "-xhtml!6zN<4Ld^oo5V";
      stringArray0[2] = "";
      stringArray0[3] = "-expandEmptyS[%:gE";
      stringArray0[5] = "-expandEmptyS[%:gE";
      stringArray0[5] = "-xhtml!6zN<4Ld^oo5V";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setIndent("-xhtml!6zN<4Ld^oo5V");
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.parseOptions(stringArray0, 2);
      outputFormat0.getLineSeparator();
      assertEquals("-xhtml!6zN<4Ld^oo5V", outputFormat0.getLineSeparator());
  }
}
