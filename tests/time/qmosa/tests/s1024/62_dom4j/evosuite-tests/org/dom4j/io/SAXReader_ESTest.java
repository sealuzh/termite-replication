/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 08:20:32 GMT 2019
 */

package org.dom4j.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.InputStream;
import java.io.PushbackInputStream;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.net.URI;
import java.net.URL;
import java.util.Enumeration;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.dom4j.DefaultDocumentFactory;
import org.dom4j.DocumentFactory;
import org.dom4j.ElementHandler;
import org.dom4j.QName;
import org.dom4j.io.DispatchHandler;
import org.dom4j.io.ElementModifier;
import org.dom4j.io.ElementStack;
import org.dom4j.io.PruningDispatchHandler;
import org.dom4j.io.PruningElementStack;
import org.dom4j.io.SAXContentHandler;
import org.dom4j.io.SAXModifyElementHandler;
import org.dom4j.io.SAXReader;
import org.dom4j.util.IndexedElement;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.xml.sax.ContentHandler;
import org.xml.sax.HandlerBase;
import org.xml.sax.InputSource;
import org.xml.sax.Parser;
import org.xml.sax.SAXException;
import org.xml.sax.SAXNotRecognizedException;
import org.xml.sax.SAXParseException;
import org.xml.sax.XMLReader;
import org.xml.sax.ext.DefaultHandler2;
import org.xml.sax.ext.Locator2Impl;
import org.xml.sax.helpers.DefaultHandler;
import org.xml.sax.helpers.ParserAdapter;
import org.xml.sax.helpers.XMLFilterImpl;
import org.xml.sax.helpers.XMLReaderAdapter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SAXReader_ESTest extends SAXReader_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.136920820622443
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = "[m\"";
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("[m\"");
      sAXReader_SAXEntityResolver0.resolveEntity("http://xml.org/sax/features/validation", "Cannot lookup prefixes in DOM 2");
      sAXReader_SAXEntityResolver0.uriPrefix = null;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "[m\"");
      sAXReader_SAXEntityResolver0.resolveEntity("[m\"", "qV");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      SAXReader sAXReader0 = new SAXReader();
      sAXReader0.isIgnoreComments();
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader1 = new SAXReader(defaultDocumentFactory0);
      sAXReader1.getXMLFilter();
      DefaultHandler defaultHandler0 = null;
      // Undeclared exception!
      try { 
        sAXReader0.configureReader((XMLReader) null, (DefaultHandler) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.io.SAXHelper", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DocumentFactory documentFactory0 = DefaultDocumentFactory.getInstance();
      SAXReader sAXReader0 = new SAXReader(documentFactory0, false);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      xMLFilterImpl0.setParent(xMLFilterImpl1);
      SAXContentHandler sAXContentHandler0 = sAXReader0.createContentHandler(xMLFilterImpl0);
      // Undeclared exception!
      try { 
        sAXReader0.configureReader(xMLFilterImpl0, sAXContentHandler0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      byte[] byteArray0 = new byte[8];
      byteArray0[5] = (byte) (-99);
      byteArray0[1] = (byte) (-88);
      byteArray0[2] = (byte) (-88);
      byteArray0[3] = (byte) (-35);
      SAXReader sAXReader1 = new SAXReader((String) null, true);
      // Undeclared exception!
      try { 
        sAXReader1.setFeature((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xerces.jaxp.SAXParserImpl$JAXPSAXParser", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.4135970426774835
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, false);
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      sAXReader0.resetHandlers();
      // Undeclared exception!
      try { 
        sAXReader0.read((Reader) null);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.3917728512041743
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-99);
      byteArray0[1] = (byte) (-88);
      byteArray0[2] = (byte) (-88);
      byteArray0[3] = (byte)9;
      byteArray0[4] = (byte) (-88);
      byteArray0[5] = (byte) (-35);
      sAXReader0.setMergeAdjacentText(false);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)9, (-1964));
      byteArrayInputStream0.mark((-1964));
      byteArrayInputStream0.mark((-154));
      try { 
        sAXReader0.read((InputStream) byteArrayInputStream0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line -1 of document  : Premature end of file. Nested exception: Premature end of file.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.6082873972465446
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader(true);
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      String string0 = ": ";
      xMLReaderAdapter0.endPrefixMapping(": ");
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      Locator2Impl locator2Impl0 = new Locator2Impl();
      xMLReaderAdapter0.setDocumentLocator(locator2Impl0);
      parserAdapter0.getErrorHandler();
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      try { 
        sAXReader0.configureReader(parserAdapter0, defaultHandler2_0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Validation not supported for XMLReader: org.xml.sax.helpers.ParserAdapter@4a815d54 Nested exception: Feature: http://xml.org/sax/features/validation
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      SAXReader sAXReader1 = new SAXReader();
      DefaultDocumentFactory.getInstance();
      DispatchHandler dispatchHandler0 = new DispatchHandler();
      PruningDispatchHandler pruningDispatchHandler0 = new PruningDispatchHandler();
      PruningDispatchHandler pruningDispatchHandler1 = new PruningDispatchHandler();
      pruningDispatchHandler1.addHandler("Bp$lt ^YBWU;", dispatchHandler0);
      pruningDispatchHandler1.setDefaultHandler(pruningDispatchHandler0);
      pruningDispatchHandler0.removeHandler("F\"Ae},]cG");
      sAXReader0.setDispatchHandler(pruningDispatchHandler0);
      sAXReader1.removeHandler("http://xml.org/sax/features/namespace-prefixes");
      String string0 = "k\"";
      SAXReader sAXReader2 = new SAXReader();
      sAXReader0.isIgnoreComments();
      ParserAdapter parserAdapter0 = null;
      try {
        parserAdapter0 = new ParserAdapter((Parser) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Parser argument must not be null
         //
         verifyException("org.xml.sax.helpers.ParserAdapter", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.5349562658516858
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      XMLReader xMLReader0 = sAXReader0.getXMLReader();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      sAXReader0.getErrorHandler();
      sAXReader0.setXMLReader(xMLReader0);
      ElementModifier elementModifier0 = mock(ElementModifier.class, new ViolatedAssumptionAnswer());
      sAXReader0.setStringInternEnabled(false);
      DocumentFactory documentFactory0 = DefaultDocumentFactory.getInstance();
      SAXReader sAXReader1 = new SAXReader(documentFactory0);
      sAXReader1.isStringInternEnabled();
      String string0 = ";R5JJY5Kvn";
      try { 
        sAXReader0.read(";R5JJY5Kvn");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // /home/ubuntu/termite/projects/62_dom4j/;R5JJY5Kvn (No such file or directory) Nested exception: /home/ubuntu/termite/projects/62_dom4j/;R5JJY5Kvn (No such file or directory)
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.4905526446902004
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((DocumentFactory) null);
      sAXReader0.getXMLFilter();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl((XMLReader) null);
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      byte[] byteArray0 = new byte[0];
      DefaultHandler defaultHandler0 = new DefaultHandler();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DispatchHandler dispatchHandler0 = new DispatchHandler();
      String[] stringArray0 = new String[19];
      stringArray0[0] = "}\")`";
      stringArray0[1] = "UnDO>ZVZq>-%yCZyf";
      stringArray0[2] = "&ddT7n\"$Vu,";
      stringArray0[3] = "DJ.Y0y2w\"PM$rvJ";
      PruningElementStack pruningElementStack0 = new PruningElementStack(stringArray0, dispatchHandler0);
      pruningElementStack0.getDispatchHandler();
      dispatchHandler0.removeHandler("}\")`");
      DispatchHandler dispatchHandler1 = new DispatchHandler();
      sAXReader0.addHandler("HHAnTD8", dispatchHandler1);
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      sAXReader0.setXMLFilter(xMLFilterImpl1);
      sAXReader0.isStringInternEnabled();
      try { 
        sAXReader0.read((Reader) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // null Nested exception: null
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.27624832111085
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader(true);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "org.jaxen.expr.DefaultExpr");
      StringReader stringReader0 = new StringReader("");
      InputSource inputSource0 = new InputSource(stringReader0);
      inputSource0.setCharacterStream(stringReader0);
      stringReader0.mark(0);
      String string0 = null;
      inputSource0.setSystemId((String) null);
      stringReader0.read();
      inputSource0.setCharacterStream(stringReader0);
      inputSource0.setSystemId("");
      sAXReader0.getXMLReader();
      sAXReader0.isValidating();
      try { 
        sAXReader0.read(inputSource0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line -1 of document  : Premature end of file. Nested exception: Premature end of file.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.495798695427357
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      String string0 = "";
      stringArray0[1] = "";
      stringArray0[2] = ";&&qhvU9,_";
      DispatchHandler dispatchHandler0 = new DispatchHandler();
      PruningElementStack pruningElementStack0 = new PruningElementStack(stringArray0, dispatchHandler0);
      MockFile mockFile0 = new MockFile("http://xml.org/sax/handlers/LexicalHandler", "");
      DispatchHandler dispatchHandler1 = new DispatchHandler();
      sAXReader0.removeHandler("");
      sAXReader0.getXMLFilter();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl((XMLReader) null);
      sAXReader0.installXMLFilter(xMLFilterImpl0);
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader1 = new SAXReader(defaultDocumentFactory0);
      sAXReader1.isValidating();
      StringReader stringReader0 = new StringReader("");
      DefaultDocumentFactory defaultDocumentFactory1 = new DefaultDocumentFactory();
      QName qName0 = QName.get("//tmp/Validation not supported for XMLReader: 0Validation not supported for XMLReader: ", "", "");
      qName0.getDocumentFactory();
      SAXReader sAXReader2 = new SAXReader((DocumentFactory) null);
      try { 
        sAXReader2.read((Reader) stringReader0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line -1 of document  : Premature end of file. Nested exception: Premature end of file.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.7787755691845217
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      XMLReader xMLReader0 = sAXReader0.getXMLReader();
      sAXReader0.getXMLFilter();
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("org.dom4j.io.SAXReader");
      sAXReader0.setEntityResolver(sAXReader_SAXEntityResolver0);
      sAXReader0.getErrorHandler();
      sAXReader0.setXMLReader(xMLReader0);
      ElementModifier elementModifier0 = mock(ElementModifier.class, new ViolatedAssumptionAnswer());
      SAXModifyElementHandler sAXModifyElementHandler0 = new SAXModifyElementHandler(elementModifier0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "kw3LgTrsJfLDL";
      stringArray0[1] = "";
      stringArray0[3] = "qg9LxXX5SNe";
      PruningElementStack pruningElementStack0 = new PruningElementStack(stringArray0, sAXModifyElementHandler0);
      sAXReader0.isIncludeInternalDTDDeclarations();
      pruningElementStack0.lastElementIndex = 2434;
      // Undeclared exception!
      try { 
        sAXModifyElementHandler0.onStart(pruningElementStack0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2434
         //
         verifyException("org.dom4j.io.ElementStack", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.334527382023145
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter(xMLFilterImpl0);
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      sAXReader0.installXMLFilter(parserAdapter0);
      try { 
        sAXReader0.read("#### Warning: couldn't create bean: ");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no protocol: #### Warning: couldn't create bean:  Nested exception: no protocol: #### Warning: couldn't create bean: 
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      xMLReaderAdapter0.endPrefixMapping("`Tw&wZlOD");
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      XMLReaderAdapter xMLReaderAdapter1 = new XMLReaderAdapter();
      ParserAdapter parserAdapter1 = new ParserAdapter(xMLReaderAdapter0);
      parserAdapter1.getErrorHandler();
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      sAXReader0.configureReader(parserAdapter1, defaultHandler2_0);
      MockURL.getHttpExample();
      // Undeclared exception!
      try { 
        sAXReader0.read((URL) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      SAXReader sAXReader0 = new SAXReader((String) null);
      sAXReader0.setEncoding("m(MSL!|}A#!p.+*1");
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader1 = null;
      try {
        sAXReader1 = new SAXReader("//tmp/Validation not supported for XMLReader: 0Validation not supported for XMLReader: ", false);
        fail("Expecting exception: SAXException");
      
      } catch(Throwable e) {
         //
         // SAX2 driver class //tmp/Validation not supported for XMLReader: 0Validation not supported for XMLReader:  not found
         //
         verifyException("org.xml.sax.helpers.XMLReaderFactory", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      SAXReader sAXReader0 = new SAXReader((String) null);
      sAXReader0.resetHandlers();
      try { 
        sAXReader0.setFeature("//tmp/Validation not supported for XMLReader: 0Validation not supported for XMLReader: ", true);
        fail("Expecting exception: SAXNotRecognizedException");
      
      } catch(SAXNotRecognizedException e) {
         //
         // Feature '//tmp/Validation not supported for XMLReader: 0Validation not supported for XMLReader: ' is not recognized.
         //
         verifyException("org.apache.xerces.parsers.AbstractSAXParser", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.4406133134903523
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((DocumentFactory) null, true);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/z(][vV(8%Fxx.Ud10~S2kul9");
      sAXReader0.getEncoding();
      FileSystemHandling.appendStringToFile(evoSuiteFile0, " =?6b6eGl3H~'");
      sAXReader0.setStringInternEnabled(false);
      sAXReader0.isStringInternEnabled();
      try { 
        sAXReader0.read("~S2kul9");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // /home/ubuntu/termite/projects/62_dom4j/~S2kul9 (No such file or directory) Nested exception: /home/ubuntu/termite/projects/62_dom4j/~S2kul9 (No such file or directory)
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      SAXReader sAXReader1 = new SAXReader();
      DispatchHandler dispatchHandler0 = sAXReader1.getDispatchHandler();
      sAXReader0.addHandler("nd3=BkAi/ *^ojd[TY", dispatchHandler0);
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl(xMLFilterImpl1);
      SAXParseException sAXParseException0 = new SAXParseException("O1b]", "O1b]", "org.dom4j.tree.FlyweightText", 26, 9, (Exception) null);
      // Undeclared exception!
      try { 
        sAXReader0.setProperty((String) null, "org.dom4j.tree.FlyweightText");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xerces.jaxp.SAXParserImpl$JAXPSAXParser", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      sAXReader0.getEntityResolver();
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isStripWhitespaceText());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.2995793963713953
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          SAXReader sAXReader0 = new SAXReader();
          XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
          xMLReaderAdapter0.endPrefixMapping("`Tw&wZlOD");
          ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
          XMLReaderAdapter xMLReaderAdapter1 = new XMLReaderAdapter();
          ParserAdapter parserAdapter1 = new ParserAdapter(xMLReaderAdapter0);
          parserAdapter1.getErrorHandler();
          DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
          sAXReader0.configureReader(parserAdapter1, defaultHandler2_0);
          URL uRL0 = MockURL.getHttpExample();
          try { 
            sAXReader0.read(uRL0);
            fail("Expecting exception: Exception");
          
          } catch(Exception e) {
             //
             // Security manager blocks (\"java.net.SocketPermission\" \"www.someFakeButWellFormedURL.org\" \"resolve\")
             // java.lang.Thread.getStackTrace(Thread.java:1559)
             // org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:434)
             // java.lang.SecurityManager.checkConnect(SecurityManager.java:1048)
             // java.net.InetAddress.getAllByName0(InetAddress.java:1269)
             // java.net.InetAddress.getAllByName(InetAddress.java:1193)
             // java.net.InetAddress.getAllByName(InetAddress.java:1127)
             // java.net.InetAddress.getByName(InetAddress.java:1077)
             // sun.net.www.protocol.http.HttpURLConnection$5.run(HttpURLConnection.java:1010)
             // sun.net.www.protocol.http.HttpURLConnection$5.run(HttpURLConnection.java:1008)
             // java.security.AccessController.doPrivileged(Native Method)
             // sun.net.www.protocol.http.HttpURLConnection.getHostAndPort(HttpURLConnection.java:1007)
             // sun.net.www.protocol.http.HttpURLConnection.URLtoSocketPermission(HttpURLConnection.java:1075)
             // sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1477)
             // org.apache.xerces.impl.XMLEntityManager.setupCurrentEntity(Unknown Source)
             // org.apache.xerces.impl.XMLVersionDetector.determineDocVersion(Unknown Source)
             // org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
             // org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
             // org.apache.xerces.parsers.XMLParser.parse(Unknown Source)
             // org.apache.xerces.parsers.AbstractSAXParser.parse(Unknown Source)
             // org.apache.xerces.jaxp.SAXParserImpl$JAXPSAXParser.parse(Unknown Source)
             // org.dom4j.io.SAXReader.read(SAXReader.java:436)
             // org.dom4j.io.SAXReader.read(SAXReader.java:288)
             // sun.reflect.GeneratedMethodAccessor189.invoke(Unknown Source)
             // sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
             // java.lang.reflect.Method.invoke(Method.java:498)
             // org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:257)
             // org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
             // org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:220)
             // org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:307)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:213)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
             // java.util.concurrent.FutureTask.run(FutureTask.java:266)
             // java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
             // java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
             // java.lang.Thread.run(Thread.java:748)
             //  Nested exception: Security manager blocks (\"java.net.SocketPermission\" \"www.someFakeButWellFormedURL.org\" \"resolve\")
             // java.lang.Thread.getStackTrace(Thread.java:1559)
             // org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:434)
             // java.lang.SecurityManager.checkConnect(SecurityManager.java:1048)
             // java.net.InetAddress.getAllByName0(InetAddress.java:1269)
             // java.net.InetAddress.getAllByName(InetAddress.java:1193)
             // java.net.InetAddress.getAllByName(InetAddress.java:1127)
             // java.net.InetAddress.getByName(InetAddress.java:1077)
             // sun.net.www.protocol.http.HttpURLConnection$5.run(HttpURLConnection.java:1010)
             // sun.net.www.protocol.http.HttpURLConnection$5.run(HttpURLConnection.java:1008)
             // java.security.AccessController.doPrivileged(Native Method)
             // sun.net.www.protocol.http.HttpURLConnection.getHostAndPort(HttpURLConnection.java:1007)
             // sun.net.www.protocol.http.HttpURLConnection.URLtoSocketPermission(HttpURLConnection.java:1075)
             // sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1477)
             // org.apache.xerces.impl.XMLEntityManager.setupCurrentEntity(Unknown Source)
             // org.apache.xerces.impl.XMLVersionDetector.determineDocVersion(Unknown Source)
             // org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
             // org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
             // org.apache.xerces.parsers.XMLParser.parse(Unknown Source)
             // org.apache.xerces.parsers.AbstractSAXParser.parse(Unknown Source)
             // org.apache.xerces.jaxp.SAXParserImpl$JAXPSAXParser.parse(Unknown Source)
             // org.dom4j.io.SAXReader.read(SAXReader.java:436)
             // org.dom4j.io.SAXReader.read(SAXReader.java:288)
             // sun.reflect.GeneratedMethodAccessor189.invoke(Unknown Source)
             // sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
             // java.lang.reflect.Method.invoke(Method.java:498)
             // org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:257)
             // org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
             // org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:220)
             // org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:307)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:213)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
             // java.util.concurrent.FutureTask.run(FutureTask.java:266)
             // java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
             // java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
             // java.lang.Thread.run(Thread.java:748)
             //
             verifyException("org.dom4j.io.SAXReader", e);
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.338261407969476
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-99);
      byteArray0[1] = (byte) (-88);
      byteArray0[2] = (byte) (-88);
      byteArray0[3] = (byte)9;
      sAXReader0.getXMLFilter();
      sAXReader0.installXMLFilter((XMLReader) null);
      byteArray0[4] = (byte) (-88);
      byteArray0[5] = (byte)9;
      byteArray0[6] = (byte)9;
      byteArray0[7] = (byte) (-99);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 3075, 3075);
      MockFile mockFile0 = new MockFile("org.dom4j.verbose", "org.dom4j.verbose");
      File file0 = MockFile.createTempFile("//tmp/kw3LgTrsJfLDL0", "//tmp/z(][vV(8%Fxx.Ud10z(][vV(8%Fxx.Ud1", (File) mockFile0);
      file0.createNewFile();
      StringReader stringReader0 = new StringReader("n(F3IQa7?+{s9?v#'~");
      try { 
        sAXReader0.read((Reader) stringReader0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line 1 of document  : Content is not allowed in prolog. Nested exception: Content is not allowed in prolog.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      byte[] byteArray0 = new byte[8];
      byteArray0[5] = (byte) (-99);
      byteArray0[1] = (byte) (-88);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      SAXReader sAXReader1 = new SAXReader();
      sAXReader0.getDispatchHandler();
      sAXReader1.addHandler("4P8,MM0C7>[8c", (ElementHandler) null);
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl(xMLFilterImpl0);
      StringReader stringReader0 = new StringReader("4P8,MM0C7>[8c");
      MockFile mockFile0 = new MockFile("4P8,MM0C7>[8c");
      try { 
        sAXReader0.read((File) mockFile0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // null Nested exception: null
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      SAXReader sAXReader0 = new SAXReader((String) null);
      sAXReader0.getErrorHandler();
      SAXReader sAXReader1 = null;
      try {
        sAXReader1 = new SAXReader("//tmp/Validation not supported for XMLReader: 0Validation not supported for XMLReader: ", false);
        fail("Expecting exception: SAXException");
      
      } catch(Throwable e) {
         //
         // SAX2 driver class //tmp/Validation not supported for XMLReader: 0Validation not supported for XMLReader:  not found
         //
         verifyException("org.xml.sax.helpers.XMLReaderFactory", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.3334433711830367
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      String string0 = "";
      String string1 = "";
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[1] = "";
      SAXReader sAXReader0 = new SAXReader();
      StringReader stringReader0 = new StringReader("");
      try { 
        sAXReader0.read((Reader) stringReader0, "");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line -1 of document  : Premature end of file. Nested exception: Premature end of file.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.3111802789964604
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      String string0 = "http://xml.org/sax/features/namespace-prefixes";
      String[] stringArray0 = new String[3];
      stringArray0[0] = "http://xml.org/sax/features/namespace-prefixes";
      stringArray0[1] = "";
      SAXReader sAXReader0 = new SAXReader();
      StringReader stringReader0 = new StringReader("http://xml.org/sax/features/namespace-prefixes");
      String string1 = "`9[ps.Rqh";
      try { 
        sAXReader0.read((Reader) stringReader0, "`9[ps.Rqh");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line 1 of document `9[ps.Rqh : Content is not allowed in prolog. Nested exception: Content is not allowed in prolog.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.4947667036832915
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      byte[] byteArray0 = new byte[8];
      byteArray0[5] = (byte) (-99);
      byteArray0[1] = (byte) (-88);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      SAXReader sAXReader1 = new SAXReader();
      sAXReader0.getDispatchHandler();
      sAXReader1.addHandler("4P8,MM0C7>[8c", (ElementHandler) null);
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl(xMLFilterImpl0);
      String string0 = " [DocumentType: ";
      StringReader stringReader0 = new StringReader("4P8,MM0C7>[8c");
      stringReader0.markSupported();
      sAXReader0.getErrorHandler();
      try { 
        sAXReader0.read((Reader) stringReader0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line 1 of document  : Content is not allowed in prolog. Nested exception: Content is not allowed in prolog.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.47232673134543
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = ";&&qhvU9,_";
      DispatchHandler dispatchHandler0 = new DispatchHandler();
      dispatchHandler0.setDefaultHandler((ElementHandler) null);
      PruningElementStack pruningElementStack0 = new PruningElementStack(stringArray0, dispatchHandler0);
      IndexedElement indexedElement0 = new IndexedElement(";&&qhvU9,_");
      pruningElementStack0.pushElement(indexedElement0);
      pruningElementStack0.getDispatchHandler();
      sAXReader0.setDispatchHandler((DispatchHandler) null);
      sAXReader0.isIncludeExternalDTDDeclarations();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      sAXReader0.getErrorHandler();
      try { 
        sAXReader0.read((InputStream) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // null Nested exception: null
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.297687147780183
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      String string0 = "s>@W\\Tu!zO9O$";
      QName qName0 = new QName("s>@WTu!zO9O$");
      qName0.getDocumentFactory();
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SAXReader sAXReader0 = new SAXReader((DocumentFactory) null, true);
      sAXReader0.createXMLReader();
      String string1 = "org.dom4j.io.SAXReader";
      sAXReader0.createDefaultEntityResolver("org.dom4j.io.SAXReader");
      EvoSuiteFile evoSuiteFile1 = null;
      boolean boolean0 = true;
      boolean boolean1 = true;
      try { 
        sAXReader0.setXMLReaderClassName("org.dom4j.io.SAXReader");
        fail("Expecting exception: SAXException");
      
      } catch(SAXException e) {
         //
         // SAX2 driver class org.dom4j.io.SAXReader does not implement XMLReader
         //
         verifyException("org.xml.sax.helpers.XMLReaderFactory", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.580580723582687
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader(true);
      sAXReader0.setDefaultHandler((ElementHandler) null);
      sAXReader0.setIncludeExternalDTDDeclarations(true);
      String string0 = " of document ";
      PruningDispatchHandler pruningDispatchHandler0 = new PruningDispatchHandler();
      pruningDispatchHandler0.resetHandlers();
      pruningDispatchHandler0.resetHandlers();
      pruningDispatchHandler0.resetHandlers();
      sAXReader0.createDefaultEntityResolver(" of document ");
      sAXReader0.addHandler(" of document ", pruningDispatchHandler0);
      sAXReader0.isIncludeExternalDTDDeclarations();
      sAXReader0.setValidation(true);
      String string1 = "[ NZzBZljB";
      try { 
        sAXReader0.read("[ NZzBZljB");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no protocol: [ NZzBZljB Nested exception: no protocol: [ NZzBZljB
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.560876281103376
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader();
      DefaultDocumentFactory.getInstance();
      InputStream inputStream0 = null;
      DispatchHandler dispatchHandler0 = new DispatchHandler();
      PruningDispatchHandler pruningDispatchHandler0 = new PruningDispatchHandler();
      pruningDispatchHandler0.addHandler("Bp$lt ^YBWU;", dispatchHandler0);
      sAXReader0.setIncludeInternalDTDDeclarations(true);
      dispatchHandler0.setDefaultHandler(pruningDispatchHandler0);
      dispatchHandler0.removeHandler(" +.95");
      sAXReader0.setDispatchHandler(dispatchHandler0);
      sAXReader0.removeHandler("__M4-` $Hiu)sw:K}");
      try { 
        sAXReader0.read((InputStream) null, "__M4-` $Hiu)sw:K}");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no protocol: __M4-` $Hiu)sw:K} Nested exception: no protocol: __M4-` $Hiu)sw:K}
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      XMLReader xMLReader0 = sAXReader0.getXMLReader();
      sAXReader0.getXMLFilter();
      sAXReader0.getErrorHandler();
      sAXReader0.setXMLReader(xMLReader0);
      ElementModifier elementModifier0 = mock(ElementModifier.class, new ViolatedAssumptionAnswer());
      SAXModifyElementHandler sAXModifyElementHandler0 = new SAXModifyElementHandler(elementModifier0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "kw3LgTrsJfLDL";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "qg9LxXX5SNe";
      ElementStack elementStack0 = new ElementStack();
      elementStack0.getPath();
      sAXModifyElementHandler0.onStart(elementStack0);
      PruningElementStack pruningElementStack0 = new PruningElementStack(stringArray0, sAXModifyElementHandler0);
      sAXReader0.setIncludeExternalDTDDeclarations(false);
      pruningElementStack0.lastElementIndex = 2434;
      // Undeclared exception!
      try { 
        sAXModifyElementHandler0.onStart(pruningElementStack0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2434
         //
         verifyException("org.dom4j.io.ElementStack", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory0, true);
      sAXReader0.setIncludeInternalDTDDeclarations(true);
      sAXReader0.setIncludeInternalDTDDeclarations(false);
      sAXReader0.setValidation(true);
      sAXReader0.setDocumentFactory(defaultDocumentFactory0);
      ParserAdapter parserAdapter0 = null;
      try {
        parserAdapter0 = new ParserAdapter();
        fail("Expecting exception: SAXException");
      
      } catch(Throwable e) {
         //
         // System property org.xml.sax.parser not specified
         //
         verifyException("org.xml.sax.helpers.ParserAdapter", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      String string0 = null;
      SAXReader sAXReader0 = new SAXReader((String) null);
      DefaultHandler defaultHandler0 = new DefaultHandler();
      char[] charArray0 = new char[2];
      charArray0[0] = 'r';
      charArray0[1] = 'u';
      defaultHandler0.ignorableWhitespace(charArray0, 2303, 2303);
      sAXReader0.setErrorHandler(defaultHandler0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "7vv$/0~y");
      StringReader stringReader0 = null;
      try {
        stringReader0 = new StringReader((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.376742981833967
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      SAXReader sAXReader0 = new SAXReader();
      DispatchHandler dispatchHandler0 = sAXReader0.getDispatchHandler();
      sAXReader0.addHandler("4WFnly%_ !3", dispatchHandler0);
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl(xMLFilterImpl0);
      SAXParseException sAXParseException0 = new SAXParseException("//tmp/kw3LgTrsJfLDL0", "org.dom4j.io.SAXReader$SAXEntityResolver", "http://xml.org/sax/features/validation", (-46), (-46), (Exception) null);
      try { 
        sAXReader0.setProperty("O1b]", (Object) null);
        fail("Expecting exception: SAXNotRecognizedException");
      
      } catch(SAXNotRecognizedException e) {
         //
         // Property 'O1b]' is not recognized.
         //
         verifyException("org.apache.xerces.parsers.AbstractSAXParser", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((DocumentFactory) null);
      sAXReader0.getXMLFilter();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl((XMLReader) null);
      SAXReader sAXReader1 = new SAXReader(xMLFilterImpl0);
      sAXReader1.getDocumentFactory();
      byte[] byteArray0 = new byte[0];
      DefaultHandler defaultHandler0 = new DefaultHandler();
      // Undeclared exception!
      try { 
        sAXReader0.configureReader((XMLReader) null, defaultHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.io.SAXHelper", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.0477604168384906
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      DocumentFactory documentFactory0 = DefaultDocumentFactory.getInstance();
      SAXReader sAXReader0 = new SAXReader(documentFactory0, false);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXContentHandler sAXContentHandler0 = sAXReader0.createContentHandler(xMLFilterImpl0);
      sAXReader0.configureReader(xMLFilterImpl0, sAXContentHandler0);
      DefaultDocumentFactory.getInstance();
      DispatchHandler dispatchHandler0 = new DispatchHandler();
      PruningDispatchHandler pruningDispatchHandler0 = new PruningDispatchHandler();
      pruningDispatchHandler0.addHandler("Bp$lt ^YBWU;", dispatchHandler0);
      dispatchHandler0.setDefaultHandler(pruningDispatchHandler0);
      DispatchHandler dispatchHandler1 = new DispatchHandler();
      PruningElementStack pruningElementStack0 = null;
      try {
        pruningElementStack0 = new PruningElementStack((String[]) null, dispatchHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.io.PruningElementStack", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      SAXReader sAXReader0 = new SAXReader((String) null, true);
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      sAXReader0.setDocumentFactory(defaultDocumentFactory0);
      sAXReader0.getDocumentFactory();
      try { 
        sAXReader0.setFeature("org.dom4j.DefaultDocumentFactory.singleton.strategy", true);
        fail("Expecting exception: SAXNotRecognizedException");
      
      } catch(SAXNotRecognizedException e) {
         //
         // Feature 'org.dom4j.DefaultDocumentFactory.singleton.strategy' is not recognized.
         //
         verifyException("org.apache.xerces.parsers.AbstractSAXParser", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.0113645074166633
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      DispatchHandler dispatchHandler0 = sAXReader0.getDispatchHandler();
      sAXReader0.addHandler("23(Z*\"{p5$ VJ;uSC\"", dispatchHandler0);
      sAXReader0.getErrorHandler();
      SAXReader sAXReader1 = null;
      try {
        sAXReader1 = new SAXReader(" /sOA?)>WasLN}e*", true);
        fail("Expecting exception: SAXException");
      
      } catch(Throwable e) {
         //
         // SAX2 driver class  /sOA?)>WasLN}e* not found
         //
         verifyException("org.xml.sax.helpers.XMLReaderFactory", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.3111802789964604
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      String string0 = "";
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[1] = "";
      SAXReader sAXReader0 = new SAXReader();
      StringReader stringReader0 = new StringReader("");
      String string1 = "`9[ps.(RXqh";
      try { 
        sAXReader0.read((Reader) stringReader0, "`9[ps.(RXqh");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line -1 of document  : Premature end of file. Nested exception: Premature end of file.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      SAXReader sAXReader0 = new SAXReader(parserAdapter0);
      boolean boolean0 = true;
      sAXReader0.setStripWhitespaceText(true);
      char[] charArray0 = new char[4];
      charArray0[0] = 'N';
      charArray0[1] = '-';
      charArray0[2] = '<';
      charArray0[3] = 'J';
      parserAdapter0.ignorableWhitespace(charArray0, (-444), 931);
      String string0 = ";)T";
      QName qName0 = QName.get(";)T", (String) null);
      QName.get((String) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      qName0.getDocumentFactory();
      sAXReader0.setDocumentFactory((DocumentFactory) null);
      URI uRI0 = null;
      MockFile mockFile0 = null;
      try {
        mockFile0 = new MockFile((URI) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.3881291941663134
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      byte byte0 = (byte) (-99);
      sAXReader0.setDocumentFactory((DocumentFactory) null);
      String string0 = "";
      String string1 = "#### Warning: couldn't create bean: ";
      try { 
        sAXReader0.read("#### Warning: couldn't create bean: ");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no protocol: #### Warning: couldn't create bean:  Nested exception: no protocol: #### Warning: couldn't create bean: 
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      SAXReader sAXReader0 = null;
      try {
        sAXReader0 = new SAXReader("");
        fail("Expecting exception: SAXException");
      
      } catch(Throwable e) {
         //
         // SAX2 driver class  not found
         //
         verifyException("org.xml.sax.helpers.XMLReaderFactory", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.5168760810714366
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((DocumentFactory) null);
      sAXReader0.getXMLFilter();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl((XMLReader) null);
      sAXReader0.getDocumentFactory();
      byte[] byteArray0 = new byte[0];
      DefaultHandler defaultHandler0 = new DefaultHandler();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DispatchHandler dispatchHandler0 = new DispatchHandler();
      String[] stringArray0 = new String[19];
      String string0 = "}\")`";
      stringArray0[0] = "}\")`";
      stringArray0[1] = "UnDO>ZVZq>-%yCZyf";
      String string1 = "&ddT7n\"$Vu,";
      stringArray0[2] = "&ddT7n\"$Vu,";
      String string2 = "DJ.Y0y2w\"PM$rvJ";
      MockFile mockFile0 = new MockFile(" uri: ");
      MockFile mockFile1 = new MockFile(mockFile0, "}\")`");
      HandlerBase handlerBase0 = new HandlerBase();
      handlerBase0.resolveEntity(" uri: ", "UnDO>ZVZq>-%yCZyf");
      try { 
        sAXReader0.read((InputSource) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // null Nested exception: null
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=3.489718268386487
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      DefaultDocumentFactory.getInstance();
      SAXReader sAXReader0 = new SAXReader();
      DefaultDocumentFactory.getInstance();
      DispatchHandler dispatchHandler0 = new DispatchHandler();
      PruningDispatchHandler pruningDispatchHandler0 = new PruningDispatchHandler();
      pruningDispatchHandler0.addHandler("Bp$lt ^YBWU;", dispatchHandler0);
      dispatchHandler0.setDefaultHandler(pruningDispatchHandler0);
      dispatchHandler0.removeHandler(" +.95");
      sAXReader0.setDispatchHandler(dispatchHandler0);
      String string0 = "__M4-\\` $Hiu)sw\\:K}";
      sAXReader0.removeHandler("__M4-` $Hiu)sw:K}");
      try { 
        sAXReader0.read((InputStream) null, "__M4-` $Hiu)sw:K}");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no protocol: __M4-` $Hiu)sw:K} Nested exception: no protocol: __M4-` $Hiu)sw:K}
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=3.3219307546040406
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)50;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)50, (byte)50);
      byteArrayInputStream0.mark((byte)50);
      byteArrayInputStream0.mark(44);
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      char[] charArray0 = new char[1];
      charArray0[0] = 'E';
      xMLReaderAdapter0.ignorableWhitespace(charArray0, (byte)50, 44);
      SAXReader sAXReader0 = new SAXReader(parserAdapter0, true);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      QName qName0 = defaultDocumentFactory0.createQName("&U9upde", "&U9upde", "@9");
      DocumentFactory documentFactory0 = qName0.getDocumentFactory();
      sAXReader0.setDocumentFactory(documentFactory0);
      try { 
        sAXReader0.read((InputStream) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Validation not supported for XMLReader: org.xml.sax.helpers.ParserAdapter@b7d86ec Nested exception: Feature: http://xml.org/sax/features/validation Nested exception: Validation not supported for XMLReader: org.xml.sax.helpers.ParserAdapter@b7d86ec Nested exception: Feature: http://xml.org/sax/features/validation
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((String) null);
      boolean boolean0 = sAXReader0.isIncludeInternalDTDDeclarations();
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(boolean0);
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isStripWhitespaceText());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      SAXReader sAXReader0 = new SAXReader((String) null);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isStripWhitespaceText());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      SAXReader sAXReader0 = new SAXReader((String) null);
      ElementModifier elementModifier0 = mock(ElementModifier.class, new ViolatedAssumptionAnswer());
      SAXModifyElementHandler sAXModifyElementHandler0 = new SAXModifyElementHandler(elementModifier0);
      ElementStack elementStack0 = new ElementStack();
      sAXModifyElementHandler0.onStart(elementStack0);
      sAXReader0.setDefaultHandler((ElementHandler) null);
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isIgnoreComments());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0);
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter(xMLFilterImpl0);
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      parserAdapter0.getContentHandler();
      xMLFilterImpl0.setContentHandler((ContentHandler) null);
      sAXReader0.getXMLFilter();
      SAXReader sAXReader1 = new SAXReader((XMLReader) null, false);
      sAXReader1.removeHandler("QU{qi.<F");
      DispatchHandler dispatchHandler0 = new DispatchHandler();
      String[] stringArray0 = new String[0];
      PruningElementStack pruningElementStack0 = null;
      try {
        pruningElementStack0 = new PruningElementStack(stringArray0, dispatchHandler0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid path of length: 0 it must be greater than 2
         //
         verifyException("org.dom4j.io.PruningElementStack", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      boolean boolean0 = sAXReader0.isMergeAdjacentText();
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(boolean0);
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertTrue(sAXReader0.isStringInternEnabled());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory0);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter(xMLFilterImpl0);
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      sAXReader0.createContentHandler(parserAdapter0);
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIgnoreComments());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=3.2953696157561723
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-99);
      byteArray0[1] = (byte) (-88);
      byteArray0[2] = (byte) (-88);
      byteArray0[3] = (byte)9;
      byteArray0[4] = (byte) (-88);
      byteArray0[5] = (byte)9;
      byteArray0[6] = (byte)9;
      byteArray0[7] = (byte) (-99);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 3075, 3075);
      MockFile mockFile0 = new MockFile("org.dom4j.verbose", "org.dom4j.verbose");
      File file0 = MockFile.createTempFile("//tmp/kw3LgTrsJfLDL0", "//tmp/z(][vV(8%Fxx.Ud10z(][vV(8%Fxx.Ud1", (File) mockFile0);
      file0.createNewFile();
      try { 
        sAXReader0.read(file0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line -1 of document  : Premature end of file. Nested exception: Premature end of file.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=3.4581715563647935
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      xMLReaderAdapter0.endPrefixMapping("`Tw&wZlOD");
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      Locator2Impl locator2Impl0 = new Locator2Impl();
      xMLReaderAdapter0.setDocumentLocator(locator2Impl0);
      parserAdapter0.getErrorHandler();
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      sAXReader0.configureReader(parserAdapter0, defaultHandler2_0);
      ParserAdapter parserAdapter1 = new ParserAdapter(xMLReaderAdapter0);
      SAXReader sAXReader1 = new SAXReader(parserAdapter0);
      DispatchHandler dispatchHandler0 = sAXReader1.getDispatchHandler();
      sAXReader1.addHandler((String) null, dispatchHandler0);
      sAXReader1.getErrorHandler();
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0);
      try { 
        sAXReader1.read((InputStream) pushbackInputStream0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line -1 of document  : Premature end of file. Nested exception: Premature end of file.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }
}
