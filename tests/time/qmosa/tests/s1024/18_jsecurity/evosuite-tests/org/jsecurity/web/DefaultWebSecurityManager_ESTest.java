/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 07:41:44 GMT 2019
 */

package org.jsecurity.web;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Collection;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.Locale;
import java.util.Map;
import javax.servlet.ServletRequest;
import javax.servlet.ServletRequestWrapper;
import javax.servlet.ServletResponse;
import javax.servlet.ServletResponseWrapper;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.jsecurity.authc.AuthenticationToken;
import org.jsecurity.authc.UsernamePasswordToken;
import org.jsecurity.authz.ModularRealmAuthorizer;
import org.jsecurity.authz.permission.PermissionResolver;
import org.jsecurity.authz.permission.WildcardPermissionResolver;
import org.jsecurity.cache.Cache;
import org.jsecurity.cache.HashtableCacheManager;
import org.jsecurity.realm.Realm;
import org.jsecurity.realm.SimpleAccountRealm;
import org.jsecurity.session.Session;
import org.jsecurity.subject.PrincipalCollection;
import org.jsecurity.subject.SimplePrincipalCollection;
import org.jsecurity.subject.Subject;
import org.jsecurity.web.DefaultWebSecurityManager;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DefaultWebSecurityManager_ESTest extends DefaultWebSecurityManager_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ModularRealmAuthorizer modularRealmAuthorizer0 = new ModularRealmAuthorizer((Collection<Realm>) null);
      ModularRealmAuthorizer modularRealmAuthorizer1 = new ModularRealmAuthorizer((Collection<Realm>) null);
      ModularRealmAuthorizer modularRealmAuthorizer2 = new ModularRealmAuthorizer((Collection<Realm>) null);
      LinkedList<Realm> linkedList0 = new LinkedList<Realm>();
      ModularRealmAuthorizer modularRealmAuthorizer3 = new ModularRealmAuthorizer(linkedList0);
      ModularRealmAuthorizer modularRealmAuthorizer4 = new ModularRealmAuthorizer(linkedList0);
      ModularRealmAuthorizer modularRealmAuthorizer5 = new ModularRealmAuthorizer(linkedList0);
      modularRealmAuthorizer4.getRealms();
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager();
      ServletResponse servletResponse0 = mock(ServletResponse.class, new ViolatedAssumptionAnswer());
      ServletResponseWrapper servletResponseWrapper0 = new ServletResponseWrapper(servletResponse0);
      ServletResponseWrapper servletResponseWrapper1 = new ServletResponseWrapper(servletResponseWrapper0);
      ServletResponseWrapper servletResponseWrapper2 = new ServletResponseWrapper(servletResponseWrapper0);
      ServletResponseWrapper servletResponseWrapper3 = new ServletResponseWrapper(servletResponseWrapper2);
      ServletResponseWrapper servletResponseWrapper4 = new ServletResponseWrapper(servletResponseWrapper1);
      ServletRequest servletRequest0 = mock(ServletRequest.class, new ViolatedAssumptionAnswer());
      ServletRequestWrapper servletRequestWrapper0 = new ServletRequestWrapper(servletRequest0);
      // Undeclared exception!
      try { 
        defaultWebSecurityManager0.bind((Subject) null, servletRequestWrapper0, servletResponseWrapper0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsecurity.web.DefaultWebSecurityManager", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.8802063289439461
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SimpleAccountRealm simpleAccountRealm0 = new SimpleAccountRealm();
      SimpleAccountRealm simpleAccountRealm1 = new SimpleAccountRealm();
      SimpleAccountRealm simpleAccountRealm2 = new SimpleAccountRealm();
      Class<AuthenticationToken> class0 = AuthenticationToken.class;
      simpleAccountRealm2.setAuthenticationTokenClass(class0);
      SimpleAccountRealm simpleAccountRealm3 = new SimpleAccountRealm();
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager(simpleAccountRealm0);
      DefaultWebSecurityManager defaultWebSecurityManager1 = new DefaultWebSecurityManager();
      defaultWebSecurityManager1.setSessionMode("jsecurity");
      defaultWebSecurityManager1.newSessionManagerInstance();
      assertEquals("jsecurity", defaultWebSecurityManager1.getSessionMode());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.8816064979261793
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ServletRequest servletRequest0 = mock(ServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(servletRequest0).getRemoteHost();
      ServletRequestWrapper servletRequestWrapper0 = new ServletRequestWrapper(servletRequest0);
      ServletRequestWrapper servletRequestWrapper1 = new ServletRequestWrapper(servletRequestWrapper0);
      ServletResponse servletResponse0 = mock(ServletResponse.class, new ViolatedAssumptionAnswer());
      ServletResponseWrapper servletResponseWrapper0 = new ServletResponseWrapper(servletResponse0);
      ServletResponseWrapper servletResponseWrapper1 = new ServletResponseWrapper(servletResponseWrapper0);
      servletRequestWrapper1.removeAttribute("S~bOrpbnw*(");
      ServletResponseWrapper servletResponseWrapper2 = new ServletResponseWrapper(servletResponseWrapper1);
      servletResponseWrapper2.resetBuffer();
      ServletResponseWrapper servletResponseWrapper3 = new ServletResponseWrapper(servletResponseWrapper2);
      ServletResponseWrapper servletResponseWrapper4 = new ServletResponseWrapper(servletResponseWrapper3);
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager();
      Subject subject0 = defaultWebSecurityManager0.createSubject((PrincipalCollection) null, false, (Session) null, (ServletRequest) servletRequestWrapper0, (ServletResponse) servletResponseWrapper3);
      defaultWebSecurityManager0.bind(subject0, servletRequestWrapper0, servletResponseWrapper3);
      System.setCurrentTimeMillis((-2807L));
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.0263763964392347
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SimpleAccountRealm simpleAccountRealm0 = new SimpleAccountRealm();
      SimpleAccountRealm simpleAccountRealm1 = new SimpleAccountRealm();
      SimpleAccountRealm simpleAccountRealm2 = new SimpleAccountRealm();
      SimpleAccountRealm simpleAccountRealm3 = new SimpleAccountRealm("L<8(Z]P");
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager();
      DefaultWebSecurityManager defaultWebSecurityManager1 = new DefaultWebSecurityManager();
      defaultWebSecurityManager0.setSessionMode("jsecurity");
      defaultWebSecurityManager0.setSessionIdCookieMaxAge((-2703));
      assertEquals("jsecurity", defaultWebSecurityManager0.getSessionMode());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/jsecurity-ehcache/ehcache_auto_created_1392409281320");
      FileSystemHandling.setPermissions(evoSuiteFile0, false, true, true);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-9);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager();
      // Undeclared exception!
      try { 
        defaultWebSecurityManager0.setSessionIdCookieMaxAge((-2182));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // The convenience passthrough methods for setting session id cookie attributes are only available when the underlying SessionManager implementation is org.jsecurity.web.session.DefaultWebSessionManager, which is enabled by default when the sessionMode is 'jsecurity'.
         //
         verifyException("org.jsecurity.web.DefaultWebSecurityManager", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.156958459902444
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ModularRealmAuthorizer modularRealmAuthorizer0 = new ModularRealmAuthorizer();
      ModularRealmAuthorizer modularRealmAuthorizer1 = new ModularRealmAuthorizer((Collection<Realm>) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      ModularRealmAuthorizer modularRealmAuthorizer2 = new ModularRealmAuthorizer((Collection<Realm>) null);
      modularRealmAuthorizer0.getRealms();
      ModularRealmAuthorizer modularRealmAuthorizer3 = new ModularRealmAuthorizer();
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager();
      defaultWebSecurityManager0.setSessionMode("jsecurity");
      // Undeclared exception!
      try { 
        defaultWebSecurityManager0.getSubject();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // No ServletRequest found in ThreadContext. Make sure WebUtils.bind() is being called. (typically called by JSecurityFilter)  This could also happen when running integration tests that don't properly call WebUtils.bind().
         //
         verifyException("org.jsecurity.web.WebUtils", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      SimpleAccountRealm simpleAccountRealm0 = new SimpleAccountRealm();
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager();
      defaultWebSecurityManager0.getPrincipals((Session) null);
      boolean boolean0 = defaultWebSecurityManager0.isAuthenticated((Session) null);
      assertTrue(defaultWebSecurityManager0.isHttpSessionMode());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager();
      ServletRequest servletRequest0 = null;
      ServletResponse servletResponse0 = mock(ServletResponse.class, new ViolatedAssumptionAnswer());
      ServletResponseWrapper servletResponseWrapper0 = new ServletResponseWrapper(servletResponse0);
      // Undeclared exception!
      try { 
        defaultWebSecurityManager0.createSubject((ServletRequest) null, (ServletResponse) servletResponseWrapper0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsecurity.web.session.ServletContainerSessionManager", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager();
      // Undeclared exception!
      try { 
        defaultWebSecurityManager0.setSessionIdCookieName("z");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // The convenience passthrough methods for setting session id cookie attributes are only available when the underlying SessionManager implementation is org.jsecurity.web.session.DefaultWebSessionManager, which is enabled by default when the sessionMode is 'jsecurity'.
         //
         verifyException("org.jsecurity.web.DefaultWebSecurityManager", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.7315217606126643
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      SimpleAccountRealm simpleAccountRealm0 = new SimpleAccountRealm("mA-V]");
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager(simpleAccountRealm0);
      ServletRequest servletRequest0 = mock(ServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(servletRequest0).getRemoteHost();
      ServletRequestWrapper servletRequestWrapper0 = new ServletRequestWrapper(servletRequest0);
      ServletResponse servletResponse0 = mock(ServletResponse.class, new ViolatedAssumptionAnswer());
      doReturn((Locale) null).when(servletResponse0).getLocale();
      ServletResponseWrapper servletResponseWrapper0 = new ServletResponseWrapper(servletResponse0);
      servletResponseWrapper0.setBufferSize(2908);
      servletResponseWrapper0.getResponse();
      ServletResponseWrapper servletResponseWrapper1 = new ServletResponseWrapper(servletResponseWrapper0);
      servletResponseWrapper1.getLocale();
      servletResponseWrapper0.setContentType("', with '");
      defaultWebSecurityManager0.getPrincipals((Session) null, servletRequestWrapper0, servletResponseWrapper1);
      defaultWebSecurityManager0.createSubject((Session) null, (ServletRequest) servletRequestWrapper0, (ServletResponse) servletResponseWrapper0);
      defaultWebSecurityManager0.createSubject((Session) null, (ServletRequest) servletRequestWrapper0, (ServletResponse) servletResponseWrapper1);
      // Undeclared exception!
      try { 
        defaultWebSecurityManager0.createSubject();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // No ServletRequest found in ThreadContext. Make sure WebUtils.bind() is being called. (typically called by JSecurityFilter)  This could also happen when running integration tests that don't properly call WebUtils.bind().
         //
         verifyException("org.jsecurity.web.WebUtils", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.4659497192528064
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager();
      defaultWebSecurityManager0.newSessionManagerInstance();
      assertTrue(defaultWebSecurityManager0.isHttpSessionMode());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.027377075708073
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SimpleAccountRealm simpleAccountRealm0 = new SimpleAccountRealm();
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager(simpleAccountRealm0);
      assertEquals("http", defaultWebSecurityManager0.getSessionMode());
      
      simpleAccountRealm0.initAuthorizationCache();
      simpleAccountRealm0.getPermissionResolver();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ServletRequest servletRequest0 = mock(ServletRequest.class, new ViolatedAssumptionAnswer());
      ServletRequestWrapper servletRequestWrapper0 = new ServletRequestWrapper(servletRequest0);
      ServletRequestWrapper servletRequestWrapper1 = new ServletRequestWrapper(servletRequestWrapper0);
      ServletRequestWrapper servletRequestWrapper2 = new ServletRequestWrapper(servletRequestWrapper0);
      ServletResponse servletResponse0 = mock(ServletResponse.class, new ViolatedAssumptionAnswer());
      ServletResponseWrapper servletResponseWrapper0 = new ServletResponseWrapper(servletResponse0);
      ServletResponseWrapper servletResponseWrapper1 = new ServletResponseWrapper(servletResponseWrapper0);
      servletResponseWrapper1.setContentType("pJ{.pZ)V!I~=g)");
      ServletResponseWrapper servletResponseWrapper2 = new ServletResponseWrapper(servletResponseWrapper1);
      servletResponseWrapper2.getResponse();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "jsecurity");
      DefaultWebSecurityManager defaultWebSecurityManager1 = new DefaultWebSecurityManager();
      defaultWebSecurityManager1.setRememberMeCookiePath("Invalid sessionMode [");
      assertTrue(defaultWebSecurityManager1.isHttpSessionMode());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager();
      ServletRequest servletRequest0 = mock(ServletRequest.class, new ViolatedAssumptionAnswer());
      ServletRequestWrapper servletRequestWrapper0 = new ServletRequestWrapper(servletRequest0);
      ServletResponse servletResponse0 = mock(ServletResponse.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(servletResponse0).getBufferSize();
      ServletResponseWrapper servletResponseWrapper0 = new ServletResponseWrapper(servletResponse0);
      servletResponseWrapper0.getBufferSize();
      boolean boolean0 = defaultWebSecurityManager0.isAuthenticated((Session) null, servletRequestWrapper0, servletResponseWrapper0);
      assertFalse(boolean0);
      assertTrue(defaultWebSecurityManager0.isHttpSessionMode());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ServletRequest servletRequest0 = mock(ServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn((Map) null).when(servletRequest0).getParameterMap();
      doReturn((String) null).when(servletRequest0).getRemoteAddr();
      ServletRequestWrapper servletRequestWrapper0 = new ServletRequestWrapper(servletRequest0);
      ServletRequestWrapper servletRequestWrapper1 = new ServletRequestWrapper(servletRequestWrapper0);
      ServletRequestWrapper servletRequestWrapper2 = new ServletRequestWrapper(servletRequestWrapper0);
      ServletRequestWrapper servletRequestWrapper3 = new ServletRequestWrapper(servletRequestWrapper2);
      ServletRequestWrapper servletRequestWrapper4 = new ServletRequestWrapper(servletRequestWrapper0);
      ServletRequestWrapper servletRequestWrapper5 = new ServletRequestWrapper(servletRequestWrapper2);
      ServletRequestWrapper servletRequestWrapper6 = new ServletRequestWrapper(servletRequestWrapper2);
      ServletRequestWrapper servletRequestWrapper7 = new ServletRequestWrapper(servletRequestWrapper3);
      servletRequestWrapper7.getParameterMap();
      ServletResponse servletResponse0 = mock(ServletResponse.class, new ViolatedAssumptionAnswer());
      ServletResponseWrapper servletResponseWrapper0 = new ServletResponseWrapper(servletResponse0);
      ServletResponseWrapper servletResponseWrapper1 = new ServletResponseWrapper(servletResponseWrapper0);
      servletResponseWrapper1.flushBuffer();
      servletResponseWrapper1.setContentLength((-1529));
      ServletRequestWrapper servletRequestWrapper8 = new ServletRequestWrapper(servletRequestWrapper0);
      ServletRequestWrapper servletRequestWrapper9 = new ServletRequestWrapper(servletRequestWrapper8);
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager();
      servletRequestWrapper9.getRemoteAddr();
      ServletRequestWrapper servletRequestWrapper10 = new ServletRequestWrapper(servletRequestWrapper1);
      ServletRequestWrapper servletRequestWrapper11 = new ServletRequestWrapper(servletRequestWrapper9);
      // Undeclared exception!
      try { 
        defaultWebSecurityManager0.createSubject((ServletRequest) servletRequestWrapper8, (ServletResponse) servletResponseWrapper0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // javax.servlet.ServletRequestWrapper cannot be cast to javax.servlet.http.HttpServletRequest
         //
         verifyException("org.jsecurity.web.session.ServletContainerSessionManager", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.6574520104243486
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ServletRequest servletRequest0 = mock(ServletRequest.class, new ViolatedAssumptionAnswer());
      ServletRequestWrapper servletRequestWrapper0 = new ServletRequestWrapper(servletRequest0);
      ServletRequestWrapper servletRequestWrapper1 = new ServletRequestWrapper(servletRequestWrapper0);
      ServletResponse servletResponse0 = mock(ServletResponse.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(servletResponse0).getBufferSize();
      ServletResponseWrapper servletResponseWrapper0 = new ServletResponseWrapper(servletResponse0);
      ServletResponseWrapper servletResponseWrapper1 = new ServletResponseWrapper(servletResponseWrapper0);
      servletResponseWrapper1.getBufferSize();
      servletResponseWrapper0.getResponse();
      servletRequestWrapper0.removeAttribute("pZvr~.");
      ServletResponseWrapper servletResponseWrapper2 = new ServletResponseWrapper(servletResponseWrapper0);
      servletResponseWrapper0.resetBuffer();
      ServletResponseWrapper servletResponseWrapper3 = new ServletResponseWrapper(servletResponseWrapper0);
      SimpleAccountRealm simpleAccountRealm0 = new SimpleAccountRealm("pZvr~.");
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager(simpleAccountRealm0);
      // Undeclared exception!
      try { 
        defaultWebSecurityManager0.getSubject();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // No ServletRequest found in ThreadContext. Make sure WebUtils.bind() is being called. (typically called by JSecurityFilter)  This could also happen when running integration tests that don't properly call WebUtils.bind().
         //
         verifyException("org.jsecurity.web.WebUtils", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.615726363637287
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SimpleAccountRealm simpleAccountRealm0 = new SimpleAccountRealm();
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager(simpleAccountRealm0);
      simpleAccountRealm0.initAuthorizationCache();
      Class<AuthenticationToken> class0 = AuthenticationToken.class;
      simpleAccountRealm0.setAuthenticationTokenClass(class0);
      SimpleAccountRealm simpleAccountRealm1 = new SimpleAccountRealm("W]@3hb");
      SimpleAccountRealm simpleAccountRealm2 = new SimpleAccountRealm();
      DefaultWebSecurityManager defaultWebSecurityManager1 = new DefaultWebSecurityManager(simpleAccountRealm2);
      defaultWebSecurityManager0.setSessionMode("http");
      System.setCurrentTimeMillis((-1887L));
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/jsecurity-ehcache/ehcache_auto_created_1392409281320");
      FileSystemHandling.setPermissions(evoSuiteFile0, false, true, false);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-9);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byteArray0[1] = (byte)102;
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager();
      // Undeclared exception!
      try { 
        defaultWebSecurityManager0.setSessionMode((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid sessionMode [null].  Allowed values are public static final String constants in the org.jsecurity.web.DefaultWebSecurityManager class: 'http' or 'jsecurity', with 'http' being the default.
         //
         verifyException("org.jsecurity.web.DefaultWebSecurityManager", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SimpleAccountRealm simpleAccountRealm0 = new SimpleAccountRealm();
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager(simpleAccountRealm0);
      simpleAccountRealm0.initAuthorizationCache();
      simpleAccountRealm0.getPermissionResolver();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ServletRequest servletRequest0 = mock(ServletRequest.class, new ViolatedAssumptionAnswer());
      ServletRequestWrapper servletRequestWrapper0 = new ServletRequestWrapper(servletRequest0);
      ServletRequestWrapper servletRequestWrapper1 = new ServletRequestWrapper(servletRequestWrapper0);
      ServletRequestWrapper servletRequestWrapper2 = new ServletRequestWrapper(servletRequestWrapper0);
      ServletResponse servletResponse0 = mock(ServletResponse.class, new ViolatedAssumptionAnswer());
      ServletResponseWrapper servletResponseWrapper0 = new ServletResponseWrapper(servletResponse0);
      ServletResponseWrapper servletResponseWrapper1 = new ServletResponseWrapper(servletResponseWrapper0);
      servletResponseWrapper0.setContentType("org.jsecurity.web.DefaultWebSecurityManager_PRINCIPALS_SESSION_KEY");
      ServletResponseWrapper servletResponseWrapper2 = new ServletResponseWrapper(servletResponseWrapper1);
      ServletResponseWrapper servletResponseWrapper3 = new ServletResponseWrapper(servletResponseWrapper2);
      servletResponseWrapper3.getResponse();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "[I*nKUBqn_[$T3LI");
      // Undeclared exception!
      try { 
        defaultWebSecurityManager0.setRememberMeCookiePath("[I*nKUBqn_[$T3LI");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsecurity.web.DefaultWebSecurityManager", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ServletRequest servletRequest0 = mock(ServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn((Map) null).when(servletRequest0).getParameterMap();
      ServletRequestWrapper servletRequestWrapper0 = new ServletRequestWrapper(servletRequest0);
      ServletRequestWrapper servletRequestWrapper1 = new ServletRequestWrapper(servletRequestWrapper0);
      ServletRequestWrapper servletRequestWrapper2 = new ServletRequestWrapper(servletRequestWrapper0);
      ServletRequestWrapper servletRequestWrapper3 = new ServletRequestWrapper(servletRequestWrapper2);
      ServletRequestWrapper servletRequestWrapper4 = new ServletRequestWrapper(servletRequestWrapper0);
      ServletRequestWrapper servletRequestWrapper5 = new ServletRequestWrapper(servletRequestWrapper2);
      ServletRequestWrapper servletRequestWrapper6 = new ServletRequestWrapper(servletRequestWrapper2);
      ServletRequestWrapper servletRequestWrapper7 = new ServletRequestWrapper(servletRequestWrapper3);
      servletRequestWrapper7.getParameterMap();
      ServletResponse servletResponse0 = mock(ServletResponse.class, new ViolatedAssumptionAnswer());
      ServletResponseWrapper servletResponseWrapper0 = new ServletResponseWrapper(servletResponse0);
      ServletResponseWrapper servletResponseWrapper1 = new ServletResponseWrapper(servletResponseWrapper0);
      servletResponseWrapper1.flushBuffer();
      servletResponseWrapper1.setContentLength((-1529));
      ServletRequestWrapper servletRequestWrapper8 = new ServletRequestWrapper(servletRequestWrapper0);
      ServletRequestWrapper servletRequestWrapper9 = new ServletRequestWrapper(servletRequestWrapper8);
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager();
      ServletRequestWrapper servletRequestWrapper10 = new ServletRequestWrapper(servletRequestWrapper1);
      defaultWebSecurityManager0.getSessionMode();
      System.setCurrentTimeMillis((-1529));
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ModularRealmAuthorizer modularRealmAuthorizer0 = new ModularRealmAuthorizer((Collection<Realm>) null);
      ModularRealmAuthorizer modularRealmAuthorizer1 = new ModularRealmAuthorizer();
      ModularRealmAuthorizer modularRealmAuthorizer2 = new ModularRealmAuthorizer((Collection<Realm>) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      ModularRealmAuthorizer modularRealmAuthorizer3 = new ModularRealmAuthorizer();
      modularRealmAuthorizer1.getRealms();
      ModularRealmAuthorizer modularRealmAuthorizer4 = new ModularRealmAuthorizer();
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager();
      // Undeclared exception!
      try { 
        defaultWebSecurityManager0.createSubject();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // No ServletRequest found in ThreadContext. Make sure WebUtils.bind() is being called. (typically called by JSecurityFilter)  This could also happen when running integration tests that don't properly call WebUtils.bind().
         //
         verifyException("org.jsecurity.web.WebUtils", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager();
      char[] charArray0 = new char[6];
      charArray0[0] = 'd';
      charArray0[1] = 'H';
      charArray0[2] = 'o';
      charArray0[3] = 'M';
      charArray0[4] = 'Z';
      charArray0[5] = '&';
      Integer integer0 = new Integer(40000);
      defaultWebSecurityManager0.setRememberMeCookieMaxAge(integer0);
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken("{{SHC:_G8NH", charArray0, false);
      try { 
        defaultWebSecurityManager0.login(usernamePasswordToken0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Authentication failed for token submission [org.jsecurity.authc.UsernamePasswordToken - {{SHC:_G8NH, rememberMe=false].  Possible unexpected error? (Typical or expected login exceptions should extend from AuthenticationException).
         //
         verifyException("org.jsecurity.authc.AbstractAuthenticator", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SimpleAccountRealm simpleAccountRealm0 = new SimpleAccountRealm();
      SimpleAccountRealm simpleAccountRealm1 = new SimpleAccountRealm();
      SimpleAccountRealm simpleAccountRealm2 = new SimpleAccountRealm();
      HashtableCacheManager hashtableCacheManager0 = new HashtableCacheManager();
      Cache cache0 = hashtableCacheManager0.getCache(": Could not finish element <");
      simpleAccountRealm2.setAuthorizationCache(cache0);
      Class<AuthenticationToken> class0 = AuthenticationToken.class;
      simpleAccountRealm2.setAuthenticationTokenClass(class0);
      SimpleAccountRealm simpleAccountRealm3 = new SimpleAccountRealm("HashtableCache [");
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager(simpleAccountRealm0);
      Integer integer0 = new Integer(325);
      // Undeclared exception!
      try { 
        defaultWebSecurityManager0.setRememberMeCookieMaxAge(integer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsecurity.web.DefaultWebSecurityManager", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.4558487091517962
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/jsecurity-ehcache/ehcache_auto_created_1392409281320");
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling.setPermissions(evoSuiteFile0, true, true, true);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-9);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager();
      boolean boolean0 = defaultWebSecurityManager0.isHttpSessionMode();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      LinkedHashSet<Realm> linkedHashSet0 = new LinkedHashSet<Realm>();
      SimpleAccountRealm simpleAccountRealm0 = new SimpleAccountRealm();
      linkedHashSet0.add(simpleAccountRealm0);
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager(linkedHashSet0);
      assertTrue(defaultWebSecurityManager0.isHttpSessionMode());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DefaultWebSecurityManager defaultWebSecurityManager0 = null;
      try {
        defaultWebSecurityManager0 = new DefaultWebSecurityManager((Realm) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Realm argument cannot be null
         //
         verifyException("org.jsecurity.mgt.RealmSecurityManager", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/jsecurity-ehcache/ehcache_auto_created_1392409281320");
      FileSystemHandling.setPermissions(evoSuiteFile0, false, false, false);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-9);
      byteArray0[1] = (byte)102;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager();
      // Undeclared exception!
      try { 
        defaultWebSecurityManager0.bind((Subject) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // No ServletRequest found in ThreadContext. Make sure WebUtils.bind() is being called. (typically called by JSecurityFilter)  This could also happen when running integration tests that don't properly call WebUtils.bind().
         //
         verifyException("org.jsecurity.web.WebUtils", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.7214787039105834
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/jsecurity-ehcache/ehcache_auto_created_1392409281320");
      FileSystemHandling.setPermissions(evoSuiteFile0, false, false, false);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-42);
      byteArray0[1] = (byte) (-50);
      byteArray0[2] = (byte)63;
      byteArray0[3] = (byte)1;
      byteArray0[4] = (byte) (-50);
      byteArray0[5] = (byte) (-50);
      byteArray0[6] = (byte) (-50);
      byteArray0[7] = (byte) (-50);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager();
      // Undeclared exception!
      try { 
        defaultWebSecurityManager0.setSessionMode("!1/");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid sessionMode [!1/].  Allowed values are public static final String constants in the org.jsecurity.web.DefaultWebSecurityManager class: 'http' or 'jsecurity', with 'http' being the default.
         //
         verifyException("org.jsecurity.web.DefaultWebSecurityManager", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ModularRealmAuthorizer modularRealmAuthorizer0 = new ModularRealmAuthorizer((Collection<Realm>) null);
      ModularRealmAuthorizer modularRealmAuthorizer1 = new ModularRealmAuthorizer((Collection<Realm>) null);
      ModularRealmAuthorizer modularRealmAuthorizer2 = new ModularRealmAuthorizer((Collection<Realm>) null);
      SimpleAccountRealm simpleAccountRealm0 = new SimpleAccountRealm("' being the default.");
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager(simpleAccountRealm0);
      // Undeclared exception!
      try { 
        defaultWebSecurityManager0.setSessionIdCookiePath("");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // The convenience passthrough methods for setting session id cookie attributes are only available when the underlying SessionManager implementation is org.jsecurity.web.session.DefaultWebSessionManager, which is enabled by default when the sessionMode is 'jsecurity'.
         //
         verifyException("org.jsecurity.web.DefaultWebSecurityManager", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-9);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byteArray0[1] = (byte)102;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager();
      // Undeclared exception!
      try { 
        defaultWebSecurityManager0.setSessionIdCookieSecure(false);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // The convenience passthrough methods for setting session id cookie attributes are only available when the underlying SessionManager implementation is org.jsecurity.web.session.DefaultWebSessionManager, which is enabled by default when the sessionMode is 'jsecurity'.
         //
         verifyException("org.jsecurity.web.DefaultWebSecurityManager", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.7214787039105834
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      SimpleAccountRealm simpleAccountRealm0 = new SimpleAccountRealm("&qhvU9,_A<Z>}@iS>^");
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager(simpleAccountRealm0);
      simpleAccountRealm0.getPermissionResolver();
      WildcardPermissionResolver wildcardPermissionResolver0 = new WildcardPermissionResolver();
      wildcardPermissionResolver0.resolvePermission("t3$pk@!|\"Fwf");
      PermissionResolver permissionResolver0 = simpleAccountRealm0.getPermissionResolver();
      defaultWebSecurityManager0.setPermissionResolver(permissionResolver0);
      LinkedHashSet<Realm> linkedHashSet0 = new LinkedHashSet<Realm>();
      // Undeclared exception!
      try { 
        defaultWebSecurityManager0.setSessionMode("t3$pk@!|\"Fwf");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid sessionMode [t3$pk@!|\"Fwf].  Allowed values are public static final String constants in the org.jsecurity.web.DefaultWebSecurityManager class: 'http' or 'jsecurity', with 'http' being the default.
         //
         verifyException("org.jsecurity.web.DefaultWebSecurityManager", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Integer integer0 = new Integer(10000);
      String string0 = "8Eq";
      SimplePrincipalCollection simplePrincipalCollection0 = new SimplePrincipalCollection(integer0, "8Eq");
      SimplePrincipalCollection simplePrincipalCollection1 = new SimplePrincipalCollection(simplePrincipalCollection0, "8Eq");
      SimplePrincipalCollection simplePrincipalCollection2 = new SimplePrincipalCollection(simplePrincipalCollection1);
      Class<Realm> class0 = Realm.class;
      Collection<Realm> collection0 = simplePrincipalCollection2.byType(class0);
      DefaultWebSecurityManager defaultWebSecurityManager0 = null;
      try {
        defaultWebSecurityManager0 = new DefaultWebSecurityManager(collection0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Realms collection argument cannot be empty.
         //
         verifyException("org.jsecurity.mgt.RealmSecurityManager", e);
      }
  }
}
