/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 08:15:28 GMT 2019
 */

package umd.cs.shop;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.StreamTokenizer;
import java.io.StringReader;
import java.util.Collection;
import java.util.Comparator;
import java.util.function.Consumer;
import java.util.function.Function;
import java.util.function.UnaryOperator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import umd.cs.shop.JSJshopVars;
import umd.cs.shop.JSPredicateForm;
import umd.cs.shop.JSSubstitution;
import umd.cs.shop.JSTerm;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JSPredicateForm_ESTest extends JSPredicateForm_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0730116670092564
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm("(");
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      JSJshopVars.flagLevel = 1;
      JSJshopVars.verticalL = 1;
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      jSPredicateForm0.toStr();
      System.setCurrentTimeMillis(1);
      JSPredicateForm jSPredicateForm1 = new JSPredicateForm();
      // Undeclared exception!
      try { 
        jSPredicateForm0.matches(jSPredicateForm1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.568092840374097
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm("(VwG#HX)f7dkmY*N");
      JSPredicateForm jSPredicateForm1 = jSPredicateForm0.clonePF();
      jSPredicateForm1.listIterator();
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.add((Object) "VwGlX");
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      jSSubstitution1.add((Object) jSPredicateForm0);
      JSSubstitution jSSubstitution2 = new JSSubstitution();
      StringReader stringReader0 = new StringReader("Y_2GB1");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm1 = new JSTerm(streamTokenizer0);
      jSTerm0.add((Object) jSTerm1);
      jSTerm0.applySubstitutionPF(jSSubstitution0);
      // Undeclared exception!
      try { 
        jSPredicateForm0.listIterator(6064);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 6064
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.7662197002411606
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm("(VwGlHX)f7dkmY*N");
      JSPredicateForm jSPredicateForm1 = jSPredicateForm0.clonePF();
      jSPredicateForm1.listIterator();
      jSPredicateForm1.standarizerPredicateForm();
      jSPredicateForm1.addAll((Collection) jSPredicateForm0);
      // Undeclared exception!
      try { 
        jSPredicateForm1.toStr();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to umd.cs.shop.JSTerm
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      jSPredicateForm0.print();
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      JSSubstitution jSSubstitution2 = new JSSubstitution();
      jSPredicateForm0.equals((JSPredicateForm) null);
      jSPredicateForm0.print();
      // Undeclared exception!
      try { 
        jSPredicateForm0.standarizerPredicateForm();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.4659497192528061
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StringReader stringReader0 = new StringReader("pumd~}");
      StringReader stringReader1 = new StringReader("Unexpected ) while reading Predicate");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader1);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSPredicateForm jSPredicateForm0 = jSTerm0.clonePF();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      streamTokenizer0.sval = "pumd~}";
      JSTerm jSTerm1 = new JSTerm();
      jSSubstitution0.add((Object) jSTerm1);
      // Undeclared exception!
      try { 
        jSTerm0.matches(jSPredicateForm0, jSSubstitution0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // umd.cs.shop.JSTerm cannot be cast to umd.cs.shop.JSPairVarTerm
         //
         verifyException("umd.cs.shop.JSSubstitution", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0067795890632527
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.add((Object) "rtx++5");
      jSTerm0.add((Object) null);
      char[] charArray0 = new char[10];
      charArray0[1] = 'd';
      charArray0[2] = '\\';
      jSTerm0.add((Object) "VHX");
      UnaryOperator<String> unaryOperator0 = UnaryOperator.identity();
      Function<Object, String> function0 = (Function<Object, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(function0).apply(any());
      jSTerm0.add((Object) null);
      UnaryOperator.identity();
      Function<Integer, String> function1 = unaryOperator0.compose((Function<? super Integer, ? extends String>) function0);
      Integer integer0 = new Integer((-2588));
      function1.apply(integer0);
      unaryOperator0.compose((Function<? super Integer, ? extends String>) function1);
      Function.identity();
      Function<Object, String> function2 = (Function<Object, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      unaryOperator0.compose((Function<? super Object, ? extends String>) function2);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSTerm jSTerm1 = new JSTerm();
      jSSubstitution0.add((Object) null);
      // Undeclared exception!
      try { 
        jSTerm0.applySubstitutionPF(jSSubstitution0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.669885755092003
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm("(VwGlX)f7dkmY*N");
      JSPredicateForm jSPredicateForm1 = jSPredicateForm0.clonePF();
      jSPredicateForm1.listIterator();
      jSPredicateForm1.standarizerPredicateForm();
      StringReader stringReader0 = new StringReader("(VwGlX)f7dkmY*N");
      JSTerm jSTerm0 = new JSTerm();
      JSPredicateForm jSPredicateForm2 = new JSPredicateForm("(VwGlX)f7dkmY*N");
      jSTerm0.add((Object) jSPredicateForm2);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSSubstitution0.add((Object) jSTerm0);
      UnaryOperator.identity();
      UnaryOperator<String> unaryOperator0 = UnaryOperator.identity();
      Function<Object, String> function0 = (Function<Object, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      unaryOperator0.compose((Function<? super Object, ? extends String>) function0);
      jSSubstitution0.replaceAll(unaryOperator0);
      jSPredicateForm2.standarizerPredicateForm();
      // Undeclared exception!
      try { 
        jSTerm0.equals(jSPredicateForm2);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // umd.cs.shop.JSPredicateForm cannot be cast to java.lang.String
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.7386545934205824
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm("(VwG#HX)f7dkmY*N");
      JSPredicateForm jSPredicateForm1 = jSPredicateForm0.clonePF();
      jSPredicateForm1.listIterator();
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.add((Object) "VwGlX");
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      jSPredicateForm0.standarizerPredicateForm();
      JSPredicateForm jSPredicateForm2 = jSPredicateForm0.clonePF();
      Object object0 = new Object();
      jSTerm0.add(object0);
      UnaryOperator<String> unaryOperator0 = UnaryOperator.identity();
      Function.identity();
      Function<Object, String> function0 = (Function<Object, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      unaryOperator0.compose((Function<? super Object, ? extends String>) function0);
      JSPredicateForm jSPredicateForm3 = jSPredicateForm2.standarizerPredicateForm();
      jSPredicateForm3.equals((JSPredicateForm) jSTerm0);
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.add((Object) "hrt9x++5");
      jSTerm0.add((Object) "hrt9x++5");
      char[] charArray0 = new char[7];
      charArray0[1] = 'd';
      charArray0[2] = 'R';
      String string0 = "VwGHX";
      jSTerm0.add((Object) "VwGHX");
      UnaryOperator<String> unaryOperator0 = UnaryOperator.identity();
      Function.identity();
      Function<Object, String> function0 = (Function<Object, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      unaryOperator0.compose((Function<? super Object, ? extends String>) function0);
      System.setCurrentTimeMillis(0L);
      // Undeclared exception!
      try { 
        jSTerm0.print();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to umd.cs.shop.JSTerm
         //
         verifyException("umd.cs.shop.JSTerm", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      int int0 = (-926);
      JSJshopVars.lessT = (-926);
      // Undeclared exception!
      try { 
        jSPredicateForm0.matches((JSPredicateForm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.9909065731902369
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.add((Object) "hrt9x++5");
      jSTerm0.add((Object) "hrt9x++5");
      // Undeclared exception!
      try { 
        jSTerm0.clonePF();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to umd.cs.shop.JSTerm
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.602361450451512
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm("(VwGlHX)f7dkmY*N");
      JSPredicateForm jSPredicateForm1 = jSPredicateForm0.clonePF();
      jSPredicateForm1.listIterator();
      jSPredicateForm1.standarizerPredicateForm();
      StringReader stringReader0 = new StringReader("(VwGlHX)f7dkmY*N");
      char[] charArray0 = new char[4];
      charArray0[0] = '2';
      charArray0[1] = 'U';
      charArray0[2] = 'F';
      charArray0[3] = '#';
      jSPredicateForm1.standarizerPredicateForm();
      jSPredicateForm0.toStr();
      JSPredicateForm jSPredicateForm2 = new JSPredicateForm();
      jSPredicateForm0.print();
      jSPredicateForm2.toStr();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSPredicateForm jSPredicateForm3 = jSPredicateForm0.applySubstitutionPF(jSSubstitution0);
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSPredicateForm jSPredicateForm4 = new JSPredicateForm(streamTokenizer0);
      JSPredicateForm jSPredicateForm5 = jSPredicateForm4.standarizerPredicateForm();
      jSPredicateForm3.print();
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.matches(jSPredicateForm3);
      JSPredicateForm jSPredicateForm6 = new JSPredicateForm("(VwGlHX)f7dkmY*N");
      jSPredicateForm5.equals(jSPredicateForm6);
      jSPredicateForm0.toStr();
      jSTerm0.standarizerPredicateForm();
      jSPredicateForm2.print();
      JSTerm jSTerm1 = null;
      try {
        jSTerm1 = new JSTerm(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSTerm", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.7476224947602566
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.add((Object) "hrt9x+u+h5wG");
      StringReader stringReader0 = new StringReader("hrt9x+u+h5wG");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm1 = new JSTerm(streamTokenizer0);
      JSPredicateForm jSPredicateForm0 = jSTerm1.standarizerPredicateForm();
      jSPredicateForm0.equals((JSPredicateForm) jSTerm0);
      streamTokenizer0.eolIsSignificant(true);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      UnaryOperator<Integer> unaryOperator0 = UnaryOperator.identity();
      jSSubstitution0.replaceAll(unaryOperator0);
      JSTerm jSTerm2 = new JSTerm();
      // Undeclared exception!
      try { 
        jSTerm2.applySubstitutionPF(jSSubstitution0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.0676032882216056
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      StringReader stringReader0 = new StringReader("(nABg8DIO`xy`EA");
      stringReader0.reset();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.lowerCaseMode(false);
      streamTokenizer0.ordinaryChars((-3474), 1410);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.6660762312824793
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm("(VwG#HX)f7dkmY*N");
      JSPredicateForm jSPredicateForm1 = jSPredicateForm0.clonePF();
      JSJshopVars.colon = 1;
      jSPredicateForm1.listIterator();
      JSTerm jSTerm0 = new JSTerm();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSPredicateForm1.clonePF();
      JSJshopVars.minus = 1;
      jSPredicateForm0.standarizerPredicateForm();
      // Undeclared exception!
      try { 
        jSTerm0.equals(jSPredicateForm0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.4154606670932566
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      StringReader stringReader0 = new StringReader("0.0");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      stringReader0.ready();
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.standarizerPredicateForm();
      jSTerm0.equals((JSPredicateForm) jSTerm0);
      streamTokenizer0.eolIsSignificant(true);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      UnaryOperator.identity();
      JSPredicateForm jSPredicateForm0 = jSTerm0.applySubstitutionPF(jSSubstitution0);
      jSTerm0.clonePF();
      jSSubstitution0.ensureCapacity((-2));
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      StreamTokenizer streamTokenizer2 = new StreamTokenizer(stringReader0);
      jSTerm0.matches(jSPredicateForm0, jSSubstitution0);
      System.setCurrentTimeMillis((-4));
      StringReader stringReader1 = new StringReader("lhx");
      StreamTokenizer streamTokenizer3 = new StreamTokenizer(stringReader1);
      JSPredicateForm jSPredicateForm1 = null;
      try {
        jSPredicateForm1 = new JSPredicateForm(streamTokenizer1);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.5102145737678567
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm("(VwGlHX)f7dkmY*N");
      JSPredicateForm jSPredicateForm1 = jSPredicateForm0.clonePF();
      jSPredicateForm1.listIterator();
      JSPredicateForm jSPredicateForm2 = jSPredicateForm1.standarizerPredicateForm();
      StringReader stringReader0 = new StringReader(":%~so9D=/w?WvOT+\u0001");
      stringReader0.reset();
      StringReader stringReader1 = new StringReader("(VwGlHX)f7dkmY*N");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader1);
      StringReader stringReader2 = new StringReader("vwglhx");
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader1);
      jSPredicateForm1.JSPredicateFormInit(streamTokenizer0);
      assertTrue(jSPredicateForm0.equals((Object)jSPredicateForm2));
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.add((Object) "hrt9x++5");
      jSTerm0.add((Object) "hrt9x++5");
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      jSSubstitution0.add((Object) "hrt9x++5");
      JSSubstitution jSSubstitution2 = new JSSubstitution();
      // Undeclared exception!
      try { 
        jSTerm0.toStr();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to umd.cs.shop.JSTerm
         //
         verifyException("umd.cs.shop.JSTerm", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSTerm jSTerm0 = new JSTerm();
      // Undeclared exception!
      try { 
        jSTerm0.print();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      String string0 = "hrt9x++5";
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      // Undeclared exception!
      try { 
        jSTerm0.matches((JSPredicateForm) null, jSSubstitution0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      // Undeclared exception!
      try { 
        jSTerm0.matches(jSPredicateForm0, jSSubstitution0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.234679199787727
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      StringReader stringReader0 = new StringReader(":%~so9D=/w?WvOT+\u0001");
      stringReader0.reset();
      stringReader0.markSupported();
      StringReader stringReader1 = new StringReader("(VwGlHX)f7dkmY*N");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader1);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm(streamTokenizer0);
      JSPredicateForm jSPredicateForm1 = new JSPredicateForm();
      jSPredicateForm1.ensureCapacity(2);
      jSPredicateForm0.equals(jSPredicateForm1);
      System.setCurrentTimeMillis((-674L));
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.7844015184229787
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm("(VwG#HX)f7dkmY*N");
      JSPredicateForm jSPredicateForm1 = jSPredicateForm0.clonePF();
      jSPredicateForm1.listIterator();
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.add((Object) "VwGlX");
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      jSSubstitution0.add((Object) jSPredicateForm0);
      JSSubstitution jSSubstitution2 = new JSSubstitution();
      JSSubstitution jSSubstitution3 = new JSSubstitution();
      JSPredicateForm jSPredicateForm2 = jSTerm0.clonePF();
      jSPredicateForm2.print();
      JSSubstitution jSSubstitution4 = new JSSubstitution();
      JSPredicateForm jSPredicateForm3 = jSTerm0.applySubstitutionPF(jSSubstitution2);
      jSPredicateForm3.clonePF();
      jSPredicateForm2.clear();
      jSPredicateForm3.clonePF();
      JSSubstitution jSSubstitution5 = new JSSubstitution();
      // Undeclared exception!
      try { 
        jSPredicateForm2.applySubstitutionPF(jSSubstitution1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.9811198961123817
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm("(VwGlHX)f7dkmY*N");
      JSPredicateForm jSPredicateForm1 = jSPredicateForm0.clonePF();
      jSPredicateForm1.listIterator();
      JSPredicateForm jSPredicateForm2 = jSPredicateForm1.standarizerPredicateForm();
      StringReader stringReader0 = new StringReader("(VwGlHX)f7dkmY*N");
      stringReader0.mark(3513);
      jSPredicateForm2.addAll((Collection) jSPredicateForm0);
      jSPredicateForm0.toStr();
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis((-1158L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-1158L));
      System.setCurrentTimeMillis((-1158L));
      // Undeclared exception!
      try { 
        jSPredicateForm2.print();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to umd.cs.shop.JSTerm
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      JSJshopVars.flagLevel = 1;
      System.setCurrentTimeMillis(0L);
      jSPredicateForm0.setSize(1);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      jSPredicateForm0.forEach(consumer0);
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-862L));
      System.setCurrentTimeMillis((-862L));
      // Undeclared exception!
      try { 
        jSPredicateForm0.print();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.6713672365734844
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm("(VwGlHX)f7dkmY*N");
      JSPredicateForm jSPredicateForm1 = jSPredicateForm0.clonePF();
      jSPredicateForm1.listIterator();
      jSPredicateForm1.standarizerPredicateForm();
      StringReader stringReader0 = new StringReader("(VwGlHX)f7dkmY*N");
      stringReader0.mark(3513);
      StringReader stringReader1 = new StringReader("(VwGlHX)f7dkmY*N");
      StringReader stringReader2 = new StringReader("(VwGlHX)f7dkmY*N");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader2);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSPredicateForm jSPredicateForm2 = jSTerm0.standarizerPredicateForm();
      JSPredicateForm jSPredicateForm3 = new JSPredicateForm();
      char[] charArray0 = new char[1];
      charArray0[0] = 'E';
      stringReader0.read(charArray0);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSPredicateForm3.matches(jSPredicateForm2, jSSubstitution0);
      System.setCurrentTimeMillis(1);
      // Undeclared exception!
      try { 
        jSPredicateForm3.standarizerPredicateForm();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.add((Object) "hrt9x+u+h5wG");
      StringReader stringReader0 = new StringReader("(nABg8DIO`xy`EA");
      stringReader0.reset();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      stringReader0.markSupported();
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm((String) null);
      assertEquals(0, jSPredicateForm0.size());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      // Undeclared exception!
      try { 
        jSTerm0.toStr();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.964532478280498
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      StringReader stringReader0 = new StringReader("(nABg8DIO`xy`EA");
      stringReader0.reset();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.ordinaryChar(2009);
      streamTokenizer0.slashStarComments(false);
      stringReader0.markSupported();
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      StringReader stringReader0 = new StringReader("{#?n");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      // Undeclared exception!
      try { 
        jSTerm0.JSPredicateFormInit(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      StringReader stringReader0 = new StringReader("bQ-f");
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      UnaryOperator<Integer> unaryOperator0 = UnaryOperator.identity();
      jSSubstitution0.replaceAll(unaryOperator0);
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm((StreamTokenizer) null);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.1346636088510653
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm("(VwGlHX)f7dkmY*N");
      assertFalse(jSPredicateForm0.isEmpty());
      
      JSPredicateForm jSPredicateForm1 = jSPredicateForm0.standarizerPredicateForm();
      jSPredicateForm1.listIterator();
      JSPredicateForm jSPredicateForm2 = jSPredicateForm1.standarizerPredicateForm();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      jSPredicateForm0.sort(comparator0);
      jSPredicateForm1.trimToSize();
      JSJshopVars.leftBrac = 1;
      jSPredicateForm2.matches(jSPredicateForm1);
      JSSubstitution jSSubstitution0 = jSPredicateForm0.matches(jSPredicateForm1);
      assertFalse(jSSubstitution0.fail());
      
      JSPredicateForm jSPredicateForm3 = jSPredicateForm1.clonePF();
      boolean boolean0 = jSPredicateForm1.equals(jSPredicateForm0);
      assertNotSame(jSPredicateForm1, jSPredicateForm3);
      assertTrue(boolean0);
      assertEquals(10, jSPredicateForm0.capacity());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.1370530951115194
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm("(VwGlHX)f7dkmY*N");
      JSPredicateForm jSPredicateForm1 = jSPredicateForm0.clonePF();
      jSPredicateForm1.listIterator();
      JSPredicateForm jSPredicateForm2 = jSPredicateForm1.standarizerPredicateForm();
      jSPredicateForm1.trimToSize();
      JSJshopVars.leftBrac = 1;
      jSPredicateForm2.matches(jSPredicateForm1);
      jSPredicateForm0.matches(jSPredicateForm1);
      JSPredicateForm jSPredicateForm3 = jSPredicateForm1.clonePF();
      jSPredicateForm3.remove((Object) jSPredicateForm1);
      boolean boolean0 = jSPredicateForm1.equals(jSPredicateForm0);
      assertTrue(boolean0);
      
      JSSubstitution jSSubstitution0 = jSPredicateForm0.matches(jSPredicateForm1);
      assertEquals(10, jSPredicateForm0.capacity());
      assertFalse(jSSubstitution0.fail());
      assertNotSame(jSPredicateForm1, jSPredicateForm2);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      StringReader stringReader0 = new StringReader("56lK");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSTerm jSTerm1 = new JSTerm(streamTokenizer0);
      JSSubstitution jSSubstitution1 = jSTerm0.matches((JSPredicateForm) jSTerm1, jSSubstitution0);
      assertTrue(jSSubstitution1.fail());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.026016522068678
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.add((Object) "rtx++5");
      jSTerm0.add((Object) null);
      JSTerm jSTerm1 = new JSTerm();
      jSTerm1.add((Object) "VwGlX");
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      jSSubstitution1.add((Object) null);
      JSSubstitution jSSubstitution2 = new JSSubstitution();
      JSSubstitution jSSubstitution3 = new JSSubstitution();
      JSPredicateForm jSPredicateForm0 = jSTerm1.applySubstitutionPF(jSSubstitution0);
      jSTerm1.clonePF();
      JSSubstitution jSSubstitution4 = new JSSubstitution();
      JSSubstitution jSSubstitution5 = new JSSubstitution();
      JSSubstitution jSSubstitution6 = new JSSubstitution();
      JSPredicateForm jSPredicateForm1 = jSPredicateForm0.applySubstitutionPF(jSSubstitution6);
      JSSubstitution jSSubstitution7 = jSTerm0.matches(jSPredicateForm0);
      assertTrue(jSSubstitution7.fail());
      assertNotSame(jSPredicateForm0, jSPredicateForm1);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      jSSubstitution0.add((Object) null);
      JSJshopVars.verticalL = (-75);
      jSPredicateForm0.addAll((Collection) jSSubstitution0);
      JSJshopVars.slash = (-75);
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      // Undeclared exception!
      try { 
        jSPredicateForm0.toStr();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.add((Object) "rtx++5");
      jSTerm0.add((Object) null);
      char[] charArray0 = new char[7];
      charArray0[1] = 'd';
      charArray0[2] = '\\';
      jSTerm0.add((Object) "VHX");
      UnaryOperator<String> unaryOperator0 = UnaryOperator.identity();
      Function<Object, String> function0 = (Function<Object, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(function0).apply(any());
      jSTerm0.add((Object) null);
      UnaryOperator.identity();
      Function<Integer, String> function1 = unaryOperator0.compose((Function<? super Integer, ? extends String>) function0);
      Integer integer0 = new Integer((-2588));
      function1.apply(integer0);
      Function<Object, Object> function2 = Function.identity();
      unaryOperator0.andThen((Function<? super String, ?>) function2);
      unaryOperator0.apply((String) null);
      unaryOperator0.compose((Function<? super Integer, ? extends String>) function1);
      Function.identity();
      Function<Object, String> function3 = (Function<Object, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      unaryOperator0.compose((Function<? super Object, ? extends String>) function3);
      // Undeclared exception!
      try { 
        jSTerm0.standarizerPredicateForm();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.9909065731902369
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      String string0 = "hrt9x++5";
      jSTerm0.add((Object) "hrt9x++5");
      jSTerm0.add((Object) "hrt9x++5");
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      jSSubstitution0.add((Object) "hrt9x++5");
      JSSubstitution jSSubstitution2 = new JSSubstitution();
      // Undeclared exception!
      try { 
        jSTerm0.applySubstitutionPF(jSSubstitution2);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to umd.cs.shop.JSTerm
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      // Undeclared exception!
      try { 
        jSTerm0.clonePF();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm("cy");
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      Integer integer0 = new Integer((-1113));
      jSTerm0.add((Object) integer0);
      // Undeclared exception!
      try { 
        jSTerm0.standarizerPredicateForm();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Integer cannot be cast to java.lang.String
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.0067795890632527
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.add((Object) "rtx++5");
      jSTerm0.add((Object) null);
      char[] charArray0 = new char[10];
      charArray0[1] = 'd';
      charArray0[2] = '\\';
      jSTerm0.add((Object) "VHX");
      UnaryOperator<String> unaryOperator0 = UnaryOperator.identity();
      Function<Object, String> function0 = (Function<Object, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(function0).apply(any());
      jSTerm0.add((Object) null);
      UnaryOperator.identity();
      Function<Integer, String> function1 = unaryOperator0.compose((Function<? super Integer, ? extends String>) function0);
      Integer integer0 = new Integer((-2588));
      function1.apply(integer0);
      unaryOperator0.compose((Function<? super Integer, ? extends String>) function1);
      Function.identity();
      Function<Object, String> function2 = (Function<Object, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      unaryOperator0.compose((Function<? super Object, ? extends String>) function2);
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      // Undeclared exception!
      try { 
        jSTerm0.clonePF();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }
}
