/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 07:41:42 GMT 2019
 */

package client.network;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import client.BomberClient;
import client.network.ClientMsgReceiver;
import java.awt.HeadlessException;
import java.net.Proxy;
import java.net.Socket;
import java.sql.BatchUpdateException;
import java.sql.SQLFeatureNotSupportedException;
import java.sql.SQLInvalidAuthorizationSpecException;
import java.sql.SQLTransactionRollbackException;
import java.sql.SQLTransientException;
import java.sql.SQLWarning;
import java.util.ArrayList;
import messages.Message;
import messages.global.GlobalChatMsg;
import messages.global.ScoreMsg;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.lang.MockThread;
import org.evosuite.runtime.mock.java.net.MockSocket;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ClientMsgReceiver_ESTest extends ClientMsgReceiver_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-97);
      byteArray0[1] = (byte) (-1);
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      byte[] byteArray1 = new byte[3];
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray1);
      Thread thread0 = MockThread.currentThread();
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("GastLogin nach Enter!", 62);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      MockThread mockThread0 = new MockThread();
      Thread[] threadArray0 = new Thread[9];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Thread.UncaughtExceptionHandler thread_UncaughtExceptionHandler0 = MockThread.getDefaultUncaughtExceptionHandler();
      MockThread.setDefaultUncaughtExceptionHandler(thread_UncaughtExceptionHandler0);
      MockThread.reset();
      threadArray0[0] = (Thread) mockThread0;
      threadArray0[1] = thread0;
      threadArray0[2] = thread0;
      threadArray0[3] = thread0;
      threadArray0[4] = (Thread) mockThread0;
      threadArray0[5] = (Thread) mockThread0;
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      SQLInvalidAuthorizationSpecException sQLInvalidAuthorizationSpecException0 = new SQLInvalidAuthorizationSpecException("-", ",Z'_cm_M>h1N@HidcK-");
      System.setCurrentTimeMillis((byte) (-97));
      ArrayList<GlobalChatMsg> arrayList0 = new ArrayList<GlobalChatMsg>();
      ScoreMsg scoreMsg0 = new ScoreMsg(arrayList0);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.processMsg(scoreMsg0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("messages.global.ScoreMsg", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      BomberClient.getInstance();
      String string0 = "wB[`j)62Sp'";
      MockSocket mockSocket0 = new MockSocket();
      BomberClient bomberClient0 = BomberClient.getInstance();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, bomberClient0);
      GlobalChatMsg globalChatMsg0 = new GlobalChatMsg("wB[`j)62Sp'", "wB[`j)62Sp'");
      // Undeclared exception!
      try { 
        clientMsgReceiver0.processMsg(globalChatMsg0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)24;
      byteArray0[2] = (byte) (-81);
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("", 1);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      BomberClient bomberClient0 = BomberClient.getInstance();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, bomberClient0);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.closeConnection();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("client.network.ClientMsgReceiver", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Proxy proxy0 = Proxy.NO_PROXY;
      MockSocket mockSocket0 = new MockSocket(proxy0);
      BomberClient.getInstance();
      int[] intArray0 = new int[3];
      intArray0[0] = 160;
      intArray0[1] = 2624;
      intArray0[2] = 0;
      BatchUpdateException batchUpdateException0 = new BatchUpdateException("wB[`j)62Sp'", intArray0);
      SQLWarning sQLWarning0 = new SQLWarning("PQfn", "n_;E`)uu.eAtU[/", (-328), batchUpdateException0);
      SQLTransactionRollbackException sQLTransactionRollbackException0 = new SQLTransactionRollbackException("wB[`j)62Sp'", "P4%k9Fgt0;]ID", 160, batchUpdateException0);
      long[] longArray0 = new long[0];
      BatchUpdateException batchUpdateException1 = new BatchUpdateException("", "PANDeIrMN.T32ex8", 0, longArray0, sQLWarning0);
      SQLWarning sQLWarning1 = new SQLWarning("Incorrect server port specified! Using default...", "", (-328));
      SQLWarning sQLWarning2 = new SQLWarning();
      SQLFeatureNotSupportedException sQLFeatureNotSupportedException0 = new SQLFeatureNotSupportedException("PANDeIrMN.T32ex8", sQLWarning2);
      SQLTransientException sQLTransientException0 = new SQLTransientException(sQLTransactionRollbackException0);
      BomberClient bomberClient0 = BomberClient.getInstance();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, bomberClient0);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.handleConnectionLoss(batchUpdateException0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      byte[] byteArray0 = new byte[3];
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      Thread thread0 = MockThread.currentThread();
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("GastLogin nach Enter!", 62);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      MockThread mockThread0 = new MockThread();
      Thread[] threadArray0 = new Thread[3];
      threadArray0[0] = (Thread) mockThread0;
      threadArray0[1] = (Thread) mockThread0;
      threadArray0[2] = thread0;
      MockThread.enumerate(threadArray0);
      MockThread.dumpStack();
      BomberClient bomberClient0 = BomberClient.getInstance();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, bomberClient0);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.displayErrorMessage();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("Couldn't close input stream", 1);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      byte[] byteArray0 = new byte[3];
      MockThread.currentThread();
      EvoSuiteRemoteAddress evoSuiteRemoteAddress1 = new EvoSuiteRemoteAddress("GastLogin nach Enter!", 62);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress1);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress1);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      MockThread mockThread0 = new MockThread();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      MockThread.reset();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      SQLInvalidAuthorizationSpecException sQLInvalidAuthorizationSpecException0 = new SQLInvalidAuthorizationSpecException("<HTML>Cannot connect to server ", "<HTML>Cannot connect to server ");
      int int0 = 210;
      // Undeclared exception!
      try { 
        clientMsgReceiver0.handleConnectionLoss(sQLInvalidAuthorizationSpecException0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Proxy proxy0 = Proxy.NO_PROXY;
      MockSocket mockSocket0 = new MockSocket(proxy0);
      BomberClient bomberClient0 = BomberClient.getInstance();
      Thread thread0 = MockThread.currentThread();
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("GastLogin nach Enter!", 62);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      MockThread mockThread0 = new MockThread("wB[`j)62Sp'");
      Thread[] threadArray0 = new Thread[6];
      threadArray0[0] = thread0;
      threadArray0[1] = thread0;
      threadArray0[2] = thread0;
      threadArray0[3] = (Thread) mockThread0;
      ThreadGroup threadGroup0 = mock(ThreadGroup.class, new ViolatedAssumptionAnswer());
      MockThread mockThread1 = new MockThread(threadGroup0, thread0, "wB[`j)62Sp'", 71L);
      threadArray0[4] = (Thread) mockThread1;
      MockThread mockThread2 = new MockThread("<dy");
      threadArray0[5] = (Thread) mockThread2;
      MockThread.enumerate(threadArray0);
      MockThread.dumpStack();
      ClientMsgReceiver clientMsgReceiver0 = null;
      try {
        clientMsgReceiver0 = new ClientMsgReceiver((Socket) null, bomberClient0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("common.network.MsgReceiver", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Proxy proxy0 = Proxy.NO_PROXY;
      MockSocket mockSocket0 = new MockSocket(proxy0);
      BomberClient bomberClient0 = BomberClient.getInstance();
      int[] intArray0 = new int[3];
      intArray0[0] = 160;
      intArray0[1] = 2624;
      intArray0[2] = 160;
      BatchUpdateException batchUpdateException0 = new BatchUpdateException("wB[`j)62Sp'", intArray0);
      SQLTransactionRollbackException sQLTransactionRollbackException0 = new SQLTransactionRollbackException("\"", "", 160, batchUpdateException0);
      long[] longArray0 = new long[1];
      longArray0[0] = (long) 160;
      BatchUpdateException batchUpdateException1 = new BatchUpdateException("\"", "ipP60P[Qm.", 2261, longArray0, batchUpdateException0);
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, bomberClient0);
      clientMsgReceiver0.processMsg((Message) null);
      SQLWarning sQLWarning0 = new SQLWarning("/GAMEROUND SCORES", "TWcPWTiN~$tEx6JS", (-15));
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[4];
      StackTraceElement stackTraceElement0 = new StackTraceElement("", "2]c$Y", "ipP60P[Qm.", (-1719));
      stackTraceElementArray0[0] = stackTraceElement0;
      StackTraceElement stackTraceElement1 = new StackTraceElement("messages.round.NewTileMsg", "wB[`j)62Sp'", "qx*iXSG!j_sZ", 160);
      stackTraceElementArray0[1] = stackTraceElement1;
      StackTraceElement stackTraceElement2 = new StackTraceElement("M=5>x?j`", "TWcPWTiN~$tEx6JS", "", 193);
      stackTraceElementArray0[2] = stackTraceElement2;
      StackTraceElement stackTraceElement3 = new StackTraceElement("w~X(", "/GAMEROUND SCORES", "<|Wc", 269);
      stackTraceElementArray0[3] = stackTraceElement3;
      sQLTransactionRollbackException0.setStackTrace(stackTraceElementArray0);
      SQLFeatureNotSupportedException sQLFeatureNotSupportedException0 = new SQLFeatureNotSupportedException((String) null, sQLTransactionRollbackException0);
      SQLTransientException sQLTransientException0 = new SQLTransientException(sQLFeatureNotSupportedException0);
      assertNull(sQLTransientException0.getSQLState());
  }
}
