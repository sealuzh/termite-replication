/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 08:20:43 GMT 2019
 */

package freemind.controller;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import freemind.controller.Controller;
import freemind.main.FreeMindMain;
import freemind.modes.browsemode.BrowseController;
import freemind.modes.mindmapmode.MindMapMode;
import freemind.modes.schememode.SchemeMode;
import java.awt.Color;
import java.awt.HeadlessException;
import java.awt.event.ContainerEvent;
import java.io.File;
import java.util.Collection;
import javax.swing.JInternalFrame;
import javax.swing.JPasswordField;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextArea;
import javax.swing.plaf.metal.MetalSplitPaneUI;
import javax.swing.table.DefaultTableColumnModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.tree.DefaultTreeCellRenderer;
import org.apache.batik.ext.awt.g2d.GraphicContext;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.hsqldb.lib.FileUtil;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Controller_ESTest extends Controller_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Controller.DisposeOnClose controller_DisposeOnClose0 = new Controller.DisposeOnClose();
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      int int0 = (-466);
      File file0 = null;
      SchemeMode schemeMode0 = new SchemeMode();
      schemeMode0.getController();
      Controller.CloseAction controller_CloseAction0 = null;
      try {
        controller_CloseAction0 = new Controller.CloseAction((Controller) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("freemind.controller.Controller$CloseAction", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.786724494755577
  */
  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer0.getTextNonSelectionColor();
      MetalSplitPaneUI metalSplitPaneUI0 = new MetalSplitPaneUI();
      Controller controller0 = null;
      try {
        controller0 = new Controller((FreeMindMain) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("freemind.controller.Controller", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.786724494755577
  */
  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      JTextArea jTextArea0 = new JTextArea();
      Object[] objectArray0 = new Object[9];
      objectArray0[2] = (Object) jTextArea0;
      objectArray0[3] = (Object) null;
      objectArray0[4] = (Object) jTextArea0;
      objectArray0[5] = (Object) jTextArea0;
      objectArray0[6] = (Object) null;
      objectArray0[7] = (Object) null;
      Object object0 = new Object();
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(objectArray0, 1832);
      DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
      JTable jTable0 = new JTable(defaultTableModel0, defaultTableColumnModel0);
      jTable0.getGridColor();
      float[] floatArray0 = new float[6];
      floatArray0[0] = (float) 0;
      Controller controller0 = null;
      try {
        controller0 = new Controller((FreeMindMain) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("freemind.controller.Controller", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Controller.Closer controller_Closer0 = new Controller.Closer();
      MindMapMode mindMapMode0 = new MindMapMode();
      BrowseController browseController0 = null;
      try {
        browseController0 = new BrowseController(mindMapMode0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("freemind.modes.ControllerAdapter", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Controller.LocalLinkConverter controller_LocalLinkConverter0 = Controller.localDocumentationLinkConverter;
      Collection collection0 = Controller.getPropertyChangeListeners();
      assertNotNull(collection0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Controller.DisposeOnClose controller_DisposeOnClose0 = new Controller.DisposeOnClose();
      String string0 = null;
      JPasswordField jPasswordField0 = new JPasswordField((String) null);
      ContainerEvent containerEvent0 = new ContainerEvent(jPasswordField0, (-466), jPasswordField0);
      containerEvent0.setSource((Object) null);
      // Undeclared exception!
      try { 
        controller_DisposeOnClose0.componentHidden(containerEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("freemind.controller.Controller$DisposeOnClose", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      FileUtil fileUtil0 = FileUtil.getDefaultInstance();
      File file0 = fileUtil0.canonicalFile("$lOHK5G");
      MockFile mockFile0 = new MockFile(file0, "");
      GraphicContext graphicContext0 = new GraphicContext();
      Color color0 = graphicContext0.getBackground();
      JInternalFrame jInternalFrame0 = new JInternalFrame();
      JInternalFrame jInternalFrame1 = new JInternalFrame("", false, true, true);
      jInternalFrame1.getFrameIcon();
      float[] floatArray0 = new float[9];
      floatArray0[0] = (-6813.4688F);
      floatArray0[1] = 703.8F;
      floatArray0[2] = (-2961.2356F);
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, (byte[]) null);
      floatArray0[3] = 1864.0F;
      floatArray0[4] = 0.0F;
      floatArray0[5] = 1685.0483F;
      floatArray0[6] = 0.0F;
      floatArray0[7] = 1422.0785F;
      floatArray0[8] = 1315.0F;
      color0.getColorComponents(floatArray0);
      JScrollPane jScrollPane0 = new JScrollPane();
      Controller.getCommonJColorChooser();
      jScrollPane0.getVerticalScrollBar();
      try { 
        Controller.showCommonJColorChooserDialog(jScrollPane0, "n7z]eERmF\"X=nv$rz", color0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }
}
