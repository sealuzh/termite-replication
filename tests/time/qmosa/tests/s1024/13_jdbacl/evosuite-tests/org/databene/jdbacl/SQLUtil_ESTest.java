/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 08:06:11 GMT 2019
 */

package org.databene.jdbacl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintWriter;
import java.net.URI;
import java.nio.CharBuffer;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import org.apache.derby.iapi.store.raw.xact.RawTransaction;
import org.databene.commons.AssertionError;
import org.databene.commons.version.VersionNumber;
import org.databene.jdbacl.NameSpec;
import org.databene.jdbacl.SQLUtil;
import org.databene.jdbacl.model.CompositeDBObject;
import org.databene.jdbacl.model.DBCatalog;
import org.databene.jdbacl.model.DBColumn;
import org.databene.jdbacl.model.DBConstraint;
import org.databene.jdbacl.model.DBDataType;
import org.databene.jdbacl.model.DBForeignKeyConstraint;
import org.databene.jdbacl.model.DBNotNullConstraint;
import org.databene.jdbacl.model.DBObject;
import org.databene.jdbacl.model.DBPrimaryKeyConstraint;
import org.databene.jdbacl.model.DBSchema;
import org.databene.jdbacl.model.DBTable;
import org.databene.jdbacl.model.DBUniqueConstraint;
import org.databene.jdbacl.model.DefaultDBColumn;
import org.databene.jdbacl.model.DefaultDBTable;
import org.databene.jdbacl.model.DefaultDatabase;
import org.databene.jdbacl.model.TableContainer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.hsqldb.rowio.RowOutputBinary;
import org.junit.runner.RunWith;
import org.postgresql.ds.PGConnectionPoolDataSource;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SQLUtil_ESTest extends SQLUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.293760185886937
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = "";
      StringBuilder stringBuilder0 = new StringBuilder("");
      SQLUtil.addRequiredCondition("", stringBuilder0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      String string1 = "alter table";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("E\"x]@3\"UUR4F$uFP");
      DBDataType dBDataType0 = DBDataType.getInstance(90000, "E\"x]@3\"UUR4F$uFP");
      Integer integer0 = RawTransaction.COMMIT;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("E\"x]@3\"UUR4F$uFP", defaultDBTable0, dBDataType0, integer0);
      stringBuilder0.append((Object) null);
      String string2 = "TAZ?aEbZX\"58@Pg7g";
      SQLUtil.addOptionalCondition("", stringBuilder0);
      SQLUtil.mutatesStructure("E^^pz8j=0`+>6WE");
      String string3 = "/PtvM}z";
      // Undeclared exception!
      try { 
        SQLUtil.mutatesDataOrStructure((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DBCatalog dBCatalog0 = new DBCatalog();
      DBCatalog dBCatalog1 = new DBCatalog();
      DBSchema dBSchema0 = new DBSchema("TRANSACTION_TABLE", dBCatalog0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("TRANSACTION_TABLE", dBSchema0);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "cv<-";
      stringArray0[1] = "truncate";
      stringArray0[2] = "tvYG#5l!ON\"{qT{";
      stringArray0[3] = "tvYG#5l!ON\"{qT{";
      stringArray0[5] = ")rOk2K]<$8W:t8";
      stringArray0[6] = "}sE";
      stringArray0[7] = "_SqQ~{SfWz{0IvUMz";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, ")rOk2K]<$8W:t8", false, stringArray0);
      String string0 = SQLUtil.typeAndName(dBCatalog0);
      assertNotNull(string0);
      assertEquals("catalog null", string0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = "call";
      SQLUtil.isProcedureCall("call");
      String string1 = "&S\\Sy";
      Vector<Object> vector0 = new Vector<Object>();
      VersionNumber versionNumber0 = new VersionNumber(vector0);
      DefaultDatabase defaultDatabase0 = new DefaultDatabase("&SSy", "call", versionNumber0);
      String string2 = " AND ";
      // Undeclared exception!
      try { 
        defaultDatabase0.getTable(" AND ");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Table ' AND '
         //
         verifyException("org.databene.jdbacl.model.DefaultDatabase", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String string0 = "truncate";
      SQLUtil.substituteMarkers("delete", "truncate", "delete");
      SQLUtil.removeComments("truncate");
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnTypeWithSize((DBColumn) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      SQLUtil.normalize("updateorg.firebirdsql.jdbc.fbblob", true);
      // Undeclared exception!
      try { 
        DBDataType.getInstance("A/0^ ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.model.DBDataType", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.9739624577918846
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)18;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("alter table");
      DBDataType dBDataType0 = DBDataType.getInstance((int) (byte)5, "truncate");
      Integer integer0 = RawTransaction.COMMIT;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("truncate", defaultDBTable0, dBDataType0, integer0);
      StringBuilder stringBuilder1 = stringBuilder0.append((Object) defaultDBColumn0);
      StringBuilder stringBuilder2 = SQLUtil.addOptionalCondition("TAZ?aEbZX\"58@Pg7g", stringBuilder1);
      SQLUtil.mutatesStructure("cbt{_?{s/j%K-$r");
      SQLUtil.mutatesDataOrStructure("/PtvM}z");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "TAZ?aEbZX\"58@Pg7g";
      stringArray0[1] = "/PtvM}z";
      stringArray0[2] = "org.postgresql.ds.PGPooledConnection";
      defaultDBColumn0.setName("^+0-z");
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "TAZ?aEbZX\"58@Pg7g", false, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      SQLUtil.appendConstraintName((DBConstraint) dBUniqueConstraint0, stringBuilder2, nameSpec0);
      assertEquals("truncate : TRUNCATE(0) or TAZ?aEbZX\"58@Pg7g", stringBuilder1.toString());
      
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      SQLUtil.isProcedureCall("alter table");
      String string0 = SQLUtil.renderQuery(defaultDBTable0, stringArray0, stringArray0);
      assertEquals("SELECT * FROM alter table WHERE TAZ?aEbZX\"58@Pg7g = 'TAZ?aEbZX\"58@Pg7g' AND /PtvM}z = '/PtvM}z' AND org.postgresql.ds.PGPooledConnection = 'org.postgresql.ds.PGPooledConnection'", string0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.1893890962327722
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String string0 = "/@R*now32N~s131pm:";
      SQLUtil.normalize("/@R*now32N~s131pm:", true);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "/@R*now32N~s131pm:";
      String string1 = null;
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("\u0001\u017F");
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, (String) null, true, stringArray0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      SQLUtil.ukSpec(dBPrimaryKeyConstraint0, nameSpec0);
      SQLUtil.constraintName(dBPrimaryKeyConstraint0);
      StringBuilder stringBuilder0 = SQLUtil.createConstraintSpecBuilder(dBPrimaryKeyConstraint0, nameSpec0);
      int int0 = 14;
      int int1 = (-2509);
      // Undeclared exception!
      try { 
        stringBuilder0.insert(14, 14);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 14
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DBForeignKeyConstraint dBForeignKeyConstraint0 = null;
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.fkSpec((DBForeignKeyConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SQLUtil.normalize("'E_", true);
      TableContainer tableContainer0 = new TableContainer("}(");
      FileSystemHandling.shouldAllThrowIOExceptions();
      URI uRI0 = MockURI.aFileURI;
      MockFile mockFile0 = new MockFile(uRI0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      mockPrintWriter0.append((CharSequence) "}(");
      // Undeclared exception!
      try { 
        DBDataType.getInstance("alter materialized view");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.model.DBDataType", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0794057662397671
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String string0 = "6lx(G,,wo<B";
      SQLUtil.normalize("6lx(G,,wo<B", true);
      SQLUtil.substituteMarkers("6lx (G,, wo < B", "(*Yy2r4", "6lx (G,, wo < B");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("(*Yy2r4");
      String[] stringArray0 = null;
      // Undeclared exception!
      try { 
        SQLUtil.renderQuery(defaultDBTable0, (String[]) null, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.9487205928347628
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringBuilder stringBuilder0 = new StringBuilder("");
      StringBuilder stringBuilder1 = SQLUtil.addRequiredCondition("", stringBuilder0);
      stringBuilder1.reverse();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      PGConnectionPoolDataSource pGConnectionPoolDataSource0 = new PGConnectionPoolDataSource();
      pGConnectionPoolDataSource0.setTcpKeepAlive(true);
      PGConnectionPoolDataSource pGConnectionPoolDataSource1 = new PGConnectionPoolDataSource();
      pGConnectionPoolDataSource1.setDefaultAutoCommit(true);
      Integer integer0 = new Integer(90066);
      SQLUtil.renderValue(stringBuilder1);
      SQLUtil.isDDL("");
      // Undeclared exception!
      try { 
        SQLUtil.renderColumn((DBColumn) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.4471627089619605
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PGConnectionPoolDataSource pGConnectionPoolDataSource0 = new PGConnectionPoolDataSource();
      pGConnectionPoolDataSource0.getLogWriter();
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("create table ", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      pGConnectionPoolDataSource0.setTcpKeepAlive(false);
      pGConnectionPoolDataSource0.setDefaultAutoCommit(true);
      URI uRI0 = MockURI.aFileURI;
      MockFile mockFile0 = new MockFile(uRI0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      char[] charArray0 = new char[2];
      charArray0[0] = '|';
      charArray0[1] = '?';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      mockPrintWriter0.append((CharSequence) charBuffer0);
      mockFile0.createNewFile();
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("drop table");
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      SQLUtil.renderCreateTable(defaultDBTable0, true, nameSpec0, mockPrintWriter0);
      String[] stringArray0 = new String[0];
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      // Undeclared exception!
      try { 
        SQLUtil.isDML((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.0557213084850234
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SQLUtil.isDDL("0Q{TB?ea");
      SQLUtil.normalize("0Q{TB?ea", true);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "0Q{TB?ea";
      stringArray0[1] = "aldsum";
      stringArray0[2] = "0Q {  TB ? ea";
      stringArray0[3] = ",,9M]lo\"5*e]?";
      stringArray0[4] = "[O{.WnfT1";
      stringArray0[5] = "0Q {  TB ? ea";
      stringArray0[6] = "0Q {  TB ? ea";
      stringArray0[7] = "0Q {  TB ? ea";
      SQLUtil.renderColumnNames(stringArray0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("l_m{S*lU{)Sc!R?,");
      String string0 = "!'9\\![";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "!'9![", true, stringArray0);
      defaultDBTable0.toString();
      defaultDBTable0.getCheckConstraints();
      NameSpec nameSpec0 = NameSpec.NEVER;
      SQLUtil.createConstraintSpecBuilder(dBUniqueConstraint0, nameSpec0);
      SQLUtil.parseColumnTypeAndSize("l_m{S*lU{)Sc!R?,");
      SQLUtil.leftJoin((String) null, stringArray0, "[O{.WnfT1", "select", stringArray0);
      Vector<DBColumn> vector0 = new Vector<DBColumn>();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) vector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.4399756932787802
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DBCatalog dBCatalog0 = new DBCatalog();
      DBSchema dBSchema0 = new DBSchema("/@R*now32N~s131pm:", dBCatalog0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("truncate", dBSchema0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "/@R*now32N~s131pm:";
      stringArray0[1] = "}sE";
      stringArray0[2] = "/@R*now32N~s131pm:";
      stringArray0[3] = "z]Z?@@q3-UhMg<^yoy6";
      stringArray0[4] = "tvYG#5l!ON\"{qT{";
      stringArray0[5] = "}sE";
      stringArray0[6] = "truncate";
      stringArray0[7] = "cv<-";
      stringArray0[8] = "truncate";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "truncate", false, stringArray0);
      String string0 = SQLUtil.typeAndName(dBUniqueConstraint0);
      assertNotNull(string0);
      assertEquals("unique constraint truncate", string0);
      
      NameSpec nameSpec0 = NameSpec.NEVER;
      StringBuilder stringBuilder0 = SQLUtil.createConstraintSpecBuilder(dBUniqueConstraint0, nameSpec0);
      assertEquals("", stringBuilder0.toString());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.6645805495754376
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "b,$H";
      stringArray0[2] = "6lx(G,,wo<B";
      stringArray0[3] = "6lx(G,,wo<B";
      stringArray0[4] = "6lx(G,,wo<B";
      stringArray0[5] = "6lx(G,,wo<B";
      String[] stringArray1 = new String[2];
      stringArray1[0] = "renamealdumc5ukw";
      stringArray1[1] = "renamealdumc5ukw";
      String string0 = SQLUtil.renderColumnListWithTableName("renamealdumc5ukw", stringArray1);
      assertEquals("renamealdumc5ukw.renamealdumc5ukw, renamealdumc5ukw.renamealdumc5ukw", string0);
      
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("exec");
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      URI uRI0 = MockURI.aFileURI;
      MockFile mockFile0 = new MockFile(uRI0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      mockPrintWriter0.append((CharSequence) "renamealdumc5ukw");
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "renamealdumc5ukw", true, stringArray1);
      String string1 = SQLUtil.ukSpec(dBPrimaryKeyConstraint0, nameSpec0);
      assertEquals("CONSTRAINT renamealdumc5ukw UNIQUE (renamealdumc5ukw, renamealdumc5ukw)", string1);
      
      String string2 = SQLUtil.constraintName(dBPrimaryKeyConstraint0);
      assertEquals("CONSTRAINT renamealdumc5ukw ", string2);
      
      NameSpec nameSpec1 = NameSpec.ALWAYS;
      StringBuilder stringBuilder0 = SQLUtil.createConstraintSpecBuilder(dBPrimaryKeyConstraint0, nameSpec1);
      assertEquals("CONSTRAINT renamealdumc5ukw ", stringBuilder0.toString());
      
      String string3 = SQLUtil.leftJoin("'NOLOGGING'", stringArray1, "bv7y<4*j5E", "yj4", stringArray0);
      assertEquals("left join bv7y<4*j5E as yj4 on 'NOLOGGING'.renamealdumc5ukw = yj4.b,$H and 'NOLOGGING'.renamealdumc5ukw = yj4.null", string3);
      
      String string4 = SQLUtil.renderWhereClause(stringArray0, stringArray0);
      assertEquals("b,$H = 'b,$H' AND null = null AND 6lx(G,,wo<B = '6lx(G,,wo<B' AND 6lx(G,,wo<B = '6lx(G,,wo<B' AND 6lx(G,,wo<B = '6lx(G,,wo<B' AND 6lx(G,,wo<B = '6lx(G,,wo<B' AND null = null AND null = null AND null = null", string4);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.6999267696231979
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SQLUtil.isDDL(" and ");
      String[] stringArray0 = null;
      String string0 = "mY.!*x<N\\y!sqmwb+Xv";
      // Undeclared exception!
      try { 
        SQLUtil.leftJoin(" and ", (String[]) null, "mY.!*x<Ny!sqmwb+Xv", "mY.!*x<Ny!sqmwb+Xv", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.7759123045454068
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      PGConnectionPoolDataSource pGConnectionPoolDataSource0 = new PGConnectionPoolDataSource();
      pGConnectionPoolDataSource0.getLogWriter();
      pGConnectionPoolDataSource0.setSocketTimeout((-953));
      pGConnectionPoolDataSource0.setTcpKeepAlive(false);
      boolean boolean0 = SQLUtil.isDDL("alter materialized viewunable to load the class { 0 } responsible for the datatype { 1 }");
      boolean boolean1 = SQLUtil.isQuery("getMetaData()");
      assertFalse(boolean1 == boolean0);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "alter materialized viewunable to load the class { 0 } responsible for the datatype { 1 }";
      stringArray0[1] = "alter materialized viewunable to load the class { 0 } responsible for the datatype { 1 }";
      String string0 = SQLUtil.leftJoin("getMetaData()", stringArray0, "getMetaData()", "getMetaData()", stringArray0);
      assertEquals("left join getMetaData() as getMetaData() on getMetaData().alter materialized viewunable to load the class { 0 } responsible for the datatype { 1 } = getMetaData().alter materialized viewunable to load the class { 0 } responsible for the datatype { 1 } and getMetaData().alter materialized viewunable to load the class { 0 } responsible for the datatype { 1 } = getMetaData().alter materialized viewunable to load the class { 0 } responsible for the datatype { 1 }", string0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      String string0 = "8FR)=";
      DBCatalog dBCatalog0 = new DBCatalog();
      // Undeclared exception!
      try { 
        SQLUtil.join((String) null, "8FR)=", (String[]) null, "drop materialized view", (String) null, (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SQLUtil.parseColumnTypeAndSize(",@^o!dqUUS)hu{EOl");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("");
      defaultDBTable0.getColumns();
      String[] stringArray0 = new String[3];
      stringArray0[0] = ",@^o!dqUUS)hu{EOl";
      stringArray0[1] = ",@^o!dqUUS)hu{EOl";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, ",@^o!dqUUS)hu{EOl", false, stringArray0);
      DBCatalog dBCatalog0 = new DBCatalog();
      String string0 = "H%qBGX>'UT}T";
      dBCatalog0.getTable("H%qBGX>'UT}T", false);
      int int0 = (-2033);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn(",@^o!dqUUS)hu{EOl", (DBTable) null, (-2033), "G=");
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0, (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.8442266465293593
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("");
      SQLUtil.addRequiredCondition("", stringBuilder0);
      String[] stringArray0 = new String[11];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      DBSchema dBSchema0 = new DBSchema("");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("hVAUIFtBhB>DnIU+Yu", dBSchema0);
      Integer integer0 = RawTransaction.ABORT;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("V+~y#a/H4aru<#b", defaultDBTable0, (-627), "P7Jw,G/![g'5&");
      SQLUtil.renderColumnListWithTableName("drop index", stringArray0);
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) "";
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause(stringArray0, objectArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.1091569326270454
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SQLUtil.normalize("Unable to load the class {0} responsible for the datatype {1}", false);
      String string0 = SQLUtil.normalize("Unable to load the class {0} responsible for the datatype {1}", false);
      assertEquals("Unable to load the class { 0 } responsible for the datatype { 1 }", string0);
      
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "CV<-";
      stringArray0[1] = "Unable to load the class {0} responsible for the datatype {1}";
      stringArray0[2] = "Unable to load the class { 0 } responsible for the datatype { 1 }";
      stringArray0[3] = "Unable to load the class { 0 } responsible for the datatype { 1 }";
      stringArray0[4] = "Unable to load the class { 0 } responsible for the datatype { 1 }";
      stringArray0[5] = "(*Yy2r4";
      String string1 = SQLUtil.renderQuery(defaultDBTable0, stringArray0, stringArray0);
      assertEquals("SELECT * FROM null WHERE CV<- = 'CV<-' AND Unable to load the class {0} responsible for the datatype {1} = 'Unable to load the class {0} responsible for the datatype {1}' AND Unable to load the class { 0 } responsible for the datatype { 1 } = 'Unable to load the class { 0 } responsible for the datatype { 1 }' AND Unable to load the class { 0 } responsible for the datatype { 1 } = 'Unable to load the class { 0 } responsible for the datatype { 1 }' AND Unable to load the class { 0 } responsible for the datatype { 1 } = 'Unable to load the class { 0 } responsible for the datatype { 1 }' AND (*Yy2r4 = '(*Yy2r4'", string1);
      
      String string2 = SQLUtil.join("CV<-", "", stringArray0, "5K^SY", "CV<-", stringArray0);
      assertEquals("CV<- join 5K^SY as CV<- on .CV<- = CV<-.CV<- and .Unable to load the class {0} responsible for the datatype {1} = CV<-.Unable to load the class {0} responsible for the datatype {1} and .Unable to load the class { 0 } responsible for the datatype { 1 } = CV<-.Unable to load the class { 0 } responsible for the datatype { 1 } and .Unable to load the class { 0 } responsible for the datatype { 1 } = CV<-.Unable to load the class { 0 } responsible for the datatype { 1 } and .Unable to load the class { 0 } responsible for the datatype { 1 } = CV<-.Unable to load the class { 0 } responsible for the datatype { 1 } and .(*Yy2r4 = CV<-.(*Yy2r4", string2);
      
      DBDataType dBDataType0 = DBDataType.getInstance(1622, "<|s2/iWt");
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("renamecreate unique indexaldumc5ukw", defaultDBTable0, dBDataType0, integer0, integer0);
      Integer integer1 = RawTransaction.COMMIT;
      defaultDBColumn0.setType(dBDataType0);
      Integer integer2 = RawTransaction.ABORT;
      Integer integer3 = new Integer((-1137));
      DefaultDBColumn defaultDBColumn1 = new DefaultDBColumn("CV<- join 5K^SY as CV<- on .CV<- = CV<-.CV<- and .Unable to load the class {0} responsible for the datatype {1} = CV<-.Unable to load the class {0} responsible for the datatype {1} and .Unable to load the class { 0 } responsible for the datatype { 1 } = CV<-.Unable to load the class { 0 } responsible for the datatype { 1 } and .Unable to load the class { 0 } responsible for the datatype { 1 } = CV<-.Unable to load the class { 0 } responsible for the datatype { 1 } and .Unable to load the class { 0 } responsible for the datatype { 1 } = CV<-.Unable to load the class { 0 } responsible for the datatype { 1 } and .(*Yy2r4 = CV<-.(*Yy2r4", defaultDBTable0, dBDataType0, integer2, integer3);
      defaultDBColumn0.isIdentical(defaultDBTable0);
      DBColumn[] dBColumnArray0 = new DBColumn[2];
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[1] = (DBColumn) defaultDBColumn1;
      SQLUtil.renderColumnNames(dBColumnArray0);
      defaultDBTable0.getPrimaryKeyConstraint();
      SQLUtil.renderValue((Object) null);
      String string3 = SQLUtil.renderColumn(defaultDBColumn0);
      assertEquals("renamecreate unique indexaldumc5ukw <|S2/IWT(3,3) NULL", string3);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.259513778414161
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      String string0 = "Unable to load the class {0} responsible for the datatype {1}";
      SQLUtil.normalize("Unable to load the class {0} responsible for the datatype {1}", false);
      SQLUtil.substituteMarkers("(*Yy2r4", "(*Yy2r4", "Unable to load the class {0} responsible for the datatype {1}");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("CV<-");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "CV<-";
      stringArray0[2] = "Unable to load the class { 0 } responsible for the datatype { 1 }";
      stringArray0[3] = "'Unable to load the class {0} responsible for the datatype {1}'";
      stringArray0[4] = "'Unable to load the class {0} responsible for the datatype {1}'";
      stringArray0[4] = "(*Yy2r4";
      SQLUtil.renderQuery(defaultDBTable0, stringArray0, stringArray0);
      SQLUtil.join("CV<-", "", stringArray0, "SELECT * FROM CV<- WHERE CV<- = 'CV<-' AND null = null AND Unable to load the class { 0 } responsible for the datatype { 1 } = 'Unable to load the class { 0 } responsible for the datatype { 1 }' AND 'Unable to load the class {0} responsible for the datatype {1}' = ''Unable to load the class {0} responsible for the datatype {1}'' AND (*Yy2r4 = '(*Yy2r4' AND null = null", "CV<-", stringArray0);
      DBDataType dBDataType0 = DBDataType.getInstance(1622, "<|s32[]iWt");
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("renamecreate unique indexaldumc5ukw", defaultDBTable0, dBDataType0, integer0, integer0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      URI uRI0 = MockURI.aFileURI;
      MockFile mockFile0 = new MockFile(uRI0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      PrintWriter printWriter0 = mockPrintWriter0.append((CharSequence) "(*Yy2r4");
      MockFile mockFile1 = new MockFile((String) null, "Unable to load the class { 0 } responsible for the datatype { 1 }");
      mockFile0.renameTo(mockFile1);
      mockFile0.createNewFile();
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(printWriter0);
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      SQLUtil.renderCreateTable(defaultDBTable0, true, nameSpec0, printWriter0);
      Object[] objectArray0 = new Object[0];
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause(stringArray0, objectArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.4340184863848724
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SQLUtil.isDML("AlDUmc5ukW");
      DBCatalog dBCatalog0 = new DBCatalog();
      DBSchema dBSchema0 = new DBSchema("AlDUmc5ukW");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)15;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) ",");
      StringBuilder stringBuilder1 = stringBuilder0.append((Object) dBSchema0);
      SQLUtil.addOptionalCondition("drop table", stringBuilder1);
      SQLUtil.mutatesStructure("executeorg.firebirdsql.jdbc.fbblob");
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("org.firebirdsql.jdbc.FBBlob");
      assertNull(boolean0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.7133007195761447
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SQLUtil.isDML("AlDUmc5ukW");
      DBCatalog dBCatalog0 = new DBCatalog();
      DBSchema dBSchema0 = new DBSchema("AlDUmc5ukW");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable(",", dBSchema0);
      StringBuilder stringBuilder0 = new StringBuilder();
      SQLUtil.addOptionalCondition("2c4=xTq?6E7g", stringBuilder0);
      String[] stringArray0 = defaultDBTable0.getColumnNames();
      StringBuilder stringBuilder1 = stringBuilder0.append('6');
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)76;
      byteArray0[1] = (byte)15;
      byteArray0[2] = (byte)72;
      byteArray0[3] = (byte)5;
      byteArray0[4] = (byte)5;
      byteArray0[5] = (byte) (-109);
      byteArray0[6] = (byte)76;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      stringBuilder1.append((Object) defaultDBTable0);
      SQLUtil.addOptionalCondition("TAZ?aEbZX\"58@Pg7g", stringBuilder1);
      SQLUtil.mutatesStructure("org.firebirdsql.jdbc.FBBlob");
      SQLUtil.mutatesDataOrStructure("org.firebirdsql.jdbc.FBBlob");
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "org.postgresql.ds.PGPooledConnection", false, stringArray0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) dBUniqueConstraint0, (StringBuilder) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.9296217656001493
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      String string0 = "";
      SQLUtil.removeComments("");
      String[] stringArray0 = null;
      SQLUtil.renderColumnNames((String[]) null);
      SQLUtil.isProcedureCall("YV7%pYI");
      DBSchema dBSchema0 = new DBSchema("call");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("YV7%pYI", dBSchema0);
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnListWithTableName("", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.5653948371180277
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SQLUtil.isProcedureCall("YV7%pYI");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      URI uRI0 = MockURI.aFileURI;
      MockFile mockFile0 = new MockFile(uRI0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      PrintWriter printWriter0 = mockPrintWriter0.append((CharSequence) "YV7%pYI");
      mockFile0.createNewFile();
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(printWriter0);
      SQLUtil.renderCreateTable(defaultDBTable0, true, nameSpec0, mockPrintWriter1);
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) printWriter0;
      Object object0 = new Object();
      objectArray0[1] = object0;
      objectArray0[2] = (Object) "";
      objectArray0[3] = (Object) defaultDBTable0;
      objectArray0[5] = (Object) defaultDBTable0;
      objectArray0[7] = (Object) uRI0;
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause((String[]) null, objectArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      String string0 = null;
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.147576009616535
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      String string0 = "";
      SQLUtil.isQuery("");
      TableContainer tableContainer0 = new TableContainer("");
      String string1 = "create unique indexaldumc5ukw";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("create unique indexaldumc5ukw");
      Character character0 = new Character('i');
      Object object0 = new Object();
      SQLUtil.removeComments("create unique indexaldumc5ukw");
      String string2 = "create unique indexaldumc5ukw";
      SQLUtil.mutatesDataOrStructure("create unique indexaldumc5ukw");
      DefaultDBTable defaultDBTable1 = new DefaultDBTable((String) null, (DBSchema) null);
      // Undeclared exception!
      try { 
        defaultDBTable1.getProvider((-2304));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "delete#.l:x~y7";
      stringArray0[1] = "delete#.l:x~y7";
      stringArray0[2] = "delete#.l:x~y7";
      stringArray0[3] = "delete#.l:x~y7";
      stringArray0[4] = "delete#.l:x~y7";
      stringArray0[5] = "delete#.l:x~y7";
      stringArray0[6] = "Qd&N(%<6E3kn_u@hA";
      String[] stringArray1 = new String[2];
      stringArray1[0] = "drop materialized view";
      stringArray1[1] = "~.?v2:H};OFsRK9VZB";
      // Undeclared exception!
      try { 
        SQLUtil.join("delete#.l:x~y7", "delete#.l:x~y7", stringArray0, "~.?v2:H};OFsRK9VZB", "drop materialized view", stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      SQLUtil sQLUtil0 = new SQLUtil();
      DBCatalog dBCatalog0 = new DBCatalog();
      dBCatalog0.getSchema("8FR)=");
      dBCatalog0.getSchema("K#er-");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("8FR)=", (DBSchema) null);
      dBCatalog0.toString();
      String[] stringArray0 = new String[0];
      defaultDBTable0.getUniqueConstraint(stringArray0);
      SQLUtil.renderColumnListWithTableName("8FR)=", stringArray0);
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, (String) null, false, stringArray0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      String string0 = SQLUtil.pkSpec(dBPrimaryKeyConstraint0, nameSpec0);
      assertEquals("PRIMARY KEY ()", string0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.650318927104637
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)18;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("alter table");
      DBDataType dBDataType0 = DBDataType.getInstance((int) (byte)5, "Vb#pyZL?N%Xv3~W");
      Integer integer0 = RawTransaction.COMMIT;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("Vb#pyZL?N%Xv3~W", defaultDBTable0, dBDataType0, integer0);
      StringBuilder stringBuilder1 = stringBuilder0.append("Vb#pyZL?N%Xv3~W");
      SQLUtil.addOptionalCondition("TAZ?aEbZX\"58@Pg7g", stringBuilder1);
      SQLUtil.mutatesStructure("cbt{_?{s/j%K-$r");
      SQLUtil.mutatesDataOrStructure("/PtvM}z");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "TAZ?aEbZX\"58@Pg7g";
      DefaultDBColumn defaultDBColumn1 = new DefaultDBColumn("alter table", defaultDBTable0, dBDataType0, integer0);
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn1);
      // Undeclared exception!
      try { 
        stringBuilder0.append((CharSequence) "VB#PYZL?N%XV3~W(0)", (int) (byte)18, (int) (byte)5);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // start 18, end 5, s.length() 18
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      String string0 = "\"GE$z])i9#X+Sk}%";
      // Undeclared exception!
      try { 
        SQLUtil.isQuery((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.3126128629446354
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      DBCatalog dBCatalog0 = new DBCatalog();
      DBSchema dBSchema0 = new DBSchema("/@R*now32N~s131pm:", dBCatalog0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("truncate", dBSchema0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "/@R*now32N~s131pm:";
      stringArray0[1] = "sE";
      stringArray0[2] = "/@R*now32N~s131pm:";
      stringArray0[3] = "z]Z?@@q3-UhMg<^yoy6";
      stringArray0[4] = "tvYG#5l!ON\"{qT{";
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)112;
      byteArray0[1] = (byte)112;
      byteArray0[2] = (byte)112;
      byteArray0[3] = (byte)112;
      byteArray0[4] = (byte)112;
      byteArray0[5] = (byte)112;
      byteArray0[6] = (byte)112;
      byteArray0[7] = (byte)112;
      RowOutputBinary rowOutputBinary0 = new RowOutputBinary(byteArray0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(rowOutputBinary0, false);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("tvYG#5l!ON\"{qT{", true, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      SQLUtil.renderAddForeignKey(dBForeignKeyConstraint0, nameSpec0, mockPrintWriter0);
      SQLUtil.renderCreateTable(defaultDBTable0, false, nameSpec0, mockPrintWriter0);
      StringBuilder stringBuilder0 = new StringBuilder();
      char[] charArray0 = new char[3];
      charArray0[0] = 'W';
      charArray0[1] = 'h';
      charArray0[2] = 'e';
      StringBuilder stringBuilder1 = stringBuilder0.append(charArray0);
      SQLUtil.appendConstraintName((DBConstraint) dBForeignKeyConstraint0, stringBuilder1);
      assertEquals("WheCONSTRAINT tvYG#5l!ON\"{qT{ ", stringBuilder1.toString());
      assertEquals("WheCONSTRAINT tvYG#5l!ON\"{qT{ ", stringBuilder0.toString());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.1100843864598464
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      SQLUtil.substituteMarkers("", "", "");
      SQLUtil.renderColumnNames((String[]) null);
      SQLUtil.isProcedureCall("YV7%pYI");
      DBSchema dBSchema0 = new DBSchema("call");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("YV7%pYI", dBSchema0);
      DBSchema dBSchema1 = new DBSchema("");
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("vombJ$o#0", dBSchema0);
      Integer integer0 = RawTransaction.ABORT;
      DBDataType dBDataType0 = DBDataType.getInstance((-1183), "vombJ$o#0");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("YV7%pYI", defaultDBTable1, dBDataType0, integer0);
      DefaultDBColumn defaultDBColumn1 = new DefaultDBColumn("()", defaultDBTable1, (-1129936164), "org.apache.derby.impl.store.access.sort.MergeScanRowSource");
      String string0 = "truncate";
      DefaultDBColumn defaultDBColumn2 = null;
      try {
        defaultDBColumn2 = new DefaultDBColumn("truncate", defaultDBTable1, 0, "(p0ab>5");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal column type format: (p0ab>5
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      PGConnectionPoolDataSource pGConnectionPoolDataSource0 = new PGConnectionPoolDataSource();
      pGConnectionPoolDataSource0.getLogWriter();
      defaultDBTable0.getPrimaryKeyConstraint();
      NameSpec nameSpec0 = NameSpec.NEVER;
      // Undeclared exception!
      try { 
        SQLUtil.pkSpec((DBPrimaryKeyConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.376008278404255
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDML("AlDUmc5ukW");
      assertFalse(boolean0);
      
      DBCatalog dBCatalog0 = new DBCatalog();
      DBSchema dBSchema0 = new DBSchema("AlDUmc5ukW");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "|gq%";
      stringArray0[1] = "|gq%";
      stringArray0[2] = "?i";
      stringArray0[3] = "|gq%";
      stringArray0[4] = "AlDUmc5ukW";
      stringArray0[5] = "|gq%";
      String string0 = SQLUtil.renderColumnListWithTableName("|gq%", stringArray0);
      assertEquals("|gq%.|gq%, |gq%.|gq%, |gq%.?i, |gq%.|gq%, |gq%.AlDUmc5ukW, |gq%.|gq%", string0);
      
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("TempFileDeleter.stopAutoDelete");
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      URI uRI0 = MockURI.aFileURI;
      MockFile mockFile0 = new MockFile(uRI0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      mockPrintWriter0.append((CharSequence) "|gq%.|gq%, |gq%.|gq%, |gq%.?i, |gq%.|gq%, |gq%.AlDUmc5ukW, |gq%.|gq%");
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "|gq%.|gq%, |gq%.|gq%, |gq%.?i, |gq%.|gq%, |gq%.AlDUmc5ukW, |gq%.|gq%", true, stringArray0);
      String string1 = SQLUtil.ukSpec(dBPrimaryKeyConstraint0, nameSpec0);
      assertEquals("CONSTRAINT \"|gq%.|gq%, |gq%.|gq%, |gq%.?i, |gq%.|gq%, |gq%.AlDUmc5ukW, |gq%.|gq%\" UNIQUE (|gq%, |gq%, ?i, |gq%, AlDUmc5ukW, |gq%)", string1);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      SQLUtil.normalize("", true);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "\u0001I";
      stringArray0[3] = "sVu\"p";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "";
      stringArray0[7] = ".^X-B$#e9";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = null;
      try {
        dBForeignKeyConstraint0 = new DBForeignKeyConstraint("]|ub'!", true, (DBTable) null, stringArray0, (DBTable) null, stringArray0);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // refereeTable is not supposed to be null
         //
         verifyException("org.databene.commons.Assert", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      DBCatalog dBCatalog0 = new DBCatalog();
      String string0 = null;
      dBCatalog0.getSchema((String) null);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("8FR)=", (DBSchema) null);
      String[] stringArray0 = new String[0];
      defaultDBTable0.getUniqueConstraint(stringArray0);
      String string1 = "_sw74*w6'LsD";
      StringBuilder stringBuilder0 = null;
      // Undeclared exception!
      try { 
        SQLUtil.addRequiredCondition("mNu@2S/RUC]kWnoA3g", (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      DBCatalog dBCatalog0 = new DBCatalog();
      DBSchema dBSchema0 = new DBSchema("sE", dBCatalog0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("cv<-", dBSchema0);
      SQLUtil.typeAndName(dBSchema0);
      SQLUtil.addRequiredCondition("cv<-", stringBuilder0);
      assertEquals("cv<-", stringBuilder0.toString());
      
      String string0 = SQLUtil.ownerDotComponent(dBSchema0);
      assertEquals("null.sE", string0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.7039917864324614
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      SQLUtil.isDML("AlDUmc5ukW");
      DBCatalog dBCatalog0 = new DBCatalog();
      DBSchema dBSchema0 = new DBSchema("AlDUmc5ukW");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable(",", dBSchema0);
      SQLUtil.removeComments("AlDUmc5ukW");
      String string0 = "\"GE$z])i9#X+Sk}%";
      SQLUtil.removeComments("AlDUmc5ukW");
      // Undeclared exception!
      try { 
        SQLUtil.isDDL((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      String string0 = ",";
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringBuilder stringBuilder0 = null;
      // Undeclared exception!
      try { 
        SQLUtil.addOptionalCondition(",", (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      PGConnectionPoolDataSource pGConnectionPoolDataSource0 = new PGConnectionPoolDataSource();
      pGConnectionPoolDataSource0.getLogWriter();
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.renderAddForeignKey((DBForeignKeyConstraint) null, nameSpec0, (PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.0798240299572575
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      SQLUtil.normalize("Unable to load the class {0} responsible for the datatype {1}", false);
      SQLUtil.substituteMarkers("(*Yy2r4", "(*Yy2r4", "Unable to load the class {0} responsible for the datatype {1}");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("CV<-");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "CV<-";
      stringArray0[1] = "CV<-";
      stringArray0[2] = "Unable to load the class { 0 } responsible for the datatype { 1 }";
      stringArray0[3] = "'Unable to load the class {0} responsible for the datatype {1}'";
      stringArray0[4] = "'Unable to load the class {0} responsible for the datatype {1}'";
      stringArray0[5] = "(*Yy2r4";
      SQLUtil.renderQuery(defaultDBTable0, stringArray0, stringArray0);
      SQLUtil.join("CV<-", "", stringArray0, "5K^SY", "CV<-", stringArray0);
      SQLUtil.isDDL("Unable to load the class { 0 } responsible for the datatype { 1 }");
      DBColumn[] dBColumnArray0 = new DBColumn[9];
      DBDataType dBDataType0 = DBDataType.getInstance(0, "(*Yy2r4");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("'Unable to load the class {0} responsible for the datatype {1}'", defaultDBTable0, dBDataType0);
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      DefaultDBColumn defaultDBColumn1 = new DefaultDBColumn("'Unable to load the class {0} responsible for the datatype {1}'", defaultDBTable0, dBDataType0);
      dBColumnArray0[1] = (DBColumn) defaultDBColumn1;
      DBSchema dBSchema0 = new DBSchema("");
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("C*a-{Y6y<C1ZD", dBSchema0);
      Integer integer0 = RawTransaction.ABORT;
      DefaultDBColumn defaultDBColumn2 = new DefaultDBColumn("L\"UH+!=M]", defaultDBTable1, dBDataType0, integer0);
      dBColumnArray0[2] = (DBColumn) defaultDBColumn2;
      String string0 = "";
      String string1 = "getString(String)";
      DefaultDBColumn defaultDBColumn3 = null;
      try {
        defaultDBColumn3 = new DefaultDBColumn("", defaultDBTable1, (-627), "getString(String)");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"String\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.884519307545657
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      String string0 = "Unable to load the class {0} responsible for the datatype {1}";
      SQLUtil.normalize("Unable to load the class {0} responsible for the datatype {1}", false);
      SQLUtil.substituteMarkers("(*Yy2r4", "(*Yy2r4", "Unable to load the class {0} responsible for the datatype {1}");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("CV<-");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "CV<-";
      stringArray0[1] = "CV<-";
      stringArray0[2] = "Unable to load the class { 0 } responsible for the datatype { 1 }";
      stringArray0[3] = "'Unable to load the class {0} responsible for the datatype {1}'";
      stringArray0[5] = "(*Yy2r4";
      SQLUtil.renderQuery(defaultDBTable0, stringArray0, stringArray0);
      SQLUtil.join("CV<-", "", stringArray0, "5K^SY", "CV<-", stringArray0);
      DBColumn[] dBColumnArray0 = new DBColumn[5];
      DBDataType dBDataType0 = DBDataType.getInstance(0, "(*Yy2r4");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("'Unable to load the class {0} responsible for the datatype {1}'", defaultDBTable0, dBDataType0);
      DefaultDBColumn defaultDBColumn1 = new DefaultDBColumn("'Unable to load the class {0} responsible for the datatype {1}'", defaultDBTable0, dBDataType0);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)47;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      dBColumnArray0[1] = (DBColumn) defaultDBColumn1;
      DBSchema dBSchema0 = new DBSchema("");
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("C*a-{Y6y<C1ZD", dBSchema0);
      Integer integer0 = RawTransaction.ABORT;
      dBColumnArray0[2] = (DBColumn) defaultDBColumn1;
      DefaultDBColumn defaultDBColumn2 = null;
      try {
        defaultDBColumn2 = new DefaultDBColumn("unable to l", defaultDBTable1, (-627), "CV<- join 5K^SY as CV<- on .CV<- = CV<-.CV<- and .CV<- = CV<-.CV<- and .Unable to load the class { 0 } responsible for the datatype { 1 } = CV<-.Unable to load the class { 0 } responsible for the datatype { 1 } and .'Unable to load the class {0} responsible for the datatype {1}' = CV<-.'Unable to load the class {0} responsible for the datatype {1}' and .null = CV<-.null and .(*Yy2r4 = CV<-.(*Yy2r4");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal column type format: CV<- join 5K^SY as CV<- on .CV<- = CV<-.CV<- and .CV<- = CV<-.CV<- and .Unable to load the class { 0 } responsible for the datatype { 1 } = CV<-.Unable to load the class { 0 } responsible for the datatype { 1 } and .'Unable to load the class {0} responsible for the datatype {1}' = CV<-.'Unable to load the class {0} responsible for the datatype {1}' and .null = CV<-.null and .(*Yy2r4 = CV<-.(*Yy2r4
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.689405381981195
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      SQLUtil.isDML("AlDUmc5ukW");
      DBCatalog dBCatalog0 = new DBCatalog();
      DBSchema dBSchema0 = new DBSchema("AlDUmc5ukW");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable(",", dBSchema0);
      StringBuilder stringBuilder0 = new StringBuilder();
      SQLUtil.addOptionalCondition("2c4=xTq?6E7g", stringBuilder0);
      StringBuilder stringBuilder1 = stringBuilder0.append('6');
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)76;
      byteArray0[1] = (byte)15;
      byteArray0[2] = (byte)72;
      byteArray0[3] = (byte)5;
      byteArray0[4] = (byte)5;
      byteArray0[5] = (byte) (-109);
      byteArray0[6] = (byte)76;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      stringBuilder1.append((Object) defaultDBTable0);
      SQLUtil.addOptionalCondition("TAZ?aEbZX\"58@Pg7g", stringBuilder1);
      assertEquals("2c4=xTq?6E7g6, or TAZ?aEbZX\"58@Pg7g", stringBuilder1.toString());
      
      SQLUtil.mutatesStructure("org.firebirdsql.jdbc.FBBlob");
      SQLUtil.mutatesDataOrStructure("org.firebirdsql.jdbc.FBBlob");
      Character character0 = Character.valueOf('6');
      String string0 = SQLUtil.substituteMarkers(",", "org.firebirdsql.jdbc.FBBlob", character0);
      assertEquals(",", string0);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      String string0 = "pj}&59#+u>";
      SQLUtil.substituteMarkers("pj}&59#+u>", "", "pj}&59#+u>");
      String[] stringArray0 = null;
      SQLUtil.renderColumnNames((String[]) null);
      String string1 = "YV7%pYI";
      DBSchema dBSchema0 = new DBSchema("call");
      dBSchema0.setName("YV7%pYI");
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnListWithTableName("()", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[0] = "CONSTRAINT";
      String string0 = "";
      stringArray0[1] = "";
      SQLUtil.renderColumnNames(stringArray0);
      SQLUtil.renderValue("");
      // Undeclared exception!
      try { 
        SQLUtil.ownerDotComponent((DBObject) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      DBCatalog dBCatalog0 = new DBCatalog();
      dBCatalog0.getSchema((String) null);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("8FR)=", (DBSchema) null);
      String[] stringArray0 = new String[0];
      defaultDBTable0.getUniqueConstraint(stringArray0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      dBCatalog0.getSchemas();
      // Undeclared exception!
      try { 
        SQLUtil.constraintSpec((DBConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      TableContainer tableContainer0 = new TableContainer("");
      tableContainer0.getSchema();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable(" ADD ", (DBSchema) null);
      defaultDBTable0.getPrimaryKeyConstraint();
      NameSpec nameSpec0 = NameSpec.NEVER;
      // Undeclared exception!
      try { 
        SQLUtil.ukSpec((DBUniqueConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.6537054776609987
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)18;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("alter table");
      DBDataType dBDataType0 = DBDataType.getInstance((int) (byte)5, "truncate");
      Integer integer0 = RawTransaction.COMMIT;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("truncate", defaultDBTable0, dBDataType0, integer0);
      StringBuilder stringBuilder1 = stringBuilder0.append((Object) defaultDBColumn0);
      SQLUtil.addOptionalCondition("TAZ?aEbZX\"58@Pg7g", stringBuilder1);
      assertEquals("truncate : TRUNCATE(0) or TAZ?aEbZX\"58@Pg7g", stringBuilder1.toString());
      
      SQLUtil.mutatesStructure("cbt{_?{s/j%K-$r");
      SQLUtil.mutatesDataOrStructure("/PtvM}z");
      DBSchema dBSchema0 = new DBSchema("truncate");
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("", dBSchema0);
      Integer integer1 = RawTransaction.ABORT;
      DefaultDBColumn defaultDBColumn1 = new DefaultDBColumn("'h^YI}e;yNd?}q?o", defaultDBTable0, dBDataType0, integer1);
      DefaultDBColumn defaultDBColumn2 = new DefaultDBColumn("insert", defaultDBTable1, (-3223), "truncate");
      SQLUtil.mutatesStructure("getString(String)");
      boolean boolean0 = SQLUtil.isQuery("org.postgresql.ds.PGPooledConnection");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.9366147725931562
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      SQLUtil.isDDL("O<<TD_ZgO)_");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable((String) null);
      DBTable dBTable0 = null;
      defaultDBTable0.addReferrer((DBTable) null);
      defaultDBTable0.setOwner((CompositeDBObject<?>) null);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("O<<TD_ZgO)_", defaultDBTable0, 2126, "");
      String string0 = "CHECK ";
      defaultDBColumn0.getNotNullConstraint();
      defaultDBColumn0.setDefaultValue("O<<TD_ZgO)_");
      defaultDBColumn0.setNotNullConstraint((DBNotNullConstraint) null);
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      // Undeclared exception!
      try { 
        SQLUtil.constraintName((DBConstraint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      PGConnectionPoolDataSource pGConnectionPoolDataSource0 = new PGConnectionPoolDataSource();
      // Undeclared exception!
      try { 
        SQLUtil.isProcedureCall((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      SQLUtil.isProcedureCall("getMetaData()");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "getMetaData()";
      // Undeclared exception!
      try { 
        DBDataType.getInstance("org.firebirdsql.jdbc.fb");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.model.DBDataType", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "SELECT * FROM ";
      stringArray0[1] = "create unique index";
      stringArray0[2] = "sYGl^AJ";
      SQLUtil.renderColumnNames(stringArray0);
      System.setCurrentTimeMillis(1910L);
      String string0 = "zGD_:-f'KO+mj$c_E=";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("vYh;OB");
      defaultDBTable0.getPrimaryKeyConstraint();
      NameSpec nameSpec0 = NameSpec.NEVER;
      // Undeclared exception!
      try { 
        SQLUtil.createConstraintSpecBuilder((DBConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      SQLUtil.typeAndName((DBObject) null);
      String string0 = ",";
      String string1 = null;
      int int0 = (-3964);
      StringBuilder stringBuilder0 = null;
      try {
        stringBuilder0 = new StringBuilder((-3964));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=0.9625330413607645
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      SQLUtil.normalize("/@R*now32N~s131pm:", true);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "/@R*now32N~s131pm:";
      stringArray0[1] = "/ @ R * now32N ~ s131pm :";
      SQLUtil.renderColumnListWithTableName("YP#xN ylaaK!F}u-o", stringArray0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      URI uRI0 = MockURI.aFileURI;
      MockFile mockFile0 = new MockFile(uRI0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      mockPrintWriter0.append((CharSequence) "/@R*now32N~s131pm:");
      mockFile0.createNewFile();
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0);
      // Undeclared exception!
      try { 
        SQLUtil.renderCreateTable((DBTable) null, false, nameSpec0, mockPrintWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.324621476365503
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      PGConnectionPoolDataSource pGConnectionPoolDataSource0 = new PGConnectionPoolDataSource();
      pGConnectionPoolDataSource0.getLogWriter();
      pGConnectionPoolDataSource0.setTcpKeepAlive(false);
      SQLUtil.isDDL("GENERATIONID");
      boolean boolean0 = SQLUtil.isQuery("GENERATIONID");
      Boolean boolean1 = SQLUtil.mutatesStructure("GENERATIONID");
      assertTrue(boolean1.equals((Object)boolean0));
      
      SQLUtil.renderValue((Object) null);
      String string0 = SQLUtil.substituteMarkers("f7qT7;sf:uqQZ&g#cf", "f7qT7;sf:uqQZ&g#cf", (Object) null);
      assertEquals("null", string0);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      SQLUtil.normalize("/@R*now32N~s131pm:", false);
      String[] stringArray0 = new String[10];
      stringArray0[0] = "/@R*now32N~s131pm:";
      stringArray0[1] = "/ @ R * now32N ~ s131pm :";
      stringArray0[2] = "/ @ R * now32N ~ s131pm :";
      stringArray0[3] = "/ @ R * now32N ~ s131pm :";
      stringArray0[4] = "";
      // Undeclared exception!
      try { 
        DBDataType.getInstance("alter materialized view");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.model.DBDataType", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      System.setCurrentTimeMillis(538L);
      // Undeclared exception!
      try { 
        SQLUtil.substituteMarkers((String) null, (String) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.8902903614089706
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/foo.bar");
      FileSystemHandling.setPermissions(evoSuiteFile0, false, false, false);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "b,$H";
      stringArray0[1] = "g_e[y";
      stringArray0[2] = "g_e[y";
      stringArray0[3] = "g_e[y";
      stringArray0[4] = "g_e[y";
      stringArray0[5] = "g_e[y";
      stringArray0[6] = "g_e[y";
      stringArray0[7] = "g_e[y";
      stringArray0[8] = "g_e[y";
      SQLUtil.renderColumnListWithTableName("g_e[y", stringArray0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      URI uRI0 = MockURI.aFileURI;
      MockFile mockFile0 = new MockFile(uRI0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      PrintWriter printWriter0 = mockPrintWriter0.append((CharSequence) "g_e[y");
      char[] charArray0 = new char[3];
      charArray0[0] = '{';
      charArray0[1] = 'a';
      charArray0[2] = 'm';
      mockPrintWriter0.write(charArray0);
      printWriter0.println();
      mockFile0.createNewFile();
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(printWriter0);
      SQLUtil.renderCreateTable(defaultDBTable0, true, nameSpec0, mockPrintWriter1);
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      String[] stringArray1 = new String[0];
      SQLUtil.renderQuery(defaultDBTable0, stringArray1, stringArray1);
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      DBCatalog dBCatalog0 = new DBCatalog();
      String string0 = null;
      ArrayList<DBColumn> arrayList0 = new ArrayList<DBColumn>();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) arrayList0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.9314830515574797
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)24;
      byteArray0[1] = (byte)63;
      byteArray0[2] = (byte)117;
      byteArray0[3] = (byte)24;
      byteArray0[4] = (byte)16;
      byteArray0[5] = (byte)42;
      byteArray0[6] = (byte)97;
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "/@R*now32N~s131pm:");
      SQLUtil.removeComments("\"GE$z])i9#X+Sk}%");
      boolean boolean0 = SQLUtil.isQuery("/@R*now32N~s131pm:");
      assertFalse(boolean0);
      
      System.setCurrentTimeMillis((byte)117);
      boolean boolean1 = SQLUtil.isProcedureCall("/@R*now32N~s131pm:");
      boolean boolean2 = SQLUtil.isDML("j)a<$22E'hKnb:ECk'h");
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      String string0 = "/@R*now32N~s131pm:";
      byte byte0 = (byte)42;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)24;
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "/@R*now32N~s131pm:");
      String string1 = null;
      // Undeclared exception!
      try { 
        SQLUtil.removeComments((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=0.8386877468598375
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = ">zK|";
      stringArray0[1] = "create table";
      stringArray0[2] = "create table";
      stringArray0[3] = "p#o,$";
      stringArray0[4] = "create table";
      stringArray0[5] = ">zK|";
      stringArray0[6] = ">zK|";
      stringArray0[7] = ">zK|";
      stringArray0[8] = "create table";
      SQLUtil.innerJoin("create table", stringArray0, ">zK|", "p#o,$", stringArray0);
      DBConstraint dBConstraint0 = null;
      // Undeclared exception!
      try { 
        SQLUtil.constraintName((DBConstraint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      DBCatalog dBCatalog0 = new DBCatalog();
      dBCatalog0.getSchemas();
      dBCatalog0.getSchema("w.97{QoHR^p<U");
      SQLUtil.ownerDotComponent(dBCatalog0);
      String string0 = "/W[0NZqNKy";
      // Undeclared exception!
      try { 
        dBCatalog0.removeSchema((DBSchema) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.model.DBCatalog", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      String string0 = "N$+R>8Uay3AtXa9Ak";
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "N$+R>8Uay3AtXa9Ak");
      StringBuilder stringBuilder1 = SQLUtil.addRequiredCondition("N$+R>8Uay3AtXa9Ak", stringBuilder0);
      StringBuilder stringBuilder2 = stringBuilder1.append((-2237.0F));
      StringBuilder stringBuilder3 = stringBuilder2.append(';');
      stringBuilder3.codePoints();
      stringBuilder3.append("N$+R>8Uay3AtXa9Ak");
      StringBuilder stringBuilder4 = stringBuilder3.appendCodePoint(0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) null, stringBuilder4, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.394714983677679
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      SQLUtil.isDML("AlDUmc5ukW");
      DBCatalog dBCatalog0 = new DBCatalog();
      DBSchema dBSchema0 = new DBSchema("AlDUmc5ukW");
      DBDataType dBDataType0 = DBDataType.getInstance(0, ",");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("Lgk`J(=i", dBSchema0);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn(",", defaultDBTable0, dBDataType0);
      DefaultDBColumn defaultDBColumn1 = new DefaultDBColumn("3 U#", defaultDBTable0, dBDataType0);
      DBSchema dBSchema1 = new DBSchema("");
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("HSL[PVZ\u00039ibY%EnL^+", dBSchema0);
      Integer integer0 = RawTransaction.ABORT;
      Integer integer1 = new Integer(0);
      DefaultDBColumn defaultDBColumn2 = new DefaultDBColumn((String) null, defaultDBTable0, (DBDataType) null, integer1);
      DefaultDBColumn defaultDBColumn3 = new DefaultDBColumn("-T^rx,I~2z**.{<E2D", defaultDBTable0, (-3974), "\nHIDDEN");
      String string0 = "truncate";
      DefaultDBColumn defaultDBColumn4 = new DefaultDBColumn("}~VMa", defaultDBTable1, 549, "\u0001\u00C1");
      // Undeclared exception!
      try { 
        DBDataType.getInstance("Lgk`J(=i");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.model.DBDataType", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "y&l";
      String[] stringArray1 = new String[4];
      stringArray1[0] = "YV0(\u0002NqJr";
      stringArray1[1] = " (";
      stringArray1[2] = "y&l";
      stringArray1[3] = " (";
      String string0 = SQLUtil.join("y&l", "y&l", stringArray0, " (", "YV0(\u0002NqJr", stringArray1);
      assertEquals("y&l join  ( as YV0(\u0002NqJr on y&l.y&l = YV0(\u0002NqJr.YV0(\u0002NqJr", string0);
  }

  /**
  //Test case number: 69
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      String string0 = "";
      DBColumn[] dBColumnArray0 = new DBColumn[2];
      TableContainer tableContainer0 = new TableContainer("");
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames(dBColumnArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      boolean boolean0 = new Boolean("");
      StringBuilder stringBuilder0 = new StringBuilder("");
      SQLUtil.addRequiredCondition("", stringBuilder0);
      DBCatalog dBCatalog0 = new DBCatalog("");
      dBCatalog0.getTable("E\"x]@3\"UUR4F$uFP", false);
      System.setCurrentTimeMillis((-2551L));
      String[] stringArray0 = new String[8];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "E\"x]@3\"UUR4F$uFP";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "E\"x]@3\"UUR4F$uFP";
      stringArray0[7] = "drop materialized viewunable to load the class { 0 } responsible for the datatype { 1 }";
      // Undeclared exception!
      try { 
        SQLUtil.renderQuery((DBTable) null, stringArray0, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema("SYS_PK_");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("SYS_PK_", dBSchema0);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "SYS_PK_";
      stringArray0[1] = "SYS_PK_";
      stringArray0[2] = "ax/^f 7+28y";
      stringArray0[3] = "SYS_PK_";
      stringArray0[4] = "SYS_PK_";
      stringArray0[5] = "SYS_PK_";
      stringArray0[6] = "SYS_PK_";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "SYS_PK_", false, stringArray0);
      dBPrimaryKeyConstraint0.setDoc("");
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      StringBuilder stringBuilder0 = SQLUtil.createConstraintSpecBuilder(dBPrimaryKeyConstraint0, nameSpec0);
      assertEquals("", stringBuilder0.toString());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.9385005954171288
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)24;
      byteArray0[1] = (byte)117;
      byteArray0[2] = (byte)117;
      byteArray0[3] = (byte)24;
      byteArray0[4] = (byte)16;
      byteArray0[5] = (byte)42;
      byteArray0[6] = (byte)97;
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "/@R*now32N~s131pm:");
      String string0 = "\"GE$z])i9#X+Sk}%";
      SQLUtil.isQuery("/@R*now32N~s131pm:");
      System.setCurrentTimeMillis((byte)117);
      SQLUtil.isProcedureCall("/@R*now32N~s131pm:");
      SQLUtil.isDML("j)a<$22E'hKnb:ECk'h");
      String string1 = null;
      // Undeclared exception!
      try { 
        SQLUtil.mutatesStructure((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=0.9181233221943573
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      String string0 = "Unable to load the class {0} responsible for the datatype {1}";
      boolean boolean0 = false;
      SQLUtil.normalize("Unable to load the class {0} responsible for the datatype {1}", false);
      SQLUtil.normalize("Unable to load the class {0} responsible for the datatype {1}", false);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "CV<-";
      stringArray0[1] = "Unable to load the class {0} responsible for the datatype {1}";
      stringArray0[2] = "Unable to load the class { 0 } responsible for the datatype { 1 }";
      stringArray0[3] = "Unable to load the class { 0 } responsible for the datatype { 1 }";
      String string1 = "q2z,_";
      String string2 = "unable to ";
      // Undeclared exception!
      try { 
        SQLUtil.join("Unable to load the class { 0 } responsible for the datatype { 1 }", "(*Yy2r4", stringArray0, "unable to ", "Unable to load the class { 0 } responsible for the datatype { 1 }", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      DBCatalog dBCatalog0 = new DBCatalog();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      String string0 = "q2z,_";
      // Undeclared exception!
      try { 
        SQLUtil.join("q2z,_", "8FR)=", (String[]) null, "drop materialized view", (String) null, (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.3450363141108999
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "nG\"2SphGiW1d^V";
      stringArray0[1] = "x>:KvILc";
      stringArray0[2] = "nG\"2SphGiW1d^V";
      stringArray0[3] = "nG\"2SphGiW1d^V";
      stringArray0[4] = "nG\"2SphGiW1d^V";
      stringArray0[5] = "nG\"2SphGiW1d^V";
      stringArray0[6] = "nG\"2SphGiW1d^V";
      SQLUtil.renderColumnListWithTableName("nG\"2SphGiW1d^V", stringArray0);
      String[] stringArray1 = new String[9];
      stringArray1[0] = "nG\"2SphGiW1d^V";
      stringArray1[1] = "nG\"2SphGiW1d^V";
      stringArray1[2] = "nG\"2SphGiW1d^V.nG\"2SphGiW1d^V, nG\"2SphGiW1d^V.x>:KvILc, nG\"2SphGiW1d^V.nG\"2SphGiW1d^V, nG\"2SphGiW1d^V.nG\"2SphGiW1d^V, nG\"2SphGiW1d^V.nG\"2SphGiW1d^V, nG\"2SphGiW1d^V.nG\"2SphGiW1d^V, nG\"2SphGiW1d^V.nG\"2SphGiW1d^V";
      stringArray1[3] = "}xJb|'j%";
      stringArray1[4] = "x>:KvILc";
      stringArray1[5] = "nG\"2SphGiW1d^V.nG\"2SphGiW1d^V, nG\"2SphGiW1d^V.x>:KvILc, nG\"2SphGiW1d^V.nG\"2SphGiW1d^V, nG\"2SphGiW1d^V.nG\"2SphGiW1d^V, nG\"2SphGiW1d^V.nG\"2SphGiW1d^V, nG\"2SphGiW1d^V.nG\"2SphGiW1d^V, nG\"2SphGiW1d^V.nG\"2SphGiW1d^V";
      stringArray1[6] = "x>:KvILc";
      stringArray1[7] = "nG\"2SphGiW1d^V";
      stringArray1[8] = "nG\"2SphGiW1d^V";
      SQLUtil.innerJoin("nG\"2SphGiW1d^V", stringArray0, "}xJb|'j%", "nG\"2SphGiW1d^V", stringArray1);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      // Undeclared exception!
      try { 
        DBDataType.getInstance("j;=Rk.$s>=6}");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.model.DBDataType", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.998260930975681
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDML("G81Rp39");
      assertFalse(boolean0);
      
      String[] stringArray0 = new String[9];
      stringArray0[0] = " as ";
      stringArray0[1] = "";
      stringArray0[2] = "G81Rp39";
      stringArray0[3] = "G81Rp39";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "";
      stringArray0[7] = "";
      stringArray0[8] = " as ";
      String string0 = SQLUtil.innerJoin("G81Rp39", stringArray0, "", ">zK|", stringArray0);
      assertEquals(" as >zK| on G81Rp39. as  = >zK|. as  and G81Rp39. = >zK|. and G81Rp39.G81Rp39 = >zK|.G81Rp39 and G81Rp39.G81Rp39 = >zK|.G81Rp39 and G81Rp39. = >zK|. and G81Rp39. = >zK|. and G81Rp39. = >zK|. and G81Rp39. = >zK|. and G81Rp39. as  = >zK|. as ", string0);
      
      Character character0 = new Character('r');
      String string1 = SQLUtil.substituteMarkers("", " as ", character0);
      assertEquals("", string1);
  }

  /**
  //Test case number: 77
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[0] = "renamealdumc5ukw";
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "renamealdumc5ukw");
      String string0 = "9810800c-0125-8de5-3aa0-0000001999e8";
      String string1 = "Unexpected code path";
      SQLUtil.join("9810800c-0125-8de5-3aa0-0000001999e8", "Unexpected code path", stringArray0, "renamealdumc5ukw", "Unexpected code path", stringArray0);
      DBCatalog dBCatalog0 = new DBCatalog();
      String string2 = "$RCW9Hfw+jE";
      // Undeclared exception!
      try { 
        dBCatalog0.getTable("$RCW9Hfw+jE");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Table '$RCW9Hfw+jE'
         //
         verifyException("org.databene.jdbacl.model.DBCatalog", e);
      }
  }
}
