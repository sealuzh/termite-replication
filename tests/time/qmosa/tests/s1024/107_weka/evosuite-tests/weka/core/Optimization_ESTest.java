/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 07:41:39 GMT 2019
 */

package weka.core;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.text.DecimalFormat;
import java.text.DecimalFormatSymbols;
import java.text.NumberFormat;
import java.util.Collection;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import weka.core.Optimization;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Optimization_ESTest extends Optimization_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Random.setNextRandom(110);
      weka.core.matrix.Matrix matrix0 = new weka.core.matrix.Matrix(110, 110);
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = (double) 110;
      doubleArray0[1] = (double) 110;
      doubleArray0[2] = (double) 110;
      doubleArray0[3] = (double) 110;
      doubleArray0[4] = 872.453061712937;
      doubleArray0[5] = (double) 110;
      boolean[] booleanArray0 = new boolean[9];
      booleanArray0[0] = true;
      booleanArray0[1] = false;
      booleanArray0[2] = false;
      booleanArray0[3] = false;
      booleanArray0[4] = false;
      booleanArray0[5] = true;
      booleanArray0[6] = false;
      booleanArray0[7] = false;
      booleanArray0[8] = true;
      double[] doubleArray1 = Optimization.solveTriangle(matrix0, doubleArray0, true, booleanArray0);
      assertArrayEquals(new double[] {0.0, Double.POSITIVE_INFINITY, Double.NaN, Double.NaN, Double.NaN, 0.0}, doubleArray1, 0.01);
      assertArrayEquals(new double[] {110.0, 110.0, 110.0, 110.0, 872.453061712937, 110.0}, doubleArray0, 0.01);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Locale locale0 = Locale.TAIWAN;
      locale0.getScript();
      Locale locale1 = Locale.CANADA_FRENCH;
      NumberFormat numberFormat0 = NumberFormat.getInstance(locale1);
      NumberFormat.getIntegerInstance(locale0);
      NumberFormat.getNumberInstance();
      Locale.Category locale_Category0 = Locale.Category.DISPLAY;
      Locale.setDefault(locale_Category0, locale1);
      weka.core.matrix.Matrix matrix0 = new weka.core.matrix.Matrix(10, 10, 10);
      matrix0.print(numberFormat0, 10);
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = (-1685.3627258224794);
      doubleArray0[1] = (double) 10;
      doubleArray0[2] = (double) 446;
      doubleArray0[3] = (double) 446;
      doubleArray0[4] = (double) 10;
      doubleArray0[5] = (double) 446;
      doubleArray0[6] = (double) 446;
      doubleArray0[7] = (double) 446;
      doubleArray0[8] = (double) 10;
      boolean[] booleanArray0 = new boolean[9];
      booleanArray0[0] = true;
      booleanArray0[1] = true;
      booleanArray0[2] = true;
      booleanArray0[3] = true;
      booleanArray0[4] = true;
      booleanArray0[5] = true;
      booleanArray0[6] = false;
      booleanArray0[7] = true;
      booleanArray0[8] = true;
      double[] doubleArray1 = Optimization.solveTriangle(matrix0, doubleArray0, true, booleanArray0);
      assertArrayEquals(new double[] {(-1685.3627258224794), 10.0, 446.0, 446.0, 10.0, 446.0, 446.0, 446.0, 10.0}, doubleArray0, 0.01);
      assertArrayEquals(new double[] {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 44.6, 0.0, 0.0}, doubleArray1, 0.01);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = 3.4;
      doubleArray0[1] = 810.68;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      boolean[] booleanArray0 = new boolean[9];
      booleanArray0[0] = true;
      booleanArray0[1] = false;
      booleanArray0[2] = false;
      booleanArray0[3] = true;
      booleanArray0[4] = true;
      booleanArray0[5] = false;
      booleanArray0[6] = false;
      booleanArray0[7] = false;
      booleanArray0[8] = false;
      // Undeclared exception!
      try { 
        Optimization.solveTriangle((weka.core.matrix.Matrix) null, doubleArray0, false, booleanArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.core.Optimization", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Optimization optimization0 = mock(Optimization.class, CALLS_REAL_METHODS);
      Optimization.DynamicIntArray optimization_DynamicIntArray0 = optimization0.new DynamicIntArray(2982);
      int int0 = 2709;
      optimization_DynamicIntArray0.addElement(2709);
      optimization_DynamicIntArray0.elementAt(33);
      weka.core.matrix.Matrix matrix0 = null;
      try {
        matrix0 = new weka.core.matrix.Matrix(2709, (-1216));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.core.matrix.Matrix", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.5981863871455346
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Optimization optimization0 = mock(Optimization.class, CALLS_REAL_METHODS);
      Optimization.DynamicIntArray optimization_DynamicIntArray0 = optimization0.new DynamicIntArray(0);
      optimization_DynamicIntArray0.removeAllElements();
      optimization_DynamicIntArray0.getRevision();
      Locale locale0 = Locale.forLanguageTag("");
      Locale.forLanguageTag("W1VL&_H[=9`'ZLA*");
      Locale locale1 = Locale.forLanguageTag("");
      locale0.toLanguageTag();
      Locale locale2 = new Locale("");
      locale2.getScript();
      Locale locale3 = Locale.CANADA_FRENCH;
      NumberFormat.getInstance(locale1);
      NumberFormat numberFormat0 = NumberFormat.getIntegerInstance(locale1);
      NumberFormat.getNumberInstance();
      double[] doubleArray0 = new double[0];
      weka.core.matrix.Matrix matrix0 = new weka.core.matrix.Matrix(doubleArray0, 1);
      matrix0.print(numberFormat0, 4);
      boolean[] booleanArray0 = new boolean[3];
      booleanArray0[0] = false;
      booleanArray0[1] = false;
      booleanArray0[2] = false;
      double[] doubleArray1 = Optimization.solveTriangle(matrix0, doubleArray0, true, booleanArray0);
      assertEquals(0, doubleArray1.length);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Optimization optimization0 = mock(Optimization.class, CALLS_REAL_METHODS);
      weka.core.matrix.Matrix matrix0 = weka.core.matrix.Matrix.identity(32, 1);
      double[] doubleArray0 = new double[1];
      boolean[] booleanArray0 = new boolean[9];
      booleanArray0[0] = false;
      matrix0.inverse();
      booleanArray0[2] = true;
      booleanArray0[3] = false;
      booleanArray0[4] = false;
      boolean[] booleanArray1 = new boolean[2];
      booleanArray1[0] = true;
      booleanArray1[1] = false;
      double[] doubleArray1 = Optimization.solveTriangle(matrix0, doubleArray0, true, booleanArray1);
      assertArrayEquals(new double[] {0.0}, doubleArray1, 0.01);
      
      double[] doubleArray2 = Optimization.solveTriangle(matrix0, doubleArray0, true, booleanArray0);
      matrix0.inverse();
      boolean[] booleanArray2 = new boolean[19];
      booleanArray2[0] = true;
      booleanArray2[1] = true;
      booleanArray2[2] = true;
      booleanArray2[3] = false;
      booleanArray2[4] = false;
      booleanArray2[5] = true;
      booleanArray2[6] = true;
      Optimization.solveTriangle(matrix0, doubleArray2, false, booleanArray2);
      assertArrayEquals(new double[] {0.0}, doubleArray2, 0.01);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      weka.core.matrix.Matrix matrix0 = weka.core.matrix.Matrix.identity(18, 7);
      double[] doubleArray0 = new double[6];
      matrix0.cond();
      weka.core.matrix.Matrix matrix1 = matrix0.times(1.000000238418579);
      Locale locale0 = Locale.forLanguageTag("");
      Locale locale1 = Locale.forLanguageTag("");
      locale0.toLanguageTag();
      locale1.getScript();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list0, locale_FilteringMode0);
      locale1.getDisplayLanguage(locale0);
      Locale locale2 = Locale.CANADA_FRENCH;
      locale2.getDisplayLanguage(locale1);
      NumberFormat.getInstance(locale2);
      NumberFormat numberFormat0 = NumberFormat.getIntegerInstance(locale0);
      NumberFormat.getNumberInstance();
      matrix0.print(numberFormat0, 7);
      matrix1.rank();
      boolean[] booleanArray0 = new boolean[5];
      booleanArray0[0] = true;
      booleanArray0[1] = true;
      booleanArray0[2] = true;
      booleanArray0[3] = true;
      booleanArray0[4] = false;
      // Undeclared exception!
      try { 
        Optimization.solveTriangle(matrix0, doubleArray0, true, booleanArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("weka.core.Optimization", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      weka.core.matrix.Matrix matrix0 = weka.core.matrix.Matrix.identity(18, 7);
      double[] doubleArray0 = new double[6];
      FileSystemHandling.shouldAllThrowIOExceptions();
      matrix0.cond();
      weka.core.matrix.Matrix matrix1 = matrix0.times(1.000000238418579);
      Locale locale0 = Locale.forLanguageTag("");
      Locale locale1 = Locale.forLanguageTag("K3E8]-cILsZ");
      locale1.toLanguageTag();
      locale1.getScript();
      Locale locale2 = Locale.KOREAN;
      locale2.getDisplayLanguage(locale0);
      Locale locale3 = Locale.CANADA_FRENCH;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      locale1.getDisplayLanguage(locale0);
      NumberFormat.getInstance(locale1);
      NumberFormat numberFormat0 = NumberFormat.getIntegerInstance(locale0);
      NumberFormat.getNumberInstance();
      matrix0.print(numberFormat0, (-3021));
      matrix0.rank();
      boolean[] booleanArray0 = new boolean[6];
      booleanArray0[0] = true;
      booleanArray0[1] = true;
      booleanArray0[2] = false;
      booleanArray0[3] = true;
      booleanArray0[4] = true;
      booleanArray0[5] = true;
      double[] doubleArray1 = Optimization.solveTriangle(matrix1, doubleArray0, false, booleanArray0);
      assertEquals(6, doubleArray1.length);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      weka.core.matrix.Matrix matrix0 = weka.core.matrix.Matrix.identity(32, 7);
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = (double) 32;
      doubleArray0[1] = (double) 6;
      double double0 = Optimization.m_Epsilon;
      doubleArray0[2] = (double) 6;
      doubleArray0[3] = (double) 6;
      doubleArray0[4] = (double) 0;
      boolean[] booleanArray0 = new boolean[7];
      booleanArray0[0] = true;
      booleanArray0[1] = true;
      booleanArray0[2] = true;
      booleanArray0[3] = true;
      double[] doubleArray1 = new double[6];
      doubleArray1[0] = (-4001.553695886222);
      doubleArray1[1] = 2.220446049250313E-16;
      doubleArray1[2] = 2.220446049250313E-16;
      doubleArray1[3] = (double) 0;
      doubleArray1[4] = (double) 32;
      DecimalFormatSymbols decimalFormatSymbols0 = DecimalFormatSymbols.getInstance();
      DecimalFormat decimalFormat0 = new DecimalFormat("o+$w9= a3)", decimalFormatSymbols0);
      decimalFormat0.setDecimalFormatSymbols(decimalFormatSymbols0);
      matrix0.print((NumberFormat) decimalFormat0, 0);
      doubleArray1[5] = (-2128.1);
      Optimization.solveTriangle(matrix0, doubleArray1, true, (boolean[]) null);
      Random.setNextRandom(2967);
      Random.setNextRandom((-1739));
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.2343545839532437
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Optimization optimization0 = mock(Optimization.class, CALLS_REAL_METHODS);
      Optimization.DynamicIntArray optimization_DynamicIntArray0 = optimization0.new DynamicIntArray(0);
      optimization_DynamicIntArray0.copy();
      optimization_DynamicIntArray0.copy();
      optimization_DynamicIntArray0.getRevision();
      optimization_DynamicIntArray0.addElement(0);
      optimization_DynamicIntArray0.addElement(87);
      optimization_DynamicIntArray0.addElement(0);
      optimization_DynamicIntArray0.removeElementAt(0);
      optimization_DynamicIntArray0.addElement(0);
      optimization_DynamicIntArray0.addElement(0);
      optimization_DynamicIntArray0.addElement(10);
      optimization_DynamicIntArray0.removeAllElements();
      optimization_DynamicIntArray0.copy();
      optimization_DynamicIntArray0.removeAllElements();
      // Undeclared exception!
      try { 
        optimization_DynamicIntArray0.removeElementAt(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Optimization optimization0 = mock(Optimization.class, CALLS_REAL_METHODS);
      int int0 = 820;
      Optimization.DynamicIntArray optimization_DynamicIntArray0 = optimization0.new DynamicIntArray(820);
      optimization_DynamicIntArray0.removeAllElements();
      optimization_DynamicIntArray0.removeAllElements();
      optimization_DynamicIntArray0.size();
      int int1 = 200;
      // Undeclared exception!
      weka.core.matrix.Matrix.random(820, 200);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Optimization optimization0 = mock(Optimization.class, CALLS_REAL_METHODS);
      int int0 = 0;
      Optimization.DynamicIntArray optimization_DynamicIntArray0 = optimization0.new DynamicIntArray(0);
      int int1 = (-2734);
      optimization_DynamicIntArray0.addElement((-2734));
      optimization_DynamicIntArray0.removeElementAt(0);
      // Undeclared exception!
      try { 
        optimization_DynamicIntArray0.removeElementAt((-4095));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Optimization optimization0 = mock(Optimization.class, CALLS_REAL_METHODS);
      int int0 = 0;
      Optimization.DynamicIntArray optimization_DynamicIntArray0 = optimization0.new DynamicIntArray(0);
      int int1 = (-2734);
      optimization_DynamicIntArray0.addElement((-866));
      optimization_DynamicIntArray0.removeElementAt(0);
      // Undeclared exception!
      try { 
        optimization_DynamicIntArray0.removeElementAt((-4095));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Random.setNextRandom(446);
      int int0 = 1;
      Random.setNextRandom(1);
      Random.setNextRandom(446);
      Random.setNextRandom(1);
      int int1 = (-1);
      Random.setNextRandom((-1));
      Optimization optimization0 = mock(Optimization.class, CALLS_REAL_METHODS);
      Optimization.DynamicIntArray optimization_DynamicIntArray0 = optimization0.new DynamicIntArray(446);
      optimization_DynamicIntArray0.getRevision();
      // Undeclared exception!
      try { 
        optimization_DynamicIntArray0.removeElementAt((-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "stpmax:  ");
      Optimization optimization0 = mock(Optimization.class, CALLS_REAL_METHODS);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)94;
      byteArray0[1] = (byte)75;
      byteArray0[2] = (byte) (-11);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      int int0 = 2869;
      Optimization.DynamicIntArray optimization_DynamicIntArray0 = optimization0.new DynamicIntArray(2869);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      optimization_DynamicIntArray0.removeAllElements();
      optimization_DynamicIntArray0.copy();
      // Undeclared exception!
      try { 
        optimization_DynamicIntArray0.removeElementAt(2982);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }
}
