/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 08:15:20 GMT 2019
 */

package com.lts.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.lts.io.ArchiveScanner;
import com.lts.io.ImprovedFile;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.File;
import java.io.IOException;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ArchiveScanner_ESTest extends ArchiveScanner_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("eitNod:e");
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      File file0 = ImprovedFile.createTempFileName("", ".ZIP", improvedFile0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.addDefaultExcludes();
      Vector<Integer> vector0 = new Vector<Integer>();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "eitNod:e";
      stringArray0[1] = ".ZIP";
      stringArray0[2] = ".ZIP";
      stringArray0[3] = "";
      archiveScanner0.setIncludes(stringArray0);
      System.setCurrentTimeMillis(1000000L);
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive(file0, "eitNod:e");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0809586127392572
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("eitNod:e");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      archiveScanner0.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      archiveScanner0.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      ArchiveScanner archiveScanner1 = new ArchiveScanner(improvedFile0);
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner1.filesExcluded = vector0;
      archiveScanner1.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      ArchiveScanner archiveScanner2 = new ArchiveScanner(improvedFile0);
      improvedFile0.setReadOnly();
      System.setCurrentTimeMillis(1000000L);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ".WAR");
      // Undeclared exception!
      try { 
        archiveScanner1.processDirectory(improvedFile0, "VwPwiV", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.5735143214270813
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("editNode");
      improvedFile0.getCanonicalPath();
      File file0 = improvedFile0.getCanonicalFile();
      improvedFile0.getCanonicalPath();
      ImprovedFile improvedFile1 = new ImprovedFile(file0);
      File file1 = ImprovedFile.createTempFileName("\"VlX=Ug!9\"UL2K\"9T0", "/home/ubuntu/termite/projects/78_caloriecount/editNode", improvedFile0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.addDefaultExcludes();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile(":c$F");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "/home/ubuntu/termite/projects/78_caloriecount/editNode");
      Vector<Integer> vector0 = new Vector<Integer>();
      ImprovedFile improvedFile2 = ImprovedFile.createTempImprovedFile("editNode", ",}Lm", file1);
      improvedFile2.getCanonicalPath();
      archiveScanner0.addDefaultExcludes();
      improvedFile0.setReadable(true, true);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "\"VlX=Ug!9\"UL2K\"9T0";
      stringArray0[1] = "/home/ubuntu/termite/projects/78_caloriecount/editNode";
      archiveScanner0.setIncludes(stringArray0);
      improvedFile1.getCanonicalPath();
      improvedFile2.deleteOnExit();
      MockFile mockFile0 = new MockFile("/home/ubuntu/termite/projects/78_caloriecount/editNode/\"VlX=Ug!9\"UL2K\"9T0281320./home/ubuntu/termite/projects/78_caloriecount/editNode/editNode0,}Lm");
      improvedFile2.setReadOnly();
      Vector<Object> vector1 = new Vector<Object>(973);
      archiveScanner0.dirsIncluded = vector1;
      System.setCurrentTimeMillis(2290L);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "/home/ubuntu/termite/projects/78_caloriecount/editNode/\"VlX=Ug!9\"UL2K\"9T0281320./home/ubuntu/termite/projects/78_caloriecount/editNode/editNode0,}Lm");
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory(file0, "\"VlX=Ug!9\"UL2K\"9T0", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("editNode");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "editNode";
      Vector<DataInputStream> vector0 = new Vector<DataInputStream>();
      archiveScanner0.filesExcluded = vector0;
      stringArray0[1] = "editNode";
      stringArray0[2] = "editNode";
      stringArray0[3] = "editNode";
      stringArray0[4] = "editNode";
      stringArray0[5] = "editNode";
      stringArray0[6] = "editNode";
      stringArray0[7] = "editNode";
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.setIncludes(stringArray0);
      // Undeclared exception!
      try { 
        archiveScanner0.processFile(".jar");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("Bpr*V=|ZQ46iO#Gf4");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "Bpr*V=|ZQ46iO#Gf4";
      stringArray0[1] = "y(e;$";
      stringArray0[2] = "ulfHk?>L#WEpQ}";
      stringArray0[3] = "editNode";
      stringArray0[4] = "editNode";
      stringArray0[5] = "editNode";
      stringArray0[6] = "editNode";
      stringArray0[7] = "editNode";
      stringArray0[8] = "Bpr*V=|ZQ46iO#Gf4";
      archiveScanner0.setIncludes(stringArray0);
      ArchiveScanner archiveScanner1 = new ArchiveScanner(improvedFile0);
      Vector<String> vector0 = new Vector<String>();
      archiveScanner1.filesNotIncluded = vector0;
      improvedFile0.getCanonicalPath();
      boolean boolean0 = archiveScanner0.haveSlowResults;
      archiveScanner1.includes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      improvedFile0.toURL();
      System.setCurrentTimeMillis(2);
      archiveScanner1.processArchive(improvedFile0, "ulfHk?>L#WEpQ}");
      archiveScanner1.processFile("editNode");
      assertEquals(0, ArchiveScanner.FILE);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("fgCX1:m]xPGV8%sp");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)0;
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "NUX2t@ g|3U5*+j'~.jar";
      stringArray0[1] = "fgCX1:m]xPGV8%sp";
      stringArray0[2] = "<Separator>";
      stringArray0[3] = "fgCX1:m]xPGV8%sp";
      stringArray0[4] = "NUX2t@ g|3U5*+j'~.jar";
      stringArray0[5] = "fgCX1:m]xPGV8%sp";
      archiveScanner0.setIncludes(stringArray0);
      improvedFile0.getCanonicalPath();
      improvedFile0.deleteOnExit();
      improvedFile0.getCanonicalPath();
      improvedFile0.mkdir();
      Vector<Integer> vector0 = new Vector<Integer>();
      archiveScanner0.dirsExcluded = vector0;
      improvedFile0.toURL();
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive(improvedFile0, ".EAR");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("eitNod:e");
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      pipedInputStream0.connect(pipedOutputStream0);
      pipedInputStream0.skip(0L);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0);
      ImprovedFile.createTempFileName("", ".ZIP", improvedFile0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.addDefaultExcludes();
      Vector<Integer> vector0 = new Vector<Integer>();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "eitNod:e";
      stringArray0[1] = ".ZIP";
      stringArray0[2] = ".ZIP";
      stringArray0[3] = "";
      archiveScanner0.setIncludes(stringArray0);
      // Undeclared exception!
      try { 
        archiveScanner0.processFile("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ImprovedFile improvedFile0 = new ImprovedFile("fgCX1:m]xPGV8%sp");
      byte[] byteArray0 = new byte[6];
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      // Undeclared exception!
      try { 
        archiveScanner0.isArchive((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ImprovedFile improvedFile0 = new ImprovedFile("fgCX1:m]xPGV8%sp");
      byte[] byteArray0 = new byte[6];
      improvedFile0.setReadOnly();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("fgCX1:m]xPGV8%sp");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "fgCX1:m]xPGV8%sp");
      byteArray0[0] = (byte)0;
      improvedFile0.toURL();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      Vector<Object> vector0 = new Vector<Object>();
      vector0.iterator();
      archiveScanner0.dirsExcluded = vector0;
      String[] stringArray0 = new String[6];
      stringArray0[0] = "NUX2t@ g|3U5*+j'~.jar";
      stringArray0[1] = "NUX2t@ g|3U5*+j'~.jar";
      archiveScanner0.addDefaultExcludes();
      stringArray0[2] = "<Separator>";
      stringArray0[3] = "fgCX1:m]xPGV8%sp";
      stringArray0[4] = "NUX2t@ g|3U5*+j'~.jar";
      stringArray0[5] = "fgCX1:m]xPGV8%sp";
      archiveScanner0.setIncludes(stringArray0);
      improvedFile0.getCanonicalPath();
      improvedFile0.deleteOnExit();
      ImprovedFile.copyFromToDir(improvedFile0, improvedFile0);
      File file0 = improvedFile0.getCanonicalFile();
      improvedFile0.setReadOnly();
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory(file0, "", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("editNode");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("editNode");
      FileSystemHandling.createFolder(evoSuiteFile0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.scandir(improvedFile0, "editNode", true);
      String string0 = ".war";
      ImprovedFile.createTempImprovedFile(".war", "editNode", improvedFile0);
      // Undeclared exception!
      try { 
        ImprovedFile.createTempDirectory("editNode", "editNode");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ImprovedFile", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.455848709151796
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MockFile mockFile0 = new MockFile(":c$F");
      mockFile0.getCanonicalPath();
      mockFile0.getCanonicalPath();
      File file0 = mockFile0.getCanonicalFile();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("editNode/narc0");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "(\\\" e:zkIR1wXzR");
      mockFile0.getCanonicalPath();
      file0.getCanonicalPath();
      File file1 = file0.getCanonicalFile();
      ImprovedFile improvedFile0 = ImprovedFile.createTempImprovedFile("OTHER_ERROR", "T", file1);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      ArchiveScanner archiveScanner1 = new ArchiveScanner(improvedFile0);
      archiveScanner1.toFileType(improvedFile0);
      System.setCurrentTimeMillis((-1L));
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("eiNode");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      archiveScanner0.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      archiveScanner0.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      ArchiveScanner archiveScanner1 = new ArchiveScanner(improvedFile0);
      archiveScanner1.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      ArchiveScanner archiveScanner2 = new ArchiveScanner(improvedFile0);
      ArchiveScanner archiveScanner3 = new ArchiveScanner(improvedFile0);
      ImprovedFile.createTempDirectory("eiNode", "eiNode", (File) improvedFile0);
      Vector<String> vector0 = new Vector<String>();
      archiveScanner3.filesIncluded = vector0;
      archiveScanner0.toFileType(improvedFile0);
      System.setCurrentTimeMillis(1224L);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.4659497192528061
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MockFile mockFile0 = new MockFile(":I$F`");
      mockFile0.getCanonicalPath();
      mockFile0.getCanonicalPath();
      File file0 = mockFile0.getCanonicalFile();
      file0.getCanonicalPath();
      mockFile0.getCanonicalPath();
      ImprovedFile improvedFile0 = new ImprovedFile(file0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      MockFile mockFile1 = new MockFile("/home/ubuntu/termite/projects/78_caloriecount/:I$F`");
      mockFile1.getCanonicalPath();
      mockFile0.mkdir();
      mockFile0.toURL();
      MockFile mockFile2 = new MockFile("/home/ubuntu/termite/projects/78_caloriecount/:I$F`", "/home/ubuntu/termite/projects/78_caloriecount/:I$F`");
      ImprovedFile.copyFromToDir(mockFile0, file0);
      ImprovedFile improvedFile1 = new ImprovedFile("RqNY&giv>M");
      ArchiveScanner archiveScanner1 = new ArchiveScanner(improvedFile1);
      ArchiveScanner archiveScanner2 = new ArchiveScanner(improvedFile0);
      int int0 = archiveScanner2.toFileType(mockFile2);
      //  // Unstable assertion: assertEquals(2, int0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[1] = "0kk";
      System.setCurrentTimeMillis(0L);
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      // Undeclared exception!
      try { 
        archiveScanner0.scanArchive((File) null, "SP!#q%3|W.");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.archive.AbstractNestedArchive", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      System.setCurrentTimeMillis(1554L);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)29;
      byteArray0[1] = (byte)38;
      byteArray0[2] = (byte)29;
      byteArray0[3] = (byte) (-92);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 8192, 8192);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      ImprovedFile improvedFile0 = new ImprovedFile("oMu", "SG{Q~3C@IrmZyGC)2i#lw9zu.jar");
      archiveScanner0.isArchive(improvedFile0);
      System.setCurrentTimeMillis((byte) (-92));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(8192);
      System.setCurrentTimeMillis((-1127L));
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.8323649625844873
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MockFile mockFile0 = new MockFile(":c$S");
      mockFile0.getCanonicalPath();
      mockFile0.getCanonicalPath();
      File file0 = mockFile0.getCanonicalFile();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("editNode/narc0");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "(\\\" e:zkIR1wXzR");
      mockFile0.getCanonicalPath();
      file0.getCanonicalPath();
      File file1 = file0.getCanonicalFile();
      mockFile0.getCanonicalPath();
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("editNode/narc0");
      ImprovedFile improvedFile0 = ImprovedFile.createTempImprovedFile("OTHER_ERROR", "T", file1);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder(evoSuiteFile1);
      FileSystemHandling.createFolder(evoSuiteFile1);
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(file0, ".jar", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.8548720307766426
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      String string0 = "editNode";
      ImprovedFile improvedFile0 = new ImprovedFile("editNode");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("editNode/narc0");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "editNode");
      String string1 = "\"~:K}A";
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(improvedFile0, "\"~:K}A", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("eiNode");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      archiveScanner0.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "eiNode";
      stringArray0[1] = "eiNode";
      stringArray0[2] = "eiNode";
      stringArray0[3] = "eiNode";
      stringArray0[4] = "eiNode";
      archiveScanner0.setIncludes(stringArray0);
      ArchiveScanner archiveScanner1 = new ArchiveScanner(improvedFile0);
      archiveScanner1.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      ArchiveScanner archiveScanner2 = new ArchiveScanner(improvedFile0);
      improvedFile0.getCanonicalFile();
      ArchiveScanner archiveScanner3 = new ArchiveScanner(improvedFile0);
      ArchiveScanner archiveScanner4 = new ArchiveScanner(improvedFile0);
      File file0 = archiveScanner1.basedir;
      // Undeclared exception!
      try { 
        archiveScanner4.toFileType((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.4657809345925379
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("eitNod:e");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      archiveScanner0.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "eitNod:e";
      stringArray0[1] = "eitNod:e";
      stringArray0[2] = "eitNod:e";
      stringArray0[3] = "eitNod:e";
      stringArray0[4] = "eitNod:e";
      archiveScanner0.setIncludes(stringArray0);
      ArchiveScanner archiveScanner1 = new ArchiveScanner(improvedFile0);
      archiveScanner1.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      ArchiveScanner archiveScanner2 = new ArchiveScanner(improvedFile0);
      ArchiveScanner archiveScanner3 = new ArchiveScanner(improvedFile0);
      int int0 = archiveScanner3.toFileType(improvedFile0);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("editNode");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("editNode");
      FileSystemHandling.createFolder(evoSuiteFile0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.scandir(improvedFile0, "editNode", true);
      String string0 = ".war";
      ImprovedFile improvedFile1 = ImprovedFile.createTempImprovedFile(".war", "editNode", improvedFile0);
      String string1 = "g:l9'3-@\\!K4PP|";
      try { 
        improvedFile1.createTempDir("g:l9'3-@!K4PP|", "g:l9'3-@!K4PP|");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.4471627089619605
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("editNode");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("editNode");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("editNode/narc0");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-107);
      byteArray0[1] = (byte)50;
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      FileSystemHandling.createFolder(evoSuiteFile1);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(improvedFile0, "", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.4657809345925379
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("eitNod:e");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      archiveScanner0.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      archiveScanner0.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      ArchiveScanner archiveScanner1 = new ArchiveScanner(improvedFile0);
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner1.filesExcluded = vector0;
      archiveScanner1.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      ArchiveScanner archiveScanner2 = new ArchiveScanner(improvedFile0);
      ArchiveScanner archiveScanner3 = new ArchiveScanner(improvedFile0);
      archiveScanner3.toFileType(improvedFile0);
      System.setCurrentTimeMillis(2);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("fgCX1:m]xPGV8%sp");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)58;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)6;
      byteArray0[4] = (byte)29;
      byteArray0[5] = (byte) (-92);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-92), 7);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.isArchive(improvedFile0);
      System.setCurrentTimeMillis((byte)58);
      System.setCurrentTimeMillis((byte)29);
      System.setCurrentTimeMillis((byte)29);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("eitNod:e", "eitNod:e");
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      pipedInputStream0.read(byteArray0, (int) (byte)0, (int) (byte)0);
      pipedInputStream0.connect(pipedOutputStream0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0);
      byte[] byteArray1 = new byte[2];
      byteArray1[0] = (byte) (-64);
      byteArray1[1] = (byte) (-99);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray1);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.isArchive(improvedFile0);
      System.setCurrentTimeMillis((-1966L));
      System.setCurrentTimeMillis((-1419L));
      System.setCurrentTimeMillis(0);
      System.setCurrentTimeMillis(3209L);
      System.setCurrentTimeMillis((byte)0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.8323649625844873
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      MockFile mockFile0 = new MockFile(":c$F");
      mockFile0.getCanonicalPath();
      mockFile0.getCanonicalPath();
      File file0 = mockFile0.getCanonicalFile();
      mockFile0.getCanonicalPath();
      file0.getCanonicalPath();
      File file1 = file0.getCanonicalFile();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("editNode/narc0");
      ImprovedFile improvedFile0 = ImprovedFile.createTempImprovedFile("OTHER_ERROR", "T", file1);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder(evoSuiteFile0);
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(file0, ".jar", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("eitNod:e", "eitNod:e");
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      pipedInputStream0.read(byteArray0, (int) (byte)0, (int) (byte)0);
      pipedInputStream0.connect(pipedOutputStream0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0);
      byte[] byteArray1 = new byte[2];
      byteArray1[0] = (byte) (-64);
      byteArray1[1] = (byte) (-99);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray1);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      System.setCurrentTimeMillis((byte) (-64));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0);
      System.setCurrentTimeMillis((-1L));
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      try { 
        archiveScanner0.scandir(improvedFile0, "KyFmI{mEL;sL(K5", true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // IO error scanning directory /home/ubuntu/termite/projects/78_caloriecount/eitNod:e/eitNod:e
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("eitNod:e");
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-64);
      byteArray0[1] = (byte) (-99);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((byte)0);
      try { 
        archiveScanner0.scandir(improvedFile0, "55p+\"/-O*B(", false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // IO error scanning directory /home/ubuntu/termite/projects/78_caloriecount/eitNod:e
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("eitNod:e", "eitNod:e");
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      pipedInputStream0.read(byteArray0, (int) (byte)0, (int) (byte)0);
      pipedInputStream0.connect(pipedOutputStream0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0);
      byte[] byteArray1 = new byte[2];
      byteArray1[0] = (byte) (-64);
      byteArray1[1] = (byte) (-99);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray1);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      System.setCurrentTimeMillis((byte) (-64));
      long long0 = 3771L;
      System.setCurrentTimeMillis(3771L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((byte)0);
      System.setCurrentTimeMillis(0L);
      try { 
        archiveScanner0.scanArchive(improvedFile0, "eitNod:e");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error trying to list archive, /home/ubuntu/termite/projects/78_caloriecount/eitNod:e/eitNod:e
         //
         verifyException("com.lts.io.archive.AbstractNestedArchive", e);
      }
  }
}
