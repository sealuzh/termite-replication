/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 30 10:17:55 GMT 2020
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.FileDescriptor;
import java.io.FilterInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.nio.CharBuffer;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JavaCharStream_ESTest extends JavaCharStream_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      try { 
        JavaCharStream.hexval('J');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      JavaCharStream.hexval('f');
      StringReader stringReader0 = new StringReader("~\"Py BTn?,~tnf");
      try { 
        JavaCharStream.hexval('N');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      char char0 = 'X';
      try { 
        JavaCharStream.hexval('X');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JavaCharStream.hexval('a');
      Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      JavaCharStream.hexval('a');
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      try { 
        JavaCharStream.hexval('Q');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.16924965202722864
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JavaCharStream.hexval('a');
      Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      JavaCharStream.hexval('a');
      StringReader stringReader0 = new StringReader("");
      JavaCharStream.hexval('F');
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream0, 10, 10, 15);
      StringReader stringReader1 = null;
      try {
        stringReader1 = new StringReader((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      try { 
        JavaCharStream.hexval('I');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      JavaCharStream.hexval('D');
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      try { 
        JavaCharStream.hexval(']');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.3829444252357833
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      int int0 = JavaCharStream.hexval('3');
      assertEquals(3, int0);
      
      int int1 = JavaCharStream.hexval('d');
      assertEquals(13, int1);
      
      StringReader stringReader0 = new StringReader("vdU5SP");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 94, 94);
      javaCharStream0.ReInit((Reader) stringReader0, (-2297), 3);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      JavaCharStream.hexval('7');
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)25;
      StringReader stringReader0 = new StringReader(".");
      try { 
        JavaCharStream.hexval('[');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.014314804342995
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      JavaCharStream.hexval('a');
      Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      StringReader stringReader0 = new StringReader("bv7y<4*j5E");
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream0, 79, 79);
      javaCharStream0.backup(10);
      javaCharStream0.getEndLine();
      javaCharStream0.getLine();
      javaCharStream0.adjustBeginLineColumn((-3807), 83);
      FileDescriptor fileDescriptor1 = new FileDescriptor();
      MockFileInputStream mockFileInputStream1 = new MockFileInputStream(fileDescriptor0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(mockFileInputStream1);
      JavaCharStream.hexval('a');
      javaCharStream0.getBeginColumn();
      javaCharStream0.BeginToken();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 771, 79, 1);
      // Undeclared exception!
      try { 
        javaCharStream1.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JavaCharStream.hexval('a');
      Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      JavaCharStream.hexval('5');
      StringReader stringReader0 = new StringReader("etAQjlN&$|G,tAE=");
      try { 
        JavaCharStream.hexval('@');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      JavaCharStream.hexval('A');
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      PushbackInputStream pushbackInputStream0 = null;
      try {
        pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0, (-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // size <= 0
         //
         verifyException("java.io.PushbackInputStream", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.5852029029350987
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1793, 97);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      javaCharStream0.backup((-1565));
      javaCharStream0.getEndLine();
      javaCharStream0.getLine();
      javaCharStream0.adjustBeginLineColumn((-1565), 97);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(mockFileInputStream0, mockFileInputStream0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0);
      try { 
        JavaCharStream.hexval('P');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      JavaCharStream.hexval('C');
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      int int0 = 21;
      PipedInputStream pipedInputStream1 = new PipedInputStream(21);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      int int1 = 1088;
      PipedInputStream pipedInputStream2 = new PipedInputStream(pipedOutputStream0, 1088);
      PipedOutputStream pipedOutputStream1 = null;
      try {
        pipedOutputStream1 = new PipedOutputStream(pipedInputStream2);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(dataInputStream0, (InputStream) null);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, (-1085), (-1904));
      // Undeclared exception!
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.349147260761637
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("e>7s$%");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-24), 1538);
      javaCharStream0.backup((-2553));
      javaCharStream0.getEndLine();
      javaCharStream0.getLine();
      javaCharStream0.adjustBeginLineColumn(3, 1);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0);
      JavaCharStream.hexval('b');
      javaCharStream0.getBeginColumn();
      javaCharStream0.BeginToken();
      javaCharStream0.ExpandBuff(true);
      javaCharStream0.adjustBeginLineColumn(3, 0);
      assertEquals(3, javaCharStream0.getBeginLine());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.0661061322173073
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      JavaCharStream.hexval('a');
      Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      StringReader stringReader0 = new StringReader("bv7y<4*j5E");
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream0, 79, 79);
      javaCharStream0.backup(10);
      javaCharStream0.getEndLine();
      javaCharStream0.getLine();
      javaCharStream0.adjustBeginLineColumn((-3807), 83);
      FileDescriptor fileDescriptor1 = new FileDescriptor();
      MockFileInputStream mockFileInputStream1 = new MockFileInputStream(fileDescriptor0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(mockFileInputStream1);
      JavaCharStream.hexval('a');
      JavaCharStream.hexval('b');
      JavaCharStream javaCharStream1 = new JavaCharStream(mockFileInputStream1);
      javaCharStream1.getBeginColumn();
      javaCharStream0.BeginToken();
      javaCharStream0.ExpandBuff(true);
      assertEquals((-3807), javaCharStream0.getBeginLine());
      
      javaCharStream1.adjustBeginLineColumn(10, (-3807));
      assertEquals(11, javaCharStream1.getBeginLine());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      try { 
        JavaCharStream.hexval('R');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.7496460482057054
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      JavaCharStream.hexval('B');
      StringReader stringReader0 = new StringReader("");
      JavaCharStream.hexval('B');
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-86);
      stringReader0.reset();
      byteArray0[1] = (byte)88;
      byteArray0[2] = (byte)53;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-1), 11, (-1));
      javaCharStream0.ReInit((Reader) stringReader0);
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.937155853065701
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 58, 83, 83);
      javaCharStream0.ReInit((Reader) stringReader0, 83, 4096, 83);
      javaCharStream0.GetImage();
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('!');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      try { 
        JavaCharStream.hexval('^');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.1742933185645
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      StringReader stringReader0 = new StringReader("GD}>zPHIT2VcF.");
      stringReader0.ready();
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.available();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      sequenceInputStream0.markSupported();
      javaCharStream0.backup(0);
      javaCharStream0.getColumn();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(sequenceInputStream0, sequenceInputStream0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(pushbackInputStream0, 16, 0);
      javaCharStream0.readChar();
      javaCharStream0.ReadByte();
      int int0 = javaCharStream0.getColumn();
      assertEquals(4096, javaCharStream0.bufpos);
      assertEquals(1, int0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.3043502584492974
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1793, 1793);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      javaCharStream0.backup((-24));
      javaCharStream0.getEndLine();
      javaCharStream0.getLine();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)94;
      byteArray0[1] = (byte) (-14);
      byteArray0[2] = (byte)122;
      byteArray0[3] = (byte) (-13);
      byteArray0[4] = (byte)86;
      byteArray0[5] = (byte)67;
      byteArray0[6] = (byte)78;
      byteArray0[7] = (byte)63;
      byteArray0[8] = (byte)107;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-13), 3);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      javaCharStream0.ReInit((InputStream) sequenceInputStream0, (int) (byte) (-14), (int) (byte)107);
      javaCharStream0.adjustBeginLineColumn((-24), 0);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(mockFileInputStream0);
      JavaCharStream.hexval('0');
      javaCharStream0.getBeginColumn();
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.2339492428947287
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      StringReader stringReader0 = new StringReader("GD}>zPHIT2VcF.");
      stringReader0.ready();
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.available();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      sequenceInputStream0.markSupported();
      javaCharStream0.backup(0);
      javaCharStream0.getColumn();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(sequenceInputStream0, sequenceInputStream0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(pushbackInputStream0, 16, 0);
      javaCharStream1.tokenBegin = 52;
      javaCharStream1.adjustBeginLineColumn(732, 99);
      char char0 = javaCharStream0.readChar();
      assertEquals(1, javaCharStream0.getEndColumn());
      assertEquals('G', char0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      try { 
        JavaCharStream.hexval('W');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      char char0 = 'U';
      try { 
        JavaCharStream.hexval('U');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.1524913125743104
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("e>7s$%");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-24), 1538);
      javaCharStream0.backup((-2553));
      javaCharStream0.getEndLine();
      javaCharStream0.getLine();
      int int0 = 3;
      javaCharStream0.adjustBeginLineColumn(3, 1);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0);
      javaCharStream0.getBeginColumn();
      javaCharStream0.BeginToken();
      JavaCharStream javaCharStream1 = null;
      try {
        javaCharStream1 = new JavaCharStream(stringReader0, 3, 0, (-24));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte)70;
      byteArray0[3] = (byte)60;
      byteArray0[4] = (byte)78;
      byteArray0[5] = (byte) (-27);
      byteArray0[6] = (byte) (-5);
      byteArray0[7] = (byte)0;
      byteArray0[8] = (byte) (-62);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      char char0 = javaCharStream0.ReadByte();
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals('\u0001', char0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.0742408502522707
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1793, 1793);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      javaCharStream0.backup((-24));
      javaCharStream0.getEndLine();
      javaCharStream0.getLine();
      javaCharStream0.adjustBeginLineColumn((-24), 0);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      JavaCharStream.hexval('0');
      javaCharStream0.getBeginColumn();
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.0587687884711756
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      FileDescriptor fileDescriptor1 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor1);
      StringReader stringReader0 = new StringReader("D:?45kD8CW,=");
      stringReader0.reset();
      StringReader stringReader1 = new StringReader("TaU");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 1, 1);
      javaCharStream0.GetImage();
      char[] charArray0 = javaCharStream0.nextCharBuf;
      javaCharStream0.getBeginColumn();
      javaCharStream0.GetImage();
      javaCharStream0.ReInit((Reader) stringReader1);
      javaCharStream0.FillBuff();
      javaCharStream0.BeginToken();
      javaCharStream0.UpdateLineColumn('T');
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.2489609101798247
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      JavaCharStream.hexval('7');
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0, 8);
      sequenceInputStream0.available();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, 0, 8);
      javaCharStream0.getBeginColumn();
      String string0 = javaCharStream0.GetImage();
      StringReader stringReader0 = new StringReader(string0);
      javaCharStream0.ReInit((Reader) stringReader0);
      javaCharStream0.readChar();
      stringReader0.read();
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.65645402234143
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      StringReader stringReader0 = new StringReader("GD}>zPHIT2VcF.");
      stringReader0.ready();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 5, 1650);
      javaCharStream0.GetImage();
      javaCharStream0.GetSuffix(1650);
      javaCharStream0.getBeginColumn();
      javaCharStream0.inBuf = (-533);
      javaCharStream0.getBeginColumn();
      javaCharStream0.adjustBeginLineColumn(4, (-493));
      javaCharStream0.backup(12);
      javaCharStream0.GetImage();
      javaCharStream0.ReInit((Reader) stringReader0);
      javaCharStream0.adjustBeginLineColumn(0, 5);
      assertEquals(5, javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      char char0 = 'M';
      try { 
        JavaCharStream.hexval('M');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      try { 
        JavaCharStream.hexval('?');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.2450352741261774
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      StringReader stringReader0 = new StringReader("D:?4@5kD8CW,=");
      stringReader0.reset();
      StringReader stringReader1 = new StringReader("TaU");
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      javaCharStream0.backup(1);
      javaCharStream0.GetImage();
      JavaCharStream javaCharStream1 = new JavaCharStream(mockFileInputStream0, 1, 3730, 3730);
      javaCharStream1.ReInit((Reader) null);
      // Undeclared exception!
      try { 
        javaCharStream1.readChar();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.1759980336542264
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      JavaCharStream.hexval('f');
      StringReader stringReader0 = new StringReader("~\"Py BTn?,~tnf");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 15, 15);
      StringReader stringReader1 = new StringReader("~\"Py BTn?,~tnf");
      stringReader1.reset();
      StringReader stringReader2 = new StringReader("~\"Py BTn?,~tnf");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, 1, 0);
      javaCharStream1.GetImage();
      char[] charArray0 = javaCharStream0.nextCharBuf;
      javaCharStream1.getBeginColumn();
      javaCharStream0.GetImage();
      javaCharStream0.ReInit((Reader) stringReader2);
      javaCharStream0.readChar();
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      char char0 = 'O';
      try { 
        JavaCharStream.hexval('O');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      try { 
        JavaCharStream.hexval('Y');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.1742933185645
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      StringReader stringReader0 = new StringReader("GD}>zPHIT2VcF.");
      stringReader0.ready();
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.available();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.backup(0);
      javaCharStream0.getColumn();
      assertEquals(4095, javaCharStream0.bufpos);
      
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(sequenceInputStream0, sequenceInputStream0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0);
      pushbackInputStream0.read();
      javaCharStream0.ReInit((Reader) stringReader0, 0, 0, 0);
      javaCharStream0.BeginToken();
      assertEquals(0, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.5884300759888124
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      StringReader stringReader0 = new StringReader("GD}>zPHIT2VcF.");
      stringReader0.ready();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 5, 1650);
      javaCharStream0.GetImage();
      javaCharStream0.GetSuffix(1650);
      javaCharStream0.getBeginColumn();
      javaCharStream0.getBeginColumn();
      javaCharStream0.adjustBeginLineColumn(4, (-493));
      javaCharStream0.GetImage();
      javaCharStream0.ReInit((Reader) stringReader0);
      javaCharStream0.adjustBeginLineColumn(0, 5);
      assertEquals(2, javaCharStream0.getBeginLine());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.5884300759888126
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)0;
      sequenceInputStream0.read(byteArray0, (int) (byte)0, (int) (byte) (-58));
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      int[] intArray0 = new int[9];
      intArray0[0] = (-1);
      intArray0[1] = (-1);
      intArray0[2] = (-1);
      intArray0[3] = (int) (byte) (-58);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      intArray0[4] = (int) (byte) (-58);
      intArray0[5] = (-1);
      intArray0[6] = (-1);
      intArray0[7] = (int) (byte)0;
      intArray0[8] = (int) (byte)0;
      javaCharStream0.bufline = intArray0;
      javaCharStream0.ReInit((InputStream) sequenceInputStream0);
      sequenceInputStream0.mark((-1));
      StringReader stringReader1 = new StringReader("Rq4~&");
      javaCharStream0.ReInit((Reader) stringReader1, (-69), (-1));
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('3');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      StringReader stringReader0 = new StringReader("GD}>zPHIT2VcF.");
      stringReader0.ready();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 5, 1650);
      javaCharStream0.GetImage();
      javaCharStream0.GetSuffix(1650);
      javaCharStream0.getBeginColumn();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)32;
      byteArray0[1] = (byte) (-67);
      int int0 = javaCharStream0.getBeginLine();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      StringReader stringReader0 = new StringReader("");
      stringReader0.ready();
      Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.available();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      sequenceInputStream0.markSupported();
      JavaCharStream javaCharStream1 = new JavaCharStream(mockFileInputStream0);
      javaCharStream1.backup((-1));
      // Undeclared exception!
      try { 
        javaCharStream0.getColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.3315483732983022
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      StringReader stringReader0 = new StringReader("GD}>zPHIT2VcF.");
      stringReader0.ready();
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.available();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-1), 10);
      javaCharStream0.GetImage();
      char[] charArray0 = javaCharStream0.nextCharBuf;
      javaCharStream1.getBeginColumn();
      javaCharStream1.GetImage();
      StringReader stringReader1 = new StringReader("@{>}0kt8_T}C]}{am");
      javaCharStream1.ReInit((Reader) stringReader1);
      javaCharStream1.BeginToken();
      assertEquals(1, javaCharStream1.getBeginColumn());
      
      javaCharStream0.FillBuff();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.AdjustBuffSize();
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 2048, 2048);
      javaCharStream0.ReInit((Reader) null);
      boolean boolean0 = false;
      javaCharStream0.prevCharIsLF = false;
      javaCharStream0.line = 2048;
      // Undeclared exception!
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      JavaCharStream.hexval('9');
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      StringReader stringReader0 = null;
      try {
        stringReader0 = new StringReader((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.7478680974667573
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(mockFileInputStream0);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)42;
      byteArray0[1] = (byte) (-78);
      byteArray0[2] = (byte)2;
      byteArray0[3] = (byte)117;
      FileSystemHandling.shouldAllThrowIOExceptions();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 3, 60);
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream0, 2048, 0);
      javaCharStream0.ReInit((InputStream) pushbackInputStream0, (int) (byte)117, (-1886));
      javaCharStream0.ReInit((InputStream) pushbackInputStream0, (int) (byte)2, (int) (byte)42);
      assertEquals(0, javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.64622455382987
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(mockFileInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0, 0, 12, 6116);
      javaCharStream0.adjustBeginLineColumn((-3584), 6124);
      pushbackInputStream0.mark(1446);
      javaCharStream0.ReInit((InputStream) mockFileInputStream0, 1, 1040, 1951);
      JavaCharStream javaCharStream1 = new JavaCharStream(pushbackInputStream0);
      javaCharStream1.ReInit((InputStream) pushbackInputStream0);
      int int0 = javaCharStream0.getBeginColumn();
      assertEquals(6124, int0);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.260203622997563
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      FileDescriptor fileDescriptor1 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor1);
      DataInputStream dataInputStream0 = new DataInputStream(mockFileInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(dataInputStream0, 66, 66, 2191);
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.adjustBeginLineColumn(0, 66);
      JavaCharStream javaCharStream1 = new JavaCharStream(mockFileInputStream0);
      javaCharStream1.GetImage();
      javaCharStream0.ReInit((InputStream) dataInputStream0, (-3063), 96, 66);
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0);
      javaCharStream2.ReInit((InputStream) dataInputStream0);
      javaCharStream2.getBeginColumn();
      StringReader stringReader1 = new StringReader("");
      javaCharStream0.ReInit((Reader) stringReader1);
      assertFalse(JavaCharStream.staticFlag);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      JavaCharStream.hexval('a');
      Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      FileDescriptor fileDescriptor1 = new FileDescriptor();
      try { 
        JavaCharStream.hexval(':');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      try { 
        JavaCharStream.hexval('Z');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.7478680974667573
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      StringReader stringReader0 = new StringReader("GD}>zPHIT2VcF.");
      stringReader0.ready();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 5, 1650);
      javaCharStream0.GetImage();
      char[] charArray0 = javaCharStream0.GetSuffix(1650);
      assertEquals(1650, charArray0.length);
      
      javaCharStream0.getBeginColumn();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(bufferedInputStream0);
      PushbackInputStream pushbackInputStream1 = new PushbackInputStream(bufferedInputStream0);
      pushbackInputStream0.mark((-1259));
      PushbackInputStream pushbackInputStream2 = new PushbackInputStream(pushbackInputStream1);
      pushbackInputStream0.read();
      javaCharStream0.ReInit((Reader) stringReader0, 0, 1650, 0);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      StringReader stringReader0 = new StringReader("GD}>zPHIT2VcF.");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      // Undeclared exception!
      try { 
        javaCharStream0.GetSuffix((-1));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.43817419880037084
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      JavaCharStream.hexval('f');
      StringReader stringReader0 = new StringReader("~\"Py BTn?,~tnf");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 15, 15);
      int int0 = (-1396);
      javaCharStream0.bufpos = (-1396);
      javaCharStream0.Done();
      // Undeclared exception!
      try { 
        javaCharStream0.adjustBeginLineColumn((-1899), 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.8605343774698508
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("wW,sG");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), (-1), 0);
      char[] charArray0 = javaCharStream0.GetSuffix(0);
      assertEquals(0, charArray0.length);
      
      char char0 = javaCharStream0.readChar();
      assertEquals('w', char0);
      
      int int0 = javaCharStream0.getEndColumn();
      assertEquals((-1), int0);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      try { 
        JavaCharStream.hexval('L');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.079151272882851
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      FileDescriptor fileDescriptor1 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor1);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(mockFileInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream0);
      javaCharStream0.adjustBeginLineColumn(0, 0);
      String string0 = javaCharStream0.GetImage();
      javaCharStream0.ReInit((InputStream) mockFileInputStream0, 0, (-405), (-405));
      javaCharStream0.ReInit((InputStream) pushbackInputStream0);
      javaCharStream0.getBeginColumn();
      StringReader stringReader0 = new StringReader(string0);
      CharBuffer charBuffer0 = CharBuffer.allocate(88);
      stringReader0.read(charBuffer0);
      assertEquals(0, charBuffer0.length());
      
      JavaCharStream javaCharStream1 = new JavaCharStream(pushbackInputStream0);
      javaCharStream1.ReInit((Reader) stringReader0);
      assertEquals(0, javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.351783994289646
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(mockFileInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream0, 0, 0, 0);
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.adjustBeginLineColumn((-2292), (-2292));
      assertEquals((-2292), javaCharStream0.getBeginColumn());
      
      javaCharStream0.ReInit((InputStream) pushbackInputStream0, (-1), 0, (-1854));
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.6915591643104242
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(mockFileInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream0, 1, 4, 1);
      javaCharStream0.backup(1);
      javaCharStream0.getEndLine();
      javaCharStream0.getLine();
      javaCharStream0.adjustBeginLineColumn((-1), 1);
      javaCharStream0.getEndColumn();
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.NativeMockedIO", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      try { 
        JavaCharStream.hexval('K');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      InputStream inputStream0 = null;
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.0587687884711756
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      FileDescriptor fileDescriptor1 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor1);
      StringReader stringReader0 = new StringReader("D:?45kD8CW,=");
      stringReader0.reset();
      StringReader stringReader1 = new StringReader("TaU");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 1, 1);
      javaCharStream0.GetImage();
      char[] charArray0 = javaCharStream0.nextCharBuf;
      javaCharStream0.getBeginColumn();
      javaCharStream0.GetImage();
      javaCharStream0.ReInit((Reader) stringReader1);
      javaCharStream0.BeginToken();
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.0348713328512753
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      StringReader stringReader0 = new StringReader("GD}>zPHIT2VcF.");
      stringReader0.ready();
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.available();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.backup(0);
      javaCharStream0.getColumn();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(sequenceInputStream0, sequenceInputStream0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0);
      pushbackInputStream0.read();
      stringReader0.markSupported();
      javaCharStream0.ReInit((Reader) stringReader0, (-2250), 400, 400);
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn(14, 400);
      assertEquals(400, javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.9356005054539458
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      int int0 = (-2491);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-2491), (-4345));
      javaCharStream0.backup((-1620));
      javaCharStream0.getEndLine();
      javaCharStream0.getLine();
      int int1 = 0;
      int int2 = 68;
      javaCharStream0.adjustBeginLineColumn(68, 3605);
      javaCharStream0.getEndColumn();
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.242453324894
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)96;
      byteArray0[1] = (byte)18;
      byteArray0[2] = (byte)117;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)96, (byte)18);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0, 2128);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedInputStream0, (byte)18, 6);
      // Undeclared exception!
      try { 
        javaCharStream0.getLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      PipedInputStream pipedInputStream0 = new PipedInputStream(92);
      pipedInputStream0.skip((-14L));
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      StringReader stringReader0 = new StringReader("{D#_Kc>PHlnl1/v7I");
      stringReader0.close();
      StringReader stringReader1 = new StringReader("BA");
      stringReader1.markSupported();
      StringReader stringReader2 = new StringReader("BA");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      // Undeclared exception!
      try { 
        javaCharStream0.getEndLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.5884300759888124
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0);
      StringReader stringReader0 = new StringReader("");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)7;
      javaCharStream0.ReInit((Reader) stringReader0, (int) (byte)7, 0);
      byte byte0 = (byte) (-1);
      javaCharStream0.ReInit((InputStream) pipedInputStream0, 0, (int) (byte)7);
      byteArray0[1] = (byte) (-1);
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('u');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      StringReader stringReader0 = new StringReader("GD}>zPHIT2VcF.");
      stringReader0.ready();
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 32, 1650);
      javaCharStream0.GetImage();
      javaCharStream0.GetSuffix(1650);
      javaCharStream0.getBeginColumn();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream1 = new JavaCharStream(pipedInputStream0, 0, 767);
      // Undeclared exception!
      try { 
        javaCharStream0.getEndColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.5403058252265167
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(mockFileInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0, 0, 0, 0);
      javaCharStream0.tokenBegin = 0;
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.adjustBeginLineColumn(0, 0);
      javaCharStream0.ReInit((InputStream) mockFileInputStream0, 4096, 1, 0);
      assertEquals(0, javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.5065950881316383
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, 0, 77, 73);
      javaCharStream0.ExpandBuff(false);
      int int0 = 0;
      javaCharStream0.adjustBeginLineColumn((-420), (-420));
      javaCharStream0.GetImage();
      int int1 = 885;
      javaCharStream0.ReInit((InputStream) sequenceInputStream0, 885, 73, 1);
      PushbackInputStream pushbackInputStream1 = new PushbackInputStream(sequenceInputStream0);
      BufferedInputStream bufferedInputStream0 = null;
      try {
        bufferedInputStream0 = new BufferedInputStream(pushbackInputStream1, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Buffer size <= 0
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.9867316488081912
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      StringReader stringReader0 = new StringReader(".");
      stringReader0.ready();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1650, (-4156));
      javaCharStream0.GetImage();
      javaCharStream0.GetSuffix(804);
      javaCharStream0.getBeginColumn();
      javaCharStream0.getBeginColumn();
      int int0 = 12;
      javaCharStream0.adjustBeginLineColumn(0, 807);
      javaCharStream0.backup(92);
      String string0 = javaCharStream0.GetImage();
      javaCharStream0.ReInit((Reader) stringReader0);
      // Undeclared exception!
      try { 
        CharBuffer.wrap((CharSequence) string0, 1650, 12);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      FileDescriptor fileDescriptor1 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor1);
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream0);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.AdjustBuffSize();
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, 78, 10, 10);
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=0.3373496508692947
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      JavaCharStream.hexval('D');
      String string0 = "";
      String string1 = "ZcS2@e_c}Sz7F7:x/";
      StringReader stringReader0 = new StringReader("ZcS2@e_c}Sz7F7:x/");
      int int0 = 929;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-195), 929);
      javaCharStream0.Done();
      // Undeclared exception!
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      StringReader stringReader0 = new StringReader("D3>Lx");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1905, (-22), 75);
      javaCharStream0.FillBuff();
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 76
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      try { 
        JavaCharStream.hexval(';');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      JavaCharStream.hexval('f');
      StringReader stringReader0 = new StringReader("~\"Py BTn?,~tnf");
      JavaCharStream.hexval('f');
      StringReader stringReader1 = new StringReader("");
      try { 
        JavaCharStream.hexval('V');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.4750763110546947
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      String string0 = "Invalid escape character at line ";
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      stringReader0.reset();
      stringReader0.skip(0L);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.Done();
      // Undeclared exception!
      try { 
        javaCharStream0.AdjustBuffSize();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      StringReader stringReader0 = new StringReader("m@X+O7t.]1).%8_[4?+");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-80);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte)117;
      byteArray0[4] = (byte)119;
      byteArray0[5] = (byte)51;
      byteArray0[6] = (byte) (-46);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1), 0);
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0, 3475, (int) (byte)0);
      byteArrayInputStream0.mark((byte) (-80));
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0, (-939), 0);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1793, 1793);
      javaCharStream0.backup(1);
      javaCharStream0.getEndLine();
      javaCharStream0.getLine();
      assertEquals(4094, javaCharStream0.bufpos);
      
      StringReader stringReader1 = new StringReader("kt~tlw~(A8_^sWR");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, 269, (-3323), 4061);
      assertEquals((-1), javaCharStream1.bufpos);
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      StringReader stringReader0 = new StringReader("k1iu81^)4\"U\"'~");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      int int0 = 0;
      javaCharStream0.GetSuffix(0);
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream(0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      byte[] byteArray0 = new byte[0];
      sequenceInputStream0.read(byteArray0, 88, 2);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, (-677), (-677), (-677));
      javaCharStream0.backup((-312));
      assertEquals(311, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.8121428103584718
  */
  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      StringReader stringReader0 = new StringReader("GD}>zPHIT2VcF.");
      int int0 = 5;
      stringReader0.ready();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 5, 1650);
      javaCharStream0.GetImage();
      javaCharStream0.GetSuffix(1650);
      javaCharStream0.getBeginColumn();
      javaCharStream0.getBeginColumn();
      javaCharStream0.adjustBeginLineColumn(4, (-493));
      javaCharStream0.backup(12);
      javaCharStream0.GetImage();
      javaCharStream0.ReInit((Reader) stringReader0);
      // Undeclared exception!
      try { 
        CharBuffer.wrap((CharSequence) "GD}>zPHIT2VcF.", 8, (-493));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      StringReader stringReader0 = new StringReader("k1iu81^)4\"U\"'~");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.GetSuffix(1);
      StringReader stringReader1 = new StringReader("o'im%T_u2aXY'_c");
      stringReader1.reset();
      StringReader stringReader2 = new StringReader("");
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 1);
      PipedInputStream pipedInputStream1 = null;
      try {
        pipedInputStream1 = new PipedInputStream(pipedOutputStream0, 667);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      boolean boolean0 = JavaCharStream.staticFlag;
      try { 
        JavaCharStream.hexval('-');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      StringReader stringReader0 = new StringReader("~\"Py BTn?,~tnf");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      int int0 = (-923);
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null, (-923), (-3675), 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=0.639031859650177
  */
  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-107);
      byteArray0[1] = (byte)96;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)41;
      byteArray0[4] = (byte)102;
      byteArray0[5] = (byte) (-44);
      byteArray0[6] = (byte)54;
      byteArray0[7] = (byte)18;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0, (byte)18, (byte)41, (byte)102);
      javaCharStream0.adjustBeginLineColumn(2380, (-1059));
      assertEquals((-1059), javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.7351264569629226
  */
  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      FileDescriptor fileDescriptor1 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor1);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(mockFileInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0, 6142, 78);
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.NativeMockedIO", e);
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=2.151466403024293
  */
  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      StringReader stringReader0 = new StringReader("GD}>zPHIT2VcF.");
      stringReader0.ready();
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 5, 1650);
      javaCharStream0.GetImage();
      javaCharStream0.GetSuffix(1650);
      javaCharStream0.getBeginColumn();
      javaCharStream0.GetImage();
      javaCharStream0.ReInit((Reader) stringReader0);
      javaCharStream0.readChar();
      StringReader stringReader1 = new StringReader(",I3*wIB6%L6yh");
      javaCharStream0.ReInit((Reader) stringReader0, 5, (-2250), 1650);
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.8388187084072372
  */
  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      StringReader stringReader0 = new StringReader("IjuP.UbEB0TYjMkqe");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1156, 1156, 3276);
      javaCharStream0.adjustBeginLineColumn(599, 9);
      javaCharStream0.ReInit((Reader) stringReader0, (-2973), 9);
      char char0 = javaCharStream0.BeginToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('I', char0);
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.ReInit((Reader) stringReader0, 2274, (-836));
      int int0 = 1;
      char[] charArray0 = new char[3];
      charArray0[0] = 'y';
      charArray0[1] = 'E';
      charArray0[2] = '`';
      // Undeclared exception!
      try { 
        stringReader0.read(charArray0, (-836), (-3590));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.ReInit((Reader) stringReader0, 15, 15, 15);
      assertFalse(JavaCharStream.staticFlag);
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 2129, 2129, 2129);
      FileSystemHandling.shouldAllThrowIOExceptions();
      javaCharStream0.ReInit((InputStream) pipedInputStream0, 2129, 2);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 94
  /*Coverage entropy=0.9502705392332347
  */
  @Test(timeout = 4000)
  public void test94()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((Reader) stringReader0, (-792), 87, (-43));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.5792331346113395
  */
  @Test(timeout = 4000)
  public void test95()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-104);
      byteArray0[1] = (byte)76;
      byteArray0[2] = (byte)86;
      byteArray0[3] = (byte)13;
      byteArray0[4] = (byte)119;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byteArray0[5] = (byte) (-16);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      StringReader stringReader0 = new StringReader("jssQo-;d");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)76, 93);
      char char0 = javaCharStream0.BeginToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('j', char0);
  }
}
