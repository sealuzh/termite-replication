/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 07:48:58 GMT 2019
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.ConcurrentModificationException;
import java.util.function.Predicate;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.businessLayer.VariableSummary;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.7020843809584587
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIsNewRecord(false);
      ValueLabel.validateFields((ValueLabel) null);
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setLabel("variable.name.label");
      rawVariable0.removeValueLabel(valueLabel0);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals(0, rawVariable1.getIdentifier());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("Unknown", rawVariable1.getAvailability());
      
      rawVariable0.getIdentifier();
      rawVariable0.setName((String) null);
      rawVariable0.getDisplayName();
      rawVariable0.addValueLabel(valueLabel0);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.764010092245748
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      derivedVariable0.setSupportingDocuments(arrayList0);
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("Unknown", derivedVariable1.getCategory());
      
      derivedVariable0.notes = null;
      derivedVariable0.getQuestionNumber();
      derivedVariable0.getCodeBookNumber();
      RawVariable rawVariable0 = new RawVariable();
      Variable.validateFields(rawVariable0);
      derivedVariable0.addSourceVariable(rawVariable0);
      derivedVariable0.getAlias();
      DerivedVariable derivedVariable2 = (DerivedVariable)derivedVariable0.clone();
      assertFalse(derivedVariable2.isNewRecord());
      assertEquals(0, derivedVariable2.getIdentifier());
      assertFalse(derivedVariable2.isCoded());
      assertFalse(derivedVariable2.isCleaned());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = null;
      // Undeclared exception!
      try { 
        derivedVariable0.containsSupportingDocument((SupportingDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.8189228240717084
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlias(">>qo&J<dra=@??");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.setYear(">>qo&J<dra=@??");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      rawVariable0.removeOntologyTerms(arrayList0);
      rawVariable0.clone();
      rawVariable0.getSupportingDocuments();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.removeValueLabel(valueLabel0);
      rawVariable0.setIsNewRecord(true);
      derivedVariable0.setCleaningStatus(">>qo&J<dra=@??");
      rawVariable0.hasSameDisplayName(derivedVariable0);
      derivedVariable0.containsSourceVariable(rawVariable0);
      derivedVariable0.containsSourceVariable(rawVariable0);
      rawVariable0.createVariableSummary();
      derivedVariable0.getYear();
      rawVariable0.getAlias();
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      User user1 = new User("", "");
      User.detectFieldChanges(user1, user0, user1);
      Variable.detectFieldChanges(user1, derivedVariable0, rawVariable0);
      derivedVariable0.isCleaned();
      derivedVariable0.clone();
      assertEquals(">>qo&J<dra=@??", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.684840477830768
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("?:a");
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      // Undeclared exception!
      try { 
        derivedVariable0.removeSourceVariables((ArrayList<Variable>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.208416664935306
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      user0.setUserID("");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      rawVariable0.getLabel();
      rawVariable0.getCodeBookNumber();
      rawVariable0.setCodeBookNumber("");
      rawVariable0.setColumnEnd("");
      Variable.validateFields(rawVariable0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.containsSourceVariable(derivedVariable1);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.listIterator();
      derivedVariable0.removeSourceVariables(arrayList0);
      ArrayList<SupportingDocument> arrayList1 = rawVariable0.getSupportingDocuments();
      rawVariable0.setSupportingDocuments(arrayList1);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      derivedVariable3.removeSourceVariable(rawVariable0);
      derivedVariable1.getAlias();
      derivedVariable0.containsSourceVariable(derivedVariable3);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable1.containsOntologyTerm(ontologyTerm0);
      // Undeclared exception!
      try { 
        derivedVariable2.removeOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.9492966540062766
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.clone();
      ontologyTerm0.setNewRecord(true);
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.columnStart = "variable.questionNumber.label";
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeOntologyTerms(arrayList0);
      rawVariable0.setQuestionNumber("variable.questionNumber.label");
      rawVariable0.getAlias();
      rawVariable0.setNotes("");
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setLabel("mB~gUW* }OG#");
      rawVariable0.removeValueLabel(valueLabel0);
      rawVariable0.clone();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.getIdentifier();
      rawVariable1.setCleaningStatus("x.iBsB");
      rawVariable1.setName("general.fieldValue.unknown");
      rawVariable1.getDisplayName();
      assertEquals("general.fieldValue.unknown", rawVariable1.getDisplayName());
      
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.addValueLabel(valueLabel0);
      assertEquals(0, rawVariable2.getIdentifier());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.8872385926133708
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable1);
      User user1 = new User("variable.isCleaned.saveChanges.changedToNotClean", "variable.columnStart.label");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      assertTrue(arrayList0.isEmpty());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.questionNumber = "variable.questionNumber.label";
      ontologyTerm0.clone();
      ontologyTerm0.clone();
      ontologyTerm0.setNewRecord(true);
      derivedVariable0.columnStart = "variable.questionNumber.label";
      VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("", variableSummary0.getLabel());
      assertEquals("", variableSummary0.getYear());
      assertEquals(0, variableSummary0.getIdentifier());
      assertEquals("", variableSummary0.getDisplayName());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.8778952727983707
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getDisplayItemIdentifier();
      derivedVariable0.getDisplayItemIdentifier();
      derivedVariable0.setCoded(true);
      derivedVariable0.setCategory("CQj?R8LKH!$|d");
      derivedVariable0.getColumnEnd();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.removeSourceVariables(arrayList0);
      derivedVariable0.getForm();
      derivedVariable0.setCleaned(true);
      derivedVariable0.setIsNewRecord(true);
      derivedVariable0.isNewRecord();
      derivedVariable0.getValueLabels();
      derivedVariable0.setSourceVariables(arrayList0);
      int int0 = derivedVariable0.getIdentifier();
      assertEquals("CQj?R8LKH!$|d", derivedVariable0.getCategory());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.852140740384332
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      supportingDocument0.setFilePath("9,P{\"fR");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.getFilePath();
      supportingDocument0.setTitle((String) null);
      derivedVariable1.setQuestionNumber("variable.isCoded.label");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.add(supportingDocument0);
      derivedVariable0.setSupportingDocuments(arrayList0);
      derivedVariable0.getCodeBookNumber();
      derivedVariable0.setCleaningDescription("variable.isCoded.label");
      derivedVariable0.getLabel();
      assertEquals("variable.isCoded.label", derivedVariable0.getCleaningDescription());
      
      SupportingDocument supportingDocument1 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      arrayList1.add(supportingDocument1);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeSupportingDocuments(arrayList1);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.getForm();
      boolean boolean0 = derivedVariable2.isNewRecord();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.0523132038287963
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      Variable.validateFields(rawVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFilePath("user.lastName.saveChanges");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getFilePath();
      supportingDocument0.setTitle("");
      derivedVariable0.setQuestionNumber("user.lastName.saveChanges");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.add(supportingDocument0);
      derivedVariable0.setSupportingDocuments(arrayList0);
      derivedVariable0.getCodeBookNumber();
      derivedVariable0.setCleaningDescription("");
      derivedVariable0.getLabel();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      arrayList0.add(supportingDocument1);
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.removeSupportingDocuments(arrayList1);
      derivedVariable0.getForm();
      derivedVariable0.getSupportingDocuments();
      assertEquals("user.lastName.saveChanges", derivedVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.8790891801877403
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(true);
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.columnStart = "variable.questionNumber.label";
      derivedVariable0.columnEnd = "variable.questionNumber.label";
      derivedVariable0.createVariableSummary();
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.add((Variable) derivedVariable0);
      User user0 = new User("", "variable.questionNumber.label");
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      arrayList0.ensureCapacity((-1864));
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.getDisplayItemIdentifier();
      derivedVariable0.getAvailability();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(derivedVariable2);
      derivedVariable1.form = "0";
      derivedVariable0.getAlias();
      derivedVariable2.containsSourceVariable(derivedVariable0);
      derivedVariable1.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      // Undeclared exception!
      try { 
        derivedVariable2.removeOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.7853437136837007
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.removeOntologyTerms(arrayList0);
      RawVariable rawVariable1 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle("");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setQuestionNumber("b$10\"");
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      arrayList1.add(supportingDocument0);
      derivedVariable1.setSupportingDocuments(arrayList1);
      derivedVariable0.getCodeBookNumber();
      derivedVariable0.setCleaningDescription("b$10\"");
      derivedVariable0.getLabel();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      arrayList1.add(supportingDocument3);
      RawVariable rawVariable2 = new RawVariable();
      rawVariable1.removeSupportingDocuments(arrayList2);
      derivedVariable1.getForm();
      derivedVariable1.getSupportingDocuments();
      assertEquals("b$10\"", derivedVariable1.getQuestionNumber());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.6636093674910186
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIdentifier((-1));
      ValueLabel valueLabel0 = new ValueLabel();
      User user0 = new User("$VALUES", "5LnMfD[uu");
      User user1 = new User();
      User user2 = new User("fq]k&~`8)jD+G+`BSS", "5LnMfD[uu");
      User.detectFieldChanges(user0, user0, user2);
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel1.setValue("5LnMfD[uu");
      ValueLabel.detectFieldChanges(user0, rawVariable0, valueLabel1, valueLabel1);
      valueLabel0.setIdentifier(1219);
      ValueLabel valueLabel2 = new ValueLabel();
      valueLabel2.setLabel("$VALUES");
      valueLabel1.setValue("$VALUES");
      rawVariable0.setIsNewRecord(false);
      ValueLabel.validateFields((ValueLabel) null);
      valueLabel2.setLabel("4<F F$");
      rawVariable0.removeValueLabel(valueLabel0);
      rawVariable0.clone();
      Variable.detectFieldChanges(user1, rawVariable0, rawVariable0);
      assertEquals("-1", rawVariable0.getDisplayItemIdentifier());
      
      user2.setAffiliation("fq]k&~`8)jD+G+`BSS");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.createVariableSummary();
      String string0 = derivedVariable0.getCategory();
      assertEquals("Unknown", string0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.686520078732908
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(true);
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.columnStart = "variable.questionNumber.label";
      derivedVariable0.columnEnd = "variable.questionNumber.label";
      derivedVariable0.createVariableSummary();
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.add((Variable) derivedVariable0);
      User user0 = new User("", "variable.questionNumber.label");
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      arrayList0.ensureCapacity((-1864));
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.getDisplayItemIdentifier();
      derivedVariable0.getAvailability();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(derivedVariable2);
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      User user1 = new User("Unknown", "Unknown");
      user1.setAffiliation("Q=sMU(K shzV");
      derivedVariable1.createVariableSummary();
      assertEquals("variable.questionNumber.label", derivedVariable0.getColumnStart());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.5717492339875285
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User("ON_EXISTNT_VALUE_LABELS", "CL\"l;n,WHU");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlias((String) null);
      rawVariable0.setLabel("macaw.businessLayer.Variable");
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.8973613322758496
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      user0.setUserID("");
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      
      rawVariable0.getLabel();
      rawVariable0.getCodeBookNumber();
      rawVariable0.setCodeBookNumber("");
      rawVariable0.setColumnEnd("");
      ArrayList<String> arrayList0 = Variable.validateFields(rawVariable0);
      assertEquals(1, arrayList0.size());
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.containsSourceVariable(derivedVariable1);
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      arrayList1.listIterator();
      derivedVariable0.removeSourceVariables(arrayList1);
      ArrayList<SupportingDocument> arrayList2 = rawVariable0.getSupportingDocuments();
      rawVariable0.setSupportingDocuments(arrayList2);
      rawVariable0.getLabel();
      derivedVariable1.codeBookNumber = null;
      derivedVariable1.cloneAttributes(rawVariable0);
      ArrayList<OntologyTerm> arrayList3 = rawVariable0.getOntologyTerms();
      rawVariable0.addOntologyTerms(arrayList3);
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("Unknown", rawVariable0.getAvailability());
      
      derivedVariable1.setCleaningStatus("");
      derivedVariable0.getAvailability();
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.7620571876813678
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      Variable.validateFields(rawVariable0);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      rawVariable0.getCodeBookNumber();
      rawVariable0.notes = "general.fieldValue.unknown";
      rawVariable0.getLabel();
      rawVariable0.getLabel();
      rawVariable1.clone();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.setCategory("general.fieldValue.unknown");
      rawVariable0.hasSameDisplayName(rawVariable2);
      assertEquals("general.fieldValue.unknown", rawVariable2.getCategory());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.8657987404222722
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIdentifier((-1));
      ValueLabel valueLabel0 = new ValueLabel();
      User user0 = new User("lha.mrc.ac.uk:LHA", "lha.mrc.ac.uk:LHA");
      User user1 = new User();
      User.detectFieldChanges(user0, user1, user0);
      valueLabel0.setValue("lha.mrc.ac.uk:LHA");
      ValueLabel.detectFieldChanges(user0, rawVariable0, valueLabel0, valueLabel0);
      valueLabel0.setIdentifier(1219);
      valueLabel0.setValue("}`");
      rawVariable0.setIsNewRecord(false);
      ValueLabel.validateFields((ValueLabel) null);
      valueLabel0.setLabel("opGth");
      rawVariable0.clone();
      rawVariable0.getIdentifier();
      rawVariable0.setName("variable.name.label");
      rawVariable0.getDisplayName();
      ValueLabel valueLabel1 = new ValueLabel();
      rawVariable0.addValueLabel(valueLabel1);
      assertEquals("variable.name.label", rawVariable0.getName());
      
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.getFilePath();
      rawVariable1.getYear();
      RawVariable.validateFields(rawVariable0);
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.setColumnEnd((String) null);
      String string0 = derivedVariable0.getForm();
      assertNotNull(string0);
      
      VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, variableSummary0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeSupportingDocuments(arrayList0);
      derivedVariable0.getAlternativeVariable();
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.80563593490601
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCoded(true);
      RawVariable rawVariable1 = new RawVariable();
      User user0 = new User();
      rawVariable1.form = "Fv^[qsO|~\r";
      rawVariable1.questionNumber = "_ydT``GkC";
      user0.setCity("");
      RawVariable rawVariable2 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable2);
      rawVariable0.hasSameDisplayName(rawVariable1);
      rawVariable0.getDisplayItemIdentifier();
      rawVariable1.setIsNewRecord(true);
      assertEquals("_ydT``GkC", rawVariable1.getQuestionNumber());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.8619539145877404
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      supportingDocument0.setFilePath("9,P{\"fR");
      derivedVariable0.getFilePath();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.setAlias("9,P{\"fR");
      rawVariable0.getOntologyTerms();
      User user0 = new User("_2?-Okl pv&|.}mV|PW", "9,P{\"fR");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      try { 
        OntologyTerm.validateFields(ontologyTerm3);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.OntologyTerm", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.removeOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.removeValueLabel(valueLabel0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      try { 
        OntologyTerm.validateFields(ontologyTerm2);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.OntologyTerm", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.786456060735981
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.removeOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      arrayList1.ensureCapacity((-3637));
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setSourceVariables(arrayList1);
      String string0 = derivedVariable0.getDisplayItemIdentifier();
      assertEquals("0", string0);
      
      String string1 = derivedVariable0.getAvailability();
      assertEquals("Unknown", string1);
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(derivedVariable1);
      derivedVariable0.getAlias();
      derivedVariable1.containsSourceVariable(rawVariable0);
      boolean boolean0 = derivedVariable1.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
      
      derivedVariable1.removeOntologyTerm(ontologyTerm0);
      derivedVariable1.removeOntologyTerms(arrayList0);
      derivedVariable1.setSourceVariables(arrayList1);
      assertEquals(0, derivedVariable1.getIdentifier());
      assertFalse(derivedVariable1.isNewRecord());
      assertFalse(derivedVariable1.isCoded());
      assertFalse(derivedVariable1.isCleaned());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.8493821196946767
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      supportingDocument0.setFilePath("9,P{\"fR");
      derivedVariable0.getFilePath();
      supportingDocument0.setTitle("9,P{\"fR");
      derivedVariable0.setQuestionNumber("");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.add(supportingDocument0);
      derivedVariable0.setSupportingDocuments(arrayList0);
      derivedVariable0.getCodeBookNumber();
      derivedVariable0.setCleaningDescription("");
      derivedVariable0.getLabel();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      arrayList1.add(supportingDocument2);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeSupportingDocuments(arrayList1);
      derivedVariable0.containsSourceVariable(rawVariable0);
      // Undeclared exception!
      try { 
        derivedVariable0.containsOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.4435896416877303
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      assertFalse(derivedVariable0.isNewRecord());
      
      derivedVariable0.setIsNewRecord(true);
      derivedVariable0.setForm("");
      derivedVariable0.isCoded();
      Variable.validateFields(derivedVariable0);
      assertTrue(derivedVariable0.isNewRecord());
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.745910136412458
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      String string0 = "";
      rawVariable0.setYear("");
      rawVariable0.setQuestionNumber("");
      rawVariable0.setAvailability("S^~(S1Eai{d[H");
      User user0 = new User("I7F:qe-?#VnKqhToK", "S^~(S1Eai{d[H");
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      ArrayList<SupportingDocument> arrayList0 = null;
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      try { 
        OntologyTerm.validateFields(ontologyTerm0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.OntologyTerm", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.5545558491949714
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      System.setCurrentTimeMillis((-1L));
      User user0 = new User("Q1-i+", "UNABLE_TO_GET_ALIAS_FILE_PATH_IDENTIFIER");
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertTrue(arrayList0.isEmpty());
      
      rawVariable0.getColumnEnd();
      rawVariable0.getCleaningDescription();
      rawVariable0.getName();
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.555632017870312
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getCleaningStatus();
      derivedVariable0.getDisplayItemIdentifier();
      derivedVariable0.setCleaningDescription("Unknown");
      derivedVariable0.getDisplayItemIdentifier();
      derivedVariable0.setCoded(true);
      derivedVariable0.getColumnEnd();
      derivedVariable0.getCategory();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.setCoded(false);
      derivedVariable0.removeSourceVariables(arrayList0);
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis(3019L);
      derivedVariable0.getCleaningDescription();
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=3.737991777779281
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      
      User user1 = new User("WA", "WA");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      user1.setAddressLine2("WA");
      user1.setPostCode("");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument1);
      Variable.detectFieldChanges(user1, derivedVariable1, derivedVariable0);
      user1.setAffiliation("b$10\"");
      VariableSummary variableSummary0 = derivedVariable1.createVariableSummary();
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
      
      derivedVariable1.isCoded();
      DerivedVariable derivedVariable2 = (DerivedVariable)derivedVariable0.clone();
      assertEquals("Unknown", derivedVariable2.getAvailability());
      assertEquals("Unknown", derivedVariable2.getCategory());
      assertFalse(derivedVariable2.isNewRecord());
      
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user1, derivedVariable1, derivedVariable0);
      assertEquals(0, arrayList0.size());
      
      derivedVariable1.addSourceVariable(derivedVariable0);
      derivedVariable0.getAlternativeVariable();
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setFilePath("DE,>F");
      derivedVariable0.setCleaningDescription("variable.category.label");
      derivedVariable0.setQuestionNumber("variable.category.label");
      derivedVariable0.setCleaningDescription("variable.category.label");
      derivedVariable0.getSourceVariables();
      derivedVariable0.getAlias();
      derivedVariable0.getFilePath();
      int int0 = derivedVariable0.getIdentifier();
      assertEquals("variable.category.label", derivedVariable0.getCleaningDescription());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.85602069355517
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.removeSupportingDocument(supportingDocument0);
      rawVariable0.createVariableSummary();
      rawVariable0.clone();
      rawVariable0.getAlias();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      supportingDocument0.setDescription("");
      ontologyTerm0.setIdentifier(0);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.removeOntologyTerms(arrayList0);
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      // Undeclared exception!
      try { 
        rawVariable0.updateOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.4140088201964183
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User("ON_EXISTNT_VALUE_LABELS", "ON_EXISTNT_VALUE_LABELS");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlias((String) null);
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.620959571408677
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.notes = "b$10\"";
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      // Undeclared exception!
      try { 
        derivedVariable0.removeSourceVariables((ArrayList<Variable>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.9676652704776565
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<ValueLabel> arrayList0 = rawVariable0.getValueLabels();
      ValueLabel valueLabel0 = new ValueLabel();
      arrayList0.add(valueLabel0);
      arrayList0.add(valueLabel0);
      rawVariable0.setName("user.affiliation.label");
      arrayList0.trimToSize();
      arrayList0.add(valueLabel0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(true);
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.setValueLabels(arrayList0);
      rawVariable0.setCodeBookNumber("user.affiliation.label");
      rawVariable0.setQuestionNumber("user.affiliation.label");
      rawVariable0.setCleaningDescription((String) null);
      rawVariable0.getCodeBookNumber();
      rawVariable0.getAlias();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      rawVariable0.addSupportingDocument(supportingDocument0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable1);
      assertEquals("user.affiliation.label", rawVariable0.getName());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.218456332760875
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean0);
      
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList0.add(supportingDocument1);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<ValueLabel> arrayList1 = rawVariable0.getValueLabels();
      rawVariable1.setValueLabels(arrayList1);
      rawVariable1.setCodeBookNumber("");
      rawVariable1.removeSupportingDocuments(arrayList0);
      assertFalse(rawVariable1.isNewRecord());
      assertEquals(0, rawVariable1.getIdentifier());
      assertFalse(rawVariable1.isCoded());
      assertFalse(rawVariable1.isCleaned());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.removeOntologyTerms(arrayList0);
      rawVariable0.form = "]W5v$2N:H:8`)(/j^";
      rawVariable0.getCodeBookNumber();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      rawVariable0.addSupportingDocuments(arrayList1);
      String string0 = rawVariable0.getCodeBookNumber();
      assertEquals("", string0);
      
      rawVariable0.setQuestionNumber("");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      Variable variable0 = null;
      // Undeclared exception!
      try { 
        rawVariable0.addSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) supportingDocument1);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList1.removeIf(predicate0);
      rawVariable0.removeOntologyTerms(arrayList1);
      rawVariable0.setCleaned(true);
      rawVariable0.getOntologyTerms();
      ArrayList<SupportingDocument> arrayList2 = rawVariable0.getSupportingDocuments();
      arrayList2.add(supportingDocument0);
      // Undeclared exception!
      try { 
        rawVariable0.removeSupportingDocuments(arrayList2);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.555632017870312
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getCleaningStatus();
      derivedVariable0.getDisplayItemIdentifier();
      derivedVariable0.setCleaningDescription("Unknown");
      derivedVariable0.getDisplayItemIdentifier();
      derivedVariable0.setCoded(true);
      derivedVariable0.getColumnEnd();
      derivedVariable0.getCategory();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.setCoded(false);
      derivedVariable0.removeSourceVariables(arrayList0);
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis(3019L);
      derivedVariable0.getCleaningDescription();
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getColumnStart();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("");
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.setCoded(false);
      rawVariable0.setYear("");
      // Undeclared exception!
      try { 
        rawVariable0.hasSameDisplayName((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=3.7643399205182275
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User((String) null, "b$10\"");
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertNotNull(macawChangeEvent0);
      
      User user1 = new User((String) null, "UNABLE_TO_GET_CHANGES_FOR_USER");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable1.addSupportingDocument(supportingDocument0);
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      user1.setAffiliation("b$10\"");
      VariableSummary variableSummary0 = derivedVariable1.createVariableSummary();
      assertEquals(0, variableSummary0.getIdentifier());
      
      derivedVariable1.getFilePath();
      derivedVariable1.cloneAttributes(derivedVariable0);
      derivedVariable1.getAlternativeVariable();
      derivedVariable1.addSourceVariable(derivedVariable0);
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.784066574475527
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFilePath("9,P{\"fR");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getFilePath();
      supportingDocument0.setTitle("");
      derivedVariable0.setQuestionNumber("OMh`7F>?WD@EK");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.add(supportingDocument0);
      derivedVariable0.setSupportingDocuments(arrayList0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.getCodeBookNumber();
      derivedVariable0.setCleaningDescription("Kq[~YF!g");
      derivedVariable1.getLabel();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      arrayList0.add(supportingDocument2);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.removeSupportingDocuments(arrayList1);
      derivedVariable1.getForm();
      derivedVariable0.getSupportingDocuments();
      assertEquals("OMh`7F>?WD@EK", derivedVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=3.785406854138612
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setValue("V{wmk2R");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIsNewRecord(false);
      ValueLabel.validateFields((ValueLabel) null);
      valueLabel0.setLabel("V{wmk2R");
      rawVariable0.removeValueLabel(valueLabel0);
      rawVariable0.clone();
      rawVariable0.getIdentifier();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setCodeBookNumber((String) null);
      rawVariable1.setName("opGth");
      rawVariable0.getDisplayName();
      rawVariable1.addValueLabel((ValueLabel) null);
      assertEquals("opGth", rawVariable1.getDisplayName());
      
      rawVariable0.getCleaningDescription();
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.9397928111645655
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      supportingDocument0.setFilePath("Euq");
      derivedVariable0.getFilePath();
      supportingDocument0.setTitle("");
      derivedVariable0.setQuestionNumber("");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.add(supportingDocument0);
      derivedVariable0.setSupportingDocuments(arrayList0);
      derivedVariable0.getCodeBookNumber();
      derivedVariable0.setCleaningDescription("UNABLE_TO_UPDATE_DERIVED_VARIABLE");
      derivedVariable0.getLabel();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      arrayList1.add(supportingDocument3);
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList2 = derivedVariable0.getSupportingDocuments();
      rawVariable0.removeSupportingDocuments(arrayList2);
      derivedVariable0.getForm();
      derivedVariable0.getSourceVariables();
      derivedVariable0.getYear();
      assertEquals("UNABLE_TO_UPDATE_DERIVED_VARIABLE", derivedVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.4696072829762055
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("?:a");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      try { 
        OntologyTerm.validateFields(ontologyTerm3);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.OntologyTerm", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnStart("iiL");
      derivedVariable0.getForm();
      assertEquals("iiL", derivedVariable0.getColumnStart());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=3.6191886517369616
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean0);
      
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeSupportingDocuments(arrayList0);
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertFalse(derivedVariable1.isCoded());
      assertFalse(derivedVariable1.isCleaned());
      assertFalse(derivedVariable1.isNewRecord());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=3.7048489620387994
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIdentifier((-1));
      ValueLabel valueLabel0 = new ValueLabel();
      User user0 = new User("lha.mrc.ac.uk:LHA", "lha.mrc.ac.uk:LHA");
      User user1 = new User("lha.mrc.ac.uk:LHA", "lha.mrc.ac.uk:LHA");
      User.detectFieldChanges(user0, user1, user0);
      valueLabel0.setValue("lha.mrc.ac.uk:LHA");
      ValueLabel.detectFieldChanges(user0, rawVariable0, valueLabel0, valueLabel0);
      valueLabel0.setLabel("}`");
      valueLabel0.setIdentifier(1219);
      valueLabel0.setValue("}`");
      rawVariable0.setIsNewRecord(false);
      ValueLabel.validateFields((ValueLabel) null);
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel1.setLabel("macaw.businessLayer.Variable");
      rawVariable0.removeValueLabel((ValueLabel) null);
      rawVariable0.clone();
      Variable.detectFieldChanges(user1, rawVariable0, rawVariable0);
      assertEquals("-1", rawVariable0.getDisplayItemIdentifier());
      
      user1.setAffiliation("v]R~]");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.createVariableSummary();
      Variable.validateFields(derivedVariable0);
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.setOntologyTerms(arrayList0);
      derivedVariable0.getSupportingDocuments();
      derivedVariable0.setCodeBookNumber((String) null);
      derivedVariable0.getQuestionNumber();
      String string0 = derivedVariable0.getAlias();
      assertNotNull(string0);
      
      String string1 = derivedVariable0.getQuestionNumber();
      assertNotNull(string1);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=3.5815589327537127
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      String string0 = "1c1a";
      rawVariable0.form = "1c1a";
      rawVariable0.setCleaningDescription("1c1a");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.cloneAttributes(rawVariable1);
      rawVariable0.setLabel("1c1a");
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, rawVariable1, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=3.5807156256483044
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.setYear("variable.questionNumber.label");
      ontologyTerm0.setTerm("variable.questionNumber.label");
      ontologyTerm0.setNewRecord(true);
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.columnStart = "variable.questionNumber.label";
      derivedVariable0.createVariableSummary();
      derivedVariable0.clone();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      User user0 = new User("2$UFMLyXk", "FRLXV]nK\"9r?4DlV3G*");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.removeSourceVariables(arrayList0);
      assertEquals("variable.questionNumber.label", derivedVariable0.getYear());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=3.8141894835335037
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      supportingDocument0.setFilePath("9,P{\"fR");
      derivedVariable0.getFilePath();
      supportingDocument0.setTitle("9,P{\"fR");
      derivedVariable0.setQuestionNumber("");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.add(supportingDocument0);
      derivedVariable0.setSupportingDocuments(arrayList0);
      derivedVariable0.getCodeBookNumber();
      derivedVariable0.setCleaningDescription("");
      derivedVariable0.getLabel();
      derivedVariable0.getSupportingDocuments();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.addValueLabel(valueLabel0);
      derivedVariable0.isCleaned();
      derivedVariable0.setIsNewRecord(true);
      derivedVariable0.getCleaningStatus();
      derivedVariable0.setIdentifier(0);
      derivedVariable0.getName();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.addSourceVariable(derivedVariable1);
      assertFalse(derivedVariable1.isNewRecord());
      
      derivedVariable0.clone();
      assertTrue(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.576534609090467
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      Variable.validateFields(rawVariable0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.setCoded(false);
      rawVariable0.setYear("AZ&D@^x");
      // Undeclared exception!
      try { 
        rawVariable0.hasSameDisplayName((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.022248870579868
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setNotes("&8ca7[>");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertEquals("&8ca7[>", derivedVariable0.getNotes());
      
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeSupportingDocuments(arrayList0);
      rawVariable0.getSupportingDocuments();
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.2141739247775263
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertNotNull(macawChangeEvent0);
      assertEquals(0, macawChangeEvent0.getChangedObjectIdentifier());
      
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      boolean boolean0 = derivedVariable1.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
      assertFalse(derivedVariable1.isCleaned());
      assertFalse(derivedVariable1.isCoded());
      assertFalse(derivedVariable1.isNewRecord());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnStart = "variable.cleaningDescription.label";
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.removeOntologyTerms(arrayList0);
      RawVariable rawVariable1 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable1.containsOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = null;
      rawVariable1.updateOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      rawVariable1.setCleaningStatus("variable.cleaningDescription.label");
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      try { 
        OntologyTerm.validateFields(ontologyTerm0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.OntologyTerm", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.4942662253853725
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      rawVariable0.removeSupportingDocuments(arrayList0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.hasSameDisplayName(rawVariable0);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.786724494755577
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      arrayList0.add(supportingDocument0);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIdentifier(683);
      rawVariable0.removeSupportingDocuments(arrayList0);
      assertEquals("683", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=3.795898337549952
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      Variable.validateFields(rawVariable0);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      rawVariable0.getCodeBookNumber();
      rawVariable0.notes = "general.fieldValue.unknown";
      rawVariable0.getLabel();
      rawVariable0.getLabel();
      rawVariable1.getNotes();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.993564320523925
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      User user1 = new User("", "WA");
      derivedVariable0.setYear("$VALUES");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable1.addSupportingDocument(supportingDocument0);
      Variable.detectFieldChanges(user1, derivedVariable1, derivedVariable0);
      user1.setAffiliation("N5ul5$`>'q@|S6\"cx");
      derivedVariable0.createVariableSummary();
      derivedVariable0.getDisplayItemIdentifier();
      assertEquals("$VALUES", derivedVariable0.getYear());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=3.7948111446819373
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<String> arrayList0 = Variable.validateFields(rawVariable0);
      assertFalse(arrayList0.isEmpty());
      
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      rawVariable0.getCodeBookNumber();
      rawVariable1.getLabel();
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertFalse(rawVariable1.isCoded());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals(0, rawVariable1.getIdentifier());
      
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      rawVariable0.addOntologyTerms(arrayList1);
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=3.7478641359161475
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIdentifier((-1));
      ValueLabel valueLabel0 = new ValueLabel();
      User user0 = new User("lha.mrc.ac.uk:LHA", "lha.mrc.ac.uk:LHA");
      ValueLabel.detectFieldChanges(user0, rawVariable0, valueLabel0, valueLabel0);
      valueLabel0.setLabel("}`");
      valueLabel0.setIdentifier(1219);
      valueLabel0.setLabel("user.affiliation.label");
      valueLabel0.setValue("user.affiliation.label");
      rawVariable0.setIsNewRecord(false);
      ValueLabel.validateFields((ValueLabel) null);
      valueLabel0.setLabel("opGth");
      rawVariable0.removeValueLabel(valueLabel0);
      rawVariable0.clone();
      rawVariable0.getIdentifier();
      rawVariable0.setName("user.affiliation.label");
      rawVariable0.getDisplayName();
      rawVariable0.addValueLabel((ValueLabel) null);
      assertEquals((-1), rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      supportingDocument0.setFilePath("9,P{\"fR");
      derivedVariable0.getFilePath();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      // Undeclared exception!
      try { 
        rawVariable0.updateOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.9935433028254361
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      String string0 = null;
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList1.sort(comparator0);
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerms(arrayList1);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.214534764133424
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      rawVariable0.removeOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm2);
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      // Undeclared exception!
      try { 
        OntologyTerm.validateFields((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.OntologyTerm", e);
      }
  }
}
