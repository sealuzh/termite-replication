/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 14:43:42 GMT 2019
 */

package org.pdfsam.guiclient.commons.models;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.lowagie.text.pdf.PdfGraphics2D;
import java.awt.AWTEventMulticaster;
import java.awt.Dimension;
import java.awt.GridBagLayout;
import java.awt.RenderingHints;
import java.awt.event.HierarchyBoundsListener;
import java.awt.event.KeyListener;
import java.awt.image.RescaleOp;
import java.awt.image.renderable.ParameterBlock;
import java.io.ByteArrayInputStream;
import java.util.ArrayDeque;
import java.util.ArrayList;
import java.util.Collection;
import java.util.LinkedList;
import java.util.Locale;
import java.util.Map;
import java.util.SortedSet;
import java.util.TreeSet;
import java.util.Vector;
import java.util.function.Predicate;
import javax.media.jai.CollectionOp;
import javax.media.jai.OperationRegistry;
import javax.media.jai.PlanarImage;
import javax.media.jai.SnapshotImage;
import javax.media.jai.operator.DFTScalingType;
import javax.media.jai.operator.IDFTDescriptor;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JLayeredPane;
import javax.swing.JPanel;
import javax.swing.event.ListDataListener;
import javax.swing.text.DefaultEditorKit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.pdfsam.guiclient.commons.models.VisualListModel;
import org.pdfsam.guiclient.dto.VisualPageListItem;
import sun.awt.SunHints;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class VisualListModel_ESTest extends VisualListModel_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.746097728446498
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.setData(vector0);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.reverseElements(intArray0);
      visualListModel2.moveUpIndexes(intArray0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[4];
      visualListModel2.rotateClockwiseElements(intArray0);
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      visualListModel2.prependAllElements(arrayList0);
      visualListModel1.setData(visualPageListItemArray0);
      visualListModel1.removeElements(intArray0, true);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      visualListModel2.moveDownIndexes(intArray0);
      visualListModel2.setData(visualPageListItemArray0);
      visualListModel1.getSize();
      // Undeclared exception!
      try { 
        visualListModel1.removeElements(intArray0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.563413311326071
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      VisualPageListItem visualPageListItem0 = null;
      visualListModel0.addElement((VisualPageListItem) null);
      Boolean boolean0 = new Boolean("mxr|{L?oyHh%9kxw");
      visualListModel0.reverseElements(intArray0);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_COLOR_RENDERING;
      RenderingHints renderingHints0 = new RenderingHints(sunHints_Key0, "mxr|{L?oyHh%9kxw");
      // Undeclared exception!
      try { 
        visualListModel0.removeElements(intArray0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.812523309532779
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.addElement((VisualPageListItem) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "l!/mSo22jCU8m$c");
      visualListModel0.reverseElements(intArray0);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_COLOR_RENDERING;
      RenderingHints renderingHints0 = new RenderingHints(sunHints_Key0, "mxr|{L?oyHh%9kxw");
      renderingHints0.clone();
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_ALPHA_INTERPOLATION;
      RenderingHints renderingHints1 = new RenderingHints(sunHints_Key0, sunHints_Key1);
      float[] floatArray0 = new float[7];
      floatArray0[0] = (float) 414;
      floatArray0[1] = (float) (-1044);
      floatArray0[2] = (float) (-1044);
      floatArray0[3] = (float) 414;
      floatArray0[4] = 0.0F;
      floatArray0[5] = (float) 414;
      floatArray0[6] = (float) 414;
      RescaleOp rescaleOp0 = new RescaleOp(floatArray0, floatArray0, renderingHints0);
      visualListModel0.moveUpIndexes(intArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "M%L2q");
      visualListModel0.moveDownIndexes(intArray0);
      assertEquals(1, intArray0.length);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.6802458088846386
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Collection<VisualPageListItem> collection0 = visualListModel0.subList(0, 0, true);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "mxrm{L??yHh%Ukxw");
      int[] intArray0 = new int[2];
      intArray0[0] = 0;
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      vector0.add((VisualPageListItem) null);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel0.setData(vector0);
      int[] intArray1 = new int[4];
      intArray1[0] = 0;
      intArray1[1] = 0;
      intArray1[2] = 0;
      intArray1[3] = 0;
      visualListModel1.moveDownIndexes(intArray1);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel0.addAllElements((-732), collection0);
      visualListModel0.reverseElements(intArray0);
      VisualListModel visualListModel3 = new VisualListModel();
      visualListModel3.moveUpIndexes(intArray0);
      visualListModel0.reverseElements(intArray0);
      assertEquals(1, visualListModel0.getSize());
      
      visualListModel1.rotateClockwiseElements(intArray0);
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      visualListModel2.prependAllElements(arrayList0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[2];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualListModel3.setData(visualPageListItemArray0);
      visualListModel3.moveUpIndexes(intArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ":pri=[");
      visualListModel1.rotateClockwiseElements(intArray0);
      visualListModel3.reverseElements(intArray0);
      assertEquals(2, visualListModel3.getSize());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.7257792872361097
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      DefaultComboBoxModel<Integer> defaultComboBoxModel0 = new DefaultComboBoxModel<Integer>();
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(defaultComboBoxModel0);
      visualListModel0.addListDataListener(jComboBox0);
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      vector0.add((VisualPageListItem) null);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.setData(vector0);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.reverseElements(intArray0);
      visualListModel2.moveUpIndexes(intArray0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[3];
      visualListModel0.reverseElements(intArray0);
      visualListModel2.rotateClockwiseElements(intArray0);
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      visualListModel2.prependAllElements(arrayList0);
      visualListModel1.setData(visualPageListItemArray0);
      visualListModel1.removeElements(intArray0, true);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      visualListModel2.moveUpIndex(1321);
      visualListModel2.rotateClockwiseElements(intArray0);
      visualListModel0.reverseElements(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.5012964739744272
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.addElement((VisualPageListItem) null);
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      vector0.add((VisualPageListItem) null);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel0.setData(vector0);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel0.reverseElements(intArray0);
      visualListModel1.moveUpIndexes(intArray0);
      int[] intArray1 = new int[7];
      intArray1[0] = 414;
      intArray1[1] = 414;
      intArray1[2] = 9999;
      intArray1[3] = 414;
      intArray1[4] = 414;
      intArray1[5] = 414;
      intArray1[6] = 414;
      visualListModel1.reverseElements(intArray1);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[0];
      visualListModel2.setData(visualPageListItemArray0);
      visualListModel1.moveUpIndexes(intArray1);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "l!/mSo22jCU8m$c");
      // Undeclared exception!
      try { 
        visualListModel1.rotateClockwiseElements((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.941744414025362
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      DefaultComboBoxModel<Integer> defaultComboBoxModel0 = new DefaultComboBoxModel<Integer>();
      Integer integer0 = new Integer((-754));
      defaultComboBoxModel0.addElement(integer0);
      defaultComboBoxModel0.getListDataListeners();
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(defaultComboBoxModel0);
      visualListModel0.addListDataListener(jComboBox0);
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      vector0.add((VisualPageListItem) null);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.setData(vector0);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.reverseElements(intArray0);
      visualListModel2.moveUpIndexes(intArray0);
      visualListModel0.reverseElements(intArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "gO/6yh;h");
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      visualListModel1.prependAllElements(vector0);
      assertEquals(2, visualListModel1.getSize());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.5981863871455346
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      String string0 = "";
      VisualPageListItem visualPageListItem0 = null;
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.prependAllElements((Collection<VisualPageListItem>) null);
      int[] intArray0 = new int[1];
      intArray0[0] = 255;
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 255
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.0980120874752637
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.addElement((VisualPageListItem) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "l!/mSo22jCU8m$c");
      visualListModel0.reverseElements(intArray0);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_COLOR_RENDERING;
      RenderingHints renderingHints0 = new RenderingHints(sunHints_Key0, "mxr|{L?oyHh%9kxw");
      renderingHints0.clone();
      float[] floatArray0 = new float[5];
      floatArray0[0] = (float) 414;
      floatArray0[1] = (float) 414;
      floatArray0[2] = (float) 414;
      floatArray0[3] = (float) (-1044);
      floatArray0[4] = (float) 414;
      RenderingHints renderingHints1 = new RenderingHints(sunHints_Key0, renderingHints0);
      RescaleOp rescaleOp0 = new RescaleOp(floatArray0, floatArray0, renderingHints1);
      visualListModel0.clearData();
      visualListModel0.moveUpIndexes(intArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      visualListModel0.removeElements((-1044), (-1044), false);
      // Undeclared exception!
      try { 
        visualListModel0.undeleteElements((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.717542962035551
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.setData(vector0);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.reverseElements(intArray0);
      visualListModel2.moveUpIndexes(intArray0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[3];
      visualListModel2.rotateClockwiseElements(intArray0);
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      visualListModel2.prependAllElements(arrayList0);
      visualListModel1.setData(visualPageListItemArray0);
      visualListModel1.removeElements(intArray0, true);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      visualListModel2.moveDownIndexes(intArray0);
      visualListModel2.moveDownIndexes(intArray0);
      visualListModel2.setData(visualPageListItemArray0);
      assertEquals(3, visualListModel2.getSize());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.234958037018746
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      DefaultComboBoxModel<Integer> defaultComboBoxModel0 = new DefaultComboBoxModel<Integer>();
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(defaultComboBoxModel0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      visualListModel0.addListDataListener(jComboBox0);
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      vector0.add((VisualPageListItem) null);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.setData(vector0);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.reverseElements(intArray0);
      visualListModel2.moveUpIndexes(intArray0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[3];
      visualListModel0.reverseElements(intArray0);
      visualListModel1.setData(visualPageListItemArray0);
      visualListModel1.moveUpIndexes(intArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      // Undeclared exception!
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.95571359982777
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 0;
      int int1 = 0;
      Collection<VisualPageListItem> collection0 = visualListModel0.subList(0, 0, false);
      visualListModel0.moveUpIndex(0);
      visualListModel0.addAllElements(collection0);
      // Undeclared exception!
      try { 
        visualListModel0.subList(241, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(241) > toIndex(0)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.8306007398058715
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.addElement((VisualPageListItem) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "l!/mSo22jCU8m$c");
      visualListModel0.reverseElements(intArray0);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_COLOR_RENDERING;
      RenderingHints renderingHints0 = new RenderingHints(sunHints_Key0, "mxr|{L?oyHh%9kxw");
      renderingHints0.clone();
      float[] floatArray0 = new float[5];
      floatArray0[0] = (float) 414;
      floatArray0[1] = (float) 414;
      floatArray0[2] = (float) 414;
      floatArray0[3] = (float) (-1044);
      floatArray0[4] = (float) 414;
      RenderingHints renderingHints1 = new RenderingHints(sunHints_Key0, renderingHints0);
      RescaleOp rescaleOp0 = new RescaleOp(floatArray0, floatArray0, renderingHints1);
      visualListModel0.moveUpIndexes(intArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      // Undeclared exception!
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.2113169331533986
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      stringArray0[0] = "";
      JComboBox<String> jComboBox0 = new JComboBox<String>();
      visualListModel0.addListDataListener(jComboBox0);
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      vector0.add((VisualPageListItem) null);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel0.setData(vector0);
      VisualListModel visualListModel2 = new VisualListModel();
      int[] intArray0 = new int[3];
      intArray0[0] = 9999;
      intArray0[1] = 1;
      intArray0[2] = 1;
      visualListModel2.reverseElements(intArray0);
      visualListModel1.moveUpIndexes(intArray0);
      visualListModel1.reverseElements(intArray0);
      // Undeclared exception!
      try { 
        visualListModel2.setData((VisualPageListItem[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      visualListModel0.clearData();
      stringArray0[0] = "";
      stringArray0[2] = "|8cB:{b";
      // Undeclared exception!
      try { 
        visualListModel0.setData((Vector<VisualPageListItem>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.3221086830269158
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.addElement((VisualPageListItem) null);
      visualListModel0.getValidElements();
      // Undeclared exception!
      try { 
        visualListModel1.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      stringArray0[0] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      JComboBox<String> jComboBox0 = new JComboBox<String>(stringArray0);
      jComboBox0.getSelectedItem();
      visualListModel0.removeElements(1, (-710), false);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      HierarchyBoundsListener hierarchyBoundsListener0 = mock(HierarchyBoundsListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(hierarchyBoundsListener0, hierarchyBoundsListener0);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      visualListModel0.removeElements((-710), (-710), false);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.4993646124305886
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      JComboBox<String> jComboBox0 = new JComboBox<String>();
      visualListModel0.addListDataListener(jComboBox0);
      VisualListModel visualListModel1 = new VisualListModel();
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      TreeSet<VisualPageListItem> treeSet1 = new TreeSet<VisualPageListItem>((SortedSet<VisualPageListItem>) treeSet0);
      visualListModel0.addAllElements((-454), (Collection<VisualPageListItem>) treeSet1);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) treeSet0);
      int int0 = (-333);
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem((-333), "qqriiTb}");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      int[] intArray0 = new int[0];
      JComboBox<String> jComboBox0 = new JComboBox<String>();
      KeyListener keyListener0 = mock(KeyListener.class, new ViolatedAssumptionAnswer());
      KeyListener keyListener1 = AWTEventMulticaster.add(keyListener0, keyListener0);
      AWTEventMulticaster.remove(keyListener1, keyListener1);
      RenderingHints renderingHints0 = new RenderingHints((Map<RenderingHints.Key, ?>) null);
      Object object0 = renderingHints0.clone();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_ALPHA_INTERPOLATION;
      RenderingHints renderingHints1 = new RenderingHints(sunHints_Key0, object0);
      float[] floatArray0 = new float[7];
      floatArray0[0] = 0.0F;
      floatArray0[1] = (-650.302F);
      floatArray0[2] = 0.0F;
      floatArray0[3] = 0.0F;
      floatArray0[4] = 0.0F;
      floatArray0[5] = 0.0F;
      floatArray0[6] = 0.0F;
      RescaleOp rescaleOp0 = new RescaleOp(floatArray0, floatArray0, renderingHints0);
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveUpIndexes(intArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "M%L2q");
      int[] intArray1 = new int[6];
      intArray1[0] = 49;
      intArray1[1] = 2292;
      intArray1[2] = 4067;
      intArray1[3] = 408;
      intArray1[4] = 32;
      intArray1[5] = 255;
      visualListModel0.moveDownIndexes(intArray1);
      assertEquals(6, intArray1.length);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "|8cB:{b";
      JComboBox<String> jComboBox0 = new JComboBox<String>(stringArray0);
      GridBagLayout gridBagLayout0 = new GridBagLayout();
      Dimension dimension0 = gridBagLayout0.minimumLayoutSize(jComboBox0);
      jComboBox0.transferFocusBackward();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "2y/rrxxe`JsBp+#d0");
      jComboBox0.getSelectedItem();
      GridBagLayout gridBagLayout1 = new GridBagLayout();
      JPanel jPanel0 = new JPanel(gridBagLayout0);
      gridBagLayout1.invalidateLayout(jPanel0);
      jComboBox0.setPreferredSize(dimension0);
      visualListModel0.removeListDataListener(jComboBox0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.addElement((VisualPageListItem) null);
      visualListModel1.elementChanged((VisualPageListItem) null);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.updateElementAt(0, (VisualPageListItem) null);
      Object object0 = visualListModel2.getElementAt(0);
      assertNull(object0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      int[] intArray0 = new int[0];
      JComboBox<String> jComboBox0 = new JComboBox<String>();
      KeyListener keyListener0 = mock(KeyListener.class, new ViolatedAssumptionAnswer());
      KeyListener keyListener1 = AWTEventMulticaster.add(keyListener0, keyListener0);
      AWTEventMulticaster.remove(keyListener1, keyListener1);
      KeyListener keyListener2 = AWTEventMulticaster.remove(keyListener1, (KeyListener) null);
      AWTEventMulticaster.add(keyListener2, (KeyListener) null);
      jComboBox0.addKeyListener(keyListener1);
      VisualListModel visualListModel0 = new VisualListModel();
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.moveDownIndexes(intArray0);
      assertArrayEquals(new int[] {}, intArray0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.subList(257, (-2920), false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(257) > toIndex(-2920)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.0709763739725617
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      String[] stringArray0 = new String[21];
      stringArray0[0] = "";
      stringArray0[0] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      JComboBox<String> jComboBox0 = new JComboBox<String>(stringArray0);
      GridBagLayout gridBagLayout0 = new GridBagLayout();
      Dimension dimension0 = gridBagLayout0.minimumLayoutSize(jComboBox0);
      jComboBox0.transferFocusBackward();
      jComboBox0.getSelectedItem();
      gridBagLayout0.rowHeights = null;
      gridBagLayout0.invalidateLayout(jComboBox0);
      dimension0.height = 1367;
      jComboBox0.setPreferredSize(dimension0);
      visualListModel0.removeListDataListener((ListDataListener) null);
      int[] intArray0 = new int[22];
      visualListModel0.addElement((VisualPageListItem) null);
      intArray0[0] = 20;
      intArray0[1] = (-1827);
      intArray0[3] = (-3591);
      intArray0[4] = 0;
      intArray0[5] = 0;
      visualListModel0.moveDownIndex(0);
      visualListModel0.elementChanged((VisualPageListItem) null);
      visualListModel0.updateElementAt(20, (VisualPageListItem) null);
      // Undeclared exception!
      try { 
        visualListModel0.subList(2800, (-2008), true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(2800) > toIndex(-2008)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.027377075708073
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      HierarchyBoundsListener hierarchyBoundsListener0 = mock(HierarchyBoundsListener.class, new ViolatedAssumptionAnswer());
      HierarchyBoundsListener hierarchyBoundsListener1 = AWTEventMulticaster.add(hierarchyBoundsListener0, hierarchyBoundsListener0);
      AWTEventMulticaster.remove(hierarchyBoundsListener1, hierarchyBoundsListener1);
      HierarchyBoundsListener hierarchyBoundsListener2 = AWTEventMulticaster.add((HierarchyBoundsListener) null, hierarchyBoundsListener1);
      AWTEventMulticaster.remove(hierarchyBoundsListener1, hierarchyBoundsListener1);
      HierarchyBoundsListener hierarchyBoundsListener3 = AWTEventMulticaster.add((HierarchyBoundsListener) null, hierarchyBoundsListener2);
      HierarchyBoundsListener hierarchyBoundsListener4 = AWTEventMulticaster.add(hierarchyBoundsListener3, hierarchyBoundsListener1);
      AWTEventMulticaster.remove(hierarchyBoundsListener1, hierarchyBoundsListener3);
      AWTEventMulticaster.add(hierarchyBoundsListener4, hierarchyBoundsListener2);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel0.getValidElements();
      visualListModel1.moveUpIndex((-290));
      visualListModel0.clearData();
      int int0 = visualListModel1.getSize();
      int int1 = visualListModel1.getSize();
      assertTrue(int1 == int0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addAllElements((-1596), (Collection<VisualPageListItem>) null);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.873029116491111
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 0;
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      TreeSet<VisualPageListItem> treeSet1 = new TreeSet<VisualPageListItem>((SortedSet<VisualPageListItem>) treeSet0);
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) treeSet1);
      visualListModel0.subList(0, 0);
      visualListModel0.clearData();
      int int1 = 1000;
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem(1000);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      int[] intArray0 = new int[0];
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.removeElements(0, 0, false);
      visualListModel0.removeElements(intArray0, true);
      SnapshotImage snapshotImage0 = null;
      try {
        snapshotImage0 = new SnapshotImage((PlanarImage) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.media.jai.ImageLayout", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      String[] stringArray0 = new String[21];
      stringArray0[0] = "";
      stringArray0[11] = "";
      stringArray0[2] = "|8cB:{b";
      stringArray0[3] = "";
      stringArray0[4] = "";
      JComboBox<String> jComboBox0 = new JComboBox<String>(stringArray0);
      GridBagLayout gridBagLayout0 = new GridBagLayout();
      Dimension dimension0 = gridBagLayout0.minimumLayoutSize(jComboBox0);
      jComboBox0.transferFocusBackward();
      jComboBox0.getSelectedItem();
      gridBagLayout0.rowHeights = null;
      gridBagLayout0.invalidateLayout(jComboBox0);
      dimension0.height = dimension0.height;
      jComboBox0.setPreferredSize(dimension0);
      JComboBox<String> jComboBox1 = new JComboBox<String>(stringArray0);
      jComboBox1.getSelectedItem();
      visualListModel0.removeElements(1376, 9999, true);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      stringArray0[0] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      JComboBox<String> jComboBox0 = new JComboBox<String>(stringArray0);
      GridBagLayout gridBagLayout0 = new GridBagLayout();
      GridBagLayout gridBagLayout1 = new GridBagLayout();
      gridBagLayout1.minimumLayoutSize(jComboBox0);
      JComboBox<String> jComboBox1 = new JComboBox<String>(stringArray0);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      jComboBox1.removeHierarchyBoundsListener((HierarchyBoundsListener) null);
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.moveDownIndexes((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.updateElementAt(256, (VisualPageListItem) null);
      visualListModel0.elementChanged((VisualPageListItem) null);
      visualListModel0.addElementAt((VisualPageListItem) null, (-167));
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      visualListModel0.addAllElements((Collection<VisualPageListItem>) null);
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      Float float0 = new Float(306.8718850085284);
      try { 
        Float.valueOf("wregBS!jSIp-&QZ*");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      Predicate<VisualPageListItem> predicate0 = Predicate.isEqual((Object) locale_FilteringMode0);
      Predicate<VisualPageListItem> predicate1 = predicate0.negate();
      predicate1.negate();
      SnapshotImage snapshotImage0 = null;
      try {
        snapshotImage0 = new SnapshotImage((PlanarImage) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.media.jai.ImageLayout", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      Predicate<VisualPageListItem> predicate0 = Predicate.isEqual((Object) locale_FilteringMode0);
      Predicate<VisualPageListItem> predicate1 = predicate0.negate();
      predicate0.and(predicate1);
      SnapshotImage snapshotImage0 = null;
      try {
        snapshotImage0 = new SnapshotImage((PlanarImage) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.media.jai.ImageLayout", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      stringArray0[0] = "";
      stringArray0[2] = "|8cB:{b";
      stringArray0[3] = "";
      stringArray0[4] = "";
      JComboBox<String> jComboBox0 = new JComboBox<String>(stringArray0);
      GridBagLayout gridBagLayout0 = new GridBagLayout();
      Dimension dimension0 = gridBagLayout0.minimumLayoutSize(jComboBox0);
      jComboBox0.getSelectedItem();
      gridBagLayout0.rowHeights = null;
      gridBagLayout0.invalidateLayout(jComboBox0);
      dimension0.height = 1367;
      jComboBox0.setPreferredSize(dimension0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(18, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 18
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "log4j.ignoreTCL";
      stringArray0[1] = "log4j.ignoreTCL";
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      int int0 = (-4360);
      intArray0[0] = (-4360);
      visualListModel0.removeElements(intArray0, false);
      PlanarImage planarImage0 = null;
      SnapshotImage snapshotImage0 = null;
      try {
        snapshotImage0 = new SnapshotImage((PlanarImage) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.media.jai.ImageLayout", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      ArrayDeque<VisualPageListItem> arrayDeque0 = new ArrayDeque<VisualPageListItem>();
      visualListModel0.addAllElements(1025, (Collection<VisualPageListItem>) arrayDeque0);
      Float float0 = new Float(306.8718850085284);
      try { 
        Float.valueOf("");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "";
      stringArray0[1] = "S|r";
      stringArray0[2] = "FV,?<#$N$v!";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "r\"pt@Dqjmvw^uTgm";
      stringArray0[7] = "";
      JComboBox<String> jComboBox0 = new JComboBox<String>(stringArray0);
      visualListModel0.removeListDataListener(jComboBox0);
      visualListModel0.moveDownIndex(414);
      visualListModel0.moveUpIndex(2662);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "r\"pt@Dqjmvw^uTgm";
      stringArray0[4] = "";
      DefaultComboBoxModel<Integer> defaultComboBoxModel0 = new DefaultComboBoxModel<Integer>();
      JComboBox<String> jComboBox0 = new JComboBox<String>(stringArray0);
      jComboBox0.firePropertyChange("L)", 706, 706);
      visualListModel0.removeListDataListener(jComboBox0);
      int[] intArray0 = new int[6];
      intArray0[0] = 2401;
      intArray0[1] = (-1827);
      intArray0[2] = 255;
      intArray0[3] = (-3591);
      intArray0[4] = 0;
      intArray0[5] = 255;
      visualListModel0.moveDownIndex(0);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[2];
      intArray0[0] = 0;
      DefaultComboBoxModel<Integer> defaultComboBoxModel0 = new DefaultComboBoxModel<Integer>();
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(defaultComboBoxModel0);
      visualListModel0.removeListDataListener(jComboBox0);
      visualListModel0.moveDownIndex((-3591));
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.201793123629589
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      JComboBox<String> jComboBox0 = new JComboBox<String>();
      visualListModel0.addListDataListener(jComboBox0);
      VisualListModel visualListModel1 = new VisualListModel();
      int[] intArray0 = new int[5];
      intArray0[1] = 186;
      intArray0[2] = (-1834);
      intArray0[4] = 51;
      intArray0[4] = (-1);
      visualListModel1.reverseElements(intArray0);
      visualListModel1.rotateClockwiseElements(intArray0);
      visualListModel1.elementsChanged();
      visualListModel1.moveUpIndex(1);
      visualListModel1.getElementAt(360);
      Predicate<VisualPageListItem> predicate0 = Predicate.isEqual((Object) null);
      Predicate<VisualPageListItem> predicate1 = null;
      // Undeclared exception!
      try { 
        predicate0.and((Predicate<? super VisualPageListItem>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      GridBagLayout gridBagLayout0 = new GridBagLayout();
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.moveUpIndexes((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      stringArray0[0] = "";
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      stringArray0[2] = "|8cB:{b";
      stringArray0[3] = "";
      stringArray0[4] = "";
      JComboBox<String> jComboBox0 = new JComboBox<String>(stringArray0);
      GridBagLayout gridBagLayout0 = new GridBagLayout();
      Dimension dimension0 = gridBagLayout0.minimumLayoutSize(jComboBox0);
      jComboBox0.getGraphicsConfiguration();
      jComboBox0.getSelectedItem();
      gridBagLayout0.rowHeights = null;
      gridBagLayout0.invalidateLayout(jComboBox0);
      dimension0.height = 1367;
      JComboBox<String> jComboBox1 = new JComboBox<String>(stringArray0);
      GridBagLayout gridBagLayout1 = new GridBagLayout();
      Dimension dimension1 = gridBagLayout1.minimumLayoutSize(jComboBox1);
      jComboBox1.getSelectedItem();
      gridBagLayout0.invalidateLayout(jComboBox1);
      jComboBox1.setPreferredSize(dimension1);
      VisualPageListItem[] visualPageListItemArray0 = visualListModel0.getElements();
      assertEquals(0, visualPageListItemArray0.length);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "|8cB:{b";
      stringArray0[3] = "";
      stringArray0[4] = "";
      JComboBox<String> jComboBox0 = new JComboBox<String>(stringArray0);
      HierarchyBoundsListener hierarchyBoundsListener0 = mock(HierarchyBoundsListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(hierarchyBoundsListener0, hierarchyBoundsListener0);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      jComboBox0.removeHierarchyBoundsListener((HierarchyBoundsListener) null);
      visualListModel0.removeListDataListener(jComboBox0);
      int[] intArray0 = new int[6];
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel0.appendAllElements(vector0);
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.getElements();
      intArray0[0] = 2401;
      // Undeclared exception!
      try { 
        visualListModel0.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      int[] intArray0 = new int[0];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      VisualListModel visualListModel0 = new VisualListModel();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "`");
      visualListModel0.reverseElements(intArray0);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_COLOR_RENDERING;
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_INTERPOLATION;
      RenderingHints renderingHints0 = new RenderingHints(sunHints_Key1, (Object) null);
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction0 = new DefaultEditorKit.PasteAction();
      RenderingHints renderingHints1 = new RenderingHints(sunHints_Key0, defaultEditorKit_PasteAction0);
      renderingHints1.clone();
      float[] floatArray0 = new float[4];
      floatArray0[0] = (float) (-1044);
      floatArray0[1] = (float) (-1044);
      floatArray0[2] = (float) (-1044);
      floatArray0[3] = (float) (-1044);
      renderingHints1.clear();
      RescaleOp rescaleOp0 = new RescaleOp(floatArray0, floatArray0, renderingHints1);
      visualListModel0.rotateClockwiseElements(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.reverseElements((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 1217;
      // Undeclared exception!
      try { 
        visualListModel0.subList(1217, 0, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(1217) > toIndex(0)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.9909065731902369
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      VisualListModel visualListModel0 = new VisualListModel();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "'!M");
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1044), (-1044));
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction0 = new DefaultEditorKit.PasteAction();
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      Float float0 = new Float(0.0F);
      Integer integer1 = JLayeredPane.POPUP_LAYER;
      Float float1 = new Float((float) (-1044));
      Float float2 = new Float((float) (-1044));
      DFTScalingType dFTScalingType0 = IDFTDescriptor.SCALING_UNITARY;
      visualListModel0.subList((-1044), (-720), true);
      Collection<VisualPageListItem> collection0 = visualListModel0.subList(1786, 1507, false);
      assertNull(collection0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.8816064979261793
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      String string0 = "";
      visualListModel0.subList(298, 30000);
      VisualPageListItem visualPageListItem0 = null;
      visualListModel0.addElement((VisualPageListItem) null);
      int[] intArray0 = new int[1];
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      OperationRegistry operationRegistry0 = new OperationRegistry();
      ParameterBlock parameterBlock0 = new ParameterBlock();
      Vector<Object> vector0 = parameterBlock0.getParameters();
      ParameterBlock parameterBlock1 = new ParameterBlock(vector0);
      CollectionOp collectionOp0 = new CollectionOp(operationRegistry0, "", parameterBlock1);
      // Undeclared exception!
      try { 
        visualListModel0.prependAllElements(collectionOp0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No descriptor by name \"\" is registered under mode \"collection\".
         //
         verifyException("javax.media.jai.OperationRegistry", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[6];
      intArray0[0] = (-5);
      intArray0[1] = 0;
      intArray0[2] = 1000;
      intArray0[3] = (-1287);
      intArray0[4] = 0;
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_INTERPOLATION;
      VisualListModel visualListModel1 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel1.getElementAt((-5));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "log4j.ignoreTCL";
      stringArray0[1] = "log4j.ignoreTCL";
      stringArray0[2] = "log4j.ignoreTCL";
      stringArray0[3] = "log4j.ignoreTCL";
      stringArray0[4] = "log4j.ignoreTCL";
      JComboBox<String> jComboBox0 = new JComboBox<String>(stringArray0);
      GridBagLayout gridBagLayout0 = new GridBagLayout();
      gridBagLayout0.minimumLayoutSize(jComboBox0);
      JComboBox<String> jComboBox1 = new JComboBox<String>(stringArray0);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      jComboBox1.removeHierarchyBoundsListener((HierarchyBoundsListener) null);
      Float float0 = new Float(0.0);
      VisualListModel visualListModel0 = new VisualListModel();
      Object object0 = visualListModel0.getElementAt(12);
      assertNull(object0);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction0 = new DefaultEditorKit.PasteAction();
      Predicate<VisualPageListItem> predicate0 = Predicate.isEqual((Object) defaultEditorKit_PasteAction0);
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      Predicate<Object> predicate1 = Predicate.isEqual((Object) locale_FilteringMode1);
      Predicate<VisualPageListItem> predicate2 = predicate0.or(predicate1);
      Predicate<VisualPageListItem> predicate3 = predicate2.negate();
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction1 = new DefaultEditorKit.PasteAction();
      Predicate<VisualPageListItem> predicate4 = Predicate.isEqual((Object) defaultEditorKit_PasteAction1);
      Predicate<VisualPageListItem> predicate5 = predicate3.and(predicate4);
      Predicate<VisualPageListItem> predicate6 = predicate4.negate();
      predicate0.and(predicate4);
      predicate6.or(predicate5);
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[8];
      intArray0[0] = 0;
      intArray0[1] = 1145;
      intArray0[2] = (-2170);
      intArray0[3] = 1;
      intArray0[4] = 4588;
      intArray0[5] = 1;
      intArray0[6] = 412;
      intArray0[7] = 1515;
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.undeleteElements(intArray0);
      assertEquals(8, intArray0.length);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      Predicate<VisualPageListItem> predicate0 = Predicate.isEqual((Object) locale_FilteringMode0);
      Predicate<VisualPageListItem> predicate1 = predicate0.negate();
      Predicate<VisualPageListItem> predicate2 = predicate0.and(predicate1);
      predicate2.negate();
      predicate0.or(predicate1);
      visualListModel0.undeleteElements(intArray0);
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      Predicate<Object> predicate3 = Predicate.isEqual((Object) integer0);
      Predicate<Object> predicate4 = predicate3.negate();
      Predicate<Object> predicate5 = predicate3.and(predicate4);
      predicate4.and(predicate5);
      visualListModel0.undeleteElements(intArray0);
      assertArrayEquals(new int[] {}, intArray0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.6415853614103302
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      DefaultComboBoxModel<Integer> defaultComboBoxModel0 = new DefaultComboBoxModel<Integer>();
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(defaultComboBoxModel0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      visualListModel0.addListDataListener(jComboBox0);
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      vector0.add((VisualPageListItem) null);
      VisualListModel visualListModel1 = new VisualListModel();
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.reverseElements(intArray0);
      visualListModel2.moveUpIndexes(intArray0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[3];
      visualListModel0.reverseElements(intArray0);
      visualListModel1.moveUpIndexes(intArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      // Undeclared exception!
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "log4j.ignoreTCL";
      stringArray0[1] = "log4j.ignoreTCL";
      stringArray0[2] = "log4j.ignoreTCL";
      stringArray0[3] = "log4j.ignoreTCL";
      stringArray0[4] = "log4j.ignoreTCL";
      JComboBox<String> jComboBox0 = new JComboBox<String>(stringArray0);
      GridBagLayout gridBagLayout0 = new GridBagLayout();
      Dimension dimension0 = gridBagLayout0.minimumLayoutSize(jComboBox0);
      JComboBox<String> jComboBox1 = new JComboBox<String>(stringArray0);
      GridBagLayout gridBagLayout1 = new GridBagLayout();
      gridBagLayout0.minimumLayoutSize(jComboBox1);
      jComboBox0.getSelectedItem();
      dimension0.setSize(1, (-95));
      gridBagLayout0.invalidateLayout(jComboBox1);
      jComboBox0.setPreferredSize(dimension0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "log4j.ignoreTCL");
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt((-730), true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -730
         //
         verifyException("java.util.Vector", e);
      }
  }
}
