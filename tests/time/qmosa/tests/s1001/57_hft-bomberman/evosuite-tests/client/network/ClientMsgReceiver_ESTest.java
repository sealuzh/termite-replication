/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 14:39:12 GMT 2019
 */

package client.network;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import client.BomberClient;
import client.gui.components.MyButton;
import client.network.ClientMsgReceiver;
import java.awt.HeadlessException;
import java.awt.Point;
import java.net.InetAddress;
import java.net.Proxy;
import java.net.Socket;
import java.sql.SQLIntegrityConstraintViolationException;
import java.sql.SQLNonTransientException;
import java.sql.SQLTimeoutException;
import java.util.Hashtable;
import java.util.LinkedList;
import java.util.function.Consumer;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JCheckBoxMenuItem;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.JPasswordField;
import javax.swing.MenuElement;
import javax.swing.MenuSelectionManager;
import javax.swing.event.MenuDragMouseEvent;
import messages.global.JoinAckMsg;
import messages.round.NewBombMsg;
import messages.session.SessionChatMsg;
import messages.session.SessionParticipationMsg;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.lang.MockThread;
import org.evosuite.runtime.mock.java.net.MockInetAddress;
import org.evosuite.runtime.mock.java.net.MockInetSocketAddress;
import org.evosuite.runtime.mock.java.net.MockSocket;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ClientMsgReceiver_ESTest extends ClientMsgReceiver_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      mockSocket0.getSoTimeout();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      ImageIcon imageIcon0 = null;
      BomberClient bomberClient0 = BomberClient.getInstance();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, bomberClient0);
      boolean boolean0 = false;
      int int0 = 0;
      JoinAckMsg joinAckMsg0 = new JoinAckMsg(boolean0, int0);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.processMsg(joinAckMsg0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      MockThread.getAllStackTraces();
      MockThread.interrupted();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      MockSocket mockSocket1 = new MockSocket();
      MyButton myButton0 = new MyButton("wwL!fr 1w%*1%u");
      myButton0.getRolloverSelectedIcon();
      JCheckBoxMenuItem jCheckBoxMenuItem0 = new JCheckBoxMenuItem((String) null, (Icon) null, true);
      JMenuBar jMenuBar0 = new JMenuBar();
      JMenu jMenu0 = new JMenu();
      JMenu jMenu1 = jMenuBar0.add(jMenu0);
      jMenu1.add((JMenuItem) jMenu0);
      MenuSelectionManager menuSelectionManager0 = MenuSelectionManager.defaultManager();
      MenuElement[] menuElementArray0 = new MenuElement[3];
      menuElementArray0[0] = (MenuElement) jMenu0;
      menuElementArray0[2] = (MenuElement) jMenu1;
      MenuDragMouseEvent menuDragMouseEvent0 = new MenuDragMouseEvent(jMenuBar0, 0, 0L, 0, 1, (-165), (-165), true, menuElementArray0, menuSelectionManager0);
      JPasswordField jPasswordField0 = new JPasswordField();
      MenuDragMouseEvent menuDragMouseEvent1 = new MenuDragMouseEvent(jPasswordField0, (-832), (-274L), (-2391), 1, (-2391), (-832), false, menuElementArray0, menuSelectionManager0);
      Point point0 = menuDragMouseEvent1.getLocationOnScreen();
      menuDragMouseEvent1.getModifiersEx();
      NewBombMsg newBombMsg0 = new NewBombMsg(point0, (-1364), 1, (-1364), true);
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket1, (BomberClient) null);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.displayErrorMessage();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Socket socket0 = null;
      BomberClient bomberClient0 = BomberClient.getInstance();
      ClientMsgReceiver clientMsgReceiver0 = null;
      try {
        clientMsgReceiver0 = new ClientMsgReceiver(socket0, bomberClient0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("common.network.MsgReceiver", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Hashtable<Thread, StackTraceElement[]> hashtable0 = new Hashtable<Thread, StackTraceElement[]>();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      BomberClient bomberClient0 = BomberClient.getInstance();
      JMenuBar jMenuBar0 = new JMenuBar();
      JMenu jMenu0 = new JMenu();
      JMenuBar jMenuBar1 = new JMenuBar();
      JMenu jMenu1 = new JMenu();
      String string0 = "signalCloseAllServerConnections() entered";
      boolean boolean0 = false;
      JMenu jMenu2 = new JMenu(string0, boolean0);
      MockSocket mockSocket0 = new MockSocket();
      BomberClient.getInstance();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, bomberClient0);
      int int0 = (-3285);
      int int1 = (-1046);
      boolean boolean1 = false;
      MenuSelectionManager menuSelectionManager0 = new MenuSelectionManager();
      int int2 = 27;
      MenuElement[] menuElementArray0 = new MenuElement[3];
      menuElementArray0[0] = (MenuElement) jMenu0;
      menuElementArray0[1] = (MenuElement) jMenuBar0;
      menuElementArray0[2] = (MenuElement) jMenu0;
      MenuDragMouseEvent menuDragMouseEvent0 = new MenuDragMouseEvent(jMenuBar1, int2, int0, int0, int2, int1, int1, boolean1, menuElementArray0, menuSelectionManager0);
      MenuElement[] menuElementArray1 = new MenuElement[4];
      menuElementArray1[0] = (MenuElement) jMenu2;
      menuElementArray1[1] = (MenuElement) jMenu0;
      menuElementArray1[2] = (MenuElement) jMenuBar0;
      menuElementArray1[3] = (MenuElement) jMenuBar0;
      menuSelectionManager0.setSelectedPath(menuElementArray1);
      Point point0 = menuDragMouseEvent0.getLocationOnScreen();
      int int3 = 621;
      int int4 = (-1957);
      menuDragMouseEvent0.translatePoint(int3, int4);
      int int5 = 0;
      boolean boolean2 = false;
      NewBombMsg newBombMsg0 = new NewBombMsg(point0, int5, int4, point0.x, boolean2);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.closeConnection();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("client.network.ClientMsgReceiver", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "CONNECTION LOST");
      System.setCurrentTimeMillis((-531L));
      Proxy.Type proxy_Type0 = Proxy.Type.SOCKS;
      InetAddress inetAddress0 = MockInetAddress.anyLocalAddress();
      MockInetSocketAddress mockInetSocketAddress0 = new MockInetSocketAddress(inetAddress0, 1);
      Proxy proxy0 = new Proxy(proxy_Type0, mockInetSocketAddress0);
      MockSocket mockSocket0 = new MockSocket(proxy0);
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "");
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("CONNECTION LOST", 1);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      SessionParticipationMsg sessionParticipationMsg0 = new SessionParticipationMsg(false, 1, "CONNECTION LOST");
      // Undeclared exception!
      try { 
        clientMsgReceiver0.processMsg(sessionParticipationMsg0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("messages.session.SessionParticipationMsg", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "CONNECTION LOST");
      System.setCurrentTimeMillis(2165L);
      Proxy.Type proxy_Type0 = Proxy.Type.SOCKS;
      InetAddress inetAddress0 = MockInetAddress.anyLocalAddress();
      MockInetSocketAddress mockInetSocketAddress0 = new MockInetSocketAddress(inetAddress0, 1);
      Proxy proxy0 = new Proxy(proxy_Type0, mockInetSocketAddress0);
      MockSocket mockSocket0 = new MockSocket(proxy0);
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.closeConnection();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("client.network.ClientMsgReceiver", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      Hashtable<Thread, StackTraceElement[]> hashtable0 = new Hashtable<Thread, StackTraceElement[]>();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      BomberClient bomberClient0 = BomberClient.getInstance();
      boolean boolean0 = true;
      String string0 = null;
      JMenuBar jMenuBar0 = new JMenuBar();
      JMenu jMenu0 = new JMenu();
      JMenu jMenu1 = new JMenu(string0, boolean0);
      MockSocket mockSocket1 = new MockSocket();
      BomberClient.getInstance();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, bomberClient0);
      int int0 = (-3285);
      int int1 = (-1058);
      boolean boolean1 = false;
      MenuElement[] menuElementArray0 = new MenuElement[3];
      menuElementArray0[0] = (MenuElement) jMenu0;
      menuElementArray0[1] = (MenuElement) jMenuBar0;
      menuElementArray0[2] = (MenuElement) jMenuBar0;
      MenuSelectionManager menuSelectionManager0 = new MenuSelectionManager();
      MenuDragMouseEvent menuDragMouseEvent0 = new MenuDragMouseEvent(jMenu1, int0, int0, int0, int1, int0, int0, boolean1, menuElementArray0, menuSelectionManager0);
      Point point0 = menuDragMouseEvent0.getLocationOnScreen();
      int int2 = 1340;
      int int3 = 0;
      menuDragMouseEvent0.translatePoint(int2, int3);
      int int4 = 2379;
      int int5 = 0;
      NewBombMsg newBombMsg0 = new NewBombMsg(point0, int4, int5, int5, boolean1);
      String string1 = "=:";
      String string2 = "i}-JL:U:0";
      SessionChatMsg sessionChatMsg0 = new SessionChatMsg(string1, string2);
      clientMsgReceiver0.processMsg(sessionChatMsg0);
      assertFalse(clientMsgReceiver0.isInterrupted());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Proxy proxy0 = Proxy.NO_PROXY;
      MockSocket mockSocket0 = new MockSocket(proxy0);
      BomberClient bomberClient0 = BomberClient.getInstance();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, bomberClient0);
      String string0 = null;
      int int0 = (-40);
      SQLNonTransientException sQLNonTransientException0 = new SQLNonTransientException(string0, string0, int0);
      String string1 = "";
      SQLIntegrityConstraintViolationException sQLIntegrityConstraintViolationException0 = new SQLIntegrityConstraintViolationException(string0, string1, int0);
      sQLIntegrityConstraintViolationException0.getStackTrace();
      String string2 = "j";
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      sQLNonTransientException0.forEach(consumer0);
      String string3 = "messages.session.SessionScoreMsg";
      SQLTimeoutException sQLTimeoutException0 = new SQLTimeoutException(string2, string3, int0, sQLNonTransientException0);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.handleConnectionLoss(sQLTimeoutException0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }
}
