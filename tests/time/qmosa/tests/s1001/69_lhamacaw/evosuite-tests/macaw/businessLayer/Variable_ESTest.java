/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 14:40:20 GMT 2019
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Comparator;
import java.util.ConcurrentModificationException;
import java.util.HashMap;
import java.util.LinkedList;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.businessLayer.VariableSummary;
import macaw.system.ChangeEventType;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.960118100724969
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setNotes("macaw.businessLayer.Variable");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle("y0:&");
      supportingDocument0.setDescription("bzo$D46;j");
      supportingDocument0.setDocumentCode("blank");
      rawVariable0.addSupportingDocument(supportingDocument0);
      rawVariable0.createVariableSummary();
      Variable.validateFields(rawVariable0);
      User user0 = new User();
      user0.setPostCode("Unknown");
      user0.setAddressLine2("y0:&");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("P2@fJj5");
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setOntologyTerms(arrayList0);
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      arrayList1.set(0, ontologyTerm0);
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.4276839816819424
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setNotes("macaw.businessLayer.Variable");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle("y0:&");
      supportingDocument0.setDescription("bzo$D46;j");
      supportingDocument0.setDocumentCode("blank");
      rawVariable0.addSupportingDocument(supportingDocument0);
      rawVariable0.createVariableSummary();
      Variable.validateFields(rawVariable0);
      rawVariable0.getYear();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      arrayList0.add((Variable) derivedVariable1);
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.setColumnStart("macaw.businessLayer.Variable");
      rawVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.setQuestionNumber("c(oeVEHL0pOJ");
      derivedVariable0.removeSourceVariables(arrayList0);
      derivedVariable0.getValueLabels();
      derivedVariable0.containsSourceVariable(rawVariable0);
      derivedVariable1.getValueLabels();
      derivedVariable0.getCodeBookNumber();
      derivedVariable0.getForm();
      derivedVariable1.setLabel("blank");
      derivedVariable1.removeSourceVariables(arrayList0);
      User user0 = new User("", "Jh\"w(+]6-3V;<");
      derivedVariable1.setForm("y0:&");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable1, rawVariable0);
      derivedVariable1.removeSourceVariables(arrayList0);
      derivedVariable0.getOntologyTerms();
      derivedVariable0.containsSourceVariable(rawVariable0);
      derivedVariable1.getColumnStart();
      assertEquals("blank", derivedVariable1.getLabel());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.7775638272188696
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      MacawChangeEvent[] macawChangeEventArray0 = new MacawChangeEvent[7];
      ChangeEventType changeEventType0 = ChangeEventType.VARIABLE;
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent(changeEventType0, "macaw.businessLayer.Variable", "macaw.businessLayer.Variable");
      macawChangeEvent0.setVariableOwnerID(1);
      macawChangeEventArray0[0] = macawChangeEvent0;
      MockDate mockDate0 = new MockDate((-1435), 0, (-1879048189));
      macawChangeEvent0.setDate(mockDate0);
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent();
      macawChangeEventArray0[1] = macawChangeEvent1;
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      RawVariable rawVariable1 = new RawVariable();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument1);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      rawVariable0.cloneAttributes(derivedVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable1.addOntologyTerm(ontologyTerm0);
      derivedVariable1.setAlternativeVariable(derivedVariable0);
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.addValueLabel(valueLabel0);
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      derivedVariable1.setSourceVariables(arrayList1);
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable1, rawVariable1);
      User user1 = new User();
      RawVariable rawVariable2 = new RawVariable();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user1, rawVariable0, (Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      User user0 = new User();
      User user1 = (User)user0.clone();
      user0.setStatus("hl{mb2kFAtY?-c<U");
      user0.setAddressLine1("macaw.businessLayer.DerivedVariable");
      User.detectFieldChanges(user0, user0, user0);
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable0.setCoded(true);
      supportingDocument0.setFileName("macaw.businessLayer.DerivedVariable");
      rawVariable0.setColumnEnd("hl{mb2kFAtY?-c<U");
      supportingDocument0.setDocumentCode("");
      rawVariable0.addSupportingDocument(supportingDocument1);
      user1.setEmail("hl{mb2kFAtY?-c<U");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getSupportingDocuments();
      rawVariable0.createVariableSummary();
      assertEquals("hl{mb2kFAtY?-c<U", rawVariable0.getColumnEnd());
      
      derivedVariable0.getQuestionNumber();
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.910313618540009
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      RawVariable rawVariable0 = new RawVariable();
      Variable.validateFields(rawVariable0);
      rawVariable0.createVariableSummary();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      rawVariable0.hasSameDisplayName(derivedVariable0);
      User user0 = new User("e4v{'z", (String) null);
      User.checkValidUserIDField("Unknown");
      user0.setAddressLine2((String) null);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setDescription("e4v{'z");
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm1);
      arrayList0.add(ontologyTerm0);
      derivedVariable0.setOntologyTerms(arrayList0);
      ArrayList<OntologyTerm> arrayList1 = derivedVariable1.getOntologyTerms();
      derivedVariable0.removeOntologyTerms(arrayList1);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable1.getColumnStart();
      ArrayList<String> arrayList2 = Variable.validateFields(derivedVariable0);
      assertEquals(1, arrayList2.size());
      
      derivedVariable1.setIsNewRecord(false);
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertFalse(derivedVariable1.isCoded());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.810867352495172
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.removeValueLabel(valueLabel0);
      rawVariable0.setCleaningStatus("");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList0.sort(comparator0);
      rawVariable0.setSupportingDocuments(arrayList0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setLabel("");
      derivedVariable0.form = "cvR~b]{V:S+f*H%";
      User user0 = new User("cvR~b]{V:S+f*H%", "");
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel.differencesExist(user0, rawVariable0, valueLabel1, valueLabel1);
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("XbIVTl/uyj2zf");
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFileName("cvR~b]{V:S+f*H%");
      supportingDocument0.setDocumentCode("XbIVTl/uyj2zf");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.addSupportingDocument(supportingDocument0);
      derivedVariable0.cloneAttributes(rawVariable1);
      User user1 = new User();
      user1.setEmail((String) null);
      RawVariable rawVariable2 = new RawVariable();
      Variable.detectFieldChanges(user1, rawVariable2, rawVariable0);
      derivedVariable1.setCodeBookNumber("");
      derivedVariable1.setLabel((String) null);
      derivedVariable1.setCleaned(false);
      rawVariable2.getSupportingDocuments();
      derivedVariable0.addSupportingDocuments(arrayList0);
      assertEquals("cvR~b]{V:S+f*H%", derivedVariable0.getForm());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.9642071291975114
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.removeValueLabel(valueLabel0);
      rawVariable0.setCleaningStatus("");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList0.sort(comparator0);
      rawVariable0.setSupportingDocuments(arrayList0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setLabel("");
      derivedVariable0.form = "cvR~b]{V:S+f*H%";
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      derivedVariable1.codeBookNumber = null;
      rawVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.setAlternativeVariable(rawVariable0);
      rawVariable0.addValueLabel(valueLabel0);
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      rawVariable0.setCategory("cvR~b]{V:S+f*H%");
      rawVariable0.setColumnEnd("cvR~b]{V:S+f*H%");
      User user0 = new User();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable1, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.014698638021056
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ontologyTerm0.setOntologyName((String) null);
      User user0 = new User("uZW5^w33z}", (String) null);
      user0.setAddressLine2((String) null);
      user0.setPostCode("N.5\"KxP");
      user0.setAddressLine2((String) null);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setDescription("N.5\"KxP");
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm1);
      derivedVariable0.setOntologyTerms(arrayList0);
      derivedVariable1.getOntologyTerms();
      arrayList0.set(0, ontologyTerm0);
      derivedVariable1.removeOntologyTerms(arrayList0);
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      derivedVariable1.getColumnStart();
      Variable.validateFields(derivedVariable1);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.setIsNewRecord(true);
      derivedVariable2.getName();
      ArrayList<Variable> arrayList1 = derivedVariable2.getSourceVariables();
      derivedVariable0.addSourceVariables(arrayList1);
      assertTrue(derivedVariable2.isNewRecord());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.8183706951296816
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.clone();
      RawVariable rawVariable0 = new RawVariable();
      Variable.validateFields(rawVariable0);
      rawVariable0.createVariableSummary();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      rawVariable0.hasSameDisplayName(derivedVariable0);
      User user0 = new User("e4v{'z", (String) null);
      user0.setAddressLine2((String) null);
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setDescription("e4v{'z");
      rawVariable0.addOntologyTerm(ontologyTerm2);
      derivedVariable0.getQuestionNumber();
      rawVariable0.setLabel((String) null);
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.0857846651767935
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User("uZW5^w33z}", (String) null);
      user0.setAddressLine2((String) null);
      user0.setPostCode("N.5\"KxP");
      user0.setAddressLine2((String) null);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setTerm("NON_EXISTENT_AVAILABILITY_STATE");
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm1);
      derivedVariable0.setOntologyTerms(arrayList0);
      derivedVariable1.getOntologyTerms();
      derivedVariable1.removeOntologyTerms(arrayList0);
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      derivedVariable1.getColumnStart();
      ArrayList<String> arrayList1 = Variable.validateFields(derivedVariable0);
      assertEquals(1, arrayList1.size());
      
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.setIsNewRecord(false);
      assertFalse(derivedVariable2.isNewRecord());
      
      derivedVariable1.getColumnEnd();
      assertFalse(derivedVariable1.isCoded());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.784066574475527
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      User user0 = new User();
      user0.setUserID("");
      user0.setStatus("xM`_:}Xaa`F?BZ>Jl@");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCoded(false);
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.removeOntologyTerms(arrayList0);
      derivedVariable1.getForm();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.addSourceVariable(rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.sort((Comparator<? super OntologyTerm>) null);
      ontologyTerm0.setNameSpace("general.error.blankField");
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable0.addSourceVariable(derivedVariable2);
      boolean boolean0 = rawVariable0.isCleaned();
      rawVariable0.setOntologyTerms(arrayList0);
      assertFalse(arrayList0.contains(ontologyTerm1));
      
      boolean boolean1 = derivedVariable0.isNewRecord();
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.733857589601352
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setSupportingDocuments((ArrayList<SupportingDocument>) null);
      rawVariable0.columnEnd = "0M0lw@Pw{p] wy";
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("p>E#r?2#Dl'3[RL:");
      arrayList0.add(ontologyTerm0);
      arrayList0.add(ontologyTerm0);
      arrayList0.addAll((Collection<? extends OntologyTerm>) arrayList1);
      rawVariable0.removeOntologyTerms(arrayList0);
      rawVariable0.getFilePath();
      rawVariable0.getAvailability();
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      rawVariable0.setSupportingDocuments(arrayList2);
      rawVariable0.setCleaningStatus("");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.notes = "";
      ArrayList<Variable> arrayList3 = new ArrayList<Variable>(1094);
      derivedVariable0.removeSourceVariables(arrayList3);
      // Undeclared exception!
      try { 
        rawVariable0.addSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.8836095585126564
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>(0);
      rawVariable0.setCleaningStatus((String) null);
      rawVariable0.removeOntologyTerms(arrayList0);
      String string0 = rawVariable0.getDisplayItemIdentifier();
      assertEquals("0", string0);
      
      rawVariable0.getOntologyTerms();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.getFilePath();
      RawVariable rawVariable2 = new RawVariable();
      RawVariable rawVariable3 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addSourceVariable(rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setNameSpace("macaw.businessLayer.Variable");
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable3.removeOntologyTerm(ontologyTerm0);
      RawVariable rawVariable4 = new RawVariable();
      derivedVariable0.addSourceVariable(rawVariable4);
      boolean boolean0 = rawVariable4.isCleaned();
      assertFalse(boolean0);
      
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      rawVariable2.setOntologyTerms(arrayList1);
      assertFalse(rawVariable2.isNewRecord());
      assertFalse(rawVariable2.isCoded());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.795284966051281
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = "wv9e[p//= +bN";
      derivedVariable0.clone();
      derivedVariable0.columnEnd = "wv9e[p//= +bN";
      derivedVariable0.removeSourceVariable((Variable) null);
      derivedVariable0.getColumnEnd();
      derivedVariable0.getFilePath();
      derivedVariable0.getSupportingDocuments();
      derivedVariable0.getAvailability();
      RawVariable rawVariable0 = new RawVariable();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=4.01850135904981
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      RawVariable rawVariable0 = new RawVariable();
      Variable.validateFields(rawVariable0);
      rawVariable0.createVariableSummary();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      rawVariable0.createVariableSummary();
      Variable.validateFields(derivedVariable1);
      rawVariable0.getYear();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      arrayList0.add((Variable) derivedVariable3);
      arrayList0.add((Variable) rawVariable0);
      derivedVariable0.setColumnStart("");
      rawVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable2.setQuestionNumber("c(oeVEHL0pOJ");
      derivedVariable1.removeSourceVariables(arrayList0);
      derivedVariable3.getValueLabels();
      derivedVariable1.containsSourceVariable(derivedVariable2);
      derivedVariable1.getValueLabels();
      derivedVariable3.getCodeBookNumber();
      derivedVariable1.getForm();
      derivedVariable0.setLabel("c(oeVEHL0pOJ");
      derivedVariable0.removeSourceVariables(arrayList0);
      User user0 = new User("", "");
      derivedVariable1.setForm("UNABLE_TO_ASSOCIATE_DOCUMENT");
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable(user0, (Variable) null, derivedVariable3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.856987837407963
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(true);
      ontologyTerm0.setTerm(" type=");
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.setYear(" type=");
      derivedVariable0.isNewRecord();
      User user0 = new User("variable.questionNumber.label", " type=");
      user0.setUserID("variable.questionNumber.label");
      user0.setFirstName("variable.questionNumber.label");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.cloneAttributes(derivedVariable0);
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      derivedVariable0.getColumnEnd();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable1.removeOntologyTerms(arrayList0);
      ArrayList<OntologyTerm> arrayList1 = derivedVariable1.getOntologyTerms();
      rawVariable0.addOntologyTerms(arrayList1);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      rawVariable0.getDisplayItemIdentifier();
      rawVariable0.addSupportingDocument(supportingDocument0);
      derivedVariable0.setFilePath("variable.questionNumber.label");
      derivedVariable0.getDisplayName();
      derivedVariable0.clone();
      rawVariable0.getNotes();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      assertEquals("variable.questionNumber.label", derivedVariable0.getFilePath());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.8055124628724255
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setForm("6..ZFxPN6Sx?)92");
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.parallelStream();
      derivedVariable0.removeSourceVariables(arrayList0);
      derivedVariable0.setColumnStart("]lB aK@s}=u@W3[;w=");
      derivedVariable0.containsSourceVariable(derivedVariable1);
      derivedVariable0.getNotes();
      derivedVariable0.getFilePath();
      assertEquals("6..ZFxPN6Sx?)92", derivedVariable0.getForm());
      
      derivedVariable1.getYear();
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("Unknown", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      String string0 = "";
      derivedVariable0.setAlias("");
      derivedVariable0.getYear();
      derivedVariable0.getAlternativeVariable();
      RawVariable rawVariable0 = new RawVariable();
      String string1 = "x\"ri";
      rawVariable0.setIdentifier(1);
      // Undeclared exception!
      try { 
        Variable.validateFields((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.removeOntologyTerms(arrayList0);
      rawVariable0.setAlias("Unknown");
      rawVariable0.getNotes();
      assertEquals("Unknown", rawVariable0.getAlias());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.629308089654609
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      arrayList0.spliterator();
      rawVariable0.setSupportingDocuments(arrayList0);
      rawVariable0.isNewRecord();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.clone();
      derivedVariable0.getSourceVariables();
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertFalse(rawVariable1.isCleaned());
      assertFalse(rawVariable1.isCoded());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.663816567698219
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      arrayList0.add((Variable) derivedVariable1);
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable0.setNotes("xW!");
      derivedVariable0.clone();
      derivedVariable0.setForm("");
      derivedVariable0.setQuestionNumber("xW!");
      derivedVariable0.getColumnStart();
      User user0 = new User("", "");
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.codeBookNumber = "";
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDisplayName();
      supportingDocument0.setDocumentCode("");
      derivedVariable0.addSupportingDocument(supportingDocument0);
      derivedVariable0.setAvailability("xW!");
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList1.add((OntologyTerm) null);
      derivedVariable0.setOntologyTerms(arrayList1);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.hasSameDisplayName(derivedVariable1);
      rawVariable0.getOntologyTerms();
      derivedVariable0.setSourceVariables(arrayList0);
      assertEquals("xW!", derivedVariable0.getAvailability());
      
      derivedVariable1.addSourceVariables(arrayList0);
      assertEquals("Unknown", derivedVariable1.getCategory());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.7469878715160863
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      RawVariable rawVariable1 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.containsSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable2.cloneAttributes(rawVariable1);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      supportingDocument2.setFileName("");
      supportingDocument2.setDocumentCode(";7h");
      rawVariable0.addSupportingDocument(supportingDocument1);
      derivedVariable0.cloneAttributes(rawVariable0);
      User user0 = new User();
      user0.setEmail("variable.cleaningStatus.label");
      Variable.detectFieldChanges(user0, rawVariable1, rawVariable1);
      derivedVariable0.setCodeBookNumber("MacawProperties");
      derivedVariable0.setLabel(";7h");
      derivedVariable0.setCleaned(false);
      rawVariable1.getSupportingDocuments();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable0.addSupportingDocuments(arrayList0);
      assertEquals("MacawProperties", derivedVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.7440570639310744
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.removeSourceVariables(arrayList0);
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.CANCEL;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      derivedVariable0.removeValueLabel(valueLabel0);
      derivedVariable0.setAvailability("{Cg");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.setForm("{Cg");
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.removeSupportingDocument(supportingDocument0);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.setColumnStart("supportingDocument.documentCode.label");
      rawVariable0.setYear("{Cg");
      rawVariable0.hasSameDisplayName(derivedVariable0);
      rawVariable0.setAlternativeVariable(derivedVariable0);
      derivedVariable0.getFilePath();
      rawVariable0.cloneAttributes(derivedVariable0);
      assertEquals("{Cg", rawVariable0.getYear());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.673415053526696
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument.detectFieldChanges(user0, supportingDocument1, supportingDocument1);
      derivedVariable0.setValueLabels((ArrayList<ValueLabel>) null);
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.containsSourceVariable(rawVariable0);
      supportingDocument0.setFilePath("");
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      derivedVariable0.setIdentifier(0);
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.setNotes("user.postCode.label");
      derivedVariable0.removeSupportingDocuments(arrayList0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      derivedVariable0.removeOntologyTerms(arrayList1);
      assertEquals("user.postCode.label", derivedVariable0.getNotes());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.6709087878625355
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAvailability("&9");
      derivedVariable0.setColumnStart("");
      derivedVariable0.setCoded(false);
      derivedVariable0.getLabel();
      derivedVariable0.addValueLabel((ValueLabel) null);
      derivedVariable0.isCleaned();
      derivedVariable0.setCategory("");
      derivedVariable0.getCleaningStatus();
      derivedVariable0.getSourceVariables();
      assertEquals("&9", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.8425372575703896
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      String string0 = "22^";
      rawVariable0.setCleaningDescription("22^");
      rawVariable0.getCleaningDescription();
      rawVariable0.getOntologyTerms();
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAvailability("$VALUES");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      rawVariable0.getAlias();
      derivedVariable0.hasSameDisplayName(rawVariable0);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.add((Variable) rawVariable0);
      arrayList0.add((Variable) rawVariable0);
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.getAlias();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.668146306723083
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.clone();
      rawVariable0.setCleaningDescription("c#)NXv]S(;Jb/Mu;}:");
      rawVariable0.setCategory("c#)NXv]S(;Jb/Mu;}:");
      rawVariable0.getQuestionNumber();
      rawVariable0.setCleaned(false);
      rawVariable0.setIsNewRecord(false);
      rawVariable0.getDisplayName();
      assertEquals("c#)NXv]S(;Jb/Mu;}:", rawVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.9707214192418183
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setForm("\u0003=)~W@5} J($;");
      derivedVariable0.setCleaningDescription("\u0003=)~W@5} J($;");
      rawVariable0.setAlternativeVariable(derivedVariable0);
      derivedVariable0.questionNumber = "user.affiliation.saveChanges";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.hasSameDisplayName(derivedVariable0);
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.hasSameDisplayName(rawVariable1);
      User user0 = new User("cvR~b]{V:S+f*H%", "");
      user0.setAddressLine2("");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setDescription("cvR~b]{V:S+f*H%");
      rawVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.getQuestionNumber();
      RawVariable rawVariable3 = new RawVariable();
      rawVariable3.setLabel("");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.addSourceVariable(rawVariable2);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges((User) null, derivedVariable2, derivedVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.1760956851343245
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>(0);
      arrayList0.clone();
      rawVariable0.removeOntologyTerms(arrayList0);
      rawVariable0.columnEnd = "variable.cleaningStatus.label";
      rawVariable0.getDisplayItemIdentifier();
      rawVariable0.getOntologyTerms();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.getFilePath();
      RawVariable rawVariable2 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setAlternativeVariable(rawVariable0);
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.addValueLabel(valueLabel0);
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.setSourceVariables(arrayList1);
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, rawVariable0);
      User user1 = new User();
      RawVariable rawVariable3 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      assertEquals("variable.cleaningStatus.label", rawVariable0.getColumnEnd());
      
      rawVariable1.getLabel();
      assertEquals("Unknown", rawVariable1.getAvailability());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      String string0 = "f G)VWPmS.F<:QC";
      rawVariable0.notes = "f G)VWPmS.F<:QC";
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      LinkedList<OntologyTerm> linkedList0 = new LinkedList<OntologyTerm>();
      arrayList0.addAll((Collection<? extends OntologyTerm>) linkedList0);
      arrayList0.add((OntologyTerm) null);
      rawVariable1.setOntologyTerms(arrayList0);
      rawVariable1.setForm("f G)VWPmS.F<:QC");
      // Undeclared exception!
      try { 
        rawVariable1.removeOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = null;
      // Undeclared exception!
      try { 
        derivedVariable1.containsOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=3.219316630943381
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      Variable.validateFields(rawVariable0);
      rawVariable0.createVariableSummary();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      rawVariable0.hasSameDisplayName(derivedVariable0);
      User user0 = new User("uZW5^w33z}", (String) null);
      user0.setAddressLine2((String) null);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setDescription("uZW5^w33z}");
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.setOntologyTerms(arrayList0);
      ArrayList<OntologyTerm> arrayList1 = derivedVariable1.getOntologyTerms();
      derivedVariable0.removeOntologyTerms(arrayList1);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable1.getColumnStart();
      Variable.validateFields(derivedVariable0);
      derivedVariable1.setIsNewRecord(true);
      derivedVariable1.getIdentifier();
      assertTrue(derivedVariable1.isNewRecord());
      
      rawVariable0.getAlias();
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.7084216255763276
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.setSourceVariables(arrayList0);
      arrayList0.add((Variable) derivedVariable0);
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.removeSourceVariable(rawVariable0);
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.getForm();
      rawVariable0.setCodeBookNumber("8ls");
      rawVariable0.setCleaned(true);
      derivedVariable0.getAlias();
      rawVariable0.cloneAttributes(derivedVariable0);
      derivedVariable0.setAlternativeVariable(rawVariable0);
      derivedVariable0.getSourceVariables();
      derivedVariable0.setCoded(true);
      derivedVariable0.getFilePath();
      assertEquals("8ls", derivedVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.6772245773362195
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setQuestionNumber("m$^BH3tEw");
      rawVariable0.setLabel("");
      rawVariable0.getYear();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setCoded(false);
      rawVariable1.setForm("m$^BH3tEw");
      rawVariable0.hasSameDisplayName(rawVariable1);
      rawVariable1.getForm();
      assertEquals("m$^BH3tEw", rawVariable1.getForm());
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.setSourceVariables(arrayList0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.7053647582992766
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.validateFields(derivedVariable0);
      derivedVariable0.setSupportingDocuments(arrayList0);
      derivedVariable0.getCleaningDescription();
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.clone();
      Variable.validateFields(rawVariable0);
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      rawVariable1.getNotes();
      derivedVariable0.getYear();
      derivedVariable0.getLabel();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setIdentifier((-2061));
      rawVariable0.createVariableSummary();
      Variable.validateFields(derivedVariable1);
      assertEquals("-2061", derivedVariable1.getDisplayItemIdentifier());
      assertEquals("Unknown", derivedVariable1.getAvailability());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=3.7546987483710232
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getCategory();
      derivedVariable0.setCoded(true);
      User user0 = new User("XbIVTl/uyj2zf", "'ax8Lg]I)~*");
      user0.setAddressLine1("'ax8Lg]I)~*");
      User user1 = new User("xVKjOYRf8R", "VALUE_LABEL");
      User.detectFieldChanges(user0, user1, user0);
      derivedVariable0.clone();
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable0.cloneAttributes(derivedVariable0);
      supportingDocument0.setFileName("");
      supportingDocument1.setDocumentCode("Gh(n&b0;\"^yIf(]kGS");
      rawVariable0.addSupportingDocument(supportingDocument0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.cloneAttributes(derivedVariable1);
      user0.setEmail("xVKjOYRf8R");
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable1);
      derivedVariable0.setCodeBookNumber("UNABLE_TO_CREATE_RAW_VARIABLE");
      derivedVariable1.setLabel("A<I");
      derivedVariable0.setCleaned(false);
      ArrayList<SupportingDocument> arrayList0 = derivedVariable1.getSupportingDocuments();
      derivedVariable0.addSupportingDocuments(arrayList0);
      derivedVariable0.getDisplayItemIdentifier();
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.7476478261605775
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.setSourceVariables(arrayList0);
      arrayList0.add((Variable) derivedVariable0);
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.removeSourceVariable(rawVariable0);
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.getForm();
      rawVariable0.setCodeBookNumber("8ls");
      rawVariable0.setCleaned(true);
      derivedVariable0.getAlias();
      rawVariable0.cloneAttributes(derivedVariable0);
      derivedVariable0.setAlternativeVariable(rawVariable0);
      derivedVariable0.getSourceVariables();
      derivedVariable0.setCleaned(true);
      ArrayList<SupportingDocument> arrayList1 = derivedVariable0.getSupportingDocuments();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.addSupportingDocuments(arrayList1);
      assertEquals("8ls", derivedVariable0.getCodeBookNumber());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.885666121474421
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setForm("\u0003=)~W@5} J($;");
      derivedVariable0.setCleaningDescription("\u0003=)~W@5} J($;");
      rawVariable0.setAlternativeVariable(derivedVariable0);
      derivedVariable0.questionNumber = "user.affiliation.saveChanges";
      HashMap<Integer, Integer> hashMap0 = new HashMap<Integer, Integer>();
      hashMap0.remove((Object) arrayList0, (Object) "lha.mrc.ac.uk:LHA");
      Collection<Integer> collection0 = hashMap0.values();
      arrayList0.containsAll(collection0);
      arrayList0.trimToSize();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      rawVariable0.setSupportingDocuments(arrayList1);
      rawVariable0.setValueLabels(arrayList0);
      rawVariable0.getCleaningStatus();
      rawVariable0.setColumnEnd("*`_}k");
      rawVariable0.addSupportingDocuments(arrayList1);
      ArrayList<Variable> arrayList2 = derivedVariable0.getSourceVariables();
      derivedVariable0.setSourceVariables(arrayList2);
      derivedVariable0.addSourceVariable(rawVariable0);
      rawVariable0.getAlias();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIsNewRecord(true);
      supportingDocument0.setFileName("*`_}k");
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.setLabel("macaw.businessLayer.User");
      derivedVariable0.getCategory();
      rawVariable0.getValueLabels();
      rawVariable0.clone();
      rawVariable0.getForm();
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertEquals("*`_}k", rawVariable0.getColumnEnd());
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.919897706358568
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User("'}eGT_h(/N", "");
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, (Variable) null);
      assertNull(macawChangeEvent0);
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
      
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      RawVariable rawVariable0 = new RawVariable();
      Variable.validateFields(rawVariable0);
      rawVariable0.createVariableSummary();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      rawVariable0.hasSameDisplayName(derivedVariable0);
      User user1 = new User("e4v{'z", (String) null);
      user1.setAddressLine2((String) null);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setDescription("e4v{'z");
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.setOntologyTerms(arrayList0);
      ArrayList<OntologyTerm> arrayList1 = derivedVariable1.getOntologyTerms();
      derivedVariable0.removeOntologyTerms(arrayList1);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable1.getColumnStart();
      Variable.validateFields(derivedVariable0);
      derivedVariable1.setIsNewRecord(false);
      ArrayList<MacawChangeEvent> arrayList2 = DerivedVariable.detectFieldChanges(user1, derivedVariable1, derivedVariable0);
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertFalse(derivedVariable1.isCleaned());
      assertTrue(arrayList2.isEmpty());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.881766240540306
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setForm("\u0003=)~W@5} J($;");
      derivedVariable0.setCleaningDescription("\u0003=)~W@5} J($;");
      rawVariable0.setAlternativeVariable(derivedVariable0);
      derivedVariable0.questionNumber = "user.affilition.saveChanges";
      HashMap<Integer, Integer> hashMap0 = new HashMap<Integer, Integer>();
      hashMap0.remove((Object) arrayList0, (Object) "lha.mrc.ac.uk:LHA");
      Collection<Integer> collection0 = hashMap0.values();
      arrayList0.containsAll(collection0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument1);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      rawVariable0.setCoded(false);
      supportingDocument1.setFileName("user.affilition.saveChanges");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setColumnEnd("F4'FTuII?I9");
      SupportingDocument supportingDocument3 = new SupportingDocument();
      supportingDocument3.setDocumentCode(">ETeaKX`*^!p`");
      rawVariable1.addSupportingDocument((SupportingDocument) null);
      User user0 = new User("user.affilition.saveChanges", "F4'FTuII?I9");
      user0.setEmail("");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      rawVariable0.getSupportingDocuments();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.createVariableSummary();
      derivedVariable0.getQuestionNumber();
      assertEquals("user.affilition.saveChanges", derivedVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.7808459625592628
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getCategory();
      derivedVariable0.setCoded(true);
      derivedVariable0.codeBookNumber = "T6 00@ud87Uy3&_9.9";
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      derivedVariable0.removeOntologyTerms(arrayList0);
      derivedVariable0.getForm();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.addSourceVariable(rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace("");
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.addSourceVariable(rawVariable0);
      rawVariable0.isCleaned();
      rawVariable0.setOntologyTerms(arrayList0);
      assertFalse(rawVariable0.isCoded());
      assertTrue(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      rawVariable0.setSupportingDocuments(arrayList0);
      rawVariable0.setColumnStart("variable.availability.label");
      // Undeclared exception!
      try { 
        rawVariable0.containsSupportingDocument((SupportingDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=3.0466827489966213
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList1.remove((Object) arrayList0);
      derivedVariable0.setOntologyTerms(arrayList0);
      User user0 = new User("general.fieldValue.unknown", "user.phone.label");
      derivedVariable0.setCodeBookNumber("a ,-]rBpYv#>");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.getValueLabels();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      User user1 = new User();
      ontologyTerm1.setNewRecord(false);
      arrayList2.add(ontologyTerm0);
      derivedVariable1.setOntologyTerms(arrayList0);
      derivedVariable1.getOntologyTerms();
      derivedVariable0.removeOntologyTerms(arrayList2);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      Variable.validateFields(derivedVariable2);
      derivedVariable0.getColumnStart();
      assertEquals("a ,-]rBpYv#>", derivedVariable0.getCodeBookNumber());
      
      ArrayList<String> arrayList3 = Variable.validateFields(derivedVariable1);
      assertEquals(1, arrayList3.size());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.6845198108434345
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      String string0 = "S7m&7";
      User user0 = new User("S7m&7", "S7m&7");
      user0.setUserID("");
      String string1 = "xM`_:}Xaa`F?BZ>Jl@";
      user0.setStatus("xM`_:}Xaa`F?BZ>Jl@");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.createVariableSummary();
      derivedVariable0.setNotes((String) null);
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=3.15518523292934
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable1.setColumnEnd((String) null);
      Variable.validateFields(rawVariable0);
      VariableSummary variableSummary0 = rawVariable0.createVariableSummary();
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
      
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setOntologyName("variable.name.label");
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      rawVariable0.hasSameDisplayName(derivedVariable0);
      User user0 = new User("uZW5^w33z}", (String) null);
      user0.setAddressLine2((String) null);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setDescription("uZW5^w33z}");
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.setOntologyTerms(arrayList0);
      ArrayList<OntologyTerm> arrayList1 = derivedVariable1.getOntologyTerms();
      derivedVariable0.removeOntologyTerms(arrayList1);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      String string0 = derivedVariable1.getColumnStart();
      assertNotNull(string0);
      
      ArrayList<String> arrayList2 = Variable.validateFields(derivedVariable0);
      assertEquals(1, arrayList2.size());
      
      derivedVariable0.setIsNewRecord(false);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.659942989980766
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCategory((String) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.remove((Object) ontologyTerm0);
      derivedVariable1.setOntologyTerms(arrayList0);
      derivedVariable1.questionNumber = null;
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.hasSameDisplayName(rawVariable0);
      String string0 = "'}eGT_h(/N";
      User user0 = new User("'}eGT_h(/N", (String) null);
      user0.setAddressLine2("UNABLE_TO_CREATE_CONNECTION");
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=3.787123829848138
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.removeValueLabel(valueLabel0);
      rawVariable0.setCleaningStatus("");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList0.sort(comparator0);
      rawVariable0.setSupportingDocuments(arrayList0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setLabel("");
      derivedVariable0.form = "cvR~b]{V:S+f*H%";
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("XbIVTl/uyj2zf");
      rawVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.setAlternativeVariable(rawVariable0);
      rawVariable0.addValueLabel(valueLabel0);
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      derivedVariable1.setSourceVariables(arrayList1);
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      User user1 = new User();
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      Variable.detectFieldChanges(user0, derivedVariable1, rawVariable2);
      assertEquals("cvR~b]{V:S+f*H%", derivedVariable0.getForm());
      
      rawVariable2.getLabel();
      assertEquals("Unknown", rawVariable2.getCleaningStatus());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setNotes("c?Ou");
      derivedVariable0.setAvailability("Pr");
      derivedVariable0.setIdentifier((-1));
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("xZ@ISsM+");
      ontologyTerm0.setNewRecord(true);
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.setIdentifier(0);
      derivedVariable0.getNotes();
      derivedVariable0.getOntologyTerms();
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=3.820333642167501
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      RawVariable rawVariable0 = new RawVariable();
      Variable.validateFields(rawVariable0);
      rawVariable0.createVariableSummary();
      User user0 = new User();
      User.detectFieldChanges(user0, user0, user0);
      DerivedVariable derivedVariable2 = (DerivedVariable)derivedVariable0.clone();
      RawVariable rawVariable1 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable1.containsSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.cloneAttributes(derivedVariable0);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable2.removeValueLabel(valueLabel0);
      supportingDocument2.setFileName("");
      supportingDocument1.setDocumentCode("_>#*YU]]l67(dpDLEx ");
      rawVariable0.addSupportingDocument(supportingDocument1);
      derivedVariable1.cloneAttributes(rawVariable0);
      User user1 = new User();
      user1.setEmail("XbIVTl/uyj2zf");
      rawVariable1.setName("v?Pxnq");
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable2);
      derivedVariable1.setCodeBookNumber("");
      derivedVariable0.setLabel("F^8_hao@dyv8?b3Mt<");
      derivedVariable1.setCleaned(false);
      derivedVariable2.setLabel("F^8_hao@dyv8?b3Mt<");
      RawVariable.detectFieldChanges(user0, rawVariable2, rawVariable2);
      rawVariable1.getSupportingDocuments();
      assertEquals("v?Pxnq", rawVariable1.getName());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=3.8764679629172862
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>(0);
      arrayList0.spliterator();
      arrayList0.clone();
      rawVariable0.removeOntologyTerms(arrayList0);
      rawVariable0.columnEnd = "variable.cleaningStatus.label";
      rawVariable0.getDisplayItemIdentifier();
      rawVariable0.getOntologyTerms();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.getFilePath();
      assertEquals("variable.cleaningStatus.label", rawVariable0.getColumnEnd());
      
      RawVariable rawVariable2 = new RawVariable();
      RawVariable rawVariable3 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable1.cloneAttributes(rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.addValueLabel(valueLabel0);
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      derivedVariable0.setSourceVariables(arrayList1);
      User user0 = new User();
      User user1 = new User("8L28>|B-R", "0");
      Variable.detectChangesInAlternativeVariable(user1, rawVariable1, rawVariable2);
      User user2 = new User();
      RawVariable rawVariable4 = new RawVariable();
      Variable.detectFieldChanges(user1, rawVariable1, rawVariable1);
      rawVariable2.getLabel();
      rawVariable0.getCodeBookNumber();
      String string0 = rawVariable4.getDisplayItemIdentifier();
      assertEquals("0", string0);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.96206830554496
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCategory((String) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.remove((Object) ontologyTerm0);
      derivedVariable1.setOntologyTerms(arrayList0);
      derivedVariable1.questionNumber = null;
      User user0 = new User("a ,-]rBpYv#>", "user.phone.label");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable1, derivedVariable1);
      derivedVariable0.setCodeBookNumber((String) null);
      derivedVariable0.setAlternativeVariable(derivedVariable1);
      derivedVariable0.getValueLabels();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      User user1 = new User();
      OntologyTerm.detectFieldChanges(user1, ontologyTerm0, ontologyTerm1);
      ontologyTerm1.setNewRecord(false);
      arrayList1.add(ontologyTerm1);
      derivedVariable0.setOntologyTerms(arrayList1);
      ArrayList<OntologyTerm> arrayList2 = derivedVariable0.getOntologyTerms();
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms(arrayList2);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=3.639011512108486
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setForm("XbIVTl/uyj2zf");
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.setOntologyTerms(arrayList0);
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel.validateFields(valueLabel1);
      valueLabel0.hasSameDisplayName(valueLabel1);
      derivedVariable0.addValueLabel(valueLabel0);
      User user0 = new User("kRg.9yXeR", "q#~DngR3rtpdF|*[");
      user0.setPassword("kRg.9yXeR");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.questionNumber = "XbIVTl/uyj2zf";
      derivedVariable1.setColumnStart("XbIVTl/uyj2zf");
      SupportingDocument supportingDocument0 = null;
      derivedVariable1.addSupportingDocument((SupportingDocument) null);
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      derivedVariable0.hasSameDisplayName(derivedVariable1);
      derivedVariable1.getCategory();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      user0.setEmail("XbIVTl/uyj2zf");
      derivedVariable0.setIdentifier(1);
      derivedVariable0.setIsNewRecord(true);
      derivedVariable0.getCleaningDescription();
      derivedVariable0.getYear();
      derivedVariable0.getDisplayName();
      user0.setUserID("O-Cfw+^&;{-f");
      derivedVariable1.updateOntologyTerm(ontologyTerm0);
      // Undeclared exception!
      try { 
        derivedVariable1.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=3.090852107382033
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCategory((String) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.remove((Object) ontologyTerm0);
      derivedVariable1.setOntologyTerms(arrayList0);
      derivedVariable1.questionNumber = null;
      User user0 = new User("a ,-]rBpYv#>", "user.phone.label");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable1, derivedVariable1);
      derivedVariable0.setCodeBookNumber((String) null);
      derivedVariable0.setAlternativeVariable(derivedVariable1);
      derivedVariable0.getValueLabels();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      User user1 = new User();
      OntologyTerm.detectFieldChanges(user1, ontologyTerm0, ontologyTerm1);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerm((OntologyTerm) null);
      derivedVariable1.getQuestionNumber();
      rawVariable0.setLabel((String) null);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.addSourceVariable(rawVariable0);
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges(user0, derivedVariable2, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=3.809808815393447
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>(0);
      arrayList0.clone();
      rawVariable0.removeOntologyTerms(arrayList0);
      rawVariable0.columnEnd = "variable.cleaningStatus.label";
      rawVariable0.getDisplayItemIdentifier();
      rawVariable0.getOntologyTerms();
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("", rawVariable1.getLabel());
      assertEquals("", rawVariable1.getCleaningDescription());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("", rawVariable1.getNotes());
      assertEquals("variable.cleaningStatus.label", rawVariable1.getColumnEnd());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("", rawVariable1.getDisplayName());
      assertFalse(rawVariable1.isCoded());
      
      rawVariable0.getFilePath();
      RawVariable rawVariable2 = new RawVariable();
      RawVariable rawVariable3 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addSourceVariable(rawVariable3);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setNameSpace("sNNz^f)");
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      derivedVariable0.addSourceVariable(rawVariable3);
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList1 = RawVariable.detectFieldChanges(user0, rawVariable3, rawVariable0);
      assertFalse(rawVariable3.isNewRecord());
      assertEquals(1, arrayList1.size());
      assertFalse(rawVariable3.isCleaned());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=3.6727697426384536
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      String string0 = "user.postCode.label";
      User user0 = new User("user.postCode.label", "user.postCode.label");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.cloneAttributes(derivedVariable0);
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDescription("variable.alias.label");
      supportingDocument0.setFilePath("general.error.blankField");
      supportingDocument0.getDisplayName();
      supportingDocument0.clone();
      arrayList0.add(supportingDocument0);
      user0.setFirstName((String) null);
      derivedVariable0.removeSupportingDocuments(arrayList0);
      user0.setAffiliation("user.postCode.label");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      String string1 = "G\\,D]LFR\\8?cnNz3[/S";
      // Undeclared exception!
      try { 
        User.detectFieldChanges(user0, user0, user0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.removeSupportingDocuments(arrayList0);
      derivedVariable0.notes = "ETe#H<";
      String string0 = derivedVariable0.getDisplayName();
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", string0);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=3.868879340038821
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      RawVariable rawVariable0 = new RawVariable();
      Variable.validateFields(rawVariable0);
      rawVariable0.createVariableSummary();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      rawVariable0.hasSameDisplayName(derivedVariable0);
      ontologyTerm1.setIdentifier(2299);
      User user0 = new User("e4v{'z", (String) null);
      user0.setAddressLine2((String) null);
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm2.setDescription("e4v{'z");
      rawVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.getQuestionNumber();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable1.getOntologyTerms();
      arrayList0.add(ontologyTerm1);
      derivedVariable1.setOntologyTerms(arrayList0);
      ArrayList<OntologyTerm> arrayList1 = derivedVariable1.getOntologyTerms();
      // Undeclared exception!
      try { 
        derivedVariable1.removeOntologyTerms(arrayList1);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.771310017496008
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User("uZW5^w33z}", (String) null);
      user0.setAddressLine2((String) null);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setDescription("uZW5^w33z}");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setLabel("variable.cleaningStatus.label");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable1.addSourceVariable(derivedVariable2);
      DerivedVariable derivedVariable3 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable2, derivedVariable3);
      derivedVariable3.addSourceVariable(rawVariable1);
      derivedVariable2.setLabel("P2fC");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      assertEquals("variable.cleaningStatus.label", rawVariable1.getLabel());
      assertEquals("Unknown", rawVariable0.getCategory());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=3.017089194009057
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>(0);
      arrayList0.clone();
      rawVariable0.removeOntologyTerms(arrayList0);
      Variable.validateFields(rawVariable0);
      rawVariable0.createVariableSummary();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.hasSameDisplayName(derivedVariable0);
      User user0 = new User();
      user0.setAddressLine2("N.5\"KxP");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm0.setDescription("@L;]=VBBTN`g");
      rawVariable0.getOntologyTerms();
      rawVariable0.setLabel("vmmn6c@");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable1.addSourceVariable(derivedVariable2);
      DerivedVariable.detectFieldChanges(user0, derivedVariable2, derivedVariable1);
      DerivedVariable derivedVariable3 = new DerivedVariable();
      derivedVariable2.addSourceVariable(derivedVariable0);
      DerivedVariable derivedVariable4 = new DerivedVariable();
      derivedVariable1.setLabel("UuNgoVOHaB");
      RawVariable rawVariable2 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      assertEquals("vmmn6c@", rawVariable0.getLabel());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=3.86122081003619
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      RawVariable rawVariable0 = new RawVariable();
      Variable.validateFields(rawVariable0);
      rawVariable0.createVariableSummary();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      rawVariable0.hasSameDisplayName(derivedVariable0);
      User user0 = new User("e4v{'z", (String) null);
      user0.setAddressLine2((String) null);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setDescription("e4v{'z");
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.setOntologyTerms(arrayList0);
      ArrayList<OntologyTerm> arrayList1 = derivedVariable1.getOntologyTerms();
      derivedVariable0.removeOntologyTerms(arrayList1);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.addSourceVariable(rawVariable0);
      derivedVariable0.setLabel("rVj4eU1s^Qe+-qvM");
      assertEquals("rVj4eU1s^Qe+-qvM", derivedVariable0.getLabel());
      
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=3.839817062647153
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.removeValueLabel(valueLabel0);
      rawVariable0.setCleaningStatus("variable.alias.label");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList0.sort(comparator0);
      rawVariable0.setSupportingDocuments(arrayList0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setLabel("variable.alias.label");
      derivedVariable0.form = "cvR~b]{V:S+f*H%";
      User user0 = new User("cvR~b]{V:S+f*H%", "variable.alias.label");
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel.differencesExist(user0, rawVariable0, valueLabel1, valueLabel1);
      derivedVariable0.clone();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("XbIVTl/uyj2zf");
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.setAlternativeVariable(rawVariable0);
      rawVariable0.addValueLabel(valueLabel0);
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      derivedVariable0.setSourceVariables(arrayList1);
      User user1 = new User();
      Variable.detectChangesInAlternativeVariable(user1, derivedVariable0, derivedVariable0);
      User user2 = new User();
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectFieldChanges(user2, rawVariable1, rawVariable1);
      rawVariable0.getLabel();
      assertEquals("variable.alias.label", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=3.051435843948024
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>(0);
      arrayList0.clone();
      rawVariable0.removeOntologyTerms(arrayList0);
      rawVariable0.columnEnd = "variable.cleaningStatus.label";
      String string0 = rawVariable0.getDisplayItemIdentifier();
      assertEquals("0", string0);
      
      rawVariable0.getOntologyTerms();
      RawVariable rawVariable1 = new RawVariable();
      String string1 = rawVariable0.getFilePath();
      assertEquals("", string1);
      
      RawVariable rawVariable2 = new RawVariable();
      RawVariable rawVariable3 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable2.removeValueLabel(valueLabel0);
      derivedVariable0.addSourceVariable(rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setNameSpace("variable.cleaningStatus.label");
      derivedVariable0.updateOntologyTerm(ontologyTerm2);
      rawVariable2.removeOntologyTerm(ontologyTerm2);
      derivedVariable0.addSourceVariable(rawVariable1);
      boolean boolean0 = rawVariable1.isCleaned();
      assertFalse(boolean0);
      
      rawVariable1.setOntologyTerms(arrayList0);
      VariableSummary variableSummary0 = rawVariable3.createVariableSummary();
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
      
      String string2 = rawVariable0.getLabel();
      assertEquals("", string2);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.2141739247775263
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      User user0 = new User("MacawProperties", "LwK9>");
      RawVariable rawVariable1 = new RawVariable();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable1);
      assertNotNull(macawChangeEvent0);
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      
      boolean boolean0 = rawVariable1.isCoded();
      assertFalse(rawVariable1.isNewRecord());
      assertFalse(rawVariable1.isCleaned());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      User user0 = new User();
      user0.clone();
      user0.setStatus("hl{mb2kFAtY?-c<U");
      user0.setAddressLine1("macaw.businessLayer.DerivedVariable");
      User.detectFieldChanges(user0, user0, user0);
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(rawVariable0.isCoded());
      
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable0.setCoded(true);
      supportingDocument1.setFileName("");
      rawVariable0.setColumnEnd("");
      supportingDocument1.setDocumentCode("macaw.businessLayer.DerivedVariable");
      rawVariable0.addSupportingDocument(supportingDocument1);
      user0.setEmail("variable.columnEnd.label");
      rawVariable0.getSupportingDocuments();
      assertTrue(rawVariable0.isCoded());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=3.042642344956217
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      User user0 = new User("uZW5^w33z}", (String) null);
      user0.setAddressLine2((String) null);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      ontologyTerm2.setDescription("uZW5^w33z}");
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      derivedVariable0.setOntologyTerms(arrayList0);
      ArrayList<OntologyTerm> arrayList1 = derivedVariable1.getOntologyTerms();
      derivedVariable0.removeOntologyTerms(arrayList1);
      derivedVariable1.getColumnStart();
      ArrayList<String> arrayList2 = Variable.validateFields(derivedVariable0);
      assertEquals(1, arrayList2.size());
      
      derivedVariable1.setIsNewRecord(false);
      assertFalse(derivedVariable1.isCoded());
      assertFalse(derivedVariable1.isNewRecord());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.3539190349214616
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      MacawChangeEvent[] macawChangeEventArray0 = new MacawChangeEvent[7];
      ChangeEventType changeEventType0 = ChangeEventType.VARIABLE;
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent(changeEventType0, "macaw.businessLayer.Variable", "macaw.businessLayer.Variable");
      macawChangeEventArray0[0] = macawChangeEvent0;
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent();
      macawChangeEventArray0[1] = macawChangeEvent1;
      ChangeEventType changeEventType1 = ChangeEventType.VALUE_LABEL;
      MacawChangeEvent macawChangeEvent2 = new MacawChangeEvent(changeEventType1, "macaw.businessLayer.Variable", "macaw.businessLayer.Variable");
      macawChangeEventArray0[2] = macawChangeEvent2;
      ChangeEventType changeEventType2 = ChangeEventType.VARIABLE;
      MacawChangeEvent macawChangeEvent3 = new MacawChangeEvent(changeEventType2, "", "Tm");
      macawChangeEventArray0[3] = macawChangeEvent3;
      User user0 = new User();
      MacawChangeEvent macawChangeEvent4 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      macawChangeEventArray0[4] = macawChangeEvent4;
      MacawChangeEvent macawChangeEvent5 = new MacawChangeEvent(changeEventType2, "", "89S,w4");
      macawChangeEventArray0[5] = macawChangeEvent5;
      MacawChangeEvent macawChangeEvent6 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      macawChangeEventArray0[6] = macawChangeEvent6;
      arrayList0.toArray(macawChangeEventArray0);
      arrayList0.add(supportingDocument0);
      rawVariable0.setSupportingDocuments(arrayList0);
      rawVariable0.setYear("a-uN\"AD]+1w");
      assertEquals("a-uN\"AD]+1w", rawVariable0.getYear());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.975507230548075
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      Variable.validateFields(rawVariable0);
      rawVariable0.createVariableSummary();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      rawVariable0.hasSameDisplayName(derivedVariable0);
      User user0 = new User("uZW5^w33z}", (String) null);
      user0.setAddressLine2((String) null);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setDescription("uZW5^w33z}");
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.setOntologyTerms(arrayList0);
      ArrayList<OntologyTerm> arrayList1 = derivedVariable1.getOntologyTerms();
      derivedVariable0.removeOntologyTerms(arrayList1);
      // Undeclared exception!
      try { 
        derivedVariable0.updateOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setFilePath("macaw.businessLayer.User");
      derivedVariable0.setFilePath("");
      ArrayList<ValueLabel> arrayList0 = null;
      derivedVariable0.setValueLabels((ArrayList<ValueLabel>) null);
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel1.clone();
      valueLabel0.hasSameDisplayName(valueLabel1);
      // Undeclared exception!
      try { 
        derivedVariable0.addValueLabel(valueLabel0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=3.5847560296887084
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.questionNumber = "&L\"";
      derivedVariable0.clone();
      derivedVariable0.getColumnStart();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFileName("&L\"");
      derivedVariable0.addSupportingDocument(supportingDocument0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.removeSourceVariable(derivedVariable0);
      derivedVariable0.removeSourceVariable(derivedVariable1);
      derivedVariable0.cloneAttributes(derivedVariable1);
      assertEquals("&L\"", derivedVariable1.getQuestionNumber());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=3.839817062647153
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.removeValueLabel(valueLabel0);
      rawVariable0.setCleaningStatus("");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList0.sort(comparator0);
      rawVariable0.setSupportingDocuments(arrayList0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setLabel("");
      derivedVariable0.form = "cvR~b]{V:S+f*H%";
      User user0 = new User("cvR~b]{V:S+f*H%", "");
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel.differencesExist(user0, rawVariable0, valueLabel1, valueLabel1);
      derivedVariable0.clone();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("XbIVTl/uyj2zf");
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.setAlternativeVariable(rawVariable0);
      rawVariable0.addValueLabel(valueLabel0);
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      derivedVariable0.setSourceVariables(arrayList1);
      User user1 = new User();
      Variable.detectChangesInAlternativeVariable(user1, derivedVariable0, derivedVariable0);
      assertEquals("cvR~b]{V:S+f*H%", derivedVariable0.getForm());
      
      User user2 = new User();
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectFieldChanges(user2, rawVariable1, rawVariable1);
      rawVariable0.getLabel();
      assertEquals("Unknown", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>(0);
      arrayList0.clone();
      rawVariable0.removeOntologyTerms(arrayList0);
      rawVariable0.columnEnd = "variable.cleaningStatus.label";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace("n-%_uMk}8Ems? tZ)]");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setFilePath((String) null);
      derivedVariable0.setLabel("variable.cleaningStatus.label");
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      derivedVariable0.addSourceVariables(arrayList1);
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm1);
      assertEquals("variable.cleaningStatus.label", derivedVariable0.getLabel());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 71
  /*Coverage entropy=3.8214296278096085
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>(0);
      arrayList0.clone();
      rawVariable0.removeOntologyTerms(arrayList0);
      rawVariable0.columnEnd = "variable.cleaningStatus.label";
      rawVariable0.getDisplayItemIdentifier();
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      rawVariable0.getFilePath();
      RawVariable rawVariable2 = new RawVariable();
      RawVariable rawVariable3 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addSourceVariable(rawVariable3);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setNameSpace("sNNz^f)");
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      derivedVariable0.addSourceVariable(rawVariable0);
      rawVariable3.isCleaned();
      rawVariable1.setOntologyTerms(arrayList1);
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("", rawVariable1.getLabel());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("", rawVariable1.getFilePath());
      assertEquals("", rawVariable1.getYear());
      assertEquals("", rawVariable1.getNotes());
      assertFalse(rawVariable1.isCoded());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals(0, rawVariable1.getIdentifier());
      assertEquals("variable.cleaningStatus.label", rawVariable1.getColumnEnd());
      assertEquals("", rawVariable1.getCleaningDescription());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.879376754279852
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.removeValueLabel(valueLabel0);
      rawVariable0.setCleaningStatus("");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList0.sort(comparator0);
      User user0 = new User("", "UNABLE_TO_ASSOCIATE_DOCUMENT");
      User.detectFieldChanges(user0, user0, user0);
      RawVariable rawVariable1 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable1.containsSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable0.setCoded(true);
      user0.setLastName("variable.alias.label");
      supportingDocument1.setFileName("variable.alternativeVariable.label");
      rawVariable1.setColumnEnd("");
      supportingDocument0.setDocumentCode("variable.alternativeVariable.label");
      rawVariable1.addSupportingDocument(supportingDocument1);
      user0.setEmail("UNABLE_TO_ASSOCIATE_DOCUMENT");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getSupportingDocuments();
      rawVariable1.createVariableSummary();
      derivedVariable0.getQuestionNumber();
      assertFalse(derivedVariable0.isCoded());
      
      rawVariable0.addValueLabel(valueLabel0);
      assertTrue(rawVariable0.isCoded());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=3.890890323833027
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      MacawChangeEvent[] macawChangeEventArray0 = new MacawChangeEvent[7];
      MockDate mockDate0 = new MockDate((-1435), 0, (-1879048189));
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      macawChangeEventArray0[1] = macawChangeEvent0;
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertFalse(derivedVariable1.isCleaned());
      
      RawVariable rawVariable1 = new RawVariable();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument1);
      assertFalse(boolean0);
      
      RawVariable rawVariable2 = new RawVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.addSourceVariable(rawVariable2);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      rawVariable2.setValueLabels(arrayList0);
      ontologyTerm1.setNameSpace("variable.cleaningStatus.label");
      derivedVariable2.updateOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable2.removeOntologyTerm(ontologyTerm2);
      derivedVariable2.addSourceVariable(rawVariable1);
      RawVariable rawVariable3 = new RawVariable();
      rawVariable3.isCleaned();
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      rawVariable3.setOntologyTerms(arrayList1);
      rawVariable3.hasSameDisplayName(rawVariable1);
      assertFalse(rawVariable3.isNewRecord());
  }
}
