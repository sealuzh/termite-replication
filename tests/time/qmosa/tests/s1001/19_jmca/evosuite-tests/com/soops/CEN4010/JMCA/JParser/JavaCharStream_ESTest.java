/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 29 15:28:27 GMT 2020
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.nio.CharBuffer;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JavaCharStream_ESTest extends JavaCharStream_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.235378161557544
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)13;
      byteArray0[1] = (byte)13;
      byteArray0[2] = (byte)1;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.close();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 1991, (byte)31);
      javaCharStream0.readChar();
      javaCharStream0.BeginToken();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      javaCharStream0.adjustBeginLineColumn(4096, 100);
      javaCharStream0.BeginToken();
      javaCharStream0.getEndColumn();
      javaCharStream0.BeginToken();
      javaCharStream0.getEndColumn();
      javaCharStream0.getBeginLine();
      javaCharStream0.AdjustBuffSize();
      StringReader stringReader0 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
      char[] charArray0 = new char[1];
      stringReader0.reset();
      charArray0[0] = '\r';
      stringReader0.read(charArray0);
      javaCharStream0.GetImage();
      javaCharStream0.GetSuffix(84);
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals(4098, javaCharStream0.getLine());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.8605343774698508
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      StringReader stringReader0 = new StringReader("%");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, (-2207), 0);
      assertEquals((-1), javaCharStream0.bufpos);
      
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)64;
      byteArray0[1] = (byte)58;
      byteArray0[2] = (byte)64;
      byteArray0[3] = (byte)84;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      javaCharStream0.BeginToken();
      javaCharStream0.ExpandBuff(false);
      int int0 = javaCharStream0.getLine();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.08831978220001763
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      StringReader stringReader0 = new StringReader("%");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, (-2207), 0);
      assertEquals((-1), javaCharStream0.bufpos);
      
      int int0 = JavaCharStream.hexval('1');
      assertEquals(1, int0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.4689732714597972
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)80;
      byteArray0[1] = (byte)80;
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte) (-81);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-81), 44);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)80, (byte)80);
      byteArrayInputStream0.close();
      javaCharStream0.backup(8);
      byteArrayInputStream0.close();
      byteArrayInputStream0.close();
      javaCharStream0.readChar();
      try { 
        JavaCharStream.hexval(';');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      StringReader stringReader0 = new StringReader("}THL>");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.GetImage();
      javaCharStream0.Done();
      // Undeclared exception!
      try { 
        javaCharStream0.getLine();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.2122566109222657
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)80;
      byteArray0[1] = (byte)80;
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte) (-81);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-81), 1);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)80, (byte)80);
      byteArrayInputStream0.close();
      javaCharStream0.backup(8);
      byteArrayInputStream0.close();
      javaCharStream0.readChar();
      boolean boolean0 = javaCharStream0.prevCharIsLF;
      javaCharStream0.BeginToken();
      javaCharStream0.getBeginLine();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, (byte)1, 57);
      javaCharStream1.ReInit((InputStream) sequenceInputStream0, 2561, (-1525), 4089);
      javaCharStream0.adjustBeginLineColumn((-1703), 2561);
      // Undeclared exception!
      try { 
        javaCharStream1.FillBuff();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.227704336934676
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[0] = 'm';
      charArray0[1] = 'K';
      charArray0[2] = 'p';
      charArray0[3] = 'W';
      charArray0[4] = '4';
      charArray0[5] = '~';
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)8;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.close();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 96, 76);
      javaCharStream0.readChar();
      javaCharStream0.BeginToken();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      javaCharStream0.adjustBeginLineColumn((-1), 92);
      javaCharStream0.ReadByte();
      javaCharStream0.getEndColumn();
      javaCharStream0.BeginToken();
      javaCharStream0.getEndColumn();
      javaCharStream0.getBeginLine();
      javaCharStream0.AdjustBuffSize();
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.16924965202722864
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      stringReader0.skip(0L);
      stringReader0.ready();
      JavaCharStream.hexval('d');
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 13, 1);
      try { 
        JavaCharStream.hexval('q');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)116;
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("");
      try { 
        JavaCharStream.hexval('M');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("OUC~`! ");
      try { 
        JavaCharStream.hexval('R');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[0];
      int int0 = 90;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 90, 90);
      byteArrayInputStream0.close();
      StringReader stringReader0 = new StringReader("<,Txy");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 90, 90, 13);
      javaCharStream0.backup(90);
      byteArrayInputStream0.close();
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -77
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StringReader stringReader0 = new StringReader("MAD7P@/V0'");
      try { 
        JavaCharStream.hexval('[');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      StringReader stringReader0 = new StringReader("RCA#:!E< a_kss;/|");
      StringReader stringReader1 = new StringReader("RCA#:!E< a_kss;/|");
      try { 
        JavaCharStream.hexval('J');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.08831978220001763
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      StringReader stringReader0 = new StringReader("%");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 29, (-2207), 29);
      assertEquals((-1), javaCharStream0.bufpos);
      
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)64;
      byteArray0[1] = (byte)58;
      byteArray0[2] = (byte)64;
      int int0 = JavaCharStream.hexval('F');
      assertEquals(15, int0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)1;
      JavaCharStream.hexval('2');
      try { 
        JavaCharStream.hexval('P');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      try { 
        JavaCharStream.hexval('G');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.3020141030859054
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)13;
      byteArray0[2] = (byte) (-44);
      byteArray0[3] = (byte)72;
      byteArray0[4] = (byte)40;
      byteArray0[5] = (byte)72;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)13, 4082);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)72, 0);
      byteArrayInputStream0.close();
      javaCharStream0.backup((byte)72);
      byteArrayInputStream0.close();
      javaCharStream0.readChar();
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn(0, 2880);
      byteArrayInputStream0.mark(0);
      javaCharStream0.BeginToken();
      javaCharStream0.getEndColumn();
      javaCharStream0.getBeginLine();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.ExpandBuff(true);
      javaCharStream0.GetImage();
      javaCharStream0.adjustBeginLineColumn((byte)13, 2880);
      javaCharStream0.BeginToken();
      assertEquals(71, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      StringReader stringReader0 = new StringReader("%");
      int int0 = (-2207);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, (-2207), 0);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)64;
      byteArray0[1] = (byte)58;
      byteArray0[2] = (byte)64;
      // Undeclared exception!
      try { 
        javaCharStream0.getBeginLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("6UGIdU2A>[Z7");
      int int0 = JavaCharStream.hexval('2');
      assertEquals(2, int0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      try { 
        JavaCharStream.hexval('T');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)1, 55);
      byteArrayInputStream0.close();
      byteArrayInputStream0.close();
      byteArrayInputStream0.close();
      try { 
        JavaCharStream.hexval('L');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.212256610922266
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)80;
      byteArray0[1] = (byte)80;
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte) (-81);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-81), 1);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)80, (byte)80);
      byteArrayInputStream0.close();
      javaCharStream0.backup(8);
      byteArrayInputStream0.close();
      javaCharStream0.readChar();
      FileSystemHandling.shouldAllThrowIOExceptions();
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn(11, 84);
      javaCharStream0.BeginToken();
      javaCharStream0.getEndColumn();
      javaCharStream0.ExpandBuff(true);
      // Undeclared exception!
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.3584312670587173
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)1, 55);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-1574), 55);
      byteArrayInputStream0.close();
      javaCharStream0.backup((byte)1);
      byteArrayInputStream0.close();
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn((-2469), 1336);
      javaCharStream0.BeginToken();
      javaCharStream0.getEndColumn();
      javaCharStream0.getBeginLine();
      try { 
        JavaCharStream.hexval('>');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.8891591637540215
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-79);
      byteArray0[1] = (byte)7;
      byteArray0[2] = (byte) (-98);
      byteArray0[3] = (byte)1;
      byte byte0 = (byte) (-88);
      byteArray0[4] = (byte) (-88);
      byteArray0[5] = (byte) (-111);
      byteArray0[6] = (byte)19;
      int int0 = 3540;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-88), 3540);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)7, (byte) (-79));
      byteArrayInputStream0.close();
      javaCharStream0.backup((byte) (-79));
      byteArrayInputStream0.close();
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      char char0 = '_';
      try { 
        JavaCharStream.hexval('_');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      StringReader stringReader0 = new StringReader("RCA#:!E< a_kss;/|");
      stringReader0.ready();
      try { 
        JavaCharStream.hexval('=');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)72;
      byteArray0[1] = (byte) (-63);
      byteArray0[2] = (byte) (-63);
      byteArray0[3] = (byte)72;
      byteArray0[4] = (byte)80;
      byteArray0[5] = (byte)80;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)72, (byte)80);
      int int0 = JavaCharStream.hexval('A');
      assertEquals(10, int0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.39274289626694653
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StringReader stringReader0 = new StringReader("hwLQ[n#BtWch'-0(");
      stringReader0.skip(1083L);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.AdjustBuffSize();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)40;
      byteArray0[1] = (byte)80;
      byteArray0[2] = (byte)125;
      byteArray0[3] = (byte)80;
      byteArray0[4] = (byte)80;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)80, (byte)40);
      try { 
        JavaCharStream.hexval('N');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.8605343774698508
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      StringReader stringReader0 = new StringReader("}!+'e\"9o@k4");
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-53), 63, 63);
      javaCharStream0.BeginToken();
      javaCharStream0.getBeginColumn();
      javaCharStream0.AdjustBuffSize();
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.1979107463921412
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)13;
      byteArray0[1] = (byte)13;
      byteArray0[2] = (byte)1;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.close();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 1991, (byte)31);
      javaCharStream0.readChar();
      javaCharStream0.BeginToken();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      javaCharStream0.adjustBeginLineColumn(4096, 100);
      javaCharStream0.BeginToken();
      javaCharStream0.getEndColumn();
      javaCharStream0.BeginToken();
      javaCharStream0.getEndColumn();
      javaCharStream0.getBeginLine();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.BeginToken();
      javaCharStream0.ExpandBuff(true);
      javaCharStream0.GetImage();
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals(4098, javaCharStream0.getBeginLine());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      try { 
        JavaCharStream.hexval('X');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("OUC~`! ");
      int int0 = JavaCharStream.hexval('3');
      assertEquals(3, int0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      StringReader stringReader0 = new StringReader("RCA#:!E< a_kss;/|");
      stringReader0.ready();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)80;
      byteArray0[1] = (byte)40;
      byteArray0[2] = (byte)72;
      try { 
        JavaCharStream.hexval('O');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("OUC~`! ");
      try { 
        JavaCharStream.hexval('U');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("OUC~`! ");
      try { 
        JavaCharStream.hexval('<');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader0 = new StringReader("@le\"1%M5.B!");
      StringReader stringReader1 = new StringReader("@le\"1%M5.B!");
      int int0 = JavaCharStream.hexval('E');
      assertEquals(14, int0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader0 = new StringReader(":h_");
      stringReader0.ready();
      int int0 = JavaCharStream.hexval('e');
      assertEquals(14, int0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      StringReader stringReader0 = new StringReader("RCA#:!E< a_kss;/|");
      stringReader0.ready();
      try { 
        JavaCharStream.hexval('^');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("OUC~`! ");
      try { 
        JavaCharStream.hexval('Q');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)13;
      try { 
        JavaCharStream.hexval('W');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      try { 
        JavaCharStream.hexval('H');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      char char0 = 'V';
      try { 
        JavaCharStream.hexval('V');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)13;
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("lH34#3')q0G{cE(1");
      int int0 = JavaCharStream.hexval('8');
      assertEquals(8, int0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[0] = 'm';
      charArray0[1] = 'K';
      charArray0[2] = 'p';
      charArray0[3] = 'W';
      int int0 = JavaCharStream.hexval('7');
      assertEquals(7, int0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      try { 
        JavaCharStream.hexval('?');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      StringReader stringReader0 = new StringReader("RCA#:!E< a_kss;/|");
      StringReader stringReader1 = new StringReader("");
      StringReader stringReader2 = new StringReader("");
      try { 
        JavaCharStream.hexval(':');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)13;
      int int0 = JavaCharStream.hexval('c');
      assertEquals(12, int0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.2568646526994761
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      StringReader stringReader0 = new StringReader("''NC0C~Q9}7'Ek@L");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)90;
      byteArray0[1] = (byte)71;
      byteArray0[2] = (byte)90;
      byteArray0[3] = (byte)56;
      byteArray0[4] = (byte)95;
      byteArray0[5] = (byte) (-15);
      byteArray0[6] = (byte)90;
      byteArray0[7] = (byte)119;
      byteArray0[8] = (byte) (-53);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      javaCharStream0.backup(79);
      assertEquals(4016, javaCharStream0.bufpos);
      
      byte[] byteArray1 = new byte[6];
      byteArray1[0] = (byte)69;
      byteArray1[1] = (byte)69;
      int int0 = JavaCharStream.hexval('C');
      assertEquals(12, int0);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.113539627290935
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)13;
      byteArray0[1] = (byte)13;
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte)40;
      byteArray0[4] = (byte)72;
      byteArray0[5] = (byte) (-14);
      byteArray0[1] = (byte)72;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)72, (byte) (-14));
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-1574), (byte)40);
      byteArrayInputStream0.close();
      javaCharStream0.bufsize = (int) (byte)31;
      javaCharStream0.backup((byte)13);
      byteArrayInputStream0.close();
      javaCharStream0.readChar();
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn((byte)1, 0);
      javaCharStream0.BeginToken();
      javaCharStream0.getEndColumn();
      javaCharStream0.getBeginLine();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.ExpandBuff(true);
      javaCharStream0.GetImage();
      javaCharStream0.adjustBeginLineColumn((byte)1, (-1));
      javaCharStream0.backup((byte)1);
      int int0 = javaCharStream0.getColumn();
      assertEquals(30, javaCharStream0.bufpos);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      try { 
        JavaCharStream.hexval('K');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.089881039824772
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      StringReader stringReader0 = new StringReader("F6}|4\"J<DG.%I:");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.AdjustBuffSize();
      int int0 = 0;
      char[] charArray0 = new char[4];
      charArray0[0] = '(';
      charArray0[1] = 'K';
      charArray0[2] = 'm';
      charArray0[3] = '4';
      stringReader0.read(charArray0);
      javaCharStream0.readChar();
      javaCharStream0.GetSuffix(0);
      stringReader0.markSupported();
      int int1 = (-1631);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      javaCharStream1.adjustBeginLineColumn(78, '4');
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream2 = new JavaCharStream(sequenceInputStream0, 3, 3);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      PipedInputStream pipedInputStream1 = null;
      try {
        pipedInputStream1 = new PipedInputStream(pipedOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      int int0 = JavaCharStream.hexval('0');
      assertEquals(0, int0);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      try { 
        JavaCharStream.hexval('S');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.7912196594138563
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      StringReader stringReader0 = new StringReader("%");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, (-2207), 0);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)64;
      byteArray0[1] = (byte)58;
      byteArray0[2] = (byte)64;
      byteArray0[3] = (byte)84;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      javaCharStream0.BeginToken();
      javaCharStream0.ExpandBuff(true);
      assertEquals(2048, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      int int0 = JavaCharStream.hexval('4');
      assertEquals(4, int0);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.2302998736686868
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      StringReader stringReader0 = new StringReader("OUC~`! ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.maxNextCharInd = (-1);
      javaCharStream0.ReInit((Reader) stringReader0, 3409, 6144, 8);
      javaCharStream0.adjustBeginLineColumn(8, 1411);
      javaCharStream0.adjustBeginLineColumn(86, 92);
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('7');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.0190917718033785
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      StringReader stringReader0 = new StringReader("%");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, (-2207), 0);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-14);
      byteArray0[1] = (byte)72;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2048, (-1));
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, (-1), (byte) (-14));
      byteArrayInputStream0.close();
      javaCharStream0.backup((-1));
      byteArrayInputStream0.close();
      StringReader stringReader1 = new StringReader(")g|Km7*(}$:,");
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader1);
      javaCharStream2.BeginToken();
      javaCharStream2.adjustBeginLineColumn(216, 0);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.read(byteArray0, 0, 4096);
      JavaCharStream javaCharStream3 = new JavaCharStream(sequenceInputStream0, 706, 0);
      try { 
        javaCharStream3.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      try { 
        JavaCharStream.hexval('Z');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.281537267900365
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader0 = new StringReader(";Z,&b$2y#sYf|*]'K3");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)2;
      byteArray0[2] = (byte)116;
      byteArray0[3] = (byte)1;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), (-3583));
      javaCharStream0.backup((-3583));
      byteArrayInputStream0.close();
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn((byte)1, (-355));
      javaCharStream0.BeginToken();
      javaCharStream0.getEndColumn();
      javaCharStream0.getBeginLine();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.ExpandBuff(false);
      assertEquals((-1), javaCharStream0.getLine());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.196755797914435
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)13;
      byteArray0[1] = (byte)31;
      byteArray0[2] = (byte)10;
      byteArray0[3] = (byte)40;
      byteArray0[4] = (byte)72;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)72, (byte)31);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-1), (byte) (-14));
      byteArrayInputStream0.close();
      javaCharStream0.backup(1147);
      byteArrayInputStream0.close();
      javaCharStream0.readChar();
      javaCharStream0.BeginToken();
      javaCharStream0.maxNextCharInd = (int) (byte)10;
      javaCharStream0.adjustBeginLineColumn(216, 825);
      javaCharStream0.GetImage();
      javaCharStream0.GetSuffix(1);
      javaCharStream0.getLine();
      int int0 = javaCharStream0.getEndColumn();
      assertEquals(2950, javaCharStream0.bufpos);
      assertEquals(825, int0);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.2892729643178154
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)13;
      byteArray0[1] = (byte)31;
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte)40;
      byteArray0[4] = (byte)72;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)72, (byte)31);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-1), (byte) (-14));
      byteArrayInputStream0.close();
      javaCharStream0.backup(1147);
      byteArrayInputStream0.close();
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn(216, 4371);
      javaCharStream0.BeginToken();
      javaCharStream0.getEndColumn();
      byte[] byteArray1 = new byte[0];
      byteArrayInputStream0.read(byteArray1);
      javaCharStream0.getBeginLine();
      javaCharStream0.GetImage();
      byteArrayInputStream0.close();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.getEndLine();
      int int0 = javaCharStream0.getBeginColumn();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(4371, int0);
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.024519076204997
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)67;
      byteArray0[1] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, (byte)67);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-1141), (byte)67);
      byteArrayInputStream0.close();
      javaCharStream0.backup((-2697));
      byteArrayInputStream0.close();
      javaCharStream0.BeginToken();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 65);
      JavaCharStream javaCharStream1 = new JavaCharStream(pushbackInputStream0);
      javaCharStream1.adjustBeginLineColumn(0, 1);
      javaCharStream0.BeginToken();
      JavaCharStream javaCharStream2 = new JavaCharStream(pushbackInputStream0, 74, (-1), 975);
      try { 
        javaCharStream2.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      StringReader stringReader0 = new StringReader("S7WsYsy'sWf}.Ro:K~");
      try { 
        JavaCharStream.hexval(']');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.2249103455198487
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("J>;QK");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.BeginToken();
      javaCharStream0.getEndLine();
      javaCharStream0.GetSuffix(1);
      stringReader0.skip(0L);
      stringReader0.ready();
      javaCharStream0.ReInit((Reader) stringReader0, 1, (-1632), 3863);
      javaCharStream0.backup((-1632));
      javaCharStream0.getBeginColumn();
      javaCharStream0.getBeginColumn();
      javaCharStream0.getEndLine();
      javaCharStream0.GetImage();
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.212256610922266
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)13;
      byteArray0[1] = (byte)31;
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte)40;
      byteArray0[4] = (byte)72;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)72, (byte)31);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-1), (byte) (-14));
      byteArrayInputStream0.close();
      int int0 = 1147;
      javaCharStream0.backup(1147);
      byteArrayInputStream0.close();
      javaCharStream0.readChar();
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn(216, 4371);
      javaCharStream0.BeginToken();
      javaCharStream0.getEndColumn();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.ExpandBuff(false);
      // Undeclared exception!
      try { 
        javaCharStream0.GetImage();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.4012244823354805
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[2] = (byte)13;
      byteArray0[1] = (byte)13;
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte)13;
      byteArray0[4] = (byte)72;
      byteArray0[5] = (byte) (-14);
      byteArray0[1] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, (byte) (-14));
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-1574), (byte)13);
      byteArrayInputStream0.close();
      byteArray0[2] = (byte)31;
      javaCharStream0.backup((byte)13);
      byteArrayInputStream0.close();
      javaCharStream0.readChar();
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn((byte)31, 0);
      javaCharStream0.BeginToken();
      javaCharStream0.getEndColumn();
      javaCharStream0.getBeginLine();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.getEndColumn();
      javaCharStream0.GetImage();
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      StringReader stringReader0 = new StringReader("yfs?So}p#Fo");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char char0 = javaCharStream0.ReadByte();
      assertEquals((-1), javaCharStream0.bufpos);
      assertEquals('y', char0);
  }

  /**
  //Test case number: 67
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      try { 
        JavaCharStream.hexval('\\');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.0431918705451206
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      StringReader stringReader0 = new StringReader("$Ig@@3@J");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2939, (-1));
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1), (-2546));
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0);
      stringReader0.markSupported();
      javaCharStream0.GetSuffix(1389);
      javaCharStream0.bufcolumn = null;
      byteArrayInputStream0.skip(0L);
      byte[] byteArray1 = new byte[0];
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray1, (-3463), 2939);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0);
      Enumeration<InputStream> enumeration1 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration1).hasMoreElements();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(enumeration1);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JavaCharStream javaCharStream1 = new JavaCharStream(sequenceInputStream1, 0, 1063, 0);
      // Undeclared exception!
      try { 
        javaCharStream0.getColumn();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.291602112559264
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[5] = (byte)122;
      byteArray0[1] = (byte)11;
      byteArray0[2] = (byte) (-71);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.close();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte) (-71), (byte) (-71));
      javaCharStream0.readChar();
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn(97, 97);
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn((byte)122, (byte) (-71));
      javaCharStream0.BeginToken();
      javaCharStream0.getEndColumn();
      byteArrayInputStream0.read(byteArray0);
      javaCharStream0.getBeginLine();
      javaCharStream0.GetImage();
      byteArrayInputStream0.close();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.getEndLine();
      int int0 = javaCharStream0.getBeginColumn();
      assertEquals((-70), int0);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.8121428103584718
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      StringReader stringReader0 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2347, 2347, 2347);
      javaCharStream0.AdjustBuffSize();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)46;
      byteArray0[1] = (byte)94;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)34;
      byteArray0[1] = (byte) (-13);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 4, 0);
      Enumeration<SequenceInputStream> enumeration0 = (Enumeration<SequenceInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      Enumeration<InputStream> enumeration1 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration1).hasMoreElements();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(enumeration1);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, 2347, 519, 78);
      javaCharStream0.adjustBeginLineColumn(2007, (byte)46);
      assertEquals(46, javaCharStream0.getBeginColumn());
      
      JavaCharStream javaCharStream2 = new JavaCharStream(pushbackInputStream0);
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0, (int) (byte) (-13), 205);
      assertEquals(0, javaCharStream0.getBeginLine());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.2796985311121767
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("OUC~`! ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.maxNextCharInd = 4076;
      javaCharStream0.backup((-1048));
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      javaCharStream0.UpdateLineColumn('S');
      javaCharStream0.getColumn();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      javaCharStream1.adjustBeginLineColumn(10, (-1343));
      javaCharStream0.BeginToken();
      javaCharStream0.getEndColumn();
      javaCharStream1.getBeginLine();
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0, 101, 91);
      javaCharStream2.AdjustBuffSize();
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((InputStream) null, 1, (-1307), (-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.1742933185645
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      StringReader stringReader0 = new StringReader("hwLQ[n#BtWch'-0(");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.AdjustBuffSize();
      char[] charArray0 = new char[6];
      charArray0[0] = 'm';
      charArray0[1] = 'K';
      charArray0[2] = 'p';
      char char0 = 'W';
      charArray0[3] = 'W';
      charArray0[4] = '4';
      charArray0[5] = '~';
      stringReader0.read(charArray0);
      javaCharStream0.readChar();
      javaCharStream0.GetSuffix(0);
      PipedInputStream pipedInputStream0 = new PipedInputStream(71);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0, 3389);
      javaCharStream0.ReInit((InputStream) bufferedInputStream0, 820, 0, (-1));
      // Undeclared exception!
      try { 
        javaCharStream0.getLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.059044366009098
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      stringReader0.read();
      javaCharStream0.readChar();
      char[] charArray0 = new char[2];
      charArray0[0] = 'n';
      charArray0[1] = 'n';
      javaCharStream0.nextCharBuf = charArray0;
      javaCharStream0.inputStream = (Reader) stringReader0;
      javaCharStream0.ReInit((Reader) stringReader0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream1 = new JavaCharStream(pipedInputStream0, 73, 73);
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=0.8369882167858358
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" column ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.adjustBeginLineColumn(610, 610);
      javaCharStream0.adjustBeginLineColumn(610, 610);
      // Undeclared exception!
      try { 
        javaCharStream0.getColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.1383330595080277
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2, (-1), 2);
      int[] intArray0 = new int[6];
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(dataInputStream0);
      javaCharStream0.ReInit((InputStream) pushbackInputStream0, 2, 79);
      intArray0[0] = 2;
      intArray0[1] = (-1);
      intArray0[2] = 2;
      intArray0[3] = (-1);
      intArray0[4] = 2;
      javaCharStream0.ExpandBuff(false);
      intArray0[5] = (-1);
      javaCharStream0.bufcolumn = intArray0;
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 4096, 4814, 4814);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-21);
      byteArray0[1] = (byte)55;
      byteArray0[2] = (byte)92;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 4067);
      javaCharStream0.ReInit((InputStream) pushbackInputStream0, (int) (byte)0, (int) (byte) (-21));
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 77
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      int int0 = JavaCharStream.hexval('b');
      assertEquals(11, int0);
      
      int int1 = JavaCharStream.hexval('D');
      assertEquals(13, int1);
  }

  /**
  //Test case number: 78
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)13;
      byteArray0[1] = (byte)31;
      byteArray0[2] = (byte)1;
      int int0 = JavaCharStream.hexval('B');
      assertEquals(11, int0);
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 62, 62);
      javaCharStream0.getBeginLine();
      JavaCharStream javaCharStream1 = new JavaCharStream((Reader) null);
      javaCharStream1.GetImage();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      javaCharStream1.GetImage();
      // Undeclared exception!
      try { 
        javaCharStream1.GetSuffix((-1));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.0880919427638154
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      StringReader stringReader0 = new StringReader("MAD7P@/V0'");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 5, 5);
      char[] charArray0 = new char[8];
      charArray0[0] = '\'';
      charArray0[1] = 'h';
      charArray0[2] = 'F';
      charArray0[3] = '~';
      charArray0[4] = 'F';
      charArray0[5] = '}';
      charArray0[6] = 'M';
      charArray0[7] = 'F';
      javaCharStream0.getBeginLine();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.BeginToken();
      javaCharStream0.ExpandBuff(true);
      javaCharStream0.GetImage();
      assertEquals(8192, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 82
  /*Coverage entropy=0.4689732714597972
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      JavaCharStream.hexval('5');
      PipedInputStream pipedInputStream0 = new PipedInputStream(1);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0);
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=0.8855741515766717
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)89;
      byteArray0[1] = (byte) (-71);
      byteArray0[2] = (byte)89;
      byteArray0[3] = (byte)21;
      byteArray0[4] = (byte) (-71);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.reset();
      byteArrayInputStream0.close();
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream1, byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte) (-71), (byte)21);
      javaCharStream0.adjustBeginLineColumn((byte)21, (-345));
      assertEquals((-345), javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.3972668659781817
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)13;
      byteArray0[1] = (byte)31;
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte)40;
      byteArray0[4] = (byte)72;
      byteArray0[5] = (byte) (-14);
      byteArray0[1] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, (byte) (-14));
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-1574), (byte)40);
      byteArrayInputStream0.close();
      javaCharStream0.bufsize = (int) (byte)31;
      javaCharStream0.backup((byte)13);
      byteArrayInputStream0.close();
      javaCharStream0.readChar();
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn((byte)1, 0);
      javaCharStream0.BeginToken();
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0);
      javaCharStream0.Done();
      // Undeclared exception!
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[5] = (byte)122;
      byteArray0[1] = (byte)11;
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("");
      try { 
        JavaCharStream.hexval('Y');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.7328679513998633
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      StringReader stringReader0 = new StringReader("OUC~`! ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.maxNextCharInd = (-1);
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.6957425341696346
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, 76, 102);
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=2.2062232393337773
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[0] = 'm';
      charArray0[1] = 'K';
      charArray0[2] = 'p';
      charArray0[3] = 'W';
      charArray0[4] = '4';
      charArray0[5] = '~';
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)8;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.close();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 96, 76);
      javaCharStream0.readChar();
      javaCharStream0.readChar();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      javaCharStream0.adjustBeginLineColumn((-1), 92);
      javaCharStream0.BeginToken();
      javaCharStream0.getEndColumn();
      javaCharStream0.BeginToken();
      javaCharStream0.getEndColumn();
      javaCharStream0.getBeginLine();
      javaCharStream0.AdjustBuffSize();
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.993621196918812
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)67;
      byteArray0[0] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, (byte)67);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-1141), (byte)67);
      byteArrayInputStream0.close();
      javaCharStream0.backup((-2697));
      byteArrayInputStream0.close();
      javaCharStream0.BeginToken();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 65);
      JavaCharStream javaCharStream1 = new JavaCharStream(pushbackInputStream0);
      javaCharStream1.adjustBeginLineColumn(0, 1);
      javaCharStream0.BeginToken();
      JavaCharStream javaCharStream2 = new JavaCharStream(pushbackInputStream0, 74, (-1), 975);
      try { 
        javaCharStream2.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.8462202193216333
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      StringReader stringReader0 = new StringReader("RCA#:!E< a_kss;/|");
      byte byte0 = (byte) (-14);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)72;
      byteArray0[1] = (byte)72;
      byteArray0[2] = (byte) (-14);
      byteArray0[3] = (byte) (-14);
      byteArray0[4] = (byte)72;
      int int0 = 378;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1356, 378);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 1316, 7);
      byteArrayInputStream0.close();
      javaCharStream0.backup((byte) (-14));
      byteArrayInputStream0.close();
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)55;
      byteArray0[1] = (byte) (-119);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)73;
      byteArray0[4] = (byte)68;
      byteArray0[5] = (byte)80;
      byteArray0[6] = (byte)14;
      byteArray0[7] = (byte)11;
      byteArray0[8] = (byte)11;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-119), (byte)68);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 4, (-523));
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      javaCharStream0.ReInit((InputStream) sequenceInputStream0, (-1383), 88, 4);
      assertEquals(0, javaCharStream0.getBeginLine());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.7494938253936618
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      stringReader0.read();
      javaCharStream0.readChar();
      javaCharStream0.ReInit((Reader) stringReader0, 73, 0, 0);
      char[] charArray0 = new char[2];
      charArray0[0] = 'n';
      charArray0[1] = 'n';
      javaCharStream0.nextCharBuf = charArray0;
      javaCharStream0.inputStream = (Reader) stringReader0;
      javaCharStream0.ReInit((Reader) stringReader0);
      int[] intArray0 = new int[4];
      char[] charArray1 = new char[2];
      charArray1[0] = 'r';
      javaCharStream0.prevCharIsCR = true;
      charArray1[1] = 'n';
      // Undeclared exception!
      try { 
        stringReader0.read(charArray1, 1213, (-1));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      StringReader stringReader0 = new StringReader("^o\")Tp");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 10, 724, 11);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-5);
      byteArray0[1] = (byte) (-71);
      byteArray0[2] = (byte)82;
      byteArray0[3] = (byte)84;
      byteArray0[4] = (byte) (-119);
      byteArray0[5] = (byte) (-71);
      byteArray0[6] = (byte)108;
      byteArray0[7] = (byte)96;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      javaCharStream0.ReInit((InputStream) bufferedInputStream0, (int) (byte)108, (int) (byte) (-5), 117);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 94
  /*Coverage entropy=0.8369882167858358
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('/');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=0.8855741515766717
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)72;
      byteArray0[1] = (byte)72;
      byteArray0[2] = (byte)72;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)72, (byte)72);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream1, byteArrayInputStream1);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, (-1), (byte)72);
      byteArrayInputStream1.markSupported();
      javaCharStream0.adjustBeginLineColumn((-1540), (-1));
      assertEquals((-1), javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.0735428464085233
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)7;
      byteArray0[1] = (byte)55;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)74;
      byteArray0[4] = (byte) (-86);
      byteArray0[5] = (byte)59;
      byteArray0[6] = (byte)25;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)55, 0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0, (byte)25, (-1617), (byte) (-86));
      javaCharStream0.tokenBegin = (int) (byte)59;
      javaCharStream0.adjustBeginLineColumn((-288), (byte)74);
      // Undeclared exception!
      try { 
        javaCharStream0.getEndColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      stringReader0.read();
      char[] charArray0 = new char[2];
      int[] intArray0 = new int[4];
      char[] charArray1 = new char[2];
      charArray1[0] = 'r';
      PipedInputStream pipedInputStream0 = new PipedInputStream(2055);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 0, 4078, (-2659));
      StringReader stringReader1 = new StringReader("5e'qT#6@:t8# TrX");
      javaCharStream0.ReInit((Reader) stringReader0, (-775), (-2730), 1213);
      assertEquals(0, javaCharStream0.getBeginLine());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      char[] charArray0 = new char[7];
      charArray0[0] = 'J';
      charArray0[1] = 'L';
      charArray0[2] = ' ';
      charArray0[3] = 'A';
      charArray0[4] = 'v';
      charArray0[5] = 'V';
      charArray0[6] = 'C';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      int[] intArray0 = new int[0];
      stringReader0.mark(0);
      javaCharStream0.maxNextCharInd = (-917);
      javaCharStream0.bufcolumn = intArray0;
      javaCharStream0.ReInit((Reader) stringReader0, (-2782), 0);
      javaCharStream0.inBuf = (-917);
      // Undeclared exception!
      try { 
        javaCharStream0.getBeginColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.6769877743224175
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 155, 155);
      javaCharStream0.AdjustBuffSize();
      stringReader0.markSupported();
      char[] charArray0 = new char[8];
      charArray0[0] = 'L';
      charArray0[1] = 'U';
      charArray0[2] = 'l';
      charArray0[3] = 'V';
      charArray0[4] = 'f';
      charArray0[5] = '*';
      charArray0[6] = '';
      charArray0[7] = 'J';
      stringReader0.read(charArray0);
      javaCharStream0.Done();
      // Undeclared exception!
      try { 
        javaCharStream0.adjustBeginLineColumn(5, 5);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 100
  /*Coverage entropy=2.212256610922266
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)13;
      byteArray0[1] = (byte)31;
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte)40;
      byteArray0[4] = (byte)72;
      byteArray0[5] = (byte) (-14);
      byteArray0[6] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)31, (byte) (-14));
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-1574), (byte)40);
      byteArrayInputStream0.close();
      javaCharStream0.ReInit((Reader) null, (int) (byte)0, (int) (byte)72);
      javaCharStream0.bufsize = (int) (byte)31;
      byteArrayInputStream0.read(byteArray0);
      javaCharStream0.backup((byte)13);
      javaCharStream0.readChar();
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn((byte)1, 0);
      javaCharStream0.BeginToken();
      javaCharStream0.getEndColumn();
      int int0 = javaCharStream0.getBeginLine();
      assertEquals(20, javaCharStream0.bufpos);
      assertEquals(1, int0);
  }

  /**
  //Test case number: 101
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      StringReader stringReader0 = new StringReader("''NC0C~Q9}7'Ek@L");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)90;
      byteArray0[1] = (byte)71;
      byteArray0[2] = (byte)90;
      byteArray0[3] = (byte)56;
      byteArray0[4] = (byte)95;
      byteArray0[5] = (byte) (-15);
      byteArray0[6] = (byte) (-121);
      byteArray0[7] = (byte)119;
      byteArray0[8] = (byte) (-53);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      javaCharStream0.backup(79);
      byte[] byteArray1 = new byte[6];
      byteArray1[0] = (byte)69;
      byteArray1[5] = (byte)69;
      byteArray1[2] = (byte)85;
      byteArray1[3] = (byte)93;
  }

  /**
  //Test case number: 102
  /*Coverage entropy=2.0097091818941455
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)1, 55);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-1574), 55);
      javaCharStream0.backup(55);
      byteArrayInputStream0.close();
      javaCharStream0.backup((byte)1);
      byteArrayInputStream0.close();
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn((-2469), '\u0000');
      javaCharStream0.BeginToken();
      javaCharStream0.getBeginLine();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.ExpandBuff(false);
      assertEquals((-4041), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 103
  /*Coverage entropy=1.9504543117424777
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      StringReader stringReader0 = new StringReader("RCA#:!E< a_kss;/|");
      stringReader0.ready();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)80;
      byteArray0[1] = (byte)40;
      byteArray0[2] = (byte)72;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)40, 78);
      byteArrayInputStream0.close();
      byteArrayInputStream0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)80, 2048, 8);
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn(12, (-703));
      javaCharStream0.getBeginLine();
      javaCharStream0.AdjustBuffSize();
      assertEquals((-703), javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      // Undeclared exception!
      try { 
        javaCharStream0.getEndColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 105
  /*Coverage entropy=2.4017676418666754
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)1, 55);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-1574), 55);
      byteArrayInputStream0.close();
      javaCharStream0.backup((byte)1);
      byteArrayInputStream0.close();
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn((-2469), 1336);
      javaCharStream0.BeginToken();
      javaCharStream0.getEndColumn();
      javaCharStream0.getBeginLine();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.ExpandBuff(false);
      int int0 = javaCharStream0.getColumn();
      assertEquals((-2469), javaCharStream0.getBeginLine());
      assertEquals(1337, int0);
  }

  /**
  //Test case number: 106
  /*Coverage entropy=2.148365610638593
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      StringReader stringReader0 = new StringReader("hwLQ[n#BtWch'-0(");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.AdjustBuffSize();
      char[] charArray0 = new char[6];
      charArray0[0] = 'm';
      charArray0[1] = 'K';
      charArray0[2] = 'p';
      charArray0[3] = 'W';
      charArray0[4] = 'v';
      charArray0[5] = '~';
      stringReader0.read(charArray0);
      javaCharStream0.bufpos = 865;
      javaCharStream0.readChar();
      javaCharStream0.GetSuffix(0);
      stringReader0.reset();
      javaCharStream0.getColumn();
      javaCharStream0.prevCharIsLF = true;
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 107
  /*Coverage entropy=1.9633815843099565
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      StringReader stringReader0 = new StringReader("hwLQ[n#BtWch'-0(");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.AdjustBuffSize();
      char[] charArray0 = new char[6];
      charArray0[0] = 'm';
      charArray0[1] = 'K';
      charArray0[2] = 'p';
      charArray0[3] = 'W';
      charArray0[4] = '4';
      charArray0[5] = '~';
      stringReader0.read(charArray0);
      javaCharStream0.readChar();
      javaCharStream0.GetSuffix(0);
      assertEquals(0, javaCharStream0.bufpos);
      
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 6, 83);
      javaCharStream1.ExpandBuff(false);
      assertEquals((-1), javaCharStream1.bufpos);
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.9867316488081912
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)13;
      byteArray0[1] = (byte)31;
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte)40;
      byteArray0[4] = (byte)72;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)72, (byte)31);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-1), (byte) (-14));
      byteArrayInputStream0.close();
      javaCharStream0.backup(1147);
      byteArrayInputStream0.close();
      javaCharStream0.readChar();
      byteArrayInputStream0.close();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      javaCharStream0.readChar();
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn((-3971), 1147);
      javaCharStream0.getEndLine();
      javaCharStream0.GetSuffix((byte)40);
      assertEquals(1147, javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader0 = new StringReader("YkpFbOAd1]MLG^R`");
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, 635, 635, 2083);
      // Undeclared exception!
      try { 
        javaCharStream0.getColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 110
  /*Coverage entropy=2.0436712277874425
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)21;
      byteArray0[1] = (byte)21;
      byteArray0[2] = (byte)21;
      byteArray0[3] = (byte)21;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.reset();
      byteArrayInputStream0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)21, (byte)21);
      javaCharStream0.readChar();
      javaCharStream0.BeginToken();
      javaCharStream0.ReInit((Reader) null);
      javaCharStream0.adjustBeginLineColumn((byte)21, 15);
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 111
  /*Coverage entropy=1.9061547465398496
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      StringReader stringReader0 = new StringReader("MAD7P@/V0'");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 5, 5);
      char[] charArray0 = new char[8];
      charArray0[0] = '\'';
      charArray0[1] = 'h';
      charArray0[2] = 'F';
      charArray0[3] = '~';
      charArray0[4] = 'F';
      charArray0[5] = '}';
      charArray0[6] = 'M';
      charArray0[7] = 'F';
      javaCharStream0.getBeginLine();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.ExpandBuff(false);
      assertEquals((-1), javaCharStream0.bufpos);
      
      javaCharStream0.GetImage();
      char[] charArray1 = javaCharStream0.GetSuffix(86);
      assertEquals(86, charArray1.length);
  }

  /**
  //Test case number: 112
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 2048, 2048, 2048);
      // Undeclared exception!
      try { 
        javaCharStream0.getEndLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 113
  /*Coverage entropy=1.6674619334292948
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      StringReader stringReader0 = new StringReader("$Ig@@3@J");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2939, (-1));
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1), (-2546));
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, (-1878), 13, (-2635));
      StringReader stringReader1 = new StringReader("$Ig@@3@J");
      // Undeclared exception!
      try { 
        javaCharStream1.ReInit((Reader) stringReader0, 1, 2981, (-913));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 114
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      PipedInputStream pipedInputStream0 = new PipedInputStream(63);
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(dataInputStream0, (-3067), 63);
      javaCharStream0.ReInit((InputStream) dataInputStream0, 78, 98, 14);
      assertEquals(0, javaCharStream0.getBeginLine());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)72;
      byteArray0[1] = (byte)72;
      byteArray0[2] = (byte)72;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)72, (byte)72);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream1, byteArrayInputStream1);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream1);
      // Undeclared exception!
      try { 
        javaCharStream0.getLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 116
  /*Coverage entropy=1.5229550675313182
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2, (-1), 2);
      int[] intArray0 = new int[6];
      intArray0[0] = 2;
      intArray0[1] = (-1);
      intArray0[2] = 2;
      intArray0[3] = (-1);
      intArray0[4] = 2;
      intArray0[5] = (-1);
      javaCharStream0.bufcolumn = intArray0;
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 117
  /*Coverage entropy=0.8369882167858358
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      StringReader stringReader0 = new StringReader("QG}&VR");
      int int0 = 12;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 12);
      javaCharStream0.tokenBegin = 12;
      javaCharStream0.Done();
      char[] charArray0 = new char[4];
      charArray0[0] = '1';
      charArray0[1] = 'n';
      charArray0[2] = 'Q';
      charArray0[3] = 'a';
      stringReader0.read(charArray0);
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('h');
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 118
  /*Coverage entropy=1.1966127112211293
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      int int0 = 0;
      char[] charArray0 = new char[6];
      charArray0[0] = 'm';
      charArray0[1] = 'K';
      charArray0[2] = 'p';
      charArray0[3] = 'W';
      charArray0[4] = '4';
      charArray0[5] = '~';
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)8;
      byteArray0[1] = (byte) (-63);
      byteArray0[2] = (byte)10;
      byteArray0[3] = (byte)87;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)8, 0);
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('m');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 119
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 120
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "mX;;)61eJ<Jtr>!WMw");
      StringReader stringReader0 = new StringReader("6Y");
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream(stringReader0, (-785), (-785), (-785));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 121
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 7);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0, 4061);
      DataInputStream dataInputStream0 = new DataInputStream(pushbackInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(dataInputStream0);
      javaCharStream0.getBeginColumn();
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 122
  /*Coverage entropy=1.5498260458782016
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 101, 101);
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 123
  /*Coverage entropy=2.2439259750712965
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      StringReader stringReader0 = new StringReader("MAD7P@/V0'");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 5, 5);
      char[] charArray0 = new char[8];
      charArray0[0] = '\'';
      charArray0[1] = 'h';
      charArray0[2] = 'F';
      charArray0[3] = '~';
      charArray0[4] = 'F';
      javaCharStream0.readChar();
      javaCharStream0.BeginToken();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      javaCharStream0.adjustBeginLineColumn(92, 61);
      javaCharStream0.BeginToken();
      javaCharStream0.getEndColumn();
      javaCharStream0.BeginToken();
      javaCharStream0.getEndColumn();
      javaCharStream0.getBeginLine();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.BeginToken();
      javaCharStream0.ExpandBuff(true);
      javaCharStream0.GetImage();
      assertEquals(6144, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 124
  /*Coverage entropy=1.5792331346113395
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)1, 55);
      StringReader stringReader0 = new StringReader("{y");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1574), 1380, 55);
      javaCharStream0.GetImage();
      char char0 = javaCharStream0.BeginToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('{', char0);
  }

  /**
  //Test case number: 125
  /*Coverage entropy=1.4402347497045995
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Ivalid escape character at line ");
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 63, 63);
      char char0 = javaCharStream0.BeginToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('I', char0);
  }

  /**
  //Test case number: 126
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      StringReader stringReader0 = new StringReader("MAD7P@/V0'");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 5, 5);
      char[] charArray0 = new char[8];
      charArray0[0] = '\'';
      charArray0[1] = 'h';
      charArray0[2] = 'F';
      charArray0[3] = '~';
      charArray0[4] = 'F';
      charArray0[5] = '}';
      charArray0[6] = '\'';
      javaCharStream0.ReInit((Reader) stringReader0);
      charArray0[7] = '?';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0, 5, 0);
      stringReader0.read(charBuffer0);
      javaCharStream0.ReInit((Reader) stringReader0, 5, (-4455));
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 127
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)13;
      byteArray0[1] = (byte)13;
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte)40;
      byteArray0[4] = (byte)72;
      char[] charArray0 = new char[5];
      charArray0[0] = '}';
      charArray0[1] = 'F';
      charArray0[2] = '?';
      charArray0[3] = '~';
      charArray0[4] = '?';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0, (int) (byte)1, 3);
      StringReader stringReader0 = new StringReader("':?D<AIc6k$Up<^+J8");
      stringReader0.read(charBuffer0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0);
      javaCharStream0.ReInit((Reader) stringReader0, (int) (byte)13, (int) (byte)13);
      int int0 = 1146;
      // Undeclared exception!
      try { 
        stringReader0.read(charArray0, (-1486), (-1486));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 128
  /*Coverage entropy=1.7328679513998633
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(bufferedInputStream0);
      PipedInputStream pipedInputStream0 = new PipedInputStream('J');
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pushbackInputStream0, pipedInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, 'J', 'J');
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  /**
  //Test case number: 129
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.ReInit((Reader) stringReader0, 1496, 1496, 1496);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 130
  /*Coverage entropy=0.08831978220001763
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JavaCharStream.hexval('5');
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, " 2lTrfy87{6o>@!");
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null, 5, 5, (-2526));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 131
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      StringReader stringReader0 = new StringReader("RCA#:!E< a_kss;/|");
      StringReader stringReader1 = new StringReader("");
      StringReader stringReader2 = new StringReader("");
      StringReader stringReader3 = new StringReader("RCA#:!E< a_kss;/|");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader3, (-1343), (-3050), 44);
      javaCharStream0.backup((-1343));
      assertEquals(1342, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 132
  /*Coverage entropy=0.2568646526994761
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      int int0 = JavaCharStream.hexval('f');
      assertEquals(15, int0);
      
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(dataInputStream0, sequenceInputStream0);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)25;
      byteArray0[1] = (byte)25;
      byteArray0[2] = (byte)25;
      byteArray0[3] = (byte)25;
      byteArray0[4] = (byte)25;
      byteArray0[5] = (byte)25;
      byteArray0[6] = (byte) (-33);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, (-2019), (byte)25);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 133
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      try { 
        JavaCharStream.hexval('!');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 134
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null, 8, 8);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 135
  /*Coverage entropy=1.7328679513998633
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(bufferedInputStream0);
      PipedInputStream pipedInputStream0 = new PipedInputStream(10);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pushbackInputStream0, pipedInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, 10, 10);
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  /**
  //Test case number: 136
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      Enumeration<SequenceInputStream> enumeration0 = (Enumeration<SequenceInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0, 1);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedInputStream0, (byte)1, (-5392));
      String string0 = javaCharStream0.GetImage();
      assertNotNull(string0);
  }
}
