/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 14:39:10 GMT 2019
 */

package com.lts.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.lts.io.ArchiveScanner;
import com.lts.io.DirectoryScanner;
import com.lts.io.ImprovedFile;
import java.io.File;
import java.util.Collection;
import java.util.Comparator;
import java.util.LinkedList;
import java.util.Vector;
import java.util.function.Consumer;
import java.util.function.Predicate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ArchiveScanner_ESTest extends ArchiveScanner_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.9909065731902369
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ImprovedFile improvedFile0 = null;
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      String[] stringArray0 = new String[8];
      String string0 = "g";
      archiveScanner0.haveSlowResults = false;
      stringArray0[0] = "g";
      DirectoryScanner.matchPatternStart("7FE_.jar", ".ZIP");
      stringArray0[1] = "";
      ArchiveScanner archiveScanner1 = new ArchiveScanner((ImprovedFile) null);
      archiveScanner1.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      archiveScanner1.couldHoldIncluded("g");
      DirectoryScanner.matchPatternStart("", "g");
      DirectoryScanner.matchPath("x&vbN7ck", "");
      Vector<String> vector0 = new Vector<String>();
      archiveScanner1.dirsNotIncluded = vector0;
      archiveScanner1.addDefaultExcludes();
      archiveScanner1.setBasedir("");
      boolean boolean0 = archiveScanner1.haveSlowResults;
      Vector<String> vector1 = new Vector<String>();
      archiveScanner1.dirsExcluded = vector1;
      archiveScanner1.couldHoldIncluded("/Delete");
      Vector<Object> vector2 = new Vector<Object>();
      vector2.removeElement("V$JQcu/&A*:bS");
      archiveScanner1.filesNotIncluded = vector2;
      // Undeclared exception!
      try { 
        archiveScanner1.processArchive((File) null, ".war");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("~'a]Hr{/AB0N~I^\"%T");
      Vector<Object> vector0 = new Vector<Object>();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "~'a]Hr{/AB0N~I^\"%T";
      stringArray0[1] = "~'a]Hr{/AB0N~I^\"%T";
      stringArray0[2] = "!";
      stringArray0[3] = "criticlal.com.lts.application.errors.properties.saving";
      improvedFile0.getAbsolutePath();
      stringArray0[4] = "J#s.jBHgt";
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      Object object0 = new Object();
      vector0.add(object0);
      vector0.addAll((Collection<?>) linkedList0);
      stringArray0[5] = "~'a]Hr{/AB0N~I^\"%T";
      stringArray0[6] = "~'a]Hr{/AB0N~I^\"%T";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "~'a]Hr{/AB0N~I^\"%T");
      stringArray0[7] = "~'a]Hr{/AB0N~I^\"%T";
      stringArray0[8] = "criticlal.com.lts.application.errors.properties.saving";
      Vector<Object> vector1 = new Vector<Object>();
      Object object1 = new Object();
      Object object2 = new Object();
      vector1.add(object2);
      vector1.add((Object) "~'a]Hr{/AB0N~I^\"%T");
      archiveScanner0.addDefaultExcludes();
      Vector<Integer> vector2 = new Vector<Integer>();
      archiveScanner0.filesNotIncluded = vector2;
      vector1.parallelStream();
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.couldHoldIncluded("J#s.jBHgt");
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory(improvedFile0, "!", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      Vector<Object> vector0 = new Vector<Object>();
      Integer integer0 = new Integer(12);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) "");
      Object object0 = new Object();
      Predicate<Object> predicate1 = Predicate.isEqual((Object) "W/7}E]_W");
      Integer integer1 = new Integer(15);
      Predicate<Object> predicate2 = predicate0.negate();
      Predicate<Object> predicate3 = predicate1.and(predicate2);
      Predicate<Object> predicate4 = predicate3.negate();
      Object object1 = new Object();
      Predicate.isEqual(object1);
      predicate2.or(predicate4);
      Predicate<Object> predicate5 = predicate1.negate();
      Predicate<Object> predicate6 = Predicate.isEqual((Object) "");
      Predicate<Object> predicate7 = predicate2.or(predicate6);
      predicate1.negate();
      predicate7.and(predicate5);
      Vector<Object> vector1 = new Vector<Object>();
      Integer integer2 = new Integer(5);
      Integer integer3 = new Integer(8);
      Object object2 = new Object();
      Vector<Object> vector2 = new Vector<Object>();
      archiveScanner0.dirsExcluded = vector2;
      Integer integer4 = new Integer(6);
      Vector<Object> vector3 = new Vector<Object>();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      stringArray0[1] = "W/7}E]_W";
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.couldHoldIncluded("#t0T]F");
      // Undeclared exception!
      try { 
        archiveScanner0.processFile("#t0T]F");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.402886181440778
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("~'a]Hr{/AB0N~I^\"%T");
      String string0 = "BURQUC27y=M 9vOw]";
      ImprovedFile improvedFile1 = new ImprovedFile("BURQUC27y=M 9vOw]");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[3];
      Vector<Object> vector0 = new Vector<Object>();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      vector0.forEach(consumer0);
      archiveScanner0.dirsNotIncluded = vector0;
      stringArray0[0] = "BURQUC27y=M 9vOw]";
      stringArray0[1] = "~'a]Hr{/AB0N~I^\"%T";
      archiveScanner0.addDefaultExcludes();
      stringArray0[2] = "&L3(iq4id:";
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.couldHoldIncluded("~'a]Hr{/AB0N~I^\"%T");
      archiveScanner0.processDirectory(improvedFile1, ".jar", true);
      // Undeclared exception!
      try { 
        archiveScanner0.processFile("BURQUC27y=M 9vOw]");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("~'a]Hr{/AB0N~I^\"%T");
      Vector<Object> vector0 = new Vector<Object>();
      Integer integer0 = new Integer((-1446313624));
      Predicate<Object> predicate0 = Predicate.isEqual((Object) "~'a]Hr{/AB0N~I^\"%T");
      Object object0 = new Object();
      Predicate<Object> predicate1 = Predicate.isEqual(object0);
      Predicate<Object> predicate2 = predicate1.and(predicate0);
      predicate1.and(predicate0);
      Predicate<Object> predicate3 = predicate0.negate();
      predicate3.or(predicate0);
      Predicate<Object> predicate4 = predicate0.or(predicate3);
      predicate4.or(predicate3);
      predicate2.negate();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.addDefaultExcludes();
      vector0.parallelStream();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "~'a]Hr{/AB0N~I^\"%T";
      stringArray0[1] = "Awar";
      stringArray0[2] = "~'a]Hr{/AB0N~I^\"%T";
      Vector<Object> vector1 = new Vector<Object>();
      archiveScanner0.dirsIncluded = vector1;
      stringArray0[3] = "Awar";
      stringArray0[4] = "Awar";
      stringArray0[5] = "~'a]Hr{/AB0N~I^\"%T";
      stringArray0[6] = "~'a]Hr{/AB0N~I^\"%T";
      stringArray0[7] = "Awar";
      stringArray0[8] = "Awar";
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.couldHoldIncluded("Awar");
      // Undeclared exception!
      try { 
        archiveScanner0.processFile("Awar");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.9909065731902369
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      String[] stringArray0 = new String[8];
      archiveScanner0.haveSlowResults = false;
      stringArray0[0] = "g";
      DirectoryScanner.matchPatternStart("7FE_.jar", ".ZIP");
      stringArray0[1] = "";
      ArchiveScanner archiveScanner1 = new ArchiveScanner((ImprovedFile) null);
      archiveScanner1.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      archiveScanner1.couldHoldIncluded("g");
      DirectoryScanner.matchPatternStart("", "g");
      DirectoryScanner.matchPath("x&vbN7ck", "");
      archiveScanner1.addDefaultExcludes();
      archiveScanner1.setBasedir("");
      boolean boolean0 = archiveScanner1.haveSlowResults;
      Vector<String> vector0 = new Vector<String>();
      vector0.add("(8d1-Fy$X<-Q");
      archiveScanner1.dirsExcluded = vector0;
      archiveScanner1.couldHoldIncluded("/Delete");
      Vector<Object> vector1 = new Vector<Object>();
      vector1.removeElement("V$JQcu/&A*:bS");
      String[] stringArray1 = new String[3];
      stringArray1[0] = "7FE_.jar";
      stringArray1[1] = "(8d1-Fy$X<-Q";
      stringArray1[2] = "";
      archiveScanner1.setIncludes(stringArray1);
      DirectoryScanner.matchPath("v][x<Q:v@yX|*Q5U{:", "");
      // Undeclared exception!
      try { 
        archiveScanner1.processFile("7FE_.jar");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("~'a]Hr{/AB0N~I^\"%T");
      ImprovedFile improvedFile1 = new ImprovedFile("BURQUC27y=M 9vOw]");
      Vector<Object> vector0 = new Vector<Object>();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      Vector<Object> vector1 = new Vector<Object>();
      archiveScanner0.dirsNotIncluded = vector1;
      archiveScanner0.addDefaultExcludes();
      archiveScanner0.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      archiveScanner0.couldHoldIncluded("W/7}E]_W");
      try { 
        archiveScanner0.processDirectory(improvedFile1, "", true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // IO error scanning directory /home/ubuntu/termite/projects/78_caloriecount/BURQUC27y=M 9vOw]
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("~'a]Hr{/AB0N~I^\"%T");
      ImprovedFile improvedFile1 = new ImprovedFile("BURQUC27y=M 9vOw]");
      Vector<Object> vector0 = new Vector<Object>();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[3];
      Vector<Object> vector1 = new Vector<Object>();
      archiveScanner0.dirsNotIncluded = vector1;
      stringArray0[0] = "BURQUC27y=M 9vOw]";
      stringArray0[1] = "zip";
      archiveScanner0.addDefaultExcludes();
      stringArray0[2] = "&L3(iqid:";
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.couldHoldIncluded("W/7}E]_W");
      vector0.parallelStream();
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.couldHoldIncluded("jX");
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory(improvedFile1, "&L3(iqid:", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      String[] stringArray0 = new String[8];
      archiveScanner0.haveSlowResults = false;
      stringArray0[0] = "g";
      stringArray0[1] = "";
      ArchiveScanner archiveScanner1 = new ArchiveScanner((ImprovedFile) null);
      archiveScanner1.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      archiveScanner1.couldHoldIncluded("g");
      DirectoryScanner.matchPath("g", "");
      DirectoryScanner.matchPath("F&^bws", "");
      archiveScanner1.setBasedir("");
      boolean boolean0 = archiveScanner1.haveSlowResults;
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner1.filesNotIncluded = vector0;
      DirectoryScanner.match("BURQUC27y=M 9vOw].jar", "g");
      // Undeclared exception!
      try { 
        archiveScanner1.processDirectory((File) null, "war.jar", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "g";
      stringArray0[1] = "";
      DirectoryScanner.matchPath("", "");
      stringArray0[2] = "";
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.dirsNotIncluded = vector0;
      stringArray0[3] = "";
      stringArray0[4] = "Kob<;fX5[30n";
      stringArray0[5] = ".WAR";
      vector0.add((Object) "Kob<;fX5[30n");
      stringArray0[6] = "W/7}E]W";
      Vector<Object> vector1 = new Vector<Object>();
      archiveScanner0.filesIncluded = vector1;
      stringArray0[7] = "&L3(iq4id:";
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      vector1.sort(comparator0);
      vector1.add((Object) "Error trying to create temp directory, .jar");
      vector1.parallelStream();
      archiveScanner0.setIncludes(stringArray0);
      DirectoryScanner.match("", "g");
      vector0.retainAll(archiveScanner0.dirsNotIncluded);
      // Undeclared exception!
      try { 
        archiveScanner0.processFile("tree");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      String[] stringArray0 = new String[8];
      archiveScanner0.haveSlowResults = false;
      stringArray0[0] = "g";
      stringArray0[1] = "g";
      ArchiveScanner archiveScanner1 = new ArchiveScanner((ImprovedFile) null);
      archiveScanner1.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      archiveScanner1.couldHoldIncluded("g");
      archiveScanner1.couldHoldIncluded("F&^bw@s");
      DirectoryScanner.matchPath("F&^bw@s", "g");
      boolean boolean0 = archiveScanner1.haveSlowResults;
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner1.filesNotIncluded = vector0;
      archiveScanner1.processArchive((File) null, "g");
      ArchiveScanner archiveScanner2 = new ArchiveScanner((ImprovedFile) null);
      // Undeclared exception!
      try { 
        archiveScanner2.couldHoldIncluded("BURQUC27y=M 9vOw].jar");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "g";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "Kob<;fX5[30n";
      stringArray0[5] = ".WAR";
      stringArray0[6] = "W/7}E]_W";
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.filesIncluded = vector0;
      stringArray0[7] = "&L3(iq4id:";
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.couldHoldIncluded("e ~6|UmJ7TX");
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory((File) null, "IO error scanning directory ", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      Vector<Object> vector0 = new Vector<Object>();
      Integer integer0 = new Integer(12);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) "");
      Predicate<Object> predicate1 = Predicate.isEqual((Object) "WAF}E]_W");
      Integer integer1 = new Integer(15);
      Predicate<Object> predicate2 = Predicate.isEqual((Object) integer1);
      Predicate<Object> predicate3 = predicate0.negate();
      Predicate<Object> predicate4 = predicate2.and(predicate3);
      Predicate<Object> predicate5 = predicate4.negate();
      Predicate<Object> predicate6 = predicate3.or(predicate5);
      Predicate<Object> predicate7 = predicate5.or(predicate1);
      Predicate<Object> predicate8 = predicate5.negate();
      Predicate<Object> predicate9 = predicate6.negate();
      predicate4.and(predicate1);
      predicate3.negate();
      predicate3.or(predicate9);
      predicate7.or(predicate6);
      predicate7.test(predicate1);
      predicate8.negate();
      predicate1.or(predicate7);
      predicate7.and(predicate6);
      vector0.removeIf(predicate7);
      Vector<Object> vector1 = new Vector<Object>();
      Integer integer2 = new Integer(15);
      Integer integer3 = new Integer(4);
      Object object0 = new Object();
      Object object1 = new Object();
      vector1.add(object1);
      System.setCurrentTimeMillis(15);
      System.setCurrentTimeMillis(2);
      System.setCurrentTimeMillis(1);
      // Undeclared exception!
      try { 
        archiveScanner0.toFileType((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Vector<Object> vector0 = new Vector<Object>();
      Integer integer0 = new Integer(12);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) "");
      Object object0 = new Object();
      Predicate<Object> predicate1 = Predicate.isEqual((Object) "W/7}E]_W");
      Integer integer1 = new Integer(15);
      Predicate<Object> predicate2 = Predicate.isEqual((Object) integer1);
      Predicate<Object> predicate3 = predicate0.negate();
      Predicate<Object> predicate4 = predicate2.and(predicate3);
      Predicate<Object> predicate5 = predicate4.negate();
      Object object1 = new Object();
      predicate3.or(predicate5);
      Predicate<Object> predicate6 = predicate1.negate();
      Predicate<Object> predicate7 = Predicate.isEqual((Object) "");
      Predicate<Object> predicate8 = predicate3.or(predicate7);
      predicate1.negate();
      predicate8.and(predicate6);
      Integer integer2 = new Integer(5);
      Integer integer3 = new Integer(8);
      Object object2 = new Object();
      Integer integer4 = new Integer(6);
      Vector<Object> vector1 = new Vector<Object>();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      stringArray0[1] = "W/7}E]_W";
      ImprovedFile improvedFile0 = new ImprovedFile(", [", "6CkQ9u*YD I*Y5+m");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      MockFile mockFile0 = new MockFile("", ".jar");
      boolean boolean0 = archiveScanner0.isArchive(mockFile0);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Vector<Object> vector0 = new Vector<Object>();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) "");
      Object object0 = new Object();
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.negate();
      Integer integer0 = new Integer(15);
      Predicate<Object> predicate3 = predicate0.negate();
      Predicate<Object> predicate4 = predicate0.negate();
      Predicate<Object> predicate5 = predicate3.and(predicate4);
      predicate5.test(predicate3);
      Predicate<Object> predicate6 = predicate5.negate();
      Predicate<Object> predicate7 = predicate4.or(predicate6);
      Predicate<Object> predicate8 = predicate6.and(predicate2);
      Predicate<Object> predicate9 = predicate1.negate();
      predicate8.or(predicate6);
      Predicate<Object> predicate10 = predicate7.negate();
      predicate5.and(predicate1);
      predicate9.and(predicate8);
      predicate9.negate();
      predicate5.negate();
      Predicate<Object> predicate11 = predicate4.or(predicate10);
      Predicate<Object> predicate12 = predicate1.negate();
      predicate11.and(predicate9);
      vector0.removeIf(predicate4);
      Vector<Object> vector1 = new Vector<Object>();
      Integer integer1 = new Integer(5);
      predicate12.negate();
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      MockFile mockFile0 = new MockFile("^5[eyBxdmf\u0005C9ET.jar");
      mockFile0.toPath();
      // Undeclared exception!
      try { 
        archiveScanner0.scanArchive(mockFile0, "tempdir1.jar");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.archive.AbstractNestedArchive", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("~'a]Hr{/AB0N~I^\"%T");
      ImprovedFile improvedFile1 = new ImprovedFile("BURQUC27y=M 9vOw]");
      Vector<Object> vector0 = new Vector<Object>();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.haveSlowResults = true;
      String[] stringArray0 = new String[3];
      Vector<Object> vector1 = new Vector<Object>();
      archiveScanner0.dirsNotIncluded = vector1;
      vector1.retainAll(vector0);
      vector1.add((Object) "~'a]Hr{/AB0N~I^\"%T");
      stringArray0[0] = "zip";
      stringArray0[1] = "zip";
      stringArray0[2] = "&L3(iq4id:";
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.couldHoldIncluded("W/7}E]_W");
      vector1.ensureCapacity(2);
      DirectoryScanner.match("zip", "zip");
      try { 
        archiveScanner0.processDirectory(improvedFile1, ".jar", false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // IO error scanning directory /home/ubuntu/termite/projects/78_caloriecount/BURQUC27y=M 9vOw]
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.4399756932787802
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      File file0 = MockFile.createTempFile(".zip.jar", ".zip.jar");
      ImprovedFile improvedFile0 = new ImprovedFile(file0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      improvedFile0.copyFrom(file0, false);
      String[] stringArray0 = new String[13];
      file0.getCanonicalFile();
      improvedFile0.renameTo(file0);
      stringArray0[0] = "Error trying to create temp directory, ";
      stringArray0[1] = ".zip.jar";
      stringArray0[2] = ":s%g8hGtm0:s%g8h$Gtm.jar";
      stringArray0[3] = ":s%g8hGtm0:s%g8h$Gtm.jar";
      ImprovedFile improvedFile1 = new ImprovedFile("Error trying to create temp directory, ");
      MockFile mockFile0 = new MockFile(".zip.jar", ":s%g8hGtm0:s%g8h$Gtm.jar");
      file0.getCanonicalPath();
      improvedFile1.createTempDir(":s%g8hGtm0:s%g8h$Gtm.jar", ":s%g8hGtm0:s%g8h$Gtm.jar");
      archiveScanner0.toFileType(improvedFile0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("BURQUC27y=M 9vOw]/BURQUC27y=M 9vOw]0.EAR");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, (String) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ImprovedFile improvedFile0 = new ImprovedFile("~'a]Hr{/AB0N~I^\"%T");
      ImprovedFile improvedFile1 = new ImprovedFile("BURQUC27y=M 9vOw]");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      improvedFile1.renameTo(improvedFile0);
      ImprovedFile improvedFile2 = improvedFile1.createTempDir("BURQUC27y=M 9vOw]", ".R3R");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "\"G;EsfUvmNK&'W");
      improvedFile0.createTempDir("~'a]Hr{/AB0N~I^\"%T", "~'a]Hr{/AB0N~I^\"%T");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("BURQUC27y=M 9vOw]/BURQUC27y=M 9vOw]0.EAR");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "&2{p");
      byte[] byteArray0 = new byte[6];
      FileSystemHandling.shouldAllThrowIOExceptions();
      byteArray0[0] = (byte)98;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "BURQUC27y=M 9vOw]");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, ".R3R");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile2);
      archiveScanner0.toFileType(improvedFile2);
      FileSystemHandling.shouldAllThrowIOExceptions();
      System.setCurrentTimeMillis((-63L));
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.4471627089619605
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("BURQUC27y=M 9vOw]/BURQUC27y=M 9vOw]0.EAR");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "AB0N~I^\"%T0.HAR.jar");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, (String) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      ImprovedFile improvedFile0 = new ImprovedFile("1<Z@*");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      improvedFile0.createTempDir("~'a]Hr{/AB0N~I^\"%T", ".EAR");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu/termite/projects/78_caloriecount");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "@2d0");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(improvedFile0, "BURQUC27y=M 9vOw]", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("BURQUC27y=M 9vOw]/BURQUC27y=M 9vOw]0.EAR");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, (String) null);
      FileSystemHandling.createFolder(evoSuiteFile0);
      ImprovedFile improvedFile0 = new ImprovedFile("~'a]Hr{/AB0N~I^\"%T");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile(evoSuiteFile0, (String) null);
      ImprovedFile improvedFile1 = improvedFile0.createTempDir("BURQUC27y=M 9vOw]", ".R3R");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "eJ&`A`R7&");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      improvedFile0.createTempDir("~'a]Hr{/AB0N~I^\"%T", "~'a]Hr{/AB0N~I^\"%T");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("BURQUC27y=M 9vOw]/BURQUC27y=M 9vOw]0.EAR");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "&2{p");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[6];
      FileSystemHandling.shouldAllThrowIOExceptions();
      byteArray0[0] = (byte)82;
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "~'a]Hr{/AB0N~I^\"%T");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "BURQUC27y=M 9vOw]");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, ".R3R");
      DirectoryScanner.matchPatternStart("rhW.1u\"RK ", "BURQUC27y=M 9vOw]");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile1);
      archiveScanner0.isArchive(improvedFile0);
      System.setCurrentTimeMillis((-2533L));
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Vector<Object> vector0 = new Vector<Object>();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) "");
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.negate();
      Integer integer0 = new Integer(15);
      Predicate<Object> predicate3 = predicate0.negate();
      Predicate.isEqual((Object) predicate3);
      predicate3.and(predicate0);
      Predicate<Object> predicate4 = predicate0.negate();
      Predicate<Object> predicate5 = predicate3.and(predicate4);
      predicate5.test(predicate3);
      Predicate<Object> predicate6 = predicate5.negate();
      Predicate<Object> predicate7 = predicate4.or(predicate6);
      predicate5.and(predicate6);
      predicate7.negate();
      Predicate<Object> predicate8 = predicate6.and(predicate2);
      Predicate<Object> predicate9 = predicate1.negate();
      predicate8.or(predicate6);
      predicate7.or(predicate4);
      Predicate<Object> predicate10 = predicate7.negate();
      predicate5.and(predicate1);
      predicate9.and(predicate8);
      predicate0.negate();
      predicate5.negate();
      predicate4.or(predicate10);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      DirectoryScanner.matchPatternStart("kgw9dHe?_eYrYk}{}", "g.jar.jar");
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      // Undeclared exception!
      try { 
        archiveScanner0.isArchive((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("BURQUC27y=M 9vOw]/BURQUC27y=M 9vOw]0.EAR");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, (String) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ImprovedFile improvedFile0 = new ImprovedFile("~'a]Hr{/AB0N~I^\"%T");
      ImprovedFile improvedFile1 = new ImprovedFile("BURQUC27y=M 9vOw]");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder(evoSuiteFile0);
      ImprovedFile improvedFile2 = improvedFile1.createTempDir("BURQUC27y=M 9vOw]", ".R3R");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      improvedFile0.createTempDir("~'a]Hr{/AB0N~I^\"%T", "~'a]Hr{/AB0N~I^\"%T");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("BURQUC27y=M 9vOw]/BURQUC27y=M 9vOw]0.EAR");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "&2{p");
      byte[] byteArray0 = new byte[6];
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "~'a]Hr{/AB0N~I^\"%T");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "BURQUC27y=M 9vOw]");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, ".R3R");
      improvedFile2.tempRename();
      FileSystemHandling.setPermissions(evoSuiteFile0, false, false, false);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile1);
      try { 
        archiveScanner0.scandir(improvedFile2, (String) null, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // IO error scanning directory /home/ubuntu/termite/projects/78_caloriecount/BURQUC27y=M 9vOw]/BURQUC27y=M 9vOw]0.R3R
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("BURQUC27y=M 9vOw]/BURQUC27y=M 9vOw]0.EAR");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, (String) null);
      FileSystemHandling.setPermissions(evoSuiteFile0, false, true, false);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ImprovedFile improvedFile0 = new ImprovedFile("~'a]Hr{/AB0N~I^\"%T");
      ImprovedFile improvedFile1 = new ImprovedFile("BURQUC27y=M 9vOw]");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder(evoSuiteFile0);
      improvedFile1.createTempDir("BURQUC27y=M 9vOw]", ".R3R");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "\"G;EsfUvmNK&'W");
      ImprovedFile improvedFile2 = improvedFile0.createTempDir("~'a]Hr{/AB0N~I^\"%T", "~'a]Hr{/AB0N~I^\"%T");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("BURQUC27y=M 9vOw]/BURQUC27y=M 9vOw]0.EAR");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "&2{p");
      byte[] byteArray0 = new byte[6];
      FileSystemHandling.shouldAllThrowIOExceptions();
      byteArray0[0] = (byte)82;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "BURQUC27y=M 9vOw]");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, ".R3R");
      FileSystemHandling.setPermissions(evoSuiteFile0, false, false, false);
      ImprovedFile improvedFile3 = new ImprovedFile(".EAR", "g.jar");
      ImprovedFile improvedFile4 = new ImprovedFile("(KqRTm3NV$D~3k");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile2);
      int int0 = archiveScanner0.toFileType(improvedFile1);
      assertEquals(1, int0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.432813901625505
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Predicate<Object> predicate0 = Predicate.isEqual((Object) "W/7}E]_W");
      Object object0 = new Object();
      Predicate<Object> predicate1 = predicate0.negate();
      Integer integer0 = new Integer(15);
      Predicate<Object> predicate2 = Predicate.isEqual((Object) predicate0);
      Predicate<Object> predicate3 = predicate2.negate();
      Predicate<Object> predicate4 = predicate3.negate();
      predicate2.and(predicate4);
      Predicate<Object> predicate5 = predicate2.negate();
      Predicate<Object> predicate6 = predicate1.negate();
      Predicate<Object> predicate7 = predicate6.or(predicate0);
      Predicate<Object> predicate8 = predicate7.and(predicate5);
      predicate1.or(predicate8);
      predicate6.and(predicate0);
      Predicate<Object> predicate9 = predicate1.negate();
      Predicate<Object> predicate10 = predicate2.or(predicate2);
      Predicate<Object> predicate11 = predicate6.negate();
      predicate11.negate();
      predicate9.or(predicate1);
      Integer integer1 = new Integer((-182));
      Predicate.isEqual((Object) integer1);
      predicate10.negate();
      predicate0.negate();
      predicate9.and(predicate2);
      Vector<Object> vector0 = new Vector<Object>();
      vector0.trimToSize();
      vector0.removeIf(predicate5);
      Vector<Object> vector1 = new Vector<Object>();
      Object object1 = new Object();
      ImprovedFile improvedFile0 = new ImprovedFile("W/7}E]_W");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.toFileType(improvedFile0);
      System.setCurrentTimeMillis(0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("BURQUC27y=M 9vOw]/BURQUC27y=M 9vOw]0.EAR");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "AB0N~I^\"%T0.HAR.jar");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, (String) null);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "$@:w$ +)EDWOG /");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      ImprovedFile improvedFile0 = new ImprovedFile("1<~5*");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      ImprovedFile improvedFile1 = improvedFile0.createTempDir("~'a]Hr{/AB0N~I^\"%T", ".EAR");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu/termite/projects/78_caloriecount");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "@2d0");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      try { 
        archiveScanner0.scanArchive(improvedFile1, "BURQUC27y=M 9vOw]");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error trying to list archive, /home/ubuntu/termite/projects/78_caloriecount/1<~5*_/~'a]Hr{/AB0N~I^\"%T0.EAR
         //
         verifyException("com.lts.io.archive.AbstractNestedArchive", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("BURQUC27y=M 9vOw]/BURQUC27y=M 9vOw]0.EAR");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, (String) null);
      FileSystemHandling.createFolder(evoSuiteFile0);
      ImprovedFile improvedFile0 = new ImprovedFile("~'a]Hr{/AB0N~I^\"%T");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile(evoSuiteFile0, (String) null);
      ImprovedFile improvedFile1 = improvedFile0.createTempDir("BURQUC27y=M 9vOw]", ".R3R");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "eJ&`A`R7&");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      improvedFile0.createTempDir("~'a]Hr{/AB0N~I^\"%T", "~'a]Hr{/AB0N~I^\"%T");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("BURQUC27y=M 9vOw]/BURQUC27y=M 9vOw]0.EAR");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "&2{p");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "~'a]Hr{/AB0N~I^\"%T");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "BURQUC27y=M 9vOw]");
      DirectoryScanner.matchPatternStart(".R3R", "BURQUC27y=M 9vOw]");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile1);
      archiveScanner0.scandir(improvedFile1, (String) null, false);
      assertTrue(improvedFile1.isDirectory());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.4572637190629707
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("~'a]Hr{/AB0N~I^\"%T");
      DirectoryScanner.matchPath("criticlal.com.lts.application.errors.properties.saving", "");
      Vector<Object> vector0 = new Vector<Object>();
      Integer integer0 = new Integer(0);
      Predicate.isEqual((Object) integer0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "!";
      stringArray0[3] = "criticlal.com.lts.application.errors.properties.saving";
      improvedFile0.getAbsolutePath();
      stringArray0[4] = "J#s.jBHgt";
      improvedFile0.createTempDir("criticlal.com.lts.application.errors.properties.saving", "applicationDirectory");
      ArchiveScanner archiveScanner1 = new ArchiveScanner(improvedFile0);
      // Undeclared exception!
      try { 
        archiveScanner1.scandir(improvedFile0, ".EAR", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Predicate<Object> predicate0 = Predicate.isEqual((Object) "W/7}E]_W");
      Object object0 = new Object();
      Predicate<Object> predicate1 = predicate0.negate();
      Integer integer0 = new Integer(15);
      Predicate<Object> predicate2 = Predicate.isEqual((Object) predicate0);
      Predicate<Object> predicate3 = predicate2.negate();
      Predicate<Object> predicate4 = predicate3.negate();
      predicate2.and(predicate4);
      Predicate<Object> predicate5 = predicate2.negate();
      Predicate<Object> predicate6 = predicate1.negate();
      Predicate<Object> predicate7 = predicate6.or(predicate0);
      Predicate<Object> predicate8 = predicate7.and(predicate5);
      predicate1.or(predicate8);
      predicate0.negate();
      Predicate<Object> predicate9 = predicate2.or(predicate2);
      Predicate<Object> predicate10 = predicate1.negate();
      predicate10.negate();
      predicate5.or(predicate1);
      Integer integer1 = new Integer((-182));
      predicate2.negate();
      predicate9.negate();
      predicate0.negate();
      predicate4.and(predicate2);
      Vector<Object> vector0 = new Vector<Object>();
      Integer integer2 = new Integer(15);
      Integer integer3 = new Integer(6);
      Object object1 = new Object();
      Object object2 = new Object();
      vector0.add(object1);
      ImprovedFile improvedFile0 = new ImprovedFile("gDk2?Yc%KLsgJ}+", "W/7}E]_W");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.isArchive(improvedFile0);
      System.setCurrentTimeMillis(4);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("BURQUC27y=M 9vOw]/BURQUC27y=M 9vOw]0.EAR");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, (String) null);
      FileSystemHandling.createFolder(evoSuiteFile0);
      ImprovedFile improvedFile0 = new ImprovedFile("~'a]Hr{/AB0N~I^\"%T");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile(evoSuiteFile0, (String) null);
      ImprovedFile improvedFile1 = improvedFile0.createTempDir("BURQUC27y=M 9vOw]", ".R3R");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "eJ&`A`R7&");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      improvedFile0.createTempDir("~'a]Hr{/AB0N~I^\"%T", "~'a]Hr{/AB0N~I^\"%T");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("BURQUC27y=M 9vOw]/BURQUC27y=M 9vOw]0.EAR");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "&2{p");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "~'a]Hr{/AB0N~I^\"%T");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "BURQUC27y=M 9vOw]");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, ".R3R");
      DirectoryScanner.matchPatternStart("rhW.1u\"RK ", "BURQUC27y=M 9vOw]");
      improvedFile0.mkdir();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile1);
      archiveScanner0.scandir(improvedFile1, (String) null, false);
      assertEquals(0L, improvedFile1.length());
  }
}
