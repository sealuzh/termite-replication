/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 15:07:41 GMT 2019
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.721293097043837
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.plus();
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("om.werken.saxpath.XPathLexer", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      
      xPathLexer0.LA(29);
      xPathLexer0.at();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.and();
      xPathLexer0.and();
      xPathLexer0.div();
      Token token3 = xPathLexer1.leftBracket();
      assertEquals(3, token3.getTokenType());
      
      xPathLexer1.identifierOrOperatorName();
      xPathLexer0.plus();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token4 = xPathLexer0.plus();
      assertEquals(5, token4.getTokenType());
      
      Token token5 = xPathLexer1.star();
      assertEquals(20, token5.getTokenType());
      
      Token token6 = xPathLexer1.dollar();
      assertEquals(26, token6.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token7 = xPathLexer3.nextToken();
      assertEquals((-1), token7.getTokenType());
      
      xPathLexer0.consume();
      xPathLexer2.endPosition();
      Token token8 = xPathLexer2.at();
      assertEquals("c", token8.getTokenText());
      assertEquals(16, token8.getTokenType());
      
      Token token9 = xPathLexer0.colon();
      assertEquals(18, token9.getTokenType());
      
      Token token10 = xPathLexer1.pipe();
      assertEquals(17, token10.getTokenType());
      
      char char0 = xPathLexer1.LA(29);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.107321037954038
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      
      Token token1 = xPathLexer0.dollar();
      assertEquals("o", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
      assertEquals("m", token2.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.or();
      Token token3 = xPathLexer1.minus();
      assertEquals("c", token3.getTokenText());
      assertEquals(6, token3.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer1.dots();
      xPathLexer0.mod();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.or();
      xPathLexer2.and();
      xPathLexer0.and();
      xPathLexer2.and();
      xPathLexer0.div();
      Token token4 = xPathLexer1.leftBracket();
      assertEquals(3, token4.getTokenType());
      
      Token token5 = xPathLexer1.identifierOrOperatorName();
      assertEquals(".werken.saxpath.XPathLexer", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
      
      Token token6 = xPathLexer1.plus();
      assertEquals(5, token6.getTokenType());
      
      Token token7 = xPathLexer2.star();
      assertEquals(20, token7.getTokenType());
      
      xPathLexer2.dollar();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token8 = xPathLexer3.dollar();
      assertEquals(26, token8.getTokenType());
      
      Token token9 = xPathLexer0.nextToken();
      assertEquals(".", token9.getTokenText());
      assertEquals(13, token9.getTokenType());
      
      xPathLexer0.consume();
      xPathLexer2.endPosition();
      Token token10 = xPathLexer2.at();
      assertEquals(16, token10.getTokenType());
      
      xPathLexer2.operatorName();
      Token token11 = xPathLexer0.nextToken();
      assertEquals((-1), token11.getTokenType());
      
      xPathLexer2.div();
      Token token12 = xPathLexer3.pipe();
      assertEquals(17, token12.getTokenType());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.6597742130505524
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.dollar();
      assertEquals(26, token1.getTokenType());
      assertEquals("o", token1.getTokenText());
      
      Token token2 = xPathLexer0.dots();
      assertEquals(14, token2.getTokenType());
      assertEquals("m.", token2.getTokenText());
      
      xPathLexer0.comma();
      Token token3 = xPathLexer0.comma();
      assertEquals(32, token3.getTokenType());
      assertEquals("e", token3.getTokenText());
      
      xPathLexer0.or();
      Token token4 = xPathLexer0.notEquals();
      assertEquals("rk", token4.getTokenText());
      assertEquals(22, token4.getTokenType());
      
      xPathLexer0.plus();
      Token token5 = xPathLexer0.plus();
      assertEquals("n", token5.getTokenText());
      
      xPathLexer0.consume();
      xPathLexer0.endPosition();
      Token token6 = xPathLexer0.nextToken();
      assertEquals("saxpath.XPathLexer", token6.getTokenText());
      assertEquals(15, token6.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("9nL$");
      xPathLexer1.currentPosition();
      Token token7 = xPathLexer0.dots();
      assertEquals(13, token7.getTokenType());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.0686846089085673
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.rightBracket();
      Token token0 = xPathLexer0.dollar();
      xPathLexer0.rightParen();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.slashes();
      xPathLexer1.minus();
      xPathLexer0.relationalOperator();
      xPathLexer1.dots();
      xPathLexer0.mod();
      xPathLexer1.comma();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.comma();
      xPathLexer2.or();
      xPathLexer2.and();
      xPathLexer2.and();
      xPathLexer2.div();
      xPathLexer0.leftBracket();
      xPathLexer1.identifierOrOperatorName();
      xPathLexer1.plus();
      xPathLexer0.star();
      xPathLexer0.dollar();
      xPathLexer0.dollar();
      xPathLexer0.nextToken();
      xPathLexer0.consume();
      xPathLexer1.endPosition();
      xPathLexer0.at();
      xPathLexer0.operatorName();
      xPathLexer2.nextToken();
      xPathLexer1.div();
      Token token1 = xPathLexer0.pipe();
      assertFalse(token1.equals((Object)token0));
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.97611274300098
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      
      xPathLexer0.setXPath("h<J:7aD+kC");
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      assertEquals("h", token1.getTokenText());
      
      xPathLexer0.consume();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("J", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.literal();
      assertNull(token3);
      
      xPathLexer0.rightParen();
      xPathLexer0.number();
      xPathLexer0.consume(113);
      XPathLexer xPathLexer1 = new XPathLexer("-e4P|AQL7RBq=jCU_");
      xPathLexer1.getXPath();
      Token token4 = xPathLexer0.rightParen();
      xPathLexer0.setPreviousToken(token4);
      Token token5 = xPathLexer1.whitespace();
      assertEquals((-2), token5.getTokenType());
      
      xPathLexer0.setXPath("`");
      Token token6 = xPathLexer0.nextToken();
      assertEquals("`", token6.getTokenText());
      
      Token token7 = xPathLexer0.dollar();
      assertEquals("`", token7.getTokenText());
      assertEquals(26, token7.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token8 = xPathLexer0.slashes();
      assertEquals(11, token8.getTokenType());
      
      xPathLexer2.currentPosition();
      XPathLexer xPathLexer3 = new XPathLexer("8&Nja");
      Token token9 = xPathLexer3.nextToken();
      assertEquals(30, token9.getTokenType());
      
      Token token10 = xPathLexer3.rightParen();
      assertEquals(2, token10.getTokenType());
      assertEquals("&", token10.getTokenText());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.8594916559037937
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.rightBracket();
      xPathLexer0.dollar();
      xPathLexer0.rightParen();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.leftParen();
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer3.consume();
      xPathLexer2.nextToken();
      xPathLexer2.consume(0);
      xPathLexer1.getXPath();
      xPathLexer2.setPreviousToken(token0);
      xPathLexer2.whitespace();
      xPathLexer2.setXPath("hoYa3V6q}Tu-K");
      xPathLexer1.dollar();
      xPathLexer2.operatorName();
      xPathLexer3.rightParen();
      xPathLexer2.nextToken();
      XPathLexer xPathLexer4 = null;
      try {
        xPathLexer4 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.8192811881636806
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("- l8G2am2p;!>[n[");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.rightBracket();
      xPathLexer0.notEquals();
      xPathLexer0.setXPath("- l8G2am2p;!>[n[");
      xPathLexer0.doubleColon();
      xPathLexer0.and();
      xPathLexer0.equals();
      xPathLexer0.dollar();
      xPathLexer0.slashes();
      xPathLexer0.leftBracket();
      xPathLexer0.slashes();
      xPathLexer0.identifier();
      xPathLexer0.consume();
      xPathLexer0.leftParen();
      xPathLexer0.isIdentifierChar('{');
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.div();
      xPathLexer0.leftBracket();
      Token token1 = xPathLexer0.doubleColon();
      xPathLexer0.nextToken();
      xPathLexer0.getPreviousToken();
      xPathLexer0.colon();
      xPathLexer0.number();
      xPathLexer0.and();
      xPathLexer0.equals();
      xPathLexer0.isIdentifierChar('{');
      xPathLexer0.equals();
      xPathLexer0.star();
      xPathLexer0.rightBracket();
      xPathLexer0.doubleColon();
      xPathLexer0.rightBracket();
      xPathLexer0.dollar();
      xPathLexer0.currentPosition();
      Token token2 = xPathLexer0.notEquals();
      assertFalse(token2.equals((Object)token1));
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.1098343509335784
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.dollar();
      xPathLexer0.leftBracket();
      xPathLexer0.slashes();
      xPathLexer0.LA(121);
      xPathLexer0.at();
      Token token0 = xPathLexer0.minus();
      xPathLexer0.rightParen();
      xPathLexer0.number();
      xPathLexer0.consume(0);
      xPathLexer0.getXPath();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.whitespace();
      xPathLexer0.setXPath("|(q#&Z*2*c]6Ej9f}d");
      xPathLexer0.dollar();
      xPathLexer0.operatorName();
      xPathLexer0.rightParen();
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.or();
      assertNull(token1);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.0317753551562023
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.mod();
      xPathLexer0.plus();
      xPathLexer0.setXPath("h<J:7aD+kC");
      xPathLexer0.not();
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      xPathLexer0.literal();
      xPathLexer0.rightParen();
      xPathLexer0.number();
      xPathLexer0.consume(113);
      XPathLexer xPathLexer1 = new XPathLexer("-e4P|AQL7RBq=jCU_");
      xPathLexer1.getXPath();
      Token token0 = xPathLexer0.rightParen();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer1.whitespace();
      xPathLexer0.setXPath("`");
      xPathLexer0.nextToken();
      xPathLexer0.dollar();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.operatorName();
      xPathLexer0.rightParen();
      xPathLexer1.nextToken();
      Token token1 = xPathLexer1.or();
      assertNull(token1);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.108356449951839
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.rightBracket();
      token0.toString();
      token0.toString();
      Token token1 = xPathLexer0.plus();
      assertEquals("o", token1.getTokenText());
      
      token0.toString();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("m.werken.saxpath.XPathLexer", token2.getTokenText());
      
      String string0 = token0.toString();
      assertEquals("[ (4) (c)", string0);
      
      Token token3 = xPathLexer0.slashes();
      assertEquals(11, token3.getTokenType());
      
      Token token4 = xPathLexer0.dots();
      assertEquals(13, token4.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("80j7\u0002y%]hpO");
      xPathLexer1.mod();
      xPathLexer1.operatorName();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.or();
      xPathLexer2.and();
      xPathLexer1.and();
      xPathLexer0.div();
      Token token5 = xPathLexer1.leftBracket();
      assertEquals("8", token5.getTokenText());
      assertEquals(3, token5.getTokenType());
      
      xPathLexer2.identifierOrOperatorName();
      Token token6 = xPathLexer0.plus();
      assertEquals(5, token6.getTokenType());
      
      Token token7 = xPathLexer1.star();
      assertEquals(20, token7.getTokenType());
      
      Token token8 = xPathLexer1.dollar();
      assertEquals("j", token8.getTokenText());
      assertEquals(26, token8.getTokenType());
      
      Token token9 = xPathLexer1.nextToken();
      assertEquals(30, token9.getTokenType());
      
      xPathLexer2.consume();
      xPathLexer1.endPosition();
      Token token10 = xPathLexer2.at();
      assertEquals(16, token10.getTokenType());
      
      xPathLexer0.nextToken();
      Token token11 = xPathLexer2.pipe();
      assertEquals(17, token11.getTokenType());
      
      Token token12 = xPathLexer1.nextToken();
      assertEquals("\u0002y%]hpO", token12.getTokenText());
      
      Token token13 = xPathLexer1.rightParen();
      assertEquals(2, token13.getTokenType());
      assertEquals("\u0002", token13.getTokenText());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.7645739139123853
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.dollar();
      assertEquals(26, token1.getTokenType());
      assertEquals("o", token1.getTokenText());
      
      xPathLexer0.rightParen();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer2 = new XPathLexer("ieOE]bmr^Of&SwBc,");
      xPathLexer0.setXPath("MK,zEgbcYcR");
      Token token2 = xPathLexer0.leftParen();
      assertEquals("M", token2.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer3.consume();
      Token token3 = xPathLexer2.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("ieOE", token3.getTokenText());
      
      xPathLexer3.literal();
      xPathLexer3.relationalOperator();
      xPathLexer2.relationalOperator();
      xPathLexer1.consume(776);
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token4 = xPathLexer4.star();
      assertEquals(20, token4.getTokenType());
      
      Token token5 = xPathLexer3.comma();
      assertEquals(32, token5.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer4.or();
      Token token6 = xPathLexer2.rightParen();
      assertEquals(2, token6.getTokenType());
      
      Token token7 = xPathLexer3.nextToken();
      assertEquals((-1), token7.getTokenType());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.829230176896321
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.rightBracket();
      xPathLexer0.plus();
      xPathLexer0.setXPath("hUChVOqssGm@Gxc/#B8");
      xPathLexer0.leftParen();
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      xPathLexer0.literal();
      xPathLexer0.or();
      xPathLexer0.consume(0);
      xPathLexer0.getXPath();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token0 = xPathLexer1.number();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer1.whitespace();
      // Undeclared exception!
      try { 
        xPathLexer1.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.900354897449606
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.rightParen();
      assertEquals(2, token0.getTokenType());
      
      xPathLexer0.star();
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      
      xPathLexer0.whitespace();
      xPathLexer0.minus();
      xPathLexer0.number();
      Token token2 = xPathLexer0.minus();
      assertEquals(6, token2.getTokenType());
      
      Token token3 = xPathLexer0.comma();
      assertEquals(32, token3.getTokenType());
      
      xPathLexer0.div();
      xPathLexer0.div();
      Token token4 = xPathLexer0.leftBracket();
      assertEquals(3, token4.getTokenType());
      
      Token token5 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token5.getTokenType());
      
      Token token6 = xPathLexer0.colon();
      assertEquals(18, token6.getTokenType());
      
      xPathLexer0.and();
      Token token7 = xPathLexer0.equals();
      assertEquals(21, token7.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.setXPath("H?4<_2Hse@I('Ak");
      xPathLexer0.getPreviousToken();
      xPathLexer0.star();
      xPathLexer0.mod();
      xPathLexer0.rightBracket();
      xPathLexer0.number();
      Token token8 = xPathLexer0.star();
      assertEquals("?", token8.getTokenText());
      assertEquals(20, token8.getTokenType());
      
      Token token9 = xPathLexer0.pipe();
      assertEquals(17, token9.getTokenType());
      assertEquals("4", token9.getTokenText());
      
      xPathLexer0.LA(17);
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('\uFFFF');
      assertFalse(boolean0);
      
      Token token10 = xPathLexer0.plus();
      assertEquals(5, token10.getTokenType());
      assertEquals("<", token10.getTokenText());
      
      Token token11 = xPathLexer0.dollar();
      assertEquals(26, token11.getTokenType());
      
      Token token12 = xPathLexer0.nextToken();
      assertEquals(30, token12.getTokenType());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.923897343972977
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.rightBracket();
      Token token1 = xPathLexer0.rightParen();
      assertEquals(2, token1.getTokenType());
      assertEquals("o", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token2 = xPathLexer1.slashes();
      Token token3 = xPathLexer1.minus();
      xPathLexer0.relationalOperator();
      Token token4 = xPathLexer1.dots();
      assertEquals(14, token4.getTokenType());
      assertEquals("m.", token4.getTokenText());
      
      xPathLexer1.mod();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.or();
      xPathLexer0.rightBracket();
      String string0 = token3.toString();
      assertEquals("[ (6) (o)", string0);
      
      Token token5 = xPathLexer2.nextToken();
      assertEquals((-1), token5.getTokenType());
      
      String string1 = token0.toString();
      assertEquals("[ (4) (c)", string1);
      
      xPathLexer2.setPreviousToken(token2);
      assertEquals(11, token2.getTokenType());
      assertEquals("c", token2.getTokenText());
      
      Token token6 = xPathLexer1.identifierOrOperatorName();
      assertEquals("werken.saxpath.XPathLexer", token6.getTokenText());
      assertEquals(15, token6.getTokenType());
      
      Token token7 = xPathLexer0.leftParen();
      assertEquals(1, token7.getTokenType());
      assertEquals(".", token7.getTokenText());
      
      Token token8 = xPathLexer1.equals();
      assertEquals(21, token8.getTokenType());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.4629061239587249
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.rightBracket();
      token0.toString();
      xPathLexer0.at();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.and();
      xPathLexer0.and();
      XPathLexer xPathLexer2 = new XPathLexer("[ (4) (c)");
      xPathLexer2.div();
      xPathLexer1.leftBracket();
      xPathLexer1.identifierOrOperatorName();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.plus();
      XPathLexer xPathLexer4 = new XPathLexer("");
      xPathLexer4.plus();
      xPathLexer0.not();
      xPathLexer1.dollar();
      XPathLexer xPathLexer5 = new XPathLexer("[ (4) (c)");
      xPathLexer2.nextToken();
      xPathLexer5.consume();
      xPathLexer2.endPosition();
      xPathLexer5.at();
      xPathLexer2.plus();
      xPathLexer5.nextToken();
      xPathLexer4.pipe();
      // Undeclared exception!
      try { 
        xPathLexer2.LA((-3741));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.9247798957666227
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.dollar();
      assertEquals(26, token1.getTokenType());
      assertEquals("o", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightParen();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token3 = xPathLexer1.slashes();
      assertEquals(11, token3.getTokenType());
      assertEquals("c", token3.getTokenText());
      
      Token token4 = xPathLexer1.minus();
      assertEquals("o", token4.getTokenText());
      assertEquals(6, token4.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token5 = xPathLexer1.dots();
      assertEquals(14, token5.getTokenType());
      assertEquals("m.", token5.getTokenText());
      
      xPathLexer0.mod();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.or();
      Token token6 = xPathLexer0.rightBracket();
      token6.toString();
      Token token7 = xPathLexer2.nextToken();
      assertEquals((-1), token7.getTokenType());
      
      String string0 = token6.toString();
      assertEquals("[ (4) (.)", string0);
      
      xPathLexer2.setPreviousToken(token2);
      assertEquals("m", token2.getTokenText());
      
      Token token8 = xPathLexer2.identifierOrOperatorName();
      assertNull(token8);
      
      Token token9 = xPathLexer1.leftParen();
      assertEquals("w", token9.getTokenText());
      assertEquals(1, token9.getTokenType());
      
      Token token10 = xPathLexer1.equals();
      assertEquals("e", token10.getTokenText());
      assertEquals(21, token10.getTokenType());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.0236495605210347
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      xPathLexer0.dollar();
      Token token1 = xPathLexer0.rightParen();
      assertEquals(2, token1.getTokenType());
      
      xPathLexer0.leftBracket();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.or();
      Token token2 = xPathLexer1.minus();
      assertEquals(6, token2.getTokenType());
      assertEquals("c", token2.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token3 = xPathLexer1.dots();
      assertEquals("o", token3.getTokenText());
      
      xPathLexer0.mod();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.or();
      xPathLexer2.and();
      xPathLexer2.and();
      xPathLexer2.div();
      Token token4 = xPathLexer0.leftBracket();
      assertEquals("w", token4.getTokenText());
      assertEquals(3, token4.getTokenType());
      
      Token token5 = xPathLexer0.identifierOrOperatorName();
      assertEquals("erken.saxpath.XPathLexer", token5.getTokenText());
      
      xPathLexer1.plus();
      xPathLexer0.consume(114);
      Token token6 = xPathLexer1.plus();
      assertEquals(".", token6.getTokenText());
      assertEquals(5, token6.getTokenType());
      
      Token token7 = xPathLexer0.star();
      assertEquals(20, token7.getTokenType());
      
      Token token8 = xPathLexer2.dollar();
      assertEquals(26, token8.getTokenType());
      
      Token token9 = xPathLexer0.nextToken();
      assertEquals((-1), token9.getTokenType());
      
      xPathLexer0.consume();
      xPathLexer2.endPosition();
      Token token10 = xPathLexer0.at();
      assertEquals(16, token10.getTokenType());
      
      Token token11 = xPathLexer1.nextToken();
      assertEquals(15, token11.getTokenType());
      
      Token token12 = xPathLexer2.pipe();
      assertEquals(17, token12.getTokenType());
      
      xPathLexer2.currentPosition();
      Token token13 = xPathLexer2.dots();
      assertEquals(13, token13.getTokenType());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.4935968545925546
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("JD");
      xPathLexer0.and();
      xPathLexer0.consume();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNotNull(token0);
      assertEquals("D", token0.getTokenText());
      
      xPathLexer0.identifier();
      Token token1 = xPathLexer0.plus();
      xPathLexer0.setPreviousToken(token1);
      Token token2 = xPathLexer0.whitespace();
      assertEquals((-2), token2.getTokenType());
      
      xPathLexer0.doubleColon();
      Token token3 = xPathLexer0.colon();
      assertEquals(18, token3.getTokenType());
      
      xPathLexer0.slashes();
      xPathLexer0.or();
      xPathLexer0.and();
      Token token4 = xPathLexer0.plus();
      assertEquals(5, token4.getTokenType());
      
      Token token5 = xPathLexer0.identifier();
      assertEquals(15, token5.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("!-G11");
      Token token6 = xPathLexer1.doubleColon();
      assertEquals(19, token6.getTokenType());
      assertEquals("!-", token6.getTokenText());
      
      Token token7 = xPathLexer1.slashes();
      assertEquals(11, token7.getTokenType());
      assertEquals("G", token7.getTokenText());
      
      xPathLexer1.relationalOperator();
      Token token8 = xPathLexer1.literal();
      assertNotNull(token8);
      assertEquals("", token8.getTokenText());
      assertEquals(27, token8.getTokenType());
      
      Token token9 = xPathLexer0.leftBracket();
      assertEquals(3, token9.getTokenType());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.9995525161602394
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.rightBracket();
      token0.toString();
      xPathLexer0.plus();
      token0.toString();
      xPathLexer0.nextToken();
      token0.toString();
      xPathLexer0.slashes();
      xPathLexer0.LA(1064);
      xPathLexer0.at();
      xPathLexer0.and();
      xPathLexer0.and();
      xPathLexer0.div();
      xPathLexer0.leftBracket();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.plus();
      XPathLexer xPathLexer1 = new XPathLexer("#:')*#rI%jj[(|$FC");
      xPathLexer1.plus();
      xPathLexer1.star();
      xPathLexer0.dollar();
      xPathLexer0.nextToken();
      xPathLexer1.consume();
      xPathLexer1.endPosition();
      xPathLexer1.at();
      xPathLexer1.nextToken();
      xPathLexer1.pipe();
      // Undeclared exception!
      try { 
        xPathLexer1.LA((-1133));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.0730935911922033
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("0nA&");
      Token token0 = xPathLexer0.plus();
      assertEquals("0", token0.getTokenText());
      assertEquals(5, token0.getTokenType());
      
      xPathLexer0.or();
      Token token1 = xPathLexer0.number();
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.pipe();
      assertEquals("n", token2.getTokenText());
      
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token3.getTokenType());
      assertEquals("A", token3.getTokenText());
      assertNotNull(token3);
      
      xPathLexer0.setXPath(") (");
      Token token4 = xPathLexer0.leftParen();
      assertEquals(")", token4.getTokenText());
      
      xPathLexer0.whitespace();
      xPathLexer0.comma();
      Token token5 = xPathLexer0.pipe();
      assertEquals(17, token5.getTokenType());
      
      xPathLexer0.nextToken();
      xPathLexer0.div();
      Token token6 = xPathLexer0.not();
      assertEquals(23, token6.getTokenType());
      
      Token token7 = xPathLexer0.getPreviousToken();
      assertEquals((-1), token7.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.slashes();
      xPathLexer0.whitespace();
      Token token8 = xPathLexer0.dots();
      assertEquals(13, token8.getTokenType());
      
      Token token9 = xPathLexer0.number();
      assertEquals(30, token9.getTokenType());
      
      Token token10 = xPathLexer0.colon();
      assertEquals(18, token10.getTokenType());
      
      xPathLexer0.div();
      xPathLexer0.operatorName();
      Token token11 = xPathLexer0.whitespace();
      assertEquals((-2), token11.getTokenType());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.5732609917586418
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("co.wrken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.rightBracket();
      String string0 = token0.toString();
      assertEquals("[ (4) (c)", string0);
      
      Token token1 = xPathLexer0.plus();
      xPathLexer0.or();
      xPathLexer0.consume(13);
      xPathLexer0.getXPath();
      xPathLexer0.setPreviousToken(token1);
      assertEquals("o", token1.getTokenText());
      assertEquals(5, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("co.wrken.saxpath.XPathLexer");
      Token token2 = xPathLexer1.whitespace();
      assertEquals((-2), token2.getTokenType());
      assertEquals("", token2.getTokenText());
      
      xPathLexer1.setXPath("/Za@Tmik");
      Token token3 = xPathLexer1.nextToken();
      assertEquals("/", token3.getTokenText());
      assertEquals(11, token3.getTokenType());
      
      Token token4 = xPathLexer1.dollar();
      assertEquals(26, token4.getTokenType());
      assertEquals("Z", token4.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.operatorName();
      Token token5 = xPathLexer1.star();
      assertEquals(20, token5.getTokenType());
      assertEquals("a", token5.getTokenText());
      
      Token token6 = xPathLexer2.nextToken();
      assertEquals((-1), token6.getTokenType());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.364860957654351
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.plus();
      xPathLexer0.consume();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.not();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer1.identifier();
      xPathLexer1.identifierOrOperatorName();
      xPathLexer1.identifierOrOperatorName();
      XPathLexer xPathLexer2 = new XPathLexer("20L)/?(|>g?Dk2x");
      xPathLexer2.consume();
      xPathLexer0.not();
      xPathLexer2.operatorName();
      xPathLexer2.operatorName();
      Token token1 = xPathLexer2.dollar();
      token1.toString();
      Token token2 = xPathLexer2.minus();
      token2.toString();
      xPathLexer1.setPreviousToken(token0);
      xPathLexer0.rightBracket();
      xPathLexer0.currentPosition();
      xPathLexer1.hasMoreChars();
      xPathLexer0.consume();
      xPathLexer2.identifier();
      xPathLexer0.consume((-531));
      xPathLexer1.identifier();
      // Undeclared exception!
      try { 
        xPathLexer0.identifier();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.474514115435189
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.consume();
      XPathLexer xPathLexer1 = new XPathLexer("7^7!>^]K<3<iJdu");
      xPathLexer1.setXPath("7^7!>^]K<3<iJdu");
      Token token0 = xPathLexer0.leftParen();
      assertEquals(1, token0.getTokenType());
      
      xPathLexer1.consume();
      Token token1 = xPathLexer1.nextToken();
      assertEquals("^7!>^]K<3<iJdu", token1.getTokenText());
      
      Token token2 = xPathLexer0.literal();
      assertNull(token2);
      
      xPathLexer1.relationalOperator();
      xPathLexer1.relationalOperator();
      xPathLexer0.consume(0);
      Token token3 = xPathLexer0.star();
      assertEquals(20, token3.getTokenType());
      
      Token token4 = xPathLexer0.comma();
      assertEquals(32, token4.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.or();
      Token token5 = xPathLexer1.slashes();
      assertEquals(11, token5.getTokenType());
      assertEquals("^", token5.getTokenText());
      
      xPathLexer2.currentPosition();
      Token token6 = xPathLexer2.nextToken();
      assertEquals((-1), token6.getTokenType());
      
      Token token7 = xPathLexer0.rightParen();
      assertEquals(2, token7.getTokenType());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.0988735491957473
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.dollar();
      int int0 = 121;
      xPathLexer0.leftBracket();
      xPathLexer0.slashes();
      xPathLexer0.LA(121);
      xPathLexer0.at();
      xPathLexer0.minus();
      xPathLexer0.rightParen();
      xPathLexer0.number();
      xPathLexer0.number();
      xPathLexer0.relationalOperator();
      xPathLexer0.consume(121);
      xPathLexer0.consume((-740));
      XPathLexer xPathLexer1 = new XPathLexer("[ (");
      xPathLexer1.or();
      // Undeclared exception!
      try { 
        xPathLexer0.or();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.894341986790673
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.plus();
      XPathLexer xPathLexer1 = new XPathLexer("'I#:@>l>J/}7&");
      xPathLexer1.setXPath("h<J:7aD+kC");
      xPathLexer0.leftParen();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.consume();
      xPathLexer1.nextToken();
      xPathLexer1.literal();
      xPathLexer1.or();
      xPathLexer2.number();
      xPathLexer2.relationalOperator();
      xPathLexer1.relationalOperator();
      xPathLexer2.consume(0);
      xPathLexer2.consume(0);
      xPathLexer2.or();
      xPathLexer2.or();
      xPathLexer1.rightParen();
      Token token0 = xPathLexer1.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.641663235169349
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.rightBracket();
      xPathLexer0.dollar();
      xPathLexer0.rightParen();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.slashes();
      xPathLexer1.minus();
      xPathLexer0.relationalOperator();
      xPathLexer1.dots();
      xPathLexer0.mod();
      xPathLexer0.number();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.7553403269142578
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.rightBracket();
      String string0 = token0.toString();
      assertEquals("[ (4) (c)", string0);
      
      xPathLexer0.plus();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.and();
      xPathLexer0.and();
      XPathLexer xPathLexer2 = new XPathLexer("[ (4) (c)");
      xPathLexer2.div();
      xPathLexer1.leftBracket();
      Token token1 = xPathLexer1.identifierOrOperatorName();
      assertNotNull(token1);
      assertEquals(15, token1.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.plus();
      XPathLexer xPathLexer4 = new XPathLexer("");
      xPathLexer4.plus();
      Token token2 = xPathLexer3.star();
      assertEquals(20, token2.getTokenType());
      
      Token token3 = xPathLexer1.dollar();
      assertEquals(26, token3.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("[ (4) (c)");
      Token token4 = xPathLexer5.nextToken();
      assertEquals("[", token4.getTokenText());
      assertEquals(3, token4.getTokenType());
      
      xPathLexer5.consume();
      int int0 = xPathLexer2.endPosition();
      assertEquals(9, int0);
      
      Token token5 = xPathLexer5.at();
      assertEquals("(", token5.getTokenText());
      assertEquals(16, token5.getTokenType());
      
      Token token6 = xPathLexer2.plus();
      assertEquals(5, token6.getTokenType());
      assertEquals("[", token6.getTokenText());
      
      Token token7 = xPathLexer5.nextToken();
      assertEquals(30, token7.getTokenType());
      assertEquals("4", token7.getTokenText());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer6.operatorName();
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer3.rightParen();
      Token token8 = xPathLexer5.nextToken();
      assertEquals(")", token8.getTokenText());
      assertEquals(2, token8.getTokenType());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.1018775140596944
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("871gI}rYY@z");
      Token token0 = xPathLexer0.minus();
      assertEquals(6, token0.getTokenType());
      
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      assertEquals("7", token1.getTokenText());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals("1", token2.getTokenText());
      assertEquals(11, token2.getTokenType());
      
      Token token3 = xPathLexer0.plus();
      String string0 = token3.toString();
      assertEquals("[ (5) (g)", string0);
      
      xPathLexer0.setPreviousToken(token3);
      xPathLexer0.notEquals();
      Token token4 = xPathLexer0.dots();
      assertEquals("r", token4.getTokenText());
      assertEquals(13, token4.getTokenType());
      
      Token token5 = xPathLexer0.star();
      assertEquals(20, token5.getTokenType());
      assertEquals("Y", token5.getTokenText());
      
      Token token6 = xPathLexer0.dollar();
      assertEquals("Y", token6.getTokenText());
      
      Token token7 = xPathLexer0.nextToken();
      assertEquals(16, token7.getTokenType());
      
      xPathLexer0.consume();
      xPathLexer0.setXPath("RyjQyv1");
      Token token8 = xPathLexer0.nextToken();
      assertEquals("RyjQyv1", token8.getTokenText());
      assertEquals(15, token8.getTokenType());
      
      Token token9 = xPathLexer0.dollar();
      assertEquals(26, token9.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer("}+Cs");
      xPathLexer2.operatorName();
      Token token10 = xPathLexer2.notEquals();
      assertEquals(22, token10.getTokenType());
      assertEquals("}+", token10.getTokenText());
      
      Token token11 = xPathLexer1.comma();
      assertEquals(32, token11.getTokenType());
      
      Token token12 = xPathLexer2.number();
      assertEquals(30, token12.getTokenType());
      assertEquals("", token12.getTokenText());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.308022769668673
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      String string0 = "(?C{f/8i`D[E)Q'j";
      XPathLexer xPathLexer0 = new XPathLexer("(?C{f/8i`D[E)Q'j");
      xPathLexer0.minus();
      xPathLexer0.literal();
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      xPathLexer0.colon();
      xPathLexer0.equals();
      token0.toString();
      token0.toString();
      xPathLexer0.dots();
      token0.toString();
      xPathLexer0.consume((-2135));
      xPathLexer0.consume();
      xPathLexer0.leftParen();
      // Undeclared exception!
      try { 
        xPathLexer0.nextToken();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.06030119662989
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.rightBracket();
      String string0 = token0.toString();
      assertEquals("[ (4) (c)", string0);
      
      xPathLexer0.plus();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.and();
      xPathLexer0.and();
      XPathLexer xPathLexer2 = new XPathLexer("[ (4) (c)");
      Token token1 = xPathLexer2.dots();
      assertEquals(13, token1.getTokenType());
      assertEquals("[", token1.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("}i;JnY>#'sgU dd8p");
      xPathLexer3.operatorName();
      xPathLexer2.or();
      xPathLexer2.and();
      xPathLexer3.and();
      xPathLexer2.div();
      Token token2 = xPathLexer2.leftBracket();
      assertEquals(" ", token2.getTokenText());
      assertEquals(3, token2.getTokenType());
      
      xPathLexer2.identifierOrOperatorName();
      Token token3 = xPathLexer3.plus();
      assertEquals("}", token3.getTokenText());
      assertEquals(5, token3.getTokenType());
      
      Token token4 = xPathLexer2.star();
      assertEquals(20, token4.getTokenType());
      assertEquals("(", token4.getTokenText());
      
      Token token5 = xPathLexer1.dollar();
      assertEquals(26, token5.getTokenType());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals(15, token6.getTokenType());
      assertEquals("m.werken.saxpath.XPathLexer", token6.getTokenText());
      
      xPathLexer1.consume();
      Token token7 = xPathLexer3.at();
      assertEquals(16, token7.getTokenType());
      
      Token token8 = xPathLexer2.nextToken();
      assertEquals("4", token8.getTokenText());
      assertEquals(30, token8.getTokenType());
      
      Token token9 = xPathLexer1.pipe();
      assertEquals(17, token9.getTokenType());
      
      xPathLexer1.nextToken();
      Token token10 = xPathLexer1.rightParen();
      assertEquals(2, token10.getTokenType());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.630617853282449
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.dollar();
      assertEquals("o", token1.getTokenText());
      assertEquals(26, token1.getTokenType());
      
      xPathLexer0.rightParen();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token2 = xPathLexer1.slashes();
      assertEquals("c", token2.getTokenText());
      
      Token token3 = xPathLexer1.minus();
      assertEquals("o", token3.getTokenText());
      assertEquals(6, token3.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("H=");
      xPathLexer1.setXPath("4Z|ocbm;ZEH");
      Token token4 = xPathLexer1.leftParen();
      assertEquals("4", token4.getTokenText());
      assertEquals(1, token4.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("4Z|ocbm;ZEH");
      XPathLexer xPathLexer4 = new XPathLexer(" ]9kPo)Q2U\"");
      xPathLexer4.consume();
      Token token5 = xPathLexer4.nextToken();
      assertEquals(4, token5.getTokenType());
      assertEquals("]", token5.getTokenText());
      
      Token token6 = xPathLexer4.literal();
      assertNull(token6);
      
      xPathLexer0.relationalOperator();
      xPathLexer2.relationalOperator();
      xPathLexer0.consume((-496));
      XPathLexer xPathLexer5 = new XPathLexer();
      XPathLexer xPathLexer6 = new XPathLexer("");
      Token token7 = xPathLexer6.star();
      assertEquals(20, token7.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer(" ]9kPo)Q2U\"");
      Token token8 = xPathLexer7.comma();
      assertEquals(" ", token8.getTokenText());
      assertEquals(32, token8.getTokenType());
      
      XPathLexer xPathLexer8 = new XPathLexer();
      xPathLexer8.or();
      Token token9 = xPathLexer4.slashes();
      assertEquals(11, token9.getTokenType());
      
      xPathLexer8.currentPosition();
      XPathLexer xPathLexer9 = new XPathLexer();
      Token token10 = xPathLexer9.nextToken();
      assertEquals((-1), token10.getTokenType());
      
      Token token11 = xPathLexer1.rightParen();
      assertEquals("Z", token11.getTokenText());
      assertEquals(2, token11.getTokenType());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.7202064561299344
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/#s;?");
      xPathLexer0.consume();
      xPathLexer0.star();
      xPathLexer0.colon();
      xPathLexer0.hasMoreChars();
      xPathLexer0.div();
      xPathLexer0.at();
      xPathLexer0.minus();
      xPathLexer0.star();
      xPathLexer0.relationalOperator();
      xPathLexer0.rightBracket();
      xPathLexer0.identifier();
      xPathLexer0.rightParen();
      xPathLexer0.leftBracket();
      xPathLexer0.nextToken();
      xPathLexer0.leftParen();
      xPathLexer0.consume((-821));
      xPathLexer0.notEquals();
      XPathLexer xPathLexer1 = new XPathLexer("/#s;?");
      xPathLexer1.literal();
      xPathLexer1.plus();
      // Undeclared exception!
      try { 
        xPathLexer0.dots();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.8898705409990066
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.plus();
      XPathLexer xPathLexer1 = new XPathLexer("'I#:@>l>J/}7&");
      xPathLexer1.setXPath("h<J:7aD+kC");
      xPathLexer1.leftParen();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.consume();
      xPathLexer1.nextToken();
      xPathLexer0.literal();
      xPathLexer1.or();
      xPathLexer0.number();
      xPathLexer0.relationalOperator();
      xPathLexer2.equals();
      xPathLexer1.consume(25);
      xPathLexer1.consume(25);
      xPathLexer1.or();
      xPathLexer0.or();
      xPathLexer1.rightParen();
      Token token0 = xPathLexer1.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.7486740023341159
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer("Bt_LW#");
      Token token0 = xPathLexer1.star();
      assertEquals(20, token0.getTokenType());
      assertEquals("B", token0.getTokenText());
      
      Token token1 = xPathLexer0.comma();
      assertEquals(32, token1.getTokenType());
      
      Token token2 = xPathLexer1.identifierOrOperatorName();
      assertEquals("t_LW", token2.getTokenText());
      
      Token token3 = xPathLexer1.nextToken();
      assertEquals("#", token3.getTokenText());
      
      xPathLexer1.operatorName();
      Token token4 = xPathLexer1.at();
      assertEquals("#", token4.getTokenText());
      assertEquals(16, token4.getTokenType());
      
      Token token5 = xPathLexer1.leftBracket();
      assertEquals(3, token5.getTokenType());
      
      Token token6 = xPathLexer0.identifierOrOperatorName();
      assertNotNull(token6);
      assertEquals(15, token6.getTokenType());
      
      xPathLexer1.not();
      Token token7 = xPathLexer1.doubleColon();
      assertEquals(19, token7.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token8 = xPathLexer2.nextToken();
      assertEquals((-1), token8.getTokenType());
      
      Token token9 = xPathLexer2.not();
      assertEquals(23, token9.getTokenType());
      
      Token token10 = xPathLexer0.notEquals();
      assertEquals(22, token10.getTokenType());
      
      xPathLexer2.div();
      Token token11 = xPathLexer2.pipe();
      assertEquals(17, token11.getTokenType());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.089738737689174
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.rightBracket();
      token0.toString();
      Token token1 = xPathLexer0.plus();
      String string0 = token0.toString();
      assertEquals("[ (4) (c)", string0);
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("m.werken.saxpath.XPathLexer", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.slashes();
      assertEquals(11, token3.getTokenType());
      
      char char0 = xPathLexer0.LA(29);
      assertEquals('\uFFFF', char0);
      
      Token token4 = xPathLexer0.at();
      assertEquals(16, token4.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("[ (4) (c)");
      Token token5 = xPathLexer1.minus();
      assertEquals(6, token5.getTokenType());
      assertEquals("[", token5.getTokenText());
      
      xPathLexer0.rightParen();
      Token token6 = xPathLexer1.number();
      assertEquals("", token6.getTokenText());
      assertEquals(30, token6.getTokenType());
      
      xPathLexer1.consume(0);
      xPathLexer0.getXPath();
      xPathLexer1.setPreviousToken(token1);
      assertEquals(5, token1.getTokenType());
      assertEquals("o", token1.getTokenText());
      
      xPathLexer1.or();
      xPathLexer0.setXPath("|(q#&Z*2*c]6Ej9f}d");
      Token token7 = xPathLexer1.nextToken();
      assertEquals(1, token7.getTokenType());
      assertEquals("(", token7.getTokenText());
      
      Token token8 = xPathLexer1.dollar();
      assertEquals(26, token8.getTokenType());
      assertEquals("4", token8.getTokenText());
      
      xPathLexer0.operatorName();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token9 = xPathLexer2.rightParen();
      assertEquals(2, token9.getTokenType());
      
      Token token10 = xPathLexer0.nextToken();
      assertEquals(17, token10.getTokenType());
      assertEquals("|", token10.getTokenText());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.9616291023802357
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.rightBracket();
      token0.toString();
      xPathLexer0.plus();
      token0.toString();
      xPathLexer0.nextToken();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.dots();
      xPathLexer0.star();
      xPathLexer0.notEquals();
      xPathLexer0.LA(1737);
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.dots();
      xPathLexer0.dollar();
      xPathLexer0.colon();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.identifier();
      // Undeclared exception!
      try { 
        xPathLexer0.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.3776603065617716
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.rightBracket();
      xPathLexer0.dollar();
      xPathLexer0.rightParen();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.or();
      xPathLexer1.minus();
      xPathLexer0.relationalOperator();
      xPathLexer1.dots();
      xPathLexer0.mod();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.or();
      xPathLexer2.and();
      xPathLexer2.and();
      xPathLexer2.div();
      xPathLexer0.leftBracket();
      xPathLexer2.star();
      xPathLexer0.dollar();
      xPathLexer2.or();
      XPathLexer xPathLexer3 = null;
      try {
        xPathLexer3 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.4505935079148113
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.dollar();
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
      assertEquals("m", token2.getTokenText());
      
      Token token3 = xPathLexer0.slashes();
      assertEquals(".", token3.getTokenText());
      assertEquals(11, token3.getTokenType());
      
      xPathLexer0.plus();
      xPathLexer0.setPreviousToken(token1);
      Token token4 = xPathLexer0.notEquals();
      assertEquals("er", token4.getTokenText());
      assertEquals(22, token4.getTokenType());
      
      Token token5 = xPathLexer0.dots();
      assertEquals(13, token5.getTokenType());
      assertEquals("k", token5.getTokenText());
      
      Token token6 = xPathLexer0.colon();
      assertEquals("e", token6.getTokenText());
      assertEquals(18, token6.getTokenType());
      
      Token token7 = xPathLexer0.pipe();
      assertEquals(17, token7.getTokenType());
      assertEquals("n", token7.getTokenText());
      
      boolean boolean0 = xPathLexer0.isIdentifierChar('C');
      assertTrue(boolean0);
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token8 = xPathLexer0.plus();
      assertEquals(".", token8.getTokenText());
      assertEquals(5, token8.getTokenType());
      
      Token token9 = xPathLexer0.dollar();
      assertEquals("s", token9.getTokenText());
      assertEquals(26, token9.getTokenType());
      
      Token token10 = xPathLexer1.nextToken();
      assertEquals((-1), token10.getTokenType());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.0932756365841456
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.colon();
      xPathLexer0.minus();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.minus();
      assertEquals(6, token1.getTokenType());
      
      xPathLexer0.consume(0);
      Token token2 = xPathLexer0.star();
      assertEquals(20, token2.getTokenType());
      
      Token token3 = xPathLexer0.dollar();
      assertEquals(26, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals((-1), token4.getTokenType());
      
      int int0 = xPathLexer0.currentPosition();
      assertEquals(5, int0);
      
      xPathLexer0.nextToken();
      Token token5 = xPathLexer0.plus();
      assertEquals(5, token5.getTokenType());
      
      Token token6 = xPathLexer0.identifier();
      assertEquals(15, token6.getTokenType());
      
      Token token7 = xPathLexer0.rightParen();
      assertEquals(2, token7.getTokenType());
      
      Token token8 = xPathLexer0.not();
      assertEquals(23, token8.getTokenType());
      
      boolean boolean0 = xPathLexer0.isIdentifierChar('@');
      assertFalse(boolean0);
      
      Token token9 = xPathLexer0.identifierOrOperatorName();
      assertNull(token9);
      
      Token token10 = xPathLexer0.comma();
      assertEquals(32, token10.getTokenType());
      
      xPathLexer0.getPreviousToken();
      Token token11 = xPathLexer0.colon();
      assertEquals(18, token11.getTokenType());
      
      Token token12 = xPathLexer0.leftBracket();
      assertEquals(3, token12.getTokenType());
      
      xPathLexer0.div();
      Token token13 = xPathLexer0.dots();
      assertEquals(13, token13.getTokenType());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=3.274043930302845
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume();
      xPathLexer0.plus();
      xPathLexer0.setPreviousToken((Token) null);
      xPathLexer0.literal();
      xPathLexer0.doubleColon();
      xPathLexer0.star();
      xPathLexer0.literal();
      xPathLexer0.or();
      xPathLexer0.div();
      xPathLexer0.equals();
      xPathLexer0.colon();
      xPathLexer0.rightParen();
      xPathLexer0.star();
      xPathLexer0.not();
      xPathLexer0.mod();
      xPathLexer0.operatorName();
      xPathLexer0.leftBracket();
      xPathLexer0.number();
      xPathLexer0.notEquals();
      xPathLexer0.rightBracket();
      xPathLexer0.colon();
      xPathLexer0.identifier();
      xPathLexer0.mod();
      xPathLexer0.rightBracket();
      xPathLexer0.minus();
      xPathLexer0.literal();
      xPathLexer0.consume((-1889));
      assertNull(xPathLexer0.getXPath());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.9909065731902369
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('T');
      boolean boolean1 = xPathLexer0.isIdentifierStartChar('0');
      assertFalse(boolean1);
      assertFalse(boolean1 == boolean0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.3289878276442155
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.whitespace();
      xPathLexer0.dollar();
      xPathLexer0.rightParen();
      xPathLexer0.slashes();
      xPathLexer0.minus();
      xPathLexer0.relationalOperator();
      xPathLexer0.dots();
      xPathLexer0.mod();
      xPathLexer0.operatorName();
      xPathLexer0.or();
      xPathLexer0.and();
      xPathLexer0.and();
      xPathLexer0.div();
      xPathLexer0.leftBracket();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-316));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.4797355476304528
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(19, token1.getTokenType());
      
      xPathLexer0.and();
      Token token2 = xPathLexer0.star();
      assertEquals(20, token2.getTokenType());
      
      Token token3 = xPathLexer0.dollar();
      assertEquals(26, token3.getTokenType());
      
      Token token4 = xPathLexer0.whitespace();
      assertEquals((-2), token4.getTokenType());
      
      Token token5 = xPathLexer0.leftBracket();
      assertEquals(3, token5.getTokenType());
      
      char char0 = xPathLexer0.LA((-1));
      assertEquals('\uFFFF', char0);
      
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      Token token6 = xPathLexer0.leftParen();
      assertEquals(1, token6.getTokenType());
      
      Token token7 = xPathLexer0.pipe();
      assertEquals(17, token7.getTokenType());
      
      Token token8 = xPathLexer0.rightParen();
      assertEquals(2, token8.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.div();
      xPathLexer0.or();
      Token token9 = xPathLexer0.identifier();
      assertEquals(15, token9.getTokenType());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.5288898846593366
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.identifier();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      xPathLexer0.comma();
      Token token1 = xPathLexer0.identifier();
      assertEquals(15, token1.getTokenType());
      
      xPathLexer0.mod();
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      
      Token token3 = xPathLexer0.dots();
      assertEquals(13, token3.getTokenType());
      
      Token token4 = xPathLexer0.doubleColon();
      assertEquals(19, token4.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.or();
      Token token5 = xPathLexer0.colon();
      assertEquals(18, token5.getTokenType());
      
      xPathLexer0.minus();
      Token token6 = xPathLexer0.minus();
      assertEquals(6, token6.getTokenType());
      
      xPathLexer0.setXPath("");
      Token token7 = xPathLexer0.rightBracket();
      assertEquals(4, token7.getTokenType());
      
      xPathLexer0.getXPath();
      Token token8 = xPathLexer0.not();
      assertEquals(23, token8.getTokenType());
      
      int int0 = xPathLexer0.currentPosition();
      assertEquals(2, int0);
      
      int int1 = xPathLexer0.endPosition();
      assertEquals(0, int1);
      
      Token token9 = xPathLexer0.comma();
      assertEquals(32, token9.getTokenType());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.046190599736695
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.rightBracket();
      token0.toString();
      Token token1 = xPathLexer0.plus();
      token0.toString();
      xPathLexer0.nextToken();
      xPathLexer0.slashes();
      xPathLexer0.LA(29);
      xPathLexer0.at();
      XPathLexer xPathLexer1 = new XPathLexer("[ (4) (c)");
      xPathLexer1.minus();
      xPathLexer0.rightParen();
      xPathLexer1.number();
      xPathLexer1.consume(0);
      xPathLexer0.getXPath();
      xPathLexer1.setPreviousToken(token1);
      xPathLexer1.or();
      xPathLexer0.setXPath("|(q#&Z*2*c]6Ej9f}d");
      xPathLexer1.nextToken();
      xPathLexer1.dollar();
      xPathLexer1.pipe();
      xPathLexer1.LA(1868);
      Token token2 = xPathLexer0.relationalOperator();
      assertNull(token2);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.5619868925992364
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/#s;?");
      xPathLexer0.consume();
      xPathLexer0.star();
      xPathLexer0.colon();
      xPathLexer0.hasMoreChars();
      xPathLexer0.div();
      xPathLexer0.at();
      xPathLexer0.minus();
      xPathLexer0.or();
      xPathLexer0.star();
      xPathLexer0.relationalOperator();
      xPathLexer0.rightBracket();
      xPathLexer0.identifier();
      xPathLexer0.leftBracket();
      xPathLexer0.nextToken();
      xPathLexer0.consume(118);
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.getXPath();
      xPathLexer1.setPreviousToken((Token) null);
      xPathLexer0.whitespace();
      // Undeclared exception!
      try { 
        xPathLexer0.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.9359079892929403
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.dollar();
      assertEquals(26, token1.getTokenType());
      assertEquals("[", token1.getTokenText());
      
      xPathLexer0.leftBracket();
      xPathLexer0.setPreviousToken(token0);
      Token token2 = xPathLexer0.minus();
      assertEquals(6, token2.getTokenType());
      assertEquals("(", token2.getTokenText());
      
      Token token3 = xPathLexer0.star();
      assertEquals(20, token3.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token4 = xPathLexer0.rightBracket();
      assertEquals(4, token4.getTokenType());
      
      xPathLexer0.identifier();
      xPathLexer0.rightParen();
      xPathLexer0.leftBracket();
      xPathLexer0.nextToken();
      xPathLexer0.leftParen();
      Token token5 = xPathLexer0.at();
      assertEquals(16, token5.getTokenType());
      
      xPathLexer0.leftBracket();
      xPathLexer0.plus();
      Token token6 = xPathLexer0.notEquals();
      assertEquals(22, token6.getTokenType());
      
      xPathLexer0.setXPath("5u5");
      Token token7 = xPathLexer0.pipe();
      assertEquals("5", token7.getTokenText());
      assertEquals(17, token7.getTokenType());
      
      Token token8 = xPathLexer0.slashes();
      assertEquals("u", token8.getTokenText());
      
      Token token9 = xPathLexer0.plus();
      assertEquals(5, token9.getTokenType());
      assertEquals("5", token9.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token10 = xPathLexer1.identifier();
      assertEquals(15, token10.getTokenType());
      
      xPathLexer1.div();
      xPathLexer0.doubleColon();
      Token token11 = xPathLexer0.slashes();
      assertEquals(11, token11.getTokenType());
      
      xPathLexer1.relationalOperator();
      xPathLexer1.literal();
      Token token12 = xPathLexer1.leftBracket();
      assertEquals(3, token12.getTokenType());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.896814754428918
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/#s;?");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.star();
      assertEquals("#", token0.getTokenText());
      
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      assertEquals("s", token1.getTokenText());
      
      xPathLexer0.hasMoreChars();
      xPathLexer0.div();
      Token token2 = xPathLexer0.at();
      assertEquals(";", token2.getTokenText());
      
      Token token3 = xPathLexer0.minus();
      assertEquals(6, token3.getTokenType());
      assertEquals("?", token3.getTokenText());
      
      Token token4 = xPathLexer0.star();
      assertEquals(20, token4.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token5 = xPathLexer0.rightBracket();
      assertEquals(4, token5.getTokenType());
      
      xPathLexer0.identifier();
      xPathLexer0.rightParen();
      xPathLexer0.leftBracket();
      Token token6 = xPathLexer0.nextToken();
      assertEquals((-1), token6.getTokenType());
      
      xPathLexer0.leftParen();
      Token token7 = xPathLexer0.at();
      assertEquals(16, token7.getTokenType());
      
      xPathLexer0.leftBracket();
      xPathLexer0.plus();
      Token token8 = xPathLexer0.notEquals();
      assertEquals(22, token8.getTokenType());
      
      xPathLexer0.setXPath("!0riJ1v;iJT1-H");
      Token token9 = xPathLexer0.pipe();
      assertEquals(17, token9.getTokenType());
      assertEquals("!", token9.getTokenText());
      
      xPathLexer0.slashes();
      Token token10 = xPathLexer0.plus();
      assertEquals(5, token10.getTokenType());
      
      Token token11 = xPathLexer0.identifier();
      assertEquals("iJ1v", token11.getTokenText());
      assertEquals(15, token11.getTokenType());
      
      Token token12 = xPathLexer0.doubleColon();
      assertEquals(";i", token12.getTokenText());
      assertEquals(19, token12.getTokenType());
      
      Token token13 = xPathLexer0.slashes();
      assertEquals(11, token13.getTokenType());
      assertEquals("J", token13.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token14 = xPathLexer0.literal();
      assertNull(token14);
      
      Token token15 = xPathLexer0.leftBracket();
      assertEquals(3, token15.getTokenType());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.2128924652602249
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.minus();
      xPathLexer0.colon();
      xPathLexer0.or();
      xPathLexer0.LA(1242);
      xPathLexer0.rightBracket();
      Token token0 = xPathLexer0.star();
      xPathLexer0.dollar();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.whitespace();
      xPathLexer0.hasMoreChars();
      Token token1 = xPathLexer0.nextToken();
      assertFalse(token1.equals((Object)token0));
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.1164041702797753
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("c", token0.getTokenText());
      assertEquals(4, token0.getTokenType());
      
      xPathLexer0.dollar();
      Token token1 = xPathLexer0.rightParen();
      assertEquals("m", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token2 = xPathLexer1.slashes();
      assertEquals("c", token2.getTokenText());
      assertEquals(11, token2.getTokenType());
      
      Token token3 = xPathLexer1.minus();
      assertEquals("o", token3.getTokenText());
      assertEquals(6, token3.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token4 = xPathLexer1.dots();
      assertEquals(14, token4.getTokenType());
      
      xPathLexer0.mod();
      Token token5 = xPathLexer1.comma();
      assertEquals("w", token5.getTokenText());
      
      xPathLexer0.operatorName();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token6 = xPathLexer2.comma();
      assertEquals(32, token6.getTokenType());
      
      xPathLexer2.or();
      xPathLexer2.and();
      xPathLexer2.and();
      xPathLexer2.div();
      Token token7 = xPathLexer0.leftBracket();
      assertEquals(3, token7.getTokenType());
      assertEquals(".", token7.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("zt<HJ_X1~D# 6");
      xPathLexer3.identifierOrOperatorName();
      XPathLexer xPathLexer4 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token8 = xPathLexer4.plus();
      assertEquals("c", token8.getTokenText());
      
      Token token9 = xPathLexer0.star();
      assertEquals(20, token9.getTokenType());
      assertEquals("w", token9.getTokenText());
      
      xPathLexer2.dollar();
      Token token10 = xPathLexer4.dollar();
      assertEquals(26, token10.getTokenType());
      
      Token token11 = xPathLexer1.nextToken();
      assertEquals("erken.saxpath.XPathLexer", token11.getTokenText());
      assertEquals(15, token11.getTokenType());
      
      xPathLexer2.consume();
      xPathLexer4.endPosition();
      Token token12 = xPathLexer4.at();
      assertEquals("m", token12.getTokenText());
      assertEquals(16, token12.getTokenType());
      
      xPathLexer1.operatorName();
      Token token13 = xPathLexer3.nextToken();
      assertEquals("<", token13.getTokenText());
      assertEquals(7, token13.getTokenType());
      
      xPathLexer1.div();
      Token token14 = xPathLexer0.pipe();
      assertEquals("e", token14.getTokenText());
      assertEquals(17, token14.getTokenType());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.346413171870012
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("871gI}rYY@z");
      Token token0 = xPathLexer0.minus();
      assertEquals(6, token0.getTokenType());
      assertEquals("8", token0.getTokenText());
      
      xPathLexer0.colon();
      Token token1 = xPathLexer0.slashes();
      assertEquals("1", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
      
      Token token2 = xPathLexer0.plus();
      xPathLexer0.setPreviousToken(token2);
      Token token3 = xPathLexer0.notEquals();
      assertEquals("I}", token3.getTokenText());
      assertEquals(22, token3.getTokenType());
      
      Token token4 = xPathLexer0.dots();
      assertEquals(13, token4.getTokenType());
      assertEquals("r", token4.getTokenText());
      
      Token token5 = xPathLexer0.colon();
      assertEquals("Y", token5.getTokenText());
      assertEquals(18, token5.getTokenType());
      
      Token token6 = xPathLexer0.pipe();
      assertEquals(17, token6.getTokenType());
      assertEquals("Y", token6.getTokenText());
      
      xPathLexer0.isIdentifierStartChar('C');
      XPathLexer xPathLexer1 = new XPathLexer("871gI}rYY@z");
      Token token7 = xPathLexer1.plus();
      assertEquals("8", token7.getTokenText());
      assertEquals(5, token7.getTokenType());
      
      Token token8 = xPathLexer0.dollar();
      assertEquals(26, token8.getTokenType());
      assertEquals("@", token8.getTokenText());
      
      Token token9 = xPathLexer0.nextToken();
      assertEquals(15, token9.getTokenType());
      assertEquals("z", token9.getTokenText());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=3.3317375198777044
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.rightParen();
      xPathLexer0.star();
      Token token0 = xPathLexer0.at();
      assertEquals(16, token0.getTokenType());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      
      xPathLexer0.minus();
      xPathLexer0.number();
      xPathLexer0.relationalOperator();
      Token token2 = xPathLexer0.minus();
      assertEquals(6, token2.getTokenType());
      
      xPathLexer0.comma();
      xPathLexer0.div();
      xPathLexer0.div();
      Token token3 = xPathLexer0.leftBracket();
      assertEquals(3, token3.getTokenType());
      
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertNotNull(token4);
      
      Token token5 = xPathLexer0.colon();
      assertEquals(18, token5.getTokenType());
      
      xPathLexer0.and();
      Token token6 = xPathLexer0.equals();
      assertEquals(21, token6.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.setXPath("H?4<_2Hse@I('Ak");
      xPathLexer0.getPreviousToken();
      xPathLexer0.star();
      xPathLexer0.mod();
      Token token7 = xPathLexer0.rightBracket();
      assertEquals(4, token7.getTokenType());
      assertEquals("H", token7.getTokenText());
      
      Token token8 = xPathLexer0.number();
      assertEquals("", token8.getTokenText());
      assertEquals(30, token8.getTokenType());
      
      Token token9 = xPathLexer0.star();
      assertEquals("?", token9.getTokenText());
      assertEquals(20, token9.getTokenType());
      
      Token token10 = xPathLexer0.identifier();
      assertEquals(15, token10.getTokenType());
      assertEquals("4", token10.getTokenText());
      
      Token token11 = xPathLexer0.rightParen();
      assertEquals(2, token11.getTokenType());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.8435579863716098
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.rightBracket();
      String string0 = token0.toString();
      assertEquals("[ (4) (c)", string0);
      
      xPathLexer0.plus();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.and();
      xPathLexer0.and();
      XPathLexer xPathLexer2 = new XPathLexer("[ (4) (c)");
      Token token1 = xPathLexer2.dots();
      assertEquals("[", token1.getTokenText());
      assertEquals(13, token1.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("}i;JnY>#'sgU dd8p");
      xPathLexer3.mod();
      xPathLexer3.operatorName();
      xPathLexer2.or();
      xPathLexer2.and();
      xPathLexer3.and();
      xPathLexer2.div();
      Token token2 = xPathLexer2.leftBracket();
      assertEquals(" ", token2.getTokenText());
      assertEquals(3, token2.getTokenType());
      
      xPathLexer2.identifierOrOperatorName();
      Token token3 = xPathLexer3.plus();
      assertEquals("}", token3.getTokenText());
      assertEquals(5, token3.getTokenType());
      
      Token token4 = xPathLexer2.star();
      assertEquals(20, token4.getTokenType());
      assertEquals("(", token4.getTokenText());
      
      xPathLexer1.dollar();
      Token token5 = xPathLexer0.nextToken();
      assertEquals(15, token5.getTokenType());
      
      Token token6 = xPathLexer1.dollar();
      assertEquals(26, token6.getTokenType());
      
      int int0 = xPathLexer0.currentPosition();
      assertEquals(29, int0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.0686976940601918
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.dollar();
      assertEquals("o", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightParen();
      assertEquals("m", token2.getTokenText());
      assertEquals(2, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token3 = xPathLexer1.slashes();
      assertEquals("c", token3.getTokenText());
      assertEquals(11, token3.getTokenType());
      
      Token token4 = xPathLexer1.minus();
      assertEquals("o", token4.getTokenText());
      assertEquals(6, token4.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token5 = xPathLexer1.dots();
      assertEquals(14, token5.getTokenType());
      assertEquals("m.", token5.getTokenText());
      
      xPathLexer0.mod();
      Token token6 = xPathLexer1.comma();
      assertEquals("w", token6.getTokenText());
      
      xPathLexer0.operatorName();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token7 = xPathLexer2.comma();
      assertEquals(32, token7.getTokenType());
      
      xPathLexer2.or();
      xPathLexer2.and();
      xPathLexer2.and();
      xPathLexer2.div();
      Token token8 = xPathLexer0.leftBracket();
      assertEquals(3, token8.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      Token token9 = xPathLexer1.plus();
      assertEquals(5, token9.getTokenType());
      
      Token token10 = xPathLexer0.star();
      assertEquals(20, token10.getTokenType());
      
      xPathLexer0.dollar();
      Token token11 = xPathLexer2.dollar();
      assertEquals(26, token11.getTokenType());
      
      Token token12 = xPathLexer0.nextToken();
      assertEquals((-1), token12.getTokenType());
      
      xPathLexer0.consume();
      xPathLexer2.endPosition();
      Token token13 = xPathLexer0.at();
      assertEquals(16, token13.getTokenType());
      
      xPathLexer2.operatorName();
      Token token14 = xPathLexer1.nextToken();
      assertEquals(15, token14.getTokenType());
      assertEquals("rken.saxpath.XPathLexer", token14.getTokenText());
      
      xPathLexer2.div();
      Token token15 = xPathLexer0.pipe();
      assertEquals(17, token15.getTokenType());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=3.5827165114896435
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-1));
      xPathLexer0.minus();
      xPathLexer0.comma();
      xPathLexer0.pipe();
      xPathLexer0.dots();
      xPathLexer0.dollar();
      xPathLexer0.colon();
      xPathLexer0.star();
      xPathLexer0.not();
      xPathLexer0.dollar();
      xPathLexer0.operatorName();
      xPathLexer0.pipe();
      xPathLexer0.operatorName();
      xPathLexer0.leftParen();
      xPathLexer0.or();
      xPathLexer0.comma();
      xPathLexer0.at();
      xPathLexer0.LA(33);
      xPathLexer0.operatorName();
      xPathLexer0.not();
      xPathLexer0.leftParen();
      xPathLexer0.slashes();
      xPathLexer0.mod();
      xPathLexer0.dots();
      xPathLexer0.isIdentifierStartChar('\uFFFF');
      xPathLexer0.equals();
      xPathLexer0.literal();
      xPathLexer0.mod();
      xPathLexer0.isIdentifierStartChar('^');
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.9925322379010089
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("0nA&");
      xPathLexer0.plus();
      xPathLexer0.dots();
      xPathLexer0.number();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.setXPath(") (");
      xPathLexer0.leftParen();
      xPathLexer0.identifier();
      xPathLexer0.doubleColon();
      xPathLexer0.whitespace();
      xPathLexer0.comma();
      xPathLexer0.pipe();
      xPathLexer0.nextToken();
      xPathLexer0.div();
      xPathLexer0.not();
      xPathLexer0.getPreviousToken();
      xPathLexer0.operatorName();
      xPathLexer0.slashes();
      xPathLexer0.whitespace();
      xPathLexer0.dots();
      xPathLexer0.number();
      xPathLexer0.colon();
      xPathLexer0.div();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.964731738419117
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("C{>#Z{");
      xPathLexer0.star();
      xPathLexer0.comma();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.nextToken();
      xPathLexer0.operatorName();
      xPathLexer0.at();
      xPathLexer0.leftBracket();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.not();
      xPathLexer0.doubleColon();
      xPathLexer0.nextToken();
      xPathLexer0.not();
      xPathLexer0.notEquals();
      xPathLexer0.rightParen();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.013122273078868
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.nextToken();
      xPathLexer0.slashes();
      xPathLexer0.at();
      xPathLexer0.whitespace();
      xPathLexer0.minus();
      xPathLexer0.number();
      Token token0 = xPathLexer0.minus();
      xPathLexer0.comma();
      xPathLexer0.div();
      xPathLexer0.div();
      xPathLexer0.leftBracket();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.colon();
      xPathLexer0.and();
      xPathLexer0.equals();
      xPathLexer0.and();
      xPathLexer0.setXPath("H?4<_2Hse@I('Ak");
      xPathLexer0.getPreviousToken();
      xPathLexer0.star();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=3.2848459250572914
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("871gI}rYY@z");
      Token token0 = xPathLexer0.minus();
      assertEquals("8", token0.getTokenText());
      assertEquals(6, token0.getTokenType());
      
      xPathLexer0.colon();
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals("1", token1.getTokenText());
      
      Token token2 = xPathLexer0.plus();
      xPathLexer0.setPreviousToken(token2);
      assertEquals(5, token2.getTokenType());
      assertEquals("g", token2.getTokenText());
      
      Token token3 = xPathLexer0.notEquals();
      assertEquals("I}", token3.getTokenText());
      assertEquals(22, token3.getTokenType());
      
      Token token4 = xPathLexer0.dots();
      assertEquals(13, token4.getTokenType());
      assertEquals("r", token4.getTokenText());
      
      Token token5 = xPathLexer0.colon();
      assertEquals(18, token5.getTokenType());
      assertEquals("Y", token5.getTokenText());
      
      Token token6 = xPathLexer0.identifier();
      assertEquals(15, token6.getTokenType());
      assertEquals("Y", token6.getTokenText());
      
      Token token7 = xPathLexer0.rightParen();
      assertEquals("@", token7.getTokenText());
      assertEquals(2, token7.getTokenType());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.949220420592175
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.comma();
      assertEquals(32, token0.getTokenType());
      
      xPathLexer0.and();
      Token token1 = xPathLexer0.literal();
      assertNull(token1);
      
      Token token2 = xPathLexer0.dollar();
      assertEquals(26, token2.getTokenType());
      
      Token token3 = xPathLexer0.colon();
      assertEquals(18, token3.getTokenType());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=3.1328844901090855
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("c", token0.getTokenText());
      assertEquals(4, token0.getTokenType());
      
      Token token1 = xPathLexer0.dollar();
      assertEquals("o", token1.getTokenText());
      assertEquals(26, token1.getTokenType());
      
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
      assertEquals("m", token2.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token3 = xPathLexer1.notEquals();
      assertEquals(22, token3.getTokenType());
      assertEquals("co", token3.getTokenText());
      
      xPathLexer1.or();
      Token token4 = xPathLexer0.leftParen();
      assertEquals(".", token4.getTokenText());
      
      Token token5 = xPathLexer1.equals();
      assertEquals(21, token5.getTokenType());
      assertEquals("m", token5.getTokenText());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.9485074081144567
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.or();
      xPathLexer0.and();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
      
      Token token1 = xPathLexer0.dollar();
      assertEquals(26, token1.getTokenType());
      
      Token token2 = xPathLexer0.plus();
      assertEquals(5, token2.getTokenType());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.989456509282999
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("C{>#Z{");
      Token token0 = xPathLexer0.star();
      assertEquals(20, token0.getTokenType());
      assertEquals("C", token0.getTokenText());
      
      Token token1 = xPathLexer0.comma();
      assertEquals("{", token1.getTokenText());
      assertEquals(32, token1.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(">", token2.getTokenText());
      assertEquals(9, token2.getTokenType());
      
      xPathLexer0.operatorName();
      Token token3 = xPathLexer0.at();
      assertEquals(16, token3.getTokenType());
      
      Token token4 = xPathLexer0.leftBracket();
      assertEquals("Z", token4.getTokenText());
      
      Token token5 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token5.getTokenType());
      assertEquals("", token5.getTokenText());
      
      Token token6 = xPathLexer0.doubleColon();
      assertEquals(19, token6.getTokenType());
      
      Token token7 = xPathLexer0.nextToken();
      assertEquals((-1), token7.getTokenType());
      
      Token token8 = xPathLexer0.not();
      assertEquals(23, token8.getTokenType());
      
      Token token9 = xPathLexer0.notEquals();
      assertEquals(22, token9.getTokenType());
      
      xPathLexer0.div();
      Token token10 = xPathLexer0.equals();
      assertEquals(21, token10.getTokenType());
      
      Token token11 = xPathLexer0.plus();
      assertEquals(5, token11.getTokenType());
      
      Token token12 = xPathLexer0.leftBracket();
      assertEquals(3, token12.getTokenType());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=3.479276939066297
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.rightBracket();
      xPathLexer0.dollar();
      xPathLexer0.rightParen();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.slashes();
      xPathLexer1.minus();
      xPathLexer0.relationalOperator();
      xPathLexer1.dots();
      xPathLexer0.mod();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.or();
      xPathLexer2.and();
      xPathLexer2.and();
      xPathLexer2.div();
      xPathLexer0.leftBracket();
      xPathLexer0.colon();
      XPathLexer xPathLexer3 = new XPathLexer("P]/Lkma6FJ{+'<");
      xPathLexer3.slashes();
      xPathLexer3.or();
      XPathLexer xPathLexer4 = new XPathLexer("");
      xPathLexer4.and();
      xPathLexer0.mod();
      xPathLexer3.notEquals();
      xPathLexer4.rightParen();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.8667105782619509
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.rightBracket();
      token0.toString();
      Token token1 = xPathLexer0.plus();
      assertEquals("o", token1.getTokenText());
      assertEquals(5, token1.getTokenType());
      
      token0.toString();
      token0.toString();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("m.werken.saxpath.XPathLexer", token2.getTokenText());
      
      String string0 = token0.toString();
      assertEquals("[ (4) (c)", string0);
      
      xPathLexer0.setPreviousToken(token0);
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertNull(token3);
      
      Token token4 = xPathLexer0.leftParen();
      assertEquals(1, token4.getTokenType());
      
      Token token5 = xPathLexer0.equals();
      assertEquals(21, token5.getTokenType());
      
      Token token6 = xPathLexer0.doubleColon();
      assertEquals(19, token6.getTokenType());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.9649388599476738
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("C{>#Z{");
      Token token0 = xPathLexer0.star();
      assertEquals(20, token0.getTokenType());
      assertEquals("C", token0.getTokenText());
      
      Token token1 = xPathLexer0.comma();
      assertEquals(32, token1.getTokenType());
      assertEquals("{", token1.getTokenText());
      
      xPathLexer0.identifierOrOperatorName();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(">", token2.getTokenText());
      assertEquals(9, token2.getTokenType());
      
      xPathLexer0.operatorName();
      Token token3 = xPathLexer0.at();
      assertEquals(16, token3.getTokenType());
      assertEquals("#", token3.getTokenText());
      
      Token token4 = xPathLexer0.leftBracket();
      assertEquals("Z", token4.getTokenText());
      assertEquals(3, token4.getTokenType());
      
      Token token5 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token5.getTokenType());
      assertEquals("", token5.getTokenText());
      
      Token token6 = xPathLexer0.not();
      assertEquals("{", token6.getTokenText());
      
      Token token7 = xPathLexer0.doubleColon();
      assertEquals(19, token7.getTokenType());
      
      Token token8 = xPathLexer0.nextToken();
      assertEquals((-1), token8.getTokenType());
      
      Token token9 = xPathLexer0.not();
      assertEquals(23, token9.getTokenType());
      
      Token token10 = xPathLexer0.notEquals();
      assertEquals(22, token10.getTokenType());
      
      Token token11 = xPathLexer0.pipe();
      assertEquals(17, token11.getTokenType());
      
      xPathLexer0.nextToken();
      Token token12 = xPathLexer0.rightParen();
      assertEquals(2, token12.getTokenType());
  }
}
