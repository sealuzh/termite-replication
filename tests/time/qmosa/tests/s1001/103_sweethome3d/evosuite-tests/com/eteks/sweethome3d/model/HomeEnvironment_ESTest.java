/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 15:13:34 GMT 2019
 */

package com.eteks.sweethome3d.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.eteks.sweethome3d.model.AspectRatio;
import com.eteks.sweethome3d.model.Camera;
import com.eteks.sweethome3d.model.CatalogTexture;
import com.eteks.sweethome3d.model.Content;
import com.eteks.sweethome3d.model.HomeEnvironment;
import com.eteks.sweethome3d.model.HomeTexture;
import com.eteks.sweethome3d.model.TextureImage;
import com.eteks.sweethome3d.model.TexturesCategory;
import com.eteks.sweethome3d.tools.ResourceURLContent;
import com.eteks.sweethome3d.tools.TemporaryURLContent;
import com.eteks.sweethome3d.tools.URLContent;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeListenerProxy;
import java.net.URL;
import java.util.LinkedList;
import java.util.List;
import java.util.function.Consumer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HomeEnvironment_ESTest extends HomeEnvironment_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.0113645074166633
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment0.setVideoCameraPath(linkedList0);
      Camera.Lens camera_Lens0 = Camera.Lens.FISHEYE;
      Camera camera0 = new Camera((-1900.1F), 1210.97F, (-1900.1F), (-2631.2366F), (-213.301F), 1210.97F, (-787L), camera_Lens0);
      LinkedList<Camera> linkedList1 = new LinkedList<Camera>();
      linkedList1.add(camera0);
      LinkedList<Camera> linkedList2 = new LinkedList<Camera>();
      Camera.Lens camera_Lens1 = Camera.Lens.PINHOLE;
      Camera camera1 = new Camera((-787L), 2912.304F, (-3285.65F), (-3615.1F), (-3867.0F), 1268.0F, (-787L), camera_Lens1);
      camera0.setCamera(camera1);
      homeEnvironment0.setCeillingLightColor(264);
      CatalogTexture catalogTexture0 = new CatalogTexture("", (Content) null, (-213.301F), (-3285.65F), true);
      TexturesCategory texturesCategory0 = new TexturesCategory("");
      catalogTexture0.setCategory(texturesCategory0);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setCeillingLightColor(264);
      assertEquals(264, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.8773896007754103
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      homeEnvironment0.setSkyColor(0);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      Camera.Lens camera_Lens0 = Camera.Lens.SPHERICAL;
      Camera camera0 = new Camera(0, 0, 1024.4161F, 1024.4161F, 1024.4161F, (-2631.2366F), 0L, camera_Lens0);
      LinkedList<Camera> linkedList1 = new LinkedList<Camera>();
      linkedList1.add(camera0);
      LinkedList<Camera> linkedList2 = new LinkedList<Camera>();
      camera0.setY((-1.0F));
      homeEnvironment0.setVideoCameraPath(linkedList0);
      linkedList1.push(camera0);
      homeEnvironment0.setCeillingLightColor(3);
      homeEnvironment0.setVideoWidth(9);
      homeEnvironment0.getVideoFrameRate();
      homeEnvironment0.getVideoHeight();
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      assertEquals(0, homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.5035870903352846
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      homeEnvironment0.setSkyColor(0);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      Camera.Lens camera_Lens0 = Camera.Lens.SPHERICAL;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Camera camera0 = new Camera(0, 689.09F, 1024.4161F, 1024.4161F, 1024.4161F, (-2631.2366F), 0L, camera_Lens0);
      LinkedList<Camera> linkedList1 = new LinkedList<Camera>();
      linkedList1.add(camera0);
      LinkedList<Camera> linkedList2 = new LinkedList<Camera>();
      homeEnvironment0.setVideoCameraPath(linkedList0);
      linkedList1.push(camera0);
      homeEnvironment0.setCeillingLightColor(3);
      CatalogTexture catalogTexture0 = new CatalogTexture("h|lg1|>5PE~y{", (Content) null, 1024.4161F, 1842.4F, false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment(11, homeTexture0, (-918), 11, 0);
      homeEnvironment0.setCeillingLightColor((-1643));
      homeEnvironment0.clone();
      assertEquals(0, homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.004692434434373
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setSkyColor(0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      Consumer<Camera> consumer0 = (Consumer<Camera>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      linkedList0.forEach(consumer0);
      homeEnvironment0.setVideoCameraPath(linkedList0);
      homeEnvironment1.setPhotoWidth(300);
      homeEnvironment1.setPhotoHeight(1);
      homeEnvironment1.getGroundColor();
      homeEnvironment1.getVideoFrameRate();
      homeEnvironment1.setAllLevelsVisible(false);
      boolean boolean0 = homeEnvironment0.isObserverCameraElevationAdjusted();
      assertEquals(0, homeEnvironment0.getSkyColor());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.022248870579868
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "applicationSubFolder.Windows");
      MockURL.getFileExample();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoWidth((-2294));
      homeEnvironment0.setPhotoWidth((-2294));
      int int0 = homeEnvironment0.getLightColor();
      assertEquals((-2294), homeEnvironment0.getPhotoWidth());
      assertEquals(13684944, int0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.755739480438498
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment0.setVideoCameraPath(linkedList0);
      homeEnvironment0.setVideoQuality((-1079));
      homeEnvironment0.setSkyColor((-1079));
      homeEnvironment0.clone();
      LinkedList<Camera> linkedList1 = new LinkedList<Camera>();
      Consumer<Camera> consumer0 = (Consumer<Camera>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      linkedList1.forEach(consumer0);
      URL uRL0 = MockURL.getHttpExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, false);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      CatalogTexture catalogTexture0 = new CatalogTexture("iP", resourceURLContent0, 12, 2389.3633F, false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment(12, homeTexture0, 0, homeTexture0, 400, (-1693.0F));
      homeEnvironment1.setVideoCameraPath(linkedList0);
      homeEnvironment1.setPhotoWidth(6);
      homeEnvironment0.setPhotoHeight(17);
      assertEquals((-1079), homeEnvironment0.getSkyColor());
      
      HomeEnvironment homeEnvironment2 = new HomeEnvironment(0, homeTexture0, 17, 12, 91.0F);
      homeEnvironment2.getGroundColor();
      int int0 = homeEnvironment2.getGroundColor();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.831673301904631
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment0.setVideoCameraPath(linkedList0);
      homeEnvironment0.setVideoQuality((-1079));
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-94);
      LinkedList<Camera> linkedList1 = new LinkedList<Camera>();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      linkedList1.forEach(consumer0);
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment0.setPhotoWidth((byte) (-94));
      homeEnvironment0.setPhotoHeight(300);
      homeEnvironment0.getGroundColor();
      homeEnvironment0.getVideoFrameRate();
      homeEnvironment0.setAllLevelsVisible(true);
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.555632017870312
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("we:P=sz-f!d7n?", uRLContent0, 2.0F, 2.0F);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(264, homeTexture0, 264, homeTexture0, 2940, 264);
      CatalogTexture catalogTexture1 = new CatalogTexture("we:P=sz-f!d7n?", "}i;JnY>#'sgU dd8p", uRLContent0, 264, 2940, "we:P=sz-f!d7n?");
      catalogTexture0.compareTo(catalogTexture1);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      catalogTexture1.getCategory();
      catalogTexture0.setCategory((TexturesCategory) null);
      CatalogTexture catalogTexture2 = new CatalogTexture((String) null, "}i;JnY>#'sgU dd8p", uRLContent0, (-2518.2F), 8192, (String) null, true);
      TexturesCategory texturesCategory0 = new TexturesCategory("0SF[0`");
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setCeillingLightColor(264);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.getPhotoQuality();
      homeEnvironment0.getVideoHeight();
      homeEnvironment0.getGroundTexture();
      homeEnvironment0.getVideoCameraPath();
      assertEquals(264, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoWidth(320);
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.9397928111645655
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyColor(0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.setWallsAlpha(0);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment1.setPhotoWidth(1783);
      Consumer<Camera> consumer0 = (Consumer<Camera>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      linkedList0.forEach(consumer0);
      homeEnvironment0.setVideoCameraPath(linkedList0);
      homeEnvironment1.setPhotoWidth(300);
      homeEnvironment1.setPhotoHeight(1);
      homeEnvironment1.getGroundColor();
      homeEnvironment1.getVideoFrameRate();
      homeEnvironment1.setAllLevelsVisible(false);
      assertEquals(300, homeEnvironment1.getPhotoWidth());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("we:P=sz-f!d7n?", uRLContent0, 2.0F, 2.0F);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(264, homeTexture0, 264, homeTexture0, 2940, 264);
      CatalogTexture catalogTexture1 = new CatalogTexture("we:P=sz-f!d7n?", "}i;JnY>#'sgU dd8p", uRLContent0, 264, 2940, "we:P=sz-f!d7n?");
      catalogTexture0.compareTo(catalogTexture1);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      catalogTexture1.getCategory();
      catalogTexture0.setCategory((TexturesCategory) null);
      homeEnvironment0.setCeillingLightColor(2940);
      CatalogTexture catalogTexture2 = new CatalogTexture("]9HnB_eKX{", (Content) null, (-1.0F), (-657.0F), false);
      HomeTexture homeTexture1 = new HomeTexture(catalogTexture2);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment(3529, homeTexture1, (-918), 1, (-1159.0F));
      homeEnvironment0.setCeillingLightColor(8192);
      assertEquals(8192, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("we:P=sz-f!d7n?", uRLContent0, 2.0F, 2.0F);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(2739, homeTexture0, 2739, homeTexture0, 1149, (-119.99747F));
      CatalogTexture catalogTexture1 = new CatalogTexture("", "IxmcfRmdMg-", uRLContent0, 264, 4.0F, "");
      catalogTexture0.compareTo(catalogTexture1);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      CatalogTexture catalogTexture2 = new CatalogTexture(":'YRM98*m^}>9{C", "we:P=sz-f!d7n?", uRLContent0, (-3284.5F), 1.0F, "VIDEO_WIDTH", true);
      TexturesCategory texturesCategory0 = new TexturesCategory(":'YRM98*m^}>9{C");
      catalogTexture0.setCategory(texturesCategory0);
      CatalogTexture catalogTexture3 = new CatalogTexture("VIDEO_WIDTH", ":'YRM98*m^}>9{C", uRLContent0, 1904.9F, 264, "IxmcfRmdMg-");
      HomeTexture homeTexture1 = new HomeTexture(catalogTexture3);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(2739, homeEnvironment1.getSkyColor());
      assertEquals(1149, homeEnvironment1.getLightColor());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals((-119.99747F), homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(2739, homeEnvironment1.getGroundColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("we:P=sz-f!d7n?", uRLContent0, 2.0F, 2.0F);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      Camera.Lens camera_Lens0 = Camera.Lens.NORMAL;
      Camera camera0 = new Camera((-247.08784F), (-1440.552F), (-247.08784F), (-71.81813F), 2940, (-3285.65F), (-2582L), camera_Lens0);
      catalogTexture0.getCategory();
      CatalogTexture catalogTexture1 = new CatalogTexture("we:P=sz-f!d7n?", "we:P=sz-f!d7n?", uRLContent0, (-2582L), 264, (String) null, false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture1);
      HomeTexture homeTexture1 = new HomeTexture(catalogTexture1);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(2940, homeTexture0, 17, homeTexture1, 17, 808.82F);
      homeEnvironment0.setLightColor(2940);
      homeEnvironment0.setPhotoWidth(2940);
      homeEnvironment0.setPhotoHeight(2940);
      HomeEnvironment.DrawingMode.values();
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("5rqovhj^!~}w+}");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.5rqovhj^!~}w+}
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("we:P=sz-f!d7n?", uRLContent0, 2.0F, 2.0F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(264, homeTexture0, 264, homeTexture0, 2940, 264);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      CatalogTexture catalogTexture1 = new CatalogTexture((String) null, "", uRLContent0, 1793.0573F, (-3285.65F), "", true);
      HomeTexture homeTexture1 = new HomeTexture(catalogTexture1);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment(264, homeTexture0, 17, homeTexture1, 5459, 264.0F);
      homeEnvironment0.setLightColor(2940);
      homeEnvironment0.setPhotoWidth(2114);
      assertEquals(2114, homeEnvironment0.getPhotoWidth());
      
      HomeEnvironment homeEnvironment2 = new HomeEnvironment();
      HomeEnvironment.DrawingMode.values();
      int int0 = homeEnvironment2.getPhotoHeight();
      assertEquals(300, int0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("we:P=sz-f!d7n?", uRLContent0, 2.0F, 2.0F);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(264, homeTexture0, (-45), homeTexture0, (-45), 2.0F);
      CatalogTexture catalogTexture1 = new CatalogTexture("we:P=sz-f!d7n?", "we:P=sz-f!d7n?", uRLContent0, (-1.0F), 300.0F, "}i;JnY>#'sgU dd8p");
      catalogTexture0.compareTo(catalogTexture1);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      CatalogTexture catalogTexture2 = new CatalogTexture((String) null, uRLContent0, 0, 2348.6284F);
      catalogTexture2.getCategory();
      catalogTexture0.setCategory((TexturesCategory) null);
      CatalogTexture catalogTexture3 = new CatalogTexture("}i;JnY>#'sgU dd8p", uRLContent0, (-1.0F), 3680.15F);
      catalogTexture1.getCategory();
      catalogTexture2.setCategory((TexturesCategory) null);
      CatalogTexture catalogTexture4 = new CatalogTexture((String) null, "}Zut>~,Q", uRLContent0, 655.3F, 264, "*[o:y", true);
      catalogTexture3.getCategory();
      catalogTexture0.setCategory((TexturesCategory) null);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.clone();
      assertTrue(homeEnvironment0.isAllLevelsVisible());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.7257318471278023
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment0.setVideoCameraPath(linkedList0);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.WALLS_ALPHA;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("<BVL9kR^g/u>", propertyChangeListener0);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      Camera.Lens camera_Lens0 = Camera.Lens.FISHEYE;
      Camera camera0 = new Camera((-1900.1F), 1210.97F, (-1900.1F), (-2631.2366F), (-213.301F), 1210.97F, (-787L), camera_Lens0);
      LinkedList<Camera> linkedList1 = new LinkedList<Camera>();
      linkedList1.add(camera0);
      LinkedList<Camera> linkedList2 = new LinkedList<Camera>();
      homeEnvironment0.setVideoCameraPath((List<Camera>) null);
      linkedList1.push(camera0);
      homeEnvironment0.getVideoCameraPath();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "<BVL9kR^g/u>");
      homeEnvironment0.getVideoWidth();
      int int0 = homeEnvironment0.getPhotoQuality();
      assertEquals(0, int0);
      
      int int1 = homeEnvironment0.getVideoHeight();
      assertEquals(240, int1);
      
      homeEnvironment0.getGroundTexture();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      homeEnvironment0.getVideoCameraPath();
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.2410283190591764
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setSkyColor(300);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.SKY_TEXTURE;
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", (PropertyChangeListener) null);
      homeEnvironment1.addPropertyChangeListener(homeEnvironment_Property0, (PropertyChangeListener) null);
      homeEnvironment1.setGroundColor(0);
      homeEnvironment0.setPhotoWidth((-1207));
      HomeEnvironment homeEnvironment2 = homeEnvironment0.clone();
      homeEnvironment0.setPhotoHeight(0);
      homeEnvironment2.getVideoCameraPath();
      HomeEnvironment homeEnvironment3 = homeEnvironment0.clone();
      homeEnvironment3.getVideoHeight();
      HomeEnvironment homeEnvironment4 = new HomeEnvironment();
      homeEnvironment4.setPhotoQuality(65);
      homeEnvironment2.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment4.getWallsAlpha();
      HomeEnvironment.Property homeEnvironment_Property1 = HomeEnvironment.Property.SKY_COLOR;
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property1, (PropertyChangeListener) null);
      assertEquals((-1207), homeEnvironment0.getPhotoWidth());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.524673352026602
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      homeEnvironment1.setVideoWidth((-505));
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment1.setVideoAspectRatio(aspectRatio0);
      homeEnvironment1.getVideoHeight();
      homeEnvironment1.setVideoWidth((-252));
      homeEnvironment0.setVideoWidth((-252));
      assertEquals((-252), homeEnvironment0.getVideoWidth());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.733857589601352
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setSkyColor(0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment homeEnvironment2 = new HomeEnvironment(1189, (HomeTexture) null, 2147483453, (HomeTexture) null, 11, 2147483453);
      homeEnvironment2.setLightColor((-673));
      homeEnvironment2.setGroundColor(1189);
      homeEnvironment1.getSkyColor();
      homeEnvironment2.setPhotoQuality(2);
      homeEnvironment0.setGroundColor(20);
      Random.setNextRandom(2145383727);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.239471494980297
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setSkyColor(0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.SKY_TEXTURE;
      HomeEnvironment.Property homeEnvironment_Property1 = HomeEnvironment.Property.SKY_TEXTURE;
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", (PropertyChangeListener) null);
      homeEnvironment1.addPropertyChangeListener(homeEnvironment_Property1, propertyChangeListenerProxy0);
      homeEnvironment1.setGroundColor(300);
      homeEnvironment1.setPhotoWidth(0);
      HomeEnvironment homeEnvironment2 = homeEnvironment0.clone();
      homeEnvironment2.setPhotoHeight(1);
      homeEnvironment0.getVideoCameraPath();
      HomeEnvironment homeEnvironment3 = homeEnvironment1.clone();
      homeEnvironment0.getVideoHeight();
      homeEnvironment0.setPhotoQuality((-293));
      homeEnvironment3.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment2.getWallsAlpha();
      HomeEnvironment.Property homeEnvironment_Property2 = HomeEnvironment.Property.GROUND_TEXTURE;
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property2, propertyChangeListenerProxy0);
      assertEquals((-293), homeEnvironment0.getPhotoQuality());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      URL uRL0 = MockURL.getFileExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("we:P=sz-f!d7n?", uRLContent0, 2.0F, 2.0F);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(264, homeTexture0, 264, homeTexture0, 2940, 264);
      CatalogTexture catalogTexture1 = new CatalogTexture("we:P=sz-f!d7n?", "}i;JnY>#'sgU dd8p", uRLContent0, 264, 2940, "we:P=sz-f!d7n?");
      catalogTexture0.compareTo(catalogTexture1);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      catalogTexture1.getCategory();
      catalogTexture0.setCategory((TexturesCategory) null);
      CatalogTexture catalogTexture2 = new CatalogTexture((String) null, "}i;JnY>#'sgU dd8p", uRLContent0, (-2518.2F), 8192, (String) null, true);
      catalogTexture0.getCategory();
      catalogTexture2.setCategory((TexturesCategory) null);
      HomeTexture homeTexture1 = new HomeTexture(catalogTexture2);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.getSkyTexture();
      assertTrue(homeEnvironment0.isAllLevelsVisible());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("^HJ`v(O", propertyChangeListener0);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent("RATIO_3_2", "fO%", propertyChangeListenerProxy0, object0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent(object0, "^HJ`v(O", linkedList0, "vG(J$-L1qdOAl/y");
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent1);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("<BVL9kR^g/u>", propertyChangeListenerProxy0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setPhotoQuality((-732));
      homeEnvironment1.setAllLevelsVisible(false);
      assertEquals((-732), homeEnvironment1.getPhotoQuality());
      
      homeEnvironment0.getSkyTexture();
      assertEquals(13684944, homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.506807702251549
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      homeEnvironment0.setSkyColor(0);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment0.setSkyColor(0);
      homeEnvironment0.clone();
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      HomeEnvironment homeEnvironment2 = homeEnvironment0.clone();
      homeEnvironment2.setCeillingLightColor((-666));
      assertEquals(0, homeEnvironment0.getSkyColor());
      
      HomeEnvironment.DrawingMode.values();
      homeEnvironment1.setAllLevelsVisible(false);
      assertEquals(300, homeEnvironment1.getPhotoHeight());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.getPhotoQuality();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      String string0 = "Z2hZ{X5";
      Class<HomeEnvironment> class0 = HomeEnvironment.class;
      ResourceURLContent resourceURLContent0 = null;
      try {
        resourceURLContent0 = new ResourceURLContent(class0, "Z2hZ{X5");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown resource Z2hZ{X5
         //
         verifyException("com.eteks.sweethome3d.tools.ResourceURLContent", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("we:P=sz-f!d7n?", uRLContent0, 2.0F, 2.0F);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(2739, homeTexture0, 2739, homeTexture0, 1149, (-119.99747F));
      CatalogTexture catalogTexture1 = new CatalogTexture("", "IxmcfRmdMg-", uRLContent0, 264, 4.0F, "");
      catalogTexture0.compareTo(catalogTexture1);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      CatalogTexture catalogTexture2 = new CatalogTexture("SKY_COLOR", uRLContent0, 1149, 2940);
      catalogTexture2.getCategory();
      catalogTexture2.setCategory((TexturesCategory) null);
      CatalogTexture catalogTexture3 = new CatalogTexture("IxmcfRmdMg-", "we:P=sz-f!d7n?", uRLContent0, 655.3F, 1, (String) null, true);
      catalogTexture0.getCategory();
      catalogTexture1.setCategory((TexturesCategory) null);
      HomeTexture homeTexture1 = new HomeTexture(catalogTexture2);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.getPhotoAspectRatio();
      assertTrue(homeEnvironment0.isAllLevelsVisible());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.372821413206516
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_16_9;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setCeillingLightColor((-1737));
      homeEnvironment0.setSubpartSizeUnderLight(0.0F);
      AspectRatio aspectRatio1 = AspectRatio.VIEW_3D_RATIO;
      // Undeclared exception!
      try { 
        homeEnvironment0.setVideoAspectRatio(aspectRatio1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unsupported aspect ratio VIEW_3D_RATIO
         //
         verifyException("com.eteks.sweethome3d.model.HomeEnvironment", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.4959144560641855
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      homeEnvironment0.setSkyColor(0);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      Camera.Lens camera_Lens0 = Camera.Lens.SPHERICAL;
      Camera camera0 = new Camera(0, 689.09F, 1024.4161F, 1024.4161F, 1024.4161F, (-2631.2366F), 0L, camera_Lens0);
      LinkedList<Camera> linkedList1 = new LinkedList<Camera>();
      linkedList1.add(camera0);
      homeEnvironment0.setVideoQuality((-2008));
      LinkedList<Camera> linkedList2 = new LinkedList<Camera>();
      homeEnvironment0.setVideoCameraPath(linkedList0);
      linkedList1.push(camera0);
      homeEnvironment0.setCeillingLightColor(3);
      HomeEnvironment.DrawingMode[] homeEnvironment_DrawingModeArray0 = HomeEnvironment.DrawingMode.values();
      assertEquals(3, homeEnvironment_DrawingModeArray0.length);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("we:P=sz-f!d7n?", uRLContent0, 2.0F, 2.0F);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      Camera.Lens camera_Lens0 = Camera.Lens.FISHEYE;
      Camera camera0 = new Camera((-2264.0F), 5.0F, 596.85425F, (-170.0F), 0.0F, (-2334.215F), 2940, camera_Lens0);
      catalogTexture0.getCategory();
      catalogTexture0.setCategory((TexturesCategory) null);
      linkedList0.add(camera0);
      HomeEnvironment.DrawingMode.values();
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-440), homeTexture0, 629, homeTexture0, (-440), 240.0F);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      float float0 = homeEnvironment1.getSubpartSizeUnderLight();
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(320, homeEnvironment1.getVideoWidth());
      assertEquals(240.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals((-440), homeEnvironment1.getGroundColor());
      assertEquals(0.0F, float0, 0.01F);
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(629, homeEnvironment1.getSkyColor());
      assertEquals((-440), homeEnvironment1.getLightColor());
      assertNotSame(homeEnvironment1, homeEnvironment0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.555632017870312
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      URL uRL0 = MockURL.getFtpExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.SKY_TEXTURE;
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, (PropertyChangeListener) null);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setGroundColor((-58));
      homeEnvironment1.setPhotoWidth((-58));
      homeEnvironment1.clone();
      homeEnvironment0.clone();
      homeEnvironment1.setVideoWidth(65);
      assertEquals(49, homeEnvironment1.getVideoHeight());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("we:P=sz-f!d7n?", uRLContent0, 1.9095967F, 1.9095967F);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      Camera.Lens camera_Lens0 = Camera.Lens.FISHEYE;
      Camera camera0 = new Camera((-174.0858F), (-213.301F), 0.0F, 0.0F, 689.09F, 0.0F, 2221L, camera_Lens0);
      URLContent uRLContent1 = new URLContent(uRL0);
      CatalogTexture catalogTexture1 = new CatalogTexture((String) null, uRLContent1, 1.3333334F, 837.3003F);
      catalogTexture1.getCategory();
      catalogTexture1.setCategory((TexturesCategory) null);
      linkedList0.add(camera0);
      HomeEnvironment.DrawingMode.values();
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment.DrawingMode.values();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(5, homeTexture0, 2500, homeTexture0, 749, (-450.854F));
      int int0 = homeEnvironment0.getPhotoHeight();
      assertEquals(300, int0);
      
      int int1 = homeEnvironment0.getPhotoQuality();
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals((-450.854F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(5, homeEnvironment0.getGroundColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(2500, homeEnvironment0.getSkyColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(0, int1);
      assertEquals(749, homeEnvironment0.getLightColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(320, homeEnvironment0.getVideoWidth());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.786456060735981
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      HomeEnvironment.DrawingMode.values();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.DRAWING_MODE;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      homeEnvironment0.setPhotoQuality((-1));
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      Camera.Lens camera_Lens0 = Camera.Lens.FISHEYE;
      Camera camera0 = new Camera(0.0F, 0.0F, 1.5F, 0.0F, 1.0F, 1.5F, (-1910L), camera_Lens0);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(camera0, "", homeEnvironment1, homeEnvironment1);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      camera0.addPropertyChangeListener(propertyChangeListenerProxy1);
      homeEnvironment1.setSubpartSizeUnderLight((-1.0F));
      propertyChangeEvent0.toString();
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      HomeEnvironment homeEnvironment2 = homeEnvironment0.clone();
      Class<HomeEnvironment> class0 = HomeEnvironment.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", false);
      resourceURLContent0.getJAREntryName();
      CatalogTexture catalogTexture0 = new CatalogTexture("A?7$X>5.F3", "A?7$X>5.F3", resourceURLContent0, (-3195.2F), 1.0F, "A?7$X>5.F3", false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment2.setGroundTexture(homeTexture0);
      homeEnvironment2.getGroundTexture();
      homeEnvironment0.setGroundColor((-1));
      assertEquals((-1), homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.557702411245053
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      HomeEnvironment.DrawingMode.values();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.DRAWING_MODE;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      Camera.Lens camera_Lens0 = Camera.Lens.FISHEYE;
      Camera camera0 = new Camera(0.0F, 0.0F, 1.5F, 0.0F, 1.0F, 1.5F, (-1910L), camera_Lens0);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(camera0, "", homeEnvironment1, homeEnvironment1);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      camera0.addPropertyChangeListener(propertyChangeListenerProxy1);
      homeEnvironment1.setSubpartSizeUnderLight((-1.0F));
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      assertEquals((-1.0F), homeEnvironment1.getSubpartSizeUnderLight(), 0.01F);
      
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      HomeEnvironment homeEnvironment2 = homeEnvironment0.clone();
      Class<HomeEnvironment> class0 = HomeEnvironment.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", false);
      resourceURLContent0.getJAREntryName();
      CatalogTexture catalogTexture0 = new CatalogTexture("A?7$X>5.F3", "A?7$X>5.F3", resourceURLContent0, (-3195.2F), 1.0F, "A?7$X>5.F3", false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment2.setGroundTexture(homeTexture0);
      homeEnvironment2.getGroundTexture();
      assertEquals(13684944, homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.355825830420688
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "com.eteks.sweethome3d.tools.TemporaryURLContent");
      URL uRL0 = MockURL.getFileExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("we:P=sz-f!d7n?", uRLContent0, 2.0F, 2.0F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      Camera.Lens camera_Lens0 = Camera.Lens.NORMAL;
      Camera camera0 = new Camera((-247.08784F), (-1440.552F), (-247.08784F), 473.7242F, 2940, (-3285.65F), 264, camera_Lens0);
      catalogTexture0.getCategory();
      catalogTexture0.setCategory((TexturesCategory) null);
      linkedList0.add(camera0);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setVideoCameraPath(linkedList0);
      homeEnvironment0.setCeillingLightColor(2940);
      HomeEnvironment.DrawingMode.values();
      homeEnvironment0.setWallsAlpha(473.7242F);
      Random.setNextRandom(264);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("<BVL9kR^g/u>", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("^HJ`v(O", propertyChangeListenerProxy1);
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.clone();
      homeEnvironment0.setAllLevelsVisible(true);
      assertTrue(homeEnvironment0.isAllLevelsVisible());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.6376398674083723
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      homeEnvironment0.setSkyColor(0);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Camera camera0 = new Camera(1.0F, (-2631.2366F), 0.0F, 0.0F, 1.0F, (-1.0F));
      camera0.clone();
      Object object0 = new Object();
      Object object1 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(object1, "^HJ`v(O", "^HJ`v(O", object0);
      propertyChangeEvent0.toString();
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("}", propertyChangeListenerProxy0);
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.setCeillingLightColor(4196);
      homeEnvironment0.getGroundTexture();
      int int0 = homeEnvironment0.getPhotoQuality();
      assertEquals(0, homeEnvironment0.getSkyColor());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.3823452227303257
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      CatalogTexture catalogTexture0 = new CatalogTexture("Unsupported aspect ratio ", (Content) null, 14, 2.13857293E9F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      TexturesCategory texturesCategory0 = new TexturesCategory("Unsupported aspect ratio ");
      texturesCategory0.equals((Object) null);
      catalogTexture0.setCategory(texturesCategory0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(14, homeTexture0, 14, 2109, 3627.6F);
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      AspectRatio aspectRatio1 = AspectRatio.VIEW_3D_RATIO;
      homeEnvironment1.setPhotoAspectRatio(aspectRatio1);
      homeEnvironment1.getPhotoWidth();
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment1.getVideoCameraPath();
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      assertEquals(AspectRatio.SQUARE_RATIO, homeEnvironment0.getVideoAspectRatio());
      assertEquals(2109, homeEnvironment2.getLightColor());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("we:P=sz-f!d7n?", uRLContent0, 2.0F, 2.0F);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(273, homeTexture0, (-45), homeTexture0, (-45), 2.0F);
      CatalogTexture catalogTexture1 = new CatalogTexture("we:P=sz-f!d7n?", "we:P=sz-f!d7n?", uRLContent0, (-1.0F), 300.0F, "}i;JnY>#'sgU dd8p");
      catalogTexture0.compareTo(catalogTexture1);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      CatalogTexture catalogTexture2 = new CatalogTexture((String) null, uRLContent0, 0, 2348.6284F);
      catalogTexture2.getCategory();
      homeEnvironment0.setSubpartSizeUnderLight(689.09F);
      catalogTexture0.setCategory((TexturesCategory) null);
      CatalogTexture catalogTexture3 = new CatalogTexture("com.eteks.sweethome3d.tools.OperatingSystem", "hCxBpMN5|1fx", uRLContent0, (-1.0F), (-15.329F), "com.eteks.sweethome3d.tools.OperatingSystem", false);
      TexturesCategory texturesCategory0 = new TexturesCategory("hCxBpMN5|1fx");
      catalogTexture3.setCategory((TexturesCategory) null);
      CatalogTexture catalogTexture4 = new CatalogTexture("", "", uRLContent0, (-15.329F), 300.0F, "0Q");
      HomeTexture homeTexture1 = new HomeTexture(catalogTexture4);
      homeEnvironment0.clone();
      assertEquals(689.09F, homeEnvironment0.getSubpartSizeUnderLight(), 0.01F);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      MockURL.getFileExample();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "jp=pH7wE");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      LinkedList<Camera> linkedList1 = new LinkedList<Camera>();
      TexturesCategory texturesCategory0 = new TexturesCategory("}i;JnY>#'sgU dd8p");
      CatalogTexture catalogTexture0 = new CatalogTexture("", (Content) null, (-2085), 655.3F, true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-2085), homeTexture0, 2940, homeTexture0, (-252), (-1079.0F));
      homeEnvironment0.getGroundTexture();
      assertEquals((-252), homeEnvironment0.getLightColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals((-1079.0F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals((-2085), homeEnvironment0.getGroundColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(2940, homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.300534891680103
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment1.setDrawingMode(homeEnvironment_DrawingMode0);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment1.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setPhotoHeight(0);
      homeEnvironment1.setGroundColor(0);
      homeEnvironment1.getSubpartSizeUnderLight();
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("}T9oXG_z", "", temporaryURLContent0, 0, (-934.7502F), "IatO'{et(`zi :){ZH");
      CatalogTexture catalogTexture1 = new CatalogTexture("IatO'{et(`zi :){ZH", temporaryURLContent0, 0.0F, 2275.3264F, true);
      catalogTexture0.compareTo(catalogTexture1);
      catalogTexture0.compareTo(catalogTexture1);
      CatalogTexture catalogTexture2 = new CatalogTexture("fMVaJ}'P4km86H", temporaryURLContent0, 0, 1.5F, true);
      catalogTexture0.compareTo(catalogTexture2);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setSkyTexture(homeTexture0);
      homeEnvironment1.setSkyColor(8192);
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setPhotoQuality((-1159));
      homeEnvironment1.setSubpartSizeUnderLight((-1159));
      homeEnvironment1.setSkyColor(8192);
      homeEnvironment0.getLightColor();
      homeEnvironment1.getSubpartSizeUnderLight();
      homeEnvironment0.getGroundColor();
      int int0 = homeEnvironment0.getVideoWidth();
      assertEquals((-1159), homeEnvironment0.getPhotoQuality());
      assertEquals(320, int0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("we:P=sz-f!d7n?", uRLContent0, 2.0F, 2.0F);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(264, homeTexture0, 264, homeTexture0, 2940, 264);
      CatalogTexture catalogTexture1 = new CatalogTexture("we:P=sz-f!d7n?", "}i;JnY>#'sgU dd8p", uRLContent0, 264, 2940, "we:P=sz-f!d7n?");
      catalogTexture0.compareTo(catalogTexture1);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      linkedList0.forEach(consumer0);
      homeEnvironment0.setVideoCameraPath(linkedList0);
      homeEnvironment0.setPhotoWidth(2940);
      homeEnvironment0.setPhotoHeight((-1850));
      int int0 = homeEnvironment0.getGroundColor();
      assertEquals((-1850), homeEnvironment0.getPhotoHeight());
      assertEquals(264, int0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.7300480657918285
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoQuality(5459);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      Camera.Lens camera_Lens0 = Camera.Lens.FISHEYE;
      Camera camera0 = new Camera((-1.0F), 5459, 264.0F, 2853.703F, 487.0831F, (-2844.5208F), 5459, camera_Lens0);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment0.isAllLevelsVisible();
      LinkedList<Camera> linkedList1 = new LinkedList<Camera>();
      linkedList1.offer(camera0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Camera.Lens camera_Lens1 = Camera.Lens.FISHEYE;
      Camera camera1 = new Camera((-3615.1F), (-1.0F), 5459, (-2844.5208F), 1024.4161F, (-1.0F), 5459, camera_Lens1);
      camera1.setCamera(camera0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setVideoCameraPath(linkedList1);
      homeEnvironment0.setCeillingLightColor(2434);
      HomeEnvironment.DrawingMode.values();
      homeEnvironment1.setAllLevelsVisible(false);
      String string0 = "";
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.9687776175299367
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("^HJ`v(O", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("<BVL9kR^g/u>", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("^HJ`v(O", propertyChangeListenerProxy0);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      homeEnvironment1.setPhotoWidth(300);
      HomeEnvironment.DrawingMode.values();
      homeEnvironment0.setVideoWidth((-45));
      homeEnvironment1.getVideoFrameRate();
      homeEnvironment0.getVideoHeight();
      homeEnvironment0.getVideoQuality();
      HomeEnvironment homeEnvironment2 = homeEnvironment0.clone();
      boolean boolean0 = homeEnvironment2.isObserverCameraElevationAdjusted();
      assertEquals((-45), homeEnvironment0.getVideoWidth());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.372821413206516
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("08<J-I8l6>nry", (Content) null, 1.0F, 69.12F, true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-7042), homeTexture0, (-7042), 1348, 1.0F);
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.getWallsAlpha();
      homeEnvironment0.getCeillingLightColor();
      homeEnvironment0.getDrawingMode();
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      assertFalse(homeEnvironment0.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("mO}RhqV", uRLContent0, 13, 1.0F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(13, homeTexture0, 13, homeTexture0, 13, 13);
      int int0 = homeEnvironment0.getCeillingLightColor();
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(13.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(13684944, int0);
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(13, homeEnvironment0.getGroundColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(13, homeEnvironment0.getSkyColor());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(13, homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("we:P=sz-f!d7n?", uRLContent0, 2.0F, 2.0F);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(264, homeTexture0, 264, homeTexture0, 2940, 264);
      CatalogTexture catalogTexture1 = new CatalogTexture("we:P=sz-f!d7n?", "}i;JnY>#'sgU dd8p", uRLContent0, 264, 2940, "we:P=sz-f!d7n?");
      catalogTexture0.compareTo(catalogTexture1);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment0.setPhotoQuality(264);
      catalogTexture1.getCategory();
      catalogTexture0.setCategory((TexturesCategory) null);
      CatalogTexture catalogTexture2 = new CatalogTexture((String) null, "}i;JnY>#'sgU dd8p", uRLContent0, (-2518.2F), 8192, (String) null, true);
      TexturesCategory texturesCategory0 = new TexturesCategory("0SF[0`");
      catalogTexture2.setCategory(texturesCategory0);
      HomeTexture homeTexture1 = new HomeTexture(catalogTexture2);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      int int0 = homeEnvironment1.getPhotoQuality();
      assertEquals(264, int0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.856882596414008
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("^HJ`v(O", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("<BVL9kR^g/u>", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("^HJ`v(O", propertyChangeListenerProxy0);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      homeEnvironment1.setPhotoWidth(300);
      homeEnvironment0.setPhotoWidth(3529);
      assertEquals(3529, homeEnvironment0.getPhotoWidth());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.6401461330725327
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      Camera.Lens camera_Lens0 = Camera.Lens.SPHERICAL;
      Camera camera0 = new Camera(1852.75F, 1.0F, 1.0F, 1852.75F, 1852.75F, 1852.75F, 0L, camera_Lens0);
      Camera camera1 = camera0.clone();
      linkedList0.add(camera1);
      homeEnvironment0.setVideoCameraPath(linkedList0);
      homeEnvironment0.setPhotoWidth(300);
      homeEnvironment0.setLightColor((-4752));
      homeEnvironment0.setGroundColor(271);
      homeEnvironment0.getSkyColor();
      homeEnvironment0.setPhotoQuality(300);
      homeEnvironment0.setGroundColor(13427964);
      assertEquals((-4752), homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.6401461330725327
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      URL uRL0 = MockURL.getFtpExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, false);
      CatalogTexture catalogTexture0 = new CatalogTexture("GROUND_COLOR", resourceURLContent0, 0.0F, 557.9225F);
      homeEnvironment0.setSkyColor(0);
      CatalogTexture catalogTexture1 = new CatalogTexture("GROUND_COLOR", resourceURLContent0, 0, (-5377.1396F));
      catalogTexture1.getCategory();
      catalogTexture0.setCategory((TexturesCategory) null);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setGroundTexture(homeTexture0);
      homeEnvironment0.setLightColor((-58));
      homeEnvironment0.setGroundColor((-58));
      homeEnvironment0.getSkyColor();
      homeEnvironment0.setPhotoQuality(0);
      homeEnvironment0.setGroundColor((-58));
      assertEquals((-58), homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("we:P=sz-f!d7n?", uRLContent0, 2.0F, 2.0F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(264, homeTexture0, 264, homeTexture0, 2940, 264);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment0.setVideoWidth((-1093));
      Random.setNextRandom((-1093));
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.372821413206516
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment0.setVideoCameraPath(linkedList0);
      homeEnvironment0.setPhotoWidth(300);
      homeEnvironment0.setPhotoHeight(1135);
      int int0 = homeEnvironment0.getPhotoQuality();
      assertEquals(1135, homeEnvironment0.getPhotoHeight());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.6401461330725327
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment1.setVideoCameraPath(list0);
      homeEnvironment0.setGroundColor(0);
      HomeEnvironment homeEnvironment2 = homeEnvironment0.clone();
      homeEnvironment2.setVideoQuality(0);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.SUBPART_SIZE_UNDER_LIGHT;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      assertEquals(0, homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("^HJ`v(O", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("<BVL9kR^g/u>", propertyChangeListenerProxy0);
      homeEnvironment0.setVideoQuality(1);
      homeEnvironment0.setPhotoWidth(300);
      homeEnvironment0.getPhotoHeight();
      HomeEnvironment.DrawingMode[] homeEnvironment_DrawingModeArray0 = HomeEnvironment.DrawingMode.values();
      assertEquals(3, homeEnvironment_DrawingModeArray0.length);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      int int0 = (-700);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.LIGHT_COLOR;
      homeEnvironment0.setVideoQuality((-700));
      String string0 = "NAME";
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("NAME", (PropertyChangeListener) null);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setCeillingLightColor((-700));
      Camera.Lens camera_Lens0 = Camera.Lens.PINHOLE;
      Camera camera0 = new Camera((-700), (-700), (-700), (-700), 384.12134F, (-700), (-860L), camera_Lens0);
      PropertyChangeEvent propertyChangeEvent0 = null;
      try {
        propertyChangeEvent0 = new PropertyChangeEvent((Object) null, "NAME", homeEnvironment_Property0, camera0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null source
         //
         verifyException("java.util.EventObject", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.5168760810714366
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL_AND_OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setAllLevelsVisible(true);
      AspectRatio aspectRatio1 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio1);
      homeEnvironment0.setPhotoWidth(2385);
      homeEnvironment0.setVideoWidth(2385);
      assertEquals(AspectRatio.RATIO_4_3, homeEnvironment0.getPhotoAspectRatio());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.6709087878625355
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.VIEW_3D_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setSkyColor((-1021));
      homeEnvironment0.getVideoHeight();
      homeEnvironment0.getSkyColor();
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.831673301904631
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyColor(1878);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_QUALITY;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("temp", propertyChangeListener0);
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setVideoFrameRate(1723);
      homeEnvironment0.setLightColor((-143));
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoFrameRate(1723);
      homeEnvironment0.setPhotoHeight((-143));
      AspectRatio aspectRatio0 = AspectRatio.FREE_RATIO;
      // Undeclared exception!
      try { 
        homeEnvironment0.setVideoAspectRatio(aspectRatio0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unsupported aspect ratio FREE_RATIO
         //
         verifyException("com.eteks.sweethome3d.model.HomeEnvironment", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("we:P=sz-f!d7n?", uRLContent0, 2.0F, 2.0F);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(264, homeTexture0, (-45), homeTexture0, (-45), 2.0F);
      CatalogTexture catalogTexture1 = new CatalogTexture("we:P=sz-f!d7n?", "we:P=sz-f!d7n?", uRLContent0, (-1.0F), 300.0F, "}i;JnY>#'sgU dd8p");
      catalogTexture0.compareTo(catalogTexture1);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      CatalogTexture catalogTexture2 = new CatalogTexture((String) null, uRLContent0, 0, 2348.6284F);
      catalogTexture2.getCategory();
      catalogTexture0.setCategory((TexturesCategory) null);
      CatalogTexture catalogTexture3 = new CatalogTexture("com.eteks.sweethome3d.tools.OperatingSystem", "hCxBpMN5|1fx", uRLContent0, (-1.0F), (-15.329F), "com.eteks.sweethome3d.tools.OperatingSystem", false);
      TexturesCategory texturesCategory0 = new TexturesCategory("hCxBpMN5|1fx");
      catalogTexture3.setCategory((TexturesCategory) null);
      homeEnvironment0.setAllLevelsVisible(false);
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(2.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals((-45), homeEnvironment0.getSkyColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(264, homeEnvironment0.getGroundColor());
      assertEquals((-45), homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=3.466313298576017
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_ASPECT_RATIO;
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, (PropertyChangeListener) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "T");
      homeEnvironment0.setSubpartSizeUnderLight(5);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "7fsF6L*``e)*CtS");
      homeEnvironment0.setGroundColor(5);
      homeEnvironment0.setPhotoQuality(5);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.setVideoFrameRate(5);
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      AspectRatio aspectRatio1 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setVideoAspectRatio(aspectRatio1);
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment0.getVideoHeight();
      homeEnvironment0.clone();
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment0.getGroundColor();
      homeEnvironment0.getPhotoHeight();
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      int int0 = homeEnvironment0.getVideoFrameRate();
      assertEquals(AspectRatio.SQUARE_RATIO, homeEnvironment0.getPhotoAspectRatio());
      assertEquals(5, int0);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setLightColor(2263);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("^HJ`v(O", propertyChangeListener0);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setCeillingLightColor(11);
      assertTrue(homeEnvironment0.isAllLevelsVisible());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.1944064129383247
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("^HJ`v(O", propertyChangeListener0);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(object0, "^HJ`v(O", linkedList0, "vG(J$-L1qdOAl/y");
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("<BVL9kR^g/u>", propertyChangeListenerProxy0);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setAllLevelsVisible(true);
      assertTrue(homeEnvironment1.isAllLevelsVisible());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.3798389570661653
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment0.setVideoCameraPath(linkedList0);
      int int0 = 2380;
      homeEnvironment0.setPhotoQuality(2380);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_WIDTH;
      String string0 = "G9#c";
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("G9#c", propertyChangeListener0);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      URLContent uRLContent0 = new URLContent((URL) null);
      CatalogTexture catalogTexture0 = new CatalogTexture("", uRLContent0, 2380, (-1.0F), true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment(480, homeTexture0, 2380, 480, (-1264.12F));
      homeEnvironment1.getWallsAlpha();
      ResourceURLContent resourceURLContent0 = null;
      try {
        resourceURLContent0 = new ResourceURLContent((ClassLoader) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.tools.ResourceURLContent", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("we:P=sz-f!d7n?", uRLContent0, 2.0F, 2.0F);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(264, homeTexture0, (-45), homeTexture0, (-45), 2.0F);
      CatalogTexture catalogTexture1 = new CatalogTexture("we:P=sz-f!d7n?", "we:P=sz-f!d7n?", uRLContent0, (-1.0F), 300.0F, "}i;JnY>#'sgU dd8p");
      catalogTexture0.compareTo(catalogTexture1);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      CatalogTexture catalogTexture2 = new CatalogTexture((String) null, uRLContent0, 0, 2348.6284F);
      catalogTexture2.getCategory();
      catalogTexture1.setCategory((TexturesCategory) null);
      CatalogTexture catalogTexture3 = new CatalogTexture("we:P=sz-f!d7n?", "", uRLContent0, (-2518.2F), 0, (String) null, true);
      TexturesCategory texturesCategory0 = new TexturesCategory("0Q");
      catalogTexture0.setCategory(texturesCategory0);
      HomeTexture homeTexture1 = new HomeTexture(catalogTexture1);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(264, homeEnvironment0.getGroundColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(2.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals((-45), homeEnvironment0.getSkyColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals((-45), homeEnvironment0.getLightColor());
      assertNotSame(homeEnvironment0, homeEnvironment1);
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.2263282181113064
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      List<Camera> list0 = homeEnvironment1.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("\"twZrK", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("sun.net.www.protocol", propertyChangeListenerProxy0);
      Object object0 = new Object();
      Object object1 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent("sun.net.www.protocol", "PHOTO_WIDTH", list0, object1);
      propertyChangeListenerProxy1.propertyChange(propertyChangeEvent0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy1);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.GROUND_COLOR;
      homeEnvironment1.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy2);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      LinkedList<Camera> linkedList1 = new LinkedList<Camera>();
      homeEnvironment1.setVideoCameraPath((List<Camera>) null);
      LinkedList<Camera> linkedList2 = new LinkedList<Camera>();
      int int0 = 237;
      homeEnvironment0.setCeillingLightColor(237);
      HomeEnvironment.DrawingMode.values();
      boolean boolean0 = false;
      HomeTexture homeTexture0 = null;
      try {
        homeTexture0 = new HomeTexture((TextureImage) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.model.HomeTexture", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      HomeEnvironment.DrawingMode.values();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      homeEnvironment0.setPhotoQuality((-1));
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      Camera.Lens camera_Lens0 = Camera.Lens.FISHEYE;
      Camera camera0 = new Camera(0.0F, 0.0F, 1.5F, 0.0F, 1.0F, 1.5F, (-1910L), camera_Lens0);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(camera0, "", homeEnvironment1, homeEnvironment1);
      homeEnvironment1.setPhotoWidth((-2102));
      assertEquals((-2102), homeEnvironment1.getPhotoWidth());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.2654436797543704
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment0.setPhotoHeight(14);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("^HJ`v(O", propertyChangeListener0);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      homeEnvironment1.setPhotoWidth(14);
      homeEnvironment1.getPhotoHeight();
      HomeEnvironment.DrawingMode[] homeEnvironment_DrawingModeArray0 = HomeEnvironment.DrawingMode.values();
      assertEquals(3, homeEnvironment_DrawingModeArray0.length);
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.3809682098476954
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment0.setVideoCameraPath(linkedList0);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.WALLS_ALPHA;
      String string0 = "<BV\\L9kR^\\g/u>";
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("<BVL9kR^g/u>", propertyChangeListener0);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      Camera.Lens camera_Lens0 = Camera.Lens.FISHEYE;
      Camera camera0 = new Camera((-1900.1F), 1210.97F, (-1900.1F), (-2631.2366F), (-213.301F), 1210.97F, (-787L), camera_Lens0);
      LinkedList<Camera> linkedList1 = new LinkedList<Camera>();
      linkedList1.add(camera0);
      LinkedList<Camera> linkedList2 = new LinkedList<Camera>();
      homeEnvironment0.setVideoCameraPath((List<Camera>) null);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("<BVL9kR^g/u>", propertyChangeListenerProxy0);
      camera0.removePropertyChangeListener(propertyChangeListenerProxy1);
      linkedList1.push(camera0);
      homeEnvironment0.setCeillingLightColor(11053247);
      FileSystemHandling.shouldAllThrowIOExceptions();
      HomeEnvironment.DrawingMode.values();
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.getDrawingMode();
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("<BVL9kR^g/u>");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.<BVL9kR^g/u>
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=3.432811072189696
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoQuality((-1079));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      homeEnvironment1.setWallsAlpha((-1079));
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_QUALITY;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("PL,", propertyChangeListener0);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)5;
      byteArray0[1] = (byte) (-125);
      byteArray0[2] = (byte)2;
      byteArray0[3] = (byte) (-64);
      byteArray0[4] = (byte)87;
      byteArray0[5] = (byte)100;
      byteArray0[6] = (byte)86;
      byteArray0[7] = (byte)11;
      byteArray0[8] = (byte)34;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      PropertyChangeListener propertyChangeListener1 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      homeEnvironment1.setSkyColor((-1079));
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("", propertyChangeListener1);
      homeEnvironment1.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy1);
      homeEnvironment1.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment1.getVideoFrameRate();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "PHOTO_ASPECT_RATIO");
      homeEnvironment1.setPhotoWidth((-1079));
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setCeillingLightColor(25);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "PHOTO_ASPECT_RATIO");
      homeEnvironment0.getVideoWidth();
      homeEnvironment1.getPhotoQuality();
      homeEnvironment0.getVideoHeight();
      homeEnvironment0.getGroundTexture();
      homeEnvironment0.getVideoCameraPath();
      assertEquals(25, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=3.1271454652812127
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-289), (HomeTexture) null, (-289), (-289), 0.0F);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_WIDTH;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("}xxQ86Cf6fmQoPCd3OO", propertyChangeListener0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_16_9;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setCeillingLightColor(0);
      homeEnvironment0.setSkyColor(13684944);
      homeEnvironment0.setPhotoWidth(0);
      homeEnvironment0.setPhotoQuality((-473));
      homeEnvironment0.getGroundTexture();
      homeEnvironment0.getGroundTexture();
      homeEnvironment0.getGroundTexture();
      homeEnvironment0.setSkyTexture((HomeTexture) null);
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.setSubpartSizeUnderLight(2495.8F);
      homeEnvironment0.getGroundColor();
      homeEnvironment0.getWallsAlpha();
      HomeEnvironment.Property homeEnvironment_Property1 = HomeEnvironment.Property.VIDEO_WIDTH;
      PropertyChangeListener propertyChangeListener1 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy((String) null, propertyChangeListener1);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(propertyChangeListenerProxy1, (String) null, (Object) null, homeEnvironment_Property0);
      propertyChangeListenerProxy1.propertyChange(propertyChangeEvent0);
      propertyChangeListenerProxy1.propertyChange((PropertyChangeEvent) null);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property1, propertyChangeListenerProxy1);
      HomeEnvironment.DrawingMode.values();
      homeEnvironment0.setPhotoHeight(2027);
      assertEquals(AspectRatio.RATIO_16_9, homeEnvironment0.getVideoAspectRatio());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.214534764133424
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment0.setVideoCameraPath(linkedList0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      homeEnvironment0.setSkyColor(1786);
      LinkedList<Camera> linkedList1 = new LinkedList<Camera>();
      Camera.Lens camera_Lens0 = Camera.Lens.NORMAL;
      Camera camera0 = new Camera((-2631.2366F), 1024.4161F, 1024.4161F, (-979.0F), (-1284.4F), 926.81F, 0L, camera_Lens0);
      LinkedList<Camera> linkedList2 = new LinkedList<Camera>();
      linkedList1.add(camera0);
      LinkedList<Camera> linkedList3 = new LinkedList<Camera>();
      homeEnvironment0.setVideoCameraPath(linkedList2);
      linkedList0.push(camera0);
      homeEnvironment0.setCeillingLightColor(3);
      HomeEnvironment.DrawingMode[] homeEnvironment_DrawingModeArray0 = HomeEnvironment.DrawingMode.values();
      assertEquals(3, homeEnvironment_DrawingModeArray0.length);
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.7808459625592628
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("we:P=sz-f!d7n?", uRLContent0, 2.0F, 2.0F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, false);
      CatalogTexture catalogTexture1 = new CatalogTexture("U", resourceURLContent0, 655.3F, 1.3333334F);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyColor(264);
      CatalogTexture catalogTexture2 = new CatalogTexture((String) null, resourceURLContent0, 0.0F, 1.3333334F);
      catalogTexture0.getCategory();
      catalogTexture2.setCategory((TexturesCategory) null);
      HomeTexture homeTexture1 = new HomeTexture(homeTexture0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setGroundTexture(homeTexture1);
      homeEnvironment1.setLightColor(2027);
      homeEnvironment1.setGroundColor(46);
      homeEnvironment1.getSkyColor();
      homeEnvironment1.setPhotoQuality(0);
      homeEnvironment0.setGroundColor(46);
      assertEquals(264, homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("^HJ`v(O", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("<BVL9kR^g/u>", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("<BVL9kR^g/u>", propertyChangeListenerProxy1);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_ASPECT_RATIO;
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy2);
      homeEnvironment0.setPhotoWidth(2768);
      int int0 = homeEnvironment0.getPhotoHeight();
      assertEquals(2768, homeEnvironment0.getPhotoWidth());
      assertEquals(300, int0);
  }
}
