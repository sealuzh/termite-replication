/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 14:39:33 GMT 2019
 */

package org.dom4j.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.File;
import java.io.FileDescriptor;
import java.io.FileNotFoundException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.PipedInputStream;
import java.io.PushbackInputStream;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StreamCorruptedException;
import java.io.StringReader;
import java.net.MalformedURLException;
import java.net.URISyntaxException;
import org.dom4j.DefaultDocumentFactory;
import org.dom4j.DocumentFactory;
import org.dom4j.Element;
import org.dom4j.ElementHandler;
import org.dom4j.Namespace;
import org.dom4j.QName;
import org.dom4j.io.DispatchHandler;
import org.dom4j.io.ElementStack;
import org.dom4j.io.PruningDispatchHandler;
import org.dom4j.io.PruningElementStack;
import org.dom4j.io.SAXContentHandler;
import org.dom4j.io.SAXReader;
import org.dom4j.util.NonLazyElement;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.lang.MockException;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.jaxen.SimpleVariableContext;
import org.jaxen.VariableContext;
import org.junit.runner.RunWith;
import org.xml.sax.Attributes;
import org.xml.sax.ErrorHandler;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;
import org.xml.sax.SAXNotRecognizedException;
import org.xml.sax.SAXParseException;
import org.xml.sax.XMLReader;
import org.xml.sax.ext.Attributes2Impl;
import org.xml.sax.ext.DefaultHandler2;
import org.xml.sax.ext.Locator2Impl;
import org.xml.sax.helpers.DefaultHandler;
import org.xml.sax.helpers.LocatorImpl;
import org.xml.sax.helpers.ParserAdapter;
import org.xml.sax.helpers.XMLFilterImpl;
import org.xml.sax.helpers.XMLReaderAdapter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SAXReader_ESTest extends SAXReader_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.3660231847196305
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      xMLFilterImpl0.notationDecl("J0Yn~NxM|IdkX}", "Error on line ", "J0Yn~NxM|IdkX}");
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      SAXReader sAXReader0 = new SAXReader((DocumentFactory) null);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      DataInputStream dataInputStream0 = new DataInputStream(mockFileInputStream0);
      try { 
        sAXReader0.read((InputStream) dataInputStream0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // null Nested exception: null
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.221854416328986
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("M#c|F");
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver1 = new SAXReader.SAXEntityResolver((String) null);
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver2 = new SAXReader.SAXEntityResolver((String) null);
      sAXReader_SAXEntityResolver2.resolveEntity((String) null, (String) null);
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver3 = new SAXReader.SAXEntityResolver("vx)");
      sAXReader_SAXEntityResolver1.resolveEntity((String) null, "");
      SAXReader sAXReader0 = new SAXReader(true);
      SAXReader sAXReader1 = new SAXReader();
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver4 = new SAXReader.SAXEntityResolver("x3](c7qdxwvi[^De");
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver5 = new SAXReader.SAXEntityResolver("//tmp/http:/xml.org/sax/features/namespace-prefixes0('C{<L)e0<5] OA");
      sAXReader_SAXEntityResolver5.resolveEntity("%mii)['2%VS\"n+mo&", "//tmp/http:/xml.org/sax/features/namespace-prefixes0('C{<L)e0<5] OA");
      // Undeclared exception!
      try { 
        sAXReader1.setProperty((String) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xerces.jaxp.SAXParserImpl$JAXPSAXParser", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      QName qName0 = QName.get(";t2w", "http://xml.org/sax/handlers/LexicalHandler");
      QName.get("org.jaxen.function.FloorFunction", "d;Pp%s");
      QName.get("//tmp/http:/xml.org/sax/features/namespace-prefixes0('C{<L)e0<5] OA");
      qName0.getDocumentFactory();
      SAXReader sAXReader0 = new SAXReader((DocumentFactory) null);
      sAXReader0.setFeature("http://xml.org/sax/features/namespaces", false);
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      DefaultDocumentFactory defaultDocumentFactory1 = new DefaultDocumentFactory();
      defaultDocumentFactory1.createElement("namespace-uri", "d;Pp%s");
      SAXReader sAXReader1 = null;
      try {
        sAXReader1 = new SAXReader(";t2w", false);
        fail("Expecting exception: SAXException");
      
      } catch(Throwable e) {
         //
         // SAX2 driver class ;t2w not found
         //
         verifyException("org.xml.sax.helpers.XMLReaderFactory", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.38995317957443
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("M#c|F");
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver1 = new SAXReader.SAXEntityResolver((String) null);
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver2 = new SAXReader.SAXEntityResolver((String) null);
      InputSource inputSource0 = sAXReader_SAXEntityResolver2.resolveEntity((String) null, (String) null);
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver3 = new SAXReader.SAXEntityResolver("vx)");
      sAXReader_SAXEntityResolver1.resolveEntity("$}q>Ou*I,BS[+zny?v", "");
      SAXReader sAXReader0 = new SAXReader(true);
      SAXReader sAXReader1 = new SAXReader();
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      defaultHandler2_0.endDTD();
      sAXReader1.setEntityResolver(sAXReader_SAXEntityResolver1);
      try { 
        sAXReader1.read(inputSource0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // null Nested exception: null
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.68669177650622
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver(";t2w");
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver1 = new SAXReader.SAXEntityResolver("tg,=>@[Qu\"A15d");
      sAXReader_SAXEntityResolver1.resolveEntity("'_y[t~c&R;>Y{g", "JP");
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver2 = new SAXReader.SAXEntityResolver("yFS}eM?6$}`Kg");
      InputSource inputSource0 = sAXReader_SAXEntityResolver1.resolveEntity(";t2w", "tg,=>@[Qu\"A15d");
      inputSource0.getByteStream();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0);
      StringReader stringReader0 = new StringReader("");
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver3 = new SAXReader.SAXEntityResolver("E(ZgT,2");
      sAXReader_SAXEntityResolver0.resolveEntity("hl<iFj:ev(,X,L", ":93Z%MluKm!'");
      SAXReader sAXReader1 = null;
      try {
        sAXReader1 = new SAXReader("7*#>9D/2");
        fail("Expecting exception: SAXException");
      
      } catch(Throwable e) {
         //
         // SAX2 driver class 7*#>9D/2 not found
         //
         verifyException("org.xml.sax.helpers.XMLReaderFactory", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      SAXReader sAXReader0 = new SAXReader(true);
      String string0 = null;
      // Undeclared exception!
      try { 
        sAXReader0.setXMLReaderClassName((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      SAXReader sAXReader0 = new SAXReader((String) null, false);
      try { 
        sAXReader0.setXMLReaderClassName("d;Pp%s");
        fail("Expecting exception: SAXException");
      
      } catch(SAXException e) {
         //
         // SAX2 driver class d;Pp%s not found
         //
         verifyException("org.xml.sax.helpers.XMLReaderFactory", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.3159059642037088
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("M#c|F");
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver1 = new SAXReader.SAXEntityResolver((String) null);
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver2 = new SAXReader.SAXEntityResolver((String) null);
      InputSource inputSource0 = sAXReader_SAXEntityResolver0.resolveEntity("1'tiD)}'/\"Zm", (String) null);
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver3 = new SAXReader.SAXEntityResolver((String) null);
      sAXReader_SAXEntityResolver1.resolveEntity("vx)", "");
      SAXReader sAXReader0 = new SAXReader(true);
      SAXReader sAXReader1 = new SAXReader();
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver4 = new SAXReader.SAXEntityResolver("");
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver5 = new SAXReader.SAXEntityResolver((String) null);
      sAXReader_SAXEntityResolver3.resolveEntity("1'tiD)}'/\"Zm", "k#j/T7yk?F]>.");
      try { 
        sAXReader0.read(inputSource0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // null Nested exception: null
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.6709087878625355
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DocumentFactory documentFactory0 = DefaultDocumentFactory.getInstance();
      SAXReader sAXReader0 = new SAXReader(documentFactory0, false);
      XMLReader xMLReader0 = sAXReader0.getXMLReader();
      assertNotNull(xMLReader0);
      
      boolean boolean0 = sAXReader0.isIncludeExternalDTDDeclarations();
      assertFalse(boolean0);
      
      sAXReader0.getDocumentFactory();
      SimpleVariableContext simpleVariableContext0 = new SimpleVariableContext();
      documentFactory0.createXPath("http://xml.org/sax/properties/declaration-handler", (VariableContext) simpleVariableContext0);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl(xMLReader0);
      SAXReader sAXReader1 = new SAXReader(xMLReader0);
      assertFalse(sAXReader1.isMergeAdjacentText());
      assertFalse(sAXReader1.isIgnoreComments());
      assertFalse(sAXReader1.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader1.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader1.isStripWhitespaceText());
      assertTrue(sAXReader1.isStringInternEnabled());
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = "('C{<L)e0<5] OA";
      stringArray0[1] = "http://xml.org/sax/features/namespace-prefixes";
      stringArray0[2] = "('C{<L)e0<5] OA";
      stringArray0[3] = "8:y'`?: W8Pp~rx";
      stringArray0[4] = "('C{<L)e0<5] OA";
      DispatchHandler dispatchHandler0 = new DispatchHandler();
      dispatchHandler0.removeHandler("h=xGJ");
      PruningElementStack pruningElementStack0 = new PruningElementStack(stringArray0, dispatchHandler0, 58);
      pruningElementStack0.getDispatchHandler();
      sAXReader0.setDefaultHandler((ElementHandler) null);
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isValidating());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertTrue(sAXReader0.isStringInternEnabled());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("");
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0);
      File file0 = MockFile.createTempFile("$d$I]FihH?", "u.5&qv)Xczq-nH6s");
      MockFile mockFile0 = new MockFile(file0, "$d$I]FihH?");
      // Undeclared exception!
      try { 
        sAXReader0.read((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.850863601176158
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory0, true);
      DispatchHandler dispatchHandler0 = new DispatchHandler();
      dispatchHandler0.removeHandler("N<Qc&W)idQ");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "wKx8");
      dispatchHandler0.addHandler("iU)pK_r,KO(W22^$", (ElementHandler) null);
      sAXReader0.addHandler("", dispatchHandler0);
      sAXReader0.setIncludeExternalDTDDeclarations(false);
      sAXReader0.setIncludeInternalDTDDeclarations(false);
      sAXReader0.removeHandler("Kz*On");
      sAXReader0.isMergeAdjacentText();
      sAXReader0.isValidating();
      sAXReader0.getXMLReader();
      sAXReader0.setEncoding("");
      try { 
        MockURL.URL("Kz*On", "Validation not supported for XMLReader: ", (-915), "wKx8");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // Invalid port number :-915
         //
         verifyException("java.net.URL", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.3386315517754213
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver(";t2w");
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver1 = new SAXReader.SAXEntityResolver("'b^5fSsge$oS");
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver2 = new SAXReader.SAXEntityResolver("substring-before() requires two arguments.");
      sAXReader_SAXEntityResolver0.resolveEntity((String) null, "lookupPre%i)");
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver3 = new SAXReader.SAXEntityResolver("lookupPre%i)");
      sAXReader_SAXEntityResolver1.resolveEntity("", "substring-before() requires two arguments.");
      SAXReader sAXReader0 = new SAXReader();
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver4 = new SAXReader.SAXEntityResolver("//tmp/home/ubuntu/termite/projects/62_dom4j/STXJ::?7km%+{S/-\"T8LSPWh$(8WnO+i/attribute0a0.tmp");
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver5 = new SAXReader.SAXEntityResolver(";t2w");
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver6 = new SAXReader.SAXEntityResolver("//tmp/J0Yn~NxM|IdkX}0B_\"k!j'F");
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver7 = new SAXReader.SAXEntityResolver("http://xml.org/sax/features/namespaces");
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver8 = new SAXReader.SAXEntityResolver("http://xml.org/sax/features/namespaces");
      sAXReader_SAXEntityResolver8.resolveEntity("//tmp/J0Yn~NxM|IdkX}0B_\"k!j'F", "A';");
      StringReader stringReader0 = new StringReader(";t2w");
      try { 
        sAXReader0.read((Reader) stringReader0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line 1 of document  : Content is not allowed in prolog. Nested exception: Content is not allowed in prolog.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory0);
      sAXReader0.getXMLFilter();
      sAXReader0.installXMLFilter((XMLReader) null);
      sAXReader0.getXMLFilter();
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      // Undeclared exception!
      try { 
        sAXReader0.configureReader((XMLReader) null, defaultHandler2_0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.io.SAXHelper", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      MockException mockException0 = new MockException();
      SAXReader sAXReader0 = new SAXReader((DocumentFactory) null);
      sAXReader0.isStripWhitespaceText();
      Locator2Impl locator2Impl0 = new Locator2Impl();
      Locator2Impl locator2Impl1 = new Locator2Impl(locator2Impl0);
      LocatorImpl locatorImpl0 = new LocatorImpl(locator2Impl0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.5010693989799213
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader(true);
      DispatchHandler dispatchHandler0 = sAXReader0.getDispatchHandler();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      dispatchHandler0.removeHandler("@bNBSqh)");
      xMLFilterImpl0.processingInstruction((String) null, "@bNBSqh)");
      sAXReader0.setEntityResolver(xMLFilterImpl0);
      sAXReader0.setIgnoreComments(true);
      sAXReader0.isStringInternEnabled();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl();
      String string0 = "p";
      SAXParseException sAXParseException0 = new SAXParseException("`0ydS:4Zy4s3{CgD=", (String) null, "p", (-1280), 2588);
      dispatchHandler0.removeHandler("Mi~yASP");
      MockException mockException0 = new MockException(sAXParseException0);
      sAXParseException0.getMessage();
      SAXParseException sAXParseException1 = new SAXParseException((String) null, (String) null, "@bNBSqh)", (-880), 2588, mockException0);
      xMLFilterImpl0.error(sAXParseException1);
      SAXContentHandler sAXContentHandler0 = sAXReader0.createContentHandler(xMLFilterImpl0);
      try { 
        sAXReader0.configureReader(xMLFilterImpl0, sAXContentHandler0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Validation not supported for XMLReader: org.xml.sax.helpers.XMLFilterImpl@2de12888 Nested exception: Feature: http://xml.org/sax/features/validation
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.3219307546040406
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      QName qName0 = defaultDocumentFactory0.createQName("P+CR<#]0xfw&F%", (Namespace) null);
      DocumentFactory documentFactory0 = qName0.getDocumentFactory();
      SAXReader sAXReader0 = new SAXReader(documentFactory0);
      StringReader stringReader0 = new StringReader("//tmp/http:/xml.org/sax/features/namespace-prefixes0('C{<L)e0<5] OA");
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter(xMLFilterImpl0);
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(parserAdapter0);
      SAXReader sAXReader1 = new SAXReader(xMLFilterImpl1, true);
      try { 
        sAXReader1.read((Reader) stringReader0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Validation not supported for XMLReader: org.xml.sax.helpers.XMLFilterImpl@5ef5c283 Nested exception: Feature: http://xml.org/sax/features/validation Nested exception: Validation not supported for XMLReader: org.xml.sax.helpers.XMLFilterImpl@5ef5c283 Nested exception: Feature: http://xml.org/sax/features/validation
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader(true);
      DispatchHandler dispatchHandler0 = sAXReader0.getDispatchHandler();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      dispatchHandler0.removeHandler("@bNBSqh)");
      xMLFilterImpl0.processingInstruction((String) null, "@bNBSqh)");
      sAXReader0.setEntityResolver(xMLFilterImpl0);
      sAXReader0.setIgnoreComments(true);
      sAXReader0.isStringInternEnabled();
      sAXReader0.getEntityResolver();
      SAXParseException sAXParseException0 = new SAXParseException("`0ydS:4Zy4s3{CgD=", (String) null, "p", (-1280), 2588);
      dispatchHandler0.removeHandler("Mi~yASP");
      try { 
        MockURL.URL("L4s$'(]WLD.M_ ", "http://xml.org/sax/features/namespace-prefixes", 2588, "p");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // unknown protocol: l4s$'(]wld.m_ 
         //
         verifyException("java.net.URL", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.3334433711830367
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader((XMLReader) null);
      try { 
        sAXReader0.read("^5lNkLg M8");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no protocol: ^5lNkLg M8 Nested exception: no protocol: ^5lNkLg M8
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.3111802789964604
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      String string0 = "//home/ubuntu/termite/projects/62_dom4j/STXJ::?7km%+{S/-\"T8LS\\PWh$(8WnO+i/attribute0a";
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 118, 118);
      StringReader stringReader0 = new StringReader("I-=");
      SAXReader sAXReader0 = new SAXReader(false);
      String string1 = "org.jaxen.expr.DefaultXPathFactory";
      try { 
        sAXReader0.read((Reader) stringReader0, "org.jaxen.expr.DefaultXPathFactory");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line 1 of document file:///home/ubuntu/termite/projects/62_dom4j/org.jaxen.expr.DefaultXPathFactory : Content is not allowed in prolog. Nested exception: Content is not allowed in prolog.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.574848024120882
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      xMLReaderAdapter0.endPrefixMapping((String) null);
      xMLReaderAdapter0.processingInstruction((String) null, "Element");
      xMLReaderAdapter0.endDocument();
      SAXReader sAXReader0 = new SAXReader(parserAdapter0);
      sAXReader0.setXMLReader(parserAdapter0);
      SAXReader sAXReader1 = new SAXReader((DocumentFactory) null, true);
      sAXReader1.getErrorHandler();
      PruningDispatchHandler pruningDispatchHandler0 = new PruningDispatchHandler();
      sAXReader1.setDispatchHandler(pruningDispatchHandler0);
      SAXReader sAXReader2 = new SAXReader((String) null);
      sAXReader2.setErrorHandler((ErrorHandler) null);
      pruningDispatchHandler0.removeHandler("4)`GZ=gpl[gKdy");
      try { 
        sAXReader0.read((String) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // null Nested exception: null
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl1);
      sAXReader0.setStringInternEnabled(false);
      sAXReader0.installXMLFilter(xMLFilterImpl1);
      String string0 = "";
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)46;
      byteArray0[2] = (byte)96;
      byteArray0[3] = (byte) (-75);
      byteArray0[4] = (byte) (-58);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0, 2949);
      PipedInputStream pipedInputStream0 = new PipedInputStream(13);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(bufferedInputStream0, pipedInputStream0);
      ObjectInputStream objectInputStream0 = null;
      try {
        objectInputStream0 = new ObjectInputStream(sequenceInputStream0);
        fail("Expecting exception: StreamCorruptedException");
      
      } catch(Throwable e) {
         //
         // invalid stream header: FF2E60B5
         //
         verifyException("java.io.ObjectInputStream", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.582759519683406
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      sAXReader0.isIgnoreComments();
      DispatchHandler dispatchHandler0 = sAXReader0.getDispatchHandler();
      dispatchHandler0.resetHandlers();
      dispatchHandler0.resetHandlers();
      dispatchHandler0.removeHandler((String) null);
      sAXReader0.setMergeAdjacentText(true);
      sAXReader0.getErrorHandler();
      sAXReader0.setDispatchHandler(dispatchHandler0);
      sAXReader0.setErrorHandler((ErrorHandler) null);
      dispatchHandler0.removeHandler("org.dom4j.tree.DefaultComment");
      try { 
        sAXReader0.read("\" data: ");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no protocol: \" data:  Nested exception: no protocol: \" data: 
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.372821413206516
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory0, false);
      DefaultDocumentFactory defaultDocumentFactory1 = new DefaultDocumentFactory();
      defaultDocumentFactory1.createElement("7\"_])FaCL|>q&NWm~hP", "7\"_])FaCL|>q&NWm~hP");
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      defaultHandler2_0.endDTD();
      defaultHandler2_0.resolveEntity("http://xml.org/sax/features/namespace-prefixes", "");
      try { 
        sAXReader0.read((InputSource) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // null Nested exception: null
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      DocumentFactory documentFactory0 = DefaultDocumentFactory.getInstance();
      SAXReader sAXReader0 = new SAXReader(documentFactory0, false);
      boolean boolean0 = sAXReader0.isIncludeInternalDTDDeclarations();
      assertFalse(boolean0);
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isValidating());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isMergeAdjacentText());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl1);
      File file0 = MockFile.createTempFile("('C{<L)e0<5] OA", "http://xml.org/sax/features/namespace-prefixes");
      MockFile mockFile0 = new MockFile(file0, "('C{<L)e0<5] OA");
      try { 
        sAXReader0.read((File) mockFile0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // null Nested exception: null
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.34569526804514
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("M#c|F");
      String string0 = null;
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver1 = new SAXReader.SAXEntityResolver((String) null);
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver2 = new SAXReader.SAXEntityResolver((String) null);
      sAXReader_SAXEntityResolver2.uriPrefix = null;
      sAXReader_SAXEntityResolver2.resolveEntity((String) null, (String) null);
      sAXReader_SAXEntityResolver1.resolveEntity((String) null, "org.dom4j.io.SAXReader");
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver3 = new SAXReader.SAXEntityResolver("vx)");
      sAXReader_SAXEntityResolver1.resolveEntity("$}q>Ou*I,BS[+zny?v", "");
      SAXReader sAXReader0 = new SAXReader(true);
      SAXReader sAXReader1 = new SAXReader();
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver4 = new SAXReader.SAXEntityResolver("x3](c7qdxwvi[^De");
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver5 = new SAXReader.SAXEntityResolver("//tmp/http:/xml.org/sax/features/namespace-prefixes0('C{<L)e0<5] OA");
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver6 = new SAXReader.SAXEntityResolver("Ss(M^3e9X");
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver7 = new SAXReader.SAXEntityResolver("d#}2lKl");
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver8 = new SAXReader.SAXEntityResolver("");
      File file0 = MockFile.createTempFile("http://xml.org/sax/features/string-interning", "http://xml.org/sax/features/string-interning");
      try { 
        sAXReader0.read(file0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line -1 of document  : Premature end of file. Nested exception: Premature end of file.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.3891188032707174
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      DispatchHandler dispatchHandler0 = new DispatchHandler();
      PruningDispatchHandler pruningDispatchHandler0 = new PruningDispatchHandler();
      String string0 = "";
      pruningDispatchHandler0.removeHandler("");
      dispatchHandler0.setDefaultHandler(pruningDispatchHandler0);
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)10, (byte)10);
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl1);
      sAXReader0.installXMLFilter(xMLFilterImpl0);
      SAXReader sAXReader1 = new SAXReader(true);
      String string1 = "";
      try { 
        sAXReader1.read((InputStream) byteArrayInputStream0, "");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line -1 of document  : Premature end of file. Nested exception: Premature end of file.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.310411993418718
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("M#c|F");
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver1 = new SAXReader.SAXEntityResolver("M#c|F");
      sAXReader_SAXEntityResolver0.resolveEntity("Wek(2W}=3D@|XBRp2", (String) null);
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver2 = new SAXReader.SAXEntityResolver("yFS}eM?6$}`Kg");
      InputSource inputSource0 = sAXReader_SAXEntityResolver1.resolveEntity("kQ~SN{\"P/rP=cTWyD", "hl<iFj:ev(,X,L");
      sAXReader_SAXEntityResolver2.resolveEntity((String) null, "yFS}eM?6$}`Kg");
      inputSource0.getByteStream();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0);
      StringReader stringReader0 = new StringReader("[(DefaultNameStep): ");
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver3 = new SAXReader.SAXEntityResolver("yhh:");
      sAXReader_SAXEntityResolver2.resolveEntity((String) null, "");
      SAXReader sAXReader1 = new SAXReader((String) null);
      assertFalse(sAXReader1.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader1.isMergeAdjacentText());
      assertTrue(sAXReader1.isStringInternEnabled());
      assertFalse(sAXReader1.isStripWhitespaceText());
      assertFalse(sAXReader1.isIgnoreComments());
      assertFalse(sAXReader1.isIncludeInternalDTDDeclarations());
      
      DefaultHandler defaultHandler0 = new DefaultHandler();
      sAXReader0.configureReader(xMLFilterImpl0, defaultHandler0);
      sAXReader0.createContentHandler(xMLFilterImpl0);
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.6709087878625355
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      String string0 = "";
      sAXReader0.removeHandler("");
      sAXReader0.getXMLFilter();
      boolean boolean0 = true;
      SAXReader sAXReader1 = new SAXReader((XMLReader) null, true);
      String string1 = "";
      try { 
        sAXReader0.setProperty("", (Object) null);
        fail("Expecting exception: SAXNotRecognizedException");
      
      } catch(SAXNotRecognizedException e) {
         //
         // Property '' is not recognized.
         //
         verifyException("org.apache.xerces.parsers.AbstractSAXParser", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      String string0 = "aT?d";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "//home/ubuntu/termite/projects/62_dom4j/STXJ::?7km%+{S/-\"T8LSPWh$(8WnO+i/attribute0a");
      SAXReader sAXReader0 = new SAXReader(false);
      sAXReader0.createXMLReader();
      String string1 = "V7uPb";
      try { 
        sAXReader0.setXMLReaderClassName("V7uPb");
        fail("Expecting exception: SAXException");
      
      } catch(SAXException e) {
         //
         // SAX2 driver class V7uPb not found
         //
         verifyException("org.xml.sax.helpers.XMLReaderFactory", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=3.2390954562106087
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl1);
      File file0 = MockFile.createTempFile("('C{<L)e0<5] OA", "http://xml.org/sax/features/namespace-prefixes");
      MockFile mockFile0 = new MockFile(file0, "('C{<L)e0<5] OA");
      try { 
        sAXReader0.read("^5lNkLg M8");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // No parent for filter Nested exception: No parent for filter
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      char[] charArray0 = new char[5];
      charArray0[0] = '3';
      charArray0[1] = 'o';
      char[] charArray1 = new char[1];
      charArray1[0] = '3';
      xMLReaderAdapter0.characters(charArray1, (-1533), 0);
      charArray0[2] = '@';
      charArray0[3] = 'T';
      charArray0[4] = 'R';
      parserAdapter0.characters(charArray0, 4, (-1856));
      SAXReader sAXReader0 = new SAXReader(parserAdapter0, false);
      sAXReader0.isStringInternEnabled();
      sAXReader0.setIncludeInternalDTDDeclarations(false);
      sAXReader0.getEncoding();
      String string0 = "iP'_Jq$";
      Attributes2Impl attributes2Impl0 = null;
      try {
        attributes2Impl0 = new Attributes2Impl((Attributes) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.xml.sax.ext.Attributes2Impl", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.2394714949802967
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DocumentFactory documentFactory0 = DefaultDocumentFactory.getInstance();
      SAXReader sAXReader0 = new SAXReader(documentFactory0, true);
      sAXReader0.setIncludeExternalDTDDeclarations(true);
      sAXReader0.getXMLFilter();
      SAXContentHandler sAXContentHandler0 = sAXReader0.createContentHandler((XMLReader) null);
      sAXReader0.setStripWhitespaceText(false);
      sAXReader0.resetHandlers();
      sAXReader0.isStringInternEnabled();
      sAXReader0.setEntityResolver(sAXContentHandler0);
      sAXReader0.setEntityResolver(sAXContentHandler0);
      sAXReader0.isStringInternEnabled();
      String string0 = null;
      sAXReader0.installXMLFilter((XMLReader) null);
      sAXReader0.removeHandler((String) null);
      try { 
        sAXReader0.setProperty("org.dom4j.dom.DOMProcessingInstruction", (Object) null);
        fail("Expecting exception: SAXNotRecognizedException");
      
      } catch(SAXNotRecognizedException e) {
         //
         // Property 'org.dom4j.dom.DOMProcessingInstruction' is not recognized.
         //
         verifyException("org.apache.xerces.parsers.AbstractSAXParser", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      defaultDocumentFactory0.createDocument();
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory0);
      defaultDocumentFactory0.createQName("", "7X,eu1[k:Z_}IK[Q=");
      defaultDocumentFactory0.createDocType("6vKitWU", "6vKitWU", "");
      sAXReader0.setDocumentFactory(defaultDocumentFactory0);
      sAXReader0.isStringInternEnabled();
      sAXReader0.setValidation(true);
      assertTrue(sAXReader0.isValidating());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory0, true);
      NonLazyElement nonLazyElement0 = new NonLazyElement("//tmp/http:/xml.org/sax/features/namespace-prefixes0('C{<L)e0<5] OA");
      nonLazyElement0.getParent();
      defaultDocumentFactory0.createAttribute((Element) null, "7\"_])FaCL|>q&NWm~hP", "Ur*s7O");
      boolean boolean0 = true;
      sAXReader0.setMergeAdjacentText(true);
      Object object0 = new Object();
      sAXReader0.isMergeAdjacentText();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      parserAdapter0.processingInstruction("7\"_])FaCL|>q&NWm~hP", "7\"_])FaCL|>q&NWm~hP");
      sAXReader0.setXMLReader(parserAdapter0);
      sAXReader0.setStripWhitespaceText(true);
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream("org.dom4j.io.SAXReader");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory0, true);
      sAXReader0.getEntityResolver();
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertTrue(sAXReader0.isValidating());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isMergeAdjacentText());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      SAXReader sAXReader0 = new SAXReader(parserAdapter0, true);
      sAXReader0.getErrorHandler();
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertTrue(sAXReader0.isValidating());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIgnoreComments());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.6220322287852307
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      DocumentFactory documentFactory0 = DefaultDocumentFactory.getInstance();
      SAXReader sAXReader0 = new SAXReader(documentFactory0, false);
      sAXReader0.getXMLReader();
      sAXReader0.isIncludeExternalDTDDeclarations();
      sAXReader0.getDocumentFactory();
      sAXReader0.getXMLReader();
      sAXReader0.createDefaultEntityResolver("");
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      DispatchHandler dispatchHandler0 = new DispatchHandler();
      dispatchHandler0.removeHandler("");
      dispatchHandler0.setDefaultHandler((ElementHandler) null);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)83;
      byteArray0[1] = (byte) (-108);
      byteArray0[2] = (byte)10;
      byteArray0[3] = (byte)58;
      byteArray0[4] = (byte) (-22);
      byteArray0[5] = (byte)119;
      byteArray0[6] = (byte)10;
      DefaultHandler defaultHandler0 = new DefaultHandler();
      sAXReader0.setErrorHandler(defaultHandler0);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0, 58);
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(pushbackInputStream0, byteArrayInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(pushbackInputStream0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory0);
      sAXReader0.getXMLReader();
      String string0 = "//tmp/http:/xml.org/sax/features/namespace-prefixes0('C{<L)e0<5] OA";
      try { 
        MockURI.URI("U1", "U1", "j$SGxDd(l;|S.*X", 38, "aT?d", "", "//tmp/http:/xml.org/sax/features/namespace-prefixes0('C{<L)e0<5] OA");
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Relative path in absolute URI: U1://U1@j$SGxDd(l;|S.*X:38aT%3Fd?#//tmp/http:/xml.org/sax/features/namespace-prefixes0('C%7B%3CL)e0%3C5]%20OA
         //
         verifyException("java.net.URI", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      defaultDocumentFactory0.createElement("aT?d", "wKx8");
      QName.get("~", ",X=1^?", "[:_r>/{6~$_r`r");
      StringReader stringReader0 = new StringReader("~");
      StringReader stringReader1 = new StringReader("~");
      SAXReader sAXReader0 = new SAXReader();
      sAXReader0.createDefaultEntityResolver("O*mj4?{^G?RS-B");
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isStripWhitespaceText());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.268438641774406
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("M#c|F");
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver1 = new SAXReader.SAXEntityResolver((String) null);
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver2 = new SAXReader.SAXEntityResolver((String) null);
      sAXReader_SAXEntityResolver2.resolveEntity((String) null, (String) null);
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver3 = new SAXReader.SAXEntityResolver("vx)");
      InputSource inputSource0 = sAXReader_SAXEntityResolver1.resolveEntity("$}q>Ou*I,BS[+zny?v", "");
      SAXReader sAXReader0 = new SAXReader(true);
      SAXReader sAXReader1 = new SAXReader();
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver4 = new SAXReader.SAXEntityResolver("x3](c7qdxwvi[^De");
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver5 = new SAXReader.SAXEntityResolver("//tmp/http:/xml.org/sax/features/namespace-prefixes0('C{<L)e0<5] OA");
      sAXReader_SAXEntityResolver5.resolveEntity("%mii)['2%VS\"n+mo&", "//tmp/http:/xml.org/sax/features/namespace-prefixes0('C{<L)e0<5] OA");
      try { 
        sAXReader0.read(inputSource0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line 1 of document file:///home/ubuntu/termite/projects/62_dom4j/ : Content is not allowed in prolog. Nested exception: Content is not allowed in prolog.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.3334433711830367
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      defaultDocumentFactory0.createComment(" of document ");
      DefaultDocumentFactory defaultDocumentFactory1 = new DefaultDocumentFactory();
      DefaultDocumentFactory defaultDocumentFactory2 = new DefaultDocumentFactory();
      defaultDocumentFactory2.createElement("//home/ubuntu/termite/projects/62_dom4j/STXJ::?7km%+{S/-\"T8LSPWh$(8WnO+i/attribute0a", "//home/ubuntu/termite/projects/62_dom4j/STXJ::?7km%+{S/-\"T8LSPWh$(8WnO+i/attribute0a");
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory1, false);
      try { 
        sAXReader0.read("//home/ubuntu/termite/projects/62_dom4j/STXJ::?7km%+{S/-\"T8LSPWh$(8WnO+i/attribute0a");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no protocol: //home/ubuntu/termite/projects/62_dom4j/STXJ::?7km%+{S/-\"T8LSPWh$(8WnO+i/attribute0a Nested exception: no protocol: //home/ubuntu/termite/projects/62_dom4j/STXJ::?7km%+{S/-\"T8LSPWh$(8WnO+i/attribute0a
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.8493821196946767
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      String string0 = null;
      SAXReader sAXReader0 = new SAXReader((String) null);
      sAXReader0.getDocumentFactory();
      sAXReader0.setIncludeInternalDTDDeclarations(false);
      sAXReader0.resetHandlers();
      sAXReader0.getXMLFilter();
      sAXReader0.getDispatchHandler();
      boolean boolean0 = true;
      sAXReader0.setIncludeExternalDTDDeclarations(true);
      // Undeclared exception!
      try { 
        sAXReader0.setFeature((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xerces.jaxp.SAXParserImpl$JAXPSAXParser", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=3.387864173496134
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      DispatchHandler dispatchHandler0 = new DispatchHandler();
      PruningDispatchHandler pruningDispatchHandler0 = new PruningDispatchHandler();
      pruningDispatchHandler0.removeHandler("");
      SAXReader sAXReader0 = new SAXReader((DocumentFactory) null, true);
      sAXReader0.getDocumentFactory();
      sAXReader0.getXMLReader();
      sAXReader0.createDefaultEntityResolver("");
      DispatchHandler dispatchHandler1 = new DispatchHandler();
      pruningDispatchHandler0.removeHandler("");
      dispatchHandler0.setDefaultHandler(dispatchHandler1);
      DefaultHandler defaultHandler0 = new DefaultHandler();
      sAXReader0.setErrorHandler(defaultHandler0);
      pruningDispatchHandler0.removeHandler("");
      try { 
        sAXReader0.read((String) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // null Nested exception: null
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory0, true);
      sAXReader0.getDispatchHandler();
      sAXReader0.getErrorHandler();
      PruningDispatchHandler pruningDispatchHandler0 = new PruningDispatchHandler();
      ElementStack elementStack0 = new ElementStack(3216);
      // Undeclared exception!
      try { 
        pruningDispatchHandler0.onEnd(elementStack0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.022248870579868
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      xMLReaderAdapter0.endDocument();
      SAXReader sAXReader0 = new SAXReader(parserAdapter0);
      sAXReader0.getDispatchHandler();
      sAXReader0.getErrorHandler();
      PruningDispatchHandler pruningDispatchHandler0 = new PruningDispatchHandler();
      sAXReader0.setDispatchHandler(pruningDispatchHandler0);
      sAXReader0.setErrorHandler((ErrorHandler) null);
      sAXReader0.getDispatchHandler();
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIgnoreComments());
      assertTrue(sAXReader0.isStringInternEnabled());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl((XMLReader) null);
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl1);
      PruningDispatchHandler pruningDispatchHandler0 = new PruningDispatchHandler();
      pruningDispatchHandler0.getHandler("//tmp/J0Yn~NxM|IdkX}0B_\"k!j'F");
      sAXReader0.addHandler("http://xml.org/sax/features/namespace-prefixes", (ElementHandler) null);
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      defaultHandler2_0.endDTD();
      defaultHandler2_0.resolveEntity("//tmp/J0Yn~NxM|IdkX}0B_\"k!j'F", "//tmp/J0Yn~NxM|IdkX}0B_\"k!j'F");
      sAXReader0.getErrorHandler();
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isStripWhitespaceText());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=3.2390954562106087
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl((XMLReader) null);
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl1);
      LocatorImpl locatorImpl0 = new LocatorImpl();
      LocatorImpl locatorImpl1 = new LocatorImpl(locatorImpl0);
      Locator2Impl locator2Impl0 = new Locator2Impl(locatorImpl0);
      try { 
        sAXReader0.read("//tmp/home/ubuntu/termite/projects/62_dom4j/STXJ::?7km%+{S/-\"T8LSPWh$(8WnO+i/attribute0a0.tmp");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // No parent for filter Nested exception: No parent for filter
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.8778952727983707
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      DispatchHandler dispatchHandler0 = new DispatchHandler();
      dispatchHandler0.removeHandler("iU)pK_r,KO(W22^$");
      defaultDocumentFactory0.createDocument("N<Qc&W)idQ");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "AkoDk8s");
      dispatchHandler0.addHandler("iU)pK_r,KO(W22^$", (ElementHandler) null);
      SAXReader sAXReader0 = new SAXReader(false);
      sAXReader0.addHandler("iU)pK_r,KO(W22^$", (ElementHandler) null);
      sAXReader0.setIncludeExternalDTDDeclarations(true);
      SAXReader sAXReader1 = new SAXReader(defaultDocumentFactory0, false);
      sAXReader1.setIncludeInternalDTDDeclarations(true);
      sAXReader0.isMergeAdjacentText();
      sAXReader1.isValidating();
      sAXReader1.getXMLReader();
      sAXReader0.setEncoding("N<Qc&W)idQ");
      try { 
        MockURL.URL("This should never happen. Caught: ", "This should never happen. Caught: ", 7, "//tmp/http:/xml.org/sax/features/namespace-prefixes0('C{<L)e0<5] OA");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // unknown protocol: this should never happen. caught: 
         //
         verifyException("java.net.URL", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory0, true);
      String string0 = "7\"_])FaCL|>q&NWm~hP";
      defaultDocumentFactory0.createElement("7\"_])FaCL|>q&NWm~hP", "wKx8");
      try { 
        sAXReader0.setFeature("Kz*On", true);
        fail("Expecting exception: SAXNotRecognizedException");
      
      } catch(SAXNotRecognizedException e) {
         //
         // Feature 'Kz*On' is not recognized.
         //
         verifyException("org.apache.xerces.parsers.AbstractSAXParser", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.9778661367769952
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver(" : ");
      sAXReader_SAXEntityResolver0.resolveEntity("", "<");
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver1 = new SAXReader.SAXEntityResolver("");
      sAXReader_SAXEntityResolver1.resolveEntity((String) null, "<");
      InputSource inputSource0 = sAXReader_SAXEntityResolver1.resolveEntity("org.dom4j.QName.singleton.strategy", "org.dom4j.io.SAXReader$SAXEntityResolver");
      inputSource0.getByteStream();
      sAXReader0.getXMLFilter();
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isIgnoreComments());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isStripWhitespaceText());
      
      SAXReader sAXReader1 = new SAXReader((XMLReader) null);
      assertTrue(sAXReader1.isStringInternEnabled());
      assertFalse(sAXReader1.isStripWhitespaceText());
      assertFalse(sAXReader1.isMergeAdjacentText());
      assertFalse(sAXReader1.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader1.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader1.isIgnoreComments());
      
      StringReader stringReader0 = new StringReader("w%*1");
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver2 = new SAXReader.SAXEntityResolver((String) null);
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver3 = new SAXReader.SAXEntityResolver("<");
      sAXReader_SAXEntityResolver3.resolveEntity("//tmp/http:/xml.org/sax/features/namespace-prefixes0('C{<L)e0<5] OA", (String) null);
      SAXReader sAXReader2 = new SAXReader((String) null);
      assertFalse(sAXReader2.isMergeAdjacentText());
      assertFalse(sAXReader2.isStripWhitespaceText());
      assertFalse(sAXReader2.isIncludeExternalDTDDeclarations());
      assertTrue(sAXReader2.isStringInternEnabled());
      assertFalse(sAXReader2.isIgnoreComments());
      assertFalse(sAXReader2.isIncludeInternalDTDDeclarations());
  }
}
