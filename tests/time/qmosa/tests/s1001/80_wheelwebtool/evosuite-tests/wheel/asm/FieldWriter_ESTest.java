/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 14:51:51 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import java.io.InputStream;
import java.io.PushbackInputStream;
import java.io.SequenceInputStream;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassReader;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.7847619280791474
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "org.apache.commons.io.filefilter.HiddenFileFilter", "org.apache.commons.io.filefilter.HiddenFileFilter", "org.apache.commons.io.filefilter.HiddenFileFilter", (Object) null);
      fieldWriter0.getSize();
      fieldWriter0.visitEnd();
      Attribute attribute0 = new Attribute((String) null);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-32);
      byteArray0[1] = (byte) (-1);
      fieldWriter0.visitAttribute(attribute0);
      attribute0.value = byteArray0;
      fieldWriter0.visitAttribute(attribute0);
      fieldWriter0.visitEnd();
      ByteVector byteVector0 = classWriter0.pool;
      ByteVector byteVector1 = byteVector0.putUTF8("org.apache.commons.io.filefilter.HiddenFileFilter");
      // Undeclared exception!
      fieldWriter0.put(byteVector1);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.4804779276453799
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1);
      classWriter0.version = 4681;
      String string0 = "Deprecated";
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4690, "Deprecated", "<R/jP{ob<o|cv*u", "Deprecated", "<R/jP{ob<o|cv*u");
      fieldWriter0.getSize();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "ConstantValue");
      ByteVector byteVector0 = new ByteVector(499);
      fieldWriter0.put(byteVector0);
      Attribute attribute0 = new Attribute("dI>z[;ISPiM");
      Attribute attribute1 = attribute0.next;
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.2525306450725109
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      ClassWriter classWriter0 = new ClassWriter(1);
      classWriter0.version = 49;
      String string0 = "<R/jP{ob<o|c\\v*u";
      classWriter0.version = 4681;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4681, "Deprecated", "<R/jP{ob<o|cv*u", "Signature", "<R/jP{ob<o|cv*u");
      fieldWriter0.getSize();
      ByteVector byteVector0 = new ByteVector(499);
      ByteVector byteVector1 = byteVector0.putInt(596);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-1);
      byteVector1.data = byteArray0;
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ByteVector", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.5250199997186045
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.newNameType("org.apache.commons.io.filefilter.HiddenFileFilter", "Deprecated");
      classWriter0.newFieldItem("", "Deprecated", "PF");
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "!>,(v}Fd", "org.apache.commons.io.filefilter.HiddenFileFilter", "Deprecated", (Object) null);
      fieldWriter0.getSize();
      ByteVector byteVector0 = new ByteVector(17);
      ByteVector byteVector1 = byteVector0.putInt((-525));
      byteVector1.putShort(8);
      ByteVector byteVector2 = byteVector1.put12(1048575, 16);
      fieldWriter0.put(byteVector2);
      Attribute attribute0 = new Attribute("!tJx9RgP9b>");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.5087598483524394
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ClassWriter classWriter0 = new ClassWriter(150);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 10, "Deprecated", "ump", (String) null, (Object) null);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.visitAnnotation("Deprecated", false);
      fieldWriter0.put(byteVector0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(20, int0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.2525306450725109
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777220);
      String string0 = "RuntimeVisibleAnnotations";
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 16777220, "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations");
      fieldWriter0.visitAnnotation("{l`h", true);
      fieldWriter0.getSize();
      Attribute attribute0 = new Attribute("Gd3?3+_qi");
      Attribute attribute1 = new Attribute("Gd3?3+_qi");
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader("Gd3?3+_qi");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.2525306450725109
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ClassWriter classWriter0 = new ClassWriter(1);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4681, "Deprecated", "Deprecated", "Deprecated", "Deprecated");
      fieldWriter0.getSize();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      // Undeclared exception!
      try { 
        fieldWriter0.put((ByteVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "org.apache.commons.i7.filefilter.HiddenFileFi.ter", "org.apache.commons.i7.filefilter.HiddenFileFi.ter", "org.apache.commons.i7.filefilter.HiddenFileFi.ter", (Object) null);
      Object object0 = new Object();
      FieldWriter fieldWriter1 = null;
      try {
        fieldWriter1 = new FieldWriter(classWriter0, 0, "", "", "", object0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value java.lang.Object@2a493877
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.5183960461125376
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.newNameType("org.apache.commons.io.filefilter.HiddenFileFilter", "Deprecated");
      classWriter0.newFieldItem("", "Deprecated", "PF");
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "!>,(v}Fd", "org.apache.commons.io.filefilter.HiddenFileFilter", "Deprecated", (Object) null);
      fieldWriter0.getSize();
      ByteVector byteVector0 = new ByteVector(17);
      ByteVector byteVector1 = byteVector0.putInt((-525));
      ByteVector byteVector2 = byteVector1.put12(1048575, 16);
      fieldWriter0.put(byteVector2);
      fieldWriter0.visitAnnotation("g]^sFE$J(Te{i/z", false);
      fieldWriter0.visitAnnotation("", true);
      fieldWriter0.put(byteVector0);
      assertSame(byteVector0, byteVector1);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.2885387096069334
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777220);
      String string0 = "RuntimeVisibleAnnotations";
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 16777220, "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations");
      fieldWriter0.getSize();
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.4804779276453799
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1);
      classWriter0.version = 49;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4681, "Deprecated", "<R/jP{ob<o|cv*u", "Deprecated", "<R/jP{ob<o|cv*u");
      fieldWriter0.getSize();
      ByteVector byteVector0 = new ByteVector(499);
      fieldWriter0.put(byteVector0);
      Attribute attribute0 = new Attribute("<R/jP{ob<o|cv*u");
      Attribute attribute1 = attribute0.next;
      Attribute attribute2 = null;
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4681);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "", "", "", "");
      Attribute attribute0 = new Attribute("");
      fieldWriter0.visitAttribute(attribute0);
      assertFalse(attribute0.isCodeAttribute());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.5087598483524394
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ClassWriter classWriter0 = new ClassWriter(150);
      classWriter0.newNameType("m] T2Xq2l", "");
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 418, "<init>", "ump", "ump", (Object) null);
      ByteVector byteVector0 = classWriter0.pool;
      byteVector0.put11(10, 418);
      fieldWriter0.visitAnnotation("<init>", true);
      fieldWriter0.put(byteVector0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(28, int0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.055308746499338
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(150);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 10, "Deprecated", "Deprecated", (String) null, (Object) null);
      fieldWriter0.getSize();
      fieldWriter0.getSize();
      int int0 = fieldWriter0.getSize();
      assertEquals(8, int0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.8361623253853443
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ClassWriter classWriter0 = new ClassWriter(1);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1249), "%kCv3\"}9:q(DH.", "Deprecated", "Deprecated", "~&");
      ClassWriter classWriter1 = new ClassWriter((-1249));
      ByteVector byteVector0 = classWriter1.pool;
      fieldWriter0.put(byteVector0);
      ByteVector byteVector1 = null;
      try {
        byteVector1 = new ByteVector((-2916));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ByteVector", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.8361623253853443
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ClassWriter classWriter0 = new ClassWriter(1);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4681, "Deprecated", "Deprecated", "Deprecated", "Deprecated");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
      ByteVector byteVector1 = new ByteVector(499);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.8659992569610426
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(150);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 10, "Deprecated", "Deprecated", (String) null, (Object) null);
      ByteVector byteVector0 = classWriter0.pool;
      ByteVector byteVector1 = byteVector0.putByte(150);
      fieldWriter0.put(byteVector0);
      assertSame(byteVector0, byteVector1);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.9859526183035509
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(292552704);
      classWriter0.newNameType("", "wheel.asm.ClassAdapter");
      ClassWriter classWriter1 = new ClassWriter(1);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter1, (-708), "<R/jP{ob<o|cv*u", "Signature", "", "");
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.6263397376937287
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      int int0 = 0;
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "org.apache.commons.io.filefilter.HiddenFileFilter", "org.apache.commons.io.filefilter.HiddenFileFilter", "org.apache.commons.io.filefilter.HiddenFileFilter", (Object) null);
      fieldWriter0.getSize();
      fieldWriter0.visitEnd();
      Attribute attribute0 = new Attribute((String) null);
      fieldWriter0.visitAttribute(attribute0);
      fieldWriter0.visitEnd();
      ByteVector byteVector0 = classWriter0.pool;
      ByteVector byteVector1 = byteVector0.putInt(1);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = null;
      int int0 = 65535;
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter((ClassWriter) null, 65535, ">*@`iBrF", ">*@`iBrF", "u@sq3\"hk#{J!PE9.9", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(150);
      int int0 = 6;
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0, 10);
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 6, "", "Deprecated", (String) null, pushbackInputStream0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value java.io.PushbackInputStream@75d4b271
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }
}
