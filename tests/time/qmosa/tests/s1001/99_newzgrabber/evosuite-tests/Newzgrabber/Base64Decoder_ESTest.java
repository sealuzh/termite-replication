/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 14:42:59 GMT 2019
 */

package Newzgrabber;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import Newzgrabber.Base64Decoder;
import Newzgrabber.BufferedCustomInputStream;
import Newzgrabber.Newzgrabber;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PrintStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Base64Decoder_ESTest extends Base64Decoder_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.5869819987032194
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "93|oHsCVsL;");
      byte[] byteArray0 = new byte[7];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byteArray0[0] = (byte) (-127);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArray0[1] = (byte) (-54);
      byteArray0[1] = (byte) (-127);
      byteArray0[3] = (byte)19;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byteArray0[4] = (byte)10;
      byteArray0[0] = (byte)62;
      byteArray0[6] = (byte)57;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ".");
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0, true);
      mockPrintStream0.format("93|oHsCVsL;", (Object[]) null);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, byteArrayOutputStream0);
      base64Decoder0.setBegin(true);
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      assertEquals(1L, base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.582647532242458
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)65;
      byteArray0[1] = (byte)35;
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte)19;
      byteArray0[4] = (byte)10;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byteArray0[5] = (byte)62;
      byteArray0[6] = (byte)57;
      byteArray0[7] = (byte)62;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0, 1, false);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0);
      Object[] objectArray0 = new Object[8];
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      mockPrintStream0.format("_N  E", objectArray0);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, byteArrayOutputStream0);
      base64Decoder0.LineCount = (-2064L);
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      assertEquals("_N  E", byteArrayOutputStream0.toString());
      assertEquals((-2063L), base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.5869819987032194
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)43;
      byteArray0[1] = (byte)35;
      byteArray0[2] = (byte)35;
      byteArray0[3] = (byte)19;
      byteArray0[4] = (byte)10;
      byteArray0[5] = (byte)62;
      byteArray0[6] = (byte)43;
      byteArray0[7] = (byte)62;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0, 1, false);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0);
      Object[] objectArray0 = new Object[8];
      objectArray0[1] = (Object) (byte)43;
      Object object0 = new Object();
      objectArray0[2] = object0;
      objectArray0[3] = (Object) (byte)43;
      objectArray0[4] = (Object) byteArrayInputStream0;
      Object object1 = new Object();
      objectArray0[6] = object1;
      objectArray0[7] = (Object) (byte)43;
      PrintStream printStream0 = mockPrintStream0.format("", objectArray0);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, printStream0);
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      assertEquals(1L, base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.5326914208398718
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)65;
      byteArray0[1] = (byte) (-32);
      byteArray0[2] = (byte) (-32);
      byteArray0[3] = (byte)19;
      byteArray0[4] = (byte)10;
      byteArray0[5] = (byte)62;
      byteArray0[6] = (byte)57;
      byteArray0[7] = (byte) (-18);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream((byte)10);
      MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0);
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) "";
      Object object3 = new Object();
      objectArray0[1] = object3;
      Object object4 = new Object();
      objectArray0[2] = object4;
      objectArray0[3] = (Object) (byte) (-32);
      objectArray0[4] = (Object) (byte)65;
      Object object5 = new Object();
      Object object6 = new Object();
      mockPrintStream0.format("/\u0000\u0001/", objectArray0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, mockPrintStream0);
      Newzgrabber.IsBatch = true;
      base64Decoder0.decodeStream();
      assertEquals(4, byteArrayOutputStream0.size());
      assertEquals(0L, base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.5326914208398718
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byteArray0[0] = (byte)65;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArray0[1] = (byte) (-54);
      byteArray0[2] = (byte)65;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ";t]Mg.40|[Oy");
      byteArray0[3] = (byte)19;
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      byteArray0[4] = (byte)10;
      byteArray0[0] = (byte)62;
      byteArray0[0] = (byte)57;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      ByteArrayOutputStream byteArrayOutputStream1 = new ByteArrayOutputStream();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, byteArrayOutputStream0);
      base64Decoder0.decodeStream();
      assertEquals(1L, base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.5785663521818436
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)47;
      byteArray0[2] = (byte)1;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byteArray0[3] = (byte)31;
      byteArray0[4] = (byte)10;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byteArray0[3] = (byte)57;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.markSupported();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      byteArrayOutputStream0.flush();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, byteArrayOutputStream0);
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      assertEquals(1L, base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.7046360973492382
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[26];
      byteArray0[0] = (byte)54;
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "OK");
      byteArray0[1] = (byte) (-27);
      byteArray0[13] = (byte)1;
      byteArray0[3] = (byte)19;
      byteArray0[1] = (byte)10;
      byteArray0[5] = (byte)62;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byteArray0[6] = (byte)57;
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "@U0M}f;{HFU");
      byteArray0[7] = (byte) (-92);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0, 2992, false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      BufferedCustomInputStream bufferedCustomInputStream1 = new BufferedCustomInputStream(byteArrayInputStream0, 49);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream1, byteArrayOutputStream0);
      base64Decoder0.decodeStream();
      assertEquals(1L, base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.6711893730418441
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byteArray0[0] = (byte)65;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArray0[1] = (byte) (-27);
      byteArray0[2] = (byte)65;
      byteArray0[1] = (byte)19;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      byteArray0[4] = (byte)10;
      byteArray0[0] = (byte)10;
      byteArray0[6] = (byte)57;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      byteArrayOutputStream0.write(byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0, (byte)19);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, byteArrayOutputStream0);
      base64Decoder0.decodeStream();
      assertEquals(2L, base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.5540761036710294
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "93|oHsCVsL;");
      byte[] byteArray0 = new byte[8];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byteArray0[0] = (byte)65;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArray0[1] = (byte) (-54);
      byteArray0[2] = (byte)65;
      byteArray0[3] = (byte)19;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byteArray0[4] = (byte)10;
      byteArray0[0] = (byte)62;
      byteArray0[6] = (byte)57;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ".");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0, true);
      bufferedCustomInputStream0.mark((-551));
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, byteArrayOutputStream0);
      base64Decoder0.decodeStream();
      assertEquals(1L, base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.1165141682948128
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "#.C+T#Frb*I2 ?}R");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Base64Decoder base64Decoder0 = new Base64Decoder((BufferedCustomInputStream) null, (OutputStream) null);
      base64Decoder0.setReader((InputStream) null);
      Newzgrabber.IsBatch = false;
      Newzgrabber.verbose = true;
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.ABORT = false;
      base64Decoder0.ProgressSet = false;
      base64Decoder0.updateProgress();
      base64Decoder0.ABORT = false;
      base64Decoder0.ABORT = false;
      base64Decoder0.setLineCount(2503L);
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      assertFalse(base64Decoder0.ProgressSet);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)125;
      byteArray0[1] = (byte)21;
      byteArray0[2] = (byte)67;
      byteArray0[3] = (byte) (-94);
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)122;
      byteArray0[6] = (byte)2;
      byteArray0[7] = (byte)13;
      byteArray0[8] = (byte)4;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "#\u0000\u0001\u0013");
      MockFile mockFile0 = new MockFile("O8Z");
      mockFile0.toURL();
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0, true);
      Base64Decoder base64Decoder0 = new Base64Decoder((BufferedCustomInputStream) null, mockFileOutputStream0);
      base64Decoder0.ABORT = false;
      base64Decoder0.ABORT = true;
      // Undeclared exception!
      try { 
        base64Decoder0.decodeStream();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Newzgrabber.Base64Decoder", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.608621558216484
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "93|oHsCVsL;");
      byte[] byteArray0 = new byte[8];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byteArray0[0] = (byte)65;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArray0[1] = (byte) (-54);
      byteArray0[2] = (byte)65;
      byteArray0[3] = (byte)19;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byteArray0[4] = (byte)10;
      byteArray0[0] = (byte)62;
      byteArray0[6] = (byte)57;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      byteArrayOutputStream0.write(byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ".");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0, 2, false);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, byteArrayOutputStream0);
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      assertEquals(1L, base64Decoder0.getLineCount());
  }
}
