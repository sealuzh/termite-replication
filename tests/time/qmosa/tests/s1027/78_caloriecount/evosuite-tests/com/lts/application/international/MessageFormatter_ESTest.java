/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 10:11:37 GMT 2019
 */

package com.lts.application.international;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.lts.application.ApplicationException;
import com.lts.application.international.MessageFormatter;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PushbackInputStream;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.util.Collection;
import java.util.Enumeration;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.PropertyResourceBundle;
import java.util.ResourceBundle;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MessageFormatter_ESTest extends MessageFormatter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.3558258304206885
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.loadCriticalBundles();
      ResourceBundle resourceBundle0 = null;
      messageFormatter0.addBundle((ResourceBundle) null);
      messageFormatter0.temp();
      MockThrowable mockThrowable0 = new MockThrowable();
      MockThrowable mockThrowable1 = new MockThrowable("resources.messages.standard", mockThrowable0);
      String string0 = "]s9L@{r!:y+2?1!";
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) messageFormatter0;
      objectArray0[1] = (Object) messageFormatter0;
      objectArray0[2] = (Object) mockThrowable1;
      objectArray0[3] = (Object) mockThrowable1;
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage((String) null, objectArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      ApplicationException applicationException0 = new ApplicationException("resources.messages.standard", (Object[]) messageFormatter0.DEFAULT_BUNDLE_PATH);
      messageFormatter0.myLastException = (Throwable) applicationException0;
      Throwable throwable0 = messageFormatter0.getLastException();
      assertSame(throwable0, applicationException0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.0113645074166633
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.addBundle((ResourceBundle) null);
      String string0 = MessageFormatter.DEFAULT_BUNDLE;
      LinkedList<PropertyResourceBundle> linkedList0 = new LinkedList<PropertyResourceBundle>();
      LinkedList<ResourceBundle> linkedList1 = new LinkedList<ResourceBundle>(linkedList0);
      messageFormatter0.createLoadException(linkedList1);
      MockThrowable mockThrowable0 = new MockThrowable("resources.messages.standard");
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      Integer integer0 = new Integer((-633));
      Integer integer1 = new Integer((-633));
      Integer integer2 = new Integer((-78));
      Integer integer3 = new Integer((-78));
      Integer integer4 = new Integer((-78));
      Object[] objectArray0 = new Object[9];
      Object object0 = new Object();
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      ClassLoader.getSystemClassLoader();
      MessageFormatter messageFormatter1 = new MessageFormatter();
      Integer integer5 = new Integer((-633));
      // Undeclared exception!
      try { 
        messageFormatter0.formatMessage("mH* {]s`", objectArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.1944064129383247
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.loadCriticalBundles();
      ResourceBundle resourceBundle0 = null;
      messageFormatter0.addBundle((ResourceBundle) null);
      String string0 = "LRwt:f2mFye)ShW~y";
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage("LRwt:f2mFye)ShW~y", (Object) "LRwt:f2mFye)ShW~y", (Object) "LRwt:f2mFye)ShW~y", (Object) "LRwt:f2mFye)ShW~y");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String string0 = "";
      ApplicationException applicationException0 = new ApplicationException("", "");
      ApplicationException applicationException1 = new ApplicationException(applicationException0, (String) null, "", "");
      ApplicationException applicationException2 = new ApplicationException(applicationException0, "");
      MockThrowable mockThrowable0 = new MockThrowable((String) null, applicationException0);
      MessageFormatter.LoadBundleError messageFormatter_LoadBundleError0 = new MessageFormatter.LoadBundleError("", applicationException0);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      MockThrowable mockThrowable1 = new MockThrowable(applicationException0);
      // Undeclared exception!
      try { 
        messageFormatter0.initializeResourceBundle((List) null, (List) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      List list0 = MessageFormatter.buildList((Object[]) null);
      assertTrue(list0.isEmpty());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.4993646124305886
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      StringReader stringReader0 = new StringReader("resources.messages.standard");
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(stringReader0);
      messageFormatter0.formatMessage("?n8t*A", (Object[]) null, (ResourceBundle) propertyResourceBundle0);
      MessageFormatter messageFormatter1 = new MessageFormatter();
      try { 
        messageFormatter0.formatMessage((String) null, messageFormatter1.DEFAULT_BUNDLE_PATH);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.1944064129383247
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.initializeResourceBundle();
      messageFormatter0.addBundle((ResourceBundle) null);
      String string0 = "LRwt:f2mFye)ShW~y";
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage("LRwt:f2mFye)ShW~y", (Object) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.948720592834763
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Object[] objectArray0 = new Object[9];
      Object object0 = new Object();
      objectArray0[0] = object0;
      Object object1 = new Object();
      objectArray0[1] = object1;
      Object object2 = new Object();
      objectArray0[2] = object2;
      Object object3 = new Object();
      objectArray0[1] = object3;
      Object object4 = new Object();
      objectArray0[4] = object4;
      Object object5 = new Object();
      objectArray0[5] = object2;
      Object object6 = new Object();
      objectArray0[6] = object6;
      Object object7 = new Object();
      objectArray0[7] = object7;
      Object object8 = new Object();
      objectArray0[8] = object8;
      List list0 = MessageFormatter.buildList(objectArray0);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.initializeResourceBundle(list0, list0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Object cannot be cast to java.lang.String
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.4399756932787802
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Integer[] integerArray0 = new Integer[14];
      Integer integer0 = new Integer(231);
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      List list0 = MessageFormatter.buildList(integerArray0);
      // Undeclared exception!
      try { 
        messageFormatter0.createLoadException(list0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.6868977693384444
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Integer integer0 = new Integer(256);
      ApplicationException applicationException0 = new ApplicationException("/", integer0);
      ApplicationException applicationException1 = new ApplicationException(applicationException0, "/");
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      ApplicationException applicationException2 = new ApplicationException(applicationException1, "/", dataInputStream0, (Object) null);
      ApplicationException applicationException3 = new ApplicationException(applicationException1, "/");
      MockThrowable mockThrowable0 = new MockThrowable("CO6", applicationException1);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      MockThrowable mockThrowable1 = new MockThrowable(applicationException0);
      applicationException2.addSuppressed(mockThrowable0);
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      classLoader0.setPackageAssertionStatus(".fatal.", false);
      messageFormatter0.listResources("/", classLoader0);
      messageFormatter0.listToString((List<String>) null);
      String string0 = "V*FIJn%Omc&@5^-@";
      // Undeclared exception!
      try { 
        messageFormatter0.tryLoad("V*FIJn%Omc&@5^-@", "/J");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ResourceBundle", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.6969987794394545
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Object[] objectArray0 = new Object[6];
      Object object0 = new Object();
      objectArray0[0] = object0;
      Object object1 = new Object();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pipedInputStream0, pipedInputStream0);
      PipedInputStream pipedInputStream1 = new PipedInputStream();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream1);
      DataInputStream dataInputStream1 = new DataInputStream(sequenceInputStream0);
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      Integer integer0 = new Integer((-1982292595));
      Integer integer1 = new Integer(6);
      Locale locale0 = Locale.TAIWAN;
      locale0.getUnicodeLocaleKeys();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      classLoader0.getParent();
      try { 
        messageFormatter0.initializeResourceBundle((List<String>) linkedList0, (List<String>) null, locale0, classLoader0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Could not find any resource bundle give names: null; and resource path: 
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ApplicationException applicationException0 = new ApplicationException("lSyr.wnC", "lSyr.wnC");
      applicationException0.getStackTrace();
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(sequenceInputStream0, sequenceInputStream0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0);
      BufferedInputStream bufferedInputStream1 = new BufferedInputStream(bufferedInputStream0, 25);
      DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream1);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(bufferedInputStream0, 2);
      DataInputStream dataInputStream1 = new DataInputStream(pushbackInputStream0);
      ClassLoader.getSystemClassLoader();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      MessageFormatter messageFormatter1 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter1.tryLoad((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ResourceBundle", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      ApplicationException applicationException0 = new ApplicationException("`)Jp/oI?**n.l", (Object) null);
      applicationException0.getSuppressed();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "com.lts.application.errors.repository.deleteEntry");
      applicationException0.setKey((String) null);
      ApplicationException applicationException1 = new ApplicationException(applicationException0, "'H1^U63n^<lQ&o|");
      // Undeclared exception!
      try { 
        messageFormatter0.tryLoad("", "`)Jp/oI?**n.l");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ResourceBundle", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.5935041414150646
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Integer[] integerArray0 = new Integer[14];
      Integer integer0 = new Integer(3472);
      integerArray0[0] = integer0;
      Integer integer1 = new Integer(231);
      integerArray0[7] = integer1;
      List<String> list0 = ResourceBundle.Control.FORMAT_DEFAULT;
      ResourceBundle.Control resourceBundle_Control0 = ResourceBundle.Control.getControl(list0);
      List<String> list1 = resourceBundle_Control0.getFormats("hIS");
      messageFormatter0.listToString(list1);
      Integer integer2 = new Integer((-2070787801));
      integerArray0[2] = integer2;
      int int0 = 3476;
      try { 
        messageFormatter0.getMessage("hIS", (Object[]) integerArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ApplicationException applicationException0 = new ApplicationException("", "");
      ApplicationException applicationException1 = new ApplicationException(applicationException0, "", (Object) null, applicationException0);
      ApplicationException applicationException2 = new ApplicationException(applicationException1, "");
      MockThrowable mockThrowable0 = new MockThrowable("", applicationException2);
      MessageFormatter.LoadBundleError messageFormatter_LoadBundleError0 = new MessageFormatter.LoadBundleError((String) null, applicationException1);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      MockThrowable mockThrowable1 = new MockThrowable();
      // Undeclared exception!
      try { 
        messageFormatter0.createLoadException((List) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale locale0 = Locale.CHINA;
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      linkedList0.toArray((Object[]) messageFormatter0.DEFAULT_BUNDLE_PATH);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0, locale_FilteringMode0);
      String string0 = messageFormatter0.listToString(list0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.4993646124305886
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Object[] objectArray0 = new Object[9];
      Object object0 = new Object();
      objectArray0[1] = object0;
      Object object1 = new Object();
      objectArray0[2] = object1;
      Object object2 = new Object();
      objectArray0[3] = object2;
      Object object3 = new Object();
      StringReader stringReader0 = new StringReader("resources.messages.standard");
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(stringReader0);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Object[] objectArray1 = new Object[1];
      messageFormatter0.formatMessage("resources.messages.standard", objectArray1, (ResourceBundle) propertyResourceBundle0);
      Object object4 = new Object();
      MessageFormatter messageFormatter1 = new MessageFormatter();
      try { 
        messageFormatter0.formatMessage("resources.messages.standard", objectArray1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      List<String> list0 = ResourceBundle.Control.FORMAT_DEFAULT;
      Locale.filterTags((List<Locale.LanguageRange>) linkedList1, (Collection<String>) list0);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) list0, locale_FilteringMode0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "/WN$`.");
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.addResourceBundles();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ApplicationException applicationException0 = new ApplicationException("lSyr.wnC", "lSyr.wnC");
      StackTraceElement[] stackTraceElementArray0 = applicationException0.getStackTrace();
      ApplicationException applicationException1 = new ApplicationException(applicationException0, "lSyr.wnC", (Object) null, applicationException0);
      ApplicationException applicationException2 = new ApplicationException(applicationException1, "lSyr.wnC");
      applicationException2.printStackTrace();
      MockThrowable mockThrowable0 = new MockThrowable("lSyr.wnC", applicationException2);
      Throwable throwable0 = applicationException1.getException();
      applicationException1.initialize("null", stackTraceElementArray0);
      MessageFormatter.LoadBundleError messageFormatter_LoadBundleError0 = new MessageFormatter.LoadBundleError("lSyr.wnC", applicationException0);
      ApplicationException applicationException3 = new ApplicationException(throwable0, "lSyr.wnC");
      ApplicationException applicationException4 = new ApplicationException("com.lts.application.errors.repository.GettingEntry", applicationException2);
      applicationException1.addSuppressed(messageFormatter_LoadBundleError0.error);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      ClassLoader.getSystemClassLoader();
      // Undeclared exception!
      try { 
        messageFormatter0.tryLoad((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedInputStream pipedInputStream1 = new PipedInputStream(2);
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage((String) null, (Object) pipedInputStream0, (Object) "", (Object) pipedInputStream1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ApplicationException applicationException0 = new ApplicationException("", "");
      ApplicationException applicationException1 = new ApplicationException(applicationException0, "", (Object) null, applicationException0);
      ApplicationException applicationException2 = new ApplicationException(applicationException1, "");
      MockThrowable mockThrowable0 = new MockThrowable("", applicationException2);
      MessageFormatter.LoadBundleError messageFormatter_LoadBundleError0 = new MessageFormatter.LoadBundleError((String) null, applicationException1);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      ApplicationException applicationException3 = new ApplicationException("", "");
      MockThrowable mockThrowable1 = new MockThrowable(applicationException3);
      applicationException0.addSuppressed(messageFormatter_LoadBundleError0.error);
      MessageFormatter messageFormatter1 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.initializeResourceBundle((List<String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Object[] objectArray0 = new Object[7];
      Object object0 = new Object();
      objectArray0[0] = object0;
      Object object1 = new Object();
      objectArray0[1] = object1;
      Object object2 = new Object();
      objectArray0[2] = object0;
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      Object object6 = new Object();
      Object object7 = new Object();
      Object object8 = new Object();
      Object[] objectArray1 = new Object[0];
      List list0 = MessageFormatter.buildList(objectArray1);
      assertTrue(list0.isEmpty());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.addBundle((ResourceBundle) null);
      String string0 = "=b*{*l8_Z";
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage("=b*{*l8_Z");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Object[] objectArray0 = new Object[9];
      Object object0 = new Object();
      objectArray0[0] = object0;
      Object object1 = new Object();
      objectArray0[1] = object1;
      Object object2 = new Object();
      objectArray0[2] = object2;
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Integer integer0 = new Integer(42);
      Integer integer1 = new Integer(42);
      Integer integer2 = new Integer(1024);
      Integer integer3 = new Integer((-115));
      Integer integer4 = new Integer((-1102));
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Object[] objectArray1 = new Object[2];
      objectArray1[0] = object3;
      objectArray1[1] = (Object) integer2;
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage((String) null, object2, objectArray1[1]);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ApplicationException applicationException0 = new ApplicationException("", "");
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(sequenceInputStream0, sequenceInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      DataInputStream dataInputStream1 = new DataInputStream(dataInputStream0);
      ClassLoader.getSystemClassLoader();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      List<String> list0 = ResourceBundle.Control.FORMAT_PROPERTIES;
      // Undeclared exception!
      try { 
        messageFormatter0.createLoadException(list0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to com.lts.application.international.MessageFormatter$LoadBundleError
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ApplicationException applicationException0 = new ApplicationException("lSyr.wnC", "lSyr.wnC");
      StackTraceElement[] stackTraceElementArray0 = applicationException0.getStackTrace();
      ApplicationException applicationException1 = new ApplicationException(applicationException0, "lSyr.wnC", (Object) null, applicationException0);
      ApplicationException applicationException2 = new ApplicationException(applicationException1, "lSyr.wnC");
      applicationException2.printStackTrace();
      MockThrowable mockThrowable0 = new MockThrowable("lSyr.wnC", applicationException2);
      Throwable throwable0 = applicationException1.getException();
      applicationException1.initialize("null", stackTraceElementArray0);
      MessageFormatter.LoadBundleError messageFormatter_LoadBundleError0 = new MessageFormatter.LoadBundleError((String) null, applicationException1);
      ApplicationException applicationException3 = new ApplicationException(throwable0, "null");
      ApplicationException applicationException4 = new ApplicationException("com.lts.application.errors.repository.GettingEntry", applicationException3);
      applicationException2.addSuppressed(throwable0);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      ClassLoader.getSystemClassLoader();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      // Undeclared exception!
      try { 
        messageFormatter0.listResources((String) null, classLoader0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedInputStream pipedInputStream1 = new PipedInputStream(2);
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Throwable throwable0 = messageFormatter0.getLastException();
      assertNull(throwable0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      ApplicationException applicationException0 = new ApplicationException("zmjDnJP1*,");
      ApplicationException applicationException1 = new ApplicationException(applicationException0, "zmjDnJP1*,");
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage((Throwable) applicationException1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Object object0 = new Object();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Object[] objectArray0 = new Object[2];
      Object object1 = new Object();
      objectArray0[0] = object1;
      objectArray0[1] = (Object) null;
      // Undeclared exception!
      try { 
        messageFormatter0.formatMessage("", objectArray0, (ResourceBundle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Object[] objectArray0 = new Object[7];
      Object object0 = new Object();
      objectArray0[0] = object0;
      Object object1 = new Object();
      objectArray0[1] = object1;
      Object object2 = new Object();
      objectArray0[2] = object2;
      Object object3 = new Object();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      StringReader stringReader0 = new StringReader("lo6j\"qk.p^3");
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(stringReader0);
      messageFormatter0.formatMessage("Error during repository cleanup.\nContinue startup?", objectArray0, (ResourceBundle) propertyResourceBundle0);
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ClassLoader classLoader1 = ClassLoader.getSystemClassLoader();
      classLoader1.setPackageAssertionStatus("b7g-3+tu", false);
      assertSame(classLoader1, classLoader0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Integer[] integerArray0 = new Integer[14];
      Integer integer0 = new Integer(3472);
      integerArray0[0] = integer0;
      Integer integer1 = new Integer(231);
      integerArray0[1] = integer1;
      Integer integer2 = new Integer((-2070787801));
      integerArray0[2] = integer2;
      Integer integer3 = new Integer(3476);
      Integer integer4 = new Integer((-1));
      try { 
        messageFormatter0.formatMessage("u5ak/ec", integerArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      MockThrowable mockThrowable0 = new MockThrowable("The system has encountered a severe, internal error");
      ApplicationException applicationException0 = new ApplicationException(mockThrowable0, "Hq", "Hq", "The system has encountered a severe, internal error");
      mockThrowable0.getSuppressed();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage((Throwable) mockThrowable0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      Integer integer0 = new Integer((-4309));
      Enumeration<InputStream> enumeration1 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration1).hasMoreElements();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(enumeration1);
      SequenceInputStream sequenceInputStream2 = new SequenceInputStream(sequenceInputStream0, sequenceInputStream0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0);
      BufferedInputStream bufferedInputStream1 = new BufferedInputStream(bufferedInputStream0, 1694);
      DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream1);
      DataInputStream dataInputStream1 = new DataInputStream(bufferedInputStream0);
      ClassLoader.getSystemClassLoader();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.tryLoad("0QQ9R'.O):xP", "N|kEV@7^JV{sO");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ResourceBundle", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.022248870579868
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      LinkedList<ResourceBundle> linkedList0 = new LinkedList<ResourceBundle>();
      try { 
        messageFormatter0.initializeResourceBundle((List) linkedList0, (List) linkedList0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Could not find any resource bundle give names: ; and resource path: 
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(dataInputStream0, sequenceInputStream0);
      DataInputStream dataInputStream1 = new DataInputStream(dataInputStream0);
      DataInputStream dataInputStream2 = new DataInputStream(sequenceInputStream1);
      DataInputStream dataInputStream3 = new DataInputStream(dataInputStream2);
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      List<String> list0 = ResourceBundle.Control.FORMAT_PROPERTIES;
      Locale locale0 = Locale.ITALY;
      locale0.getUnicodeLocaleKeys();
      // Undeclared exception!
      try { 
        messageFormatter0.initializeResourceBundle((List<String>) null, (List<String>) null, locale0, classLoader0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.8641220054657963
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(dataInputStream0, sequenceInputStream0);
      DataInputStream dataInputStream1 = new DataInputStream(dataInputStream0);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte)2;
      byteArray0[2] = (byte)2;
      byteArray0[3] = (byte)2;
      byteArray0[4] = (byte)2;
      byteArray0[5] = (byte) (-117);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2, (byte)2);
      DataInputStream dataInputStream2 = new DataInputStream(sequenceInputStream1);
      DataInputStream dataInputStream3 = new DataInputStream(dataInputStream2);
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ClassLoader classLoader1 = classLoader0.getParent();
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      MessageFormatter messageFormatter0 = new MessageFormatter();
      List<String> list0 = ResourceBundle.Control.FORMAT_DEFAULT;
      try { 
        messageFormatter0.initializeResourceBundle(list0, list0, locale0, classLoader1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Could not find any resource bundle give names: java.class, java.properties; and resource path: java.class, java.properties
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.1800610118783306
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      List<String> list0 = ResourceBundle.Control.FORMAT_CLASS;
      ResourceBundle.Control resourceBundle_Control0 = ResourceBundle.Control.getNoFallbackControl(list0);
      resourceBundle_Control0.getFormats("resources.messages.standard");
      try { 
        messageFormatter0.initializeResourceBundle(list0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Could not find any resource bundle give names: messages; and resource path: java.class
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }
}
