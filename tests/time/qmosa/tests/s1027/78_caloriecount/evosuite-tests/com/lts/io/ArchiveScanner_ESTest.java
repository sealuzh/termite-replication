/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 10:03:01 GMT 2019
 */

package com.lts.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.lts.io.ArchiveScanner;
import com.lts.io.DirectoryScanner;
import com.lts.io.ImprovedFile;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.PushbackInputStream;
import java.io.SequenceInputStream;
import java.util.Enumeration;
import java.util.Vector;
import java.util.function.Predicate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ArchiveScanner_ESTest extends ArchiveScanner_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      String string0 = "";
      ImprovedFile improvedFile0 = new ImprovedFile("");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      Vector<String> vector0 = new Vector<String>();
      archiveScanner0.filesExcluded = vector0;
      String[] stringArray0 = new String[3];
      stringArray0[0] = "Ar";
      stringArray0[1] = "";
      stringArray0[2] = "Ar";
      archiveScanner0.excludes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.isIncluded("");
      // Undeclared exception!
      try { 
        archiveScanner0.processFile("Ar");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = "";
      ImprovedFile improvedFile0 = new ImprovedFile("");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "Ad";
      stringArray0[1] = "";
      Vector<PushbackInputStream> vector0 = new Vector<PushbackInputStream>();
      archiveScanner0.filesIncluded = vector0;
      stringArray0[2] = "Ad";
      archiveScanner0.excludes = stringArray0;
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.isIncluded("");
      // Undeclared exception!
      try { 
        archiveScanner0.processFile("Ad");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = "";
      ImprovedFile improvedFile0 = new ImprovedFile("");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      archiveScanner0.excludes = stringArray0;
      Vector<Integer> vector0 = new Vector<Integer>();
      archiveScanner0.dirsIncluded = vector0;
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.isIncluded("");
      // Undeclared exception!
      try { 
        archiveScanner0.processFile("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.0365951418195
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MockFile mockFile0 = new MockFile(":fduV1FeH!sO&,");
      ImprovedFile improvedFile0 = ImprovedFile.createTempDirectory(".WkdAR", ".WkdAR", (File) mockFile0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.haveSlowResults = true;
      String[] stringArray0 = new String[9];
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile(":fduV1FeH!sO&,/ dXyt6}!`2");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, " dXyt6}!`2.jar");
      Vector<PushbackInputStream> vector0 = new Vector<PushbackInputStream>();
      archiveScanner0.dirsNotIncluded = vector0;
      stringArray0[0] = ".WkdAR";
      stringArray0[1] = "Ad";
      stringArray0[2] = ".WkdAR";
      stringArray0[3] = ":fduV1FeH!sO&,";
      stringArray0[4] = "Ad";
      stringArray0[5] = "Ad";
      stringArray0[6] = ".WkdAR";
      stringArray0[7] = ".WkdAR";
      stringArray0[8] = "Ad";
      archiveScanner0.setIncludes(stringArray0);
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(mockFile0, ".WkdAR", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ImprovedFile improvedFile0 = new ImprovedFile("");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String string0 = "Ad";
      String[] stringArray0 = new String[3];
      stringArray0[0] = "Ad";
      Vector<String> vector0 = new Vector<String>();
      archiveScanner0.filesNotIncluded = vector0;
      stringArray0[1] = "";
      stringArray0[2] = "Ad";
      archiveScanner0.excludes = stringArray0;
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.isIncluded("");
      // Undeclared exception!
      try { 
        archiveScanner0.processFile("Ad");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      Vector<String> vector0 = new Vector<String>();
      archiveScanner0.filesIncluded = vector0;
      Vector<PushbackInputStream> vector1 = new Vector<PushbackInputStream>();
      ArchiveScanner archiveScanner1 = new ArchiveScanner(improvedFile0);
      archiveScanner1.dirsNotIncluded = archiveScanner0.filesIncluded;
      Vector<PushbackInputStream> vector2 = new Vector<PushbackInputStream>();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "Ad";
      archiveScanner0.setIncludes(archiveScanner1.DEFAULT_ARCHIVE_EXTENSIONS);
      Vector<InputStream> vector3 = new Vector<InputStream>();
      archiveScanner0.filesNotIncluded = vector3;
      vector0.containsAll(archiveScanner0.filesIncluded);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) "Ad");
      predicate0.negate();
      Predicate<Object> predicate1 = predicate0.negate();
      vector3.removeIf(predicate1);
      System.setCurrentTimeMillis((-232L));
      archiveScanner0.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      archiveScanner0.processArchive(improvedFile0, "Ad");
      assertEquals(1392409281320L, improvedFile0.lastModified());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.545727559299491
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile(":fduV1FeH!sO&,");
      ImprovedFile improvedFile1 = ImprovedFile.createTempDirectory(".WAR", ".WAR", (File) improvedFile0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile1);
      String[] stringArray0 = new String[9];
      Vector<PushbackInputStream> vector0 = new Vector<PushbackInputStream>();
      archiveScanner0.dirsNotIncluded = vector0;
      stringArray0[0] = ".WAR";
      stringArray0[1] = "Ad";
      stringArray0[2] = ".WAR";
      stringArray0[3] = ":fduV1FeH!sO&,";
      stringArray0[4] = "Ad";
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-56);
      byteArray0[1] = (byte) (-97);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, (byte) (-56));
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(bufferedInputStream0);
      archiveScanner0.scandir(improvedFile1, "Fe/p*M@?S,t", false);
      vector0.add(pushbackInputStream0);
      stringArray0[5] = "Ad";
      stringArray0[6] = "Ad";
      stringArray0[7] = ".WAR";
      stringArray0[8] = "Ad";
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.scandir(improvedFile0, ".WAR", false);
      archiveScanner0.processDirectory(improvedFile1, "6Rn/`C", false);
      assertTrue(improvedFile1.exists());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.0750615867211946
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = ":fduV1FeH!sO&,";
      MockFile mockFile0 = new MockFile(":fduV1FeH!sO&,");
      ImprovedFile improvedFile0 = ImprovedFile.createTempDirectory(".WkdAR", ".WkdAR", (File) mockFile0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[9];
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile(":fduV1FeH!sO&,/ dXyt6}!`2");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "wvB");
      Vector<PushbackInputStream> vector0 = new Vector<PushbackInputStream>();
      archiveScanner0.dirsNotIncluded = vector0;
      improvedFile0.toPath();
      stringArray0[0] = ".WkdAR";
      stringArray0[1] = "Ad";
      stringArray0[2] = ".WkdAR";
      mockFile0.getAbsoluteFile();
      stringArray0[3] = ":fduV1FeH!sO&,";
      stringArray0[4] = "Ad";
      stringArray0[5] = "Ad";
      stringArray0[6] = ".WkdAR";
      stringArray0[7] = ".WkdAR";
      boolean boolean0 = false;
      improvedFile0.setExecutable(true, false);
      stringArray0[8] = "Ad";
      archiveScanner0.setIncludes(stringArray0);
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(mockFile0, ".WkdAR", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.54479347205697
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile(":fduV1FeH!sO&,");
      ImprovedFile improvedFile1 = ImprovedFile.createTempDirectory(".WAR", ".WAR", (File) improvedFile0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile1);
      String[] stringArray0 = new String[9];
      Vector<PushbackInputStream> vector0 = new Vector<PushbackInputStream>();
      archiveScanner0.dirsNotIncluded = vector0;
      stringArray0[0] = ".WAR";
      stringArray0[1] = "Ad";
      stringArray0[2] = ".WAR";
      stringArray0[3] = ":fduV1FeH!sO&,";
      stringArray0[4] = "Ad";
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-56);
      byteArray0[1] = (byte) (-97);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, (byte) (-56));
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(bufferedInputStream0);
      vector0.add(pushbackInputStream0);
      stringArray0[5] = "Ad";
      stringArray0[6] = "Ad";
      stringArray0[7] = ".WAR";
      stringArray0[8] = "Ad";
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.scandir(improvedFile0, ".WAR", false);
      archiveScanner0.processDirectory(improvedFile1, ",A`8=j1RBIqu&(/_@", true);
      assertTrue(improvedFile1.canWrite());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "~'Y[";
      stringArray0[1] = "n:t`.jar";
      stringArray0[2] = "Error trying to backup file, ";
      stringArray0[3] = "[|J_8)Noag$V+";
      stringArray0[4] = "sO&,0.jar";
      archiveScanner0.excludes = stringArray0;
      DirectoryScanner.matchPath("", "");
      // Undeclared exception!
      try { 
        archiveScanner0.isArchive((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ImprovedFile improvedFile0 = new ImprovedFile("");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "Ad";
      stringArray0[1] = "";
      stringArray0[2] = "Ad";
      archiveScanner0.setIncludes(stringArray0);
      Vector<InputStream> vector0 = new Vector<InputStream>();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)14;
      byteArray0[1] = (byte)9;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2, (-4445));
      vector0.add((InputStream) byteArrayInputStream0);
      Vector<String> vector1 = new Vector<String>();
      vector1.containsAll(vector0);
      Enumeration<PushbackInputStream> enumeration0 = (Enumeration<PushbackInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(sequenceInputStream0, sequenceInputStream0);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) sequenceInputStream1);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.or(predicate1);
      predicate0.or(predicate2);
      Predicate<Object> predicate3 = predicate0.negate();
      predicate3.and(predicate0);
      predicate0.test("");
      vector0.removeIf(predicate0);
      String[] stringArray1 = new String[9];
      stringArray1[0] = "com.lts.io.ArchiveScanner";
      stringArray1[1] = "";
      stringArray1[2] = "Ad";
      stringArray1[3] = "Ad";
      stringArray1[4] = "";
      stringArray1[5] = "Ad";
      stringArray1[6] = "Ad";
      stringArray1[7] = "";
      stringArray1[8] = "";
      archiveScanner0.setIncludes(stringArray1);
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive(improvedFile0, "Ad");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      Vector<PushbackInputStream> vector0 = new Vector<PushbackInputStream>();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "Ad";
      Vector<PushbackInputStream> vector1 = new Vector<PushbackInputStream>();
      ArchiveScanner archiveScanner1 = new ArchiveScanner(improvedFile0);
      Vector<PushbackInputStream> vector2 = new Vector<PushbackInputStream>();
      archiveScanner1.filesNotIncluded = vector2;
      archiveScanner1.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      Vector<PushbackInputStream> vector3 = new Vector<PushbackInputStream>();
      archiveScanner1.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      archiveScanner1.processFile("xFdE|g/");
      ArchiveScanner archiveScanner2 = new ArchiveScanner(improvedFile0);
      // Undeclared exception!
      try { 
        ImprovedFile.createTempDirectory("com.lts.pest.data.IdTree", "}UsatCQYr+E'0Y:R", (File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ImprovedFile", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("u");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.excludes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      archiveScanner0.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      archiveScanner0.couldHoldIncluded("u");
      // Undeclared exception!
      try { 
        archiveScanner0.processFile("u");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      Vector<String> vector0 = new Vector<String>();
      archiveScanner0.filesIncluded = vector0;
      Vector<PushbackInputStream> vector1 = new Vector<PushbackInputStream>();
      ArchiveScanner archiveScanner1 = new ArchiveScanner(improvedFile0);
      archiveScanner1.dirsNotIncluded = archiveScanner0.filesIncluded;
      Vector<PushbackInputStream> vector2 = new Vector<PushbackInputStream>();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "Ad";
      String[] stringArray1 = new String[7];
      stringArray1[0] = "Ad";
      stringArray1[1] = "";
      stringArray1[2] = "Ad";
      stringArray1[3] = "Ad";
      stringArray1[4] = "";
      stringArray1[5] = "";
      stringArray1[6] = "Ad";
      archiveScanner0.setIncludes(stringArray1);
      Vector<InputStream> vector3 = new Vector<InputStream>();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) "Ad");
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate1.and(predicate0);
      Predicate<Object> predicate3 = predicate2.or(predicate2);
      predicate3.test("Ad");
      vector3.removeIf(predicate0);
      System.setCurrentTimeMillis(0L);
      archiveScanner1.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      // Undeclared exception!
      try { 
        archiveScanner1.processArchive(improvedFile0, ".jar");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.5572661404461452
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile(":fduV1FeH!sO&,/ dXyt6}!`2/.WkdAR0.WkdAR");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)86;
      byteArray0[1] = (byte)107;
      byteArray0[2] = (byte)86;
      byteArray0[3] = (byte)49;
      byteArray0[4] = (byte) (-1);
      byteArray0[5] = (byte)78;
      byteArray0[6] = (byte)22;
      byteArray0[7] = (byte) (-33);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      MockFile mockFile0 = new MockFile(":fduV1FeH!sO&,");
      ImprovedFile improvedFile0 = ImprovedFile.createTempDirectory(".WkdAR", ".WkdAR", (File) mockFile0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[9];
      Vector<PushbackInputStream> vector0 = new Vector<PushbackInputStream>();
      archiveScanner0.dirsNotIncluded = vector0;
      stringArray0[0] = ".WkdAR";
      stringArray0[1] = "Ad";
      stringArray0[2] = ".WkdAR";
      stringArray0[3] = ":fduV1FeH!sO&,";
      stringArray0[4] = "Ad";
      stringArray0[5] = "Ad";
      stringArray0[6] = "Ad";
      stringArray0[7] = ".WkdAR";
      stringArray0[8] = "Ad";
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.scandir(mockFile0, ".WkdAR", true);
      archiveScanner0.setBasedir("Y;q_");
      ArchiveScanner archiveScanner1 = new ArchiveScanner(improvedFile0);
      archiveScanner1.basedir = (File) mockFile0;
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile(":fduV1FeH!sO&,/ dXyt6}!`1");
      MockFile.createTempFile("mcd|C\"[-", "Ad", (File) mockFile0);
      FileSystemHandling.createFolder(evoSuiteFile1);
      try { 
        ImprovedFile.createTempDirectory(" dXyt6}!`", (String) null, (File) mockFile0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Error trying to create temp directory, /home/ubuntu/termite/projects/78_caloriecount/:fduV1FeH!sO&,/ dXyt6}!`2, could not delete temp file to make way for directory.
         //
         verifyException("com.lts.io.ImprovedFile", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "Ad";
      stringArray0[1] = "Ad";
      stringArray0[2] = "Ad";
      Vector<InputStream> vector0 = new Vector<InputStream>();
      Object object0 = new Object();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) "Ad");
      Predicate<Object> predicate1 = predicate0.negate();
      predicate1.and(predicate0);
      Predicate<Object> predicate2 = predicate1.negate();
      predicate2.or(predicate0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      String[] stringArray1 = new String[7];
      stringArray1[0] = "";
      stringArray1[1] = "!";
      stringArray1[2] = "Ad";
      stringArray1[4] = "";
      stringArray1[5] = "\"(0&";
      stringArray1[6] = "!";
      // Undeclared exception!
      try { 
        archiveScanner0.scanArchive((File) null, ".zip");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.archive.AbstractNestedArchive", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      MockFile mockFile0 = new MockFile("ItN!vBY<wD9kDdx 2+X");
      ImprovedFile improvedFile0 = new ImprovedFile(mockFile0, "}+?J$Jb.'N7");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      // Undeclared exception!
      try { 
        archiveScanner0.toFileType((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ImprovedFile improvedFile0 = new ImprovedFile("");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "Ad";
      stringArray0[1] = "";
      stringArray0[2] = "Ad";
      archiveScanner0.setIncludes(stringArray0);
      Vector<InputStream> vector0 = new Vector<InputStream>();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)14;
      byteArray0[1] = (byte)9;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2, (-4445));
      vector0.add((InputStream) byteArrayInputStream0);
      Vector<String> vector1 = new Vector<String>();
      vector1.containsAll(vector0);
      Enumeration<PushbackInputStream> enumeration0 = (Enumeration<PushbackInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(sequenceInputStream0, sequenceInputStream0);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) sequenceInputStream1);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.or(predicate1);
      predicate0.or(predicate2);
      archiveScanner0.addDefaultExcludes();
      archiveScanner0.setIncludes(stringArray0);
      Vector<PushbackInputStream> vector2 = new Vector<PushbackInputStream>();
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory(improvedFile0, "Ad", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ImprovedFile improvedFile0 = new ImprovedFile("");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[0];
      archiveScanner0.setIncludes(stringArray0);
      Vector<InputStream> vector0 = new Vector<InputStream>();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)9;
      byteArray0[1] = (byte)9;
      byteArray0[2] = (byte)9;
      byteArray0[3] = (byte)14;
      byteArray0[3] = (byte)14;
      byteArray0[5] = (byte)9;
      byteArray0[6] = (byte)9;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-4445), (-145463058));
      vector0.add((InputStream) byteArrayInputStream0);
      Vector<String> vector1 = new Vector<String>();
      vector1.containsAll(vector0);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(sequenceInputStream0, sequenceInputStream0);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) null);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate1.negate();
      predicate2.or(predicate1);
      predicate2.or(predicate1);
      ArchiveScanner archiveScanner1 = new ArchiveScanner(improvedFile0);
      archiveScanner1.addDefaultExcludes();
      archiveScanner0.setIncludes(stringArray0);
      Vector<PushbackInputStream> vector2 = new Vector<PushbackInputStream>();
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory(improvedFile0, "IO error scanning directory ", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.4399756932787802
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      MockFile mockFile0 = new MockFile(".jar", "");
      ImprovedFile improvedFile0 = new ImprovedFile("@?<", "|%=1`M");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = ".jar";
      stringArray0[1] = "UCzzj";
      stringArray0[2] = "";
      stringArray0[3] = "";
      archiveScanner0.setIncludes(stringArray0);
      MockFile mockFile1 = new MockFile("");
      int int0 = archiveScanner0.toFileType(mockFile0);
      assertEquals(2, int0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.4399756932787802
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      MockFile mockFile0 = new MockFile(":duV1F\"H!sO&,");
      MockFile mockFile1 = new MockFile("");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/MZz$/n:t`\\0");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "MZz$");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      mockFile0.toURL();
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/MZz$");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      MockFile.createTempFile("n:t`", "", (File) mockFile1);
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("/home/ubuntu/termite/projects/78_caloriecount");
      FileSystemHandling.createFolder(evoSuiteFile2);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      ImprovedFile improvedFile0 = new ImprovedFile(mockFile0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "n:t`";
      stringArray0[1] = ":duV1F\"H!sO&,";
      stringArray0[2] = ":duV1F\"H!sO&,";
      stringArray0[3] = ":duV1F\"H!sO&,";
      stringArray0[4] = "";
      archiveScanner0.setIncludes(stringArray0);
      Vector<PushbackInputStream> vector0 = new Vector<PushbackInputStream>();
      improvedFile0.setExecutable(false);
      MockFile mockFile2 = new MockFile(".jar");
      int int0 = archiveScanner0.toFileType(mockFile0);
      //  // Unstable assertion: assertEquals(2, int0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      MockFile mockFile0 = new MockFile(":fduV1FeH!sO&,");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/78_caloriecount");
      FileSystemHandling.setPermissions(evoSuiteFile0, true, true, true);
      MockFile mockFile1 = new MockFile("");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/MZz$/n:t`\\0");
      FileSystemHandling.createFolder(evoSuiteFile1);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      mockFile0.toURL();
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("/MZz$");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile2);
      ImprovedFile improvedFile0 = new ImprovedFile("", "");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile2);
      ImprovedFile improvedFile1 = new ImprovedFile(improvedFile0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile1);
      archiveScanner0.isArchive(mockFile1);
      improvedFile1.createTempDir("Y^>3^(N0EC8Se<zK", " $F>cty$Y]X");
      System.setCurrentTimeMillis((-3977L));
      System.setCurrentTimeMillis((-1747L));
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile(":duV1F\"H!sO&,", ":duV1F\"H!sO&,");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)54;
      byteArray0[1] = (byte) (-71);
      byteArray0[2] = (byte) (-66);
      byteArray0[2] = (byte) (-49);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) ":duV1F\"H!sO&,");
      Predicate<Object> predicate1 = predicate0.negate();
      predicate1.and(predicate0);
      Predicate<Object> predicate2 = Predicate.isEqual((Object) predicate1);
      Predicate<Object> predicate3 = predicate1.negate();
      Predicate<Object> predicate4 = predicate2.and(predicate3);
      predicate4.negate();
      predicate1.negate();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.isArchive(improvedFile0);
      improvedFile0.createTempDir("'_ldt9fg91U", "'_ldt9fg91U");
      System.setCurrentTimeMillis((byte) (-49));
      System.setCurrentTimeMillis((-1755L));
      System.setCurrentTimeMillis(1);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.432813901625505
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile(":duV1F\"H!sO&,", ":duV1F\"H!sO&,");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/MZz$/n:t`\\0");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)54;
      byteArray0[1] = (byte) (-71);
      byteArray0[2] = (byte) (-66);
      byteArray0[2] = (byte) (-49);
      byteArray0[4] = (byte)54;
      byteArray0[5] = (byte) (-12);
      byteArray0[4] = (byte) (-1);
      byteArray0[7] = (byte) (-41);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      improvedFile0.toURL();
      MockFile mockFile0 = new MockFile("", "MZ}V");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/MZz$/n:t`\\0");
      mockFile0.getCanonicalPath();
      FileSystemHandling.appendStringToFile(evoSuiteFile1, "MZ}V");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      mockFile0.setWritable(false);
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("/MZz$");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile2);
      File file0 = MockFile.createTempFile("n:t`", "", (File) mockFile0);
      ImprovedFile improvedFile1 = new ImprovedFile(":duV1F\"H!sO&,");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile1);
      Vector<PushbackInputStream> vector0 = new Vector<PushbackInputStream>();
      FileSystemHandling.appendLineToFile(evoSuiteFile2, "MZ}V");
      file0.deleteOnExit();
      Vector<PushbackInputStream> vector1 = new Vector<PushbackInputStream>();
      MockFile mockFile1 = new MockFile("com.lts.io.ImprovedFile$Reason");
      int int0 = archiveScanner0.toFileType(file0);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("");
      ImprovedFile improvedFile1 = new ImprovedFile(improvedFile0, "");
      ImprovedFile improvedFile2 = improvedFile1.createTempDir();
      ImprovedFile improvedFile3 = new ImprovedFile(improvedFile2, "");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      int int0 = archiveScanner0.toFileType(improvedFile2);
      assertEquals(1, int0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.4141321991816422
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      DirectoryScanner.matchPath("", "");
      ArchiveScanner archiveScanner1 = new ArchiveScanner(improvedFile0);
      archiveScanner0.setIncludes(archiveScanner1.DEFAULT_ARCHIVE_EXTENSIONS);
      archiveScanner0.haveSlowResults = false;
      ImprovedFile improvedFile1 = new ImprovedFile("", "");
      archiveScanner0.includes = archiveScanner1.DEFAULT_ARCHIVE_EXTENSIONS;
      ArchiveScanner archiveScanner2 = new ArchiveScanner(improvedFile1);
      archiveScanner2.scandir(improvedFile0, "#4?[W", false);
      ArchiveScanner archiveScanner3 = new ArchiveScanner(improvedFile1);
      ArchiveScanner archiveScanner4 = new ArchiveScanner(improvedFile1);
      archiveScanner4.addDefaultExcludes();
      // Undeclared exception!
      try { 
        archiveScanner4.scandir(improvedFile1, ":", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile(":duV1F\"H!sO&,");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      Vector<InputStream> vector0 = new Vector<InputStream>();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) archiveScanner0);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate1.or(predicate0);
      Predicate<Object> predicate3 = predicate2.negate();
      Predicate<Object> predicate4 = predicate0.or(predicate3);
      Predicate<Object> predicate5 = predicate1.negate();
      Predicate<Object> predicate6 = predicate5.or(predicate4);
      predicate6.and(predicate5);
      predicate2.and(predicate6);
      Predicate<Object> predicate7 = predicate3.or(predicate2);
      predicate3.negate();
      Object object0 = new Object();
      Predicate<Object> predicate8 = Predicate.isEqual(object0);
      Predicate<Object> predicate9 = predicate8.negate();
      Predicate<Object> predicate10 = predicate9.or(predicate0);
      Predicate<Object> predicate11 = predicate8.and(predicate10);
      Object object1 = new Object();
      Predicate.isEqual((Object) predicate6);
      Predicate<Object> predicate12 = predicate11.and(predicate8);
      predicate12.or(predicate11);
      Predicate<Object> predicate13 = predicate4.negate();
      predicate7.negate();
      predicate0.or(predicate13);
      ArchiveScanner archiveScanner1 = new ArchiveScanner(improvedFile0);
      try { 
        archiveScanner0.scanArchive(improvedFile0, ".jar");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error trying to list archive, :duV1F\"H!sO&,
         //
         verifyException("com.lts.io.archive.AbstractNestedArchive", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ImprovedFile improvedFile0 = new ImprovedFile("net`\u0000.jar");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.setIncludes((String[]) null);
      Vector<InputStream> vector0 = new Vector<InputStream>();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)14;
      byteArray0[1] = (byte)14;
      byteArray0[2] = (byte)14;
      byteArray0[3] = (byte)14;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 33, (-143842248));
      vector0.add((InputStream) byteArrayInputStream0);
      Vector<String> vector1 = new Vector<String>();
      vector1.containsAll(vector0);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (byte)14, (-915));
      byteArrayInputStream1.close();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(bufferedInputStream0);
      try { 
        archiveScanner0.scandir(improvedFile0, ".jar.jar", false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // IO error scanning directory /home/ubuntu/termite/projects/78_caloriecount/net`\u0000.jar
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.8548720307766426
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      MockFile mockFile0 = new MockFile(":uV1F\"H!sO&,");
      MockFile mockFile1 = new MockFile("", "MZz$");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/MZz$/n:t`\\0");
      mockFile1.getCanonicalPath();
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "MZz$");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      mockFile1.setWritable(false);
      mockFile0.toURL();
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/MZz$/n:t`\\0");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      ImprovedFile improvedFile0 = new ImprovedFile(mockFile1);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(mockFile1, "", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }
}
