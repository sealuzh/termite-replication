/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 10:03:49 GMT 2019
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Comparator;
import java.util.ConcurrentModificationException;
import java.util.LinkedList;
import java.util.function.UnaryOperator;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.businessLayer.VariableSummary;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.2180068209743644
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.setForm("macaw.businessLayer.Variable");
      derivedVariable0.setAlias("USER");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier((-1));
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      derivedVariable0.setIdentifier((-1));
      derivedVariable0.getSupportingDocuments();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.removeOntologyTerms(arrayList0);
      ontologyTerm0.setTerm("dQY$~h~ \u0004[|-{");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.clone();
      ontologyTerm1.clone();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      User user1 = new User();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.getForm();
      rawVariable0.getAlias();
      rawVariable0.getCategory();
      derivedVariable0.getColumnEnd();
      assertEquals("macaw.businessLayer.Variable", derivedVariable0.getForm());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.7927419219615257
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      User user0 = new User();
      rawVariable0.setCodeBookNumber("NY|F");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      ontologyTerm0.setDescription((String) null);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.setFilePath("macaw.businessLayer.Va\"iable");
      rawVariable0.columnStart = "dn3&}qJ<g";
      rawVariable0.setColumnEnd("!|");
      rawVariable0.clone();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.isNewRecord();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.getSupportingDocuments();
      rawVariable0.getCleaningStatus();
      rawVariable0.getNotes();
      System.setCurrentTimeMillis((-1100L));
      rawVariable0.getColumnEnd();
      derivedVariable0.notes = "variable.alias.label";
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.createVariableSummary();
      derivedVariable1.getSourceVariables();
      derivedVariable1.questionNumber = "!|";
      derivedVariable0.getCategory();
      assertEquals("variable.alias.label", derivedVariable0.getNotes());
      
      derivedVariable1.createVariableSummary();
      assertEquals("", derivedVariable1.getCleaningDescription());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.059615150468091
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier((-1539));
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      MacawChangeEvent[] macawChangeEventArray0 = new MacawChangeEvent[7];
      User user0 = new User("USER", "USER");
      RawVariable rawVariable0 = new RawVariable();
      User user1 = new User();
      User user2 = new User();
      RawVariable rawVariable1 = new RawVariable();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user1, rawVariable0, rawVariable0);
      macawChangeEventArray0[5] = macawChangeEvent0;
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent();
      macawChangeEvent1.setChangedObjectIdentifier((-1539));
      macawChangeEventArray0[6] = macawChangeEvent1;
      arrayList0.toArray(macawChangeEventArray0);
      arrayList0.trimToSize();
      arrayList0.trimToSize();
      // Undeclared exception!
      try { 
        rawVariable1.containsSupportingDocument((SupportingDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.9857780845620634
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.validateFields(valueLabel0);
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.DELETE;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addValueLabel(valueLabel0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.getDisplayName();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm2);
      rawVariable0.setCleaned(false);
      ontologyTerm2.setTerm("general.fieldValue.blank");
      ontologyTerm0.getDisplayName();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      rawVariable0.setAlias("-LHA");
      rawVariable0.hasSameDisplayName(rawVariable1);
      rawVariable0.getNotes();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.removeOntologyTerms(arrayList0);
      rawVariable0.notes = "general.fieldValue.blank";
      ontologyTerm2.setTerm("sww@[:nl)g6@cL_");
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm3.clone();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm4);
      rawVariable1.getCodeBookNumber();
      rawVariable0.getFilePath();
      assertEquals("-LHA", rawVariable0.getAlias());
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertEquals("Unknown", derivedVariable1.getCategory());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.6820748660026672
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.validateFields(valueLabel0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.995407701421037
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlias("USER");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier((-1539));
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      MacawChangeEvent[] macawChangeEventArray0 = new MacawChangeEvent[7];
      User user0 = new User("USER", "USER");
      RawVariable rawVariable0 = new RawVariable();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, rawVariable0);
      macawChangeEventArray0[0] = macawChangeEvent0;
      MacawChangeEvent macawChangeEvent1 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, rawVariable0);
      macawChangeEventArray0[1] = macawChangeEvent1;
      User user1 = new User();
      Variable.detectChangesInAlternativeVariable(user1, rawVariable0, derivedVariable0);
      User user2 = new User();
      MacawChangeEvent macawChangeEvent2 = Variable.detectChangesInAlternativeVariable(user2, derivedVariable0, rawVariable0);
      macawChangeEventArray0[3] = macawChangeEvent2;
      RawVariable rawVariable1 = new RawVariable();
      MacawChangeEvent macawChangeEvent3 = Variable.detectChangesInAlternativeVariable(user1, rawVariable1, rawVariable1);
      macawChangeEventArray0[4] = macawChangeEvent3;
      Variable.detectChangesInAlternativeVariable(user1, rawVariable0, rawVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      derivedVariable0.removeSourceVariables(arrayList1);
      User user3 = new User("YR]+(bV/O8|.", "Wg[#m3|Q%/Wtnm^!Q");
      rawVariable0.setCategory("YR]+(bV/O8|.");
      RawVariable.detectFieldChanges(user2, rawVariable1, rawVariable0);
      assertEquals("YR]+(bV/O8|.", rawVariable0.getCategory());
      
      rawVariable1.getForm();
      assertFalse(rawVariable1.isCoded());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.851591781251815
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = "HUQ#H\"ZOPD";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.clone();
      ontologyTerm0.setDescription("HUQ#H\"ZOPD");
      ontologyTerm0.setIdentifier(0);
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<ValueLabel> arrayList0 = rawVariable0.getValueLabels();
      UnaryOperator<ValueLabel> unaryOperator0 = UnaryOperator.identity();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = unaryOperator0.apply(valueLabel0);
      arrayList0.add(valueLabel0);
      arrayList0.add(valueLabel1);
      rawVariable0.setCategory("<CqC");
      arrayList0.replaceAll(unaryOperator0);
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      derivedVariable0.removeSourceVariable(rawVariable0);
      derivedVariable0.setOntologyTerms(arrayList1);
      derivedVariable0.setValueLabels(arrayList0);
      derivedVariable0.removeSourceVariable(rawVariable0);
      rawVariable0.hasSameDisplayName(derivedVariable0);
      ArrayList<Variable> arrayList2 = derivedVariable0.getSourceVariables();
      derivedVariable0.removeSourceVariables(arrayList2);
      derivedVariable0.clone();
      rawVariable0.getColumnStart();
      derivedVariable0.getName();
      User user0 = new User("*GFQTCl%oU;2n", "");
      user0.setFirstName("v4c)Lprv_(@OKkLQL)");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, rawVariable0);
      assertEquals("<CqC", rawVariable0.getCategory());
      
      derivedVariable0.getDisplayName();
      derivedVariable0.getOntologyTerms();
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.8481382545563316
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.EDIT;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      derivedVariable0.setIdentifier(18);
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      ArrayList<ValueLabel> arrayList0 = derivedVariable0.getValueLabels();
      arrayList0.add((ValueLabel) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setValueLabels(arrayList0);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      derivedVariable1.removeSupportingDocuments(arrayList1);
      derivedVariable0.getLabel();
      derivedVariable0.isNewRecord();
      derivedVariable0.getAvailability();
      derivedVariable0.removeValueLabel(valueLabel0);
      derivedVariable1.isCleaned();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.setLabel("-AkfC");
      DerivedVariable derivedVariable3 = new DerivedVariable();
      derivedVariable3.getFilePath();
      // Undeclared exception!
      try { 
        derivedVariable1.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.068931576877855
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      ontologyTerm0.setOntologyName(":@A&&mL_zIYqO2v!`n");
      rawVariable0.columnStart = ":@A&&mL_zIYqO2v!`n";
      ontologyTerm0.setNameSpace(":@A&&mL_zIYqO2v!`n");
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.setCategory("$QkbS?57RU#");
      rawVariable0.getDisplayName();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getSourceVariables();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.setOntologyTerms(arrayList0);
      derivedVariable1.setCoded(false);
      derivedVariable0.addSourceVariable(derivedVariable1);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable1.containsSupportingDocument(supportingDocument0);
      User user0 = new User(":@A&&mL_zIYqO2v!`n", "variable.notes.label");
      RawVariable rawVariable1 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      assertEquals(":@A&&mL_zIYqO2v!`n", rawVariable0.getColumnStart());
      assertEquals("$QkbS?57RU#", rawVariable0.getCategory());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.9570482519826164
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.createVariableSummary();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ValueLabel valueLabel0 = new ValueLabel();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.CANCEL;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      derivedVariable0.setIdentifier(60);
      ValueLabel.EditingOperationType valueLabel_EditingOperationType1 = ValueLabel.EditingOperationType.EDIT;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType1);
      ArrayList<ValueLabel> arrayList0 = derivedVariable0.getValueLabels();
      arrayList0.add(valueLabel0);
      derivedVariable0.setValueLabels(arrayList0);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      derivedVariable0.removeSupportingDocuments(arrayList1);
      derivedVariable0.getLabel();
      derivedVariable0.isNewRecord();
      derivedVariable0.getAvailability();
      derivedVariable0.removeValueLabel(valueLabel0);
      derivedVariable0.isCleaned();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setLabel("Unknown");
      derivedVariable1.getFilePath();
      derivedVariable0.clone();
      derivedVariable1.clone();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertEquals(60, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getQuestionNumber();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.hasSameDisplayName(derivedVariable1);
      System.setCurrentTimeMillis((-1759L));
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable1.removeOntologyTerm(ontologyTerm1);
      derivedVariable0.setYear((String) null);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      derivedVariable0.getCleaningDescription();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      // Undeclared exception!
      try { 
        rawVariable0.updateOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.943052917634059
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setForm("macaw.businessLayer.Va\"iable");
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setLabel("macaw.businessLayer.Va\"iable");
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.EDIT;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      ArrayList<ValueLabel> arrayList0 = derivedVariable0.getValueLabels();
      arrayList0.stream();
      arrayList0.add(valueLabel0);
      derivedVariable0.setValueLabels(arrayList0);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      derivedVariable0.removeSupportingDocuments(arrayList1);
      derivedVariable0.getLabel();
      derivedVariable0.isNewRecord();
      derivedVariable0.removeValueLabel(valueLabel0);
      derivedVariable0.isCleaned();
      derivedVariable0.getFilePath();
      User user0 = new User("-4%d_^}", "");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.getName();
      assertEquals("macaw.businessLayer.Va\"iable", derivedVariable0.getForm());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.9850671609440704
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      derivedVariable0.getCleaningDescription();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.getNotes();
      rawVariable0.getLabel();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      ontologyTerm0.setIdentifier(0);
      rawVariable0.setCleaned(true);
      derivedVariable0.setIdentifier(0);
      derivedVariable0.getSupportingDocuments();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setAlias("macaw.businessLayer.Variable");
      assertEquals("macaw.businessLayer.Variable", rawVariable1.getAlias());
      
      User user0 = new User((String) null, (String) null);
      RawVariable rawVariable2 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable2, rawVariable0);
      RawVariable rawVariable3 = new RawVariable();
      rawVariable3.getForm();
      assertEquals("Unknown", rawVariable3.getCategory());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.0959250185828013
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm((String) null);
      ontologyTerm0.setTerm((String) null);
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      ontologyTerm0.setOntologyName(":@A&&mL_zIYqO2v!`n");
      rawVariable0.columnStart = ":@A&&mL_zIYqO2v!`n";
      ontologyTerm0.setNameSpace(":@A&&mL_zIYqO2v!`n");
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.setCategory("$QkbS?57RU#");
      rawVariable0.getDisplayName();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getSourceVariables();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.setOntologyTerms(arrayList0);
      derivedVariable1.setCoded(false);
      derivedVariable0.addSourceVariable(derivedVariable1);
      User user0 = new User((String) null, "7lvuo~k{N:Tw4");
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      derivedVariable0.getDisplayItemIdentifier();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
      
      RawVariable rawVariable0 = new RawVariable();
      String string0 = rawVariable0.getDisplayItemIdentifier();
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", string0);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.6000899182080524
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setForm("macaw.businessLayer.Va\"iable");
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.CANCEL;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.cloneAttributes(rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      User user0 = new User("USER", "0");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("macaw.businessLayer.Va\"iable", rawVariable0.getForm());
      
      rawVariable1.getForm();
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.663816567698219
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setForm("macaw.businessLayer.Variable");
      derivedVariable0.setAlias("USER");
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.CANCEL;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.cloneAttributes(rawVariable0);
      rawVariable0.addValueLabel(valueLabel0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.setAlias("=uH0\"TWasY?dqH$+5\"");
      User user0 = new User("$(fr+dE", "UNABLE_TO_CREATE_SUPPORTING_DOCUMENT");
      RawVariable.detectFieldChanges(user0, rawVariable2, rawVariable1);
      RawVariable rawVariable3 = new RawVariable();
      rawVariable3.setNotes("UNABLE_TO_CREATE_SUPPORTING_DOCUMENT");
      rawVariable3.getForm();
      rawVariable0.getCleaningStatus();
      assertEquals("USER", rawVariable0.getAlias());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.7174511536400088
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      derivedVariable0.getCleaningDescription();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.getLabel();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.CANCEL;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable0.cloneAttributes(rawVariable1);
      rawVariable0.addValueLabel(valueLabel0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.setAlias("");
      User user0 = new User("z-I", "");
      ArrayList<MacawChangeEvent> arrayList0 = RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      assertEquals(0, arrayList0.size());
      
      rawVariable1.getForm();
      assertFalse(rawVariable1.isNewRecord());
      
      rawVariable0.hasSameDisplayName(rawVariable2);
      assertEquals("Unknown", rawVariable2.getCleaningStatus());
      assertEquals("0", rawVariable2.getDisplayItemIdentifier());
      assertEquals("Unknown", rawVariable2.getAvailability());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.058693016027028
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.setAlias("variable.alias.label");
      rawVariable0.hasSameDisplayName(derivedVariable0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setIdentifier(0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setCleaned(true);
      derivedVariable0.setIdentifier(0);
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      ArrayList<SupportingDocument> arrayList1 = rawVariable1.getSupportingDocuments();
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      arrayList2.addAll((Collection<? extends SupportingDocument>) arrayList0);
      derivedVariable0.setSupportingDocuments(arrayList1);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      User user0 = new User("/la4", ":@A&&mL_zIYqO2v!`n");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      assertEquals("variable.alias.label", rawVariable0.getAlias());
      
      boolean boolean1 = rawVariable1.hasSameDisplayName(derivedVariable0);
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.2199098814082787
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.createVariableSummary();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.EDIT;
      ValueLabel.validateFields(valueLabel0);
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      rawVariable0.addValueLabel(valueLabel0);
      ontologyTerm0.getDisplayName();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      rawVariable0.setCleaned(true);
      ontologyTerm1.setTerm("-LHA");
      ontologyTerm1.getDisplayName();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.removeOntologyTerm(ontologyTerm1);
      rawVariable0.setAlias("");
      rawVariable0.hasSameDisplayName(rawVariable1);
      rawVariable1.getNotes();
      ArrayList<OntologyTerm> arrayList0 = rawVariable1.getOntologyTerms();
      rawVariable0.removeOntologyTerms(arrayList0);
      ontologyTerm0.setTerm(":@A&&mL_zIYqO2v!`n");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<ValueLabel> arrayList1 = rawVariable0.getValueLabels();
      derivedVariable0.setValueLabels(arrayList1);
      assertFalse(derivedVariable0.isCleaned());
      
      User user0 = new User("#>SEhk!Aaba% y9", "Y");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertTrue(rawVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.994205922736905
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setForm("macaw.businessLayer.Va\"iable");
      derivedVariable0.setAlias("macaw.businessLayer.Va\"iable");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier((-1));
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      derivedVariable0.setIdentifier((-3407));
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable1.getSupportingDocuments();
      arrayList0.add(supportingDocument0);
      ArrayList<SupportingDocument> arrayList1 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList1.addAll((Collection<? extends SupportingDocument>) arrayList0);
      derivedVariable0.setSupportingDocuments(arrayList0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.containsSupportingDocument(supportingDocument0);
      derivedVariable1.setAlias("USER");
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.9713931362744876
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.EDIT;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addValueLabel(valueLabel0);
      ontologyTerm0.getDisplayName();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      rawVariable0.setCleaned(true);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setTerm("-LHA");
      ontologyTerm0.getDisplayName();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      rawVariable1.setAlias(")Com;(zafm#Mvz");
      rawVariable1.hasSameDisplayName(rawVariable0);
      rawVariable1.getNotes();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.getValueLabels();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable2.removeSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.973176228217073
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>(685);
      ValueLabel valueLabel0 = new ValueLabel();
      arrayList0.add(valueLabel0);
      ValueLabel valueLabel1 = new ValueLabel();
      derivedVariable0.setIdentifier(2320);
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.EDIT;
      valueLabel1.setEditingOperationType(valueLabel_EditingOperationType0);
      arrayList0.add(valueLabel1);
      derivedVariable0.setValueLabels(arrayList0);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      derivedVariable0.removeSupportingDocuments(arrayList1);
      derivedVariable0.getLabel();
      derivedVariable0.isNewRecord();
      derivedVariable0.getAvailability();
      derivedVariable0.removeValueLabel(valueLabel0);
      derivedVariable0.isCleaned();
      derivedVariable0.getFilePath();
      derivedVariable0.getDisplayName();
      ArrayList<String> arrayList2 = Variable.validateFields(derivedVariable0);
      assertEquals(2320, derivedVariable0.getIdentifier());
      assertFalse(arrayList2.isEmpty());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.707883557241649
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnStart("tPa#$s5|p/wW,a /");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.addSourceVariables(arrayList0);
      ontologyTerm0.setTerm("mtYJ3vzgf}PXFh");
      ontologyTerm0.setDescription("mtYJ3vzgf}PXFh");
      ontologyTerm0.setDescription("variable.name.label");
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.getDisplayName();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.cloneAttributes(derivedVariable1);
      assertEquals("tPa#$s5|p/wW,a /", derivedVariable0.getColumnStart());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.7518685126965625
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      UnaryOperator<SupportingDocument> unaryOperator0 = UnaryOperator.identity();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User("J*[q?F?Si|;lCfKw}M", "LHA");
      user0.setAddressLine2((String) null);
      UnaryOperator.identity();
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument0);
      arrayList0.add(supportingDocument0);
      supportingDocument0.setFileName("");
      unaryOperator0.apply(supportingDocument0);
      arrayList0.replaceAll(unaryOperator0);
      rawVariable0.addSupportingDocuments(arrayList0);
      rawVariable0.setColumnStart("");
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList1.add(ontologyTerm0);
      rawVariable0.removeOntologyTerms(arrayList1);
      rawVariable0.isNewRecord();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(rawVariable0);
      ArrayList<Variable> arrayList2 = derivedVariable0.getSourceVariables();
      derivedVariable0.setSourceVariables(arrayList2);
      rawVariable0.setAlias("general.error.promotesSecurityRisk");
      rawVariable0.getAlias();
      assertEquals("general.error.promotesSecurityRisk", rawVariable0.getAlias());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.createVariableSummary();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName("user.firstName.saveChanges");
      rawVariable0.columnStart = "[y|b2";
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.getCodeBookNumber();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setLabel("rR|L");
      rawVariable0.addValueLabel(valueLabel0);
      User user0 = new User("macaw.businessLayer.ValueLabel$EditingOperationType", "");
      try { 
        User.validateFields(user0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.884953958581695
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getCodeBookNumber();
      derivedVariable0.setCleaned(true);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.clone();
      supportingDocument0.setIsNewRecord(true);
      derivedVariable0.addSupportingDocument(supportingDocument0);
      derivedVariable0.setQuestionNumber((String) null);
      derivedVariable0.setColumnStart("I%+Z4UBkt\"1\"p");
      derivedVariable0.setAlias("");
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.clone();
      ontologyTerm0.setTerm(":/stV^s");
      rawVariable0.setCleaned(true);
      ontologyTerm0.setTerm("");
      ontologyTerm0.getDisplayName();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.setAlias("");
      rawVariable0.hasSameDisplayName(derivedVariable0);
      rawVariable0.getNotes();
      derivedVariable0.getValueLabels();
      // Undeclared exception!
      try { 
        derivedVariable0.removeSupportingDocuments(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setNotes("");
      // Undeclared exception!
      try { 
        rawVariable0.containsOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.20952841533428
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.validateFields(valueLabel0);
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.DELETE;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addValueLabel(valueLabel0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.getDisplayName();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setNameSpace("general.fieldValue.blank");
      rawVariable0.updateOntologyTerm(ontologyTerm2);
      rawVariable0.setCleaned(false);
      ontologyTerm2.setTerm("general.fieldValue.blank");
      ontologyTerm0.getDisplayName();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      rawVariable0.setAlias("-LHA");
      rawVariable0.hasSameDisplayName(rawVariable1);
      rawVariable0.getNotes();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.removeOntologyTerms(arrayList0);
      ontologyTerm2.setTerm("sww@[:nl)g6@cL_");
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      rawVariable1.setYear("Ej5S0Kj");
      ontologyTerm3.clone();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm4);
      User user0 = new User();
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      rawVariable0.getForm();
      rawVariable1.getAlias();
      rawVariable0.getCategory();
      assertEquals("-LHA", rawVariable0.getAlias());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
      
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.form = "]|TBN4xHuMJW9vKp";
      rawVariable0.hasSameDisplayName(derivedVariable0);
      assertEquals("", rawVariable0.getName());
      
      int int0 = derivedVariable0.getIdentifier();
      assertEquals(0, int0);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=3.2603936002885616
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.validateFields(valueLabel0);
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.DELETE;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addValueLabel(valueLabel0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.getDisplayName();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm2);
      rawVariable0.setCleaned(false);
      ontologyTerm2.setTerm("general.fieldValue.blank");
      ontologyTerm0.getDisplayName();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      rawVariable0.setAlias("-LHA");
      rawVariable0.hasSameDisplayName(rawVariable1);
      rawVariable0.getNotes();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.removeOntologyTerms(arrayList0);
      ontologyTerm2.setTerm("sww@[:nl)g6@cL_");
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm3.clone();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm4);
      rawVariable1.getCodeBookNumber();
      rawVariable0.getFilePath();
      assertEquals("-LHA", rawVariable0.getAlias());
      
      rawVariable1.getColumnStart();
      rawVariable1.addValueLabel(valueLabel0);
      assertFalse(rawVariable1.isNewRecord());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      rawVariable0.addSupportingDocuments(arrayList0);
      ontologyTerm0.setTerm("general.fieldValue.unknown");
      ontologyTerm0.clone();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.getCodeBookNumber();
      rawVariable0.getFilePath();
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.7894678696691564
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.setForm("4_{8l5u60OHom73");
      LinkedList<ValueLabel> linkedList0 = new LinkedList<ValueLabel>();
      linkedList0.retainAll(arrayList0);
      linkedList0.stream();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList1.containsAll(linkedList0);
      derivedVariable0.setOntologyTerms(arrayList1);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.removeOntologyTerm(ontologyTerm0);
      ontologyTerm0.setIdentifier((-1539));
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      arrayList1.trimToSize();
      derivedVariable1.removeOntologyTerms(arrayList1);
      Variable.validateFields(derivedVariable1);
      boolean boolean0 = derivedVariable1.hasSameDisplayName(derivedVariable0);
      assertEquals("4_{8l5u60OHom73", derivedVariable0.getForm());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.325693224051284
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setForm("macaw.businessLayer.Variable");
      derivedVariable0.setAlias("USER");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier((-1539));
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      MacawChangeEvent[] macawChangeEventArray0 = new MacawChangeEvent[7];
      User user0 = new User((String) null, (String) null);
      RawVariable rawVariable0 = new RawVariable();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, rawVariable0);
      macawChangeEventArray0[0] = macawChangeEvent0;
      MacawChangeEvent macawChangeEvent1 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, rawVariable0);
      macawChangeEventArray0[1] = macawChangeEvent1;
      User user1 = new User();
      MacawChangeEvent macawChangeEvent2 = Variable.detectChangesInAlternativeVariable(user1, rawVariable0, derivedVariable0);
      macawChangeEventArray0[2] = macawChangeEvent2;
      User user2 = new User();
      MacawChangeEvent macawChangeEvent3 = Variable.detectChangesInAlternativeVariable(user2, derivedVariable0, rawVariable0);
      macawChangeEventArray0[3] = macawChangeEvent3;
      User user3 = new User();
      RawVariable rawVariable1 = new RawVariable();
      MacawChangeEvent macawChangeEvent4 = Variable.detectChangesInAlternativeVariable(user3, rawVariable1, rawVariable1);
      macawChangeEventArray0[4] = macawChangeEvent4;
      User user4 = new User("USER", "$");
      MacawChangeEvent macawChangeEvent5 = Variable.detectChangesInAlternativeVariable(user4, rawVariable0, rawVariable0);
      macawChangeEventArray0[5] = macawChangeEvent5;
      MacawChangeEvent macawChangeEvent6 = new MacawChangeEvent();
      macawChangeEventArray0[6] = macawChangeEvent6;
      arrayList0.toArray(macawChangeEventArray0);
      arrayList0.trimToSize();
      derivedVariable0.removeOntologyTerms(arrayList0);
      derivedVariable0.createVariableSummary();
      derivedVariable0.getOntologyTerms();
      derivedVariable0.getName();
      derivedVariable0.getAvailability();
      derivedVariable0.isCoded();
      derivedVariable0.setAvailability("ng;u1tkn");
      derivedVariable0.setName("");
      derivedVariable0.setNotes("DUPLICATE_VALUE_LABEL");
      derivedVariable0.setCategory("DUPLICATE_VALUE_LABEL");
      derivedVariable0.setIdentifier(19);
      Variable.validateFields(derivedVariable0);
      ArrayList<ValueLabel> arrayList1 = new ArrayList<ValueLabel>();
      // Undeclared exception!
      try { 
        arrayList1.remove(19);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 19, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=3.0430487176534666
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlias("USER");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier((-1539));
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      MacawChangeEvent[] macawChangeEventArray0 = new MacawChangeEvent[7];
      User user0 = new User("USER", "USER");
      RawVariable rawVariable0 = new RawVariable();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, rawVariable0);
      macawChangeEventArray0[0] = macawChangeEvent0;
      MacawChangeEvent macawChangeEvent1 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, rawVariable0);
      macawChangeEventArray0[1] = macawChangeEvent1;
      User user1 = new User();
      Variable.detectChangesInAlternativeVariable(user1, rawVariable0, derivedVariable0);
      User user2 = new User();
      MacawChangeEvent macawChangeEvent2 = Variable.detectChangesInAlternativeVariable(user2, derivedVariable0, rawVariable0);
      macawChangeEventArray0[3] = macawChangeEvent2;
      RawVariable rawVariable1 = new RawVariable();
      MacawChangeEvent macawChangeEvent3 = Variable.detectChangesInAlternativeVariable(user1, rawVariable1, rawVariable1);
      macawChangeEventArray0[4] = macawChangeEvent3;
      MacawChangeEvent macawChangeEvent4 = Variable.detectChangesInAlternativeVariable(user1, rawVariable0, rawVariable0);
      macawChangeEventArray0[5] = macawChangeEvent4;
      MacawChangeEvent macawChangeEvent5 = new MacawChangeEvent();
      macawChangeEventArray0[6] = macawChangeEvent5;
      arrayList0.toArray(macawChangeEventArray0);
      arrayList0.trimToSize();
      derivedVariable0.removeOntologyTerms(arrayList0);
      derivedVariable0.createVariableSummary();
      rawVariable0.setCategory("$");
      RawVariable rawVariable2 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable2);
      rawVariable0.getForm();
      derivedVariable0.hasSameDisplayName(rawVariable1);
      assertEquals("USER", derivedVariable0.getAlias());
      
      rawVariable2.getForm();
      assertEquals("Unknown", rawVariable2.getCategory());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.301608716407634
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.validateFields(valueLabel0);
      derivedVariable0.addValueLabel(valueLabel0);
      String string0 = "_s]}uX.3dB*wwIz! m";
      derivedVariable0.notes = "_s]}uX.3dB*wwIz! m";
      derivedVariable0.setIsNewRecord(true);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.addSourceVariable(derivedVariable1);
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.7431250348860408
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaningDescription("");
      derivedVariable0.clone();
      derivedVariable0.columnStart = "";
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      User user0 = new User("", "");
      RawVariable rawVariable1 = new RawVariable();
      supportingDocument0.setFileName((String) null);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable1.setAlias("");
      arrayList0.add(supportingDocument0);
      user0.setLastName("general.fieldValue.unknown");
      rawVariable1.setColumnEnd("C0^5");
      rawVariable1.removeSupportingDocuments(arrayList0);
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable1);
      derivedVariable0.getName();
      rawVariable0.clone();
      derivedVariable0.setFilePath("");
      rawVariable0.hasSameDisplayName(rawVariable1);
      rawVariable1.setIsNewRecord(true);
      derivedVariable0.setName("general.fieldValue.unknown");
      assertEquals("general.fieldValue.unknown", derivedVariable0.getName());
      
      rawVariable0.setFilePath("variable.questionNumber.label");
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.5819853473450114
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.setSourceVariables((ArrayList<Variable>) null);
      derivedVariable0.setForm("^()ZqOSBf4");
      assertEquals("^()ZqOSBf4", derivedVariable0.getForm());
      
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.cloneAttributes(derivedVariable0);
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.getForm();
      assertFalse(rawVariable2.isCleaned());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.7914234446919735
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.ensureCapacity(1);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setIsNewRecord(true);
      supportingDocument1.setDocumentCode("variable.notes.label");
      arrayList0.add(supportingDocument1);
      arrayList0.add(supportingDocument0);
      derivedVariable0.questionNumber = "user.status.unverified";
      derivedVariable0.setSupportingDocuments(arrayList0);
      derivedVariable0.createVariableSummary();
      derivedVariable0.getForm();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.addValueLabel(valueLabel0);
      derivedVariable0.getOntologyTerms();
      derivedVariable0.getYear();
      RawVariable rawVariable0 = new RawVariable();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.4791512914597686
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setForm("macaw.businessLayer.Va\"iable");
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.CANCEL;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      User user0 = new User("macaw.businessLayer.Variable", "W}JW_Il-|Q[-2ljr");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user1 = new User();
      RawVariable rawVariable0 = new RawVariable();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user1, rawVariable0, derivedVariable1);
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent();
      MacawChangeEvent macawChangeEvent2 = new MacawChangeEvent();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      MacawChangeEvent[] macawChangeEventArray0 = new MacawChangeEvent[4];
      macawChangeEventArray0[0] = macawChangeEvent0;
      macawChangeEventArray0[1] = macawChangeEvent1;
      macawChangeEventArray0[2] = macawChangeEvent1;
      macawChangeEventArray0[3] = macawChangeEvent2;
      arrayList0.toArray(macawChangeEventArray0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList0.trimToSize();
      derivedVariable0.removeOntologyTerms(arrayList1);
      derivedVariable0.createVariableSummary();
      derivedVariable0.getOntologyTerms();
      assertEquals("macaw.businessLayer.Va\"iable", derivedVariable0.getForm());
      
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.hasSameDisplayName(derivedVariable1);
      assertFalse(derivedVariable1.isCoded());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnStart("jLwiHX>?*dZI");
      derivedVariable0.setIdentifier(576);
      derivedVariable0.createVariableSummary();
      assertEquals("576", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=3.1646476525928353
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.validateFields(valueLabel0);
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.DELETE;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addValueLabel(valueLabel0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.getDisplayName();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setNameSpace("general.fieldValue.blank");
      rawVariable0.updateOntologyTerm(ontologyTerm2);
      rawVariable0.setCleaned(false);
      ontologyTerm2.setTerm("general.fieldValue.blank");
      ontologyTerm0.getDisplayName();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      rawVariable0.setAlias("-LHA");
      rawVariable0.hasSameDisplayName(rawVariable1);
      rawVariable0.getNotes();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.removeOntologyTerms(arrayList0);
      ontologyTerm2.setTerm("sww@[:nl)g6@cL_");
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm3.clone();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm4);
      User user0 = new User();
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      rawVariable0.getForm();
      rawVariable1.getAlias();
      rawVariable0.getCategory();
      assertEquals("-LHA", rawVariable0.getAlias());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=3.785406854138612
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.cloneAttributes(rawVariable1);
      rawVariable1.setForm((String) null);
      rawVariable1.setValueLabels((ArrayList<ValueLabel>) null);
      rawVariable1.setFilePath("q{89XwARcwoK");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList0.sort(comparator0);
      arrayList0.parallelStream();
      rawVariable1.removeSupportingDocuments(arrayList0);
      rawVariable1.getYear();
      rawVariable0.getCodeBookNumber();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnEnd("q{89XwARcwoK");
      derivedVariable0.hasSameDisplayName(rawVariable0);
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.getDisplayName();
      // Undeclared exception!
      try { 
        rawVariable1.addValueLabel(valueLabel0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.68644405381145
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      String string0 = "variable.codeBookNumber.label";
      rawVariable0.addSupportingDocument((SupportingDocument) null);
      rawVariable0.setAvailability("variable.codeBookNumber.label");
      rawVariable0.setLabel("variable.codeBookNumber.label");
      rawVariable0.createVariableSummary();
      rawVariable0.setColumnEnd("variable.codeBookNumber.label");
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.483149692099513
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList0.sort(comparator0);
      LinkedList<ValueLabel> linkedList0 = new LinkedList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel.validateFields(valueLabel1);
      linkedList0.add(valueLabel0);
      User user0 = new User("", "");
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      User user1 = new User();
      MacawChangeEvent macawChangeEvent1 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      RawVariable rawVariable0 = new RawVariable();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, derivedVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent2 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable1, derivedVariable1);
      assertEquals(0, (int)macawChangeEvent2.getVariableOwnerID());
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent2.getChangeMessage());
      assertNotNull(macawChangeEvent2);
      
      MacawChangeEvent macawChangeEvent3 = new MacawChangeEvent();
      MacawChangeEvent[] macawChangeEventArray0 = new MacawChangeEvent[4];
      macawChangeEventArray0[0] = macawChangeEvent0;
      macawChangeEventArray0[1] = macawChangeEvent1;
      MacawChangeEvent macawChangeEvent4 = new MacawChangeEvent();
      macawChangeEventArray0[2] = macawChangeEvent4;
      macawChangeEventArray0[3] = macawChangeEvent3;
      arrayList0.toArray(macawChangeEventArray0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList1.trimToSize();
      derivedVariable0.removeOntologyTerms(arrayList0);
      VariableSummary variableSummary0 = derivedVariable1.createVariableSummary();
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
      
      derivedVariable0.getOntologyTerms();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.hasSameDisplayName(derivedVariable1);
      derivedVariable0.getYear();
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=3.225498594241295
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      derivedVariable0.getCleaningDescription();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable0.removeSupportingDocuments(arrayList0);
      derivedVariable0.getNotes();
      rawVariable0.getLabel();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      rawVariable0.setCleaned(true);
      derivedVariable0.setIdentifier(0);
      ArrayList<SupportingDocument> arrayList1 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.setSupportingDocuments(arrayList1);
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.setAlias("variable.isCleaned.saveChanges.changedToNotClean");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.hasSameDisplayName(rawVariable0);
      derivedVariable1.setQuestionNumber("DUPLICATE_VALUE_LABEL");
      derivedVariable1.setFilePath("macaw.businessLayer.ValueLabel");
      User user0 = new User();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable2);
      assertEquals("macaw.businessLayer.ValueLabel", derivedVariable1.getFilePath());
      assertEquals("Unknown", derivedVariable1.getCategory());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=3.759288438433745
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      String string0 = "<- p8m={b8";
      derivedVariable0.setNotes("<- p8m={b8");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.cloneAttributes(derivedVariable1);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.add((Variable) derivedVariable1);
      derivedVariable0.removeSourceVariables(arrayList0);
      derivedVariable0.setColumnStart("<- p8m={b8");
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      derivedVariable1.setSupportingDocuments(arrayList1);
      derivedVariable0.isCoded();
      derivedVariable0.setFilePath("<- p8m={b8");
      derivedVariable0.setAlternativeVariable(derivedVariable1);
      RawVariable rawVariable0 = new RawVariable();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=3.632197381311811
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setForm("macaw.businessLayer.Va\"iable");
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.CANCEL;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.cloneAttributes(rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      User user0 = new User("macaw.businessLayer.User", (String) null);
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      rawVariable0.getForm();
      assertEquals("macaw.businessLayer.Va\"iable", rawVariable0.getForm());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<ValueLabel> arrayList0 = rawVariable0.getValueLabels();
      rawVariable0.setValueLabels(arrayList0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFileName("general.fieldValue.unknown");
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean0);
      
      VariableSummary variableSummary0 = rawVariable0.createVariableSummary();
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
      
      rawVariable0.getAlternativeVariable();
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=3.4338006812941
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      derivedVariable0.getCleaningDescription();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.getNotes();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setIdentifier((-1514));
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      arrayList0.trimToSize();
      derivedVariable0.removeOntologyTerms(arrayList0);
      derivedVariable0.createVariableSummary();
      rawVariable0.getName();
      rawVariable0.getYear();
      derivedVariable0.getOntologyTerms();
      derivedVariable0.getName();
      derivedVariable0.getAvailability();
      derivedVariable0.isCoded();
      derivedVariable0.setAvailability("");
      derivedVariable0.setName("Unknown");
      derivedVariable0.setNotes("");
      derivedVariable0.setCategory("3lIrWf7Kq?IO?P  ");
      derivedVariable0.setName("");
      derivedVariable0.setIdentifier((-2073432485));
      assertEquals("-2073432485", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=3.8974745184671344
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      String string0 = "ayAWlly`J";
      derivedVariable0.columnEnd = "ayAWlly`J";
      derivedVariable0.questionNumber = "user.city.saveChanges";
      derivedVariable0.clone();
      derivedVariable0.setIdentifier(1067);
      derivedVariable0.setCleaningDescription("");
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.getCleaningDescription();
      derivedVariable0.setCleaningStatus((String) null);
      derivedVariable0.columnStart = null;
      derivedVariable0.getSupportingDocuments();
      derivedVariable0.setCoded(true);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(derivedVariable1);
      derivedVariable1.getLabel();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      derivedVariable1.containsSourceVariable(derivedVariable0);
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable1, derivedVariable0);
      derivedVariable1.setSupportingDocuments(arrayList0);
      derivedVariable1.getFilePath();
      RawVariable rawVariable0 = new RawVariable();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=3.67572631111497
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      User user0 = new User("", "l*~,w]");
      user0.setLastName("`TWLL~.C#nVQSSa");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.setName("%H\"$3akGNhU");
      derivedVariable0.clone();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.clone();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      derivedVariable0.setNotes("");
      assertEquals("%H\"$3akGNhU", derivedVariable0.getDisplayName());
      
      DerivedVariable.validateFields(derivedVariable0);
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.6845198108434345
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User("", "=Ya");
      user0.setStatus("");
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals(0, arrayList0.size());
      
      derivedVariable0.setName("");
      derivedVariable0.setIdentifier(0);
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=3.747103882725531
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      ArrayList<SupportingDocument> arrayList1 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList1.add(supportingDocument0);
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.setSupportingDocuments(arrayList1);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      arrayList0.add(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>(arrayList0);
      rawVariable0.addOntologyTerms(arrayList2);
      User user1 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaningStatus("kIp+KY~2GeAybjJi;^:");
      derivedVariable0.columnStart = "";
      derivedVariable0.setAlternativeVariable(rawVariable0);
      ArrayList<Variable> arrayList3 = new ArrayList<Variable>();
      derivedVariable0.addSourceVariables(arrayList3);
      derivedVariable0.setAvailability("");
      rawVariable0.setNotes("");
      DerivedVariable.detectFieldChanges(user1, derivedVariable0, derivedVariable0);
      rawVariable0.clone();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.786100866302153
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      derivedVariable0.getCleaningDescription();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.getNotes();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      derivedVariable0.setOntologyTerms(arrayList0);
      ontologyTerm0.getDisplayName();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setIdentifier((-1528));
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      arrayList0.trimToSize();
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.3199044298479494
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList0.sort(comparator0);
      LinkedList<ValueLabel> linkedList0 = new LinkedList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel.validateFields(valueLabel1);
      linkedList0.add(valueLabel0);
      linkedList0.retainAll(arrayList0);
      linkedList0.stream();
      arrayList0.containsAll(linkedList0);
      derivedVariable0.setOntologyTerms(arrayList0);
      derivedVariable0.setCodeBookNumber("*W");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      ontologyTerm0.setIdentifier((-1539));
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      arrayList0.trimToSize();
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.5796288706165487
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      User user0 = new User("general.fieldValue.blank", "general.fieldValue.blank");
      user0.setUserID("i:4uyqXka");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAvailability("general.fieldValue.blank");
      derivedVariable0.setName("general.fieldValue.blank");
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      derivedVariable0.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.clone();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm1);
      ontologyTerm1.setIdentifier((-1933));
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      arrayList0.trimToSize();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList2 = derivedVariable0.getOntologyTerms();
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms(arrayList2);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.addOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = null;
      arrayList0.add((OntologyTerm) null);
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.990517764207639
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      User user0 = new User("general.fieldValue.blank", "general.fieldValue.blank");
      user0.setUserID("i:4uyqXka");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlias("USER");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier((-1));
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      derivedVariable0.setIdentifier(3263);
      ArrayList<SupportingDocument> arrayList1 = derivedVariable0.getSupportingDocuments();
      ArrayList<SupportingDocument> arrayList2 = derivedVariable0.getSupportingDocuments();
      arrayList1.addAll((Collection<? extends SupportingDocument>) arrayList2);
      derivedVariable0.setSupportingDocuments(arrayList1);
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertEquals(3263, derivedVariable0.getIdentifier());
      
      User user1 = new User(":@A&&mL_zIYqO2v!`n", "USER");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaningDescription("variable.saveChanges.valueChanged");
      assertEquals("variable.saveChanges.valueChanged", rawVariable0.getCleaningDescription());
  }
}
