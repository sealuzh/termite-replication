/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 10:29:21 GMT 2019
 */

package weka.filters.unsupervised.attribute;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.Reader;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.Properties;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import weka.core.Attribute;
import weka.core.BinarySparseInstance;
import weka.core.DenseInstance;
import weka.core.Instance;
import weka.core.Instances;
import weka.core.ProtectedProperties;
import weka.core.Range;
import weka.core.SparseInstance;
import weka.filters.AllFilter;
import weka.filters.Filter;
import weka.filters.unsupervised.attribute.Discretize;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Discretize_ESTest extends Discretize_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.3794385835460083
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Range range0 = new Range("-V");
      discretize0.setUseEqualFrequency(false);
      discretize0.m_DiscretizeCols = range0;
      String string0 = discretize0.getRevision();
      assertEquals("8964", string0);
      
      discretize0.attributeIndicesTipText();
      discretize0.getBinRangesString(2665);
      discretize0.setInvertSelection(true);
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Instances instances0 = new Instances((String) null, arrayList0, 69);
      Instances instances1 = new Instances(instances0, (-2028178998));
      discretize0.getCapabilities(instances1);
      String[] stringArray0 = new String[0];
      Discretize.main(stringArray0);
      discretize0.useEqualFrequencyTipText();
      boolean boolean0 = discretize0.getInvertSelection();
      assertTrue(boolean0);
      
      String string1 = discretize0.useBinNumbersTipText();
      assertEquals(10, discretize0.getBins());
      assertEquals("Use bin numbers (eg BXofY) rather than ranges for for discretized attributes", string1);
      assertFalse(discretize0.getMakeBinary());
      assertFalse(discretize0.getUseEqualFrequency());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.5652789553347763
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DenseInstance denseInstance0 = new DenseInstance((-600.734), (double[]) null);
      Discretize discretize0 = new Discretize();
      Discretize discretize1 = new Discretize();
      Discretize discretize2 = new Discretize();
      double[][] doubleArray0 = new double[2][8];
      doubleArray0[0] = null;
      doubleArray0[1] = null;
      discretize2.m_CutPoints = doubleArray0;
      // Undeclared exception!
      try { 
        discretize2.getBinRangesString(1252);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1252
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.195742067015279
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = (-1930.6770869546228);
      doubleArray0[1] = (-1930.6770869546228);
      doubleArray0[2] = (-1930.6770869546228);
      DenseInstance denseInstance0 = new DenseInstance((-1930.6770869546228), doubleArray0);
      Discretize discretize0 = new Discretize();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "\tSpecifies list of columns to Discretize. First and last are valid indexes.\n\t(default: first-last)");
      Discretize discretize1 = new Discretize("=");
      String[] stringArray0 = discretize0.getOptions();
      discretize1.setOptions(stringArray0);
      assertFalse(discretize1.getFindNumBins());
      assertFalse(discretize1.getUseEqualFrequency());
      assertEquals((-1.0), discretize1.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertFalse(discretize1.getUseBinNumbers());
      assertEquals(10, discretize1.getBins());
      assertFalse(discretize1.getMakeBinary());
      assertEquals(6, stringArray0.length);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.9583757105999293
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Make resulting attributes binary.");
      Discretize discretize0 = new Discretize();
      Filter.makeCopy(discretize0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      discretize0.setOutputFormat();
      discretize0.setUseBinNumbers(true);
      discretize0.setFindNumBins(true);
      discretize0.getRevision();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Make resulting attributes binary.");
      discretize0.m_FindNumBins = true;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      discretize0.setOutputFormat();
      discretize0.getOptions();
      // Undeclared exception!
      try { 
        discretize0.batchFinished();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // No input instance format defined
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.5134377053384513
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "}E>RMdEr?nT@2sA";
      stringArray0[1] = "bL^A\"k";
      stringArray0[2] = "";
      stringArray0[3] = "yL24f'a^J+Q,xRxm";
      stringArray0[4] = "yL24f'a^J+Q,xRxm";
      stringArray0[5] = "yL24f'a^J+Q,xRxm";
      stringArray0[7] = "91=(yMyfh><N>O&|";
      stringArray0[8] = "&C<0-CY_";
      Discretize discretize0 = new Discretize("bL^A\"k");
      assertFalse(discretize0.getUseBinNumbers());
      
      discretize0.m_UseBinNumbers = true;
      discretize0.getOptions();
      boolean boolean0 = discretize0.getUseBinNumbers();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.709006195206491
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "}E>RMdEr?nT@2sA";
      stringArray0[1] = "bL^A\"k";
      stringArray0[2] = "";
      stringArray0[3] = "yL24f'a^J+Q,xRxm";
      stringArray0[4] = "";
      stringArray0[5] = "";
      FileSystemHandling.shouldAllThrowIOExceptions();
      stringArray0[7] = "91=(yMyfh><N>O&|";
      stringArray0[8] = "&C<0-CY_";
      Discretize discretize0 = new Discretize("");
      discretize0.setUseEqualFrequency(true);
      discretize0.getOptions();
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = 580.4924756611231;
      doubleArray0[1] = 1.7976931348623157E308;
      doubleArray0[2] = 1.7976931348623157E308;
      DenseInstance denseInstance0 = new DenseInstance(1.7976931348623157E308, doubleArray0);
      SparseInstance sparseInstance0 = new SparseInstance(denseInstance0);
      SparseInstance sparseInstance1 = new SparseInstance(sparseInstance0);
      // Undeclared exception!
      try { 
        discretize0.convertInstance(sparseInstance1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "v)&+t");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Discretize discretize0 = new Discretize(":Vb.tN6.hj");
      discretize0.getInvertSelection();
      discretize0.setInvertSelection(true);
      assertFalse(discretize0.getMakeBinary());
      
      discretize0.m_MakeBinary = true;
      discretize0.getBinRangesString((-562));
      discretize0.getRevision();
      discretize0.getCapabilities();
      discretize0.getBinRangesString((-562));
      assertTrue(discretize0.getMakeBinary());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.090815861702203
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      String[] stringArray0 = new String[8];
      discretize0.m_UseBinNumbers = true;
      discretize0.m_IgnoreClass = true;
      stringArray0[0] = "a$rMYcF%?Q`S~={oO";
      stringArray0[1] = "9LSI";
      discretize0.getOptions();
      assertTrue(discretize0.getUseBinNumbers());
      
      stringArray0[2] = "'@FY";
      stringArray0[3] = "1Lr";
      stringArray0[4] = "An instance filter that discretizes a range of numeric attributes in the dataset into nominal attributes. Discretization is by simple binning. Skips the class attribute if set.";
      stringArray0[5] = "?GpCRsE%\"z$P+=5R>u";
      stringArray0[6] = "5.0.1";
      stringArray0[7] = "'@FY";
      discretize0.setOptions(stringArray0);
      assertFalse(discretize0.getUseEqualFrequency());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DenseInstance denseInstance0 = new DenseInstance((-600.734), (double[]) null);
      Discretize discretize0 = new Discretize();
      assertFalse(discretize0.getFindNumBins());
      assertFalse(discretize0.getMakeBinary());
      assertFalse(discretize0.getUseEqualFrequency());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertEquals(10, discretize0.getBins());
      assertFalse(discretize0.getUseBinNumbers());
      
      int[] intArray0 = new int[7];
      intArray0[0] = 2280;
      intArray0[1] = 2280;
      Discretize discretize1 = new Discretize("FI0Hnm+S/)#\"/");
      String string0 = discretize1.findNumBinsTipText();
      assertFalse(discretize1.getFindNumBins());
      assertEquals((-1.0), discretize1.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertFalse(discretize1.getUseBinNumbers());
      assertEquals(10, discretize1.getBins());
      assertEquals("Optimize number of equal-width bins using leave-one-out. Doesn't work for equal-frequency binning", string0);
      assertFalse(discretize1.getUseEqualFrequency());
      assertFalse(discretize1.getMakeBinary());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.9410699503727393
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "}E>RMdEr?nT@2sA";
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = 5.55555;
      doubleArray0[1] = (-2504.8212481);
      doubleArray0[2] = 5.55555;
      doubleArray0[3] = (-2504.8212481);
      doubleArray0[4] = (-1.7976931348623157E308);
      BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(5.55555, doubleArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      SparseInstance sparseInstance0 = new SparseInstance((SparseInstance) binarySparseInstance0);
      Discretize discretize0 = new Discretize("");
      discretize0.setDesiredWeightOfInstancesPerInterval(5.55555);
      Filter.makeCopies(discretize0, 2280);
      discretize0.getCutPoints(2280);
      discretize0.setMakeBinary(false);
      discretize0.setOutputFormat();
      discretize0.listOptions();
      discretize0.getDesiredWeightOfInstancesPerInterval();
      discretize0.setAttributeIndices("}E>RMdEr?nT@2sA");
      Discretize discretize1 = new Discretize();
      discretize1.desiredWeightOfInstancesPerIntervalTipText();
      discretize1.getFindNumBins();
      try { 
        discretize1.setOptions(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.042096140621144
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.setDesiredWeightOfInstancesPerInterval((-1976.0581371));
      discretize0.m_MakeBinary = true;
      discretize0.m_DesiredWeightOfInstancesPerInterval = (-1.0);
      discretize0.getOptions();
      discretize0.m_MakeBinary = discretize0.m_MakeBinary;
      discretize0.getUseEqualFrequency();
      discretize0.setAttributeIndices("M8$D2|VIYy");
      discretize0.setDesiredWeightOfInstancesPerInterval(0.0);
      discretize0.getCutPoints((-2056));
      discretize0.setMakeBinary(false);
      discretize0.setOutputFormat();
      discretize0.listOptions();
      discretize0.getDesiredWeightOfInstancesPerInterval();
      discretize0.setAttributeIndices("/");
      discretize0.desiredWeightOfInstancesPerIntervalTipText();
      assertEquals(0.0, discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Discretize discretize0 = new Discretize("\tSpecifies the (maximum) number of bins to divide numeric attributes into.\n\t(default = 10)");
      discretize0.attributeIndicesTipText();
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (-214.8);
      doubleArray0[1] = (-214.8);
      doubleArray0[2] = (-214.8);
      doubleArray0[3] = (-214.8);
      BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance((-214.8), doubleArray0);
      // Undeclared exception!
      try { 
        binarySparseInstance0.hasMissingValue();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // DenseInstance doesn't have access to a dataset!
         //
         verifyException("weka.core.AbstractInstance", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      System.setCurrentTimeMillis((-1L));
      Discretize discretize0 = new Discretize("yL24f'ar^J+Q,x|xm");
      String string0 = discretize0.binsTipText();
      assertEquals("Number of bins.", string0);
      
      String string1 = discretize0.useBinNumbersTipText();
      assertEquals(10, discretize0.getBins());
      assertFalse(discretize0.getFindNumBins());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertFalse(discretize0.getMakeBinary());
      assertEquals("Use bin numbers (eg BXofY) rather than ranges for for discretized attributes", string1);
      assertFalse(discretize0.getUseEqualFrequency());
      assertFalse(discretize0.getUseBinNumbers());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Discretize discretize0 = new Discretize("A|olARu;^EC!\"HF[k");
      // Undeclared exception!
      try { 
        discretize0.setAttributeIndices((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.core.Range", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      int[] intArray0 = new int[0];
      discretize0.setAttributeIndicesArray(intArray0);
      String string0 = discretize0.useEqualFrequencyTipText();
      assertEquals("If set to true, equal-frequency binning will be used instead of equal-width binning.", string0);
      
      String string1 = discretize0.globalInfo();
      assertEquals("An instance filter that discretizes a range of numeric attributes in the dataset into nominal attributes. Discretization is by simple binning. Skips the class attribute if set.", string1);
      
      String string2 = discretize0.getAttributeIndices();
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertFalse(discretize0.getUseBinNumbers());
      assertFalse(discretize0.getUseEqualFrequency());
      assertEquals("", string2);
      assertFalse(discretize0.getFindNumBins());
      assertEquals(10, discretize0.getBins());
      assertFalse(discretize0.getMakeBinary());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.5102170934221872
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "}E>RMdEr?nT@2sA";
      stringArray0[1] = "bL^A\"k";
      stringArray0[2] = "";
      stringArray0[3] = "yL24f'a^J+Q,xRxm";
      stringArray0[4] = "";
      stringArray0[5] = "";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "c");
      stringArray0[7] = "91=(yMyfh><N>O&|";
      stringArray0[8] = "&C<0-CY_";
      Discretize discretize0 = new Discretize("");
      String[] stringArray1 = discretize0.getOptions();
      assertEquals(4, stringArray1.length);
      assertEquals(10, discretize0.getBins());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.8198531862850538
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.setOptions((String[]) null);
      discretize0.getInvertSelection();
      discretize0.desiredWeightOfInstancesPerIntervalTipText();
      AllFilter allFilter0 = new AllFilter();
      AllFilter allFilter1 = new AllFilter();
      // Undeclared exception!
      try { 
        allFilter1.getOutputFormat();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // No output format defined.
         //
         verifyException("weka.filters.Filter", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.getUseBinNumbers();
      discretize0.invertSelectionTipText();
      // Undeclared exception!
      try { 
        discretize0.getOutputFormat();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // No output format defined.
         //
         verifyException("weka.filters.Filter", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      String string0 = "6~CTN.AQgKAmR.IFZFD";
      Discretize discretize0 = new Discretize("6~CTN.AQgKAmR.IFZFD");
      discretize0.setBins((-1766));
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "6~CTN.AQgKAmR.IFZFD");
      Discretize discretize1 = new Discretize();
      AllFilter allFilter0 = new AllFilter();
      Instances instances0 = null;
      try {
        instances0 = new Instances((Reader) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StreamTokenizer", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "lBL:]Q");
      Discretize discretize0 = new Discretize("lBL:]Q");
      discretize0.useBinNumbersTipText();
      Filter.makeCopy(discretize0);
      discretize0.makeBinaryTipText();
      int int0 = 11;
      // Undeclared exception!
      try { 
        discretize0.calculateCutPointsByEqualWidthBinning(11);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = (-992.3303584292);
      doubleArray0[2] = 0.0;
      doubleArray0[3] = 0.0;
      Properties properties0 = new Properties();
      ProtectedProperties protectedProperties0 = new ProtectedProperties(properties0);
      Discretize discretize0 = new Discretize("yX/L9j=Lrlx >d~O");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "yX/L9j=Lrlx >d~O");
      LinkedList<String> linkedList0 = new LinkedList<String>();
      Attribute attribute0 = new Attribute("yX/L9j=Lrlx >d~O", linkedList0, (-1211));
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      boolean boolean0 = discretize0.m_FindNumBins;
      assertFalse(boolean0);
      
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "(3@SwV9ETUz");
      Discretize discretize1 = new Discretize("yX/L9j=Lrlx >d~O");
      int int0 = discretize0.getBins();
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertEquals(10, int0);
      assertFalse(discretize0.getMakeBinary());
      assertFalse(discretize0.getUseEqualFrequency());
      assertFalse(discretize0.getUseBinNumbers());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.setOutputFormat();
      boolean boolean0 = discretize0.getMakeBinary();
      assertFalse(boolean0);
      
      String string0 = discretize0.globalInfo();
      assertEquals("An instance filter that discretizes a range of numeric attributes in the dataset into nominal attributes. Discretization is by simple binning. Skips the class attribute if set.", string0);
      
      double double0 = discretize0.getDesiredWeightOfInstancesPerInterval();
      assertFalse(discretize0.getFindNumBins());
      assertFalse(discretize0.getUseEqualFrequency());
      assertFalse(discretize0.getUseBinNumbers());
      assertEquals((-1.0), double0, 0.01);
      assertEquals(10, discretize0.getBins());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      double[] doubleArray0 = new double[3];
      doubleArray0[1] = (double) 2280;
      SparseInstance sparseInstance0 = new SparseInstance(0.0, doubleArray0);
      SparseInstance sparseInstance1 = new SparseInstance(sparseInstance0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Discretize discretize0 = new Discretize("4j:C\"}6");
      String string0 = discretize0.globalInfo();
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertFalse(discretize0.getUseBinNumbers());
      assertEquals(10, discretize0.getBins());
      assertFalse(discretize0.getMakeBinary());
      assertEquals("An instance filter that discretizes a range of numeric attributes in the dataset into nominal attributes. Discretization is by simple binning. Skips the class attribute if set.", string0);
      assertFalse(discretize0.getUseEqualFrequency());
      assertFalse(discretize0.getFindNumBins());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "xv^{M\"K-0";
      stringArray0[1] = ":'CbzW@6BCY{wtjQx)";
      stringArray0[2] = "&>lB,C$6El3s";
      stringArray0[3] = "m=,;";
      discretize0.setDesiredWeightOfInstancesPerInterval((-1976.0581371));
      stringArray0[4] = "S,On{uD'i [T]1`.";
      // Undeclared exception!
      try { 
        discretize0.batchFinished();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // No input instance format defined
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.36575763386371
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "xv^{M\"K-0";
      stringArray0[1] = ":'CbzW@6BCY{wtjQx)";
      stringArray0[2] = "&>lB,C$6El3s";
      stringArray0[3] = "m=,;";
      discretize0.setDesiredWeightOfInstancesPerInterval((-1976.0581371));
      stringArray0[4] = "S,On{uD'i [T]1`.";
      discretize0.m_MakeBinary = true;
      stringArray0[5] = "M8$D2|VIYy";
      discretize0.setOptions(stringArray0);
      discretize0.m_DesiredWeightOfInstancesPerInterval = (-1.0);
      discretize0.getOptions();
      discretize0.m_MakeBinary = false;
      discretize0.isOutputFormatDefined();
      discretize0.setAttributeIndices("M8$D2|VIYy");
      discretize0.setDesiredWeightOfInstancesPerInterval(0.0);
      discretize0.getCutPoints((-2056));
      discretize0.setMakeBinary(false);
      discretize0.setOutputFormat();
      discretize0.listOptions();
      discretize0.getDesiredWeightOfInstancesPerInterval();
      discretize0.setAttributeIndices("/");
      discretize0.desiredWeightOfInstancesPerIntervalTipText();
      assertEquals(0.0, discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 0.0;
      doubleArray0[0] = (-992.3303584292);
      doubleArray0[2] = 0.0;
      doubleArray0[3] = 0.0;
      doubleArray0[4] = 2262.59912030995;
      doubleArray0[5] = 0.0;
      doubleArray0[6] = 20.05362071921592;
      doubleArray0[7] = 0.0;
      doubleArray0[8] = 0.0;
      SparseInstance sparseInstance0 = new SparseInstance(0.0, doubleArray0);
      SparseInstance sparseInstance1 = new SparseInstance(sparseInstance0);
      int int0 = (-2167);
      BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(3.4, (int[]) null, (-2167));
      BinarySparseInstance binarySparseInstance1 = new BinarySparseInstance((SparseInstance) binarySparseInstance0);
      Discretize discretize0 = null;
      try {
        discretize0 = new Discretize((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.core.Range", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DenseInstance denseInstance0 = new DenseInstance((-600.734), (double[]) null);
      Discretize discretize0 = new Discretize();
      int[] intArray0 = new int[13];
      intArray0[0] = 2280;
      intArray0[1] = 2280;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      intArray0[2] = 2280;
      intArray0[3] = 2280;
      intArray0[4] = 2280;
      intArray0[5] = 2280;
      intArray0[6] = 2280;
      discretize0.setUseEqualFrequency(true);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "=");
      // Undeclared exception!
      try { 
        discretize0.calculateCutPoints();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.8198531862850538
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.setOptions((String[]) null);
      discretize0.getUseEqualFrequency();
      discretize0.desiredWeightOfInstancesPerIntervalTipText();
      AllFilter allFilter0 = new AllFilter();
      AllFilter allFilter1 = new AllFilter();
      // Undeclared exception!
      try { 
        allFilter1.getOutputFormat();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // No output format defined.
         //
         verifyException("weka.filters.Filter", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "\tSpecifies list of columns to Discretize. First and last are valid indexes.\n\t(default: first-last)");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "\nGeneral options:\n\n-h\n\tGet help on available options.\n-i <filename>\n\tThe file containing first input instances.\n-o <filename>\n\tThe file first output instances will be written to.\n-r <filename>\n\tThe file containing second input instances.\n-s <filename>\n\tThe file second output instances will be written to.\n-c <class index>\n\tThe number of the attribute to use as the class.\n\t\"first\" and \"last\" are also valid entries.\n\tIf not supplied then no class is assigned.\n");
      Discretize discretize0 = new Discretize("\tSpecifies list of columns to Discretize. First and last are valid indexes.\n\t(default: first-last)");
      discretize0.setFindNumBins(false);
      // Undeclared exception!
      try { 
        discretize0.calculateCutPoints();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.7318621153270364
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "IlJ";
      discretize0.m_ClassIndex = 0;
      stringArray0[1] = "weight";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      discretize0.setOptions(stringArray0);
      discretize0.getDesiredWeightOfInstancesPerInterval();
      discretize0.setFindNumBins(true);
      assertTrue(discretize0.getFindNumBins());
      
      discretize0.setOptions(stringArray0);
      assertFalse(discretize0.getMakeBinary());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.setMakeBinary(true);
      discretize0.getMakeBinary();
      discretize0.desiredWeightOfInstancesPerIntervalTipText();
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (-808.176872348);
      BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(0.0, doubleArray0);
      binarySparseInstance0.copy();
      // Undeclared exception!
      try { 
        binarySparseInstance0.setClassMissing();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // DenseInstance doesn't have access to a dataset!
         //
         verifyException("weka.core.AbstractInstance", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      // Undeclared exception!
      try { 
        discretize0.input((Instance) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // No input instance format defined
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Discretize discretize0 = new Discretize("r/g\"RthBF`,gl3$-(");
      String string0 = discretize0.useEqualFrequencyTipText();
      assertEquals("If set to true, equal-frequency binning will be used instead of equal-width binning.", string0);
      assertFalse(discretize0.getUseEqualFrequency());
      assertFalse(discretize0.getFindNumBins());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertFalse(discretize0.getUseBinNumbers());
      assertEquals(10, discretize0.getBins());
      assertFalse(discretize0.getMakeBinary());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Discretize discretize0 = new Discretize("%vqh>16]w<2#$kNO&");
      assertFalse(discretize0.getUseEqualFrequency());
      
      discretize0.m_UseEqualFrequency = true;
      discretize0.getUseEqualFrequency();
      boolean boolean0 = discretize0.getUseEqualFrequency();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = (-992.3303584292);
      doubleArray0[2] = 0.0;
      doubleArray0[3] = 0.0;
      doubleArray0[4] = 2262.59912030995;
      doubleArray0[5] = 0.0;
      doubleArray0[6] = 20.05362071921592;
      doubleArray0[7] = 0.0;
      doubleArray0[8] = 0.0;
      SparseInstance sparseInstance0 = new SparseInstance(0.0, doubleArray0);
      SparseInstance sparseInstance1 = new SparseInstance(sparseInstance0);
      BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(3.4, (int[]) null, (-2167));
      BinarySparseInstance binarySparseInstance1 = new BinarySparseInstance((SparseInstance) binarySparseInstance0);
      BinarySparseInstance binarySparseInstance2 = new BinarySparseInstance(0.0, (int[]) null, 603);
      Discretize discretize0 = new Discretize();
      // Undeclared exception!
      try { 
        discretize0.calculateCutPointsByEqualFrequencyBinning(2280);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.core.Instances", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      DenseInstance denseInstance0 = new DenseInstance((-600.734), (double[]) null);
      Discretize discretize0 = new Discretize();
      int[] intArray0 = new int[7];
      intArray0[0] = 2280;
      intArray0[1] = 2280;
      intArray0[2] = 2280;
      intArray0[3] = 2280;
      intArray0[4] = 2280;
      intArray0[5] = 2280;
      intArray0[6] = 2280;
      BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance((-1023.9806), intArray0, 2280);
      Filter.makeCopies(discretize0, 2280);
      Discretize discretize1 = new Discretize("R[\f{;M2Rp~N#!");
      // Undeclared exception!
      try { 
        discretize1.calculateCutPointsByEqualWidthBinning(75);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      double double0 = (-233.1585);
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = (-233.1585);
      doubleArray0[1] = 0.0;
      Discretize discretize0 = new Discretize("8X8N]wJrf3^[_g$*");
      try { 
        discretize0.setInputFormat((Instances) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.Filter", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[1] = "L^A\"k";
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "FJ}Tq2");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      Discretize discretize0 = new Discretize("'@FY");
      discretize0.getCapabilities();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "6");
      Discretize discretize1 = new Discretize("}E>RMdEr?nT,@2sA");
      assertFalse(discretize1.getFindNumBins());
      assertFalse(discretize1.getUseEqualFrequency());
      assertFalse(discretize1.getMakeBinary());
      assertEquals((-1.0), discretize1.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertFalse(discretize1.getUseBinNumbers());
      assertEquals(10, discretize1.getBins());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.m_NumBins = 987;
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = (double) 0;
      discretize0.getAttributeIndices();
      discretize0.setAttributeIndices("first-last");
      AllFilter allFilter0 = new AllFilter();
      AllFilter allFilter1 = new AllFilter();
      // Undeclared exception!
      try { 
        discretize0.batchFinished();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // No input instance format defined
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "pb2&keT4`6m'c;:@e]");
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Instances instances0 = new Instances("lib", arrayList0, 66);
      instances0.sort(66);
      Discretize discretize0 = new Discretize();
      Instances instances1 = Instances.mergeInstances(instances0, instances0);
      try { 
        discretize0.setInputFormat(instances1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // weka.filters.unsupervised.attribute.Discretize: No attributes!
         //
         verifyException("weka.core.Capabilities", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.9910042766327036
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      DenseInstance denseInstance0 = new DenseInstance((-600.734), (double[]) null);
      Discretize discretize0 = new Discretize();
      int[] intArray0 = new int[7];
      intArray0[0] = 2280;
      intArray0[1] = 2280;
      intArray0[2] = 2280;
      intArray0[3] = 2280;
      intArray0[4] = 2280;
      intArray0[5] = 2280;
      String[] stringArray0 = new String[8];
      stringArray0[0] = "9y";
      stringArray0[1] = "9y";
      stringArray0[2] = "9y";
      stringArray0[3] = "9y";
      stringArray0[4] = "9y";
      stringArray0[5] = "9y";
      stringArray0[6] = "9y";
      stringArray0[7] = "9y";
      Discretize.main(stringArray0);
      discretize0.getBinRangesString((-1431655763));
      // Undeclared exception!
      try { 
        discretize0.calculateCutPoints();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      DenseInstance denseInstance0 = new DenseInstance((-600.734), (double[]) null);
      Discretize discretize0 = new Discretize();
      int[] intArray0 = new int[7];
      intArray0[0] = 2280;
      intArray0[1] = 2280;
      intArray0[2] = 2280;
      intArray0[3] = 2280;
      intArray0[4] = 2280;
      intArray0[5] = 2280;
      intArray0[6] = 2280;
      BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance((-1023.9806), intArray0, 2280);
      // Undeclared exception!
      try { 
        discretize0.findNumBins(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }
}
