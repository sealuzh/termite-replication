/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 09:55:19 GMT 2019
 */

package weka.experiment;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import weka.experiment.ResultMatrix;
import weka.experiment.ResultMatrixCSV;
import weka.experiment.ResultMatrixGnuPlot;
import weka.experiment.ResultMatrixHTML;
import weka.experiment.ResultMatrixLatex;
import weka.experiment.ResultMatrixPlainText;
import weka.experiment.ResultMatrixSignificance;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ResultMatrix_ESTest extends ResultMatrix_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.2289874463186274
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getEnumerateColNames();
      ResultMatrixHTML resultMatrixHTML0 = null;
      try {
        resultMatrixHTML0 = new ResultMatrixHTML((-1363), 560);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.4510976617490114
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(37, 2);
      int[] intArray0 = new int[8];
      intArray0[0] = 0;
      intArray0[1] = 1;
      intArray0[2] = 2;
      intArray0[3] = 0;
      intArray0[4] = 37;
      resultMatrixHTML0.setColOrder(intArray0);
      resultMatrixHTML0.assign(resultMatrixSignificance0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setRowNameWidth(1);
      resultMatrixHTML0.getAverage(26);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[][] intArray1 = new int[2][3];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixLatex0.setStdDevPrec(37);
      resultMatrixLatex0.getRowName(104);
      // Undeclared exception!
      try { 
        resultMatrixLatex0.setRanking(intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.4064964091301553
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixPlainText0);
      int[] intArray0 = new int[4];
      intArray0[0] = 0;
      resultMatrixHTML1.getColName(0);
      intArray0[1] = 2;
      intArray0[2] = 1;
      intArray0[3] = 1;
      resultMatrixHTML0.setColOrder(intArray0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      resultMatrixLatex0.isMean(0);
      resultMatrixLatex0.getColHidden(1);
      String[] stringArray0 = new String[0];
      resultMatrixPlainText0.printColNamesTipText();
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.9370543224902703
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getRevision();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      resultMatrixLatex1.clear();
      resultMatrixLatex0.doubleToString(3883.0, 0);
      resultMatrixLatex1.listOptions();
      resultMatrixLatex0.doubleToString((-1633.1), 0);
      int[][] intArray0 = new int[3][3];
      int[] intArray1 = new int[8];
      intArray1[0] = 2;
      intArray1[1] = 2;
      intArray1[2] = 0;
      intArray1[3] = 1737;
      intArray1[4] = 0;
      intArray1[5] = 2;
      intArray1[6] = 0;
      intArray1[7] = 2;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[1];
      intArray2[0] = 0;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[5];
      intArray3[0] = 2;
      resultMatrixLatex1.getSummaryTitle(2);
      intArray3[1] = 40;
      intArray3[2] = 0;
      intArray3[3] = 0;
      resultMatrixLatex0.toStringMatrix();
      resultMatrixLatex1.clearSummary();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.padString("(", 421);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      resultMatrixPlainText0.toStringMatrix();
      resultMatrixPlainText0.toString();
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.7614108091967298
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setSignificanceWidth((-2160));
      int[] intArray0 = new int[2];
      intArray0[0] = 2;
      intArray0[1] = 0;
      resultMatrixHTML0.m_RankingDiff = intArray0;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      resultMatrixPlainText0.m_MeanPrec = (-1696);
      resultMatrixGnuPlot0.setRowHidden(0, true);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(1, 0);
      resultMatrixCSV0.getDefaultColNameWidth();
      resultMatrixCSV0.toArray();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixCSV0.padString("~>KO", 211, false);
      resultMatrixSignificance0.getDisplayName();
      resultMatrixPlainText0.setSignificance(3, 811, 13);
      resultMatrixSignificance0.showStdDevTipText();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      resultMatrixLatex0.getDefaultShowStdDev();
      ResultMatrixGnuPlot resultMatrixGnuPlot2 = new ResultMatrixGnuPlot();
      resultMatrixPlainText0.getAverage((-373));
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.3432230341970595
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixPlainText0);
      int[] intArray0 = new int[4];
      intArray0[0] = 0;
      intArray0[1] = 2;
      intArray0[2] = 1;
      intArray0[3] = 1;
      resultMatrixHTML0.setColOrder(intArray0);
      resultMatrixHTML1.assign(resultMatrixHTML0);
      resultMatrixHTML1.getDefaultEnumerateRowNames();
      resultMatrixPlainText0.setRowNameWidth((-1));
      resultMatrixHTML1.getAverage(555);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.isRowName((-1244));
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      String[] stringArray0 = new String[6];
      stringArray0[0] = " ";
      stringArray0[1] = "(";
      stringArray0[2] = " ";
      stringArray0[3] = "(";
      stringArray0[5] = ")";
      stringArray0[5] = "\tThe width of the counts (0 = optimal).\n\t(default: ";
      try { 
        resultMatrixGnuPlot0.setOptions(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.core.Utils", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.291697895352307
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int int0 = ResultMatrix.SIGNIFICANCE_WIN;
      resultMatrixSignificance0.setMeanPrec(1);
      resultMatrixSignificance0.m_RemoveFilterName = true;
      resultMatrixSignificance0.getSignificance(50, 97);
      resultMatrixSignificance0.getDefaultShowAverage();
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.827631346202868
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      int[][] intArray0 = new int[4][4];
      int[] intArray1 = new int[7];
      intArray1[0] = 0;
      intArray1[1] = 0;
      intArray1[2] = 0;
      intArray1[3] = 97;
      intArray1[4] = 1;
      intArray1[5] = 0;
      intArray1[6] = 1;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[3];
      intArray2[0] = 0;
      intArray2[1] = 97;
      intArray2[2] = 435;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[3];
      intArray3[0] = 0;
      intArray3[1] = 2;
      intArray3[2] = 0;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[7];
      intArray4[0] = 1;
      intArray4[1] = 2;
      intArray4[2] = 97;
      intArray4[3] = 2;
      intArray4[4] = 2;
      intArray4[5] = 2;
      intArray4[6] = (-1464);
      intArray0[3] = intArray4;
      resultMatrixGnuPlot0.m_Wins = intArray0;
      resultMatrixGnuPlot0.m_MeanWidth = 0;
      resultMatrixPlainText0.toStringSummary();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(97, 0);
      resultMatrixHTML0.getOptions();
      resultMatrixHTML0.padString("15~_wc:/st", 0);
      resultMatrixHTML0.getRowHidden(1);
      resultMatrixPlainText0.getAverage(1);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.742752003998268
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixCSV0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      resultMatrixHTML0.getOptions();
      resultMatrixHTML0.padString("*", 4);
      resultMatrixHTML0.getRowHidden((-1290));
      ResultMatrixPlainText resultMatrixPlainText1 = null;
      try {
        resultMatrixPlainText1 = new ResultMatrixPlainText((-61), 62);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.488362638353307
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixLatex0.m_MeanWidth = 97;
      resultMatrixHTML0.m_MeanPrec = 2;
      resultMatrixHTML0.clear();
      resultMatrixLatex0.getMean(2, 0);
      resultMatrixLatex0.getDefaultEnumerateColNames();
      resultMatrixLatex0.setRowNameWidth(2);
      resultMatrixLatex0.trimString(")", (-1647));
      resultMatrixLatex0.toStringKey();
      resultMatrixHTML0.toStringSummary();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      resultMatrixPlainText0.getDisplayName();
      resultMatrixLatex0.getVisibleColCount();
      resultMatrixLatex0.getDefaultShowStdDev();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      resultMatrixSignificance0.getSignificance(97, 237);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=4.050121849147477
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.clearRanking();
      resultMatrixCSV0.m_SignificanceWidth = 0;
      resultMatrixCSV0.toStringMatrix();
      resultMatrixCSV0.padString("+:*A+x2=_N=\"U6F", (-3337));
      String[] stringArray0 = new String[5];
      stringArray0[0] = "*";
      resultMatrixCSV0.listOptions();
      stringArray0[1] = "+:*A+x2=_N=\"U6F";
      stringArray0[2] = "v";
      stringArray0[3] = "Dataset,[1]\nrow0,''\n'[v/ /*]',''\n";
      stringArray0[4] = "*";
      ResultMatrixSignificance.main(stringArray0);
      resultMatrixCSV0.getRowNameWidth();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.assign(resultMatrixCSV0);
      resultMatrixSignificance0.globalInfo();
      resultMatrixSignificance0.toStringMatrix();
      resultMatrixSignificance0.globalInfo();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      resultMatrixLatex0.toStringKey();
      resultMatrixSignificance0.setColNameWidth(25);
      resultMatrixCSV0.stdDevPrecTipText();
      resultMatrixLatex0.setCountWidth(0);
      resultMatrixLatex0.clear();
      resultMatrixCSV0.getSignificanceCount(5, (-3337));
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getRevision();
      resultMatrixCSV0.clear();
  }

  /**
  //Test case number: 11
  /*Coverage entropy=4.056379874635902
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      resultMatrixCSV0.setMeanWidth((-605));
      resultMatrixCSV0.getDefaultPrintColNames();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      resultMatrixCSV1.setSignificance(7046, 0, 13);
      resultMatrixCSV0.setStdDevWidth(13);
      resultMatrixCSV0.getSummaryTitle(13);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "[";
      stringArray0[1] = "[";
      stringArray0[2] = "v";
      stringArray0[3] = "[";
      stringArray0[4] = "v";
      stringArray0[5] = "*";
      stringArray0[6] = "]";
      stringArray0[7] = "";
      stringArray0[8] = " ";
      ResultMatrixPlainText.main(stringArray0);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot();
      ResultMatrixGnuPlot resultMatrixGnuPlot2 = new ResultMatrixGnuPlot(resultMatrixGnuPlot1);
      double[][] doubleArray0 = new double[1][6];
      double[] doubleArray1 = new double[0];
      doubleArray0[0] = doubleArray1;
      resultMatrixGnuPlot2.m_Mean = doubleArray0;
      // Undeclared exception!
      try { 
        resultMatrixCSV1.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.7515057120840423
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixCSV0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      resultMatrixHTML0.getOptions();
      resultMatrixHTML0.padString("*", 4);
      resultMatrixHTML0.getRowHidden(0);
      ResultMatrixPlainText resultMatrixPlainText1 = null;
      try {
        resultMatrixPlainText1 = new ResultMatrixPlainText((-61), 0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=4.021671866975364
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 0);
      resultMatrixPlainText0.setMeanWidth(0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(2, 1);
      resultMatrixCSV0.setSignificance(0, 1, 0);
      resultMatrixCSV0.setStdDevWidth(0);
      resultMatrixCSV0.getSummaryTitle((-2673));
      String[] stringArray0 = new String[6];
      stringArray0[0] = "";
      stringArray0[1] = "v";
      stringArray0[2] = "v";
      stringArray0[3] = "*";
      stringArray0[4] = "v";
      stringArray0[5] = "";
      ResultMatrixPlainText.main(stringArray0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.clearRanking();
      resultMatrixGnuPlot0.getDefaultEnumerateColNames();
      resultMatrixCSV0.setStdDevWidth(0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.5323493845026244
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.padString("_4st#fe`.f659", 1, false);
      resultMatrixSignificance0.getDisplayName();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setSignificance(13, 2, 13);
      resultMatrixSignificance0.showStdDevTipText();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(3549, 0);
      resultMatrixGnuPlot0.getStdDev((-4076), (-2669));
      resultMatrixPlainText0.clearSummary();
      resultMatrixPlainText0.setEnumerateColNames(false);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.7487825375407153
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.removeFilterName("PUbE-/HYe+}KX$@,");
      resultMatrixPlainText0.showStdDevTipText();
      resultMatrixPlainText0.getAverage(2208);
      resultMatrixPlainText0.getColCount();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getSummaryTitle(0);
      resultMatrixHTML0.getDefaultPrintColNames();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      resultMatrixCSV0.toStringMatrix();
      resultMatrixCSV0.getRowOrder();
      resultMatrixPlainText0.removeFilterNameTipText();
      resultMatrixPlainText0.getDisplayRow((-1730));
      resultMatrixHTML0.getDefaultPrintColNames();
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.43761596480831
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixPlainText0);
      int[] intArray0 = new int[4];
      intArray0[0] = 0;
      intArray0[1] = 2;
      intArray0[2] = 1;
      intArray0[3] = 1;
      resultMatrixHTML0.setColOrder(intArray0);
      resultMatrixHTML1.assign(resultMatrixHTML0);
      resultMatrixHTML1.getDefaultEnumerateRowNames();
      resultMatrixPlainText0.setRowNameWidth(323);
      resultMatrixHTML1.getAverage(555);
      resultMatrixPlainText0.m_StdDevWidth = 50;
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(2, 226);
      resultMatrixCSV0.toStringSummary();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(226, 1);
      resultMatrixSignificance0.toStringSummary();
      resultMatrixPlainText0.getRowNameWidth();
      assertEquals(323, resultMatrixPlainText0.getRowNameWidth());
      
      resultMatrixHTML0.getDisplayRow(3433);
      resultMatrixHTML0.getShowStdDev();
      int[][] intArray1 = new int[4][3];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      int[] intArray2 = new int[8];
      intArray2[0] = 2;
      intArray2[1] = 1;
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(0, 1943);
      assertTrue(resultMatrixPlainText1.getDefaultPrintRowNames());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.3143372870094976
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(37, 2);
      int[] intArray0 = new int[8];
      intArray0[0] = 0;
      intArray0[1] = 1;
      intArray0[2] = 2;
      intArray0[3] = 0;
      intArray0[4] = 37;
      resultMatrixHTML0.setColOrder(intArray0);
      assertEquals(37, resultMatrixHTML0.getColCount());
      
      resultMatrixHTML0.assign(resultMatrixSignificance0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setRowNameWidth(1);
      resultMatrixHTML0.getAverage(26);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[][] intArray1 = new int[2][3];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      resultMatrixCSV0.setSummary(intArray1, intArray1);
      assertEquals(2, resultMatrixCSV0.getDefaultStdDevPrec());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=4.03943657943559
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.clearRanking();
      resultMatrixCSV0.m_SignificanceWidth = 0;
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      
      resultMatrixCSV0.toStringMatrix();
      resultMatrixCSV0.padString("+:*A+x2=_N=\"U6F", (-3337));
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = "*";
      stringArray0[1] = "+:*A+x2=_N=\"U6F";
      stringArray0[2] = "v";
      stringArray0[3] = "Dataset,[1]\nrow0,''\n'[v/ /*]',''\n";
      stringArray0[4] = "*";
      ResultMatrixSignificance.main(stringArray0);
      resultMatrixCSV0.getRowNameWidth();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixSignificance0);
      resultMatrixSignificance1.assign(resultMatrixCSV0);
      resultMatrixSignificance0.globalInfo();
      ResultMatrixSignificance resultMatrixSignificance2 = new ResultMatrixSignificance(resultMatrixCSV0);
      resultMatrixSignificance2.globalInfo();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.toStringKey();
      resultMatrixSignificance2.setColNameWidth(0);
      resultMatrixCSV0.stdDevPrecTipText();
      resultMatrixLatex0.setCountWidth(2766);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixSignificance0);
      assertEquals(40, resultMatrixLatex1.getRowNameWidth());
      
      resultMatrixLatex1.clear();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(48, 29);
      resultMatrixCSV1.getSignificanceCount(2, 414);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getRevision();
      resultMatrixCSV0.clear();
      resultMatrixSignificance2.getDefaultColNameWidth();
      assertTrue(resultMatrixSignificance2.getPrintRowNames());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.9700138225328914
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.clearRanking();
      resultMatrixCSV0.m_SignificanceWidth = 0;
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      resultMatrixHTML1.getColName((-3337));
      int[] intArray0 = new int[1];
      intArray0[0] = (-3337);
      resultMatrixHTML1.setColOrder(intArray0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML1);
      resultMatrixLatex0.isMean((-3337));
      resultMatrixLatex0.getColHidden((-1790));
      String[] stringArray0 = new String[0];
      ResultMatrixLatex.main(stringArray0);
      resultMatrixLatex0.getRowNameWidth();
      assertEquals(0, resultMatrixLatex0.getColNameWidth());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertTrue(resultMatrixLatex0.getEnumerateColNames());
      assertFalse(resultMatrixLatex0.getShowStdDev());
      assertEquals(0, resultMatrixLatex0.getCountWidth());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.7791529919544784
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setEnumerateColNames(true);
      String string0 = resultMatrixPlainText0.padString("\tThe maximum width for the column names (0 = optimal).\n\t(default: ", 0, false);
      assertEquals(1, resultMatrixPlainText0.getColCount());
      assertEquals("\tThe maximum width for the column names (0 = optimal).\n\t(default: ", string0);
      
      resultMatrixPlainText0.toArray();
      resultMatrixPlainText0.m_ColNameWidth = 0;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(2, 1);
      double[][] doubleArray0 = new double[1][5];
      double[] doubleArray1 = new double[3];
      doubleArray1[0] = (double) 0;
      doubleArray1[1] = (double) 2;
      doubleArray1[2] = (double) 0;
      doubleArray0[0] = doubleArray1;
      resultMatrixSignificance0.m_Mean = doubleArray0;
      resultMatrixSignificance0.getRevision();
      resultMatrixSignificance0.setEnumerateRowNames(false);
      int int0 = resultMatrixPlainText0.getStdDevPrec();
      assertEquals(2, int0);
      
      int int1 = resultMatrixSignificance0.getMeanWidth();
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
      assertEquals(0, int1);
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 2);
      resultMatrixGnuPlot0.toStringRanking();
      assertEquals(0, resultMatrixGnuPlot0.getDefaultSignificanceWidth());
      assertFalse(resultMatrixGnuPlot0.getDefaultShowStdDev());
      assertEquals(50, resultMatrixGnuPlot0.getRowNameWidth());
      assertEquals(0, resultMatrixGnuPlot0.getVisibleColCount());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.3438660264490183
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      String string0 = resultMatrixSignificance0.getColName((-434));
      assertNull(string0);
      
      String string1 = resultMatrixSignificance0.padString("", (-434), false);
      assertEquals("", string1);
      
      int int0 = resultMatrixSignificance0.getDefaultStdDevPrec();
      assertEquals(2, int0);
      
      resultMatrixSignificance0.setMeanPrec(2);
      assertEquals(1, resultMatrixSignificance0.getColCount());
      assertEquals(0, resultMatrixSignificance0.getDefaultMeanWidth());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertEquals(1, resultMatrixSignificance0.getRowCount());
      assertEquals(0, resultMatrixSignificance0.getSignificanceWidth());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.2678487137013743
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setShowStdDev(false);
      resultMatrixLatex0.setColNameWidth(1886);
      resultMatrixLatex0.toStringRanking();
      resultMatrixLatex0.significanceWidthTipText();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      resultMatrixSignificance0.m_MeanPrec = 26;
      int[][] intArray0 = new int[0][1];
      resultMatrixLatex0.m_Significance = intArray0;
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-ranking data not set-";
      stringArray0[1] = ")";
      stringArray0[2] = ")";
      stringArray0[3] = ")";
      stringArray0[4] = "(";
      stringArray0[5] = " ";
      stringArray0[6] = "(";
      resultMatrixSignificance0.m_RowNames = stringArray0;
      resultMatrixSignificance0.setSignificanceWidth(26);
      resultMatrixSignificance0.m_MeanWidth = (-2396);
      // Undeclared exception!
      resultMatrixSignificance0.setSize(1886, 34);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.285558553304461
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(2, 2);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      String[] stringArray0 = new String[7];
      stringArray0[0] = " ";
      stringArray0[1] = "]";
      stringArray0[2] = "*";
      stringArray0[3] = " ";
      stringArray0[4] = "*";
      stringArray0[5] = "v";
      stringArray0[6] = "Ny";
      resultMatrixGnuPlot0.m_RowNames = stringArray0;
      int[] intArray0 = new int[8];
      intArray0[0] = 2;
      intArray0[1] = 2;
      intArray0[2] = 2;
      intArray0[3] = 2;
      intArray0[4] = 0;
      intArray0[5] = 2;
      intArray0[6] = (-1044);
      intArray0[7] = 1;
      resultMatrixGnuPlot0.m_RankingWins = intArray0;
      resultMatrixCSV0.padString("n_+E+'9o", (-3150), true);
      resultMatrixGnuPlot0.getSummaryTitle(2);
      resultMatrixCSV0.printRowNamesTipText();
      resultMatrixCSV0.setRowNameWidth((-951));
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(411, 0);
      resultMatrixSignificance0.getDefaultRowNameWidth();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(97, 97);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.7848450579482735
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixCSV0);
      resultMatrixPlainText0.setRemoveFilterName(false);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      resultMatrixGnuPlot0.setSize(1, 2019);
      resultMatrixGnuPlot0.setRowHidden(2019, true);
      resultMatrixCSV0.getDefaultColNameWidth();
      resultMatrixGnuPlot0.m_EnumerateRowNames = true;
      resultMatrixCSV0.toArray();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[] intArray0 = new int[4];
      intArray0[0] = 0;
      intArray0[1] = 2;
      resultMatrixSignificance0.m_RankingWins = intArray0;
      resultMatrixSignificance0.getDisplayName();
      resultMatrixPlainText0.setSignificance(1, 1, 1);
      resultMatrixSignificance0.showStdDevTipText();
      resultMatrixGnuPlot0.getStdDev(3884, 2);
      assertEquals(2019, resultMatrixGnuPlot0.getVisibleRowCount());
      
      resultMatrixPlainText0.clearSummary();
      resultMatrixPlainText0.setEnumerateColNames(false);
      assertEquals(25, resultMatrixPlainText0.getRowNameWidth());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.560934231908474
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      assertEquals(1, resultMatrixHTML0.getRowCount());
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      
      resultMatrixLatex0.m_MeanWidth = 97;
      resultMatrixHTML0.m_MeanPrec = 2;
      resultMatrixHTML0.clear();
      resultMatrixLatex0.getMean(2, 0);
      resultMatrixLatex0.getDefaultEnumerateColNames();
      resultMatrixLatex0.setRowNameWidth(2);
      resultMatrixLatex0.trimString(")", (-1647));
      resultMatrixLatex0.toStringKey();
      resultMatrixHTML0.toStringSummary();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      resultMatrixPlainText0.getDisplayName();
      resultMatrixLatex0.getVisibleColCount();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getStdDev(1, 0);
      resultMatrixPlainText0.clearSummary();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      resultMatrixPlainText1.setEnumerateColNames(true);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      resultMatrixSignificance0.toStringRanking();
      assertEquals(25, resultMatrixSignificance0.getRowNameWidth());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=4.04956523704667
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      assertEquals(1, resultMatrixCSV0.getColCount());
      
      String string0 = resultMatrixCSV0.toStringMatrix();
      assertEquals("Dataset,[1]\nrow0,''\n'[v/ /*]',''\n", string0);
      
      resultMatrixCSV0.padString(")", 2);
      resultMatrixCSV0.listOptions();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "*";
      stringArray0[1] = "*";
      stringArray0[2] = "[";
      stringArray0[3] = "(";
      stringArray0[4] = "v";
      stringArray0[5] = ") ";
      stringArray0[6] = ")";
      ResultMatrixSignificance.main(stringArray0);
      resultMatrixCSV0.getRowNameWidth();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(123, 0);
      resultMatrixSignificance0.assign(resultMatrixCSV1);
      resultMatrixSignificance0.globalInfo();
      resultMatrixSignificance0.toStringMatrix();
      resultMatrixSignificance0.globalInfo();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixLatex0.toStringKey();
      resultMatrixSignificance0.setColNameWidth(32);
      assertEquals(32, resultMatrixSignificance0.getColNameWidth());
      
      resultMatrixCSV0.stdDevPrecTipText();
      resultMatrixLatex0.setCountWidth(32);
      resultMatrixLatex0.clear();
      resultMatrixCSV1.getSignificanceCount((-3918), 1);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getRevision();
      resultMatrixCSV1.clear();
      assertEquals(2, resultMatrixCSV1.getDefaultMeanPrec());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.7708152195603826
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      int[][] intArray0 = new int[4][4];
      int[] intArray1 = new int[7];
      intArray1[0] = 0;
      intArray1[1] = 0;
      intArray1[2] = 0;
      intArray1[3] = 97;
      intArray1[4] = 1;
      intArray1[5] = 0;
      intArray1[6] = 1;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[3];
      intArray2[0] = 0;
      intArray2[1] = 97;
      intArray2[2] = 435;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[3];
      intArray3[0] = 0;
      intArray3[1] = 2;
      intArray3[2] = 0;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[7];
      intArray4[0] = 1;
      intArray4[1] = 2;
      intArray4[2] = 97;
      intArray4[3] = 2;
      intArray4[4] = 2;
      intArray4[5] = 2;
      intArray4[6] = (-1464);
      intArray0[3] = intArray4;
      resultMatrixGnuPlot0.m_Wins = intArray0;
      resultMatrixGnuPlot0.m_MeanWidth = 0;
      resultMatrixPlainText0.toStringSummary();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixPlainText0);
      String[] stringArray0 = resultMatrixHTML0.getOptions();
      assertEquals(18, stringArray0.length);
      
      String string0 = resultMatrixHTML0.padString("15~_wc:/st", 0);
      assertEquals("15~_wc:/st", string0);
      
      resultMatrixHTML0.getRowHidden(1);
      double double0 = resultMatrixPlainText0.getAverage(1);
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      assertEquals(0.0, double0, 0.01);
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertEquals(0, resultMatrixPlainText0.getColNameWidth());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
      assertEquals(50, resultMatrixPlainText0.getRowNameWidth());
      assertEquals(0, resultMatrixPlainText0.getCountWidth());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.9149400192019006
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixPlainText0);
      int[] intArray0 = new int[4];
      intArray0[0] = 0;
      intArray0[1] = 2;
      intArray0[2] = 1;
      intArray0[3] = 1;
      resultMatrixHTML0.setColOrder(intArray0);
      resultMatrixHTML1.getDefaultEnumerateRowNames();
      resultMatrixPlainText0.setRowNameWidth((-1));
      resultMatrixHTML1.getAverage(555);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.isRowName(2);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      String[] stringArray0 = new String[6];
      stringArray0[0] = " ";
      stringArray0[1] = "(";
      stringArray0[2] = " ";
      stringArray0[3] = "(";
      stringArray0[4] = ")";
      resultMatrixHTML0.setEnumerateColNames(false);
      stringArray0[5] = "\tThe width of the counts (0 = optimal).\n\t(default: ";
      resultMatrixGnuPlot0.setOptions(stringArray0);
      resultMatrixGnuPlot0.getMean(1, 0);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixHTML0);
      resultMatrixGnuPlot1.getStdDevWidth();
      resultMatrixCSV0.getDisplayRow(1);
      ResultMatrixHTML resultMatrixHTML2 = new ResultMatrixHTML();
      // Undeclared exception!
      try { 
        resultMatrixHTML0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.5914179882487653
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int int0 = 3090;
      resultMatrixSignificance0.toArray();
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.padString((String) null, 0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=3.746736700787604
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.m_MeanPrec = 26;
      resultMatrixGnuPlot0.m_SignificanceWidth = (-189);
      resultMatrixGnuPlot0.RIGHT_PARENTHESES = "scriptsize\n";
      resultMatrixGnuPlot0.getDefaultColNameWidth();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      assertEquals(1, resultMatrixSignificance0.getVisibleColCount());
      
      String string0 = resultMatrixSignificance0.toStringMatrix();
      assertEquals(0, resultMatrixSignificance0.getStdDevWidth());
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertEquals(0, resultMatrixSignificance0.getCountWidth());
      assertEquals("Dataset          col0\n---------------------\nrow0                 \n", string0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=3.191524505922819
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      resultMatrixSignificance0.getCountWidth();
      resultMatrixGnuPlot0.getDefaultRowNameWidth();
      resultMatrixPlainText0.getCount(3);
      ResultMatrixCSV resultMatrixCSV0 = null;
      try {
        resultMatrixCSV0 = new ResultMatrixCSV((ResultMatrix) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.848515435066555
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.m_MeanPrec = (-2772);
      resultMatrixSignificance0.clear();
      resultMatrixSignificance0.getOptions();
      resultMatrixSignificance0.getSignificanceWidth();
      resultMatrixSignificance0.getDefaultEnumerateRowNames();
      resultMatrixSignificance0.toStringRanking();
      resultMatrixSignificance0.setRowNameWidth(0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      resultMatrixSignificance0.assign(resultMatrixLatex0);
      resultMatrixSignificance0.getRevision();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 1);
      resultMatrixPlainText0.globalInfo();
      int[] intArray0 = new int[9];
      intArray0[0] = (-1625);
      intArray0[1] = 2;
      intArray0[2] = 2;
      intArray0[3] = 2;
      intArray0[4] = 0;
      intArray0[5] = 1;
      intArray0[6] = 2;
      intArray0[7] = (-2772);
      int int0 = (-499);
      intArray0[8] = (-499);
      resultMatrixLatex0.setRowOrder(intArray0);
      resultMatrixSignificance0.getCountWidth();
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=4.0298125152490565
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setSignificanceWidth((-2160));
      int[] intArray0 = new int[2];
      intArray0[0] = 2;
      intArray0[1] = 0;
      resultMatrixHTML0.m_RankingDiff = intArray0;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "v";
      ResultMatrixSignificance.main(stringArray0);
      ResultMatrixLatex resultMatrixLatex0 = null;
      try {
        resultMatrixLatex0 = new ResultMatrixLatex(2876, (-1731));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.498649911177895
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[] intArray0 = new int[5];
      intArray0[0] = 0;
      intArray0[1] = 2;
      intArray0[2] = 2;
      intArray0[3] = 2;
      intArray0[4] = 0;
      resultMatrixHTML0.setRowOrder(intArray0);
      resultMatrixHTML0.clearHeader();
      resultMatrixHTML0.setShowAverage(true);
      resultMatrixHTML0.trimString("|wlY(yxYKNvv", 3513);
      boolean[] booleanArray0 = new boolean[4];
      booleanArray0[0] = true;
      booleanArray0[1] = true;
      booleanArray0[2] = true;
      booleanArray0[3] = true;
      resultMatrixHTML0.m_ColHidden = booleanArray0;
      resultMatrixHTML0.setRowHidden(1653, true);
      resultMatrixHTML0.m_ShowStdDev = true;
      resultMatrixHTML0.removeFilterName(",^vsqv");
      assertTrue(resultMatrixHTML0.getShowAverage());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=3.650791836385212
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getDefaultRowNameWidth();
      resultMatrixPlainText0.getRevision();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(1, 25);
      int[] intArray0 = new int[5];
      intArray0[0] = 25;
      intArray0[1] = 1;
      intArray0[2] = 25;
      resultMatrixPlainText0.setRowOrder(intArray0);
      intArray0[3] = 0;
      intArray0[4] = 25;
      resultMatrixCSV0.m_RankingWins = intArray0;
      resultMatrixCSV0.toStringMatrix();
      int int0 = (-1664);
      ResultMatrixHTML resultMatrixHTML0 = null;
      try {
        resultMatrixHTML0 = new ResultMatrixHTML(1, (-1664));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.9594502896394874
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixPlainText0);
      resultMatrixHTML0.m_RowNameWidth = 0;
      resultMatrixHTML0.toStringKey();
      resultMatrixPlainText0.assign(resultMatrixHTML0);
      resultMatrixPlainText0.clearHeader();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      String[] stringArray0 = new String[6];
      int[] intArray0 = new int[8];
      intArray0[0] = 1;
      intArray0[1] = 2;
      intArray0[2] = 1;
      intArray0[3] = 2;
      intArray0[4] = 2;
      intArray0[5] = 0;
      intArray0[6] = 0;
      intArray0[7] = 2;
      resultMatrixHTML0.setColOrder(intArray0);
      resultMatrixPlainText0.RIGHT_PARENTHESES = "(";
      stringArray0[0] = "(";
      stringArray0[1] = "v";
      stringArray0[2] = "(";
      stringArray0[3] = "v";
      stringArray0[4] = "v";
      stringArray0[5] = "(";
      ResultMatrixCSV.main(stringArray0);
      resultMatrixCSV0.WIN_STRING = "92Yh,]wA4&OU{D5lj";
      resultMatrixCSV0.toStringRanking();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.toStringMatrix();
      resultMatrixHTML0.showAverageTipText();
      resultMatrixHTML0.toStringKey();
      assertEquals(0, resultMatrixPlainText0.getRowNameWidth());
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.4247645620009837
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setSignificanceWidth((-2160));
      int[] intArray0 = new int[2];
      intArray0[0] = 2;
      intArray0[1] = 0;
      resultMatrixHTML0.m_RankingDiff = intArray0;
      resultMatrixHTML0.getRowName((-1806));
      resultMatrixHTML0.clearRanking();
      resultMatrixHTML0.getMean((-1806), 32);
      resultMatrixHTML0.setShowAverage(false);
      resultMatrixHTML0.trimString((String) null, 0);
      resultMatrixHTML0.getDefaultPrintColNames();
      String[][] stringArray0 = new String[8][4];
      // Undeclared exception!
      try { 
        resultMatrixHTML0.getColSize(stringArray0, 3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.385146811311966
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixLatex0.m_MeanWidth = 97;
      resultMatrixHTML0.m_MeanPrec = 2;
      resultMatrixHTML0.clear();
      resultMatrixLatex0.getMean(2, 0);
      resultMatrixLatex0.getDefaultEnumerateColNames();
      resultMatrixLatex0.setRowNameWidth(2);
      resultMatrixHTML0.toStringKey();
      resultMatrixLatex0.toStringKey();
      resultMatrixHTML0.toStringSummary();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      resultMatrixPlainText0.getDisplayName();
      assertEquals(2, resultMatrixLatex0.getRowNameWidth());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(270, 1);
      resultMatrixGnuPlot0.getDefaultEnumerateColNames();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(24, 9);
      resultMatrixCSV0.setStdDevWidth(276);
      assertEquals(276, resultMatrixCSV0.getStdDevWidth());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=3.3504601899852124
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setStdDevPrec(0);
      resultMatrixHTML0.trimString("|wlY(yxYKNvv", 3513);
      resultMatrixHTML0.setRowHidden(1653, true);
      assertEquals(0, resultMatrixHTML0.getStdDevPrec());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.4714595192696573
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      
      resultMatrixLatex0.m_MeanWidth = 97;
      resultMatrixHTML0.m_MeanPrec = 2;
      resultMatrixHTML0.clear();
      resultMatrixLatex0.getMean(2, 0);
      resultMatrixLatex0.getDefaultEnumerateColNames();
      resultMatrixLatex0.setRowNameWidth(2);
      resultMatrixLatex0.trimString(")", (-1647));
      resultMatrixLatex0.toStringKey();
      resultMatrixHTML0.toStringSummary();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      resultMatrixPlainText0.getDisplayName();
      resultMatrixLatex0.getVisibleColCount();
      resultMatrixLatex0.getDefaultShowStdDev();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      double double0 = resultMatrixPlainText0.getAverage(0);
      assertEquals(Double.NaN, double0, 0.01);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.2886062789553234
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.m_MeanPrec = (-2772);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      // Undeclared exception!
      try { 
        resultMatrixCSV0.getHeader("show-stddev");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=3.149369925311053
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(25, 25);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixSignificance0);
      resultMatrixGnuPlot0.m_PrintRowNames = true;
      resultMatrixSignificance0.clear();
      int[][] intArray0 = new int[6][9];
      int[] intArray1 = new int[7];
      intArray1[0] = 1;
      intArray1[1] = 1;
      intArray1[2] = 1;
      intArray1[3] = 1;
      intArray1[4] = 2;
      intArray1[5] = 1;
      intArray1[6] = 1;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[4];
      intArray2[0] = 0;
      intArray2[1] = (-4369);
      intArray2[2] = 1;
      intArray2[3] = 274;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[9];
      intArray3[0] = 2;
      intArray3[1] = 25;
      intArray3[2] = 2;
      intArray3[3] = 1;
      intArray3[4] = 25;
      intArray3[5] = 0;
      intArray3[6] = 1;
      intArray3[7] = (-4369);
      intArray3[8] = 1;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[9];
      intArray4[0] = 1;
      intArray4[1] = 0;
      intArray4[2] = 1;
      intArray4[3] = 1015;
      intArray4[4] = 0;
      intArray4[5] = 3;
      intArray4[6] = 2;
      intArray4[7] = 1;
      intArray4[8] = 1;
      intArray0[3] = intArray4;
      int[] intArray5 = new int[9];
      intArray5[0] = 25;
      intArray5[1] = 1015;
      intArray5[2] = 0;
      intArray5[3] = 1;
      intArray5[4] = 2;
      intArray5[5] = 1;
      intArray5[6] = 1;
      intArray5[7] = 1;
      intArray5[8] = 25;
      intArray0[4] = intArray5;
      int[] intArray6 = new int[0];
      intArray0[5] = intArray6;
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.setRanking(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=3.8692248681831103
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.m_MeanPrec = (-2772);
      resultMatrixSignificance0.clear();
      resultMatrixSignificance0.getOptions();
      resultMatrixSignificance0.getSignificanceWidth();
      resultMatrixSignificance0.getDefaultEnumerateRowNames();
      resultMatrixSignificance0.toStringRanking();
      resultMatrixSignificance0.setRowNameWidth(0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      resultMatrixSignificance0.assign(resultMatrixLatex0);
      resultMatrixSignificance0.getRevision();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 1);
      resultMatrixPlainText0.globalInfo();
      int[] intArray0 = new int[9];
      intArray0[0] = (-1625);
      intArray0[1] = 2;
      intArray0[2] = 2;
      intArray0[3] = 2;
      intArray0[4] = 0;
      intArray0[5] = 1;
      intArray0[6] = 2;
      intArray0[7] = (-2772);
      intArray0[8] = (-499);
      resultMatrixLatex0.setRowOrder(intArray0);
      resultMatrixLatex0.setCountWidth(2);
      resultMatrixLatex0.clear();
      assertEquals(0, resultMatrixSignificance0.getRowNameWidth());
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(2, 2);
      resultMatrixCSV0.getSignificanceCount((-288), 0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getRevision();
      resultMatrixCSV0.clear();
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=3.9532717641363693
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 0);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      resultMatrixLatex1.assign(resultMatrixLatex0);
      resultMatrixLatex1.stdDevPrecTipText();
      int[][] intArray0 = new int[3][0];
      int[] intArray1 = new int[6];
      intArray1[0] = 0;
      intArray1[1] = 890;
      intArray1[2] = 1;
      intArray1[3] = 0;
      intArray1[4] = 890;
      intArray1[5] = 2;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[9];
      intArray2[0] = 1;
      intArray2[1] = 0;
      intArray2[2] = 0;
      intArray2[3] = 0;
      intArray2[4] = 1;
      intArray2[5] = 890;
      intArray2[6] = 890;
      intArray2[7] = 0;
      intArray2[8] = 0;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[4];
      intArray3[0] = 1;
      intArray3[1] = 2;
      intArray3[2] = 0;
      intArray3[3] = 0;
      intArray0[2] = intArray3;
      resultMatrixLatex0.m_Wins = intArray0;
      resultMatrixLatex0.isMean(890);
      resultMatrixLatex0.getColHidden(0);
      String[] stringArray0 = new String[7];
      stringArray0[0] = ")";
      stringArray0[1] = "$circ$";
      stringArray0[2] = "$\bullet$";
      stringArray0[3] = ")";
      stringArray0[4] = " ";
      stringArray0[5] = "The number of decimals after the decimal point for the standard deviation.";
      stringArray0[6] = "(";
      ResultMatrixLatex.main(stringArray0);
      assertEquals(7, stringArray0.length);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=3.9149916343251316
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixPlainText0);
      int[] intArray0 = new int[4];
      intArray0[0] = 0;
      intArray0[1] = 2;
      intArray0[2] = 1;
      intArray0[3] = 1;
      resultMatrixHTML0.setColOrder(intArray0);
      resultMatrixHTML1.assign(resultMatrixHTML0);
      resultMatrixHTML1.getDefaultEnumerateRowNames();
      resultMatrixPlainText0.setRowNameWidth((-1));
      resultMatrixHTML1.getAverage(555);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.isRowName((-1244));
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      String[] stringArray0 = new String[6];
      stringArray0[0] = " ";
      stringArray0[1] = "(";
      stringArray0[2] = " ";
      stringArray0[3] = "(";
      stringArray0[4] = ")";
      stringArray0[5] = "\tThe width of the counts (0 = optimal).\n\t(default: ";
      resultMatrixGnuPlot0.setOptions(stringArray0);
      resultMatrixGnuPlot0.getMean(1, 0);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixHTML0);
      resultMatrixGnuPlot1.getStdDevWidth();
      resultMatrixCSV0.getDisplayRow(1);
      ResultMatrixHTML resultMatrixHTML2 = new ResultMatrixHTML();
      // Undeclared exception!
      try { 
        resultMatrixHTML0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=4.066722804794712
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.removeFilterName("PUbE-/HYe+}KX$@,");
      resultMatrixPlainText0.showStdDevTipText();
      resultMatrixPlainText0.getAverage(2208);
      resultMatrixPlainText0.getColCount();
      resultMatrixPlainText0.enumerateRowNamesTipText();
      String[] stringArray0 = new String[3];
      stringArray0[0] = ")";
      stringArray0[1] = "v";
      stringArray0[2] = "H+~pRh?O{z[?@k|M>";
      ResultMatrixHTML.main(stringArray0);
      assertEquals(3, stringArray0.length);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=3.2879038185896032
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixLatex0.m_MeanWidth = 97;
      resultMatrixHTML0.m_MeanPrec = 2;
      resultMatrixHTML0.clear();
      resultMatrixLatex0.getMean(2, 0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setRowNameWidth(1);
      resultMatrixHTML0.getAverage(0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(2, 226);
      resultMatrixCSV0.toStringSummary();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(555, 25);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=3.366993942558606
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 0);
      resultMatrixCSV0.toStringSummary();
      resultMatrixCSV0.stdDevWidthTipText();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      resultMatrixSignificance0.toStringRanking();
      assertEquals(0, resultMatrixSignificance0.getMeanWidth());
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertTrue(resultMatrixSignificance0.getPrintRowNames());
      assertEquals(25, resultMatrixSignificance0.getRowNameWidth());
      assertEquals(0, resultMatrixSignificance0.getSignificanceWidth());
      assertEquals(0, resultMatrixSignificance0.getCountWidth());
      assertEquals(0, resultMatrixSignificance0.getStdDevWidth());
      assertEquals(0, resultMatrixCSV0.getRowCount());
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(2, 97);
      resultMatrixPlainText0.getDisplayName();
      assertEquals(97, resultMatrixPlainText0.getVisibleRowCount());
      assertEquals(2, resultMatrixPlainText0.getColCount());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=3.896877762654272
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "-row-name-width";
      ResultMatrixCSV.main(stringArray0);
      // Undeclared exception!
      try { 
        resultMatrixCSV0.setSummary((int[][]) null, (int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=3.3804177845010224
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(26, 26);
      resultMatrixCSV0.toStringKey();
      resultMatrixCSV0.m_MeanWidth = 3;
      resultMatrixCSV0.clearSummary();
      resultMatrixCSV0.getDefaultPrintColNames();
      int[][] intArray0 = new int[9][3];
      int[] intArray1 = new int[3];
      intArray1[0] = 1332;
      intArray1[1] = 0;
      intArray1[2] = 26;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[2];
      intArray2[0] = 26;
      intArray2[1] = 1;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[1];
      intArray3[0] = 0;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[8];
      intArray4[0] = 0;
      intArray4[1] = 3;
      intArray4[2] = 3;
      intArray4[3] = 3;
      intArray4[4] = 1;
      intArray4[5] = 1;
      intArray4[6] = 2;
      intArray4[7] = 0;
      intArray0[3] = intArray4;
      int[] intArray5 = new int[8];
      intArray5[0] = 2;
      intArray5[1] = 1;
      intArray5[2] = 1404;
      intArray5[3] = 3;
      intArray5[4] = 1;
      intArray5[5] = 3;
      intArray5[6] = 3;
      intArray5[7] = 1332;
      intArray0[4] = intArray5;
      int[] intArray6 = new int[9];
      intArray6[0] = 2;
      intArray6[1] = 26;
      intArray6[2] = 1404;
      intArray6[3] = 26;
      intArray6[4] = 3;
      intArray6[5] = 1;
      intArray6[6] = 26;
      intArray6[7] = 26;
      intArray6[8] = 0;
      intArray0[5] = intArray6;
      int[] intArray7 = new int[6];
      intArray7[0] = 3;
      intArray7[1] = 26;
      intArray7[2] = 3;
      intArray7[3] = 0;
      intArray7[4] = 3;
      intArray7[5] = 3;
      intArray0[6] = intArray7;
      int[] intArray8 = new int[3];
      intArray8[0] = 1332;
      intArray8[1] = 1332;
      intArray8[2] = 2;
      intArray0[7] = intArray8;
      int[] intArray9 = new int[7];
      intArray9[0] = 1332;
      intArray9[1] = 3;
      intArray9[2] = 1332;
      intArray9[3] = 3;
      intArray9[4] = 0;
      intArray9[5] = 0;
      intArray9[6] = 1404;
      intArray0[8] = intArray9;
      // Undeclared exception!
      try { 
        resultMatrixCSV0.setSummary(intArray0, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=3.369482203114062
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getDefaultRowNameWidth();
      resultMatrixPlainText0.getRevision();
      resultMatrixPlainText0.setMeanWidth(266);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(2, 2);
      resultMatrixCSV0.setSignificance(1, 266, 1);
      int int0 = 1267;
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(18, 1267);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=4.0216715661661855
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setMeanWidth(1);
      resultMatrixCSV0.getDefaultPrintColNames();
      resultMatrixCSV0.setSignificance(2482, 95, 2482);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "]";
      stringArray0[1] = "*";
      resultMatrixCSV0.setStdDevWidth(2482);
      stringArray0[2] = "[";
      stringArray0[3] = "[";
      resultMatrixCSV0.m_PrintRowNames = false;
      resultMatrixCSV0.getSummaryTitle(3);
      resultMatrixCSV0.m_CountWidth = 95;
      stringArray0[4] = "]";
      ResultMatrixPlainText.main(stringArray0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.clearRanking();
      double[][] doubleArray0 = new double[1][0];
      double[] doubleArray1 = new double[3];
      doubleArray1[0] = (double) 1;
      doubleArray1[1] = (double) 2;
      doubleArray1[2] = (double) 2;
      doubleArray0[0] = doubleArray1;
      resultMatrixGnuPlot0.m_StdDev = doubleArray0;
      resultMatrixGnuPlot0.getDefaultEnumerateColNames();
      resultMatrixCSV0.setStdDevWidth(0);
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=3.3967604426658946
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getRevision();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      resultMatrixLatex1.clear();
      resultMatrixLatex0.doubleToString(3883.0, 0);
      resultMatrixLatex0.doubleToString((-1633.1), 0);
      int[][] intArray0 = new int[3][3];
      int[] intArray1 = new int[8];
      intArray1[0] = 2;
      intArray1[1] = 2;
      intArray1[2] = 0;
      intArray1[3] = 1737;
      intArray1[4] = 0;
      intArray1[5] = 2;
      intArray1[6] = 0;
      intArray1[7] = 2;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[1];
      intArray2[0] = 0;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[5];
      intArray3[0] = 2;
      resultMatrixLatex1.getSummaryTitle(2);
      intArray3[1] = 40;
      intArray3[2] = 0;
      intArray3[3] = 0;
      resultMatrixLatex1.getRowName(0);
      intArray3[4] = 1;
      intArray0[2] = intArray3;
      // Undeclared exception!
      try { 
        resultMatrixLatex1.setRanking(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=3.169501957207281
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.significanceWidthTipText();
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
      assertFalse(resultMatrixGnuPlot0.getDefaultShowStdDev());
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultMeanPrec());
      assertTrue(resultMatrixGnuPlot0.getPrintColNames());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=3.7560414747587396
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.m_MeanPrec = (-2772);
      resultMatrixSignificance0.clear();
      resultMatrixSignificance0.getOptions();
      resultMatrixSignificance0.getSignificanceWidth();
      resultMatrixSignificance0.getDefaultEnumerateRowNames();
      resultMatrixSignificance0.toStringRanking();
      resultMatrixSignificance0.setRowNameWidth(0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setRowHidden(0, false);
      boolean boolean0 = resultMatrixSignificance0.getEnumerateRowNames();
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=3.867741123925068
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[][] intArray0 = new int[2][8];
      int[] intArray1 = new int[6];
      intArray1[0] = 1015;
      intArray1[1] = 0;
      intArray1[2] = 1015;
      intArray1[3] = 1489;
      intArray1[4] = 1015;
      intArray1[5] = 0;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[3];
      intArray2[0] = 1489;
      intArray2[1] = 1;
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.isRowName(1489);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot();
      String[] stringArray0 = new String[4];
      stringArray0[0] = " ";
      stringArray0[1] = "";
      stringArray0[2] = "v";
      stringArray0[3] = "v";
      resultMatrixGnuPlot1.setOptions(stringArray0);
      resultMatrixGnuPlot0.getMean(218, (-721));
      ResultMatrixGnuPlot resultMatrixGnuPlot2 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      resultMatrixGnuPlot1.getStdDevWidth();
      resultMatrixCSV0.getDisplayRow(1015);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      // Undeclared exception!
      try { 
        resultMatrixHTML0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=3.960313901202119
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixPlainText0);
      int[] intArray0 = new int[4];
      intArray0[0] = 0;
      resultMatrixHTML1.getColName(0);
      intArray0[1] = 2;
      intArray0[2] = 1;
      intArray0[3] = 1;
      resultMatrixHTML0.setColOrder(intArray0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      resultMatrixLatex0.isMean(0);
      resultMatrixLatex0.getColHidden(1);
      String[] stringArray0 = new String[0];
      ResultMatrixLatex.main(stringArray0);
      assertEquals(0, stringArray0.length);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=3.948575466332703
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setShowAverage(false);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixPlainText0);
      String[] stringArray0 = new String[0];
      ResultMatrixLatex.main(stringArray0);
      assertEquals(0, stringArray0.length);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=3.450361449665485
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.globalInfo();
      double[][] doubleArray0 = new double[4][6];
      double[] doubleArray1 = new double[6];
      doubleArray1[0] = (double) 1;
      doubleArray1[1] = (double) 2;
      doubleArray1[2] = (double) 2;
      doubleArray1[3] = (double) 2;
      doubleArray1[4] = (double) 0;
      doubleArray1[5] = (double) 2;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[8];
      doubleArray2[0] = (double) 0;
      doubleArray2[1] = (double) 2;
      doubleArray2[2] = (double) 2;
      doubleArray2[3] = (double) 1;
      doubleArray2[4] = (double) 1;
      doubleArray2[5] = (double) 0;
      doubleArray2[6] = (double) 2;
      doubleArray2[7] = (double) 2;
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[4];
      doubleArray3[0] = (double) 0;
      doubleArray3[1] = (double) 0;
      doubleArray3[2] = (-2229.5);
      doubleArray3[3] = (double) 0;
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[5];
      doubleArray4[0] = (double) 1;
      doubleArray4[1] = (-2229.5);
      doubleArray4[2] = (double) 1;
      doubleArray4[3] = (double) 0;
      doubleArray4[4] = (double) 2;
      doubleArray0[3] = doubleArray4;
      resultMatrixHTML0.m_StdDev = doubleArray0;
      resultMatrixHTML0.clear();
      resultMatrixHTML0.getDefaultColNameWidth();
      resultMatrixHTML0.enumerateColNamesTipText();
      assertEquals(1, resultMatrixHTML0.getRowCount());
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(1644, 2);
      resultMatrixLatex0.toStringKey();
      resultMatrixLatex0.getDefaultEnumerateColNames();
      assertFalse(resultMatrixLatex0.getRemoveFilterName());
      assertFalse(resultMatrixLatex0.getEnumerateRowNames());
      assertEquals(1644, resultMatrixLatex0.getColCount());
      assertEquals(0, resultMatrixLatex0.getDefaultSignificanceWidth());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(0, resultMatrixLatex0.getDefaultRowNameWidth());
      assertEquals(0, resultMatrixLatex0.getCountWidth());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=4.045208798396483
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixLatex0.m_MeanWidth = 97;
      resultMatrixHTML0.m_MeanPrec = 2;
      resultMatrixHTML0.clear();
      resultMatrixLatex0.getMean(2, 0);
      resultMatrixLatex0.getDefaultEnumerateColNames();
      resultMatrixLatex0.setRowNameWidth(2);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "*";
      stringArray0[1] = "bGY\"3elF4x-fn\"d/";
      stringArray0[2] = "(";
      stringArray0[3] = "*";
      stringArray0[4] = " ";
      stringArray0[5] = ")";
      stringArray0[6] = " ";
      stringArray0[7] = ")";
      ResultMatrixPlainText.main(stringArray0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.clearRanking();
      resultMatrixGnuPlot0.getDefaultEnumerateColNames();
      resultMatrixLatex0.getColName(739);
      assertEquals(2, resultMatrixLatex0.getRowNameWidth());
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      resultMatrixCSV0.setStdDevWidth(97);
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=4.010248159576114
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getDefaultStdDevPrec();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "*";
      stringArray0[1] = " ";
      stringArray0[2] = "v";
      stringArray0[3] = "v";
      stringArray0[4] = "*";
      stringArray0[5] = "(";
      stringArray0[6] = ")";
      stringArray0[7] = " ";
      ResultMatrixHTML.main(stringArray0);
      assertEquals(8, stringArray0.length);
  }
}
