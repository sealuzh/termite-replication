/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 10:27:25 GMT 2019
 */

package net.sf.xbus.protocol.records;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.io.IOException;
import java.io.SequenceInputStream;
import java.net.MalformedURLException;
import java.util.Hashtable;
import javax.xml.namespace.QName;
import javax.xml.soap.MimeHeaders;
import net.sf.xbus.base.bytearraylist.ByteArrayList;
import net.sf.xbus.base.xbussystem.XBUSSystem;
import net.sf.xbus.protocol.records.RecordTypeMessage;
import org.apache.axis.configuration.FileProvider;
import org.apache.axis.configuration.XMLStringProvider;
import org.apache.axis.deployment.wsdd.WSDDConstants;
import org.apache.axis.deployment.wsdd.WSDDDeployment;
import org.apache.axis.deployment.wsdd.WSDDHandler;
import org.apache.axis.message.Detail;
import org.apache.commons.httpclient.ConnectMethod;
import org.apache.commons.httpclient.HostConfiguration;
import org.apache.html.dom.HTMLDirectoryElementImpl;
import org.apache.html.dom.HTMLDocumentImpl;
import org.apache.html.dom.HTMLHRElementImpl;
import org.apache.html.dom.HTMLLIElementImpl;
import org.apache.xerces.dom.DeferredDocumentImpl;
import org.apache.xerces.dom.DocumentImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.w3c.dom.Node;
import org.w3c.dom.traversal.NodeFilter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RecordTypeMessage_ESTest extends RecordTypeMessage_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      XBUSSystem xBUSSystem0 = null;
      ByteArrayList byteArrayList0 = new ByteArrayList();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-63);
      byteArray0[1] = (byte) (-63);
      byteArray0[2] = (byte) (-20);
      ByteArrayList.createByteArrayList(byteArray0, (-1211));
      Hashtable<SequenceInputStream, Object> hashtable0 = new Hashtable<SequenceInputStream, Object>();
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      QName qName0 = WSDDConstants.QNAME_DOC;
      DocumentImpl documentImpl0 = new DocumentImpl();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      String string0 = "RC_OK";
      HTMLHRElementImpl hTMLHRElementImpl0 = new HTMLHRElementImpl(hTMLDocumentImpl0, "RC_OK");
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(false, false);
      NodeFilter nodeFilter0 = mock(NodeFilter.class, new ViolatedAssumptionAnswer());
      deferredDocumentImpl0.createNodeIterator((Node) hTMLDocumentImpl0, (short)3962, nodeFilter0);
      // Undeclared exception!
      try { 
        recordTypeMessage0.setResponseDocument(deferredDocumentImpl0, (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xerces.dom.DeferredDocumentImpl", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-2);
      ByteArrayList byteArrayList0 = new ByteArrayList();
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      QName qName0 = WSDDConstants.QNAME_DOC;
      DocumentImpl documentImpl0 = new DocumentImpl();
      Detail detail0 = new Detail();
      Node node0 = detail0.cloneNode(true);
      NodeFilter nodeFilter0 = mock(NodeFilter.class, new ViolatedAssumptionAnswer());
      documentImpl0.createTreeWalker(node0, (short) (-1), nodeFilter0);
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLHRElementImpl hTMLHRElementImpl0 = new HTMLHRElementImpl(hTMLDocumentImpl0, "net.sf.xbus.protocol.recordsRecordTypeMessage");
      HTMLLIElementImpl hTMLLIElementImpl0 = new HTMLLIElementImpl(hTMLDocumentImpl0, "net.sf.xbus.protocol.recordsRecordTypeMessage");
      NodeFilter nodeFilter1 = mock(NodeFilter.class, new ViolatedAssumptionAnswer());
      documentImpl0.createNodeIterator((Node) hTMLHRElementImpl0, (short) (byte) (-2), nodeFilter1);
      recordTypeMessage0.setResponseDocument(documentImpl0, (XBUSSystem) null);
      QName qName1 = WSDDConstants.QNAME_TYPEMAPPING;
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      HTMLDirectoryElementImpl hTMLDirectoryElementImpl0 = new HTMLDirectoryElementImpl(hTMLDocumentImpl1, "");
      WSDDHandler wSDDHandler0 = new WSDDHandler();
      HTMLDirectoryElementImpl hTMLDirectoryElementImpl1 = new HTMLDirectoryElementImpl(hTMLDocumentImpl1, "use");
      recordTypeMessage0.getResponseObject();
      recordTypeMessage0.getResponseText();
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
      assertEquals("RC_OK", recordTypeMessage0.getReturncode());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.7842068034002128
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      byte[] byteArray0 = new byte[5];
      byte byte0 = (byte) (-20);
      byteArray0[0] = (byte) (-20);
      byteArray0[1] = (byte) (-63);
      Integer integer0 = new Integer((byte) (-20));
      Hashtable<SequenceInputStream, Object> hashtable0 = new Hashtable<SequenceInputStream, Object>();
      RecordTypeMessage recordTypeMessage1 = new RecordTypeMessage((XBUSSystem) null);
      Object object0 = new Object();
      ByteArrayList byteArrayList0 = ByteArrayList.createByteArrayList(byteArray0, (-2113));
      byteArrayList0.toString();
      ByteArrayList byteArrayList1 = new ByteArrayList();
      // Undeclared exception!
      try { 
        recordTypeMessage1.setRequestObject(byteArrayList0, (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.xbus.protocol.xml.XMLMessageAbstract", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      recordTypeMessage0.setRequestText((String) null, (XBUSSystem) null);
      XBUSSystem xBUSSystem0 = null;
      try {
        xBUSSystem0 = new XBUSSystem("RecordTypeMessage");
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      recordTypeMessage0.setResponseObject((Object) null, (XBUSSystem) null);
      WSDDDeployment wSDDDeployment0 = new WSDDDeployment();
      XMLStringProvider xMLStringProvider0 = new XMLStringProvider("operation");
      FileProvider fileProvider0 = null;
      try {
        fileProvider0 = new FileProvider("http://xml.apache.org/axis/wsdd/", "transport");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Configuration file directory 'http://xml.apache.org/axis/wsdd/' does not exist or is not a directory or is not readable.
         //
         verifyException("org.apache.axis.configuration.FileProvider", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      Hashtable<SequenceInputStream, Object> hashtable0 = new Hashtable<SequenceInputStream, Object>();
      Object object0 = new Object();
      ByteArrayList byteArrayList0 = new ByteArrayList();
      ByteArrayList byteArrayList1 = new ByteArrayList();
      recordTypeMessage0.setRequestObject(byteArrayList1, (XBUSSystem) null);
      HostConfiguration hostConfiguration0 = mock(HostConfiguration.class, new ViolatedAssumptionAnswer());
      ConnectMethod connectMethod0 = new ConnectMethod(hostConfiguration0);
      HostConfiguration hostConfiguration1 = mock(HostConfiguration.class, new ViolatedAssumptionAnswer());
      ConnectMethod connectMethod1 = new ConnectMethod(hostConfiguration1);
      ConnectMethod connectMethod2 = new ConnectMethod(connectMethod1);
      HostConfiguration hostConfiguration2 = mock(HostConfiguration.class, new ViolatedAssumptionAnswer());
      ConnectMethod connectMethod3 = new ConnectMethod(hostConfiguration2);
      HostConfiguration hostConfiguration3 = mock(HostConfiguration.class, new ViolatedAssumptionAnswer());
      ConnectMethod connectMethod4 = new ConnectMethod(hostConfiguration3);
      HostConfiguration hostConfiguration4 = mock(HostConfiguration.class, new ViolatedAssumptionAnswer());
      ConnectMethod connectMethod5 = new ConnectMethod(hostConfiguration4);
      HostConfiguration hostConfiguration5 = mock(HostConfiguration.class, new ViolatedAssumptionAnswer());
      ConnectMethod connectMethod6 = new ConnectMethod(hostConfiguration5);
      ByteArrayList byteArrayList2 = new ByteArrayList();
      assertEquals(0, byteArrayList2.length());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.1944064129383247
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      byte[] byteArray0 = new byte[2];
      recordTypeMessage0.setRequestObject((Object) null, (XBUSSystem) null);
      byteArray0[0] = (byte) (-20);
      ByteArrayList byteArrayList0 = ByteArrayList.createByteArrayList(byteArray0, 0);
      // Undeclared exception!
      try { 
        recordTypeMessage0.setResponseObject(byteArrayList0, (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.xbus.protocol.xml.XMLMessageAbstract", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      try { 
        recordTypeMessage0.setRequestObject("1Yhml^*v3C", (XBUSSystem) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // I_02_003_0 java.lang.String cannot be cast to net.sf.xbus.base.bytearraylist.ByteArrayList
         //
         verifyException("net.sf.xbus.protocol.records.RecordTypeMessage", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-20);
      ByteArrayList.createByteArrayList(byteArray0, 4);
      Integer integer0 = new Integer((byte) (-20));
      try { 
        recordTypeMessage0.setResponseObject(integer0, (XBUSSystem) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // I_02_003_0 java.lang.Integer cannot be cast to net.sf.xbus.base.bytearraylist.ByteArrayList
         //
         verifyException("net.sf.xbus.protocol.records.RecordTypeMessage", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.7741057932992024
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      XBUSSystem xBUSSystem0 = null;
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-20);
      byte byte0 = (byte) (-63);
      // Undeclared exception!
      try { 
        recordTypeMessage0.setResponseText("", (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.xbus.protocol.xml.XMLMessageAbstract", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      recordTypeMessage0.getRequestText((XBUSSystem) null);
      // Undeclared exception!
      try { 
        MockURL.URL((String) null, "RC_OK", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.net.URL", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-20);
      String string0 = "1d||QRo#5&yd_L|vtK";
      // Undeclared exception!
      try { 
        recordTypeMessage0.setRequestText("readOnlyConfigFile", (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.xbus.protocol.xml.XMLMessageAbstract", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-20);
      String string0 = "1d||QRo#5&yd_L|vtK";
      // Undeclared exception!
      try { 
        recordTypeMessage0.setRequestText("1d||QRo#5&yd_L|vtK", (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.xbus.protocol.xml.XMLMessageAbstract", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-20);
      ByteArrayList.createByteArrayList(byteArray0, 449);
      QName qName0 = WSDDConstants.QNAME_DOC;
      DocumentImpl documentImpl0 = new DocumentImpl();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLHRElementImpl hTMLHRElementImpl0 = new HTMLHRElementImpl(hTMLDocumentImpl0, "net.sf.xbus.protocol.records.RecordTypeMessage");
      hTMLDocumentImpl0.getXmlVersion();
      hTMLDocumentImpl0.getParentNode();
      NodeFilter nodeFilter0 = mock(NodeFilter.class, new ViolatedAssumptionAnswer());
      documentImpl0.createNodeIterator((Node) hTMLHRElementImpl0, (short) (byte) (-20), nodeFilter0);
      QName qName1 = WSDDConstants.QNAME_OPERATION;
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      HTMLDirectoryElementImpl hTMLDirectoryElementImpl0 = new HTMLDirectoryElementImpl(hTMLDocumentImpl1, ")_<!oe");
      WSDDHandler wSDDHandler0 = new WSDDHandler();
      HTMLDirectoryElementImpl hTMLDirectoryElementImpl1 = new HTMLDirectoryElementImpl(hTMLDocumentImpl1, "");
      Hashtable<Integer, Object> hashtable0 = new Hashtable<Integer, Object>();
      ByteArrayList byteArrayList0 = new ByteArrayList();
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((String) null, (XBUSSystem) null, "continue");
      recordTypeMessage0.getRequestTextAsXML((XBUSSystem) null);
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-44);
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte)3;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)6;
      byteArray0[5] = (byte) (-44);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      MimeHeaders mimeHeaders0 = new MimeHeaders();
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      recordTypeMessage0.getResponseText();
      MockFile mockFile0 = new MockFile((String) null, "D");
      MockFile.createTempFile("4<B+PlN!lg1fNjTN>y", "YKShs22b", (File) mockFile0);
      MockFile mockFile1 = new MockFile("D");
      mockFile1.getCanonicalPath();
      // Undeclared exception!
      try { 
        MockFile.createTempFile("D", "", (File) mockFile1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Prefix string too short
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      recordTypeMessage0.setResponseText((String) null, (XBUSSystem) null);
      MockURL.getHttpExample();
      try { 
        MockURL.URL("S{x'Q66v#;wJlV", "S{x'Q66v#;wJlV", "S{x'Q66v#;wJlV");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // unknown protocol: s{x'q66v#;wjlv
         //
         verifyException("java.net.URL", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      XBUSSystem xBUSSystem0 = null;
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      byte[] byteArray0 = new byte[2];
      byte byte0 = (byte) (-20);
      byteArray0[0] = (byte) (-20);
      byteArray0[1] = (byte) (-63);
      ByteArrayList byteArrayList0 = new ByteArrayList();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      recordTypeMessage0.setResponseObject(byteArrayList0, (XBUSSystem) null);
      ByteArrayList byteArrayList1 = new ByteArrayList();
      Integer integer0 = new Integer((byte) (-20));
      Hashtable<SequenceInputStream, Object> hashtable0 = new Hashtable<SequenceInputStream, Object>();
      String string0 = null;
      String string1 = "<$S<ZV1";
      MockFile mockFile0 = null;
      try {
        mockFile0 = new MockFile("<$S<ZV1", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFile", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("U%fbt#l", (XBUSSystem) null, "U%fbt#l");
      recordTypeMessage0.getResponseObject();
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-44);
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte)3;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)6;
      byteArray0[5] = (byte) (-44);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      MimeHeaders mimeHeaders0 = new MimeHeaders();
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      recordTypeMessage0.getResponseText();
      MockFile mockFile0 = new MockFile((String) null, "");
      MockFile.createTempFile("4<B+PlN!lg1fNjTN>y", "YKShs22b", (File) mockFile0);
      MockFile mockFile1 = new MockFile("");
      mockFile1.getCanonicalPath();
      // Undeclared exception!
      try { 
        MockFile.createTempFile("", "", (File) mockFile1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Prefix string too short
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }
}
