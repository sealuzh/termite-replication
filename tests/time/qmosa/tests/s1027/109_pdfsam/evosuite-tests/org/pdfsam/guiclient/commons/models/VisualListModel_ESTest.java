/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 10:12:39 GMT 2019
 */

package org.pdfsam.guiclient.commons.models;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.RenderingHints;
import java.awt.color.ICC_Profile;
import java.awt.image.RescaleOp;
import java.awt.image.renderable.ParameterBlock;
import java.time.Month;
import java.util.ArrayDeque;
import java.util.Collection;
import java.util.ConcurrentModificationException;
import java.util.HashMap;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.PriorityQueue;
import java.util.Stack;
import java.util.TreeSet;
import java.util.Vector;
import java.util.function.Consumer;
import javax.media.jai.CollectionOp;
import javax.media.jai.OperationRegistry;
import javax.media.jai.operator.IIPResolutionDescriptor;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JLayeredPane;
import javax.swing.event.ListDataListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.DefaultEditorKit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.pdfsam.guiclient.commons.models.VisualListModel;
import org.pdfsam.guiclient.dto.VisualPageListItem;
import sun.awt.SunHints;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class VisualListModel_ESTest extends VisualListModel_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.4993646124305886
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex(0);
      LinkedHashSet<DefaultEditorKit.PasteAction> linkedHashSet0 = new LinkedHashSet<DefaultEditorKit.PasteAction>();
      int[] intArray0 = new int[5];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[3] = 0;
      intArray0[4] = 360;
      visualListModel0.rotateClockwiseElements(intArray0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      ArrayDeque<VisualPageListItem> arrayDeque0 = new ArrayDeque<VisualPageListItem>(stack0);
      VisualListModel visualListModel1 = new VisualListModel();
      Class<Month> class0 = Month.class;
      // Undeclared exception!
      try { 
        visualListModel1.getListeners((Class) class0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.2187436925417936
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.clone();
      int[] intArray0 = new int[7];
      intArray0[0] = (-1045);
      intArray0[1] = 902;
      intArray0[2] = (-681);
      intArray0[4] = 12;
      intArray0[5] = 316;
      intArray0[6] = (-2977);
      visualListModel0.rotateClockwiseElements(intArray0);
      stack0.add((VisualPageListItem) null);
      stack0.ensureCapacity(543);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      visualPageListItemArray0[0] = null;
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.setData(visualPageListItemArray0);
      int[] intArray1 = new int[1];
      intArray1[0] = 543;
      visualListModel0.moveUpIndexes(intArray1);
      visualListModel0.moveDownIndexes(intArray1);
      assertEquals(1, visualListModel0.getSize());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.4435896416877303
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      stack0.clone();
      visualListModel0.addElementAt((VisualPageListItem) null, 0);
      visualListModel0.updateElementAt(78, (VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      stack0.ensureCapacity(1366);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[8];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = visualPageListItemArray0[0];
      visualPageListItemArray0[2] = visualPageListItemArray0[1];
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[5] = null;
      visualPageListItemArray0[6] = null;
      visualPageListItemArray0[7] = null;
      visualListModel0.setData(visualPageListItemArray0);
      int[] intArray0 = new int[9];
      intArray0[0] = 1366;
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 1366;
      intArray0[4] = 0;
      intArray0[5] = 0;
      intArray0[6] = 0;
      intArray0[7] = 989;
      visualListModel0.getElements();
      visualListModel0.elementChanged((VisualPageListItem) null);
      int[] intArray1 = new int[7];
      intArray1[0] = 0;
      intArray1[1] = 0;
      visualListModel0.removeElementAt(0, true);
      assertEquals(7, visualListModel0.getSize());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.8816064979261793
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.addElementAt((VisualPageListItem) null, 0);
      visualListModel0.updateElementAt(78, (VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      stack0.ensureCapacity(1366);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[8];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = visualPageListItemArray0[0];
      visualPageListItemArray0[2] = null;
      visualListModel0.data = (Vector<VisualPageListItem>) stack0;
      visualPageListItemArray0[3] = null;
      int[] intArray0 = new int[2];
      intArray0[0] = 78;
      intArray0[1] = 78;
      visualListModel0.moveUpIndexes(intArray0);
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[5] = null;
      stack0.ensureCapacity((-466));
      int[] intArray1 = new int[1];
      intArray1[0] = 18;
      try { 
        visualListModel0.reverseElements(intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 18
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.986245854568605
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex(1);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.setSize(360);
      int[] intArray0 = new int[8];
      intArray0[0] = 1;
      intArray0[1] = 360;
      intArray0[2] = 360;
      intArray0[3] = 1;
      intArray0[4] = 360;
      intArray0[5] = 1;
      LinkedHashSet<DefaultEditorKit.PasteAction> linkedHashSet0 = new LinkedHashSet<DefaultEditorKit.PasteAction>();
      stack0.containsAll(linkedHashSet0);
      intArray0[6] = 1;
      intArray0[7] = 1;
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      Stack<VisualPageListItem> stack1 = new Stack<VisualPageListItem>();
      ArrayDeque<VisualPageListItem> arrayDeque0 = new ArrayDeque<VisualPageListItem>(stack1);
      Integer[] integerArray0 = new Integer[8];
      integerArray0[0] = (Integer) 1;
      integerArray0[1] = (Integer) 360;
      integerArray0[2] = (Integer) 360;
      integerArray0[3] = (Integer) 1;
      integerArray0[4] = (Integer) 1;
      try { 
        visualListModel0.moveUpIndexes(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 360
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      OperationRegistry operationRegistry0 = new OperationRegistry();
      ParameterBlock parameterBlock0 = new ParameterBlock((Vector<Object>) null, (Vector<Object>) null);
      HashMap<RenderingHints.Key, VisualPageListItem> hashMap0 = new HashMap<RenderingHints.Key, VisualPageListItem>();
      RenderingHints renderingHints0 = new RenderingHints(hashMap0);
      CollectionOp collectionOp0 = new CollectionOp(operationRegistry0, "mlA%+WI+T Dgf8!k&s", parameterBlock0, renderingHints0);
      // Undeclared exception!
      try { 
        visualListModel0.appendAllElements(collectionOp0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.133133739559716
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[3];
      intArray0[0] = 0;
      intArray0[1] = 0;
      visualListModel0.moveUpIndexes(intArray0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      Vector<Object> vector0 = new Vector<Object>();
      stack0.containsAll(vector0);
      stack0.clone();
      visualListModel0.reverseElements(intArray0);
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      stack0.ensureCapacity(1366);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[2];
      visualPageListItemArray0[0] = null;
      visualListModel0.setData(visualPageListItemArray0);
      int[] intArray1 = new int[2];
      intArray1[0] = 78;
      intArray1[1] = 0;
      try { 
        visualListModel0.undeleteElements(intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 78
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.9959149597043577
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.undeleteElements(intArray0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.addElementAt((VisualPageListItem) null, 0);
      visualListModel0.updateElementAt(78, (VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      stack0.ensureCapacity(1366);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[8];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = visualPageListItemArray0[0];
      visualPageListItemArray0[2] = null;
      visualListModel0.data = (Vector<VisualPageListItem>) stack0;
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[5] = null;
      visualListModel0.updateElementAt(0, visualPageListItemArray0[5]);
      stack0.add(visualPageListItemArray0[0]);
      stack0.add(visualPageListItemArray0[3]);
      Stack<VisualPageListItem> stack1 = new Stack<VisualPageListItem>();
      stack0.ensureCapacity(19);
      visualListModel0.reverseElements(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.2761809225159486
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[3];
      visualListModel0.moveUpIndexes(intArray0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.clone();
      visualListModel0.reverseElements(intArray0);
      stack0.add((VisualPageListItem) null);
      stack0.ensureCapacity(1366);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[8];
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[7] = null;
      visualListModel0.setData(visualPageListItemArray0);
      Integer[] integerArray0 = new Integer[4];
      Integer integer0 = IIPResolutionDescriptor.MAX_RESOLUTION;
      integerArray0[0] = integer0;
      Integer integer1 = JLayeredPane.DEFAULT_LAYER;
      integerArray0[1] = integer1;
      Integer integer2 = JLayeredPane.MODAL_LAYER;
      integerArray0[2] = integer2;
      Integer integer3 = JLayeredPane.POPUP_LAYER;
      Integer.getInteger("", (-1));
      integerArray0[3] = integer3;
      DefaultComboBoxModel<Integer> defaultComboBoxModel0 = new DefaultComboBoxModel<Integer>(integerArray0);
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(defaultComboBoxModel0);
      JComboBox<Month> jComboBox1 = new JComboBox<Month>();
      visualListModel0.getSize();
      int[] intArray1 = new int[4];
      intArray1[0] = 78;
      intArray1[1] = 1366;
      intArray1[2] = 0;
      intArray1[3] = 8;
      try { 
        visualListModel0.removeElements(intArray1, true);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // toIndex = 9
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.7576378583071737
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.setSize(360);
      int[] intArray0 = new int[8];
      intArray0[1] = 360;
      intArray0[2] = 360;
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      Stack<VisualPageListItem> stack1 = new Stack<VisualPageListItem>();
      ArrayDeque<VisualPageListItem> arrayDeque0 = new ArrayDeque<VisualPageListItem>(stack1);
      Integer[] integerArray0 = new Integer[8];
      integerArray0[0] = (Integer) 0;
      integerArray0[1] = (Integer) 360;
      integerArray0[2] = (Integer) 360;
      integerArray0[3] = (Integer) 0;
      integerArray0[4] = (Integer) 0;
      integerArray0[5] = (Integer) 0;
      integerArray0[6] = (Integer) 0;
      integerArray0[7] = (Integer) 0;
      DefaultComboBoxModel<Integer> defaultComboBoxModel0 = new DefaultComboBoxModel<Integer>(integerArray0);
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(defaultComboBoxModel0);
      JComboBox<Month> jComboBox1 = new JComboBox<Month>();
      visualListModel0.removeListDataListener(jComboBox1);
      visualListModel0.getSize();
      // Undeclared exception!
      try { 
        visualListModel0.removeElements(intArray0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.3010386369482903
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[3];
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      stack0.clone();
      visualListModel0.addElementAt((VisualPageListItem) null, 0);
      visualListModel0.updateElementAt(78, (VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      Stack<VisualPageListItem> stack1 = new Stack<VisualPageListItem>();
      ArrayDeque<VisualPageListItem> arrayDeque0 = new ArrayDeque<VisualPageListItem>();
      Integer[] integerArray0 = new Integer[6];
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      integerArray0[0] = integer0;
      Integer integer1 = JLayeredPane.MODAL_LAYER;
      integerArray0[1] = integer1;
      Integer integer2 = JLayeredPane.DEFAULT_LAYER;
      visualListModel0.removeElements(intArray0, true);
      visualListModel0.removeElements(1220, (int) integerArray0[1], false);
      assertEquals(2, visualListModel0.getSize());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.0608333657846836
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      stack0.clone();
      visualListModel0.addElementAt((VisualPageListItem) null, 0);
      visualListModel0.updateElementAt(78, (VisualPageListItem) null);
      Boolean boolean0 = new Boolean(true);
      boolean boolean1 = new Boolean(true);
      stack0.ensureCapacity(0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[8];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = visualPageListItemArray0[0];
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[5] = null;
      visualListModel0.updateElementAt(0, visualPageListItemArray0[5]);
      stack0.add(visualPageListItemArray0[3]);
      Stack<VisualPageListItem> stack1 = new Stack<VisualPageListItem>();
      stack0.ensureCapacity(19);
      visualListModel0.setData(visualPageListItemArray0);
      // Undeclared exception!
      try { 
        visualListModel0.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.7490906203903507
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.setSize(360);
      int[] intArray0 = new int[8];
      intArray0[0] = 1;
      intArray0[3] = 1;
      intArray0[4] = 360;
      intArray0[5] = 1;
      intArray0[6] = 1;
      intArray0[7] = 1;
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      Stack<VisualPageListItem> stack1 = new Stack<VisualPageListItem>();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      stack1.forEach(consumer0);
      ArrayDeque<VisualPageListItem> arrayDeque0 = new ArrayDeque<VisualPageListItem>(stack1);
      try { 
        visualListModel0.moveDownIndexes(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 360
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      List<VisualPageListItem> list0 = new Stack<VisualPageListItem>();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      int[] intArray0 = new int[0];
      stack0.setSize(1204);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      Stack<VisualPageListItem> stack1 = new Stack<VisualPageListItem>();
      JComboBox<Month> jComboBox0 = new JComboBox<Month>();
      int int0 = 7;
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(7, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.3152097116596204
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[3];
      intArray0[0] = (-1);
      visualListModel0.getElements();
      intArray0[1] = (-1102);
      intArray0[2] = 0;
      visualListModel0.moveUpIndexes(intArray0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.data = (Vector<VisualPageListItem>) stack0;
      stack0.add((VisualPageListItem) null);
      visualListModel0.addElementAt((VisualPageListItem) null, 0);
      visualListModel0.clearData();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[7];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = null;
      visualListModel0.data = (Vector<VisualPageListItem>) stack0;
      visualPageListItemArray0[5] = null;
      visualPageListItemArray0[6] = null;
      visualListModel0.setData(visualPageListItemArray0);
      // Undeclared exception!
      try { 
        visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Vector$Itr", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.337827080898473
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[3];
      visualListModel0.moveUpIndexes(intArray0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.clone();
      visualListModel0.reverseElements(intArray0);
      stack0.add((VisualPageListItem) null);
      stack0.ensureCapacity(1366);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[8];
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = null;
      visualListModel0.setData(visualPageListItemArray0);
      int[] intArray1 = new int[9];
      intArray1[0] = 1366;
      intArray1[1] = 0;
      intArray1[2] = 0;
      intArray1[3] = 1366;
      intArray1[4] = 0;
      intArray1[5] = 0;
      intArray1[6] = 0;
      visualListModel0.undeleteElements(intArray1);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
      assertEquals(9, visualListModel0.getSize());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.319904429847949
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getValidElements();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      int[] intArray0 = new int[0];
      stack0.setSize(1204);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      Stack<VisualPageListItem> stack1 = new Stack<VisualPageListItem>();
      ArrayDeque<VisualPageListItem> arrayDeque0 = new ArrayDeque<VisualPageListItem>(stack1);
      int[] intArray1 = new int[8];
      intArray1[0] = 1226;
      intArray1[1] = 1857;
      intArray1[2] = 1857;
      intArray1[3] = 1857;
      intArray1[4] = 1857;
      intArray1[5] = 1204;
      intArray1[6] = 1857;
      intArray1[7] = 1857;
      visualListModel0.moveDownIndexes(intArray1);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.moveUpIndex(1857);
      visualListModel0.moveUpIndex(1204);
      byte[] byteArray0 = new byte[2];
      byte byte0 = (byte)51;
      byteArray0[0] = (byte)51;
      byte byte1 = (byte) (-113);
      byteArray0[1] = (byte) (-113);
      // Undeclared exception!
      try { 
        ICC_Profile.getInstance(byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.0262478229265435
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex(1);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.setSize(360);
      int[] intArray0 = new int[8];
      intArray0[0] = 1;
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      Integer integer1 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer integer2 = IIPResolutionDescriptor.MAX_RESOLUTION;
      Integer integer3 = new Integer(8);
      Integer[] integerArray0 = new Integer[8];
      integerArray0[1] = integer1;
      integerArray0[2] = integer2;
      integerArray0[3] = integer0;
      Integer integer4 = JLayeredPane.MODAL_LAYER;
      integerArray0[4] = integer4;
      integerArray0[5] = (Integer) 1;
      integerArray0[6] = (Integer) 1;
      integerArray0[7] = integer1;
      DefaultComboBoxModel<Integer> defaultComboBoxModel0 = new DefaultComboBoxModel<Integer>(integerArray0);
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(defaultComboBoxModel0);
      JComboBox<Month> jComboBox1 = new JComboBox<Month>();
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.removeListDataListener(jComboBox1);
      visualListModel1.getSize();
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      visualListModel1.prependAllElements(stack0);
      VisualListModel visualListModel2 = new VisualListModel();
      List<VisualPageListItem> list0 = visualListModel2.getValidElements();
      assertNull(list0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.4061887407480635
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      stack0.clone();
      visualListModel0.addElementAt((VisualPageListItem) null, 0);
      visualListModel0.updateElementAt(78, (VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      stack0.ensureCapacity(1366);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[8];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = visualPageListItemArray0[0];
      visualPageListItemArray0[2] = visualPageListItemArray0[1];
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[5] = null;
      visualPageListItemArray0[6] = null;
      visualPageListItemArray0[7] = null;
      visualListModel0.setData(visualPageListItemArray0);
      int[] intArray0 = new int[9];
      intArray0[0] = 1366;
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 1366;
      intArray0[4] = 0;
      intArray0[5] = 0;
      intArray0[6] = 0;
      intArray0[7] = 989;
      visualListModel0.getElements();
      visualListModel0.elementChanged((VisualPageListItem) null);
      int[] intArray1 = new int[7];
      intArray1[0] = 0;
      intArray1[1] = 0;
      intArray1[2] = 989;
      intArray1[3] = 78;
      intArray1[4] = 0;
      intArray1[5] = 989;
      intArray1[6] = 11;
      visualListModel0.moveDownIndexes(intArray1);
      assertEquals(8, visualListModel0.getSize());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.1779782592433596
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[3];
      visualListModel0.moveUpIndexes(intArray0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.clone();
      visualListModel0.reverseElements(intArray0);
      stack0.add((VisualPageListItem) null);
      stack0.ensureCapacity(1366);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[8];
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[7] = null;
      visualListModel0.setData(visualPageListItemArray0);
      int[] intArray1 = new int[9];
      intArray1[0] = 1366;
      intArray1[1] = 0;
      intArray1[2] = 0;
      intArray1[3] = 1366;
      intArray1[4] = 0;
      intArray1[5] = 0;
      visualListModel0.moveDownIndexes(intArray0);
      intArray1[6] = 0;
      visualListModel0.undeleteElements(intArray1);
      visualListModel0.reverseElements(intArray0);
      assertEquals(8, visualListModel0.getSize());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.3168084546157512
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      stack0.clone();
      visualListModel0.addElementAt((VisualPageListItem) null, (-1244));
      visualListModel0.updateElementAt(78, (VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      Stack<VisualPageListItem> stack1 = new Stack<VisualPageListItem>();
      ArrayDeque<VisualPageListItem> arrayDeque0 = new ArrayDeque<VisualPageListItem>();
      Integer[] integerArray0 = new Integer[6];
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      integerArray0[0] = integer0;
      Integer integer1 = JLayeredPane.MODAL_LAYER;
      integerArray0[1] = integer1;
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[2];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.moveUpIndex(1);
      assertEquals(2, visualListModel0.getSize());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.1810814653491217
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.clone();
      int[] intArray0 = new int[7];
      intArray0[0] = (-1045);
      intArray0[1] = 902;
      intArray0[2] = (-681);
      intArray0[3] = 12;
      intArray0[4] = 12;
      intArray0[5] = 316;
      intArray0[6] = (-2977);
      visualListModel0.rotateClockwiseElements(intArray0);
      stack0.add((VisualPageListItem) null);
      stack0.ensureCapacity(543);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      visualPageListItemArray0[0] = null;
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.setData(visualPageListItemArray0);
      int[] intArray1 = new int[1];
      intArray1[0] = 543;
      visualListModel0.moveUpIndexes(intArray1);
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 543
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.381610519300613
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[3];
      intArray0[0] = (-1);
      intArray0[1] = (-1102);
      intArray0[2] = 0;
      visualListModel0.moveUpIndexes(intArray0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.data = (Vector<VisualPageListItem>) stack0;
      stack0.add((VisualPageListItem) null);
      Stack stack1 = new Stack<Integer>();
      visualListModel0.addElementAt((VisualPageListItem) null, 0);
      stack0.add((VisualPageListItem) null);
      int[] intArray1 = new int[8];
      intArray1[0] = 0;
      intArray1[1] = 0;
      intArray1[7] = 0;
      visualListModel0.reverseElements(intArray1);
      intArray1[3] = 0;
      intArray1[4] = 0;
      intArray1[5] = 0;
      intArray1[6] = 0;
      visualListModel0.updateElementAt(0, (VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      stack0.ensureCapacity(0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[10];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = null;
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.14527948854757
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.clone();
      int[] intArray0 = new int[7];
      intArray0[0] = (-1045);
      intArray0[1] = 902;
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      intArray0[2] = (-681);
      intArray0[3] = 12;
      intArray0[1] = 12;
      intArray0[5] = 316;
      intArray0[6] = (-2977);
      visualListModel0.rotateClockwiseElements(intArray0);
      stack0.add((VisualPageListItem) null);
      stack0.ensureCapacity(543);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[5];
      visualPageListItemArray0[0] = null;
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.setData(visualPageListItemArray0);
      int[] intArray1 = new int[1];
      intArray1[0] = 543;
      try { 
        visualListModel0.moveUpIndexes(intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 542
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.391924549260069
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[3];
      visualListModel0.moveUpIndexes(intArray0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      stack0.clone();
      visualListModel0.reverseElements(intArray0);
      visualListModel0.updateElementAt(78, (VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      stack0.ensureCapacity(1366);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[8];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[5] = null;
      visualPageListItemArray0[6] = null;
      visualPageListItemArray0[7] = null;
      visualListModel0.setData(visualPageListItemArray0);
      int[] intArray1 = new int[9];
      intArray1[0] = 1366;
      intArray1[1] = 1366;
      intArray1[2] = (-13);
      intArray1[3] = 1366;
      intArray1[4] = 0;
      intArray1[5] = 0;
      intArray1[6] = 0;
      intArray1[7] = 989;
      intArray1[8] = 1366;
      visualListModel0.undeleteElements(intArray1);
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) stack0);
      assertEquals(10, visualListModel0.getSize());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.1271393619907717
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[3];
      intArray0[0] = 0;
      intArray0[1] = 0;
      visualListModel0.moveUpIndexes(intArray0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.clone();
      visualListModel0.reverseElements(intArray0);
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      stack0.ensureCapacity((-1527));
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[8];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[5] = null;
      visualPageListItemArray0[6] = null;
      visualPageListItemArray0[7] = null;
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      JComboBox<Month> jComboBox0 = new JComboBox<Month>();
      visualListModel0.removeListDataListener(jComboBox0);
      Integer integer0 = new Integer((-1));
      Integer integer1 = JLayeredPane.DEFAULT_LAYER;
      Integer integer2 = JLayeredPane.DRAG_LAYER;
      Integer.min(28, 2212);
      Integer.divideUnsigned(3922, 3036);
      Integer integer3 = JLayeredPane.MODAL_LAYER;
      Integer[] integerArray0 = new Integer[2];
      integerArray0[0] = integer0;
      integerArray0[1] = integer2;
      DefaultComboBoxModel<Integer> defaultComboBoxModel0 = new DefaultComboBoxModel<Integer>(integerArray0);
      DefaultComboBoxModel<Integer> defaultComboBoxModel1 = new DefaultComboBoxModel<Integer>();
      JComboBox<Integer> jComboBox1 = new JComboBox<Integer>(defaultComboBoxModel1);
      JComboBox<Month> jComboBox2 = new JComboBox<Month>();
      visualListModel0.getSize();
      int[] intArray0 = new int[8];
      intArray0[0] = 270;
      intArray0[1] = 1;
      intArray0[2] = 1;
      intArray0[3] = 1;
      intArray0[4] = (-4485);
      intArray0[5] = 1031;
      intArray0[6] = (-4485);
      intArray0[7] = 1031;
      visualListModel0.removeElements(intArray0, true);
      // Undeclared exception!
      try { 
        visualListModel0.setData((Vector<VisualPageListItem>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.324481088886851
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[3];
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      int[] intArray1 = new int[0];
      visualListModel0.rotateClockwiseElements(intArray1);
      visualListModel0.reverseElements(intArray0);
      int[] intArray2 = new int[6];
      intArray2[0] = 0;
      intArray2[1] = 0;
      intArray2[2] = 0;
      intArray2[3] = (-2228);
      intArray2[4] = 0;
      intArray2[5] = 0;
      visualListModel0.rotateAnticlockwiseElements(intArray2);
      VisualListModel visualListModel1 = new VisualListModel();
      VisualListModel visualListModel2 = new VisualListModel();
      int[] intArray3 = new int[8];
      intArray3[0] = 0;
      intArray3[1] = 114;
      intArray3[2] = 114;
      intArray3[3] = (-2228);
      intArray3[4] = (-1);
      intArray3[5] = (-2280);
      intArray3[6] = 0;
      intArray3[7] = (-2280);
      visualListModel0.moveUpIndexes(intArray3);
      visualListModel2.moveDownIndexes(intArray1);
      visualListModel0.rotateAnticlockwiseElements(intArray1);
      visualListModel0.undeleteElements(intArray1);
      int[] intArray4 = new int[1];
      intArray4[0] = 0;
      visualListModel2.rotateAnticlockwiseElements(intArray4);
      assertFalse(intArray4.equals((Object)intArray2));
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.0557051606564785
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.addElementAt((VisualPageListItem) null, 0);
      visualListModel0.updateElementAt(78, (VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      stack0.ensureCapacity(1366);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[8];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = visualPageListItemArray0[0];
      visualListModel0.data = (Vector<VisualPageListItem>) stack0;
      visualPageListItemArray0[3] = null;
      visualListModel0.setData(visualPageListItemArray0);
      int[] intArray0 = new int[7];
      intArray0[0] = 78;
      intArray0[1] = 78;
      intArray0[2] = 1366;
      intArray0[3] = 1366;
      intArray0[4] = 78;
      intArray0[5] = 78;
      intArray0[6] = 1366;
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 78
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.133133739559716
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[3];
      visualListModel0.moveUpIndexes(intArray0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.clone();
      int[] intArray1 = new int[9];
      intArray1[0] = 0;
      intArray1[1] = 0;
      intArray1[2] = 0;
      intArray1[3] = 0;
      intArray1[4] = 0;
      intArray1[5] = 0;
      intArray1[6] = 0;
      intArray1[7] = 0;
      intArray1[8] = 0;
      visualListModel0.reverseElements(intArray1);
      stack0.add((VisualPageListItem) null);
      stack0.ensureCapacity(0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[7];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[5] = null;
      visualPageListItemArray0[6] = null;
      visualListModel0.setData(visualPageListItemArray0);
      // Undeclared exception!
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      stack0.clone();
      stack0.add((VisualPageListItem) null);
      int[] intArray0 = null;
      VisualListModel visualListModel0 = new VisualListModel();
      VisualListModel visualListModel1 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.moveUpIndexes((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.6675530205253588
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[4];
      intArray0[0] = 1;
      intArray0[1] = (-1820);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.addAllElements(0, (Collection<VisualPageListItem>) stack0);
      ArrayDeque<VisualPageListItem> arrayDeque0 = new ArrayDeque<VisualPageListItem>();
      visualListModel1.addAllElements((Collection<VisualPageListItem>) stack0);
      VisualPageListItem[] visualPageListItemArray0 = visualListModel1.getElements();
      assertEquals(0, visualPageListItemArray0.length);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.removeElements((-4485), (-4485), false);
      int[] intArray0 = new int[0];
      visualListModel0.reverseElements(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      assertEquals(0, intArray0.length);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      JComboBox<Month> jComboBox0 = new JComboBox<Month>();
      jComboBox0.removeNotify();
      visualListModel0.addListDataListener(jComboBox0);
      // Undeclared exception!
      try { 
        visualListModel0.moveDownIndexes((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.4812405179641535
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[3];
      visualListModel0.moveUpIndexes(intArray0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      stack0.clone();
      visualListModel0.addElementAt((VisualPageListItem) null, 0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.updateElementAt(78, (VisualPageListItem) null);
      stack0.listIterator(0);
      stack0.add((VisualPageListItem) null);
      stack0.ensureCapacity(1366);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[8];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[5] = null;
      visualPageListItemArray0[6] = null;
      visualPageListItemArray0[7] = null;
      visualListModel0.setData(visualPageListItemArray0);
      int[] intArray1 = new int[9];
      intArray1[0] = 1366;
      intArray1[1] = 0;
      visualListModel0.moveUpIndex(1);
      visualListModel0.clearData();
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[5];
      // Undeclared exception!
      try { 
        visualListModel0.setData((VisualPageListItem[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.4727981441098428
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.removeElements(0, 0, true);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.removeElements(0, (-43), true);
      int[] intArray0 = new int[1];
      intArray0[0] = 0;
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.reverseElements(intArray0);
      int[] intArray1 = new int[7];
      intArray1[0] = (-43);
      intArray1[1] = 0;
      intArray1[2] = 0;
      intArray1[3] = 0;
      intArray1[4] = 0;
      intArray1[5] = 0;
      intArray1[6] = 0;
      visualListModel0.rotateAnticlockwiseElements(intArray1);
      VisualListModel visualListModel1 = new VisualListModel();
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel2.moveDownIndexes(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      Object object0 = visualListModel0.getElementAt(0);
      assertNull(object0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.7911998103932196
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Integer.divideUnsigned((-1), (-71));
      Integer integer0 = new Integer(2252);
      Integer integer1 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer integer2 = JLayeredPane.MODAL_LAYER;
      Integer integer3 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer[] integerArray0 = new Integer[7];
      integerArray0[0] = integer3;
      Integer integer4 = IIPResolutionDescriptor.MAX_RESOLUTION;
      integerArray0[1] = integer4;
      Integer.getInteger("cki;e]pyiA>XP7WP_", (int) integerArray0[1]);
      integerArray0[2] = integer2;
      integerArray0[3] = integer3;
      integerArray0[4] = integer3;
      int[] intArray0 = new int[1];
      intArray0[0] = (-71);
      visualListModel0.reverseElements(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.subList((-71), (int) integerArray0[0], false);
      visualListModel1.moveUpIndexes(intArray0);
      int[] intArray1 = null;
      // Undeclared exception!
      try { 
        visualListModel1.reverseElements((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.132999251994992
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[3];
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      stack0.clone();
      visualListModel0.addElementAt((VisualPageListItem) null, 0);
      visualListModel0.updateElementAt(78, (VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      Stack<VisualPageListItem> stack1 = new Stack<VisualPageListItem>();
      ArrayDeque<VisualPageListItem> arrayDeque0 = new ArrayDeque<VisualPageListItem>();
      Integer[] integerArray0 = new Integer[6];
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      integerArray0[0] = integer0;
      Integer integer1 = JLayeredPane.MODAL_LAYER;
      integerArray0[1] = integer1;
      Integer integer2 = JLayeredPane.DEFAULT_LAYER;
      integerArray0[2] = integer2;
      Integer integer3 = JLayeredPane.DEFAULT_LAYER;
      integerArray0[3] = integer3;
      Integer integer4 = JLayeredPane.DEFAULT_LAYER;
      integerArray0[4] = integer4;
      Integer integer5 = JLayeredPane.DRAG_LAYER;
      integerArray0[5] = integer5;
      DefaultComboBoxModel<Integer> defaultComboBoxModel0 = new DefaultComboBoxModel<Integer>(integerArray0);
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(defaultComboBoxModel0);
      JComboBox<Month> jComboBox1 = new JComboBox<Month>();
      visualListModel0.removeListDataListener(jComboBox0);
      visualListModel0.getSize();
      // Undeclared exception!
      try { 
        visualListModel0.removeElements(intArray0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.3126128629446354
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[4];
      visualListModel0.addListDataListener((ListDataListener) null);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.subList(0, 0, true);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.reverseElements(intArray0);
      int[] intArray1 = new int[4];
      visualListModel0.rotateClockwiseElements(intArray1);
      visualListModel0.moveDownIndexes(intArray1);
      assertArrayEquals(new int[] {0, 0, 0, 0}, intArray1);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 3261;
      int int1 = 775;
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        visualListModel0.subList(3261, 0, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(3261) > toIndex(0)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = (-4485);
      visualListModel0.moveDownIndex((-4485));
      int int1 = 10;
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem(10);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.2323662005645053
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.subList(3261, 775, true);
      int[] intArray0 = new int[4];
      visualListModel0.addListDataListener((ListDataListener) null);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.addListDataListener((ListDataListener) null);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.subList(0, 0, true);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.reverseElements(intArray0);
      int[] intArray1 = new int[4];
      visualListModel0.prependAllElements((Collection<VisualPageListItem>) null);
      intArray1[0] = (-282);
      intArray1[1] = 775;
      intArray1[2] = 775;
      intArray1[3] = 3261;
      visualListModel0.rotateClockwiseElements(intArray1);
      assertEquals(4, intArray1.length);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.7315797140115936
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.clone();
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      Stack<VisualPageListItem> stack1 = new Stack<VisualPageListItem>();
      ArrayDeque<VisualPageListItem> arrayDeque0 = new ArrayDeque<VisualPageListItem>();
      Integer[] integerArray0 = new Integer[6];
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      integerArray0[0] = integer0;
      Integer integer1 = JLayeredPane.MODAL_LAYER;
      integerArray0[1] = integer1;
      Integer integer2 = JLayeredPane.DEFAULT_LAYER;
      integerArray0[2] = integer2;
      Integer integer3 = JLayeredPane.DEFAULT_LAYER;
      integerArray0[3] = integer3;
      Integer integer4 = JLayeredPane.DEFAULT_LAYER;
      integerArray0[4] = integer4;
      Integer integer5 = JLayeredPane.DRAG_LAYER;
      integerArray0[5] = integer5;
      DefaultComboBoxModel<Integer> defaultComboBoxModel0 = new DefaultComboBoxModel<Integer>(integerArray0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[2];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualListModel0.setData(visualPageListItemArray0);
      assertEquals(2, visualListModel0.getSize());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.234428138955996
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[4];
      intArray0[0] = 1453;
      intArray0[1] = 1453;
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      intArray0[2] = 30;
      intArray0[3] = 1857;
      int[] intArray1 = new int[1];
      intArray1[0] = 1453;
      visualListModel0.moveDownIndexes(intArray1);
      visualListModel0.removeElements(441, 0, false);
      visualListModel0.moveUpIndexes(intArray1);
      visualListModel0.moveDownIndexes(intArray0);
      assertEquals(4, intArray0.length);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.238349707583447
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[2];
      intArray0[0] = 19;
      DefaultTableModel[] defaultTableModelArray0 = new DefaultTableModel[5];
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      defaultTableModelArray0[0] = defaultTableModel0;
      DefaultTableModel defaultTableModel1 = new DefaultTableModel(19, 19);
      defaultTableModelArray0[1] = defaultTableModel1;
      Object[][] objectArray0 = new Object[1][2];
      objectArray0[0] = (Object[]) defaultTableModelArray0;
      DefaultTableModel defaultTableModel2 = new DefaultTableModel(objectArray0, defaultTableModelArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      int[] intArray1 = new int[5];
      intArray1[0] = 19;
      intArray1[1] = 19;
      intArray1[2] = 19;
      intArray1[3] = 610;
      intArray1[4] = 0;
      visualListModel0.reverseElements(intArray1);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel0.removeElements(0, 2548, true);
      int[] intArray2 = new int[7];
      intArray2[0] = 0;
      intArray2[1] = 0;
      intArray2[2] = 2548;
      intArray2[3] = 0;
      intArray2[4] = 2548;
      intArray2[5] = 0;
      intArray2[6] = 2548;
      visualListModel0.moveUpIndexes(intArray2);
      assertFalse(intArray2.equals((Object)intArray1));
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.7842068034002128
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Integer.divideUnsigned((-1), (-71));
      Integer integer0 = new Integer(2252);
      Integer integer1 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer integer2 = JLayeredPane.MODAL_LAYER;
      Integer integer3 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer[] integerArray0 = new Integer[7];
      integerArray0[0] = integer3;
      Integer integer4 = IIPResolutionDescriptor.MAX_RESOLUTION;
      integerArray0[1] = integer4;
      Integer.getInteger("cki;e]pyiA>XP7WP_", (int) integerArray0[1]);
      integerArray0[2] = integer2;
      integerArray0[3] = integer3;
      integerArray0[4] = integer3;
      integerArray0[5] = integer3;
      Integer integer5 = new Integer((-71));
      integerArray0[6] = integer5;
      DefaultComboBoxModel<Integer> defaultComboBoxModel0 = new DefaultComboBoxModel<Integer>(integerArray0);
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(defaultComboBoxModel0);
      JComboBox<Month> jComboBox1 = new JComboBox<Month>();
      visualListModel0.removeListDataListener(jComboBox0);
      visualListModel0.getSize();
      VisualListModel visualListModel1 = new VisualListModel();
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      visualListModel1.prependAllElements(priorityQueue0);
      List<VisualPageListItem> list0 = visualListModel1.getValidElements();
      assertNull(list0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.2147340152127564
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[2];
      intArray0[0] = 19;
      DefaultTableModel[] defaultTableModelArray0 = new DefaultTableModel[5];
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      defaultTableModelArray0[0] = defaultTableModel0;
      DefaultTableModel defaultTableModel1 = new DefaultTableModel(19, 19);
      Object[][] objectArray0 = new Object[1][2];
      objectArray0[0] = (Object[]) defaultTableModelArray0;
      DefaultTableModel defaultTableModel2 = new DefaultTableModel(objectArray0, defaultTableModelArray0);
      defaultTableModelArray0[2] = defaultTableModel2;
      defaultTableModel1.getRowCount();
      DefaultTableModel defaultTableModel3 = new DefaultTableModel();
      defaultTableModelArray0[3] = defaultTableModel3;
      DefaultTableModel defaultTableModel4 = new DefaultTableModel(objectArray0, objectArray0[0]);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.subList((-4861), 1000, false);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.moveUpIndexes(intArray0);
      visualListModel1.rotateClockwiseElements(intArray0);
      assertEquals(0, visualListModel1.getSize());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.786724494755577
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex(1);
      visualListModel0.clearData();
      int[] intArray0 = new int[3];
      intArray0[0] = 1;
      intArray0[1] = 1;
      HashMap<RenderingHints.Key, String> hashMap0 = new HashMap<RenderingHints.Key, String>();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_DITHERING;
      hashMap0.put(sunHints_Key0, "Rx(bn`B_~");
      RenderingHints renderingHints0 = new RenderingHints(hashMap0);
      RescaleOp rescaleOp0 = new RescaleOp(1, 0.0F, renderingHints0);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-11);
      byteArray0[2] = (byte) (-43);
      byteArray0[3] = (byte)7;
      byteArray0[4] = (byte) (-119);
      byteArray0[5] = (byte)10;
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      assertEquals(0, stack0.size());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[5];
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      visualListModel0.addAllElements((-112), (Collection<VisualPageListItem>) linkedHashSet0);
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel0.data = vector0;
      intArray0[0] = 13;
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[0];
      visualListModel0.setData(visualPageListItemArray0);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Integer[] integerArray0 = new Integer[5];
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      integerArray0[0] = integer0;
      Integer integer1 = new Integer(18);
      integerArray0[1] = integer1;
      Integer integer2 = JLayeredPane.DEFAULT_LAYER;
      integerArray0[2] = integer2;
      Integer integer3 = JLayeredPane.DRAG_LAYER;
      integerArray0[3] = integer3;
      Integer integer4 = JLayeredPane.MODAL_LAYER;
      integerArray0[4] = integer4;
      DefaultComboBoxModel<Integer> defaultComboBoxModel0 = new DefaultComboBoxModel<Integer>(integerArray0);
      visualListModel0.getListDataListeners();
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      visualListModel0.addAllElements((int) integerArray0[4], (Collection<VisualPageListItem>) treeSet0);
      visualListModel0.moveUpIndex((int) integerArray0[2]);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.619265678313665
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.subList(1635, 1635);
      visualListModel0.addAllElements(297, (Collection<VisualPageListItem>) null);
      int[] intArray0 = new int[4];
      visualListModel0.addListDataListener((ListDataListener) null);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.subList(0, 0, true);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.reverseElements(intArray0);
      int[] intArray1 = new int[8];
      visualListModel0.rotateClockwiseElements(intArray1);
      visualListModel0.moveDownIndexes(intArray1);
      visualListModel0.moveDownIndex(297);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.7937175017485838
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getListDataListeners();
      JComboBox<Month> jComboBox0 = new JComboBox<Month>();
      Month[] monthArray0 = new Month[9];
      Month month0 = Month.MAY;
      monthArray0[0] = month0;
      Month month1 = Month.APRIL;
      monthArray0[1] = month1;
      Month month2 = Month.FEBRUARY;
      monthArray0[2] = month2;
      Month month3 = Month.MAY;
      monthArray0[3] = month3;
      Month month4 = Month.MARCH;
      monthArray0[4] = month4;
      Month month5 = Month.MARCH;
      monthArray0[5] = month5;
      monthArray0[6] = month4;
      Month month6 = Month.JUNE;
      monthArray0[7] = month6;
      Month month7 = Month.JULY;
      monthArray0[8] = month7;
      JComboBox<Month> jComboBox1 = new JComboBox<Month>(monthArray0);
      jComboBox1.getItemListeners();
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.addListDataListener(jComboBox0);
      VisualListModel visualListModel2 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[0];
      visualListModel2.setData(visualPageListItemArray0);
      // Undeclared exception!
      try { 
        visualListModel2.getElementAt((-1255));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      ParameterBlock parameterBlock0 = new ParameterBlock((Vector<Object>) null, (Vector<Object>) null);
      HashMap<RenderingHints.Key, VisualPageListItem> hashMap0 = new HashMap<RenderingHints.Key, VisualPageListItem>();
      RenderingHints renderingHints0 = new RenderingHints(hashMap0);
      Object object0 = visualListModel0.getElementAt(1851);
      assertNull(object0);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.7812565483396634
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[3];
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.rotateClockwiseElements(intArray0);
      VisualListModel visualListModel2 = new VisualListModel();
      ArrayDeque<VisualPageListItem> arrayDeque0 = new ArrayDeque<VisualPageListItem>(stack0);
      visualListModel1.addAllElements(0, (Collection<VisualPageListItem>) stack0);
      VisualListModel visualListModel3 = new VisualListModel();
      VisualListModel visualListModel4 = new VisualListModel();
      VisualListModel visualListModel5 = new VisualListModel();
      VisualListModel visualListModel6 = new VisualListModel();
      visualListModel6.removeElements(intArray0, false);
      visualListModel6.subList(0, 0);
      visualListModel2.prependAllElements(arrayDeque0);
      VisualListModel visualListModel7 = new VisualListModel();
      visualListModel6.elementsChanged();
      VisualListModel visualListModel8 = new VisualListModel();
      visualListModel3.appendAllElements(arrayDeque0);
      int[] intArray1 = new int[6];
      intArray1[1] = 0;
      intArray1[2] = 0;
      visualListModel7.reverseElements(intArray1);
      visualListModel2.addAllElements((Collection<VisualPageListItem>) stack0);
      assertTrue(stack0.empty());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.clone();
      // Undeclared exception!
      try { 
        visualListModel0.subList(338, 0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(338) > toIndex(0)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.344043579752026
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[3];
      visualListModel0.moveUpIndexes(intArray0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.clone();
      JComboBox<Month> jComboBox0 = new JComboBox<Month>();
      visualListModel0.addListDataListener(jComboBox0);
      VisualListModel visualListModel1 = new VisualListModel();
      int[] intArray1 = new int[0];
      visualListModel1.moveUpIndexes(intArray1);
      visualListModel0.reverseElements(intArray0);
      visualListModel1.rotateAnticlockwiseElements(intArray0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.subList(0, 0, false);
      visualListModel1.moveUpIndexes(intArray1);
      visualListModel1.reverseElements(intArray1);
      visualListModel1.rotateClockwiseElements(intArray0);
      visualListModel0.moveDownIndexes(intArray1);
      assertFalse(intArray1.equals((Object)intArray0));
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.0262478229265435
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Integer[] integerArray0 = new Integer[5];
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      integerArray0[0] = integer0;
      int int0 = 18;
      Integer integer1 = new Integer(18);
      integerArray0[1] = integer1;
      int[] intArray0 = new int[4];
      intArray0[0] = int0;
      intArray0[1] = 18;
      intArray0[2] = int0;
      intArray0[3] = (int) integerArray0[0];
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.elementsChanged();
      VisualListModel visualListModel2 = new VisualListModel();
      OperationRegistry operationRegistry0 = OperationRegistry.getThreadSafeOperationRegistry();
      ParameterBlock parameterBlock0 = new ParameterBlock();
      Vector<Object> vector0 = parameterBlock0.getSources();
      ParameterBlock parameterBlock1 = new ParameterBlock(vector0);
      // Undeclared exception!
      try { 
        operationRegistry0.createCollection((String) null, parameterBlock1, (RenderingHints) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The name parameter may not be null.
         //
         verifyException("javax.media.jai.util.CaselessStringKey", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      JComboBox<Month> jComboBox0 = new JComboBox<Month>();
      visualListModel0.addListDataListener(jComboBox0);
      int[] intArray0 = new int[0];
      visualListModel0.removeElements(intArray0, false);
      visualListModel0.removeElements((-792), (-792), false);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.4399756932787804
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      JComboBox<Month> jComboBox0 = new JComboBox<Month>();
      Integer.compare(0, 0);
      Integer.toUnsignedString((-897));
      Integer.compare(2780, (-123));
      JComboBox<Month> jComboBox1 = new JComboBox<Month>();
      int[] intArray0 = new int[9];
      intArray0[0] = 0;
      intArray0[1] = (-883);
      intArray0[2] = 0;
      intArray0[3] = (-897);
      intArray0[4] = 2780;
      intArray0[5] = 360;
      intArray0[6] = 1;
      intArray0[8] = (-123);
      visualListModel0.removeElements(intArray0, true);
      visualListModel0.removeElements(267, (-170), true);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.317477358555153
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[4];
      intArray0[0] = 1453;
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.addListDataListener((ListDataListener) null);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.reverseElements(intArray0);
      int[] intArray1 = new int[0];
      visualListModel0.rotateAnticlockwiseElements(intArray1);
      visualListModel0.reverseElements(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.subList(0, (-1061), true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(0) > toIndex(-1061)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.9549478780836425
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.subList(121, 767, true);
      VisualListModel visualListModel2 = new VisualListModel();
      Vector<Integer> vector0 = new Vector<Integer>();
      DefaultComboBoxModel<Integer> defaultComboBoxModel0 = new DefaultComboBoxModel<Integer>(vector0);
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(defaultComboBoxModel0);
      visualListModel2.removeListDataListener(jComboBox0);
      // Undeclared exception!
      try { 
        visualListModel0.subList(121, (-1846), true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(121) > toIndex(-1846)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.369978708581614
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[3];
      visualListModel0.subList((-1467), (-2229));
      intArray0[1] = (-1102);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.reverseElements(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.rotateAnticlockwiseElements(intArray0);
      VisualListModel visualListModel2 = new VisualListModel();
      VisualListModel visualListModel3 = new VisualListModel();
      visualListModel2.moveUpIndexes(intArray0);
      assertFalse(visualListModel2.equals((Object)visualListModel1));
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.3010386369482903
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[3];
      intArray0[0] = (-1);
      intArray0[1] = (-1102);
      int int0 = 0;
      intArray0[2] = 0;
      visualListModel0.moveUpIndexes(intArray0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.data = (Vector<VisualPageListItem>) stack0;
      visualListModel0.addElementAt((VisualPageListItem) null, 0);
      int[] intArray1 = new int[8];
      intArray1[0] = 0;
      intArray1[1] = 0;
      intArray1[2] = 0;
      intArray1[3] = 0;
      intArray1[4] = 0;
      intArray1[5] = 0;
      intArray1[6] = 0;
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.updateElementAt(0, (VisualPageListItem) null);
      stack0.ensureCapacity(0);
      intArray1[7] = 0;
      // Undeclared exception!
      try { 
        visualListModel0.appendAllElements(stack0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Vector$Itr", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.272336416778445
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      stack0.clone();
      visualListModel0.addElementAt((VisualPageListItem) null, 0);
      visualListModel0.updateElementAt(78, (VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      stack0.ensureCapacity(1366);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[8];
      visualPageListItemArray0[0] = null;
      visualListModel0.appendAllElements(stack0);
      visualPageListItemArray0[1] = visualPageListItemArray0[0];
      visualPageListItemArray0[2] = visualPageListItemArray0[1];
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[5] = null;
      visualPageListItemArray0[6] = null;
      visualPageListItemArray0[7] = null;
      visualListModel0.setData(visualPageListItemArray0);
      int[] intArray0 = new int[9];
      intArray0[0] = 1366;
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 1366;
      intArray0[4] = 0;
      intArray0[5] = 0;
      intArray0[6] = 0;
      visualListModel0.setData(visualPageListItemArray0);
      assertEquals(8, visualListModel0.getSize());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.addElementAt((VisualPageListItem) null, 0);
      visualListModel0.updateElementAt(78, (VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      stack0.ensureCapacity(1366);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[8];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = visualPageListItemArray0[0];
      visualPageListItemArray0[2] = null;
      visualListModel0.data = (Vector<VisualPageListItem>) stack0;
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[5] = null;
      visualListModel0.updateElementAt(0, visualPageListItemArray0[5]);
      stack0.add(visualPageListItemArray0[3]);
      Stack<VisualPageListItem> stack1 = new Stack<VisualPageListItem>();
      visualListModel0.moveUpIndex(0);
      assertEquals(3, visualListModel0.getSize());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getValidElements();
      ArrayDeque<VisualPageListItem> arrayDeque0 = new ArrayDeque<VisualPageListItem>();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) null);
      VisualPageListItem[] visualPageListItemArray0 = visualListModel0.getElements();
      assertEquals(0, visualPageListItemArray0.length);
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.638380941502739
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualListModel visualListModel1 = new VisualListModel();
      int[] intArray0 = new int[9];
      intArray0[0] = 767;
      intArray0[1] = 3261;
      intArray0[2] = 3261;
      intArray0[3] = 767;
      intArray0[4] = 767;
      intArray0[5] = 767;
      intArray0[6] = 3261;
      intArray0[7] = 3261;
      intArray0[8] = 11;
      visualListModel1.rotateClockwiseElements(intArray0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel1.elementsChanged();
      VisualListModel visualListModel2 = new VisualListModel();
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      visualListModel2.appendAllElements(priorityQueue0);
      VisualListModel visualListModel3 = new VisualListModel();
      visualListModel0.elementsChanged();
      VisualListModel visualListModel4 = new VisualListModel();
      visualListModel4.rotateAnticlockwiseElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.undeleteElements(intArray0);
      visualListModel1.rotateAnticlockwiseElements(intArray0);
      assertFalse(visualListModel1.equals((Object)visualListModel2));
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Integer[] integerArray0 = new Integer[5];
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      integerArray0[0] = integer0;
      int int0 = 18;
      Integer integer1 = new Integer(18);
      integerArray0[1] = integer1;
      Integer integer2 = JLayeredPane.DEFAULT_LAYER;
      Integer.getInteger("YckQ2:-rO,", integer2);
      Integer integer3 = JLayeredPane.DEFAULT_LAYER;
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(int0, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 18
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(2023, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 2023
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Integer[] integerArray0 = new Integer[5];
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      integerArray0[0] = integer0;
      Integer integer1 = new Integer(18);
      integerArray0[1] = integer1;
      Integer integer2 = JLayeredPane.DEFAULT_LAYER;
      integerArray0[2] = integer2;
      Integer integer3 = JLayeredPane.DRAG_LAYER;
      integerArray0[3] = integer3;
      Integer integer4 = JLayeredPane.MODAL_LAYER;
      visualListModel0.moveUpIndex((int) integerArray0[3]);
      assertEquals(0, visualListModel0.getSize());
  }
}
