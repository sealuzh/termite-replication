/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 30 11:52:09 GMT 2020
 */

package org.databene.jdbacl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintWriter;
import java.io.Reader;
import java.io.StreamTokenizer;
import java.util.ArrayList;
import java.util.List;
import org.apache.derby.iapi.store.raw.xact.RawTransaction;
import org.databene.jdbacl.NameSpec;
import org.databene.jdbacl.SQLUtil;
import org.databene.jdbacl.model.DBCatalog;
import org.databene.jdbacl.model.DBColumn;
import org.databene.jdbacl.model.DBConstraint;
import org.databene.jdbacl.model.DBDataType;
import org.databene.jdbacl.model.DBForeignKeyConstraint;
import org.databene.jdbacl.model.DBObject;
import org.databene.jdbacl.model.DBPrimaryKeyConstraint;
import org.databene.jdbacl.model.DBSchema;
import org.databene.jdbacl.model.DBTable;
import org.databene.jdbacl.model.DBUniqueConstraint;
import org.databene.jdbacl.model.DefaultDBColumn;
import org.databene.jdbacl.model.DefaultDBTable;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.hsqldb.jdbc.jdbcClob;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SQLUtil_ESTest extends SQLUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("_v1P72|1~(");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal column type format: _v1P72|1~(
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.6730116670092565
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      String[] stringArray0 = new String[1];
      String string0 = SQLUtil.renderWhereClause(stringArray0, stringArray0);
      assertEquals("null = null", string0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable(" REFERENCES ");
      ArrayList<DBColumn> arrayList0 = new ArrayList<DBColumn>();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn(" REFERENCES . REFERENCES ,  REFERENCES . REFERENCES ,  REFERENCES . REFERENCES ,  REFERENCES . REFERENCES ", defaultDBTable0, 2024, "Kc");
      arrayList0.add((DBColumn) defaultDBColumn0);
      String string0 = SQLUtil.renderColumnNames((List<DBColumn>) arrayList0);
      assertEquals(" REFERENCES . REFERENCES ,  REFERENCES . REFERENCES ,  REFERENCES . REFERENCES ,  REFERENCES . REFERENCES ", string0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.5004024235381879
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      boolean boolean0 = SQLUtil.isQuery("select intoderby.storage.filecachesize");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable((String) null);
      String[] stringArray0 = new String[4];
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, (String) null, false, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String string0 = SQLUtil.ukSpec(dBUniqueConstraint0, nameSpec0);
      assertEquals("UNIQUE (, , , )", string0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      String string0 = SQLUtil.substituteMarkers("Illegal column type format: ", "", "n_+E+'9o");
      assertEquals("'n_+E+'9o'I'n_+E+'9o'l'n_+E+'9o'l'n_+E+'9o'e'n_+E+'9o'g'n_+E+'9o'a'n_+E+'9o'l'n_+E+'9o' 'n_+E+'9o'c'n_+E+'9o'o'n_+E+'9o'l'n_+E+'9o'u'n_+E+'9o'm'n_+E+'9o'n'n_+E+'9o' 'n_+E+'9o't'n_+E+'9o'y'n_+E+'9o'p'n_+E+'9o'e'n_+E+'9o' 'n_+E+'9o'f'n_+E+'9o'o'n_+E+'9o'r'n_+E+'9o'm'n_+E+'9o'a'n_+E+'9o't'n_+E+'9o':'n_+E+'9o' 'n_+E+'9o'", string0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      String[] stringArray0 = new String[8];
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause((String[]) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.renderWhereClause(stringArray0, stringArray0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      String string0 = SQLUtil.renderValue((Object) null);
      assertEquals("null", string0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      String string0 = SQLUtil.renderValue("=a=c*yxbr$");
      assertEquals("'=a=c*yxbr$'", string0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      String[] stringArray0 = new String[0];
      DBSchema dBSchema0 = new DBSchema("drop table");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("create materialized vieww", dBSchema0);
      String string0 = SQLUtil.renderQuery(defaultDBTable0, stringArray0, stringArray0);
      assertEquals("SELECT * FROM create materialized vieww WHERE ", string0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn(",w7f>8h", defaultDBTable0, 95, "exec");
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0, stringBuilder0);
      assertEquals("EXEC", stringBuilder0.toString());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      String string0 = SQLUtil.renderColumnNames((String[]) null);
      assertEquals("()", string0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      String[] stringArray0 = new String[3];
      String string0 = SQLUtil.renderColumnNames(stringArray0);
      assertEquals("(, , )", string0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.renderColumnNames(stringArray0);
      assertEquals("()", string0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      String[] stringArray0 = new String[4];
      String string0 = SQLUtil.renderColumnListWithTableName((String) null, stringArray0);
      assertEquals("null.null, null.null, null.null, null.null", string0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      String[] stringArray0 = new String[17];
      String string0 = SQLUtil.renderColumnListWithTableName("", stringArray0);
      assertEquals(".null, .null, .null, .null, .null, .null, .null, .null, .null, .null, .null, .null, .null, .null, .null, .null, .null", string0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderColumn((DBColumn) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      String string0 = SQLUtil.removeComments("");
      assertEquals("", string0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Object[] objectArray0 = SQLUtil.parseColumnTypeAndSize("");
      assertEquals(1, objectArray0.length);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      String string0 = SQLUtil.normalize("", false);
      assertEquals("", string0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.9502705392332347
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesStructure("alter materialized view+u.q[j; = 'alter materialized view+u.q[j;'");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.310783678099714
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesStructure("");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.8438614379613667
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("");
      assertNull(boolean0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.410116318288409
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      String[] stringArray0 = new String[16];
      String string0 = SQLUtil.leftJoin("}4zKZ'U0B", stringArray0, "}4zKZ'U0B", "", stringArray0);
      assertEquals("left join }4zKZ'U0B as  on }4zKZ'U0B.null = .null and }4zKZ'U0B.null = .null and }4zKZ'U0B.null = .null and }4zKZ'U0B.null = .null and }4zKZ'U0B.null = .null and }4zKZ'U0B.null = .null and }4zKZ'U0B.null = .null and }4zKZ'U0B.null = .null and }4zKZ'U0B.null = .null and }4zKZ'U0B.null = .null and }4zKZ'U0B.null = .null and }4zKZ'U0B.null = .null and }4zKZ'U0B.null = .null and }4zKZ'U0B.null = .null and }4zKZ'U0B.null = .null and }4zKZ'U0B.null = .null", string0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.leftJoin("create materialized viewinsert}4zkz'u0b", stringArray0, "", "[*]", stringArray0);
      assertEquals("left join  as [*] on ", string0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.410116318288409
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      String[] stringArray0 = new String[4];
      String string0 = SQLUtil.leftJoin(stringArray0[1], stringArray0, stringArray0[3], stringArray0[2], stringArray0);
      assertEquals("left join null as null on null.null = null.null and null.null = null.null and null.null = null.null and null.null = null.null", string0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.410116318288409
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      String[] stringArray0 = new String[2];
      String string0 = SQLUtil.leftJoin("", stringArray0, "(=", "8XQ-+p4X", stringArray0);
      assertEquals("left join (= as 8XQ-+p4X on .null = 8XQ-+p4X.null and .null = 8XQ-+p4X.null", string0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      String[] stringArray0 = new String[1];
      String string0 = SQLUtil.join("}4zKZ'U0B", "}4zKZ'U0B", stringArray0, (String) null, "", stringArray0);
      assertEquals("}4zKZ'U0B join null as  on }4zKZ'U0B.null = .null", string0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      String[] stringArray0 = new String[6];
      String string0 = SQLUtil.join(")", "=uGHy\" 4YYdtdA", stringArray0, "", (String) null, stringArray0);
      assertEquals(") join  as null on =uGHy\" 4YYdtdA.null = null.null and =uGHy\" 4YYdtdA.null = null.null and =uGHy\" 4YYdtdA.null = null.null and =uGHy\" 4YYdtdA.null = null.null and =uGHy\" 4YYdtdA.null = null.null and =uGHy\" 4YYdtdA.null = null.null", string0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.join("lPmcl", "lPmcl", (String[]) null, "HZK)^=<", "derby.storage.fileCacheSize", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      String[] stringArray0 = new String[16];
      String string0 = SQLUtil.join("", stringArray0[2], stringArray0, "}4zKZ'U0B", "}4zKZ'U0B", stringArray0);
      assertEquals("}4zKZ'U0B as }4zKZ'U0B on null.null = }4zKZ'U0B.null and null.null = }4zKZ'U0B.null and null.null = }4zKZ'U0B.null and null.null = }4zKZ'U0B.null and null.null = }4zKZ'U0B.null and null.null = }4zKZ'U0B.null and null.null = }4zKZ'U0B.null and null.null = }4zKZ'U0B.null and null.null = }4zKZ'U0B.null and null.null = }4zKZ'U0B.null and null.null = }4zKZ'U0B.null and null.null = }4zKZ'U0B.null and null.null = }4zKZ'U0B.null and null.null = }4zKZ'U0B.null and null.null = }4zKZ'U0B.null and null.null = }4zKZ'U0B.null", string0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      String[] stringArray0 = new String[2];
      String string0 = SQLUtil.join("executedzt_rq}g", "", stringArray0, "\nReason: ", "", stringArray0);
      assertEquals("executedzt_rq}g join \nReason:  as  on .null = .null and .null = .null", string0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.join("rp index", "drop index", stringArray0, "M**b7haE<*CYV_", "", stringArray0);
      assertEquals("rp index join M**b7haE<*CYV_ as  on ", string0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      boolean boolean0 = SQLUtil.isQuery("drop indexderby.storage.filecachesize");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      boolean boolean0 = SQLUtil.isQuery("");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      boolean boolean0 = SQLUtil.isProcedureCall("~sK9&LB).g");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      boolean boolean0 = SQLUtil.isProcedureCall("");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDML("");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDDL("\u0001\u01C8");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDDL("");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.45056120886630463
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      String[] stringArray0 = new String[1];
      String string0 = SQLUtil.innerJoin("uIu1:KI,9~z7", stringArray0, "", "uIu1:KI,9~z7", stringArray0);
      assertEquals(" as uIu1:KI,9~z7 on uIu1:KI,9~z7.null = uIu1:KI,9~z7.null", string0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      String[] stringArray0 = new String[3];
      // Undeclared exception!
      try { 
        SQLUtil.innerJoin("org.apache.derby.impl.store.access.conglomerate.GenericScanController", (String[]) null, ":TCw#", "4#=uG6qr3PV8[OgN", stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.innerJoin("1MBMxbl/>1,M", stringArray0, "iO~L7", "alter table", stringArray0);
      assertEquals("iO~L7 as alter table on ", string0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.410116318288409
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      String[] stringArray0 = new String[3];
      String string0 = SQLUtil.innerJoin(stringArray0[2], stringArray0, "}4zKZ'U0B", "", stringArray0);
      assertEquals("}4zKZ'U0B as  on null.null = .null and null.null = .null and null.null = .null", string0);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.242453324894
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      String[] stringArray0 = new String[8];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("create materialized vieww", true, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      String string0 = SQLUtil.fkSpec(dBForeignKeyConstraint0, nameSpec0);
      assertEquals("FOREIGN KEY (, , , , , , , ) REFERENCES null(, , , , , , , )", string0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.0549201679861442
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("");
      String[] stringArray0 = new String[5];
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("yKNCtTSh", false, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      StringBuilder stringBuilder0 = SQLUtil.createConstraintSpecBuilder(dBForeignKeyConstraint0, nameSpec0);
      SQLUtil.appendConstraintName((DBConstraint) dBForeignKeyConstraint0, stringBuilder0, nameSpec0);
      assertEquals("CONSTRAINT yKNCtTSh CONSTRAINT yKNCtTSh ", stringBuilder0.toString());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      StringBuilder stringBuilder1 = SQLUtil.addRequiredCondition("", stringBuilder0);
      assertEquals("", stringBuilder1.toString());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.addOptionalCondition((String) null, (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      StringBuilder stringBuilder1 = SQLUtil.addOptionalCondition("", stringBuilder0);
      assertEquals("", stringBuilder1.toString());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.ukSpec((DBUniqueConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.substituteMarkers((String) null, (String) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      String[] stringArray0 = new String[8];
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause(stringArray0, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      String[] stringArray0 = new String[3];
      Object[] objectArray0 = new Object[1];
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause(stringArray0, objectArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      String[] stringArray0 = new String[8];
      // Undeclared exception!
      try { 
        SQLUtil.renderQuery((DBTable) null, stringArray0, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=0.9556998911125343
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      String[] stringArray0 = new String[16];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      Object[] objectArray0 = new Object[6];
      // Undeclared exception!
      try { 
        SQLUtil.renderQuery(defaultDBTable0, stringArray0, objectArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderNumber((StreamTokenizer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.NEVER;
      // Undeclared exception!
      try { 
        SQLUtil.renderCreateTable((DBTable) null, false, nameSpec0, (PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnTypeWithSize((DBColumn) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((DBColumn[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      ArrayList<DBColumn> arrayList0 = new ArrayList<DBColumn>();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) arrayList0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnListWithTableName(" REFERENCES ", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("d=Ldx[2g?)+0*jF{Cs", defaultDBTable0, (DBDataType) null, integer0);
      // Undeclared exception!
      try { 
        SQLUtil.renderColumn(defaultDBColumn0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.removeComments((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.pkSpec((DBPrimaryKeyConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.ownerDotComponent((DBObject) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.normalize((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.mutatesDataOrStructure((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.leftJoin("8=]jp V%p^1mqiN!", (String[]) null, "8=]jp V%p^1mqiN!", "CjyH!N4|y&ZtU", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=0.45056120886630463
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      String[] stringArray0 = new String[2];
      String[] stringArray1 = new String[0];
      // Undeclared exception!
      try { 
        SQLUtil.leftJoin("JFi#0e", stringArray0, "into", "org.databene.jdbacl.model.DBRow", stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      String[] stringArray0 = new String[3];
      // Undeclared exception!
      try { 
        SQLUtil.join((String) null, "null.null, null.null, null.null", stringArray0, "=", "", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.isQuery((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.isProcedureCall((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.isDML((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.isDDL((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=0.45056120886630463
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      String[] stringArray0 = new String[3];
      // Undeclared exception!
      try { 
        SQLUtil.innerJoin("}4zKZ'U0B", stringArray0, "eN", (String) null, (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=0.410116318288409
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      String[] stringArray0 = new String[6];
      String[] stringArray1 = new String[1];
      // Undeclared exception!
      try { 
        SQLUtil.innerJoin("N W9AgKH/[V", stringArray0, "=t<\"u@(", "f|;~j0OTAX08*%W0", stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.fkSpec((DBForeignKeyConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.createConstraintSpecBuilder((DBConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.constraintName((DBConstraint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) null, stringBuilder0, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "*GT>}LaA6");
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) null, stringBuilder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.addRequiredCondition("paVG5", (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.addOptionalCondition("}4zKZ'U0B", (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[17];
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "alter indexorg.apache.derby.impl.store.raw.data.setreservedspaceoperation", true, stringArray0);
      String string0 = SQLUtil.constraintName(dBPrimaryKeyConstraint0);
      assertEquals("CONSTRAINT \"alter indexorg.apache.derby.impl.store.raw.data.setreservedspaceoperation\" ", string0);
  }

  /**
  //Test case number: 87
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.renderColumnListWithTableName("create materialized viewinsert}4zkz'u0b", stringArray0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 88
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      jdbcClob jdbcClob0 = new jdbcClob("databaseName");
      Reader reader0 = jdbcClob0.getCharacterStream();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(reader0);
      String string0 = SQLUtil.renderNumber(streamTokenizer0);
      assertEquals("- 0", string0);
  }

  /**
  //Test case number: 89
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      String string0 = SQLUtil.normalize("M**b7haE<*CYV_", false);
      assertEquals("M * * b7haE < * CYV_", string0);
  }

  /**
  //Test case number: 90
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      String string0 = SQLUtil.normalize("/-N", false);
      assertEquals("/ - N", string0);
  }

  /**
  //Test case number: 91
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      String string0 = SQLUtil.normalize("drop materialized viewc.column_name field, c.type_name || '(' || c.numeric_precision || ')' type, c.is_nullable \"null\", case (select max(i.index_type_name) from information_schema.indexes i where i.table_schema=c.table_schema and i.table_name=c.table_name and i.column_name=c.column_name)when 'primary key' then 'pri' when 'unique index' then 'uni' else '' end key, ifnull(column_default, 'null') default from information_schema.columns c where c.table_name=? and c.table_schema=? order by c.ordinal_position", false);
      assertEquals("drop materialized viewc.column_name field, c.type_name | | '(' | | c.numeric_precision | | ')' type, c.is_nullable \"null\", case (select max (i.index_type_name) from information_schema.indexes i where i.table_schema = c.table_schema and i.table_name = c.table_name and i.column_name = c.column_name) when 'primary key' then 'pri' when 'unique index' then 'uni' else '' end key, ifnull (column_default, 'null') default from information_schema.columns c where c.table_name = ? and c.table_schema = ? order by c.ordinal_position", string0);
  }

  /**
  //Test case number: 92
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      String string0 = SQLUtil.normalize("org.apache.derby.iapi.util.DoubleProperties", true);
      assertEquals("org.apache.derby.iapi.util.DoubleProperties", string0);
  }

  /**
  //Test case number: 93
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      String string0 = SQLUtil.removeComments(" WrcKH/[V");
      assertEquals(" WrcKH/[V", string0);
  }

  /**
  //Test case number: 94
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      DBColumn[] dBColumnArray0 = new DBColumn[9];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("");
      DBDataType dBDataType0 = DBDataType.getInstance(0, "+u.Q[J;");
      Integer integer0 = RawTransaction.COMMIT;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn(")Gku&4-h[Q>rl", defaultDBTable0, dBDataType0, integer0);
      dBColumnArray0[7] = (DBColumn) defaultDBColumn0;
      String string0 = SQLUtil.typeAndName(dBColumnArray0[7]);
      assertEquals("column )Gku&4-h[Q>rl", string0);
  }

  /**
  //Test case number: 95
  /*Coverage entropy=0.7356219397587946
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      String string0 = SQLUtil.typeAndName((DBObject) null);
      String[] stringArray0 = new String[2];
      String string1 = SQLUtil.innerJoin((String) null, stringArray0, string0, "/VXa6*E{", stringArray0);
      assertEquals("null as /VXa6*E{ on null.null = /VXa6*E{.null and null.null = /VXa6*E{.null", string1);
  }

  /**
  //Test case number: 96
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String string0 = SQLUtil.typeAndName(defaultDBTable0);
      assertNotNull(string0);
      assertEquals("table null", string0);
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.4680602034990462
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[3];
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "SELECTPRIV", false, stringArray0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("|");
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      SQLUtil.renderCreateTable(defaultDBTable0, true, nameSpec0, mockPrintWriter0);
      assertNull(defaultDBTable0.getDoc());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable(" REFERENCES ");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn(" REFERENCES . REFERENCES ,  REFERENCES . REFERENCES ,  REFERENCES . REFERENCES ,  REFERENCES . REFERENCES ", defaultDBTable0, 2024, "Kc");
      String string0 = SQLUtil.ownerDotComponent(defaultDBColumn0);
      assertEquals(" REFERENCES . REFERENCES . REFERENCES ,  REFERENCES . REFERENCES ,  REFERENCES . REFERENCES ,  REFERENCES . REFERENCES ", string0);
  }

  /**
  //Test case number: 99
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String string0 = SQLUtil.ownerDotComponent(defaultDBTable0);
      assertEquals("null", string0);
  }

  /**
  //Test case number: 100
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      SQLUtil.addRequiredCondition("create", stringBuilder0);
      SQLUtil.addOptionalCondition("u>y|8}=(y\"( l1d6L", stringBuilder0);
      assertEquals("create or u>y|8}=(y\"( l1d6L", stringBuilder0.toString());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("|uix4K3@FL*9k>@Nf");
      SQLUtil.addRequiredCondition((String) null, stringBuilder0);
      assertEquals("|uix4K3@FL*9k>@Nf and null", stringBuilder0.toString());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.constraintSpec((DBConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 103
  /*Coverage entropy=1.6094379124341
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      String[] stringArray0 = new String[2];
      DBCatalog dBCatalog0 = new DBCatalog("5|Z3?2qK?jN1");
      DBSchema dBSchema0 = new DBSchema((String) null, dBCatalog0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("(=", dBSchema0);
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "uIu1:KI,9~z7", true, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String string0 = SQLUtil.constraintSpec(dBPrimaryKeyConstraint0, nameSpec0);
      assertEquals("CONSTRAINT uIu1:KI,9~z7 PRIMARY KEY (, )", string0);
  }

  /**
  //Test case number: 104
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDML("truncate");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 105
  /*Coverage entropy=1.8407487285692812
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("callbkpxzivdgkds23tgk");
      assertNull(boolean0);
  }

  /**
  //Test case number: 106
  /*Coverage entropy=1.7214023220140038
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("select intoderby.storage.filecachesize");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 107
  /*Coverage entropy=1.277034259466139
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("create unique indexw-[b");
      assertTrue(boolean0);
      assertNotNull(boolean0);
  }

  /**
  //Test case number: 108
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("}4zKZ'U0B as }4zKZ'U0B on }4zKZ'U0B.}4zKZ'U0B = }4zKZ'U0B.}4zKZ'U0B and }4zKZ'U0B.}4zKZ'U0B = }4zKZ'U0B.}4zKZ'U0B and }4zKZ'U0B.}4zKZ'U0B = }4zKZ'U0B.}4zKZ'U0B and }4zKZ'U0B.null = }4zKZ'U0B.null and }4zKZ'U0B.null = }4zKZ'U0B.null and }4zKZ'U0B.null = }4zKZ'U0B.null and }4zKZ'U0B.null = }4zKZ'U0B.null and }4zKZ'U0B.null = }4zKZ'U0B.null and }4zKZ'U0B.null = }4zKZ'U0B.null and }4zKZ'U0B.null = }4zKZ'U0B.null and }4zKZ'U0B.null = }4zKZ'U0B.null and }4zKZ'U0B.null = }4zKZ'U0B.null and }4zKZ'U0B.null = }4zKZ'U0B.null and }4zKZ'U0B.null = }4zKZ'U0B.null and }4zKZ'U0B.null = }4zKZ'U0B.null and }4zKZ'U0B.null = }4zKZ'U0B.null");
      DBDataType dBDataType0 = DBDataType.getInstance((-235955668), "");
      Integer integer0 = new Integer((-235955668));
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("}4zKZ'U0B", defaultDBTable0, dBDataType0, integer0);
      defaultDBColumn0.setFractionDigits(integer0);
      String string0 = SQLUtil.renderColumn(defaultDBColumn0);
      assertEquals("}4zKZ'U0B (-235955668,-235955668) NULL", string0);
  }

  /**
  //Test case number: 109
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      DBDataType dBDataType0 = DBDataType.getInstance(97, "alter session}4zkz'u0b.}4zkz'u0b, }4zkz'u0b.}4zkz'u0b, }4zkz'u0b.}4zkz'u0b");
      Integer integer0 = new Integer(1620);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("alter materialized view+u.q[j;", (DBTable) null, dBDataType0, integer0);
      String string0 = SQLUtil.renderColumn(defaultDBColumn0);
      assertEquals("alter materialized view+u.q[j; ALTER SESSION}4ZKZ'U0B.}4ZKZ'U0B, }4ZKZ'U0B.}4ZKZ'U0B, }4ZKZ'U0B.}4ZKZ'U0B(1620) NULL", string0);
  }

  /**
  //Test case number: 110
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable(" REFERENCES ");
      ArrayList<DBColumn> arrayList0 = new ArrayList<DBColumn>();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("'gq>i014+8k]=", defaultDBTable0, 12, " REFERENCES ");
      arrayList0.add((DBColumn) defaultDBColumn0);
      arrayList0.add((DBColumn) null);
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) arrayList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 111
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("drop index");
      ArrayList<DBColumn> arrayList0 = new ArrayList<DBColumn>();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("", defaultDBTable0, (-235955668), ")C");
      arrayList0.add((DBColumn) defaultDBColumn0);
      String string0 = SQLUtil.renderColumnNames((List<DBColumn>) arrayList0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 112
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      DBColumn[] dBColumnArray0 = new DBColumn[9];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("");
      DBDataType dBDataType0 = DBDataType.getInstance(0, "+u.Q[J;");
      Integer integer0 = RawTransaction.COMMIT;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn(")Gku&4-h[Q>rl", defaultDBTable0, dBDataType0, integer0);
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[1] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[2] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[3] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[4] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[5] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[6] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[7] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[8] = (DBColumn) defaultDBColumn0;
      String string0 = SQLUtil.renderColumnNames(dBColumnArray0);
      assertEquals(")Gku&4-h[Q>rl, )Gku&4-h[Q>rl, )Gku&4-h[Q>rl, )Gku&4-h[Q>rl, )Gku&4-h[Q>rl, )Gku&4-h[Q>rl, )Gku&4-h[Q>rl, )Gku&4-h[Q>rl, )Gku&4-h[Q>rl", string0);
  }

  /**
  //Test case number: 113
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      DBCatalog dBCatalog0 = new DBCatalog("5|Z3?2qK?jN1");
      DBSchema dBSchema0 = new DBSchema((String) null, dBCatalog0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("(=", dBSchema0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("uIu1:KI,9~z7");
      SQLUtil.renderCreateTable(defaultDBTable0, false, nameSpec0, mockPrintWriter0);
      assertEquals("(=", defaultDBTable0.getName());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=1.2700181519104905
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[3];
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "SELECTPRIV", false, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("|");
      SQLUtil.renderCreateTable(defaultDBTable0, true, nameSpec0, mockPrintWriter0);
      assertEquals("table", defaultDBTable0.getObjectType());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=1.5292482930376914
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      String[] stringArray0 = new String[2];
      DBCatalog dBCatalog0 = new DBCatalog("5|Z3?2qK?jN1");
      DBSchema dBSchema0 = new DBSchema((String) null, dBCatalog0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("(=", dBSchema0);
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "uIu1:KI,9~z7", true, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("uIu1:KI,9~z7");
      SQLUtil.renderCreateTable(defaultDBTable0, true, nameSpec0, mockPrintWriter0);
      assertNull(defaultDBTable0.getDoc());
  }

  /**
  //Test case number: 116
  /*Coverage entropy=0.9830877585747855
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn(",w7f>8h", defaultDBTable0, 95, "exec");
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("|");
      SQLUtil.renderCreateTable(defaultDBTable0, true, nameSpec0, mockPrintWriter0);
      assertNull(defaultDBTable0.getName());
  }

  /**
  //Test case number: 117
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("(=");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal column type format: (=
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 118
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("yyyy-MM-dd'T'HH:mm:ss.SSSSSS", defaultDBTable0, 308, "yyyy-MM-dd'T'HH:mm:ss.SSSSSS");
      String string0 = SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      assertEquals("YYYY-MM-DD'T'HH:MM:SS.SSSSSS", string0);
  }

  /**
  //Test case number: 119
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      String[] stringArray0 = new String[3];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, (String) null, false, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String string0 = SQLUtil.pkSpec(dBPrimaryKeyConstraint0, nameSpec0);
      assertEquals("PRIMARY KEY (, , )", string0);
  }

  /**
  //Test case number: 120
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      String string0 = SQLUtil.substituteMarkers("", "}4zKZ'U0B", "");
      assertEquals("", string0);
  }

  /**
  //Test case number: 121
  /*Coverage entropy=1.4880360441781157
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      String[] stringArray0 = new String[2];
      DBCatalog dBCatalog0 = new DBCatalog("5|Z3?2qK?jN1");
      DBSchema dBSchema0 = new DBSchema((String) null, dBCatalog0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("(=", dBSchema0);
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("8XQ-+p4X", true, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("uIu1:KI,9~z7");
      SQLUtil.renderCreateTable(defaultDBTable0, true, nameSpec0, mockPrintWriter0);
      assertNull(defaultDBTable0.getDoc());
  }

  /**
  //Test case number: 122
  /*Coverage entropy=1.4270610433807247
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[3];
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "SELECTPRIV", false, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String string0 = SQLUtil.constraintSpec(dBUniqueConstraint0, nameSpec0);
      assertEquals("UNIQUE (, , )", string0);
  }

  /**
  //Test case number: 123
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      SQLUtil sQLUtil0 = new SQLUtil();
  }
}
