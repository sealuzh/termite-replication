/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 10:28:45 GMT 2019
 */

package org.databene.jdbacl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.io.PrintWriter;
import java.io.StreamTokenizer;
import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.DelayQueue;
import java.util.concurrent.Delayed;
import javax.management.remote.JMXPrincipal;
import org.apache.derby.iapi.services.context.ContextManager;
import org.apache.derby.iapi.sql.dictionary.ColumnDescriptorList;
import org.apache.derby.iapi.sql.dictionary.SchemaDescriptor;
import org.apache.derby.iapi.store.access.TransactionController;
import org.apache.derby.iapi.store.raw.xact.RawTransaction;
import org.apache.derby.impl.db.SlaveDatabase;
import org.apache.derby.impl.services.uuid.BasicUUID;
import org.apache.derby.impl.sql.GenericLanguageFactory;
import org.apache.derby.impl.sql.catalog.DataDictionaryImpl;
import org.apache.derby.impl.sql.compile.FromVTI;
import org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext;
import org.apache.derby.impl.sql.conn.GenericLanguageConnectionFactory;
import org.apache.derby.impl.store.access.btree.BTreeController;
import org.databene.commons.AssertionError;
import org.databene.commons.version.VersionNumber;
import org.databene.jdbacl.NameSpec;
import org.databene.jdbacl.SQLUtil;
import org.databene.jdbacl.model.CompositeDBObject;
import org.databene.jdbacl.model.DBCatalog;
import org.databene.jdbacl.model.DBCheckConstraint;
import org.databene.jdbacl.model.DBColumn;
import org.databene.jdbacl.model.DBConstraint;
import org.databene.jdbacl.model.DBDataType;
import org.databene.jdbacl.model.DBForeignKeyConstraint;
import org.databene.jdbacl.model.DBNonUniqueIndex;
import org.databene.jdbacl.model.DBNotNullConstraint;
import org.databene.jdbacl.model.DBObject;
import org.databene.jdbacl.model.DBPrimaryKeyConstraint;
import org.databene.jdbacl.model.DBSchema;
import org.databene.jdbacl.model.DBSequence;
import org.databene.jdbacl.model.DBTable;
import org.databene.jdbacl.model.DBUniqueConstraint;
import org.databene.jdbacl.model.DBUniqueIndex;
import org.databene.jdbacl.model.DefaultDBColumn;
import org.databene.jdbacl.model.DefaultDBTable;
import org.databene.jdbacl.model.DefaultDatabase;
import org.databene.jdbacl.model.TableContainer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileWriter;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.hsqldb.lib.FileUtil;
import org.junit.runner.RunWith;
import org.postgresql.ds.PGConnectionPoolDataSource;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SQLUtil_ESTest extends SQLUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PGConnectionPoolDataSource pGConnectionPoolDataSource0 = new PGConnectionPoolDataSource();
      pGConnectionPoolDataSource0.setCompatible("DG,V%gl2Hm,UL,MH\"i");
      pGConnectionPoolDataSource0.getLogWriter();
      DBSequence dBSequence0 = new DBSequence("R9zJnJ1P&\"r`)gc]Y&&", "R9zJnJ1P&\"r`)gc]Y&&", "DG,V%gl2Hm,UL,MH\"i");
      FileSystemHandling.shouldAllThrowIOExceptions();
      SQLUtil.typeAndName(dBSequence0);
      // Undeclared exception!
      try { 
        SQLUtil.renderNumber((StreamTokenizer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.2451179117382845
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SQLUtil.mutatesStructure(" DEFAULT ");
      SQLUtil sQLUtil0 = new SQLUtil();
      DBCatalog dBCatalog0 = new DBCatalog();
      DBSchema dBSchema0 = new DBSchema("d\u0000EH", dBCatalog0);
      SQLUtil.typeAndName(dBSchema0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance((-1628554684), "left");
      Integer integer0 = new Integer((-1726592857));
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("d\u0000EH", defaultDBTable0, dBDataType0, integer0);
      defaultDBColumn0.setType(dBDataType0);
      Integer integer1 = RawTransaction.COMMIT;
      SQLUtil.renderValue(integer1);
      Integer.toUnsignedString((-1726592857));
      String[] stringArray0 = new String[0];
      SQLUtil.join("schema d\u0000EH", "vUn$.~l-QP3+%#i-U{", stringArray0, "d\u0000EH", " and ", stringArray0);
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      SQLUtil.renderQuery(defaultDBTable0, stringArray0, stringArray0);
      String[] stringArray1 = new String[7];
      stringArray1[0] = "SELECT * FROM null WHERE ";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "fgn[#", true, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      SQLUtil.constraintSpec(dBUniqueConstraint0, nameSpec0);
      // Undeclared exception!
      try { 
        defaultDBTable0.getForeignKeyConstraint(stringArray1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Table 'null' has no foreign key with the columns (SELECT * FROM null WHERE , , , , , , )
         //
         verifyException("org.databene.jdbacl.model.DefaultDBTable", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CompositeDBObject<DBPrimaryKeyConstraint> compositeDBObject0 = (CompositeDBObject<DBPrimaryKeyConstraint>) mock(CompositeDBObject.class, new ViolatedAssumptionAnswer());
      TableContainer tableContainer0 = new TableContainer(":B/", compositeDBObject0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      tableContainer0.getTable(":B/");
      tableContainer0.setDoc(" as ");
      String string0 = "'8<ph,HdLFM(L*ijx";
      DefaultDBColumn defaultDBColumn0 = null;
      try {
        defaultDBColumn0 = new DefaultDBColumn(" as ", (DBTable) null, 4264, "'8<ph,HdLFM(L*ijx");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal column type format: '8<ph,HdLFM(L*ijx
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.359604849239403
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "Hwg%R${");
      SQLUtil.mutatesDataOrStructure("dE~]");
      DBCatalog dBCatalog0 = new DBCatalog();
      DBSchema dBSchema0 = new DBSchema("dE~]", dBCatalog0);
      SQLUtil.typeAndName(dBSchema0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType.getInstance((-74184458), "Ac8vD~2Gr=uE*4");
      Integer integer0 = new Integer((-74184458));
      Integer integer1 = RawTransaction.COMMIT;
      Character character0 = new Character('L');
      SQLUtil.renderValue(character0);
      SQLUtil.normalize("org.databene.SQL", true);
      Integer integer2 = RawTransaction.COMMIT;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-87);
      byteArray0[1] = (byte)101;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      SQLUtil.isProcedureCall(" DEFAULT ");
      SQLUtil.isDML(")Q4`c{)W/T,Gi'");
      SQLUtil.isQuery("getHoldability()");
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint(" DEFAULT ", false, defaultDBTable0, "X");
      ArrayList<DBColumn> arrayList0 = new ArrayList<DBColumn>();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) arrayList0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.1975373150328195
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String string0 = "d\\E~]";
      SQLUtil.mutatesStructure("DEFULT ");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      SQLUtil sQLUtil0 = new SQLUtil();
      DBCatalog dBCatalog0 = new DBCatalog();
      DBSchema dBSchema0 = new DBSchema("dE~]", dBCatalog0);
      SQLUtil.typeAndName(dBSchema0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBTable defaultDBTable1 = new DefaultDBTable();
      DBDataType.getInstance((-74184462), "Ac8vD~2Gr=uE*4");
      Integer integer0 = new Integer((-74184462));
      Integer integer1 = RawTransaction.COMMIT;
      Character character0 = new Character('L');
      SQLUtil.renderValue(character0);
      SQLUtil.normalize("org.databene.SQL", true);
      Integer integer2 = RawTransaction.COMMIT;
      Integer integer3 = RawTransaction.ABORT;
      String[] stringArray0 = new String[7];
      stringArray0[0] = "DEFULT ";
      stringArray0[1] = "Ac8vD~2Gr=uE*4";
      stringArray0[2] = "drop indexde~]";
      stringArray0[3] = "dE~]";
      stringArray0[4] = "EXISTS ";
      stringArray0[5] = "Ac8vD~2Gr=uE*4";
      stringArray0[6] = "DEFULT ";
      Object[] objectArray0 = new Object[0];
      // Undeclared exception!
      try { 
        SQLUtil.renderQuery(defaultDBTable1, stringArray0, objectArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.9344319987387206
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesStructure(" DEFAULT ");
      assertFalse(boolean0);
      
      SQLUtil sQLUtil0 = new SQLUtil();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable(" DEFAULT ");
      DBDataType.getInstance(91, "inner");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "alter tabledefault";
      stringArray0[1] = "RGX%%:9SCQ:^?$(jN";
      stringArray0[2] = " DEFAULT ";
      String string0 = SQLUtil.renderColumnListWithTableName(" DEFAULT ", stringArray0);
      assertEquals(" DEFAULT .alter tabledefault,  DEFAULT .RGX%%:9SCQ:^?$(jN,  DEFAULT . DEFAULT ", string0);
      
      String string1 = SQLUtil.join("inner", "alter session", stringArray0, "exec", " DEFAULT .alter tabledefault,  DEFAULT .RGX%%:9SCQ:^?$(jN,  DEFAULT . DEFAULT ", stringArray0);
      assertEquals("exec as  DEFAULT .alter tabledefault,  DEFAULT .RGX%%:9SCQ:^?$(jN,  DEFAULT . DEFAULT  on alter session.alter tabledefault =  DEFAULT .alter tabledefault,  DEFAULT .RGX%%:9SCQ:^?$(jN,  DEFAULT . DEFAULT .alter tabledefault and alter session.RGX%%:9SCQ:^?$(jN =  DEFAULT .alter tabledefault,  DEFAULT .RGX%%:9SCQ:^?$(jN,  DEFAULT . DEFAULT .RGX%%:9SCQ:^?$(jN and alter session. DEFAULT  =  DEFAULT .alter tabledefault,  DEFAULT .RGX%%:9SCQ:^?$(jN,  DEFAULT . DEFAULT . DEFAULT ", string1);
      
      String string2 = SQLUtil.renderColumnNames(stringArray0);
      assertEquals("(alter tabledefault, RGX%%:9SCQ:^?$(jN,  DEFAULT )", string2);
      
      DefaultDBTable defaultDBTable1 = new DefaultDBTable();
      DBNonUniqueIndex dBNonUniqueIndex0 = new DBNonUniqueIndex("alter index", false, defaultDBTable1, stringArray0);
      defaultDBTable0.removeIndex(dBNonUniqueIndex0);
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("\"96lN1>F@6ZPC92&/W0", false, defaultDBTable1, stringArray0, defaultDBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      SQLUtil.fkSpec(dBForeignKeyConstraint0, nameSpec0);
      String string3 = SQLUtil.renderWhereClause(stringArray0, stringArray0);
      assertEquals("alter tabledefault = 'alter tabledefault' AND RGX%%:9SCQ:^?$(jN = 'RGX%%:9SCQ:^?$(jN' AND  DEFAULT  = ' DEFAULT '", string3);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.901904699525582
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SQLUtil.mutatesStructure(" DEFAULT ");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, " DEFAULT ");
      SQLUtil sQLUtil0 = new SQLUtil();
      DBCatalog dBCatalog0 = new DBCatalog();
      DBSchema dBSchema0 = new DBSchema("d\u0000EH", dBCatalog0);
      SQLUtil.typeAndName(dBSchema0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      dBCatalog0.getSequences();
      DBDataType dBDataType0 = DBDataType.getInstance((-1628554684), "left");
      Integer integer0 = new Integer((-1726592857));
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("d\u0000EH", defaultDBTable0, dBDataType0, integer0);
      defaultDBColumn0.setType(dBDataType0);
      Integer integer1 = RawTransaction.COMMIT;
      SQLUtil.renderValue(integer1);
      Integer.toUnsignedString((-1726592857));
      String[] stringArray0 = new String[0];
      SQLUtil.join("schema d\u0000EH", "vUn$.~l-QP3+%#i-U{", stringArray0, "d\u0000EH", " and ", stringArray0);
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      SQLUtil.renderQuery(defaultDBTable0, stringArray0, stringArray0);
      String[] stringArray1 = new String[7];
      stringArray1[0] = "SELECT * FROM null WHERE ";
      defaultDBTable0.getComponents();
      stringArray1[1] = "vUn$.~l-QP3+%#i-U{";
      stringArray1[2] = " and ";
      stringArray1[3] = "0";
      stringArray1[4] = "0";
      stringArray1[5] = "left";
      stringArray1[6] = "SELECT * FROM null WHERE ";
      SQLUtil.mutatesStructure("alter materialized view");
      SQLUtil.renderColumnNames(stringArray1);
      JMXPrincipal jMXPrincipal0 = null;
      try {
        jMXPrincipal0 = new JMXPrincipal((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // illegal null input
         //
         verifyException("javax.management.remote.JMXPrincipal", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.581860142782201
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SQLUtil.mutatesStructure("DEFULT ");
      SQLUtil sQLUtil0 = new SQLUtil();
      Object object0 = new Object();
      SQLUtil.substituteMarkers("insert)q4`c{)w/t,gi'", "execdefult", object0);
      DBCatalog dBCatalog0 = new DBCatalog();
      DBSchema dBSchema0 = new DBSchema("dE~]", dBCatalog0);
      SQLUtil.typeAndName(dBSchema0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType.getInstance((-1628554684), "left");
      DefaultDBTable defaultDBTable1 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance((-74184462), "Ac8vD~2Gr=uE*4");
      Integer integer0 = new Integer((-74184462));
      Integer integer1 = RawTransaction.COMMIT;
      Character character0 = new Character('L');
      SQLUtil.renderValue(character0);
      SQLUtil.normalize("org.databene.SQL", true);
      Integer integer2 = RawTransaction.COMMIT;
      Integer integer3 = RawTransaction.ABORT;
      Integer integer4 = Integer.valueOf((-1029));
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn((String) null, defaultDBTable0, dBDataType0, integer4, integer0);
      SQLUtil.renderColumn(defaultDBColumn0);
      SQLUtil.typeAndName(defaultDBColumn0);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "'L'";
      stringArray0[1] = "schema dE~]";
      stringArray0[2] = "null AC8VD~2GR=UE*4(-1029,-74184462) NULL";
      defaultDBTable1.getUniqueConstraint(stringArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      // Undeclared exception!
      try { 
        SQLUtil.ukSpec((DBUniqueConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DBColumn[] dBColumnArray0 = new DBColumn[9];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable(")Gku&4-h[Q>rl");
      String string0 = "+u.Q[J;";
      DBDataType dBDataType0 = DBDataType.getInstance(0, "+u.Q[J;");
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn(")Gku&4-h[Q>rl", defaultDBTable0, dBDataType0, integer0);
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      DefaultDBColumn defaultDBColumn1 = new DefaultDBColumn((String) null, defaultDBTable0, dBDataType0, integer0);
      dBColumnArray0[1] = (DBColumn) defaultDBColumn1;
      Integer.getInteger("+u.Q[J;");
      Integer.compare(16380, (-3078));
      DefaultDBColumn defaultDBColumn2 = new DefaultDBColumn((String) null, defaultDBTable0, dBDataType0, integer0);
      defaultDBColumn2.setSize((Integer) null);
      defaultDBTable0.getColumn(")Gku&4-h[Q>rl");
      dBColumnArray0[2] = (DBColumn) defaultDBColumn2;
      StringBuilder stringBuilder0 = new StringBuilder(458);
      SQLUtil.addRequiredCondition("+u.Q[J;", stringBuilder0);
      defaultDBColumn1.setVersionColumn(false);
      SQLUtil.addOptionalCondition("(", stringBuilder0);
      // Undeclared exception!
      try { 
        SQLUtil.removeComments((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      stringBuilder0.append(0.0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("b3PRx#w:HV1!jK1L");
      defaultDBTable0.getPrimaryKeyConstraint();
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) null, stringBuilder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.join("update)q4`c{)w/t,gi'", "update)q4`c{)w/t,gi'", (String[]) null, (String) null, (String) null, (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)21;
      byte byte0 = (byte)7;
      byteArray0[1] = (byte)7;
      byteArray0[2] = (byte)34;
      byteArray0[3] = (byte)8;
      byteArray0[4] = (byte)45;
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      System.setCurrentTimeMillis(0L);
      String[] stringArray0 = null;
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause((String[]) null, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.1140059550872974
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      stringBuilder0.append(0.0);
      String[] stringArray0 = new String[0];
      SQLUtil.join("@-D", "!!'<VCfMuA62X", stringArray0, "!!'<VCfMuA62X", "pXbo", stringArray0);
      SQLUtil.renderColumnNames(stringArray0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBNonUniqueIndex dBNonUniqueIndex0 = new DBNonUniqueIndex("oQdmC8/Swlf^pyc:e", false, defaultDBTable0, stringArray0);
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("delete");
      defaultDBTable1.removeIndex(dBNonUniqueIndex0);
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("delete", true, defaultDBTable1, stringArray0, defaultDBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      String string0 = SQLUtil.fkSpec(dBForeignKeyConstraint0, nameSpec0);
      String string1 = SQLUtil.renderWhereClause(stringArray0, stringArray0);
      assertFalse(string1.equals((Object)string0));
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.493749397003783
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SQLUtil.mutatesDataOrStructure("dE~]");
      SQLUtil sQLUtil0 = new SQLUtil();
      DBCatalog dBCatalog0 = new DBCatalog();
      DBSchema dBSchema0 = new DBSchema("dE~]", dBCatalog0);
      SQLUtil.typeAndName(dBSchema0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      int int0 = (-1628554684);
      DBDataType.getInstance((-1628554684), "left");
      DBDataType.getInstance((-74184458), "Ac8vD~2Gr=uE*4");
      Integer integer0 = new Integer((-74184458));
      Integer integer1 = RawTransaction.COMMIT;
      Character character0 = new Character('L');
      SQLUtil.renderValue(character0);
      SQLUtil.normalize("org.databene.SQL", true);
      Integer integer2 = RawTransaction.COMMIT;
      SQLUtil.isProcedureCall(" DEFAULT ");
      SQLUtil.isDML(")Q4`c{)W/T,Gi'");
      SQLUtil.isQuery("getHoldability()");
      String string0 = "delete";
      String string1 = "alter materialized view";
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint(" DEFAULT ", false, defaultDBTable0, "X");
      StringBuilder stringBuilder0 = new StringBuilder();
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      StringBuilder stringBuilder1 = SQLUtil.appendConstraintName((DBConstraint) dBCheckConstraint0, stringBuilder0, nameSpec0);
      // Undeclared exception!
      try { 
        stringBuilder1.append((CharSequence) "org.databene.SQL", (-1628554684), (-784));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // start -1628554684, end -784, s.length() 16
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.1315211023162846
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("dz");
      assertNull(boolean0);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "dz";
      Character character0 = new Character('\'');
      String string0 = SQLUtil.renderValue("dz");
      assertEquals("'dz'", string0);
      
      String string1 = SQLUtil.normalize("org.databene.SQL", false);
      assertEquals("org.databene.SQL", string1);
      
      Integer integer0 = RawTransaction.COMMIT;
      Integer integer1 = RawTransaction.ABORT;
      SQLUtil.isDML("org.databene.SQL");
      SQLUtil.isDML("dz");
      boolean boolean1 = SQLUtil.isQuery("'dz'");
      assertFalse(boolean1);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      PGConnectionPoolDataSource pGConnectionPoolDataSource0 = new PGConnectionPoolDataSource();
      pGConnectionPoolDataSource0.setUnknownLength(2057);
      pGConnectionPoolDataSource0.getLogWriter();
      // Undeclared exception!
      try { 
        SQLUtil.renderAddForeignKey((DBForeignKeyConstraint) null, nameSpec0, (PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.164400258041059
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SQLUtil.mutatesStructure("1)`mDo");
      String[] stringArray0 = null;
      Boolean.logicalOr(true, true);
      String string0 = "%b^FFn`\"\\=jO<1";
      String string1 = " NOT NULL";
      Boolean.getBoolean(" NOT NULL");
      // Undeclared exception!
      try { 
        SQLUtil.innerJoin("1)`mDo", (String[]) null, "1)`mDo", "%b^FFn`\"=jO<1", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.9982609309756807
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SQLUtil.isDML("insert");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "create table";
      stringArray0[1] = "insert";
      stringArray0[2] = "create table";
      SQLUtil.leftJoin("create table", stringArray0, "create table", ")q4`c{)w/t,", stringArray0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("insert", (DBSchema) null);
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "org.apache.derby.iapi.types.XMLDataValue", false, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex(")q4`c{)w/t,", true, dBPrimaryKeyConstraint0);
      DBTable dBTable0 = dBUniqueIndex0.getTable();
      dBUniqueIndex0.addColumnName("delete'''");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("insert", dBTable0, 33554432, "drop index");
      defaultDBColumn0.setNullable(false);
      DBNotNullConstraint dBNotNullConstraint0 = defaultDBColumn0.getNotNullConstraint();
      SQLUtil.typeAndName(dBNotNullConstraint0);
      DBColumn[] dBColumnArray0 = new DBColumn[7];
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[1] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[2] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[3] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[4] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[5] = (DBColumn) defaultDBColumn0;
      // Undeclared exception!
      try { 
        defaultDBTable0.getColumn(", ");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Column ', ' not found in table 'insert'
         //
         verifyException("org.databene.jdbacl.model.DefaultDBTable", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.6739202759935883
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType.getInstance((-1628554684), "left");
      DefaultDBTable defaultDBTable1 = new DefaultDBTable();
      DBDataType.getInstance((-1628554684), "\u0001\u00B3");
      Integer integer0 = new Integer((-1323));
      Integer integer1 = RawTransaction.COMMIT;
      Character character0 = new Character('|');
      SQLUtil.renderValue(defaultDBTable0);
      SQLUtil.normalize("left", true);
      Integer integer2 = RawTransaction.COMMIT;
      Integer integer3 = RawTransaction.ABORT;
      SQLUtil.isDML("a7*Ir{e");
      SQLUtil.isDML("S}6fom#t>eshx");
      // Undeclared exception!
      try { 
        SQLUtil.isQuery((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      PGConnectionPoolDataSource pGConnectionPoolDataSource0 = new PGConnectionPoolDataSource();
      pGConnectionPoolDataSource0.setCompatible("DG,V%gl2Hm,UL,MH\"i");
      pGConnectionPoolDataSource0.getLogWriter();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.2860709298589064
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance(411, ";=a=c*yxbr$");
      dBDataType0.isAlpha();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn((String) null, defaultDBTable0, dBDataType0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      SQLUtil.normalize(" &/lo\"K", true);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      DataDictionaryImpl dataDictionaryImpl0 = new DataDictionaryImpl();
      BasicUUID basicUUID0 = new BasicUUID(411, 2199023255552L, 411);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("create table", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      MockFile mockFile0 = new MockFile(",", ";=a=c*yxbr$");
      File file0 = FileUtil.canonicalFile((File) mockFile0);
      MockFileWriter mockFileWriter0 = new MockFileWriter(file0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileWriter0);
      PrintWriter printWriter0 = mockPrintWriter0.append('o');
      SQLUtil.renderCreateTable(defaultDBTable0, false, nameSpec0, printWriter0);
      // Undeclared exception!
      try { 
        dataDictionaryImpl0.getConglomerateDescriptor(" &/lo\"K", (SchemaDescriptor) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.derby.impl.sql.catalog.DataDictionaryImpl", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.4249437146702717
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      String string0 = "d\\E~]";
      String string1 = " DEFAULT ";
      SQLUtil.mutatesStructure(" DEFAULT ");
      SQLUtil sQLUtil0 = new SQLUtil();
      CompositeDBObject<DBNotNullConstraint> compositeDBObject0 = (CompositeDBObject<DBNotNullConstraint>) mock(CompositeDBObject.class, new ViolatedAssumptionAnswer());
      TableContainer tableContainer0 = new TableContainer("tUQ)#k~;,", compositeDBObject0);
      tableContainer0.getSchema();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("exec", (DBSchema) null);
      defaultDBTable0.getPrimaryKeyConstraint();
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.pkSpec((DBPrimaryKeyConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.3244397270569683
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "exec";
      stringArray0[1] = "exec";
      stringArray0[2] = "exec";
      stringArray0[3] = "exec";
      stringArray0[4] = "exec";
      stringArray0[5] = "exec";
      stringArray0[6] = "";
      String string0 = SQLUtil.renderColumnListWithTableName("exec", stringArray0);
      assertEquals("exec.exec, exec.exec, exec.exec, exec.exec, exec.exec, exec.exec, exec.", string0);
      
      String string1 = SQLUtil.join("", "`", stringArray0, "exec", "deleter?wbd+", stringArray0);
      assertEquals("exec as deleter?wbd+ on `.exec = deleter?wbd+.exec and `.exec = deleter?wbd+.exec and `.exec = deleter?wbd+.exec and `.exec = deleter?wbd+.exec and `.exec = deleter?wbd+.exec and `.exec = deleter?wbd+.exec and `. = deleter?wbd+.", string1);
      
      String string2 = SQLUtil.renderColumnNames(stringArray0);
      assertEquals("(exec, exec, exec, exec, exec, exec, )", string2);
      
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBNonUniqueIndex dBNonUniqueIndex0 = new DBNonUniqueIndex("", false, defaultDBTable0, stringArray0);
      defaultDBTable0.removeIndex(dBNonUniqueIndex0);
      String[] stringArray1 = new String[4];
      stringArray1[1] = "exec";
      stringArray1[2] = "`";
      stringArray1[3] = "exec";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("K+-=M/Q<", false, defaultDBTable0, stringArray0, defaultDBTable0, stringArray1);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      MockFile mockFile0 = new MockFile("exec");
      File file0 = FileUtil.canonicalFile((File) mockFile0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(file0);
      mockFile0.getAbsoluteFile();
      PrintWriter printWriter0 = mockPrintWriter0.append('/');
      SQLUtil.renderAddForeignKey(dBForeignKeyConstraint0, nameSpec0, printWriter0);
      NameSpec nameSpec1 = NameSpec.ALWAYS;
      StringBuilder stringBuilder0 = SQLUtil.createConstraintSpecBuilder(dBForeignKeyConstraint0, nameSpec1);
      assertEquals("CONSTRAINT K+-=M/Q< ", stringBuilder0.toString());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      stringBuilder0.append(0.0);
      StringBuilder stringBuilder1 = new StringBuilder(90036);
      SQLUtil.addRequiredCondition("BEFORE INSERT", stringBuilder0);
      SQLUtil.addOptionalCondition("insert", stringBuilder0);
      assertEquals("0.0 and BEFORE INSERT or insert", stringBuilder0.toString());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.9007452539070404
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance(71, "K_+cq?3");
      dBDataType0.isNumber();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("K_+cq?3", defaultDBTable0, dBDataType0, (Integer) null, (Integer) null);
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "create materialized view", true, (String[]) null);
      dBPrimaryKeyConstraint0.toString();
      NameSpec nameSpec0 = NameSpec.NEVER;
      SQLUtil.pkSpec(dBPrimaryKeyConstraint0, nameSpec0);
      DBCheckConstraint dBCheckConstraint0 = null;
      try {
        dBCheckConstraint0 = new DBCheckConstraint("~Xy%H*_8J>a)", true, defaultDBTable0, "org.databene.commons.bean.PropertyGraphMutator");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Error parsing SQL
         //
         verifyException("org.databene.jdbacl.sql.SQLParserUtil", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.9033321467941413
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SQLUtil.substituteMarkers("|BH2DETG,a=;EFg*\"", "|BH2DETG,a=;EFg*\"", (Object) null);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "|BH2DETG,a=;EFg*\"";
      stringArray0[1] = "null";
      stringArray0[2] = "null";
      stringArray0[4] = "null";
      stringArray0[5] = "|BH2DETG,a=;EFg*\"";
      stringArray0[6] = "null";
      stringArray0[7] = "|BH2DETG,a=;EFg*\"";
      stringArray0[8] = "null";
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      DBSchema dBSchema0 = new DBSchema("");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("yY>g:6?jb(r!", dBSchema0);
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("|BH2DETG,a=;EFg*\"");
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      Integer integer1 = RawTransaction.SAVEPOINT_ROLLBACK;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn(".", defaultDBTable1, (DBDataType) null, integer0, integer1);
      Integer.getInteger("");
      defaultDBColumn0.equals(integer1);
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) defaultDBColumn0;
      objectArray0[1] = null;
      objectArray0[2] = (Object) "|BH2DETG,a=;EFg*\" = '|BH2DETG,a=;EFg*\"' AND null = 'null' AND null = 'null' AND null = null AND null = 'null' AND |BH2DETG,a=;EFg*\" = '|BH2DETG,a=;EFg*\"' AND null = 'null' AND |BH2DETG,a=;EFg*\" = '|BH2DETG,a=;EFg*\"' AND null = 'null'";
      // Undeclared exception!
      try { 
        SQLUtil.renderQuery(defaultDBTable0, stringArray0, objectArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.9313637081915067
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SQLUtil.normalize(";=a=c*yxbr$", true);
      String[] stringArray0 = new String[0];
      SQLUtil.join("S", "~19{:93Pfc", stringArray0, "S", "S", stringArray0);
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnTypeWithSize((DBColumn) null, (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.6967174196986803
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SQLUtil.mutatesStructure(" DEFAULT ");
      SQLUtil sQLUtil0 = new SQLUtil();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable(" DEFAULT ");
      String string0 = "inner";
      DBDataType.getInstance(91, "inner");
      SQLUtil.normalize("\u0001\u014E", false);
      Integer integer0 = RawTransaction.COMMIT;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-87);
      byteArray0[1] = (byte) (-87);
      byteArray0[2] = (byte) (-87);
      byteArray0[3] = (byte)101;
      byteArray0[4] = (byte) (-87);
      byteArray0[5] = (byte) (-87);
      byteArray0[6] = (byte)101;
      byteArray0[7] = (byte) (-87);
      byteArray0[8] = (byte) (-87);
      SQLUtil.isProcedureCall("inner");
      String string1 = ")Q4`c{)W/T,Gi'";
      // Undeclared exception!
      try { 
        SQLUtil.isDML((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.0730116670092564
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = ";=a=c*yxbr$";
      stringArray0[1] = ";=a=c*yxbr$";
      stringArray0[2] = ";=a=c*yxbr$";
      stringArray0[3] = ";=a=c*yxbr$";
      stringArray0[4] = ";=a=c*yxbr$";
      stringArray0[5] = ";=a=c*yxbr$";
      SQLUtil.renderColumnListWithTableName(";=a=c*yxbr$", stringArray0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray1 = new String[4];
      stringArray1[0] = ";=a=c*yxbr$.;=a=c*yxbr$, ;=a=c*yxbr$.;=a=c*yxbr$, ;=a=c*yxbr$.;=a=c*yxbr$, ;=a=c*yxbr$.;=a=c*yxbr$, ;=a=c*yxbr$.;=a=c*yxbr$, ;=a=c*yxbr$.;=a=c*yxbr$, ;=a=c*yxbr$.null";
      stringArray1[1] = "K+-=M/Q<";
      stringArray1[2] = "`";
      stringArray1[3] = ";=a=c*yxbr$";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("K+-=M/Q<", false, defaultDBTable0, stringArray0, defaultDBTable0, stringArray1);
      // Undeclared exception!
      try { 
        SQLUtil.join("update)q4`c{)w/t,gi'", "/*", stringArray0, ";=a=c*yxbr$", "9t/\"ai)Uz21M(YgbEs", stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.788415958988295
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      SQLUtil.mutatesStructure(" DEFAULT ");
      SQLUtil sQLUtil0 = new SQLUtil();
      DBCatalog dBCatalog0 = new DBCatalog();
      DBSchema dBSchema0 = new DBSchema("dE~]", dBCatalog0);
      SQLUtil.typeAndName(dBSchema0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      boolean boolean0 = false;
      String[] stringArray0 = new String[9];
      stringArray0[0] = "!X%W4YL:O(XhqPQJ7";
      stringArray0[1] = "schema dE~]";
      stringArray0[2] = "dE~]";
      stringArray0[3] = "schema dE~]";
      stringArray0[4] = "dE~]";
      stringArray0[5] = "!X%W4YL:O(XhqPQJ7";
      stringArray0[6] = "!X%W4YL:O(XhqPQJ7";
      stringArray0[7] = "schema dE~]";
      stringArray0[8] = "!X%W4YL:O(XhqPQJ7";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "!X%W4YL:O(XhqPQJ7", false, stringArray0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      SQLUtil.pkSpec(dBPrimaryKeyConstraint0, nameSpec0);
      // Undeclared exception!
      try { 
        SQLUtil.isDDL((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.9187109441849768
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      SQLUtil.normalize("dE~]", false);
      String[] stringArray0 = new String[7];
      SQLUtil.join("~xachB9Zqxr: Np", "'$8E}yL66", stringArray0, "create tabledefault", "Zx[t/uII", stringArray0);
      SQLUtil.renderColumnNames(stringArray0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("(, , , , , , )");
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "Zx[t/uII", false, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      SQLUtil.pkSpec(dBPrimaryKeyConstraint0, nameSpec0);
      SQLUtil.ownerDotComponent(dBPrimaryKeyConstraint0);
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      Integer integer1 = RawTransaction.SAVEPOINT_ROLLBACK;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("PRIMARY KEY (, , , , , , )", defaultDBTable0, (DBDataType) null, integer1);
      // Undeclared exception!
      try { 
        SQLUtil.renderColumn(defaultDBColumn0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.998260930975681
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("deleted\\e~]", 15);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      DBSchema dBSchema0 = new DBSchema("BuZM");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("update", dBSchema0);
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("U'7(r1:\"I'3Co;", true, defaultDBTable0, " join ");
      dBSchema0.removeTable(defaultDBTable0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      StringBuilder stringBuilder0 = SQLUtil.createConstraintSpecBuilder(dBCheckConstraint0, nameSpec0);
      dBSchema0.getTables();
      SQLUtil.addOptionalCondition("BuZM", stringBuilder0);
      assertEquals("BuZM", stringBuilder0.toString());
      
      SQLUtil.constraintName(dBCheckConstraint0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "BuZM";
      stringArray0[1] = "update";
      stringArray0[2] = "U'7(r1:\"I'3Co;";
      stringArray0[3] = "CONSTRAINT U'7(r1:\"I'3Co; ";
      String[] stringArray1 = new String[6];
      stringArray1[0] = " join ";
      stringArray1[1] = "Cv~)-l]Xps>v5";
      stringArray1[2] = "update";
      stringArray1[3] = "update";
      stringArray1[4] = "U'7(r1:\"I'3Co;";
      stringArray1[5] = "Cv~)-l]Xps>v5";
      String string0 = SQLUtil.join("CONSTRAINT U'7(r1:\"I'3Co; ", "CONSTRAINT U'7(r1:\"I'3Co; ", stringArray0, "U'7(r1:\"I'3Co;", "Cv~)-l]Xps>v5", stringArray1);
      assertEquals("CONSTRAINT U'7(r1:\"I'3Co;  join U'7(r1:\"I'3Co; as Cv~)-l]Xps>v5 on CONSTRAINT U'7(r1:\"I'3Co; .BuZM = Cv~)-l]Xps>v5. join  and CONSTRAINT U'7(r1:\"I'3Co; .update = Cv~)-l]Xps>v5.Cv~)-l]Xps>v5 and CONSTRAINT U'7(r1:\"I'3Co; .U'7(r1:\"I'3Co; = Cv~)-l]Xps>v5.update and CONSTRAINT U'7(r1:\"I'3Co; .CONSTRAINT U'7(r1:\"I'3Co;  = Cv~)-l]Xps>v5.update", string0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.778098004139904
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[1] = ")Gku&4-h[Q>rl";
      stringArray0[2] = "r?wbd+";
      stringArray0[3] = ")Gku&4-h[Q>rl";
      stringArray0[4] = ")Gku&4-h[Q>rl";
      String string0 = SQLUtil.renderColumnListWithTableName("r?wbd+", stringArray0);
      assertEquals("r?wbd+.null, r?wbd+.)Gku&4-h[Q>rl, r?wbd+.r?wbd+, r?wbd+.)Gku&4-h[Q>rl, r?wbd+.)Gku&4-h[Q>rl", string0);
      
      String string1 = SQLUtil.join("r?wbd+", stringArray0[0], stringArray0, (String) null, "r?wbd+.null, r?wbd+.)Gku&4-h[Q>rl, r?wbd+.r?wbd+, r?wbd+.)Gku&4-h[Q>rl, r?wbd+.)Gku&4-h[Q>rl", stringArray0);
      assertEquals("r?wbd+ join null as r?wbd+.null, r?wbd+.)Gku&4-h[Q>rl, r?wbd+.r?wbd+, r?wbd+.)Gku&4-h[Q>rl, r?wbd+.)Gku&4-h[Q>rl on null.null = r?wbd+.null, r?wbd+.)Gku&4-h[Q>rl, r?wbd+.r?wbd+, r?wbd+.)Gku&4-h[Q>rl, r?wbd+.)Gku&4-h[Q>rl.null and null.)Gku&4-h[Q>rl = r?wbd+.null, r?wbd+.)Gku&4-h[Q>rl, r?wbd+.r?wbd+, r?wbd+.)Gku&4-h[Q>rl, r?wbd+.)Gku&4-h[Q>rl.)Gku&4-h[Q>rl and null.r?wbd+ = r?wbd+.null, r?wbd+.)Gku&4-h[Q>rl, r?wbd+.r?wbd+, r?wbd+.)Gku&4-h[Q>rl, r?wbd+.)Gku&4-h[Q>rl.r?wbd+ and null.)Gku&4-h[Q>rl = r?wbd+.null, r?wbd+.)Gku&4-h[Q>rl, r?wbd+.r?wbd+, r?wbd+.)Gku&4-h[Q>rl, r?wbd+.)Gku&4-h[Q>rl.)Gku&4-h[Q>rl and null.)Gku&4-h[Q>rl = r?wbd+.null, r?wbd+.)Gku&4-h[Q>rl, r?wbd+.r?wbd+, r?wbd+.)Gku&4-h[Q>rl, r?wbd+.)Gku&4-h[Q>rl.)Gku&4-h[Q>rl", string1);
      
      SQLUtil.renderColumnNames(stringArray0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray1 = new String[0];
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint((String) null, false, defaultDBTable0, stringArray0, defaultDBTable0, stringArray1);
      String string2 = SQLUtil.constraintName(dBForeignKeyConstraint0);
      assertEquals("", string2);
      
      SQLUtil.renderColumnNames(stringArray1);
      SQLUtil.removeComments("()");
      String string3 = SQLUtil.renderColumnNames(stringArray1);
      assertEquals("()", string3);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable(")Gku&4-h[Q>rl");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      SQLUtil.normalize(")Gku&4-h[Q>rl", false);
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("wT", (DBSchema) null);
      System.setCurrentTimeMillis(64L);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.7188452328177055
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "o,p ";
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) "o,p ";
      SQLUtil.renderWhereClause(stringArray0, objectArray0);
      SQLUtil.isDML("o,p ");
      SQLUtil.isQuery("o,p ");
      SQLUtil.normalize("o,p ", false);
      SQLUtil.join("o,p ", "e<e+Qm", stringArray0, "}&LMN_fk,4R`v&?", "o,p ", stringArray0);
      String string0 = "drop materialized view";
      SQLUtil.normalize("drop materialized view", true);
      DefaultDatabase defaultDatabase0 = new DefaultDatabase("o,p  join }&LMN_fk,4R`v&? as o,p  on e<e+Qm.o,p  = o,p .o,p ", "e<e+Qm", (VersionNumber) null);
      String string1 = "q@AzmN0b&\"(CS$}O]";
      // Undeclared exception!
      try { 
        defaultDatabase0.getTable("q@AzmN0b&\"(CS$}O]", true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Table 'q@AzmN0b&\"(CS$}O]'
         //
         verifyException("org.databene.jdbacl.model.DefaultDatabase", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.4035826023297506
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      SQLUtil sQLUtil0 = new SQLUtil();
      DBCatalog dBCatalog0 = new DBCatalog();
      DBSchema dBSchema0 = new DBSchema("d~]", dBCatalog0);
      SQLUtil.typeAndName(dBSchema0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance((-1628554684), "left");
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("d~]", defaultDBTable0, dBDataType0, integer0);
      defaultDBColumn0.setName("left");
      defaultDBColumn0.setType(dBDataType0);
      Integer integer1 = RawTransaction.COMMIT;
      SQLUtil.renderValue(integer1);
      String[] stringArray0 = new String[0];
      SQLUtil.join("defaul", "vUn$.~l-QP3+%#i-U{", stringArray0, "d~]", " and ", stringArray0);
      SQLUtil.removeComments("vUn$.~l-QP3+%#i-U{");
      SQLUtil.renderQuery(defaultDBTable0, stringArray0, stringArray0);
      String[] stringArray1 = new String[7];
      stringArray1[0] = "SELECT * FROM null WHERE ";
      ColumnDescriptorList columnDescriptorList0 = new ColumnDescriptorList();
      stringArray1[1] = "vUn$.~l-QP3+%#i-U{";
      defaultDBTable0.getComponents();
      SQLUtil.renderColumnNames(stringArray1);
      JMXPrincipal jMXPrincipal0 = new JMXPrincipal("d~]");
      String[] stringArray2 = new String[2];
      stringArray2[0] = "SELECT * FROM null WHERE ";
      stringArray2[1] = "delete)q4`c{)w/t,gi'";
      // Undeclared exception!
      try { 
        SQLUtil.leftJoin("vUn$.~l-QP3+%#i-U{", stringArray1, "delete)q4`c{)w/t,gi'", "schema d~]", stringArray2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.6981176467513301
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = ".";
      SQLUtil.leftJoin(".", stringArray0, ".", ".", stringArray0);
      String[] stringArray1 = new String[1];
      stringArray1[0] = "";
      SQLUtil.innerJoin(".", stringArray0, ".", "", stringArray0);
      SQLUtil.typeAndName((DBObject) null);
      SQLUtil.leftJoin("left join . as . on ... = ...", stringArray1, (String) null, "", stringArray1);
      StringBuilder stringBuilder0 = new StringBuilder();
      Object object0 = new Object();
      stringBuilder0.append((Object) "T{: ");
      stringBuilder0.insert(2, false);
      DBColumn[] dBColumnArray0 = new DBColumn[0];
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames(dBColumnArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.181959791548648
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "}4zKZ'U0B";
      stringArray0[1] = "}4zKZ'U0B";
      stringArray0[2] = "}4zKZ'U0B";
      SQLUtil.renderColumnListWithTableName("}4zKZ'U0B", stringArray0);
      SQLUtil.join("", "}4zKZ'U0B", stringArray0, "}4zKZ'U0B", "}4zKZ'U0B", stringArray0);
      SQLUtil.removeComments("}4zKZ'U0B");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, (String) null, false, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      SQLUtil.pkSpec(dBPrimaryKeyConstraint0, nameSpec0);
      SQLUtil.leftJoin("Z(wX+jQ2/G", stringArray0, "}4zKZ'U0B", (String) null, stringArray0);
      // Undeclared exception!
      try { 
        SQLUtil.ownerDotComponent((DBObject) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.696371135430602
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      String string0 = "|BH2DETG,a=;EFg*\"";
      SQLUtil.substituteMarkers("|BH2DETG,a=;EFg*\"", "|BH2DETG,a=;EFg*\"", (Object) null);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "|BH2DETG,a=;EFg*\"";
      stringArray0[1] = "null";
      stringArray0[2] = "null";
      stringArray0[4] = "null";
      stringArray0[5] = "|BH2DETG,a=;EFg*\"";
      stringArray0[6] = "null";
      stringArray0[7] = "|BH2DETG,a=;EFg*\"";
      stringArray0[8] = "null";
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      DBSchema dBSchema0 = new DBSchema("");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("yY>g:6?jb(r!", dBSchema0);
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("|BH2DETG,a=;EFg*\"");
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      Integer integer1 = RawTransaction.SAVEPOINT_ROLLBACK;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn(".", defaultDBTable1, (DBDataType) null, integer0, integer1);
      int int0 = 141;
      Integer.sum(141, 141);
      StringBuilder stringBuilder0 = null;
      defaultDBColumn0.isIdentical(dBSchema0);
      Integer.getInteger("");
      defaultDBColumn0.equals(integer1);
      // Undeclared exception!
      try { 
        SQLUtil.addRequiredCondition("null", (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.7354005820123991
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      String string0 = ")Gku&4-h[Q\\>rl";
      String[] stringArray0 = new String[5];
      stringArray0[1] = ")Gku&4-h[Q>rl";
      stringArray0[2] = "r?wbd+";
      stringArray0[3] = ")Gku&4-h[Q>rl";
      stringArray0[4] = ")Gku&4-h[Q>rl";
      Integer integer0 = RawTransaction.COMMIT;
      SQLUtil.renderValue(")Gku&4-h[Q>rl");
      SQLUtil.normalize("WB#r.;E)#UnL^-+", false);
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "WB  # r.; E) # UnL ^ - +");
      StringBuilder stringBuilder1 = SQLUtil.addRequiredCondition("kxE}C'2Ut8HexO", stringBuilder0);
      // Undeclared exception!
      try { 
        stringBuilder1.replace((-1626386046), (-131), "')Gku&4-h[Q>rl'");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1626386046
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.1368656011416318
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      String string0 = "d\\E~]";
      SQLUtil.normalize("dE~]", false);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "dE~]";
      stringArray0[1] = "dE~]";
      stringArray0[2] = "dE~]";
      stringArray0[3] = "dE~]";
      String string1 = "h&3D-OCsjO)fr1O\\WF}";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("h&3D-OCsjO)fr1OWF}", (DBSchema) null);
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "w4_7daE+", true, stringArray0);
      int int0 = (-688);
      int int1 = 143;
      StringBuilder stringBuilder0 = new StringBuilder("dE~]");
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      StringBuilder stringBuilder1 = SQLUtil.appendConstraintName((DBConstraint) dBUniqueConstraint0, stringBuilder0, nameSpec0);
      SQLUtil.addOptionalCondition("dE~]", stringBuilder0);
      int int2 = (-1626386046);
      // Undeclared exception!
      try { 
        stringBuilder1.deleteCharAt((-1626386046));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1626386046
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "dE~]";
      stringArray0[0] = "dE~]";
      stringArray0[2] = "dE~]";
      stringArray0[3] = "dE~]";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("dE~]", (DBSchema) null);
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "w4_7daE+", true, stringArray0);
      StringBuilder stringBuilder0 = new StringBuilder("dE~]");
      NameSpec nameSpec0 = NameSpec.NEVER;
      StringBuilder stringBuilder1 = SQLUtil.appendConstraintName((DBConstraint) dBUniqueConstraint0, stringBuilder0, nameSpec0);
      SQLUtil.addOptionalCondition("dE~]", stringBuilder0);
      int int0 = (-1626386046);
      // Undeclared exception!
      try { 
        stringBuilder1.deleteCharAt((-1626386046));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1626386046
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance(411, ";=a=c*yxbr$");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn((String) null, defaultDBTable0, dBDataType0);
      DefaultDBColumn defaultDBColumn1 = new DefaultDBColumn("in8o.FILE_WRITw_TOAL", defaultDBTable0, (-2689), "xzG");
      SQLUtil.typeAndName(defaultDBColumn0);
      DataDictionaryImpl dataDictionaryImpl0 = new DataDictionaryImpl();
      String string0 = "PARTITIONS";
      BasicUUID basicUUID0 = null;
      try {
        basicUUID0 = new BasicUUID((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.6868977693384446
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      String string0 = "";
      SQLUtil.isDML("");
      String string1 = "SELECT RDB$TRANSACTION_ID, RDB$TRANSACTION_DESCRIPTION FROM RDB$TRANSACTIONS WHERE RDB$TRANSACTION_STATE = 1";
      String[] stringArray0 = new String[1];
      SQLUtil.removeComments("");
      DBObject dBObject0 = null;
      SQLUtil.typeAndName((DBObject) null);
      DBNotNullConstraint dBNotNullConstraint0 = null;
      try {
        dBNotNullConstraint0 = new DBNotNullConstraint((DBTable) null, "SELECT RDB$TRANSACTION_ID, RDB$TRANSACTION_DESCRIPTION FROM RDB$TRANSACTIONS WHERE RDB$TRANSACTION_STATE = 1", true, "");
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // owner is not supposed to be null
         //
         verifyException("org.databene.commons.Assert", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.9448468679826323
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDDL("");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("renamer6as!4*k");
      String[] stringArray0 = new String[7];
      stringArray0[0] = ",mL;8=)";
      stringArray0[1] = "='dTVY+ T";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("='dTVY+ T", false, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      boolean boolean1 = SQLUtil.isDDL("alter index");
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      String string0 = null;
      // Undeclared exception!
      try { 
        SQLUtil.mutatesStructure((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.7762102909805377
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      SQLUtil.isDML("");
      String[] stringArray0 = new String[0];
      SQLUtil.innerJoin("SELECT RDB$TRANSACTION_ID, RDB$TRANSACTION_DESCRIPTION FROM RDB$TRANSACTIONS WHERE RDB$TRANSACTION_STATE = 1", stringArray0, "SELECT RDB$TRANSACTION_ID, RDB$TRANSACTION_DESCRIPTION FROM RDB$TRANSACTIONS WHERE RDB$TRANSACTION_STATE = 1", "", stringArray0);
      SQLUtil.typeAndName((DBObject) null);
      SQLUtil.leftJoin("T: ", stringArray0, (String) null, "SELECT RDB$TRANSACTION_ID, RDB$TRANSACTION_DESCRIPTION FROM RDB$TRANSACTIONS WHERE RDB$TRANSACTION_STATE = 1", stringArray0);
      StringBuilder stringBuilder0 = new StringBuilder();
      Object object0 = new Object();
      StringBuilder stringBuilder1 = stringBuilder0.append((Object) null);
      StringBuilder stringBuilder2 = stringBuilder1.append('Z');
      stringBuilder0.append(0.0);
      SQLUtil.addOptionalCondition("", stringBuilder2);
      DBSchema dBSchema0 = new DBSchema("dX4");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable((String) null, dBSchema0);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-109);
      byteArray0[1] = (byte)121;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "renamedefault", true, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      SQLUtil.ukSpec(dBPrimaryKeyConstraint0, nameSpec0);
      // Undeclared exception!
      try { 
        SQLUtil.ownerDotComponent((DBObject) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.8114871672150565
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      SQLUtil.normalize("dE~]", false);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "dE~]";
      stringArray0[1] = "dE~]";
      stringArray0[2] = "dE~]";
      stringArray0[3] = "dE~]";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("h&3D-OCsjO)fr1OWF}", (DBSchema) null);
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "w4_7daE+", true, stringArray0);
      StringBuilder stringBuilder0 = new StringBuilder("dE~]");
      Object object0 = new Object();
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      delayQueue0.poll();
      StringBuilder stringBuilder1 = stringBuilder0.append((Object) dBUniqueConstraint0);
      stringBuilder0.append('Z');
      stringBuilder0.append(1931.16150236);
      SQLUtil.addOptionalCondition("drop indexdefault", stringBuilder1);
      // Undeclared exception!
      try { 
        SQLUtil.substituteMarkers("w4_7daE+", (String) null, delayQueue0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      DBColumn[] dBColumnArray0 = new DBColumn[9];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("");
      DBDataType dBDataType0 = DBDataType.getInstance(0, "+u.Q[J;");
      Integer integer0 = RawTransaction.COMMIT;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn((String) null, defaultDBTable0, dBDataType0, integer0);
      dBColumnArray0[1] = (DBColumn) defaultDBColumn0;
      DefaultDBColumn defaultDBColumn1 = new DefaultDBColumn((String) null, defaultDBTable0, dBDataType0, integer0);
      dBColumnArray0[2] = (DBColumn) defaultDBColumn1;
      Integer.getInteger("UNION JOIN");
      DefaultDBColumn defaultDBColumn2 = new DefaultDBColumn("", defaultDBTable0, dBDataType0, (Integer) null);
      dBColumnArray0[3] = (DBColumn) defaultDBColumn2;
      DefaultDBColumn defaultDBColumn3 = new DefaultDBColumn("", defaultDBTable0, 0, "u}OZ:-j>/)V{5R");
      dBColumnArray0[4] = (DBColumn) defaultDBColumn3;
      DefaultDBColumn defaultDBColumn4 = new DefaultDBColumn((String) null, defaultDBTable0, 451, "");
      dBColumnArray0[5] = (DBColumn) defaultDBColumn4;
      DefaultDBColumn defaultDBColumn5 = new DefaultDBColumn("*+e+*", defaultDBTable0, 0, "+u.Q[J;");
      dBColumnArray0[6] = (DBColumn) defaultDBColumn5;
      Integer integer1 = RawTransaction.SAVEPOINT_ROLLBACK;
      defaultDBColumn5.equals(dBDataType0);
      DefaultDBColumn defaultDBColumn6 = new DefaultDBColumn("", defaultDBTable0, dBDataType0, integer1, integer0);
      dBColumnArray0[7] = (DBColumn) defaultDBColumn6;
      DBColumn dBColumn0 = defaultDBTable0.getColumn((String) null);
      dBColumnArray0[8] = dBColumn0;
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames(dBColumnArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      SQLUtil.normalize("}4zKZ'U0B", true);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("wYXo\"", (DBSchema) null);
      assertEquals("table", defaultDBTable0.getObjectType());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.574464215715726
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      SQLUtil.removeComments("R?WbD+?u|UloH'");
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.leftJoin("", stringArray0, "", "R?WbD+?u|UloH'", stringArray0);
      assertEquals("left join  as R?WbD+?u|UloH' on ", string0);
      
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("Unable to create SAXResult for SQLXML.");
      String string1 = SQLUtil.renderQuery(defaultDBTable0, stringArray0, stringArray0);
      assertEquals("SELECT * FROM Unable to create SAXResult for SQLXML. WHERE ", string1);
      
      DBColumn[] dBColumnArray0 = new DBColumn[8];
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("Unable to create SAXResult for SQLXML.", defaultDBTable0, (DBDataType) null);
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      Integer integer1 = RawTransaction.ABORT;
      dBColumnArray0[1] = (DBColumn) defaultDBColumn0;
      DefaultDBColumn defaultDBColumn1 = new DefaultDBColumn("PRIMARY KEY ", defaultDBTable0, (-449), "org.firebirdsql.jdbc.AbstractCallableStatement");
      defaultDBColumn0.getForeignKeyConstraint();
      dBColumnArray0[2] = (DBColumn) defaultDBColumn1;
      DefaultDBColumn defaultDBColumn2 = new DefaultDBColumn("SELECT * FROM Unable to create SAXResult for SQLXML. WHERE ", defaultDBTable0, (DBDataType) null, (Integer) null);
      dBColumnArray0[3] = (DBColumn) defaultDBColumn2;
      String string2 = SQLUtil.join("left join  as R?WbD+?u|UloH' on ", (String) null, stringArray0, "tmqda~~?%una", "alter indexdefault", stringArray0);
      assertEquals("left join  as R?WbD+?u|UloH' on  join tmqda~~?%una as alter indexdefault on ", string2);
      
      String string3 = SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn1);
      assertEquals("ORG.FIREBIRDSQL.JDBC.ABSTRACTCALLABLESTATEMENT", string3);
      
      String string4 = SQLUtil.renderColumnNames(stringArray0);
      assertEquals("()", string4);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.379123516937678
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      DBColumn[] dBColumnArray0 = new DBColumn[9];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable(")Gku&4-h[Q>rl");
      DBDataType dBDataType0 = DBDataType.getInstance(0, "+u.Q[J;");
      Integer integer0 = RawTransaction.COMMIT;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn(")Gku&4-h[Q>rl", defaultDBTable0, dBDataType0, integer0);
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      DefaultDBColumn defaultDBColumn1 = new DefaultDBColumn((String) null, defaultDBTable0, dBDataType0, integer0);
      dBColumnArray0[1] = (DBColumn) defaultDBColumn1;
      Integer.getInteger("+u.Q[J;");
      Integer.getInteger((String) null, (Integer) null);
      Integer.compare(16380, (-3078));
      DefaultDBColumn defaultDBColumn2 = new DefaultDBColumn((String) null, defaultDBTable0, dBDataType0, integer0);
      defaultDBColumn2.setSize((Integer) null);
      defaultDBTable0.getColumn(")Gku&4-h[Q>rl");
      dBColumnArray0[2] = (DBColumn) defaultDBColumn2;
      StringBuilder stringBuilder0 = new StringBuilder(458);
      SQLUtil.addRequiredCondition("+u.Q[J;", stringBuilder0);
      defaultDBColumn1.setVersionColumn(false);
      SQLUtil.addOptionalCondition("(", stringBuilder0);
      SQLUtil.renderColumn(defaultDBColumn1);
      SQLUtil.typeAndName(defaultDBColumn1);
      String[] stringArray0 = new String[0];
      defaultDBTable0.getUniqueConstraint(stringArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      // Undeclared exception!
      try { 
        SQLUtil.ukSpec((DBUniqueConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      String string0 = null;
      // Undeclared exception!
      try { 
        SQLUtil.normalize((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.3842713196839629
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      DBColumn[] dBColumnArray0 = new DBColumn[9];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable(")Gku&4-h[Q>rl");
      DefaultDBTable defaultDBTable1 = new DefaultDBTable(")Gku&4-h[Q>rl", (DBSchema) null);
      String[] stringArray0 = null;
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable1, ")Gku&4-h[Q>rl", true, (String[]) null);
      StringBuilder stringBuilder0 = new StringBuilder(")Gku&4-h[Q>rl");
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      SQLUtil.appendConstraintName((DBConstraint) dBUniqueConstraint0, stringBuilder0, nameSpec0);
      StringBuilder stringBuilder1 = SQLUtil.addOptionalCondition("w4_7daE+", stringBuilder0);
      // Undeclared exception!
      try { 
        stringBuilder1.deleteCharAt((-1626386046));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1626386046
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.0190420673310716
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "dE~]";
      String string0 = SQLUtil.renderColumnListWithTableName((String) null, stringArray0);
      assertEquals("null.dE~], null.null, null.null, null.null, null.null, null.null, null.null", string0);
      
      String string1 = SQLUtil.join("null.dE~], null.null, null.null, null.null, null.null, null.null, null.null", "a|7L=M2o\u0001=Ha00", stringArray0, "deleter?wbd+", "null.dE~], null.null, null.null, null.null, null.null, null.null, null.null", stringArray0);
      assertEquals("null.dE~], null.null, null.null, null.null, null.null, null.null, null.null join deleter?wbd+ as null.dE~], null.null, null.null, null.null, null.null, null.null, null.null on a|7L=M2o\u0001=Ha00.dE~] = null.dE~], null.null, null.null, null.null, null.null, null.null, null.null.dE~] and a|7L=M2o\u0001=Ha00.null = null.dE~], null.null, null.null, null.null, null.null, null.null, null.null.null and a|7L=M2o\u0001=Ha00.null = null.dE~], null.null, null.null, null.null, null.null, null.null, null.null.null and a|7L=M2o\u0001=Ha00.null = null.dE~], null.null, null.null, null.null, null.null, null.null, null.null.null and a|7L=M2o\u0001=Ha00.null = null.dE~], null.null, null.null, null.null, null.null, null.null, null.null.null and a|7L=M2o\u0001=Ha00.null = null.dE~], null.null, null.null, null.null, null.null, null.null, null.null.null and a|7L=M2o\u0001=Ha00.null = null.dE~], null.null, null.null, null.null, null.null, null.null, null.null.null", string1);
      
      SQLUtil.renderColumnNames(stringArray0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray1 = new String[3];
      stringArray1[0] = null;
      stringArray1[1] = null;
      stringArray1[2] = "deleter?wbd+";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("(dE~], , , , , , )", false, defaultDBTable0, stringArray0, defaultDBTable0, stringArray1);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String string2 = SQLUtil.fkSpec(dBForeignKeyConstraint0, nameSpec0);
      assertEquals("FOREIGN KEY (dE~], , , , , , ) REFERENCES null(, , deleter?wbd+)", string2);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.7455307416480417
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesStructure(":qUq])d}V");
      assertFalse(boolean0);
      
      SQLUtil sQLUtil0 = new SQLUtil();
      DBCatalog dBCatalog0 = new DBCatalog();
      boolean boolean1 = SQLUtil.isQuery("getFirstUncommittedSection");
      assertFalse(boolean1);
      
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("org.databene.jdbacl.SQLUtil", (DBSchema) null);
      System.setCurrentTimeMillis(91);
      String[] stringArray0 = new String[4];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "LCJ+#X9Jak&6;{ex\"", true, stringArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      String string0 = SQLUtil.constraintSpec(dBPrimaryKeyConstraint0, nameSpec0);
      assertEquals("PRIMARY KEY (, , , )", string0);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.3548015058139915
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      DBColumn[] dBColumnArray0 = new DBColumn[9];
      String string0 = ")Gku&4-h[Q\\>rl";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable(")Gku&4-h[Q>rl");
      DBDataType dBDataType0 = DBDataType.getInstance(0, "+u.Q[J;");
      Integer integer0 = RawTransaction.COMMIT;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn(")Gku&4-h[Q>rl", defaultDBTable0, dBDataType0, integer0);
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      String string1 = null;
      DefaultDBColumn defaultDBColumn1 = new DefaultDBColumn((String) null, defaultDBTable0, dBDataType0, integer0);
      dBColumnArray0[1] = (DBColumn) defaultDBColumn1;
      DefaultDBColumn defaultDBColumn2 = new DefaultDBColumn((String) null, defaultDBTable0, dBDataType0, integer0);
      dBColumnArray0[2] = (DBColumn) defaultDBColumn2;
      Integer.getInteger("UNION JOIN");
      DefaultDBColumn defaultDBColumn3 = new DefaultDBColumn(")Gku&4-h[Q>rl", defaultDBTable0, dBDataType0, (Integer) null);
      dBColumnArray0[3] = (DBColumn) defaultDBColumn3;
      String string2 = "";
      String string3 = "u}OZ:-j>/)V{5R";
      DefaultDBColumn defaultDBColumn4 = new DefaultDBColumn("", defaultDBTable0, 0, "u}OZ:-j>/)V{5R");
      dBColumnArray0[4] = (DBColumn) defaultDBColumn4;
      String string4 = null;
      DefaultDBColumn defaultDBColumn5 = new DefaultDBColumn((String) null, defaultDBTable0, 451, "");
      dBColumnArray0[5] = (DBColumn) defaultDBColumn5;
      String string5 = "37em*";
      DefaultDBColumn defaultDBColumn6 = new DefaultDBColumn("37em*", defaultDBTable0, 0, "+u.Q[J;");
      dBColumnArray0[6] = (DBColumn) defaultDBColumn6;
      DefaultDBColumn defaultDBColumn7 = new DefaultDBColumn("", defaultDBTable0, dBDataType0, integer0, integer0);
      dBColumnArray0[7] = (DBColumn) defaultDBColumn7;
      DBColumn dBColumn0 = defaultDBTable0.getColumn((String) null);
      dBColumnArray0[8] = dBColumn0;
      SQLUtil.renderColumnNames(dBColumnArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      // Undeclared exception!
      try { 
        SQLUtil.constraintSpec((DBConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      String string0 = "Ht?\"";
      SQLUtil.isQuery("Ht?\"");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)3;
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      String string1 = null;
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      String string0 = "Ne4{Emh-+-TU`>T";
      // Undeclared exception!
      try { 
        SQLUtil.addOptionalCondition("Ne4{Emh-+-TU`>T", (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.462813996205465
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesStructure(" DEFAULT ");
      assertFalse(boolean0);
      
      SQLUtil sQLUtil0 = new SQLUtil();
      DBCatalog dBCatalog0 = new DBCatalog();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType.getInstance((-1628554684), "left");
      DBDataType.getInstance((-74184462), "Ac8vD~2Gr=uE*4");
      Integer integer0 = new Integer((-74184462));
      Integer integer1 = RawTransaction.COMMIT;
      Character character0 = new Character('L');
      String string0 = SQLUtil.renderValue(character0);
      assertEquals("'L'", string0);
      
      Integer integer2 = RawTransaction.COMMIT;
      boolean boolean1 = SQLUtil.isProcedureCall(" DEFAULT ");
      boolean boolean2 = SQLUtil.isDML(")Q4`c{)W/T,Gi'");
      assertTrue(boolean2 == boolean1);
      
      boolean boolean3 = SQLUtil.isQuery("getHoldability()");
      assertFalse(boolean3);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=0.8270119361551982
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "insert");
      String[] stringArray0 = new String[6];
      stringArray0[0] = ")Gku&4-h[Q>rl";
      stringArray0[3] = ")Gku&4-h[Q>rl";
      stringArray0[4] = ")Gku&4-h[Q>rl";
      Integer integer0 = RawTransaction.COMMIT;
      SQLUtil.renderValue(stringArray0[1]);
      SQLUtil.normalize("WB#r.;E)#UnL^-+", false);
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "WB  # r.; E) # UnL ^ - +");
      StringBuilder stringBuilder1 = SQLUtil.addRequiredCondition("kxE}C'2Ut8HexO", stringBuilder0);
      // Undeclared exception!
      try { 
        stringBuilder1.replace((-1626386046), (-131), "null");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1626386046
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.constraintName((DBConstraint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      String string0 = "}4zKZ'U0B";
      String[] stringArray0 = new String[3];
      stringArray0[0] = "}4zKZ'U0B";
      stringArray0[1] = "}4zKZ'U0B";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("create materialized view", (DBSchema) null);
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, (String) null, true, stringArray0);
      StringBuilder stringBuilder0 = new StringBuilder(143);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      NameSpec nameSpec1 = NameSpec.ALWAYS;
      StringBuilder stringBuilder1 = SQLUtil.appendConstraintName((DBConstraint) dBUniqueConstraint0, stringBuilder0, nameSpec1);
      SQLUtil.addOptionalCondition((String) null, stringBuilder0);
      // Undeclared exception!
      try { 
        stringBuilder1.deleteCharAt(143);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 143
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      stringBuilder0.append(0.0);
      StringBuilder stringBuilder1 = new StringBuilder(92);
      StringBuilder stringBuilder2 = SQLUtil.addRequiredCondition("insert", stringBuilder1);
      SQLUtil.addOptionalCondition("NQ", stringBuilder2);
      assertEquals("insert or NQ", stringBuilder2.toString());
      assertEquals("insert or NQ", stringBuilder1.toString());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.6082873972465446
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      stringBuilder0.append(0.0);
      StringBuilder stringBuilder1 = new StringBuilder(92);
      SQLUtil.addOptionalCondition("3+=/LQ1j#l$KE", stringBuilder1);
      StringBuilder stringBuilder2 = stringBuilder1.deleteCharAt(4);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "3+=/LQ1j#l$KE";
      stringArray0[1] = "insert";
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      StringBuilder stringBuilder3 = new StringBuilder();
      stringBuilder2.append((-3788));
      StringBuilder stringBuilder4 = stringBuilder1.append("alter tabledefult");
      StringBuilder stringBuilder5 = SQLUtil.addRequiredCondition("G@3{iO3;#h", stringBuilder4);
      stringBuilder5.append((double) (-3788));
      // Undeclared exception!
      try { 
        stringBuilder1.insert(90036, "insert");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 90036
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.664137839392251
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      PGConnectionPoolDataSource pGConnectionPoolDataSource0 = new PGConnectionPoolDataSource();
      System.setCurrentTimeMillis(31L);
      DBSchema dBSchema0 = new DBSchema("execute:quq])d}v");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("(=W", dBSchema0);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "(=W";
      stringArray0[1] = "execute:quq])d}v";
      stringArray0[2] = "create materialized view";
      stringArray0[3] = "create materialized view";
      stringArray0[4] = "(=W";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "execute:quq])d}v", false, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("create materialized view", false, dBUniqueConstraint0);
      DBTable dBTable0 = dBUniqueIndex0.getTable();
      String string0 = SQLUtil.renderQuery(dBTable0, stringArray0, stringArray0);
      assertEquals("SELECT * FROM (=W WHERE (=W = '(=W' AND execute:quq])d}v = 'execute:quq])d}v' AND create materialized view = 'create materialized view' AND create materialized view = 'create materialized view' AND (=W = '(=W'", string0);
      
      String string1 = SQLUtil.renderColumnListWithTableName("c'AyYB'*#LB+(", stringArray0);
      assertEquals("c'AyYB'*#LB+(.(=W, c'AyYB'*#LB+(.execute:quq])d}v, c'AyYB'*#LB+(.create materialized view, c'AyYB'*#LB+(.create materialized view, c'AyYB'*#LB+(.(=W", string1);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      String[] stringArray0 = null;
      // Undeclared exception!
      try { 
        SQLUtil.leftJoin("%`Q.3`L", (String[]) null, ",`{fJv=T*4XN", (String) null, (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      String[] stringArray0 = new String[3];
      SQLUtil.renderColumnNames(stringArray0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, stringArray0[1], false, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      SQLUtil.pkSpec(dBPrimaryKeyConstraint0, nameSpec0);
      SQLUtil.ownerDotComponent(defaultDBTable0);
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      Integer.getInteger("o|@20LA#P70iBR]>Q@{");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("d=Ldx[2g?)+0*jF{Cs", defaultDBTable0, (DBDataType) null, integer0);
      // Undeclared exception!
      try { 
        SQLUtil.renderColumn(defaultDBColumn0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=0.7842842883183225
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      SQLUtil.normalize("dE~]", false);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "dE~]";
      stringArray0[2] = "dE~]";
      stringArray0[3] = "dE~]";
      stringArray0[4] = "bHK38p0[l";
      stringArray0[5] = "dE~]";
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnTypeWithSize((DBColumn) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=0.810116318288409
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "*xVJ5";
      stringArray0[1] = "*xVJ5";
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "*xVJ5");
      stringArray0[2] = "*xVJ5";
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte)32;
      byteArray0[2] = (byte) (-109);
      byteArray0[3] = (byte)5;
      byteArray0[4] = (byte) (-89);
      byteArray0[5] = (byte)44;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      String[] stringArray1 = new String[2];
      stringArray1[0] = "renamedefault";
      stringArray1[1] = "y2:@RTcL;!'{_s";
      // Undeclared exception!
      try { 
        SQLUtil.innerJoin("*xVJ5", stringArray0, "y2:@RTcL;!'{_s", "renamedefault", stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.2452266374944894
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "exec";
      stringArray0[1] = "exec";
      stringArray0[2] = "exec";
      stringArray0[3] = "exec";
      stringArray0[4] = "exec";
      stringArray0[5] = "exec";
      stringArray0[6] = "";
      String string0 = SQLUtil.renderColumnListWithTableName("exec", stringArray0);
      assertEquals("exec.exec, exec.exec, exec.exec, exec.exec, exec.exec, exec.exec, exec.", string0);
      
      String string1 = SQLUtil.join("", "`", stringArray0, "exec", "deleter?wbd+", stringArray0);
      assertEquals("exec as deleter?wbd+ on `.exec = deleter?wbd+.exec and `.exec = deleter?wbd+.exec and `.exec = deleter?wbd+.exec and `.exec = deleter?wbd+.exec and `.exec = deleter?wbd+.exec and `.exec = deleter?wbd+.exec and `. = deleter?wbd+.", string1);
      
      String string2 = SQLUtil.renderColumnNames(stringArray0);
      assertEquals("(exec, exec, exec, exec, exec, exec, )", string2);
      
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      SQLUtil.normalize("", true);
      Integer integer0 = RawTransaction.COMMIT;
      Integer integer1 = RawTransaction.ABORT;
      boolean boolean0 = SQLUtil.isDML("exec as deleter?wbd+ on `.exec = deleter?wbd+.exec and `.exec = deleter?wbd+.exec and `.exec = deleter?wbd+.exec and `.exec = deleter?wbd+.exec and `.exec = deleter?wbd+.exec and `.exec = deleter?wbd+.exec and `. = deleter?wbd+.");
      SQLUtil.isDML("");
      boolean boolean1 = SQLUtil.isQuery("[");
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.8258439557096793
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      SQLUtil.normalize(":?>X2DB~gc!};V", true);
      TableContainer tableContainer0 = new TableContainer("");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "3~ }4:dZCwS<P";
      stringArray0[1] = "|,fpvx`~5\"=?Z[&^H(";
      stringArray0[2] = "0";
      SQLUtil.innerJoin("|,fpvx`~5\"=?Z[&^H(", stringArray0, "3~ }4:dZCwS<P", "0", stringArray0);
      SQLUtil.typeAndName(tableContainer0);
      SQLUtil.leftJoin("pb(;", stringArray0, "9L*UZ3C6`g_h+Vvo>q", "|,fpvx`~5\"=?Z[&^H(", stringArray0);
      StringBuilder stringBuilder0 = new StringBuilder();
      Object object0 = new Object();
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      delayQueue0.poll();
      StringBuilder stringBuilder1 = stringBuilder0.append((Object) null);
      stringBuilder0.append('Z');
      stringBuilder1.append((double) 'Z');
      SQLUtil.addOptionalCondition(": ? > X2DB ~ gc ! } ; V", stringBuilder0);
      // Undeclared exception!
      try { 
        SQLUtil.substituteMarkers((String) null, "c013800d-00fb-2649-07ec-000000134f30", (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.56637476891496
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      SQLUtil.normalize("dE~]", false);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "dE~]";
      stringArray0[1] = "dE~]";
      stringArray0[2] = "dE~]";
      stringArray0[3] = "dE~]";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("h&3D-OCsjO)fr1OWF}", (DBSchema) null);
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "w4_7daE+", true, stringArray0);
      int int0 = (-688);
      StringBuilder stringBuilder0 = new StringBuilder("dE~]");
      StringBuilder stringBuilder1 = SQLUtil.addOptionalCondition("dE~]", stringBuilder0);
      SQLUtil.addRequiredCondition("dE~]", stringBuilder0);
      stringBuilder1.append((long) (-1626386046));
      SQLUtil.renderQuery(defaultDBTable0, stringArray0, stringArray0);
      // Undeclared exception!
      try { 
        stringBuilder0.insert(2094, (CharSequence) "h&3D-OCsjO)fr1OWF}", 143, (-688));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // dstOffset 2094
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      String string0 = SQLUtil.substituteMarkers("call", "[-0", "[-0");
      assertEquals("call", string0);
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.2383497075834473
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      SQLUtil.removeComments("R?WbD+?u|UloH'");
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.innerJoin("R?WbD+?u|UloH'", stringArray0, "3~ }4:dZCwS<P", "0", stringArray0);
      assertEquals("3~ }4:dZCwS<P as 0 on ", string0);
      
      SQLUtil.typeAndName((DBObject) null);
      String string1 = SQLUtil.leftJoin("0", stringArray0, "R?WbD+?u|UloH'", "insert)", stringArray0);
      assertEquals("left join R?WbD+?u|UloH' as insert) on ", string1);
      
      Object object0 = new Object();
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      delayQueue0.poll();
      String string2 = SQLUtil.substituteMarkers("SELECT RDB$TRANSACTION_ID, RDB$TRANSACTION_DESCRIPTION FROM RDB$TRANSACTIONS WHERE RDB$TRANSACTION_STATE = 1", "3~ }4:dZCwS<P", (Object) null);
      assertEquals("SELECT RDB$TRANSACTION_ID, RDB$TRANSACTION_DESCRIPTION FROM RDB$TRANSACTIONS WHERE RDB$TRANSACTION_STATE = 1", string2);
  }

  /**
  //Test case number: 75
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "K_+cq?3";
      stringArray0[1] = " NULL";
      stringArray0[2] = "";
      String string0 = SQLUtil.join("D", "vUn$.~l-QP3+%#i-U{", stringArray0, "bHK38p0[l", "create materialized viewdefault", stringArray0);
      assertEquals("D join bHK38p0[l as create materialized viewdefault on vUn$.~l-QP3+%#i-U{.K_+cq?3 = create materialized viewdefault.K_+cq?3 and vUn$.~l-QP3+%#i-U{. NULL = create materialized viewdefault. NULL and vUn$.~l-QP3+%#i-U{. = create materialized viewdefault. and vUn$.~l-QP3+%#i-U{.null = create materialized viewdefault.null and vUn$.~l-QP3+%#i-U{.null = create materialized viewdefault.null", string0);
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.3026114806905704
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      String string0 = ".";
      String[] stringArray0 = new String[1];
      stringArray0[0] = ".";
      SQLUtil.leftJoin(".", stringArray0, ".", ".", stringArray0);
      SQLUtil.normalize("left join . as . on ... = ...", false);
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnTypeWithSize((DBColumn) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      defaultDBTable0.getUniqueConstraint((String[]) null);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.createConstraintSpecBuilder((DBConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.4909535133744996
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "exec";
      stringArray0[1] = "exec";
      stringArray0[2] = "exec";
      stringArray0[3] = "exec";
      stringArray0[4] = "exec";
      stringArray0[5] = "exec";
      stringArray0[6] = "";
      String string0 = SQLUtil.renderColumnListWithTableName("exec", stringArray0);
      assertEquals("exec.exec, exec.exec, exec.exec, exec.exec, exec.exec, exec.exec, exec.", string0);
      
      String string1 = SQLUtil.join("", "`", stringArray0, "exec", "deleter?wbd+", stringArray0);
      assertEquals("exec as deleter?wbd+ on `.exec = deleter?wbd+.exec and `.exec = deleter?wbd+.exec and `.exec = deleter?wbd+.exec and `.exec = deleter?wbd+.exec and `.exec = deleter?wbd+.exec and `.exec = deleter?wbd+.exec and `. = deleter?wbd+.", string1);
      
      SQLUtil.renderColumnNames(stringArray0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBNonUniqueIndex dBNonUniqueIndex0 = new DBNonUniqueIndex("", false, defaultDBTable0, stringArray0);
      defaultDBTable0.removeIndex(dBNonUniqueIndex0);
      String[] stringArray1 = new String[4];
      stringArray1[0] = "exec.exec, exec.exec, exec.exec, exec.exec, exec.exec, exec.exec, exec.";
      stringArray1[1] = "exec";
      stringArray1[2] = "`";
      stringArray1[3] = "exec";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("K+-=M/Q<", false, defaultDBTable0, stringArray0, defaultDBTable0, stringArray1);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      String string2 = SQLUtil.fkSpec(dBForeignKeyConstraint0, nameSpec0);
      assertEquals("CONSTRAINT K+-=M/Q< FOREIGN KEY (exec, exec, exec, exec, exec, exec, ) REFERENCES null(exec.exec, exec.exec, exec.exec, exec.exec, exec.exec, exec.exec, exec., exec, `, exec)", string2);
      
      String[] stringArray2 = new String[1];
      stringArray2[0] = "exec.exec, exec.exec, exec.exec, exec.exec, exec.exec, exec.exec, exec.";
      String string3 = SQLUtil.renderWhereClause(stringArray2, stringArray0);
      assertEquals("exec.exec, exec.exec, exec.exec, exec.exec, exec.exec, exec.exec, exec. = 'exec'", string3);
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.fkSpec((DBForeignKeyConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.9753765189753083
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      String string0 = "";
      SQLUtil.parseColumnTypeAndSize("");
      String string1 = "";
      SQLUtil.mutatesStructure("");
      String string2 = null;
      // Undeclared exception!
      try { 
        SQLUtil.isProcedureCall((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.318634031668538
  */
  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesStructure(":qUq])d}V");
      assertFalse(boolean0);
      
      SQLUtil sQLUtil0 = new SQLUtil();
      boolean boolean1 = SQLUtil.isProcedureCall("COLUMNDEFAULTID");
      DBCatalog dBCatalog0 = new DBCatalog();
      SQLUtil.isQuery("getFirstUncommittedSection");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("org.databene.jdbacl.SQLUtil", (DBSchema) null);
      System.setCurrentTimeMillis(91);
      String[] stringArray0 = new String[4];
      stringArray0[1] = "getFirstUncommittedSection";
      stringArray0[2] = "org.databene.jdbacl.SQLUtil";
      SQLUtil.isDML("getFirstUncommittedSection");
      boolean boolean2 = SQLUtil.isDML("%cFHLEU");
      assertTrue(boolean2 == boolean1);
      
      boolean boolean3 = SQLUtil.isQuery("drop index");
      assertFalse(boolean3);
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.6969987794394545
  */
  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      CompositeDBObject<DBPrimaryKeyConstraint> compositeDBObject0 = (CompositeDBObject<DBPrimaryKeyConstraint>) mock(CompositeDBObject.class, new ViolatedAssumptionAnswer());
      TableContainer tableContainer0 = new TableContainer(":B/", compositeDBObject0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      tableContainer0.getTable(":B/");
      SQLUtil.parseColumnTypeAndSize("gGnQNE/NEVva");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("'8<ph,HdLFM(L*ijx");
      defaultDBTable0.getPrimaryKeyConstraint();
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte) (-41);
      byteArray0[2] = (byte)0;
      SQLUtil.isDML("gGnQNE/NEVva");
      SQLUtil.isQuery("83Q8`~s^2>");
      FromVTI fromVTI0 = new FromVTI();
      fromVTI0.getContextManager();
      BTreeController bTreeController0 = new BTreeController();
      bTreeController0.getXactMgr();
      GenericLanguageFactory genericLanguageFactory0 = new GenericLanguageFactory();
      GenericLanguageConnectionFactory genericLanguageConnectionFactory0 = new GenericLanguageConnectionFactory();
      SlaveDatabase slaveDatabase0 = new SlaveDatabase();
      GenericLanguageConnectionContext genericLanguageConnectionContext0 = null;
      try {
        genericLanguageConnectionContext0 = new GenericLanguageConnectionContext((ContextManager) null, (TransactionController) null, genericLanguageFactory0, genericLanguageConnectionFactory0, slaveDatabase0, "rI.7=", 2, "rI.7=", "83Q8`~s^2>");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.derby.iapi.services.context.ContextImpl", e);
      }
  }
}
