/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 10:21:16 GMT 2019
 */

package org.databene.jdbacl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.FileNotFoundException;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Hashtable;
import java.util.Map;
import java.util.Properties;
import java.util.Vector;
import java.util.regex.PatternSyntaxException;
import org.apache.derby.diag.ErrorMessages;
import org.apache.derby.iapi.services.context.ContextService;
import org.apache.derby.iapi.services.io.FormatableBitSet;
import org.apache.derby.iapi.services.io.FormatableHashtable;
import org.apache.derby.iapi.services.io.FormatableProperties;
import org.apache.derby.iapi.sql.dictionary.ConstraintDescriptorList;
import org.apache.derby.impl.db.SlaveDatabase;
import org.apache.derby.impl.sql.compile.FromVTI;
import org.apache.derby.impl.sql.compile.GenerationClauseNode;
import org.apache.derby.impl.sql.compile.UnionNode;
import org.apache.derby.impl.sql.conn.GenericLanguageConnectionFactory;
import org.apache.derby.impl.sql.execute.ConstantActionActivation;
import org.apache.derby.impl.sql.execute.DeleteConstantAction;
import org.apache.derby.impl.sql.execute.rts.RealAnyResultSetStatistics;
import org.apache.derby.impl.sql.execute.rts.RealCurrentOfStatistics;
import org.apache.derby.impl.sql.execute.rts.RealDeleteCascadeResultSetStatistics;
import org.apache.derby.impl.sql.execute.rts.RealHashTableStatistics;
import org.apache.derby.impl.sql.execute.rts.RealIndexRowToBaseRowStatistics;
import org.apache.derby.impl.sql.execute.rts.RealInsertResultSetStatistics;
import org.apache.derby.impl.sql.execute.rts.RealNestedLoopJoinStatistics;
import org.apache.derby.impl.sql.execute.rts.RealOnceResultSetStatistics;
import org.apache.derby.impl.sql.execute.rts.RealRowCountStatistics;
import org.apache.derby.impl.sql.execute.rts.RealRowResultSetStatistics;
import org.apache.derby.impl.sql.execute.rts.RealVTIStatistics;
import org.apache.derby.impl.sql.execute.rts.ResultSetStatistics;
import org.apache.derby.impl.store.access.btree.BTreeController;
import org.databene.commons.ErrorHandler;
import org.databene.commons.Level;
import org.databene.commons.collection.OrderedNameMap;
import org.databene.commons.version.VersionNumber;
import org.databene.jdbacl.DBExecutionResult;
import org.databene.jdbacl.DBUtil;
import org.databene.jdbacl.JDBCConnectData;
import org.databene.jdbacl.model.DBCatalog;
import org.databene.jdbacl.model.DBConstraint;
import org.databene.jdbacl.model.DBPackage;
import org.databene.jdbacl.model.DBPrimaryKeyConstraint;
import org.databene.jdbacl.model.DBProcedure;
import org.databene.jdbacl.model.DBSchema;
import org.databene.jdbacl.model.DBTrigger;
import org.databene.jdbacl.model.DBUniqueConstraint;
import org.databene.jdbacl.model.DefaultDBTable;
import org.databene.jdbacl.model.DefaultDatabase;
import org.databene.jdbacl.model.TableHolder;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.firebirdsql.gds.XSQLVAR;
import org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp;
import org.firebirdsql.gds.impl.jni.isc_db_handle_impl;
import org.firebirdsql.jca.FBConnectionRequestInfo;
import org.firebirdsql.jca.FBLocalTransaction;
import org.firebirdsql.jca.FBManagedConnection;
import org.firebirdsql.jdbc.AbstractConnection;
import org.firebirdsql.jdbc.FBArray;
import org.firebirdsql.jdbc.FBConnection;
import org.firebirdsql.jdbc.InternalTransactionCoordinator;
import org.h2.Driver;
import org.h2.engine.SessionRemote;
import org.h2.expression.ParameterInterface;
import org.h2.jdbc.JdbcCallableStatement;
import org.h2.jdbc.JdbcResultSet;
import org.h2.jdbcx.JdbcConnectionPool;
import org.h2.tools.Csv;
import org.h2.tools.Recover;
import org.h2.tools.SimpleResultSet;
import org.h2.value.ValueResultSet;
import org.hsqldb.Result;
import org.hsqldb.Session;
import org.hsqldb.jdbc.jdbcCallableStatement;
import org.hsqldb.jdbc.jdbcConnection;
import org.hsqldb.jdbc.jdbcPreparedStatement;
import org.hsqldb.jdbcDriver;
import org.hsqldb.persist.HsqlProperties;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DBUtil_ESTest extends DBUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.6082873972465446
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = "----";
      boolean boolean0 = false;
      DBUtil.checkReadOnly("----", false);
      String string1 = "GgFMU";
      DBUtil.escape("GgFMU");
      System.setCurrentTimeMillis(71L);
      Connection connection0 = null;
      String string2 = "update";
      // Undeclared exception!
      try { 
        DBUtil.prepareStatement((Connection) null, "update", true);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Tried to mutate a database with read-only settings: update
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.8113308577108624
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      Driver driver0 = new Driver();
      GenerationClauseNode generationClauseNode0 = new GenerationClauseNode();
      UnionNode unionNode0 = new UnionNode();
      generationClauseNode0.selectivity(unionNode0);
      generationClauseNode0.getAuxiliaryProviderList();
      DBUtil.assertAllDbResourcesClosed(true);
      String string0 = "aT.YL";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("aT.YL");
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "Error reading environment data for '", false, (String[]) null);
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, (String) null, false, (String[]) null);
      DBUtil.equivalent(dBUniqueConstraint0, dBPrimaryKeyConstraint0);
      FBManagedConnection fBManagedConnection0 = mock(FBManagedConnection.class, new ViolatedAssumptionAnswer());
      doReturn((FBConnectionRequestInfo) null).when(fBManagedConnection0).getConnectionRequestInfo();
      FBConnection fBConnection0 = null;
      try {
        fBConnection0 = new FBConnection(fBManagedConnection0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.AbstractConnection", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.format((ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.4841652152843623
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DBUtil.close((Statement) null);
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      String string0 = ")Z&uHbB*_/&3MQ";
      ConstraintDescriptorList constraintDescriptorList0 = new ConstraintDescriptorList();
      constraintDescriptorList0.clone();
      VersionNumber versionNumber0 = new VersionNumber(constraintDescriptorList0, constraintDescriptorList0);
      DefaultDatabase defaultDatabase0 = new DefaultDatabase("d/Hk%eFfd (YvI", ")Z&uHbB*_/&3MQ", versionNumber0);
      DBCatalog dBCatalog0 = new DBCatalog(")Z&uHbB*_/&3MQ", defaultDatabase0);
      OrderedNameMap<DBProcedure> orderedNameMap0 = new OrderedNameMap<DBProcedure>(91);
      Session session0 = mock(Session.class, new ViolatedAssumptionAnswer());
      doReturn((Result) null).when(session0).execute(any(org.hsqldb.Result.class));
      jdbcConnection jdbcConnection0 = new jdbcConnection(session0);
      Class<Driver> class0 = Driver.class;
      // Undeclared exception!
      try { 
        DBUtil.queryScalarArray("Rur'(7tWWY^!f,|,TPd", class0, (Connection) jdbcConnection0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.hsqldb.jdbc.jdbcStatement", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.checkReadOnly((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FBArray fBArray0 = new FBArray();
      Session session0 = mock(Session.class, new ViolatedAssumptionAnswer());
      jdbcConnection jdbcConnection0 = new jdbcConnection(session0);
      Class<JdbcCallableStatement> class0 = JdbcCallableStatement.class;
      ErrorHandler errorHandler0 = new ErrorHandler(class0);
      DBUtil.runScript("", '', (Connection) jdbcConnection0, true, errorHandler0);
      jdbcConnection0.close();
      String string0 = "($";
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "($");
      char char0 = '8';
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        DBUtil.getMetaData((Connection) jdbcConnection0, "($", "", true, true, false, false, "", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.hsqldb.jdbc.jdbcDatabaseMetaData", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/databene/Database query did not return a result: .env.properties");
      String string0 = "'GLOBAL'";
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "'GLOBAL'");
      String string1 = "Database query did not return a result: ";
      try { 
        DBUtil.getMetaData("Database query did not return a result: ", true, true, true, true, "Database query did not return a result: ", false, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting null failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "2l");
      Recover recover0 = new Recover();
      Recover recover1 = new Recover();
      recover1.getTempFileDeleter();
      Recover recover2 = new Recover();
      recover1.getLobConnection();
      Session session0 = mock(Session.class, new ViolatedAssumptionAnswer());
      jdbcConnection jdbcConnection0 = new jdbcConnection(session0);
      // Undeclared exception!
      try { 
        DBUtil.executeUpdate("=#:Hv", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.7258708383227106
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String string0 = "\u0001\u00EF";
      DBUtil.available("Z|'", "password", "\u0001\u00EF", "password");
      FBArray fBArray0 = new FBArray();
      Session session0 = mock(Session.class, new ViolatedAssumptionAnswer());
      doReturn((Result) null).when(session0).execute(any(org.hsqldb.Result.class));
      jdbcConnection jdbcConnection0 = new jdbcConnection(session0);
      Class<jdbcPreparedStatement> class0 = jdbcPreparedStatement.class;
      ErrorHandler errorHandler0 = new ErrorHandler(class0);
      // Undeclared exception!
      try { 
        DBUtil.runScript("password", 'd', (Connection) jdbcConnection0, true, errorHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.hsqldb.jdbc.jdbcStatement", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Driver driver0 = new Driver();
      DeleteConstantAction deleteConstantAction0 = new DeleteConstantAction();
      deleteConstantAction0.getTargetProperties();
      driver0.connect("oPQ]h*aXEQA[})", (Properties) null);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("ERROR_LOG_READER", 492);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      // Undeclared exception!
      try { 
        DBUtil.prepareStatement((Connection) null, "oPQ]h*aXEQA[})", true);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Tried to mutate a database with read-only settings: oPQ]h*aXEQA[})
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ConstantActionActivation constantActionActivation0 = new ConstantActionActivation();
      constantActionActivation0.throwIfClosed("Expected exactly one row, found more.");
      Boolean boolean0 = new Boolean("Can not copy ");
      jdbcDriver jdbcDriver0 = new jdbcDriver();
      OrderedNameMap<DBProcedure> orderedNameMap0 = new OrderedNameMap<DBProcedure>(76);
      Session session0 = mock(Session.class, new ViolatedAssumptionAnswer());
      doReturn((Result) null).when(session0).execute(any(org.hsqldb.Result.class));
      jdbcConnection jdbcConnection0 = new jdbcConnection(session0);
      // Undeclared exception!
      try { 
        DBUtil.executeUpdate("Can not copy ", jdbcConnection0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.hsqldb.jdbc.jdbcStatement", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Vector<Object> vector0 = new Vector<Object>();
      VersionNumber versionNumber0 = new VersionNumber(vector0);
      DefaultDatabase defaultDatabase0 = new DefaultDatabase("X7Ydtvq*#z*`", "^zN'gDFcfo5Sp", versionNumber0);
      vector0.add((Object) versionNumber0);
      VersionNumber.valueOf("^zN'gDFcfo5Sp");
      VersionNumber.valueOf("^zN'gDFcfo5Sp");
      VersionNumber.valueOf((String) null);
      defaultDatabase0.getCatalog("^zN'gDFcfo5Sp");
      // Undeclared exception!
      try { 
        DBUtil.logMetaData((Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Connection connection0 = null;
      String string0 = "Closing statement failed";
      String string1 = null;
      // Undeclared exception!
      try { 
        DBUtil.query((String) null, (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DBCatalog dBCatalog0 = new DBCatalog("");
      DBSchema dBSchema0 = new DBSchema("", dBCatalog0);
      OrderedNameMap<DBProcedure> orderedNameMap0 = new OrderedNameMap<DBProcedure>((-2008));
      DBSchema dBSchema1 = new DBSchema("_@';m(=1M#[");
      DBTrigger dBTrigger0 = new DBTrigger(" failed: ", dBSchema1);
      dBSchema1.addTrigger(dBTrigger0);
      DBUtil.dependencyOrderedTables(dBSchema0);
      boolean boolean0 = true;
      try { 
        DBUtil.connect("_@';m(=1M#[", "org.databene.jdbacl.DBUtil", "org.databene.jdbacl.DBUtil", "org.databene.jdbacl.DBUtil", true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting _@';m(=1M#[ failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/databene/Database query did not return a result: .env.properties");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "'GLOBAL'");
      String string0 = "Database query did not return a result: ";
      try { 
        DBUtil.getMetaData("Database query did not return a result: ", false, true, false, true, "Database query did not return a result: ", false, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting null failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DBCatalog dBCatalog0 = new DBCatalog("");
      dBCatalog0.getSchema("f!@");
      SessionRemote sessionRemote0 = new SessionRemote();
      sessionRemote0.getLobConnection();
      HsqlProperties hsqlProperties0 = new HsqlProperties();
      Driver driver0 = new Driver();
      FBArray fBArray0 = new FBArray();
      Session session0 = mock(Session.class, new ViolatedAssumptionAnswer());
      jdbcConnection jdbcConnection0 = new jdbcConnection(session0);
      Class<jdbcPreparedStatement> class0 = jdbcPreparedStatement.class;
      ErrorHandler errorHandler0 = new ErrorHandler(class0);
      try { 
        DBUtil.prepareStatement((Connection) jdbcConnection0, "", false, 46, 3, 3583);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // java.lang.String@0000000010
         //
         verifyException("org.hsqldb.jdbc.Util", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/databene/Database query did not return a result: .env.properties");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "'GLOBAL'");
      String string0 = "Database query did not return a result: ";
      try { 
        DBUtil.getMetaData("Database query did not return a result: ", true, true, false, true, "Database query did not return a result: ", false, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting null failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Recover recover0 = new Recover();
      Recover recover1 = new Recover();
      recover1.getTempFileDeleter();
      recover1.getTempFileDeleter();
      Recover recover2 = new Recover();
      recover2.getLobConnection();
      // Undeclared exception!
      try { 
        DBUtil.queryAndSimplify("--GI5WR;>T{B{>i#k5%wb", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      DBUtil.currentLine(simpleResultSet0);
      DBUtil.getOpenResultSetCount();
      SessionRemote sessionRemote0 = new SessionRemote();
      sessionRemote0.getLobConnection();
      DBUtil.wrapWithPooledConnection((Connection) null, true);
      ErrorHandler errorHandler0 = new ErrorHandler("!IA4!W(");
      DBCatalog dBCatalog0 = new DBCatalog();
      dBCatalog0.getSchema(" statement(s)");
      DBPackage dBPackage0 = new DBPackage("e}Ve7}", (DBSchema) null);
      ErrorMessages errorMessages0 = new ErrorMessages();
      DBUtil.parseResultSet(simpleResultSet0);
      Statement statement0 = DBUtil.getStatement(simpleResultSet0);
      assertNull(statement0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      Object object0 = DBUtil.parseAndSimplifyResultSet(simpleResultSet0);
      assertNotNull(object0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DBCatalog dBCatalog0 = new DBCatalog("");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "2l");
      Recover recover0 = new Recover();
      Recover recover1 = new Recover();
      recover1.getTempFileDeleter();
      Recover recover2 = new Recover();
      recover1.getLobConnection();
      ErrorHandler errorHandler0 = ErrorHandler.getDefault();
      String[] stringArray0 = new String[0];
      recover1.runTool(stringArray0);
      try { 
        DBUtil.runScript("", "Cl", '+', (Connection) null, false, errorHandler0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ConstantActionActivation constantActionActivation0 = new ConstantActionActivation();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      constantActionActivation0.setResultSetHoldability(false);
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      DBUtil.currentLine(simpleResultSet0);
      DBUtil.getOpenResultSetCount();
      SessionRemote sessionRemote0 = new SessionRemote();
      ErrorMessages errorMessages0 = new ErrorMessages();
      // Undeclared exception!
      try { 
        DBUtil.getStatement(errorMessages0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Error getting statement from result set
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("--)");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "--)";
      DBUtil.available("HF", "42X14", "Database query did not return a result: ", (String) null);
      FBArray fBArray0 = new FBArray();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Csv csv0 = Csv.getInstance();
      SimpleResultSet simpleResultSet0 = new SimpleResultSet(csv0);
      DBUtil.close((ResultSet) null);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      String string0 = "org.firebirdsql.jca.FBResourceTransactionException";
      DBUtil.available("old", "org.firebirdsql.jca.FBResourceTransactionException", "GI", "GI");
      FBArray fBArray0 = new FBArray();
      Session session0 = mock(Session.class, new ViolatedAssumptionAnswer());
      jdbcConnection jdbcConnection0 = new jdbcConnection(session0);
      Class<jdbcPreparedStatement> class0 = jdbcPreparedStatement.class;
      ErrorHandler errorHandler0 = new ErrorHandler(class0);
      String string1 = ")";
      GenericLanguageConnectionFactory genericLanguageConnectionFactory0 = new GenericLanguageConnectionFactory();
      SlaveDatabase slaveDatabase0 = new SlaveDatabase();
      ContextService contextService0 = null;
      try {
        contextService0 = new ContextService();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.derby.iapi.services.monitor.Monitor", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.13669049038172
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("--)");
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      XSQLVAR xSQLVAR1 = xSQLVAR0.deepCopy();
      xSQLVAR0.decodeDate((byte[]) null);
      xSQLVAR1.decodeTime((byte[]) null);
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "&");
      xSQLVAR0.decodeTime((byte[]) null);
      xSQLVAR0.deepCopy();
      XSQLVAR xSQLVAR2 = new XSQLVAR();
      HsqlProperties hsqlProperties0 = new HsqlProperties();
      Driver driver0 = new Driver();
      GenerationClauseNode generationClauseNode0 = new GenerationClauseNode();
      generationClauseNode0.getAuxiliaryProviderList();
      DBUtil.assertAllDbResourcesClosed(true);
      SessionRemote sessionRemote0 = new SessionRemote();
      sessionRemote0.getLobConnection();
      // Undeclared exception!
      try { 
        DBUtil.countRows((String) null, (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      GenerationClauseNode generationClauseNode0 = new GenerationClauseNode();
      UnionNode unionNode0 = new UnionNode();
      VersionNumber.valueOf("($");
      VersionNumber versionNumber0 = VersionNumber.valueOf("($");
      VersionNumber.valueOf("($");
      VersionNumber.valueOf((String) null);
      DefaultDatabase defaultDatabase0 = new DefaultDatabase("RIe'OpH>^|@Y!/S;8|<", " connection(s)", versionNumber0);
      // Undeclared exception!
      try { 
        DBUtil.runScript((String) null, '3', (Connection) null, true, (ErrorHandler) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      defaultDBTable0.setSchema((DBSchema) null);
      defaultDBTable0.getPrimaryKeyConstraint();
      // Undeclared exception!
      try { 
        DBUtil.containsMandatoryColumn((DBConstraint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DBCatalog dBCatalog0 = new DBCatalog();
      dBCatalog0.getTables();
      DBSchema dBSchema0 = new DBSchema("", dBCatalog0);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("x9", 12);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      DBSchema dBSchema1 = new DBSchema("There are unclosed database resource: ", dBCatalog0);
      DBPackage dBPackage0 = new DBPackage("There are unclosed database resource: ", dBSchema1);
      ErrorMessages errorMessages0 = new ErrorMessages();
      try { 
        DBUtil.parseResultSet(errorMessages0);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // getObject
         //
         verifyException("org.apache.derby.vti.VTITemplate", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ConstantActionActivation constantActionActivation0 = new ConstantActionActivation();
      String string0 = "";
      constantActionActivation0.throwIfClosed("");
      constantActionActivation0.setResultSetHoldability(false);
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      DBUtil.currentLine(simpleResultSet0);
      Driver driver0 = new Driver();
      FBArray fBArray0 = new FBArray();
      GenerationClauseNode generationClauseNode0 = new GenerationClauseNode();
      generationClauseNode0.getAuxiliaryProviderList();
      long long0 = 0L;
      fBArray0.getResultSet(0L, (-934), (Map) null);
      ErrorMessages errorMessages0 = new ErrorMessages();
      DBUtil.nextLine(simpleResultSet0);
      // Undeclared exception!
      try { 
        DBUtil.currentLine(simpleResultSet0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      boolean boolean0 = false;
      SessionRemote sessionRemote0 = new SessionRemote();
      sessionRemote0.getLobConnection();
      try { 
        DBUtil.getMetaData((Connection) null, "f!|O'I_", "null", true, true, false, true, "Yp9B5", true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting null failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Recover recover0 = new Recover();
      recover0.getLobConnection();
      ErrorHandler.getDefault();
      try { 
        DBUtil.getMetaData((Connection) null, "7KJ", "gDN!}f&PJ", true, true, false, false, " statement(s)", false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting null failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ConstantActionActivation constantActionActivation0 = new ConstantActionActivation();
      constantActionActivation0.setResultSetHoldability(false);
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      DBUtil.currentLine(simpleResultSet0);
      DBUtil.getOpenStatementCount();
      DBUtil.getOpenResultSetCount();
      String string0 = "Empty SQL string in executeUpdate()";
      JdbcConnectionPool jdbcConnectionPool0 = JdbcConnectionPool.create("0=HvAF-", "Empty SQL string in executeUpdate()", "k\"dpc].Z~Z");
      jdbcConnectionPool0.dispose();
      SessionRemote sessionRemote0 = new SessionRemote();
      sessionRemote0.getLobConnection();
      ErrorHandler errorHandler0 = ErrorHandler.getDefault();
      // Undeclared exception!
      try { 
        DBUtil.runScript((String) null, (Connection) null, false, errorHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.399891585838211
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ErrorMessages errorMessages0 = new ErrorMessages();
      Object object0 = new Object();
      FromVTI fromVTI0 = new FromVTI();
      fromVTI0.getProperties();
      jdbcDriver.getConnection("INCREMENT BIGINT", (Properties) null);
      Class<ParameterInterface> class0 = ParameterInterface.class;
      ErrorHandler errorHandler0 = new ErrorHandler(class0);
      // Undeclared exception!
      try { 
        DBUtil.runScript("?,", (Connection) null, false, errorHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.1815461113373171
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      jdbcConnection jdbcConnection0 = new jdbcConnection((Session) null);
      Class<JdbcCallableStatement> class0 = JdbcCallableStatement.class;
      ErrorHandler errorHandler0 = new ErrorHandler(class0);
      String string0 = "=";
      boolean boolean0 = true;
      String string1 = "dA5aI(Vz3eD/\"4";
      // Undeclared exception!
      try { 
        DBUtil.runScript("dA5aI(Vz3eD/\"4", '', (Connection) null, true, errorHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.2060335604823573
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-18);
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte) (-21);
      byteArray0[3] = (byte)93;
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      Level level0 = Level.warn;
      ErrorHandler errorHandler0 = new ErrorHandler("x9", level0);
      Level level1 = Level.ignore;
      ErrorHandler.setDefaultLevel(level1);
      errorHandler0.setLoggingStackTrace(false);
      // Undeclared exception!
      try { 
        DBUtil.runScript("Cyth,N%Tv5Ui", '<', (Connection) null, false, errorHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.370146355566411
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ConstantActionActivation constantActionActivation0 = new ConstantActionActivation();
      constantActionActivation0.throwIfClosed("");
      Boolean boolean0 = new Boolean("");
      jdbcConnection jdbcConnection0 = new jdbcConnection((Session) null);
      Class<JdbcCallableStatement> class0 = JdbcCallableStatement.class;
      ErrorHandler errorHandler0 = new ErrorHandler(class0);
      // Undeclared exception!
      try { 
        DBUtil.runScript("=", '', (Connection) jdbcConnection0, true, errorHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.hsqldb.jdbc.jdbcStatement", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "old");
      Recover recover0 = new Recover();
      Recover recover1 = new Recover();
      recover1.getTempFileDeleter();
      Recover recover2 = new Recover();
      recover2.getLobConnection();
      ErrorHandler.getDefault();
      String[] stringArray0 = new String[0];
      recover0.runTool(stringArray0);
      // Undeclared exception!
      try { 
        DBUtil.runScript("*q4$UL7W", "(DRDAID = ", '?', (Connection) null, false, (ErrorHandler) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Resource not found: *q4$UL7W
         //
         verifyException("org.databene.commons.IOUtil", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("--)");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "--)";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "--)", true, stringArray0);
      dBUniqueConstraint0.setDoc("--)");
      // Undeclared exception!
      try { 
        DBUtil.containsMandatoryColumn(dBUniqueConstraint0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Column '--)' not found in table '--)'
         //
         verifyException("org.databene.jdbacl.model.DefaultDBTable", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ErrorMessages errorMessages0 = new ErrorMessages();
      try { 
        DBUtil.currentLine(errorMessages0);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // getObject
         //
         verifyException("org.apache.derby.vti.VTITemplate", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.prepareStatement((Connection) null, "password", true, (-1), (-1), (-1));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Tried to mutate a database with read-only settings: password
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Recover recover0 = new Recover();
      Recover recover1 = new Recover();
      recover1.getTempFileDeleter();
      recover1.getTempFileDeleter();
      Recover recover2 = new Recover();
      recover2.getLobConnection();
      Csv csv0 = Csv.getInstance();
      SimpleResultSet simpleResultSet0 = new SimpleResultSet(csv0);
      DBUtil.close((ResultSet) simpleResultSet0);
      assertEquals(1000, simpleResultSet0.getFetchDirection());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FBManagedConnection fBManagedConnection0 = mock(FBManagedConnection.class, new ViolatedAssumptionAnswer());
      InternalTransactionCoordinator.MetaDataTransactionCoordinator internalTransactionCoordinator_MetaDataTransactionCoordinator0 = new InternalTransactionCoordinator.MetaDataTransactionCoordinator();
      InternalTransactionCoordinator internalTransactionCoordinator0 = new InternalTransactionCoordinator(internalTransactionCoordinator_MetaDataTransactionCoordinator0);
      internalTransactionCoordinator0.getConnection();
      FBLocalTransaction fBLocalTransaction0 = new FBLocalTransaction(fBManagedConnection0, (AbstractConnection) null);
      DBUtil.escape("");
      HsqlProperties hsqlProperties0 = new HsqlProperties();
      jdbcConnection jdbcConnection0 = null;
      try {
        jdbcConnection0 = new jdbcConnection(hsqlProperties0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.hsqldb.Trace", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Vector<Object> vector0 = new Vector<Object>();
      VersionNumber versionNumber0 = new VersionNumber(vector0);
      DefaultDatabase defaultDatabase0 = new DefaultDatabase("X7Ydtvq*#z*`", "^zN'gDFcfo5Sp", versionNumber0);
      vector0.add((Object) versionNumber0);
      VersionNumber.valueOf("^zN'gDFcfo5Sp");
      VersionNumber.valueOf("^zN'gDFcfo5Sp");
      VersionNumber.valueOf((String) null);
      defaultDatabase0.getCatalog("^zN'gDFcfo5Sp");
      DBExecutionResult dBExecutionResult0 = DBUtil.runScript("--Expected exactly one row, found more.", '3', (Connection) null, true, (ErrorHandler) null);
      assertNotNull(dBExecutionResult0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      int int0 = 1484;
      JDBCConnectData jDBCConnectData0 = new JDBCConnectData("", "HS$AG3K;F)VdfiE.", "HS$AG3K;F)VdfiE.", "Vb9*:sO[w&Z");
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        DBUtil.connect(jDBCConnectData0, true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No JDBC driver class name specified
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[5];
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      XSQLVAR xSQLVAR1 = xSQLVAR0.deepCopy();
      xSQLVARArray0[0] = xSQLVAR1;
      FBArray fBArray0 = new FBArray();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      JDBCConnectData jDBCConnectData0 = new JDBCConnectData("", (String) null, "", "c065801d-0103-0e39-b8e7-00000010f010");
      // Undeclared exception!
      try { 
        DBUtil.connect(jDBCConnectData0, false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No JDBC URL specified
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.prepareStatement((Connection) null, "There are unclosed database resources: ", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      Recover recover0 = new Recover();
      Recover recover1 = new Recover();
      recover0.getTempFileDeleter();
      recover0.getTempFileDeleter();
      Recover recover2 = new Recover();
      Recover recover3 = new Recover();
      recover3.getLobConnection();
      ErrorHandler.getDefault();
      try { 
        DBUtil.getMetaData((Connection) null, (String) null, "new Map()", true, false, true, true, (String) null, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting null failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "old");
      Recover recover0 = new Recover();
      Recover recover1 = new Recover();
      recover1.getTempFileDeleter();
      recover1.getTempFileDeleter();
      Recover recover2 = new Recover();
      recover2.getLobConnection();
      ErrorHandler.getDefault();
      // Undeclared exception!
      try { 
        DBUtil.getMetaData((Connection) null, "old", "gDN!}f&PJ", true, true, false, false, ")_36B05Ul6&%c7dQU", true);
        fail("Expecting exception: PatternSyntaxException");
      
      } catch(PatternSyntaxException e) {
         //
         // Unmatched closing ')'
         // )_36B05Ul6&%c7dQU
         //
         verifyException("java.util.regex.Pattern", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Session session0 = mock(Session.class, new ViolatedAssumptionAnswer());
      FBArray fBArray0 = new FBArray();
      FormatableHashtable formatableHashtable0 = new FormatableHashtable();
      fBArray0.getResultSet((Map) formatableHashtable0);
      ValueResultSet valueResultSet0 = ValueResultSet.get((ResultSet) null);
      valueResultSet0.getResultSet();
      // Undeclared exception!
      try { 
        DBUtil.parseAndSimplifyResultSet((ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      DBCatalog dBCatalog0 = new DBCatalog("");
      dBCatalog0.getSchema("f!@");
      SessionRemote sessionRemote0 = new SessionRemote();
      sessionRemote0.getLobConnection();
      HsqlProperties hsqlProperties0 = new HsqlProperties();
      Driver driver0 = new Driver();
      FBArray fBArray0 = new FBArray();
      GenerationClauseNode generationClauseNode0 = new GenerationClauseNode();
      generationClauseNode0.getAuxiliaryProviderList();
      fBArray0.getResultSet(0L, 8, (Map) null);
      ErrorMessages errorMessages0 = new ErrorMessages();
      try { 
        DBUtil.nextLine(errorMessages0);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // getObject
         //
         verifyException("org.apache.derby.vti.VTITemplate", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Vector<Object> vector0 = new Vector<Object>();
      VersionNumber versionNumber0 = new VersionNumber(vector0);
      DefaultDatabase defaultDatabase0 = new DefaultDatabase("X7dtvq*#z*`", "^zN'gDFcfo5Sp", versionNumber0);
      VersionNumber.valueOf((String) null);
      VersionNumber.valueOf((String) null);
      defaultDatabase0.getCatalog((String) null);
      DBSchema dBSchema0 = new DBSchema("q;[8Gp^-\"1Cs", (DBCatalog) null);
      DBPackage dBPackage0 = new DBPackage("42621", dBSchema0);
      dBSchema0.addPackage(dBPackage0);
      DBUtil.dependencyOrderedTables(defaultDatabase0);
      // Undeclared exception!
      try { 
        DBUtil.equivalent((DBUniqueConstraint) null, (DBPrimaryKeyConstraint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[5];
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      XSQLVAR xSQLVAR1 = xSQLVAR0.deepCopy();
      xSQLVARArray0[0] = xSQLVAR1;
      Hashtable<jdbcCallableStatement, SimpleResultSet> hashtable0 = new Hashtable<jdbcCallableStatement, SimpleResultSet>();
      FBArray fBArray0 = new FBArray();
      fBArray0.getResultSet((Map) hashtable0);
      // Undeclared exception!
      try { 
        DBUtil.getStatement((ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      FBArray fBArray0 = new FBArray();
      Hashtable<JdbcResultSet, DBUtil> hashtable0 = new Hashtable<JdbcResultSet, DBUtil>();
      fBArray0.getResultSet(0L, 406, (Map) hashtable0);
      // Undeclared exception!
      try { 
        DBUtil.closeResultSetAndStatement((ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      ConstantActionActivation constantActionActivation0 = new ConstantActionActivation();
      constantActionActivation0.throwIfClosed("");
      Boolean boolean0 = new Boolean("");
      // Undeclared exception!
      try { 
        DBUtil.prepareStatement((Connection) null, "--f!@", false, (-1), (-3134), 36);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      DBCatalog dBCatalog0 = new DBCatalog("");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "2l");
      Recover recover0 = new Recover();
      Recover recover1 = new Recover();
      recover1.getTempFileDeleter();
      Recover recover2 = new Recover();
      recover2.getLobConnection();
      ErrorHandler errorHandler0 = ErrorHandler.getDefault();
      try { 
        DBUtil.runScript("", "", (Connection) null, false, errorHandler0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.6211272758470872
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[2];
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      XSQLVAR xSQLVAR1 = new XSQLVAR();
      xSQLVARArray0[0] = xSQLVAR1;
      XSQLVAR xSQLVAR2 = new XSQLVAR();
      xSQLVARArray0[1] = xSQLVAR2;
      xSQLVAR0.deepCopy();
      HsqlProperties hsqlProperties0 = new HsqlProperties();
      Driver driver0 = new Driver();
      GenerationClauseNode generationClauseNode0 = new GenerationClauseNode();
      generationClauseNode0.getAuxiliaryProviderList();
      DBUtil.assertAllDbResourcesClosed(false);
      int int0 = DBUtil.getOpenStatementCount();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      xSQLVAR0.sqlsubtype = 138;
      XSQLVAR xSQLVAR1 = xSQLVAR0.deepCopy();
      xSQLVAR1.deepCopy();
      xSQLVAR1.decodeDate((byte[]) null);
      // Undeclared exception!
      try { 
        DBUtil.executeQuery((String) null, (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Connection connection0 = null;
      // Undeclared exception!
      try { 
        DBUtil.querySingleRow("X7dtvq*#z*`", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      ConstantActionActivation constantActionActivation0 = new ConstantActionActivation();
      String string0 = "";
      constantActionActivation0.throwIfClosed("");
      String string1 = "GI";
      Csv.getInstance();
      SessionRemote sessionRemote0 = new SessionRemote();
      ErrorHandler errorHandler0 = new ErrorHandler("--");
      // Undeclared exception!
      try { 
        DBUtil.runScript("--", "[v[C", (Connection) null, false, errorHandler0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Resource not found: --
         //
         verifyException("org.databene.commons.IOUtil", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Connection connection0 = null;
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        DBUtil.getMetaData("f!|O'I_", false, false, false, false, "--GI5WR;>T{B{>i#k5%wb", false, false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No environment definition 'f!|O'I_.env.properties' found
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.connect("org.firebirdsql.jca.FBResourceTransactionException", false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No environment definition 'org.firebirdsql.jca.FBResourceTransactionException.env.properties' found
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      FBArray fBArray0 = new FBArray();
      Driver driver0 = new Driver();
      FBArray fBArray1 = new FBArray();
      GenerationClauseNode generationClauseNode0 = new GenerationClauseNode();
      generationClauseNode0.getAuxiliaryProviderList();
      fBArray1.getResultSet(0L, 1, (Map) null);
      ErrorMessages errorMessages0 = new ErrorMessages();
      // Undeclared exception!
      try { 
        DBUtil.nextLine((ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.checkReadOnly("?(hsW", true);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Tried to mutate a database with read-only settings: ?(hsW
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      DBUtil.resetMonitors();
      Class<DefaultDBTable> class0 = DefaultDBTable.class;
      ErrorHandler errorHandler0 = new ErrorHandler(class0);
      // Undeclared exception!
      try { 
        errorHandler0.handleError("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // 
         //
         verifyException("org.databene.commons.ErrorHandler", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      ConstantActionActivation constantActionActivation0 = new ConstantActionActivation();
      String string0 = "";
      constantActionActivation0.throwIfClosed("");
      SessionRemote sessionRemote0 = new SessionRemote();
      sessionRemote0.getLobConnection();
      DBUtil.getOpenResultSetCount();
      String string1 = "GI";
      String string2 = "dN$<";
      // Undeclared exception!
      try { 
        DBUtil.queryWithMetadata("dN$<", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      XSQLVAR xSQLVAR1 = xSQLVAR0.deepCopy();
      XSQLVAR xSQLVAR2 = xSQLVAR1.deepCopy();
      xSQLVAR1.decodeDate((byte[]) null);
      XSQLVAR xSQLVAR3 = new XSQLVAR();
      xSQLVAR2.decodeTime((byte[]) null);
      xSQLVAR0.decodeTime((byte[]) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "PE5UjZA:vin[ieRN");
      try { 
        DBUtil.connect((String) null, (String) null, (String) null, (String) null, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting null failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      Recover recover0 = new Recover();
      Recover recover1 = new Recover();
      recover1.getTempFileDeleter();
      recover1.getTempFileDeleter();
      Recover recover2 = new Recover();
      recover2.getLobConnection();
      Csv csv0 = Csv.getInstance();
      SimpleResultSet simpleResultSet0 = new SimpleResultSet(csv0);
      // Undeclared exception!
      try { 
        DBUtil.queryScalar("N/g/f*", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      Session session0 = mock(Session.class, new ViolatedAssumptionAnswer());
      doReturn((Result) null).when(session0).execute(any(org.hsqldb.Result.class));
      jdbcConnection jdbcConnection0 = new jdbcConnection(session0);
      // Undeclared exception!
      try { 
        DBUtil.queryLong("--", jdbcConnection0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.hsqldb.jdbc.jdbcStatement", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      XSQLVAR xSQLVAR1 = xSQLVAR0.deepCopy();
      XSQLVAR xSQLVAR2 = xSQLVAR0.deepCopy();
      xSQLVAR1.decodeDate((byte[]) null);
      XSQLVAR xSQLVAR3 = new XSQLVAR();
      xSQLVAR2.decodeTime((byte[]) null);
      xSQLVAR0.decodeTime((byte[]) null);
      xSQLVAR1.copyFrom(xSQLVAR0, false);
      int[] intArray0 = new int[4];
      intArray0[0] = 0;
      intArray0[1] = 16;
      intArray0[2] = 2086;
      intArray0[3] = 0;
      RealRowResultSetStatistics realRowResultSetStatistics0 = new RealRowResultSetStatistics(61, 90117, 1982, 0, 54L, 0, 54L, 0, 3757, (-2592.96451272383), 0);
      int int0 = DBUtil.getOpenConnectionCount();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 69
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      String string0 = null;
      // Undeclared exception!
      try { 
        DBUtil.escape((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.13669049038172
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      DBUtil.escape("markTempTableAsModifiedInUnitOfWork");
      DBUtil.assertAllDbResourcesClosed(true);
      DBUtil.available("--x9PK.\"VPG#Bf", (String) null, "--x9PK.\"VPG#Bf", "--x9PK.\"VPG#Bf");
      String string0 = "@";
      int int0 = (-905);
      String string1 = "yN";
      String string2 = ";N";
      BTreeController bTreeController0 = new BTreeController();
      int[] intArray0 = new int[6];
      intArray0[0] = 3435;
      intArray0[1] = (-1666);
      intArray0[2] = (-1666);
      intArray0[3] = 3435;
      intArray0[4] = (-1666);
      intArray0[5] = (-905);
      ResultSetStatistics[] resultSetStatisticsArray0 = new ResultSetStatistics[8];
      RealVTIStatistics realVTIStatistics0 = new RealVTIStatistics(3435, 58, 14, 3435, 1103L, 58, 3435, 3435, "isc_encodings.properties", 1.0, 0.0);
      resultSetStatisticsArray0[0] = (ResultSetStatistics) realVTIStatistics0;
      RealAnyResultSetStatistics realAnyResultSetStatistics0 = new RealAnyResultSetStatistics(14, 3475, (-1666), (-2423L), (-3631L), (-52L), (-2423L), 3196, 58, (-1666), 1.5, 1.0, realVTIStatistics0);
      RealRowCountStatistics realRowCountStatistics0 = new RealRowCountStatistics(3485, (-758), 1685, (-1666), (-905), 3718L, 0L, (-905), 0.0, 0.0, realAnyResultSetStatistics0);
      resultSetStatisticsArray0[1] = (ResultSetStatistics) realRowCountStatistics0;
      RealOnceResultSetStatistics realOnceResultSetStatistics0 = new RealOnceResultSetStatistics(10, 90082, (-2097152), (-5114L), 1685, 0L, 1685, 20000, 3485, (-145), (-2120.376268500928), 3435, realAnyResultSetStatistics0);
      resultSetStatisticsArray0[2] = (ResultSetStatistics) realOnceResultSetStatistics0;
      RealNestedLoopJoinStatistics realNestedLoopJoinStatistics0 = new RealNestedLoopJoinStatistics(718, 196, 357, 1546L, 3435, 1103L, (-1L), 196, 58, 90082, 1816, 3435, true, 2512.3684208, (-2460.5867021518), (String) null, realRowCountStatistics0, resultSetStatisticsArray0[2]);
      resultSetStatisticsArray0[3] = (ResultSetStatistics) realNestedLoopJoinStatistics0;
      RealCurrentOfStatistics realCurrentOfStatistics0 = new RealCurrentOfStatistics((-15), (-52), 90082, 4174L, 0L, 196, 1685L, (-2520));
      resultSetStatisticsArray0[4] = (ResultSetStatistics) realCurrentOfStatistics0;
      RealDeleteCascadeResultSetStatistics realDeleteCascadeResultSetStatistics0 = new RealDeleteCascadeResultSetStatistics(50, true, 90082, true, 0L, realOnceResultSetStatistics0, resultSetStatisticsArray0);
      resultSetStatisticsArray0[5] = (ResultSetStatistics) realDeleteCascadeResultSetStatistics0;
      RealIndexRowToBaseRowStatistics realIndexRowToBaseRowStatistics0 = new RealIndexRowToBaseRowStatistics(3475, (-63923650), 1, 14, 0L, 3475, 4611686018427387904L, (-145), (String) null, (FormatableBitSet) null, 1.5715, 14, realAnyResultSetStatistics0);
      resultSetStatisticsArray0[6] = (ResultSetStatistics) realIndexRowToBaseRowStatistics0;
      RealAnyResultSetStatistics realAnyResultSetStatistics1 = new RealAnyResultSetStatistics(741, 196, 4, 90082, 0L, 1816, 1099511627776L, 48, 61, 90082, 2512.3684208, 0L, resultSetStatisticsArray0[1]);
      RealInsertResultSetStatistics realInsertResultSetStatistics0 = new RealInsertResultSetStatistics(329, false, 58, false, true, false, 1954L, realAnyResultSetStatistics1);
      resultSetStatisticsArray0[7] = (ResultSetStatistics) realInsertResultSetStatistics0;
      RealHashTableStatistics realHashTableStatistics0 = new RealHashTableStatistics((-1666), (-1666), (-905), 1103L, (-905), 1103L, (-1384L), 3435, (-905), intArray0, "markTempTableAsModifiedInUnitOfWork", (Properties) null, (-1666), (-905), resultSetStatisticsArray0, realInsertResultSetStatistics0);
      FormatableProperties formatableProperties0 = realHashTableStatistics0.scanProperties;
      try { 
        bTreeController0.getInternalTablePropertySet(formatableProperties0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // The btree conglomerate 0 is closed.
         //
         verifyException("org.apache.derby.iapi.error.StandardException", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      DBUtil.currentLine(simpleResultSet0);
      DBUtil.getOpenResultSetCount();
      SessionRemote sessionRemote0 = new SessionRemote();
      sessionRemote0.getLobConnection();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      DBUtil.getOpenResultSetCount();
      DBUtil.closeResultSetAndStatement(simpleResultSet0);
      // Undeclared exception!
      try { 
        DBUtil.parseResultRow(simpleResultSet0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      DBUtil.currentLine(simpleResultSet0);
      DBUtil.getOpenResultSetCount();
      DBUtil.getOpenResultSetCount();
      Object[] objectArray0 = DBUtil.parseResultRow(simpleResultSet0);
      assertEquals(0, objectArray0.length);
  }

  /**
  //Test case number: 73
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      ConstantActionActivation constantActionActivation0 = new ConstantActionActivation();
      // Undeclared exception!
      try { 
        DBUtil.getConnectData("Expected exactly one row, found more.");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No environment definition 'Expected exactly one row, found more..env.properties' found
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      String[] stringArray0 = new String[8];
      DBUtil.existsEnvironment("There are unclosed database resources: ");
      // Undeclared exception!
      try { 
        JDBCConnectData.parseSingleDbProperties(stringArray0[0]);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.commons.IOUtil", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.parseResultSet((ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      ErrorMessages errorMessages0 = new ErrorMessages();
      try { 
        DBUtil.parseAndSimplifyResultSet(errorMessages0);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // getObject
         //
         verifyException("org.apache.derby.vti.VTITemplate", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      DBCatalog dBCatalog0 = new DBCatalog("");
      dBCatalog0.getSchema("");
      // Undeclared exception!
      try { 
        DBUtil.dependencyOrderedTables((TableHolder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      int int0 = DBUtil.getOpenPreparedStatementCount();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      JDBCConnectData jDBCConnectData0 = new JDBCConnectData("o0Pu2FT18", "allocateQualArray", "allocateQualArray", "allocateQualArray");
      try { 
        DBUtil.connect(jDBCConnectData0, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting allocateQualArray failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      ErrorMessages errorMessages0 = new ErrorMessages();
      Object object0 = new Object();
      try { 
        DBUtil.connect("0dg%[%<", "0dg%[%<", " statement(s)", "{6", false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting 0dg%[%< failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }
}
