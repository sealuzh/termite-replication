/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 09:47:05 GMT 2019
 */

package org.dom4j.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.dom4j.io.OutputFormat;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class OutputFormat_ESTest extends OutputFormat_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.119908764356186
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[7];
      outputFormat0.setIndent("-newlines");
      stringArray0[0] = "-newlines";
      outputFormat0.setIndent(false);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setNewLineAfterNTags(18);
      outputFormat0.setSuppressDeclaration(false);
      String string0 = "qMbo^W{?p";
      outputFormat0.setIndent(false);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      assertEquals("\n", outputFormat0.getLineSeparator());
      
      OutputFormat outputFormat1 = new OutputFormat("-expandEmpty", false, "R-Kj!OD1q=XijtV>%");
      outputFormat0.setLineSeparator("");
      outputFormat0.isSuppressDeclaration();
      outputFormat0.isOmitEncoding();
      outputFormat0.setOmitEncoding(false);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "-omitEncoding";
      outputFormat0.parseOptions(stringArray0, 2);
      String string0 = outputFormat0.getLineSeparator();
      assertEquals("", string0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.4942662253853725
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String string0 = "-xhtmly!\\</}";
      String string1 = null;
      OutputFormat outputFormat1 = new OutputFormat("-xhtmly!</}");
      String string2 = "-xhtml-xhtmlbSN P";
      outputFormat1.setIndentSize(4437);
      outputFormat1.setIndentSize(4437);
      int int0 = 1;
      // Undeclared exception!
      outputFormat1.setIndentSize(4437);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.405452149809925
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setIndent(true);
      outputFormat0.setIndentSize(2009);
      String[] stringArray0 = new String[6];
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setLineSeparator("-padText");
      outputFormat0.setEncoding("-padText");
      outputFormat0.setNewlines(true);
      outputFormat0.setExpandEmptyElements(true);
      OutputFormat outputFormat1 = new OutputFormat("HR$4W'V=)-s}f=(3p:q", true, "P_~c^Fo7)C39");
      outputFormat1.setIndent(true);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.isSuppressDeclaration();
      outputFormat1.isOmitEncoding();
      outputFormat1.parseOptions(stringArray0, 2009);
      outputFormat1.getAttributeQuoteCharacter();
      outputFormat0.setIndent((String) null);
      assertEquals("-padText", outputFormat0.getEncoding());
      
      OutputFormat outputFormat2 = new OutputFormat("-padText", false, (String) null);
      outputFormat2.parseOptions(stringArray0, 2009);
      OutputFormat.createCompactFormat();
      OutputFormat outputFormat3 = OutputFormat.createCompactFormat();
      outputFormat3.getEncoding();
      outputFormat2.getEncoding();
      assertEquals('\"', outputFormat2.getAttributeQuoteCharacter());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.0779348648097775
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setIndent(true);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setIndentSize(2009);
      String[] stringArray0 = new String[6];
      outputFormat0.setXHTML(true);
      outputFormat0.setNewlines(true);
      stringArray0[0] = "y!</}";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "qMbo^W{?p";
      stringArray0[4] = "\u0007Y(Fw";
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      stringArray0[5] = "";
      outputFormat0.setIndentSize((-1221));
      outputFormat0.setIndent(true);
      outputFormat1.setNewLineAfterNTags(906);
      outputFormat0.getEncoding();
      outputFormat1.setSuppressDeclaration(true);
      outputFormat1.setPadText(true);
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('!');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (!)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.9169550471066779
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("4^!v6;2f`JOi}D@r_w", false);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "4^!v6;2f`JOi}D@r_w";
      stringArray0[1] = "4^!v6;2f`JOi}D@r_w";
      outputFormat0.setEncoding("4^!v6;2f`JOi}D@r_w");
      stringArray0[2] = "Wg5Rm";
      stringArray0[3] = "4^!v6;2f`JOi}D@r_w";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setEncoding((String) null);
      outputFormat0.setSuppressDeclaration(true);
      String[] stringArray1 = new String[7];
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.isSuppressDeclaration();
      outputFormat0.isOmitEncoding();
      OutputFormat outputFormat1 = new OutputFormat();
      outputFormat1.setEncoding("-newlines");
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray1, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.2613780972780977
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setIndent("-indent");
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setEncoding("-indent");
      outputFormat1.getLineSeparator();
      outputFormat0.setIndent("-indent");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-indent";
      stringArray0[1] = "-indent";
      stringArray0[2] = "\n";
      int int0 = outputFormat1.parseOptions(stringArray0, 0);
      assertEquals("-indent", outputFormat1.getIndent());
      assertEquals(2, int0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.6681466246572203
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null, false, ".R*wsn|xfN\"Sy7");
      outputFormat0.setIndent("n,4#$uO-(2e2");
      outputFormat0.setIndentSize(0);
      outputFormat0.setIndentSize(0);
      outputFormat0.setIndentSize(1);
      outputFormat0.setIndent(false);
      OutputFormat outputFormat1 = new OutputFormat((String) null, false);
      String[] stringArray0 = new String[9];
      stringArray0[0] = ".R*wsn|xfN\"Sy7";
      stringArray0[1] = null;
      stringArray0[2] = null;
      stringArray0[4] = null;
      outputFormat1.parseOptions(stringArray0, 0);
      outputFormat0.setIndent(".R*wsn|xfN\"Sy7");
      String[] stringArray1 = new String[1];
      stringArray1[0] = ".R*wsn|xfN\"Sy7";
      outputFormat0.parseOptions(stringArray1, 1);
      outputFormat0.setIndent("%QJ5;y}D+1*F");
      assertEquals("%QJ5;y}D+1*F", outputFormat0.getIndent());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.114355452291088
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-xhtmlbSN P";
      stringArray0[1] = "-xhtml4^!v6;2f`JOi}D@r_w";
      stringArray0[2] = "Gw&KqEIbX;8<V'";
      stringArray0[3] = "-expandEmpty4^!v6;2f`J9i}D@r_w";
      outputFormat0.parseOptions(stringArray0, 0);
      OutputFormat.createPrettyPrint();
      OutputFormat.createCompactFormat();
      OutputFormat.createPrettyPrint();
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1911702226));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1911702226
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.1021170635140374
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat(",|k)j%,s!>.Up30);", false, "-expandEmpty");
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setExpandEmptyElements(false);
      OutputFormat outputFormat2 = new OutputFormat((String) null, false, "'4(");
      outputFormat2.setLineSeparator("'4(");
      outputFormat2.setNewlines(true);
      outputFormat2.setExpandEmptyElements(true);
      outputFormat0.setIndent(true);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat2.isSuppressDeclaration();
      outputFormat2.isOmitEncoding();
      outputFormat2.setTrimText(true);
      boolean boolean0 = outputFormat2.isExpandEmptyElements();
      assertEquals("'4(", outputFormat2.getLineSeparator());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.309281350678734
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setNewLineAfterNTags((-1));
      outputFormat0.setIndent("sw4.*c]j:9t");
      outputFormat0.setExpandEmptyElements(false);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "sw4.*c]j:9t";
      stringArray0[1] = "-expandEmpty";
      stringArray0[2] = "P_~c^Fo7)C39";
      stringArray0[3] = "-expandEmpty";
      outputFormat0.setNewLineAfterNTags(560);
      outputFormat0.setIndent((String) null);
      outputFormat0.parseOptions(stringArray0, 441);
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.setNewLineAfterNTags(2034);
      outputFormat0.parseOptions(stringArray0, 2034);
      assertEquals(2034, outputFormat0.getNewLineAfterNTags());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.92819476520619
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null, true, ".R*wsn|xfN\"Sy7");
      outputFormat0.setIndentSize(0);
      outputFormat0.setIndentSize(0);
      outputFormat0.setIndentSize(1);
      outputFormat0.setIndent(true);
      OutputFormat outputFormat1 = new OutputFormat((String) null, false);
      outputFormat1.setAttributeQuoteCharacter('\'');
      assertEquals('\'', outputFormat1.getAttributeQuoteCharacter());
      
      String[] stringArray0 = new String[9];
      stringArray0[0] = ".R*wsn|xfN\"Sy7";
      stringArray0[1] = null;
      stringArray0[2] = null;
      stringArray0[4] = null;
      outputFormat0.setIndent((String) null);
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      assertFalse(outputFormat2.isNewlines());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.4241710186205303
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      int int0 = 0;
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setEncoding("R-Kj!OD1q=XijtV>%");
      outputFormat0.setSuppressDeclaration(false);
      String[] stringArray0 = new String[6];
      outputFormat0.setSuppressDeclaration(true);
      stringArray0[0] = "-xhtmlP_~c^Fo7)C39";
      stringArray0[1] = null;
      stringArray0[2] = "R-Kj!OD1q=XijtV>%";
      stringArray0[4] = null;
      stringArray0[5] = "=2h0~])?3`-6f";
      outputFormat0.isSuppressDeclaration();
      outputFormat0.isOmitEncoding();
      outputFormat0.isSuppressDeclaration();
      outputFormat0.isOmitEncoding();
      OutputFormat outputFormat1 = new OutputFormat();
      // Undeclared exception!
      try { 
        outputFormat1.parseOptions(stringArray0, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.011015831001672
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.isSuppressDeclaration();
      OutputFormat outputFormat1 = new OutputFormat(".R*wsn|xfN\"Sy7", false, ".R*wsn|xfN\"Sy7");
      outputFormat0.setIndentSize(2220);
      outputFormat0.setIndentSize(2220);
      outputFormat0.isNewlines();
      outputFormat0.setIndent(false);
      outputFormat1.setNewLineAfterDeclaration(false);
      outputFormat1.setNewlines(false);
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      outputFormat2.setOmitEncoding(false);
      outputFormat1.isXHTML();
      OutputFormat outputFormat3 = new OutputFormat("?S ", true, "Oexc4ding");
      outputFormat3.setNewlines(false);
      outputFormat3.isXHTML();
      // Undeclared exception!
      try { 
        outputFormat2.setAttributeQuoteCharacter('Y');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (Y)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.8303663452556806
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.setIndent(true);
      outputFormat0.setIndentSize(2009);
      String[] stringArray0 = new String[6];
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setXHTML(true);
      outputFormat0.setNewlines(true);
      stringArray0[0] = "y!</}";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "qMbo^W{?p";
      stringArray0[4] = "\u0007Y(Fw";
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setNewLineAfterDeclaration(true);
      outputFormat0.setNewlines(true);
      outputFormat0.setOmitEncoding(true);
      outputFormat1.isXHTML();
      outputFormat0.isXHTML();
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('Y');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (Y)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("Gw&KqEIbX;8<");
      char char0 = outputFormat0.getAttributeQuoteCharacter();
      assertFalse(outputFormat0.isXHTML());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertEquals("Gw&KqEIbX;8<", outputFormat0.getIndent());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals('\"', char0);
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isPadText());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.545828257931353
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("Wg5Rm", false, "Wg5Rm");
      String[] stringArray0 = new String[9];
      stringArray0[0] = "Wg5Rm";
      stringArray0[2] = "P_~c^Fo7)C39";
      stringArray0[3] = "Wg5Rm";
      stringArray0[4] = "Wg5Rm";
      stringArray0[5] = "Wg5Rm";
      stringArray0[6] = "Wg5Rm";
      stringArray0[7] = "Wg5Rm";
      stringArray0[8] = "Wg5Rm";
      outputFormat0.setNewLineAfterNTags((-1));
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.setNewLineAfterNTags(1346);
      outputFormat0.setTrimText(false);
      assertEquals(1346, outputFormat0.getNewLineAfterNTags());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.363279396743392
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("7", false);
      outputFormat0.setPadText(false);
      outputFormat0.setLineSeparator((String) null);
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.setSuppressDeclaration(false);
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setEncoding((String) null);
      outputFormat1.setExpandEmptyElements(false);
      outputFormat1.setLineSeparator((String) null);
      outputFormat0.setTrimText(false);
      outputFormat1.setEncoding((String) null);
      outputFormat1.setNewLineAfterNTags(0);
      outputFormat0.setEncoding((String) null);
      outputFormat1.setTrimText(true);
      outputFormat0.setXHTML(false);
      outputFormat1.isPadText();
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setIndent((String) null);
      outputFormat1.setTrimText(false);
      outputFormat0.setEncoding((String) null);
      outputFormat0.isPadText();
      outputFormat0.setTrimText(false);
      outputFormat0.getEncoding();
      assertTrue(outputFormat0.isSuppressDeclaration());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.879376754279852
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.isXHTML();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat0.getIndent();
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.setIndent(false);
      outputFormat1.setNewLineAfterDeclaration(false);
      assertFalse(outputFormat1.isNewLineAfterDeclaration());
      
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.setXHTML(false);
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true);
      String string0 = outputFormat0.getIndent();
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isXHTML());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertTrue(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isPadText());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isTrimText());
      assertEquals("", string0);
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isOmitEncoding());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-omitEncoding", true);
      String string0 = outputFormat0.getIndent();
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isTrimText());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isPadText());
      assertTrue(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals("-omitEncoding", string0);
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isXHTML());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      assertFalse(outputFormat0.isTrimText());
      
      outputFormat0.setTrimText(true);
      assertTrue(outputFormat0.isTrimText());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.2215523079930732
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null, true, ".R*wsn|xfN\"Sy7");
      outputFormat0.setIndentSize(0);
      outputFormat0.setIndentSize(0);
      outputFormat0.isNewlines();
      outputFormat0.setIndent(true);
      outputFormat0.setIndentSize(1);
      outputFormat0.setIndent(true);
      assertEquals("  ", outputFormat0.getIndent());
      
      OutputFormat outputFormat1 = new OutputFormat((String) null, false);
      outputFormat1.setPadText(false);
      assertFalse(outputFormat1.isTrimText());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.700433991370831
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("np AulFKS1m+R", false);
      outputFormat0.setTrimText(false);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "np AulFKS1m+R";
      stringArray0[1] = "np AulFKS1m+R";
      stringArray0[2] = "4^!v6;2f`JOi}D@r_w";
      stringArray0[3] = "Wg5Rm";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.isTrimText();
      outputFormat0.setLineSeparator("4^!v6;2f`JOi}D@r_w");
      assertEquals("4^!v6;2f`JOi}D@r_w", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("np AulFKS1m+R", true);
      outputFormat0.setTrimText(true);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "np AulFKS1m+R";
      stringArray0[2] = "np AulFKS1m+R";
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.isTrimText();
      outputFormat0.setLineSeparator("np AulFKS1m+R");
      assertEquals("np AulFKS1m+R", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.355825830420688
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true, "");
      outputFormat0.setIndentSize(1739);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setIndent("");
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setPadText(true);
      boolean boolean0 = outputFormat0.isExpandEmptyElements();
      assertTrue(outputFormat0.isSuppressDeclaration());
      assertTrue(outputFormat0.isPadText());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.9909065731902369
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("cND ;W(x:M|");
      assertEquals("cND ;W(x:M|", outputFormat0.getIndent());
      
      outputFormat0.setIndent("");
      outputFormat0.setIndent((String) null);
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isNewlines());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isPadText());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isTrimText());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isXHTML());
      assertEquals("UTF-8", outputFormat0.getEncoding());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.423972598477201
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.isSuppressDeclaration();
      outputFormat0.setIndentSize((-193));
      outputFormat0.setIndentSize((-193));
      outputFormat0.setNewlines(true);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.isNewLineAfterDeclaration();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "E_:@Nklu~oRy";
      stringArray0[1] = "1";
      outputFormat0.setLineSeparator("VJbVWR?");
      stringArray0[2] = "";
      stringArray0[3] = ")eAv'\"[ydp@J";
      stringArray0[4] = "";
      outputFormat1.parseOptions(stringArray0, 1);
      outputFormat1.setEncoding("");
      outputFormat0.getNewLineAfterNTags();
      assertEquals("VJbVWR?", outputFormat0.getLineSeparator());
      
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      assertFalse(outputFormat2.isPadText());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.527062838287056
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      OutputFormat outputFormat1 = new OutputFormat("=2h0~]");
      outputFormat1.setOmitEncoding(false);
      outputFormat0.setEncoding("R-Kj!OD1q=XijtV>%");
      outputFormat1.setSuppressDeclaration(false);
      outputFormat1.isSuppressDeclaration();
      outputFormat0.isOmitEncoding();
      OutputFormat outputFormat2 = new OutputFormat();
      outputFormat2.setEncoding((String) null);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "315VWmw";
      stringArray0[1] = "R-Kj!OD1q=XijtV>%";
      outputFormat1.setOmitEncoding(false);
      outputFormat0.isSuppressDeclaration();
      outputFormat0.isOmitEncoding();
      OutputFormat outputFormat3 = new OutputFormat();
      outputFormat3.setEncoding("-newlines");
      // Undeclared exception!
      try { 
        outputFormat3.parseOptions(stringArray0, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      boolean boolean0 = outputFormat0.isPadText();
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isXHTML());
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(boolean0);
      assertFalse(outputFormat0.isOmitEncoding());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertFalse(outputFormat0.isTrimText());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.9909065731902369
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("cND ;W(:M|,");
      outputFormat0.setIndent("==1<(ZV=CM3w dm7PY");
      assertEquals("==1<(ZV=CM3w dm7PY", outputFormat0.getIndent());
      
      outputFormat0.setIndent((String) null);
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.9136655198736401
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-expandEmpty");
      assertFalse(outputFormat0.isExpandEmptyElements());
      
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-expandEmpty";
      stringArray0[1] = "-expandEmpty";
      stringArray0[2] = "-expandEmpty";
      stringArray0[3] = "?K'F+=?";
      int int0 = outputFormat0.parseOptions(stringArray0, 2);
      assertTrue(outputFormat0.isExpandEmptyElements());
      assertEquals(3, int0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.675485446901437
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null, true, ".R*wsn|xfN\"Sy7");
      outputFormat0.setIndentSize(0);
      outputFormat0.setIndentSize(0);
      outputFormat0.isNewlines();
      outputFormat0.setIndent(true);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setNewlines(true);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.isXHTML();
      outputFormat0.isXHTML();
      outputFormat0.setLineSeparator(".R*wsn|xfN\"Sy7");
      assertEquals(".R*wsn|xfN\"Sy7", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      assertEquals("\n", outputFormat0.getLineSeparator());
      
      OutputFormat outputFormat1 = new OutputFormat("-expandEmpty", false, "R-Kj!OD1q=XijtV>%");
      assertEquals("R-Kj!OD1q=XijtV>%", outputFormat1.getEncoding());
      assertEquals("-expandEmpty", outputFormat1.getIndent());
      
      outputFormat0.setLineSeparator((String) null);
      OutputFormat outputFormat2 = new OutputFormat("MRepXJQG:=", false, "MRepXJQG:=");
      assertEquals('\"', outputFormat2.getAttributeQuoteCharacter());
      assertEquals("\n", outputFormat2.getLineSeparator());
      assertFalse(outputFormat2.isOmitEncoding());
      assertFalse(outputFormat2.isTrimText());
      assertFalse(outputFormat2.isSuppressDeclaration());
      assertTrue(outputFormat2.isNewLineAfterDeclaration());
      assertFalse(outputFormat2.isExpandEmptyElements());
      assertFalse(outputFormat2.isXHTML());
      assertFalse(outputFormat2.isNewlines());
      assertFalse(outputFormat2.isPadText());
      assertEquals(0, outputFormat2.getNewLineAfterNTags());
      
      outputFormat0.getLineSeparator();
      assertFalse(outputFormat0.isPadText());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isXHTML());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isOmitEncoding());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("np AulFKS1m+R", false);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "np AulFKS1m+R";
      stringArray0[1] = "np AulFKS1m+R";
      stringArray0[2] = "4^!v6;2f`JOi}D@r_w";
      stringArray0[3] = "Wg5Rm";
      outputFormat0.isNewLineAfterDeclaration();
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      
      OutputFormat outputFormat1 = new OutputFormat("", false, "4^!v6;2f`JOi}D@r_w");
      outputFormat1.getNewLineAfterNTags();
      outputFormat0.setNewLineAfterNTags(1);
      outputFormat0.parseOptions(stringArray0, 2674);
      assertEquals(1, outputFormat0.getNewLineAfterNTags());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.2261289670319746
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      OutputFormat.createCompactFormat();
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('(');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (()
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.4959144560641855
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat0.setAttributeQuoteCharacter('\"');
      assertFalse(outputFormat0.isOmitEncoding());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isXHTML());
      assertEquals("  ", outputFormat0.getIndent());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertTrue(outputFormat0.isPadText());
      assertTrue(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertTrue(outputFormat0.isTrimText());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.4942662253853725
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("Gw&KqEIbX;8<");
      outputFormat0.setIndent(false);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "Gw&KqEIbX;8<";
      stringArray0[1] = "P57;L} xG8]+%yVo766";
      outputFormat0.setIndent("-expandEmpty-xhtlbSNP");
      outputFormat0.setIndent("{M7uGTU(]");
      outputFormat0.setIndent("P57;L} xG8]+%yVo766");
      assertEquals("P57;L} xG8]+%yVo766", outputFormat0.getIndent());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.2461846780558945
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setIndent(true);
      outputFormat0.setIndentSize(2009);
      outputFormat0.setNewLineAfterDeclaration(false);
      String[] stringArray0 = new String[6];
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setXHTML(true);
      outputFormat0.setNewlines(true);
      stringArray0[0] = "y!</}";
      stringArray0[1] = "";
      stringArray0[2] = "";
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setSuppressDeclaration(true);
      stringArray0[3] = "qMbo^W{?p";
      outputFormat0.setIndent(false);
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setIndent("#,yV5nT!m8E'");
      outputFormat0.setIndent("-xhtml-xhtml4^!v6;2f`JOi}D@r_w");
      outputFormat0.setIndent("-expandEmpty");
      assertEquals("-expandEmpty", outputFormat0.getIndent());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.10605726218319
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("Wg5Rm", false, "Wg5Rm");
      OutputFormat outputFormat1 = new OutputFormat("4^!v6;2f`JOi}D@r_w", false);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Wg5Rm";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat1.setOmitEncoding(true);
      outputFormat0.setEncoding("7#y4oM%5<s|V5pj7");
      outputFormat1.setSuppressDeclaration(true);
      OutputFormat outputFormat2 = new OutputFormat("Wg5Rm", true);
      outputFormat2.isTrimText();
      OutputFormat outputFormat3 = new OutputFormat("1'd5#gS|}8lc", false, "4^!v6;2f`JOi}D@r_w");
      outputFormat3.setEncoding("4^!v6;2f`JOi}D@r_w");
      outputFormat0.setPadText(false);
      assertEquals("7#y4oM%5<s|V5pj7", outputFormat0.getEncoding());
      
      outputFormat3.setLineSeparator("-lineSeparator");
      String string0 = outputFormat3.getEncoding();
      assertEquals("4^!v6;2f`JOi}D@r_w", string0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.7468721985154558
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null, true, ".R*wsn|xfN\"Sy7");
      outputFormat0.setIndentSize(0);
      outputFormat0.setIndentSize(0);
      outputFormat0.setIndentSize(1);
      outputFormat0.setIndent(true);
      OutputFormat outputFormat1 = new OutputFormat((String) null, false);
      String[] stringArray0 = new String[9];
      stringArray0[0] = ".R*wsn|xfN\"Sy7";
      stringArray0[1] = null;
      stringArray0[2] = null;
      stringArray0[4] = null;
      outputFormat1.parseOptions(stringArray0, 0);
      outputFormat0.setIndent(".R*wsn|xfN\"Sy7");
      assertEquals(".R*wsn|xfN\"Sy7", outputFormat0.getIndent());
      
      outputFormat1.setIndent((String) null);
      outputFormat1.setIndent(stringArray0[2]);
      assertFalse(outputFormat1.isXHTML());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null, true, ".R*wsn|xfN\"Sy7");
      outputFormat0.setIndentSize(0);
      outputFormat0.setIndentSize(0);
      outputFormat0.setIndentSize((-62));
      outputFormat0.setIndent(true);
      OutputFormat outputFormat1 = new OutputFormat((String) null, true);
      String[] stringArray0 = new String[5];
      stringArray0[0] = ".R*wsn|xfN\"Sy7";
      stringArray0[1] = "-!#";
      stringArray0[2] = ".R*wsn|xfN\"Sy7";
      stringArray0[3] = ".R*wsn|xfN\"Sy7";
      stringArray0[4] = null;
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-62));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -62
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.9396395458476661
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      assertFalse(outputFormat0.isOmitEncoding());
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = "315VWmw";
      stringArray0[1] = null;
      stringArray0[2] = "-omitEncoding";
      stringArray0[3] = "cND ;W(x:M|";
      outputFormat0.parseOptions(stringArray0, 2);
      int int0 = outputFormat0.parseOptions(stringArray0, 2);
      assertTrue(outputFormat0.isOmitEncoding());
      assertEquals(3, int0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("vGp]?(4+Ve(CWm&yn", true, "-xhtml\n");
      outputFormat0.setNewLineAfterNTags(2006);
      outputFormat0.getLineSeparator();
      assertEquals(2006, outputFormat0.getNewLineAfterNTags());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-newlines";
      OutputFormat outputFormat0 = new OutputFormat("");
      outputFormat0.setXHTML(false);
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isOmitEncoding());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isPadText());
      assertFalse(outputFormat0.isXHTML());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals("", outputFormat0.getIndent());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.4994467946012942
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-htly!</}");
      outputFormat0.setLineSeparator("-xhtml-xhtmlbSN P");
      outputFormat0.setNewLineAfterDeclaration(false);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-xhtml-xhtmlbSN P";
      stringArray0[1] = "-omitEncoding";
      stringArray0[2] = "-omitEncoding";
      stringArray0[3] = "-xhtml-xhtml4^!v6;2f`JOi}D@r_w";
      stringArray0[4] = null;
      stringArray0[5] = "-xhtml-xhtmlbSN P";
      stringArray0[6] = null;
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.0347522396959996
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("4^!v6;2f`JOi}D@r_w", false);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "4^!v6;2f`JOi}D@r_w";
      stringArray0[1] = "4^!v6;2f`JOi}D@r_w";
      stringArray0[2] = "Wg5Rm";
      stringArray0[3] = "4^!v6;2f`JOi}D@r_w";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setEncoding((String) null);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.isTrimText();
      outputFormat0.setEncoding("");
      outputFormat0.setPadText(false);
      outputFormat0.setLineSeparator("k{ys7cGBT");
      outputFormat0.getEncoding();
      assertEquals("k{ys7cGBT", outputFormat0.getLineSeparator());
  }
}
