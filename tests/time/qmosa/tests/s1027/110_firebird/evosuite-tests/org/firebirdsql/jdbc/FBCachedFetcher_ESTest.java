/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 09:58:23 GMT 2019
 */

package org.firebirdsql.jdbc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import java.util.List;
import java.util.concurrent.LinkedBlockingQueue;
import java.util.function.Consumer;
import java.util.function.Predicate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.firebirdsql.gds.DatabaseParameterBuffer;
import org.firebirdsql.gds.IscDbHandle;
import org.firebirdsql.gds.XSQLVAR;
import org.firebirdsql.gds.impl.GDSHelper;
import org.firebirdsql.gds.impl.jni.LocalGDSImpl;
import org.firebirdsql.gds.impl.jni.NativeGDSImpl;
import org.firebirdsql.gds.impl.wire.DatabaseParameterBufferImp;
import org.firebirdsql.gds.impl.wire.JavaGDSImpl;
import org.firebirdsql.gds.impl.wire.isc_stmt_handle_impl;
import org.firebirdsql.jca.FBConnectionRequestInfo;
import org.firebirdsql.jca.FBManagedConnection;
import org.firebirdsql.jdbc.FBCachedFetcher;
import org.firebirdsql.jdbc.FBFetcher;
import org.firebirdsql.jdbc.FBObjectListener;
import org.firebirdsql.jdbc.FBResultSet;
import org.firebirdsql.jdbc.FBSQLException;
import org.firebirdsql.jdbc.field.FBBlobField;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FBCachedFetcher_ESTest extends FBCachedFetcher_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.502640203747866
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      FBConnectionRequestInfo fBConnectionRequestInfo0 = new FBConnectionRequestInfo(databaseParameterBufferImp0);
      DatabaseParameterBuffer databaseParameterBuffer0 = databaseParameterBufferImp0.removeExtensionParams();
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener0 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      GDSHelper gDSHelper0 = new GDSHelper(javaGDSImpl0, databaseParameterBuffer0, (IscDbHandle) null, gDSHelper_GDSHelperErrorListener0);
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.removeRows();
      gDSHelper0.getIscEncoding();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      linkedList0.add((byte[][]) null);
      int int0 = (-41);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.relative(48);
      fBCachedFetcher0.isEmpty();
      fBCachedFetcher0.next();
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher1.deleteRow();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.774493366857449
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      Object object0 = new Object();
      Predicate<byte[][]> predicate0 = Predicate.isEqual(object0);
      Predicate<byte[][]> predicate1 = predicate0.negate();
      Predicate<byte[][]> predicate2 = predicate0.and(predicate1);
      Predicate<byte[][]> predicate3 = predicate2.or(predicate0);
      Predicate<byte[][]> predicate4 = predicate0.and(predicate3);
      Predicate<byte[][]> predicate5 = predicate4.negate();
      Predicate<byte[][]> predicate6 = predicate0.or(predicate5);
      predicate0.test((byte[][]) null);
      byte[][] byteArray0 = fBResultSet0.row;
      Predicate.isEqual((Object) null);
      predicate6.or(predicate4);
      Predicate.isEqual((Object) predicate2);
      Predicate<byte[][]> predicate7 = predicate0.and(predicate6);
      predicate7.and(predicate2);
      Predicate<byte[][]> predicate8 = predicate3.negate();
      predicate8.test((byte[][]) null);
      predicate8.or(predicate1);
      predicate6.negate();
      predicate1.and(predicate8);
      predicate1.and(predicate5);
      predicate7.test((byte[][]) null);
      linkedList0.removeIf(predicate7);
      linkedList0.add((byte[][]) null);
      fBCachedFetcher0.relative((-41));
      fBCachedFetcher0.isEmpty();
      fBCachedFetcher0.next();
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.isAfterLast();
      fBCachedFetcher0.isEmpty();
      System.setCurrentTimeMillis(0L);
      fBCachedFetcher0.isLast();
      fBCachedFetcher0.updateRow((byte[][]) null);
      assertFalse(fBCachedFetcher0.isLast());
      assertTrue(fBCachedFetcher0.isEmpty());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.1437065979373684
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.pollFirst();
      FBBlobField[] fBBlobFieldArray0 = new FBBlobField[9];
      FBBlobField fBBlobField0 = mock(FBBlobField.class, new ViolatedAssumptionAnswer());
      fBBlobFieldArray0[0] = fBBlobField0;
      fBBlobFieldArray0[1] = fBBlobField0;
      fBBlobFieldArray0[2] = fBBlobField0;
      fBBlobFieldArray0[3] = fBBlobField0;
      fBBlobFieldArray0[4] = fBBlobField0;
      fBBlobFieldArray0[5] = fBBlobField0;
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      linkedList0.add((byte[][]) null);
      linkedList1.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.afterLast();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.3696352485074934
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      linkedList1.add((byte[][]) null);
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      linkedList0.add((byte[][]) null);
      linkedList2.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList2, fBResultSet0);
      fBCachedFetcher0.next();
      fBCachedFetcher0.previous();
      boolean boolean0 = fBCachedFetcher0.relative((-1));
      assertFalse(fBCachedFetcher0.isBeforeFirst());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.5498744193489453
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      linkedList0.pollFirst();
      FBBlobField[] fBBlobFieldArray0 = new FBBlobField[8];
      FBBlobField fBBlobField0 = mock(FBBlobField.class, new ViolatedAssumptionAnswer());
      fBBlobFieldArray0[0] = fBBlobField0;
      fBBlobFieldArray0[1] = fBBlobField0;
      fBBlobFieldArray0[2] = fBBlobField0;
      fBBlobFieldArray0[3] = fBBlobField0;
      fBBlobFieldArray0[4] = fBBlobField0;
      fBBlobFieldArray0[5] = fBBlobField0;
      fBBlobFieldArray0[6] = fBBlobField0;
      fBBlobFieldArray0[7] = fBBlobField0;
      linkedList0.toArray(fBBlobFieldArray0);
      linkedList0.add((byte[][]) null);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList1);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.setFetchSize((-2955));
      fBCachedFetcher0.absolute(1);
      fBCachedFetcher0.updateRow((byte[][]) null);
      fBCachedFetcher0.first();
      int int0 = fBCachedFetcher0.getFetchSize();
      assertFalse(fBCachedFetcher0.isBeforeFirst());
      assertEquals((-2955), int0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.9935433028254361
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.pollFirst();
      FBBlobField[] fBBlobFieldArray0 = new FBBlobField[8];
      FBBlobField fBBlobField0 = mock(FBBlobField.class, new ViolatedAssumptionAnswer());
      fBBlobFieldArray0[0] = fBBlobField0;
      fBBlobFieldArray0[1] = fBBlobField0;
      fBBlobFieldArray0[2] = fBBlobField0;
      fBBlobFieldArray0[3] = fBBlobField0;
      fBBlobFieldArray0[4] = fBBlobField0;
      linkedList0.add((byte[][]) null);
      fBBlobFieldArray0[5] = fBBlobField0;
      linkedList0.add((byte[][]) null);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      linkedList1.add((byte[][]) null);
      linkedList1.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList1, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.isAfterLast();
      fBCachedFetcher0.isBeforeFirst();
      // Undeclared exception!
      try { 
        fBCachedFetcher0.previous();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.9913740596968101
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      FBConnectionRequestInfo fBConnectionRequestInfo0 = new FBConnectionRequestInfo(databaseParameterBufferImp0);
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener0 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBBlobField[] fBBlobFieldArray0 = new FBBlobField[8];
      FBBlobField fBBlobField0 = mock(FBBlobField.class, new ViolatedAssumptionAnswer());
      fBBlobFieldArray0[0] = fBBlobField0;
      fBBlobFieldArray0[1] = fBBlobField0;
      fBBlobFieldArray0[2] = fBBlobField0;
      fBBlobFieldArray0[3] = fBBlobField0;
      fBBlobFieldArray0[4] = fBBlobField0;
      fBBlobFieldArray0[5] = fBBlobField0;
      fBBlobFieldArray0[6] = fBBlobField0;
      fBBlobFieldArray0[7] = fBBlobField0;
      linkedList0.toArray(fBBlobFieldArray0);
      linkedList0.add((byte[][]) null);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.absolute(1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.097878170750067
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[4][9];
      byte[] byteArray1 = new byte[0];
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[0];
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[3];
      linkedList0.add(byteArray0);
      byteArray3[0] = (byte) (-31);
      byteArray3[1] = (byte) (-119);
      byteArray3[2] = (byte) (-112);
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[1];
      byteArray4[0] = (byte) (-31);
      byteArray0[3] = byteArray4;
      linkedList0.add(byteArray0);
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.last();
      boolean boolean0 = fBCachedFetcher0.first();
      assertFalse(fBCachedFetcher0.isBeforeFirst());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.2623477045221727
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.pollFirst();
      FBBlobField[] fBBlobFieldArray0 = new FBBlobField[8];
      FBBlobField fBBlobField0 = mock(FBBlobField.class, new ViolatedAssumptionAnswer());
      fBBlobFieldArray0[0] = fBBlobField0;
      fBBlobFieldArray0[1] = fBBlobField0;
      fBBlobFieldArray0[2] = fBBlobField0;
      fBBlobFieldArray0[3] = fBBlobField0;
      fBBlobFieldArray0[4] = fBBlobField0;
      fBBlobFieldArray0[5] = fBBlobField0;
      fBBlobFieldArray0[6] = fBBlobField0;
      fBBlobFieldArray0[7] = fBBlobField0;
      linkedList0.toArray(fBBlobFieldArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.setFetchSize(2353);
      fBCachedFetcher0.previous();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-113);
      byteArray0[1] = (byte)100;
      byteArray0[2] = (byte)73;
      byteArray0[3] = (byte)2;
      fBCachedFetcher0.absolute((byte)100);
      int int0 = fBCachedFetcher0.getFetchSize();
      assertEquals(2353, int0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.7842068034002128
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      byte[][] byteArray0 = new byte[6][8];
      byte[] byteArray1 = new byte[1];
      byteArray1[0] = (byte)0;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[9];
      byteArray2[0] = (byte)0;
      byteArray2[1] = (byte)0;
      byteArray2[2] = (byte)0;
      byteArray2[3] = (byte)0;
      byteArray2[4] = (byte)0;
      byteArray2[5] = (byte)0;
      byteArray2[6] = (byte)0;
      byteArray2[7] = (byte)0;
      byteArray2[8] = (byte)0;
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[6];
      byteArray3[0] = (byte)0;
      byteArray3[1] = (byte)0;
      byteArray3[2] = (byte)0;
      byteArray3[3] = (byte)0;
      byteArray3[5] = (byte)0;
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[7];
      byteArray4[0] = (byte) (-16);
      byteArray4[1] = (byte)0;
      byteArray4[2] = (byte) (-82);
      byteArray4[3] = (byte)0;
      byteArray4[4] = (byte)0;
      byteArray4[5] = (byte)1;
      byteArray4[6] = (byte)0;
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[2];
      byteArray5[0] = (byte)1;
      byteArray5[1] = (byte)0;
      byteArray0[4] = byteArray5;
      byte[] byteArray6 = new byte[0];
      byteArray0[5] = byteArray6;
      linkedList0.add(byteArray0);
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      FBConnectionRequestInfo fBConnectionRequestInfo0 = new FBConnectionRequestInfo(databaseParameterBufferImp0);
      byte[][] byteArray7 = linkedList0.pollFirst();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      linkedList0.forEach(consumer0);
      linkedList0.add(byteArray7);
      linkedList0.add(byteArray7);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList1);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.next();
      NativeGDSImpl nativeGDSImpl0 = null;
      try {
        nativeGDSImpl0 = new NativeGDSImpl();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.9913740596968101
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      FBConnectionRequestInfo fBConnectionRequestInfo0 = new FBConnectionRequestInfo(databaseParameterBufferImp0);
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener0 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBBlobField[] fBBlobFieldArray0 = new FBBlobField[8];
      FBBlobField fBBlobField0 = mock(FBBlobField.class, new ViolatedAssumptionAnswer());
      fBBlobFieldArray0[0] = fBBlobField0;
      fBBlobFieldArray0[1] = fBBlobField0;
      fBBlobFieldArray0[2] = fBBlobField0;
      fBBlobFieldArray0[3] = fBBlobField0;
      fBBlobFieldArray0[4] = fBBlobField0;
      fBBlobFieldArray0[5] = fBBlobField0;
      fBBlobFieldArray0[6] = fBBlobField0;
      fBBlobFieldArray0[7] = fBBlobField0;
      linkedList0.toArray(fBBlobFieldArray0);
      linkedList0.add((byte[][]) null);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.relative((-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.674867044478253
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.previous();
      Object object0 = new Object();
      Predicate<byte[][]> predicate0 = Predicate.isEqual(object0);
      Predicate<byte[][]> predicate1 = predicate0.negate();
      Predicate<byte[][]> predicate2 = predicate0.and(predicate1);
      Predicate<byte[][]> predicate3 = predicate2.or(predicate0);
      Predicate<byte[][]> predicate4 = predicate0.and(predicate3);
      Predicate<byte[][]> predicate5 = predicate4.negate();
      Predicate<byte[][]> predicate6 = predicate0.or(predicate5);
      predicate5.test((byte[][]) null);
      predicate0.test((byte[][]) null);
      Predicate.isEqual((Object) predicate2);
      Predicate<byte[][]> predicate7 = predicate0.and(predicate6);
      predicate7.and(predicate2);
      Predicate<byte[][]> predicate8 = predicate3.negate();
      predicate6.negate();
      predicate1.and(predicate8);
      predicate1.and(predicate5);
      predicate7.test((byte[][]) null);
      linkedList0.removeIf(predicate7);
      linkedList0.add((byte[][]) null);
      fBCachedFetcher0.relative((-41));
      fBCachedFetcher0.isEmpty();
      fBCachedFetcher0.next();
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.isAfterLast();
      fBCachedFetcher0.isEmpty();
      fBCachedFetcher0.previous();
      assertTrue(fBCachedFetcher0.isFirst());
      
      System.setCurrentTimeMillis(0L);
      fBCachedFetcher0.insertRow((byte[][]) null);
      assertFalse(fBCachedFetcher0.isAfterLast());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.5024689653282075
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.absolute(512);
      fBCachedFetcher0.last();
      fBCachedFetcher0.relative((-953));
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.isBeforeFirst();
      boolean boolean0 = fBCachedFetcher0.isFirst();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.7875550098159887
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      linkedList0.pollFirst();
      FBBlobField[] fBBlobFieldArray0 = new FBBlobField[8];
      FBBlobField fBBlobField0 = mock(FBBlobField.class, new ViolatedAssumptionAnswer());
      fBBlobFieldArray0[0] = fBBlobField0;
      fBBlobFieldArray0[1] = fBBlobField0;
      fBBlobFieldArray0[2] = fBBlobField0;
      fBBlobFieldArray0[3] = fBBlobField0;
      fBBlobFieldArray0[4] = fBBlobField0;
      fBBlobFieldArray0[5] = fBBlobField0;
      fBBlobFieldArray0[6] = fBBlobField0;
      fBBlobFieldArray0[7] = fBBlobField0;
      FBBlobField[] fBBlobFieldArray1 = linkedList0.toArray(fBBlobFieldArray0);
      linkedList0.add((byte[][]) null);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      linkedList1.containsAll(linkedList0);
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList1);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      linkedList0.toArray(fBBlobFieldArray1);
      linkedList0.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList1, fBResultSet0);
      boolean boolean0 = fBCachedFetcher0.previous();
      assertFalse(boolean0);
      assertEquals(0, fBCachedFetcher0.getRowNum());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.7842068034002128
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBObjectListener.FetcherListener fBObjectListener_FetcherListener0 = null;
      linkedList0.clear();
      linkedList0.pollFirst();
      linkedList0.addFirst((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.isEmpty();
      // Undeclared exception!
      try { 
        fBCachedFetcher0.next();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.7754337976947767
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.pollFirst();
      FBBlobField[] fBBlobFieldArray0 = new FBBlobField[9];
      FBBlobField fBBlobField0 = mock(FBBlobField.class, new ViolatedAssumptionAnswer());
      fBBlobFieldArray0[7] = fBBlobField0;
      fBBlobFieldArray0[1] = fBBlobFieldArray0[0];
      fBBlobFieldArray0[2] = fBBlobFieldArray0[1];
      fBBlobFieldArray0[3] = fBBlobFieldArray0[2];
      fBBlobFieldArray0[4] = fBBlobFieldArray0[3];
      fBBlobFieldArray0[5] = fBBlobFieldArray0[4];
      fBBlobFieldArray0[6] = fBBlobFieldArray0[5];
      fBBlobFieldArray0[7] = fBBlobFieldArray0[6];
      linkedList0.toArray(fBBlobFieldArray0);
      linkedList0.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.previous();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.071437056647502
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      linkedList0.pollFirst();
      FBBlobField[] fBBlobFieldArray0 = new FBBlobField[8];
      FBBlobField fBBlobField0 = mock(FBBlobField.class, new ViolatedAssumptionAnswer());
      fBBlobFieldArray0[0] = fBBlobField0;
      fBBlobFieldArray0[1] = fBBlobField0;
      fBBlobFieldArray0[2] = fBBlobField0;
      fBBlobFieldArray0[3] = fBBlobField0;
      fBBlobFieldArray0[4] = fBBlobField0;
      fBBlobFieldArray0[5] = fBBlobField0;
      fBBlobFieldArray0[6] = fBBlobField0;
      fBBlobFieldArray0[7] = fBBlobField0;
      linkedList0.toArray(fBBlobFieldArray0);
      linkedList0.add((byte[][]) null);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList1);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.absolute((-13));
      linkedList1.pollLast();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp0.addArgument(2004, 2004);
      fBCachedFetcher0.absolute(2004);
      boolean boolean0 = fBCachedFetcher0.last();
      assertFalse(fBCachedFetcher0.isBeforeFirst());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.1437065979373684
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[0][0];
      linkedList0.add(byteArray0);
      linkedList0.add((byte[][]) null);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      linkedList1.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList1, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.beforeFirst();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.6681250477410834
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.previous();
      Object object0 = new Object();
      Predicate<byte[][]> predicate0 = Predicate.isEqual(object0);
      Predicate<byte[][]> predicate1 = Predicate.isEqual((Object) null);
      Predicate<byte[][]> predicate2 = predicate0.and(predicate1);
      Predicate<byte[][]> predicate3 = predicate2.or(predicate0);
      Predicate<Object> predicate4 = Predicate.isEqual((Object) fBResultSet0);
      Predicate<Object> predicate5 = predicate4.negate();
      Predicate<Object> predicate6 = predicate5.or(predicate4);
      predicate3.and(predicate6);
      predicate0.and(predicate3);
      Predicate<byte[][]> predicate7 = predicate0.negate();
      Predicate<byte[][]> predicate8 = predicate0.or(predicate7);
      predicate7.test((byte[][]) null);
      Predicate<byte[][]> predicate9 = predicate0.and(predicate8);
      predicate9.test((byte[][]) null);
      linkedList0.removeIf(predicate9);
      linkedList0.add((byte[][]) null);
      fBCachedFetcher0.relative((-41));
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.isBeforeFirst();
      int int0 = FBFetcher.MAX_FETCH_ROWS;
      fBCachedFetcher0.getRowNum();
      fBCachedFetcher0.getRowNum();
      fBCachedFetcher0.updateRow((byte[][]) null);
      assertEquals(1, fBCachedFetcher0.getRowNum());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.9913740596968101
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[6][2];
      byte[] byteArray1 = new byte[1];
      byteArray1[0] = (byte)67;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[9];
      byteArray2[0] = (byte)67;
      byteArray2[1] = (byte)67;
      byteArray2[2] = (byte)67;
      byteArray2[3] = (byte)67;
      byteArray2[4] = (byte)109;
      byteArray2[5] = (byte)67;
      byteArray2[6] = (byte)67;
      byteArray2[7] = (byte)67;
      byteArray2[8] = (byte)67;
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[1];
      byteArray3[0] = (byte)109;
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[6];
      byteArray4[0] = (byte)109;
      byteArray4[1] = (byte)67;
      byteArray4[2] = (byte)109;
      byteArray4[3] = (byte)109;
      byteArray4[4] = (byte)109;
      byteArray4[5] = (byte)109;
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[1];
      byteArray5[0] = (byte)67;
      byteArray0[4] = byteArray5;
      byte[] byteArray6 = new byte[5];
      byteArray6[0] = (byte)109;
      byteArray6[1] = (byte)67;
      byteArray6[2] = (byte)67;
      byteArray6[3] = (byte)109;
      byteArray6[4] = (byte) (-11);
      byteArray0[5] = byteArray6;
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.last();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      FBConnectionRequestInfo fBConnectionRequestInfo0 = new FBConnectionRequestInfo(databaseParameterBufferImp0);
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      byte[][] byteArray0 = new byte[9][8];
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      int int0 = fBCachedFetcher0.getFetchSize();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.9253539308675658
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.pollFirst();
      FBBlobField[] fBBlobFieldArray0 = new FBBlobField[8];
      FBBlobField fBBlobField0 = mock(FBBlobField.class, new ViolatedAssumptionAnswer());
      fBBlobFieldArray0[0] = fBBlobField0;
      fBBlobFieldArray0[2] = fBBlobFieldArray0[1];
      fBBlobFieldArray0[3] = fBBlobFieldArray0[2];
      fBBlobFieldArray0[5] = fBBlobFieldArray0[4];
      fBBlobFieldArray0[6] = fBBlobFieldArray0[5];
      fBBlobFieldArray0[7] = fBBlobFieldArray0[6];
      linkedList0.toArray(fBBlobFieldArray0);
      byte[][] byteArray0 = new byte[1][3];
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.insertRow(byteArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      FBConnectionRequestInfo fBConnectionRequestInfo0 = new FBConnectionRequestInfo(databaseParameterBufferImp0);
      DatabaseParameterBuffer databaseParameterBuffer0 = databaseParameterBufferImp0.removeExtensionParams();
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener0 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      GDSHelper gDSHelper0 = new GDSHelper(javaGDSImpl0, databaseParameterBuffer0, (IscDbHandle) null, gDSHelper_GDSHelperErrorListener0);
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.removeRows();
      int int0 = (-1);
      gDSHelper0.getIscEncoding();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      databaseParameterBuffer0.deepCopy();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = null;
      try {
        fBCachedFetcher0 = new FBCachedFetcher(gDSHelper0, 0, 16384, isc_stmt_handle_impl0, fBResultSet0, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.pollFirst();
      linkedList0.pollFirst();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.deleteRow();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.8363757082431853
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.previous();
      Object object0 = new Object();
      Predicate<byte[][]> predicate0 = Predicate.isEqual(object0);
      Predicate<byte[][]> predicate1 = predicate0.negate();
      Predicate<byte[][]> predicate2 = predicate0.and(predicate1);
      Predicate<byte[][]> predicate3 = predicate2.or(predicate0);
      Predicate<byte[][]> predicate4 = predicate0.and(predicate3);
      Predicate<byte[][]> predicate5 = predicate4.negate();
      Predicate<byte[][]> predicate6 = predicate0.or(predicate5);
      predicate5.test((byte[][]) null);
      predicate0.test((byte[][]) null);
      Predicate.isEqual((Object) predicate2);
      Predicate<byte[][]> predicate7 = predicate0.and(predicate6);
      predicate7.and(predicate2);
      Predicate<byte[][]> predicate8 = predicate3.negate();
      predicate6.negate();
      Predicate<byte[][]> predicate9 = predicate1.and(predicate8);
      predicate2.or(predicate9);
      predicate1.and(predicate5);
      predicate7.test((byte[][]) null);
      linkedList0.removeIf(predicate7);
      linkedList0.add((byte[][]) null);
      fBCachedFetcher0.relative((-41));
      fBCachedFetcher0.isEmpty();
      fBCachedFetcher0.next();
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher1.insertRow((byte[][]) null);
      fBCachedFetcher1.deleteRow();
      assertFalse(fBCachedFetcher1.isBeforeFirst());
      
      fBCachedFetcher0.isAfterLast();
      fBCachedFetcher0.isEmpty();
      fBCachedFetcher1.previous();
      System.setCurrentTimeMillis(0L);
      fBCachedFetcher1.isLast();
      int int0 = fBCachedFetcher0.getRowNum();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.686392042562131
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.previous();
      Object object0 = new Object();
      Predicate<byte[][]> predicate0 = Predicate.isEqual(object0);
      Predicate<byte[][]> predicate1 = Predicate.isEqual((Object) null);
      Predicate<byte[][]> predicate2 = predicate0.and(predicate1);
      Predicate<byte[][]> predicate3 = predicate2.or(predicate0);
      Predicate<byte[][]> predicate4 = predicate0.and(predicate3);
      Predicate<byte[][]> predicate5 = predicate0.or(predicate4);
      predicate4.test((byte[][]) null);
      Object object1 = new Object();
      Predicate.isEqual(object1);
      Predicate<byte[][]> predicate6 = predicate0.and(predicate5);
      predicate6.test((byte[][]) null);
      linkedList0.removeIf(predicate6);
      linkedList0.add((byte[][]) null);
      fBCachedFetcher0.relative((-41));
      fBCachedFetcher0.insertRow((byte[][]) null);
      int int0 = FBFetcher.MAX_FETCH_ROWS;
      fBCachedFetcher0.getRowNum();
      System.setCurrentTimeMillis(1);
      boolean boolean0 = fBCachedFetcher0.next();
      assertFalse(fBCachedFetcher0.isLast());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.4089921585327536
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.pollFirst();
      FBBlobField[] fBBlobFieldArray0 = new FBBlobField[9];
      FBBlobField fBBlobField0 = mock(FBBlobField.class, new ViolatedAssumptionAnswer());
      fBBlobFieldArray0[7] = fBBlobField0;
      fBBlobFieldArray0[1] = fBBlobFieldArray0[0];
      fBBlobFieldArray0[3] = fBBlobFieldArray0[2];
      fBBlobFieldArray0[4] = fBBlobFieldArray0[3];
      fBBlobFieldArray0[5] = fBBlobFieldArray0[4];
      fBBlobFieldArray0[6] = fBBlobFieldArray0[5];
      linkedList0.toArray(fBBlobFieldArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.beforeFirst();
      boolean boolean0 = fBCachedFetcher0.previous();
      fBCachedFetcher0.relative(1);
      boolean boolean1 = fBCachedFetcher0.absolute(1);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.0141266108053313
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.pollFirst();
      FBBlobField[] fBBlobFieldArray0 = new FBBlobField[9];
      FBBlobField fBBlobField0 = mock(FBBlobField.class, new ViolatedAssumptionAnswer());
      fBBlobFieldArray0[0] = fBBlobField0;
      fBBlobFieldArray0[1] = fBBlobField0;
      fBBlobFieldArray0[2] = fBBlobField0;
      fBBlobFieldArray0[3] = fBBlobField0;
      FBBlobField[] fBBlobFieldArray1 = new FBBlobField[4];
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      linkedList0.forEach(consumer0);
      fBBlobFieldArray1[0] = fBBlobField0;
      fBBlobFieldArray1[1] = fBBlobField0;
      fBBlobFieldArray1[2] = fBBlobField0;
      fBBlobFieldArray1[3] = fBBlobField0;
      linkedList0.toArray(fBBlobFieldArray1);
      linkedList0.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      assertTrue(fBCachedFetcher0.isBeforeFirst());
      
      fBCachedFetcher0.updateRow((byte[][]) null);
      assertFalse(fBCachedFetcher0.isAfterLast());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.4942662253853725
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      linkedList0.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, fBResultSet0);
      assertTrue(fBCachedFetcher1.isBeforeFirst());
      
      boolean boolean0 = fBCachedFetcher0.isBeforeFirst();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.9557135998277697
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      linkedList1.add((byte[][]) null);
      FBBlobField[] fBBlobFieldArray0 = new FBBlobField[9];
      FBBlobField fBBlobField0 = mock(FBBlobField.class, new ViolatedAssumptionAnswer());
      fBBlobFieldArray0[0] = fBBlobField0;
      fBBlobFieldArray0[1] = fBBlobField0;
      fBBlobFieldArray0[2] = fBBlobField0;
      fBBlobFieldArray0[3] = fBBlobField0;
      fBBlobFieldArray0[4] = fBBlobField0;
      fBBlobFieldArray0[5] = fBBlobField0;
      fBBlobFieldArray0[6] = fBBlobField0;
      fBBlobFieldArray0[7] = fBBlobField0;
      fBBlobFieldArray0[8] = fBBlobField0;
      linkedList1.toArray(fBBlobFieldArray0);
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      linkedList2.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.updateRow((byte[][]) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.pollFirst();
      FBBlobField[] fBBlobFieldArray0 = new FBBlobField[8];
      FBBlobField fBBlobField0 = mock(FBBlobField.class, new ViolatedAssumptionAnswer());
      fBBlobFieldArray0[0] = fBBlobField0;
      fBBlobFieldArray0[1] = fBBlobField0;
      fBBlobFieldArray0[2] = fBBlobField0;
      fBBlobFieldArray0[3] = fBBlobField0;
      fBBlobFieldArray0[4] = fBBlobField0;
      fBBlobFieldArray0[5] = fBBlobField0;
      fBBlobFieldArray0[6] = fBBlobField0;
      fBBlobFieldArray0[7] = fBBlobField0;
      linkedList0.toArray(fBBlobFieldArray0);
      byte[][] byteArray0 = new byte[2][3];
      linkedList0.add(byteArray0);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList1, (FBObjectListener.FetcherListener) null);
      try { 
        fBCachedFetcher0.absolute(0);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // You cannot position to the row 0 with absolute() method.
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.3173682551477435
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.absolute(1598);
      fBCachedFetcher0.isAfterLast();
      fBCachedFetcher0.relative(1598);
      fBCachedFetcher0.afterLast();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)11;
      byteArray0[1] = (byte) (-56);
      linkedList0.pollFirst();
      LinkedBlockingQueue<String> linkedBlockingQueue0 = new LinkedBlockingQueue<String>();
      linkedList0.containsAll(linkedBlockingQueue0);
      FBManagedConnection fBManagedConnection0 = mock(FBManagedConnection.class, new ViolatedAssumptionAnswer());
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      LocalGDSImpl localGDSImpl0 = null;
      try {
        localGDSImpl0 = new LocalGDSImpl();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.097878170750067
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      FBConnectionRequestInfo fBConnectionRequestInfo0 = new FBConnectionRequestInfo(databaseParameterBufferImp0);
      DatabaseParameterBuffer databaseParameterBuffer0 = databaseParameterBufferImp0.removeExtensionParams();
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener0 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      GDSHelper gDSHelper0 = new GDSHelper(javaGDSImpl0, databaseParameterBuffer0, (IscDbHandle) null, gDSHelper_GDSHelperErrorListener0);
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.removeRows();
      gDSHelper0.getIscEncoding();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      byte[][] byteArray0 = new byte[8][8];
      byte[] byteArray1 = new byte[1];
      byteArray1[0] = (byte) (-112);
      byteArray0[0] = byteArray1;
      byteArray0[1] = gDSHelper0.BLOB_LENGTH_REQUEST;
      byte[] byteArray2 = new byte[3];
      byteArray2[0] = (byte) (-112);
      byteArray2[1] = (byte) (-2);
      byteArray2[2] = (byte) (-112);
      byteArray0[2] = byteArray2;
      byteArray0[3] = gDSHelper0.BLOB_LENGTH_REQUEST;
      byteArray0[4] = gDSHelper0.BLOB_LENGTH_REQUEST;
      byteArray0[5] = gDSHelper0.BLOB_LENGTH_REQUEST;
      byteArray0[6] = gDSHelper0.BLOB_LENGTH_REQUEST;
      byteArray0[7] = gDSHelper0.BLOB_LENGTH_REQUEST;
      linkedList0.add(byteArray0);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList1);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.last();
      boolean boolean0 = fBCachedFetcher0.first();
      assertEquals(0, fBResultSet0.getRow());
      assertTrue(fBCachedFetcher0.isLast());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.4964410084390702
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.isLast();
      byte[][] byteArray0 = new byte[8][6];
      byte[] byteArray1 = new byte[0];
      byteArray0[2] = byteArray1;
      byte[] byteArray2 = new byte[7];
      linkedList0.offerLast(byteArray0);
      byteArray2[0] = (byte) (-2);
      byteArray2[1] = (byte) (-44);
      byteArray2[2] = (byte) (-79);
      fBCachedFetcher0.close();
      byteArray2[3] = (byte) (-44);
      byteArray2[4] = (byte) (-71);
      byteArray2[5] = (byte) (-77);
      fBCachedFetcher0.last();
      fBCachedFetcher0.last();
      boolean boolean0 = fBCachedFetcher0.previous();
      fBCachedFetcher0.relative((-79));
      fBCachedFetcher0.absolute(335544327);
      boolean boolean1 = fBCachedFetcher0.first();
      assertTrue(boolean1 == boolean0);
      assertTrue(fBCachedFetcher0.isLast());
      assertFalse(boolean1);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.9253539308675658
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FBBlobField[] fBBlobFieldArray0 = new FBBlobField[9];
      FBBlobField fBBlobField0 = mock(FBBlobField.class, new ViolatedAssumptionAnswer());
      fBBlobFieldArray0[7] = fBBlobField0;
      fBBlobFieldArray0[1] = fBBlobField0;
      fBBlobFieldArray0[3] = fBBlobFieldArray0[2];
      fBBlobFieldArray0[4] = fBBlobFieldArray0[3];
      fBBlobFieldArray0[5] = fBBlobFieldArray0[4];
      fBBlobFieldArray0[6] = fBBlobFieldArray0[5];
      fBBlobFieldArray0[7] = fBBlobFieldArray0[6];
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp0.addArgument(48, (-13));
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.insertRow((byte[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.2344527233745817
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.pollFirst();
      FBBlobField[] fBBlobFieldArray0 = new FBBlobField[9];
      FBBlobField fBBlobField0 = mock(FBBlobField.class, new ViolatedAssumptionAnswer());
      fBBlobFieldArray0[0] = fBBlobField0;
      fBBlobFieldArray0[1] = fBBlobField0;
      fBBlobFieldArray0[2] = fBBlobField0;
      fBBlobFieldArray0[3] = fBBlobField0;
      fBBlobFieldArray0[4] = fBBlobField0;
      fBBlobFieldArray0[5] = fBBlobField0;
      fBBlobFieldArray0[6] = fBBlobField0;
      fBBlobFieldArray0[7] = fBBlobField0;
      fBBlobFieldArray0[8] = fBBlobField0;
      linkedList0.toArray(fBBlobFieldArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.previous();
      linkedList0.add((byte[][]) null);
      fBCachedFetcher0.last();
      fBCachedFetcher0.last();
      fBCachedFetcher0.setFetchSize((-950));
      fBCachedFetcher0.previous();
      fBCachedFetcher0.relative(82);
      boolean boolean0 = fBCachedFetcher0.absolute((byte)64);
      assertEquals((-950), fBCachedFetcher0.getFetchSize());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.9913740596968101
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.pollFirst();
      FBBlobField[] fBBlobFieldArray0 = new FBBlobField[9];
      FBBlobField fBBlobField0 = mock(FBBlobField.class, new ViolatedAssumptionAnswer());
      fBBlobFieldArray0[5] = fBBlobField0;
      fBBlobFieldArray0[1] = fBBlobFieldArray0[0];
      fBBlobFieldArray0[2] = fBBlobFieldArray0[1];
      fBBlobFieldArray0[3] = fBBlobFieldArray0[2];
      fBBlobFieldArray0[4] = fBBlobFieldArray0[3];
      fBBlobFieldArray0[5] = fBBlobFieldArray0[4];
      fBBlobFieldArray0[6] = fBBlobFieldArray0[5];
      fBBlobFieldArray0[7] = fBBlobFieldArray0[6];
      fBBlobFieldArray0[8] = fBBlobFieldArray0[7];
      linkedList0.toArray(fBBlobFieldArray0);
      linkedList0.add((byte[][]) null);
      linkedList0.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.first();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      FBConnectionRequestInfo fBConnectionRequestInfo0 = new FBConnectionRequestInfo(databaseParameterBufferImp0);
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener0 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      byte[][] byteArray0 = new byte[9][8];
      FBCachedFetcher fBCachedFetcher0 = null;
      try {
        fBCachedFetcher0 = new FBCachedFetcher((List<byte[][]>) null, (FBObjectListener.FetcherListener) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.pollFirst();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      linkedList1.forEach(consumer0);
      linkedList1.add((byte[][]) null);
      linkedList0.add((byte[][]) null);
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp0.getArgumentAsString((-2474));
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.isFirst();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      DatabaseParameterBuffer databaseParameterBuffer0 = databaseParameterBufferImp1.deepCopy();
      FBConnectionRequestInfo fBConnectionRequestInfo0 = new FBConnectionRequestInfo(databaseParameterBuffer0);
      fBConnectionRequestInfo0.addArgument((-2474), (String) null);
      databaseParameterBufferImp0.removeExtensionParams();
      databaseParameterBufferImp1.addArgument((-2474), (-2833));
      assertNotSame(databaseParameterBufferImp1, databaseParameterBuffer0);
  }
}
