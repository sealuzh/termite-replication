/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 10:03:00 GMT 2019
 */

package net.sourceforge.schemaspy.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.sql.Connection;
import java.sql.DatabaseMetaData;
import java.util.LinkedList;
import java.util.List;
import net.sourceforge.schemaspy.Config;
import net.sourceforge.schemaspy.model.ForeignKeyConstraint;
import net.sourceforge.schemaspy.model.Table;
import net.sourceforge.schemaspy.model.TableColumn;
import net.sourceforge.schemaspy.model.xml.SchemaMeta;
import net.sourceforge.schemaspy.model.xml.TableColumnMeta;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ForeignKeyConstraint_ESTest extends ForeignKeyConstraint_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[6];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "ur");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "ur");
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "Lzs0EoLQ$:Y1Ip", 2, 156);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      System.setCurrentTimeMillis(0L);
      foreignKeyConstraint0.isReal();
      boolean boolean0 = foreignKeyConstraint0.isReal();
      assertTrue(boolean0);
      
      foreignKeyConstraint0.getName();
      assertEquals(2, foreignKeyConstraint0.getUpdateRule());
      assertEquals(156, foreignKeyConstraint0.getDeleteRule());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.16362601929634
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "w27_R$z$/;SY{UA", 2, 32);
      foreignKeyConstraint0.getDeleteRuleDescription();
      foreignKeyConstraint0.getDeleteRuleAlias();
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "~(j*MhZm`1JF9", 1, (-1132));
      foreignKeyConstraint1.getDeleteRuleDescription();
      foreignKeyConstraint1.getDeleteRuleAlias();
      foreignKeyConstraint0.getDeleteRuleName();
      foreignKeyConstraint1.getDeleteRuleName();
      foreignKeyConstraint0.getDeleteRuleAlias();
      boolean boolean0 = foreignKeyConstraint1.isNullOnDelete();
      foreignKeyConstraint1.getDeleteRuleName();
      boolean boolean1 = foreignKeyConstraint0.isReal();
      assertFalse(foreignKeyConstraint0.isNullOnDelete());
      assertFalse(boolean1 == boolean0);
      
      System.setCurrentTimeMillis(1251L);
      foreignKeyConstraint1.getDeleteRuleName();
      int int0 = foreignKeyConstraint1.getDeleteRule();
      assertEquals(1, foreignKeyConstraint1.getUpdateRule());
      assertEquals((-1132), int0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.287991730133441
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, (String) null, 762, 2);
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta0).getComments();
      doReturn((String) null).when(tableColumnMeta0).getDefaultValue();
      doReturn(0).when(tableColumnMeta0).getDigits();
      doReturn((String) null).when(tableColumnMeta0).getId();
      doReturn((String) null).when(tableColumnMeta0).getName();
      doReturn(0).when(tableColumnMeta0).getSize();
      doReturn((String) null).when(tableColumnMeta0).getType();
      doReturn(false).when(tableColumnMeta0).isAutoUpdated();
      doReturn(false).when(tableColumnMeta0).isNullable();
      TableColumn tableColumn0 = new TableColumn((Table) null, tableColumnMeta0);
      foreignKeyConstraint0.addChildColumn(tableColumn0);
      foreignKeyConstraint0.getDeleteRuleDescription();
      foreignKeyConstraint0.isImplied();
      TableColumnMeta tableColumnMeta1 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta1).getComments();
      doReturn((String) null).when(tableColumnMeta1).getDefaultValue();
      doReturn(0).when(tableColumnMeta1).getDigits();
      doReturn((String) null).when(tableColumnMeta1).getId();
      doReturn((String) null).when(tableColumnMeta1).getName();
      doReturn(0).when(tableColumnMeta1).getSize();
      doReturn((String) null).when(tableColumnMeta1).getType();
      doReturn(false).when(tableColumnMeta1).isAutoUpdated();
      doReturn(false).when(tableColumnMeta1).isNullable();
      TableColumn tableColumn1 = new TableColumn((Table) null, tableColumnMeta1);
      ForeignKeyConstraint foreignKeyConstraint1 = null;
      try {
        foreignKeyConstraint1 = new ForeignKeyConstraint(tableColumn0, tableColumn1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.TableColumn", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.569731762518411
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, (String) null, 762, 2);
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta0).getComments();
      doReturn((String) null).when(tableColumnMeta0).getDefaultValue();
      doReturn(0).when(tableColumnMeta0).getDigits();
      doReturn((String) null).when(tableColumnMeta0).getId();
      doReturn((String) null).when(tableColumnMeta0).getName();
      doReturn(0).when(tableColumnMeta0).getSize();
      doReturn((String) null).when(tableColumnMeta0).getType();
      doReturn(false).when(tableColumnMeta0).isAutoUpdated();
      doReturn(false).when(tableColumnMeta0).isNullable();
      TableColumn tableColumn0 = new TableColumn((Table) null, tableColumnMeta0);
      foreignKeyConstraint0.addChildColumn(tableColumn0);
      foreignKeyConstraint0.getDeleteRuleDescription();
      List<TableColumn> list0 = foreignKeyConstraint0.getChildColumns();
      ForeignKeyConstraint.toString(list0);
      foreignKeyConstraint0.isNullOnDelete();
      ForeignKeyConstraint.toString(list0);
      foreignKeyConstraint0.getDeleteRuleName();
      foreignKeyConstraint0.isReal();
      foreignKeyConstraint0.getDeleteRuleAlias();
      // Undeclared exception!
      try { 
        foreignKeyConstraint0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.ForeignKeyConstraint", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.209105991736338
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Re}trct delete");
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "Re}trct delete", 2674, 2674);
      foreignKeyConstraint0.getDeleteRuleDescription();
      byte[] byteArray0 = new byte[6];
      byteArray0[1] = (byte) (-37);
      byteArray0[4] = (byte) (-37);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "", (byte)0, (byte) (-37));
      foreignKeyConstraint0.getDeleteRuleName();
      System.setCurrentTimeMillis((byte) (-37));
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      int int0 = foreignKeyConstraint1.compareTo(foreignKeyConstraint0);
      assertEquals((-14), int0);
      
      boolean boolean0 = foreignKeyConstraint0.isRestrictDelete();
      assertFalse(boolean0);
      
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Config.getInstance();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      foreignKeyConstraint0.getDeleteRuleName();
      assertEquals(2674, foreignKeyConstraint0.getUpdateRule());
      
      foreignKeyConstraint1.getName();
      foreignKeyConstraint1.getDeleteRuleName();
      assertEquals((-37), foreignKeyConstraint1.getDeleteRule());
      assertEquals(0, foreignKeyConstraint1.getUpdateRule());
      assertFalse(foreignKeyConstraint1.isRestrictDelete());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.0847382075593552
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "w27_R$z$/;SY{UA", 2, 32);
      foreignKeyConstraint0.getDeleteRuleDescription();
      foreignKeyConstraint0.getDeleteRuleAlias();
      foreignKeyConstraint0.getDeleteRuleDescription();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-37);
      byteArray0[1] = (byte)39;
      byteArray0[2] = (byte) (-37);
      byteArray0[3] = (byte) (-37);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "", 2, 1);
      String string0 = foreignKeyConstraint1.getDeleteRuleName();
      assertTrue(foreignKeyConstraint1.isRestrictDelete());
      assertEquals("Restrict delete", string0);
      
      System.setCurrentTimeMillis(1);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      int int0 = new Integer((byte)39);
      foreignKeyConstraint0.getDeleteRuleDescription();
      boolean boolean0 = foreignKeyConstraint0.isRestrictDelete();
      assertEquals(2, foreignKeyConstraint0.getUpdateRule());
      assertFalse(boolean0);
      
      Config.getInstance();
      boolean boolean1 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Table table0 = null;
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta0).getComments();
      doReturn((String) null).when(tableColumnMeta0).getDefaultValue();
      doReturn(0).when(tableColumnMeta0).getDigits();
      doReturn((String) null).when(tableColumnMeta0).getId();
      doReturn((String) null).when(tableColumnMeta0).getName();
      doReturn(0).when(tableColumnMeta0).getSize();
      doReturn((String) null).when(tableColumnMeta0).getType();
      doReturn(false).when(tableColumnMeta0).isAutoUpdated();
      doReturn(false).when(tableColumnMeta0).isNullable();
      TableColumn tableColumn0 = new TableColumn((Table) null, tableColumnMeta0);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "Null on delete", (-3619), 3);
      foreignKeyConstraint0.getUpdateRule();
      TableColumnMeta tableColumnMeta1 = null;
      TableColumn tableColumn1 = null;
      try {
        tableColumn1 = new TableColumn((Table) null, (TableColumnMeta) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.TableColumn", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.0865815255317055
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "w27_R$z$/;SY{UA", 2, 0);
      foreignKeyConstraint0.getDeleteRuleDescription();
      String string0 = foreignKeyConstraint0.getDeleteRuleAlias();
      assertEquals("C", string0);
      
      DatabaseMetaData databaseMetaData0 = mock(DatabaseMetaData.class, new ViolatedAssumptionAnswer());
      foreignKeyConstraint0.getDeleteRuleName();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      foreignKeyConstraint0.getDeleteRuleDescription();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)17;
      byteArray0[1] = (byte) (-127);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "C", 0, 357);
      assertFalse(foreignKeyConstraint1.isRestrictDelete());
      assertEquals(357, foreignKeyConstraint1.getDeleteRule());
      
      String string1 = foreignKeyConstraint0.getDeleteRuleName();
      assertEquals("Cascade on delete", string1);
      
      System.setCurrentTimeMillis((byte)14);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String string2 = foreignKeyConstraint0.getDeleteRuleDescription();
      assertEquals("Cascade on delete:\n Deletion of parent deletes child", string2);
      
      boolean boolean0 = foreignKeyConstraint0.isRestrictDelete();
      assertEquals(2, foreignKeyConstraint0.getUpdateRule());
      assertFalse(boolean0);
      
      Config.getInstance();
      boolean boolean1 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Cascade on delete:\n Deletion of parent deletes child");
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.5280883009539776
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String string0 = "Re}trct delete";
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "Re}trct delete", 61, 3);
      foreignKeyConstraint0.getDeleteRuleDescription();
      foreignKeyConstraint0.isRestrictDelete();
      Config config0 = Config.getInstance();
      // Undeclared exception!
      try { 
        config0.asList();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Required parameter '-u' was not specified.
         //
         verifyException("net.sourceforge.schemaspy.Config", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.2065186083519084
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "w27_R$z$/;SY{UA", 2, 32);
      foreignKeyConstraint0.getDeleteRuleDescription();
      foreignKeyConstraint0.getDeleteRuleAlias();
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "~(j*MhZm`1JF9", (-1511), (-1132));
      foreignKeyConstraint1.getDeleteRuleDescription();
      foreignKeyConstraint1.getDeleteRuleAlias();
      foreignKeyConstraint1.getDeleteRuleName();
      foreignKeyConstraint1.getDeleteRuleName();
      System.setCurrentTimeMillis(1776L);
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      foreignKeyConstraint1.compareTo(foreignKeyConstraint0);
      foreignKeyConstraint0.getDeleteRuleDescription();
      Config.getInstance();
      boolean boolean1 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "Re}trct delete", 2674, 2674);
      List<TableColumn> list0 = foreignKeyConstraint0.getChildColumns();
      foreignKeyConstraint0.compareTo(foreignKeyConstraint0);
      foreignKeyConstraint0.getChildColumns();
      foreignKeyConstraint0.getChildTable();
      foreignKeyConstraint0.getParentColumns();
      ForeignKeyConstraint.toString(list0);
      Config config0 = null;
      String string0 = null;
      SchemaMeta schemaMeta0 = null;
      try {
        schemaMeta0 = new SchemaMeta("N", (String) null, "N");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Specified meta file \"N\" does not exist
         //
         verifyException("net.sourceforge.schemaspy.model.xml.SchemaMeta", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.5280883009539779
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "Failed to collect column details for ", 300, 0);
      String string0 = foreignKeyConstraint0.getDeleteRuleDescription();
      assertEquals("Cascade on delete:\n Deletion of parent deletes child", string0);
      
      boolean boolean0 = foreignKeyConstraint0.isCascadeOnDelete();
      assertEquals(300, foreignKeyConstraint0.getUpdateRule());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.5280883009539779
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DatabaseMetaData databaseMetaData0 = mock(DatabaseMetaData.class, new ViolatedAssumptionAnswer());
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "y#!|CQ\"WFyu3/rBE==C", 46, (-3));
      foreignKeyConstraint0.getDeleteRuleDescription();
      foreignKeyConstraint0.isCascadeOnDelete();
      Config config0 = new Config();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      String string0 = "net.sourceforge.schemaspy.model.ForeignKeyConstraint";
      String string1 = ":view";
      String string2 = null;
      String string3 = "i+iD nrIXY";
      SchemaMeta schemaMeta0 = null;
      try {
        schemaMeta0 = new SchemaMeta("+!s-5y", ":view", "i+iD nrIXY");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Specified meta file \"+!s-5y\" does not exist
         //
         verifyException("net.sourceforge.schemaspy.model.xml.SchemaMeta", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.0163561792644664
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[6];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byteArray0[0] = (byte) (-64);
      byteArray0[1] = (byte) (-90);
      byteArray0[2] = (byte)99;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      byteArray0[3] = (byte) (-64);
      byteArray0[4] = (byte)88;
      byteArray0[5] = (byte)17;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, (String) null, 762, 2);
      String string0 = foreignKeyConstraint0.getDeleteRuleDescription();
      assertEquals("Null on delete:\n Foreign key to parent set to NULL when parent deleted", string0);
      
      boolean boolean0 = foreignKeyConstraint0.isRestrictDelete();
      assertFalse(boolean0);
      
      Config.getInstance();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "UTF-8");
      String string1 = foreignKeyConstraint0.getDeleteRuleAlias();
      assertEquals("N", string1);
      
      foreignKeyConstraint0.getParentTable();
      assertEquals(762, foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.352520146899924
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", 5983, 5983);
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      foreignKeyConstraint0.getDeleteRuleDescription();
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "DOMAIN", 1, 1);
      foreignKeyConstraint0.getDeleteRuleName();
      System.setCurrentTimeMillis((byte) (-29));
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      int int0 = foreignKeyConstraint0.compareTo(foreignKeyConstraint1);
      assertEquals((-6), int0);
      
      foreignKeyConstraint0.getDeleteRuleDescription();
      boolean boolean0 = foreignKeyConstraint1.isRestrictDelete();
      assertTrue(boolean0);
      
      Config.getInstance();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      foreignKeyConstraint0.getDeleteRuleAlias();
      assertFalse(foreignKeyConstraint0.isRestrictDelete());
      assertEquals(5983, foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.038062386423303
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "w27_R$z$/;SY{UA", 2, 32);
      foreignKeyConstraint0.getDeleteRuleDescription();
      foreignKeyConstraint0.getDeleteRuleAlias();
      FileSystemHandling.shouldAllThrowIOExceptions();
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "~(j*MhZm`1JF9", 1, (-1132));
      foreignKeyConstraint1.getDeleteRuleDescription();
      foreignKeyConstraint1.getDeleteRuleAlias();
      foreignKeyConstraint0.getDeleteRuleName();
      foreignKeyConstraint1.getDeleteRuleName();
      foreignKeyConstraint0.getDeleteRuleAlias();
      boolean boolean0 = foreignKeyConstraint0.isNullOnDelete();
      assertFalse(boolean0);
      
      foreignKeyConstraint1.getDeleteRuleName();
      System.setCurrentTimeMillis(1L);
      foreignKeyConstraint1.getDeleteRuleDescription();
      assertFalse(foreignKeyConstraint1.isNullOnDelete());
      assertEquals((-1132), foreignKeyConstraint1.getDeleteRule());
      assertEquals(1, foreignKeyConstraint1.getUpdateRule());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.162202193952249
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "w27_R$z$/;SY{UA", 2, 32);
      foreignKeyConstraint0.getDeleteRuleDescription();
      foreignKeyConstraint0.getDeleteRuleAlias();
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "", 1, (-1132));
      foreignKeyConstraint1.getDeleteRuleDescription();
      foreignKeyConstraint1.getDeleteRuleAlias();
      foreignKeyConstraint0.getDeleteRuleName();
      FileSystemHandling.shouldAllThrowIOExceptions();
      foreignKeyConstraint1.getDeleteRuleName();
      foreignKeyConstraint0.getDeleteRuleAlias();
      assertFalse(foreignKeyConstraint0.isNullOnDelete());
      
      boolean boolean0 = foreignKeyConstraint1.isNullOnDelete();
      assertFalse(boolean0);
      
      foreignKeyConstraint1.getDeleteRuleName();
      System.setCurrentTimeMillis(1251L);
      foreignKeyConstraint1.getChildTable();
      assertEquals(1, foreignKeyConstraint1.getUpdateRule());
      assertEquals((-1132), foreignKeyConstraint1.getDeleteRule());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", 5983, 5983);
      foreignKeyConstraint0.isCascadeOnDelete();
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "4{D3", 5983, (-1));
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      System.setCurrentTimeMillis((-1));
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.7576378583071737
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DatabaseMetaData databaseMetaData0 = mock(DatabaseMetaData.class, new ViolatedAssumptionAnswer());
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "!?hu~FXCVzHf", 0, 1220);
      foreignKeyConstraint0.getDeleteRuleDescription();
      foreignKeyConstraint0.getChildColumns();
      int int0 = foreignKeyConstraint0.getUpdateRule();
      assertEquals(1220, foreignKeyConstraint0.getDeleteRule());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.02285770806073
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      String string0 = "l85W1Qc\\0+?DK4";
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "l85W1Qc\u0000+?DK4", 2, 2);
      foreignKeyConstraint0.getDeleteRuleDescription();
      foreignKeyConstraint0.getChildColumns();
      foreignKeyConstraint0.getDeleteRuleAlias();
      foreignKeyConstraint0.getDeleteRuleName();
      Config config0 = new Config();
      config0.setRailsEnabled(true);
      config0.isRankDirBugEnabled();
      String string1 = "j_tdywUB";
      foreignKeyConstraint0.getDeleteRule();
      SchemaMeta schemaMeta0 = null;
      try {
        schemaMeta0 = new SchemaMeta("", "Null on delete", "Cascade on delete:\n Deletion of parent deletes child");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Meta directory \"\" must contain a file named \"Cascade on delete:
         //  Deletion of parent deletes child.meta.xml\"
         //
         verifyException("net.sourceforge.schemaspy.model.xml.SchemaMeta", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.0166644032657226
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "Re}trct delete", 2674, 2674);
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "Re}trct delete", (-1864), 1);
      foreignKeyConstraint0.getDeleteRuleDescription();
      foreignKeyConstraint1.getDeleteRuleAlias();
      String string0 = foreignKeyConstraint1.getDeleteRuleName();
      assertEquals("Restrict delete", string0);
      
      foreignKeyConstraint0.getDeleteRuleName();
      String string1 = foreignKeyConstraint1.getDeleteRuleAlias();
      assertEquals("R", string1);
      
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)17;
      byteArray0[1] = (byte)59;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ForeignKeyConstraint foreignKeyConstraint2 = new ForeignKeyConstraint((Table) null, "`N-Fh}P0Ltm)?*", 2674, 2674);
      String string2 = foreignKeyConstraint1.getDeleteRuleDescription();
      assertEquals("Restrict delete:\n Parent cannot be deleted if children exist", string2);
      
      boolean boolean0 = foreignKeyConstraint1.isRestrictDelete();
      assertTrue(boolean0);
      assertEquals((-1864), foreignKeyConstraint1.getUpdateRule());
      
      Config.getInstance();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Restrict delete");
      foreignKeyConstraint0.getDeleteRuleAlias();
      assertFalse(foreignKeyConstraint0.isRestrictDelete());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.0897561287063087
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "w27_R$z$/;SY{UA", 2, 2);
      foreignKeyConstraint0.getDeleteRuleDescription();
      foreignKeyConstraint0.getDeleteRuleAlias();
      DatabaseMetaData databaseMetaData0 = mock(DatabaseMetaData.class, new ViolatedAssumptionAnswer());
      foreignKeyConstraint0.getDeleteRuleName();
      foreignKeyConstraint0.getDeleteRuleName();
      foreignKeyConstraint0.getDeleteRuleAlias();
      String string0 = foreignKeyConstraint0.getDeleteRuleName();
      assertEquals("Null on delete", string0);
      
      String string1 = foreignKeyConstraint0.getDeleteRuleDescription();
      assertEquals("Null on delete:\n Foreign key to parent set to NULL when parent deleted", string1);
      
      boolean boolean0 = foreignKeyConstraint0.isRestrictDelete();
      assertFalse(boolean0);
      
      Config.getInstance();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Null on delete:\n Foreign key to parent set to NULL when parent deleted");
      foreignKeyConstraint0.getDeleteRuleAlias();
      String string2 = foreignKeyConstraint0.getDeleteRuleAlias();
      assertEquals("N", string2);
      assertEquals(2, foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      String string0 = "Re}trct delete";
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "Re}trct delete", 2674, 2674);
      foreignKeyConstraint0.addChildColumn((TableColumn) null);
      foreignKeyConstraint0.getChildColumns();
      foreignKeyConstraint0.addParentColumn((TableColumn) null);
      foreignKeyConstraint0.getParentColumns();
      // Undeclared exception!
      try { 
        foreignKeyConstraint0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.ForeignKeyConstraint", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.7975084293448078
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, (String) null, 2, 104);
      foreignKeyConstraint0.getDeleteRuleDescription();
      int int0 = foreignKeyConstraint0.getUpdateRule();
      assertEquals(2, int0);
      
      foreignKeyConstraint0.getDeleteRuleAlias();
      System.setCurrentTimeMillis(2);
      foreignKeyConstraint0.getDeleteRuleDescription();
      assertEquals(104, foreignKeyConstraint0.getDeleteRule());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "Re}trct delete", 2674, 2674);
      foreignKeyConstraint0.getChildColumns();
      // Undeclared exception!
      try { 
        foreignKeyConstraint0.compareTo((ForeignKeyConstraint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.ForeignKeyConstraint", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      EvoSuiteFile evoSuiteFile0 = null;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)91;
      byteArray0[1] = (byte)8;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)2;
      byteArray0[5] = (byte)6;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "ur");
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "ur", 5983, 5983);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      LinkedList<TableColumn> linkedList0 = new LinkedList<TableColumn>();
      ForeignKeyConstraint.toString((List<TableColumn>) linkedList0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "ur");
      // Undeclared exception!
      try { 
        foreignKeyConstraint0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.ForeignKeyConstraint", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      // Undeclared exception!
      try { 
        ForeignKeyConstraint.toString((List<TableColumn>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.ForeignKeyConstraint", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.1562371055889518
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", 5983, 5983);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      byte[] byteArray0 = new byte[4];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArray0[0] = (byte) (-29);
      byteArray0[1] = (byte)2;
      foreignKeyConstraint0.getDeleteRuleDescription();
      byteArray0[2] = (byte)14;
      byteArray0[3] = (byte)2;
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "", 1, 5983);
      foreignKeyConstraint0.getDeleteRuleName();
      System.setCurrentTimeMillis(1);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      // Undeclared exception!
      try { 
        foreignKeyConstraint0.compareTo(foreignKeyConstraint1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, (String) null, (-741), 1203);
      foreignKeyConstraint0.getName();
      assertEquals((-741), foreignKeyConstraint0.getUpdateRule());
      assertEquals(1203, foreignKeyConstraint0.getDeleteRule());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.077057716007896
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "l85W1Qc\u0000+?DK4", 2, 609);
      foreignKeyConstraint0.getDeleteRuleDescription();
      foreignKeyConstraint0.getDeleteRuleAlias();
      foreignKeyConstraint0.getDeleteRuleName();
      Config config0 = new Config();
      String[] stringArray0 = new String[0];
      Config config1 = new Config(stringArray0);
      foreignKeyConstraint0.isRestrictDelete();
      String string0 = "j_tdywUB";
      SchemaMeta schemaMeta0 = null;
      try {
        schemaMeta0 = new SchemaMeta("UTF-8", "UTF-8", "");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Specified meta file \"UTF-8\" does not exist
         //
         verifyException("net.sourceforge.schemaspy.model.xml.SchemaMeta", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta0).getComments();
      doReturn((String) null).when(tableColumnMeta0).getDefaultValue();
      doReturn(0).when(tableColumnMeta0).getDigits();
      doReturn((String) null).when(tableColumnMeta0).getId();
      doReturn((String) null).when(tableColumnMeta0).getName();
      doReturn(0).when(tableColumnMeta0).getSize();
      doReturn((String) null).when(tableColumnMeta0).getType();
      doReturn(false).when(tableColumnMeta0).isAutoUpdated();
      doReturn(false).when(tableColumnMeta0).isNullable();
      TableColumn tableColumn0 = new TableColumn((Table) null, tableColumnMeta0);
      ForeignKeyConstraint foreignKeyConstraint0 = null;
      try {
        foreignKeyConstraint0 = new ForeignKeyConstraint(tableColumn0, tableColumn0, 15, (-23));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.TableColumn", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Table table0 = null;
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta0).getComments();
      doReturn((String) null).when(tableColumnMeta0).getDefaultValue();
      doReturn(0).when(tableColumnMeta0).getDigits();
      doReturn((String) null).when(tableColumnMeta0).getId();
      doReturn((String) null).when(tableColumnMeta0).getName();
      doReturn(0).when(tableColumnMeta0).getSize();
      doReturn((String) null).when(tableColumnMeta0).getType();
      doReturn(false).when(tableColumnMeta0).isAutoUpdated();
      doReturn(false).when(tableColumnMeta0).isNullable();
      TableColumn tableColumn0 = new TableColumn((Table) null, tableColumnMeta0);
      ForeignKeyConstraint foreignKeyConstraint0 = null;
      try {
        foreignKeyConstraint0 = new ForeignKeyConstraint(tableColumn0, tableColumn0, 2, 13);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.TableColumn", e);
      }
  }
}
