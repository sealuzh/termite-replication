/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 10:27:04 GMT 2019
 */

package client.network;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import client.BomberClient;
import client.network.ClientMsgReceiver;
import common.Map;
import java.awt.HeadlessException;
import java.io.BufferedOutputStream;
import java.io.ByteArrayOutputStream;
import java.io.FilterOutputStream;
import java.io.PrintStream;
import java.net.Proxy;
import java.net.URL;
import java.sql.SQLDataException;
import java.sql.SQLFeatureNotSupportedException;
import java.sql.SQLInvalidAuthorizationSpecException;
import java.sql.SQLSyntaxErrorException;
import java.sql.SQLTimeoutException;
import java.util.ArrayList;
import java.util.Locale;
import java.util.Stack;
import javax.swing.DebugGraphics;
import messages.global.GlobalStateMsg;
import messages.global.JoinAckMsg;
import messages.global.ScoreMsg;
import messages.round.CountdownMsg;
import messages.session.PlayerInfo;
import org.apache.log4j.helpers.OptionConverter;
import org.apache.log4j.spi.LoggerRepository;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.lang.MockThread;
import org.evosuite.runtime.mock.java.net.MockInetSocketAddress;
import org.evosuite.runtime.mock.java.net.MockSocket;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ClientMsgReceiver_ESTest extends ClientMsgReceiver_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Proxy.Type proxy_Type0 = Proxy.Type.SOCKS;
      MockInetSocketAddress mockInetSocketAddress0 = new MockInetSocketAddress(641);
      Proxy proxy0 = new Proxy(proxy_Type0, mockInetSocketAddress0);
      MockSocket mockSocket0 = new MockSocket(proxy0);
      mockInetSocketAddress0.getHostName();
      mockSocket0.getPort();
      mockSocket0.getKeepAlive();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.displayErrorMessage();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Proxy proxy0 = Proxy.NO_PROXY;
      MockSocket mockSocket0 = new MockSocket(proxy0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      MockSocket mockSocket1 = new MockSocket();
      byte[] byteArray0 = new byte[4];
      MockSocket mockSocket2 = new MockSocket();
      mockSocket2.getLocalSocketAddress();
      mockSocket2.getKeepAlive();
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      mockSocket0.getReuseAddress();
      mockSocket2.getSoLinger();
      mockSocket2.getLocalAddress();
      mockSocket0.getOOBInline();
      mockSocket1.setTcpNoDelay(false);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JoinAckMsg joinAckMsg0 = new JoinAckMsg(false, 27);
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket2, (BomberClient) null);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.processMsg(joinAckMsg0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[8];
      StackTraceElement stackTraceElement0 = new StackTraceElement("SHNTVOWN  ystem.exiM()is called next", "Unknown message type: ", "SHNTVOWN  ystem.exiM()is called next", 3583);
      stackTraceElementArray0[0] = stackTraceElement0;
      StackTraceElement stackTraceElement1 = new StackTraceElement("SHNTVOWN  ystem.exiM()is called next", "Unknown message type: ", ";uFkp", 3583);
      StackTraceElement stackTraceElement2 = new StackTraceElement("Unknown message type: ", "MSUZ^", "7*:5XR>}", 3583);
      stackTraceElementArray0[2] = stackTraceElement0;
      StackTraceElement stackTraceElement3 = new StackTraceElement("7*:5XR>}", "`R'v?n'0w`.}ob", "Unknown message type: ", 0);
      stackTraceElementArray0[3] = stackTraceElement0;
      StackTraceElement stackTraceElement4 = new StackTraceElement("!6x~", "Server will stop...", "You have tried to set a null level to root.", 0);
      stackTraceElementArray0[4] = stackTraceElement4;
      StackTraceElement stackTraceElement5 = new StackTraceElement("Unknown message type: ", "Unknown message type: ", "Unknown message type: ", 0);
      stackTraceElementArray0[5] = stackTraceElement5;
      StackTraceElement stackTraceElement6 = new StackTraceElement(";uFkp", "Unknown message type: ", "!6x~", 0);
      stackTraceElementArray0[6] = stackTraceElement6;
      StackTraceElement stackTraceElement7 = new StackTraceElement("", "`R'v?n'0w`.}ob", (String) null, 0);
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      ScoreMsg scoreMsg0 = new ScoreMsg((ArrayList) null);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.processMsg(scoreMsg0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("messages.global.ScoreMsg", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Proxy proxy0 = Proxy.NO_PROXY;
      MockSocket mockSocket0 = new MockSocket(proxy0);
      BomberClient bomberClient0 = BomberClient.getInstance();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, bomberClient0);
      int int0 = (-3475);
      GlobalStateMsg globalStateMsg0 = new GlobalStateMsg(int0);
      CountdownMsg countdownMsg0 = new CountdownMsg(globalStateMsg0.SESSION_NAME_TAKEN);
      CountdownMsg countdownMsg1 = new CountdownMsg(globalStateMsg0.WRONG_PASSWORD);
      clientMsgReceiver0.processMsg(countdownMsg1);
      Stack<PlayerInfo> stack0 = new Stack<PlayerInfo>();
      String string0 = "";
      Map map0 = null;
      try {
        map0 = new Map(string0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("common.XmlFunctions", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[8];
      StackTraceElement stackTraceElement0 = new StackTraceElement("SHUTDOWN  ystem.exit()is called next", "Unknown message type: ", "SHUTDOWN  ystem.exit()is called next", 3583);
      stackTraceElementArray0[0] = stackTraceElement0;
      StackTraceElement stackTraceElement1 = new StackTraceElement("SHUTDOWN  ystem.exit()is called next", "Unknown message type: ", ";uFkp", 3583);
      StackTraceElement stackTraceElement2 = new StackTraceElement("Unknown message type: ", "MSUZ^", "7*:5XR>}", 3583);
      stackTraceElementArray0[2] = stackTraceElement0;
      StackTraceElement stackTraceElement3 = new StackTraceElement("7*:5XR>}", "`R'v?n'0w`.}ob", "Unknown message type: ", 0);
      stackTraceElementArray0[3] = stackTraceElement0;
      StackTraceElement stackTraceElement4 = new StackTraceElement("!6x~", "Server will stop...", "You have tried to set a null level to root.", 0);
      stackTraceElementArray0[4] = stackTraceElement4;
      StackTraceElement stackTraceElement5 = new StackTraceElement("Unknown message type: ", "Unknown message type: ", "Unknown message type: ", 0);
      stackTraceElementArray0[5] = stackTraceElement5;
      StackTraceElement stackTraceElement6 = new StackTraceElement(";uFkp", "Unknown message type: ", "!6x~", 0);
      stackTraceElementArray0[6] = stackTraceElement6;
      StackTraceElement stackTraceElement7 = new StackTraceElement("", "`R'v?n'0w`.}ob", (String) null, 0);
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      ScoreMsg scoreMsg0 = new ScoreMsg((ArrayList) null);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.processMsg(scoreMsg0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("messages.global.ScoreMsg", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[8];
      StackTraceElement stackTraceElement0 = new StackTraceElement("SHUTDOWN  ystem.exit()is called next", "Unknown message type: ", "SHUTDOWN  ystem.exit()is called next", 3583);
      stackTraceElementArray0[0] = stackTraceElement0;
      StackTraceElement stackTraceElement1 = new StackTraceElement("SHUTDOWN  ystem.exit()is called next", "Unknown message type: ", "Fk}Z", 3583);
      StackTraceElement stackTraceElement2 = new StackTraceElement("Unknown message type: ", "MSUZ^", "7*:5XR>}", 3583);
      stackTraceElementArray0[2] = stackTraceElement0;
      StackTraceElement stackTraceElement3 = new StackTraceElement("7*:5XR>}", "`R'v?n'0w`.}ob", "Unknown message type: ", 0);
      stackTraceElementArray0[3] = stackTraceElement3;
      StackTraceElement stackTraceElement4 = new StackTraceElement("!6x~", "Server will stop...", "You have tried to set a null level to root.", 0);
      stackTraceElementArray0[4] = stackTraceElement4;
      StackTraceElement stackTraceElement5 = new StackTraceElement("Unknown message type: ", "Unknown message type: ", "Unknown message type: ", 0);
      stackTraceElementArray0[5] = stackTraceElement5;
      StackTraceElement stackTraceElement6 = new StackTraceElement("Fk}Z", "Unknown message type: ", "!6x~", 0);
      stackTraceElementArray0[6] = stackTraceElement6;
      StackTraceElement stackTraceElement7 = new StackTraceElement("", "`R'v?n'0w`.}ob", (String) null, 0);
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      ScoreMsg scoreMsg0 = new ScoreMsg((ArrayList) null);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.processMsg(scoreMsg0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("messages.global.ScoreMsg", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Proxy proxy0 = Proxy.NO_PROXY;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      SQLInvalidAuthorizationSpecException sQLInvalidAuthorizationSpecException0 = new SQLInvalidAuthorizationSpecException("3");
      SQLFeatureNotSupportedException sQLFeatureNotSupportedException0 = new SQLFeatureNotSupportedException((String) null, sQLInvalidAuthorizationSpecException0);
      SQLTimeoutException sQLTimeoutException0 = new SQLTimeoutException("3", "BU", 125, sQLInvalidAuthorizationSpecException0);
      sQLTimeoutException0.getSuppressed();
      String string0 = "client.gui.GlobalHighscoreLobby";
      SQLTimeoutException sQLTimeoutException1 = new SQLTimeoutException("client.gui.GlobalHighscoreLobby", "XR%T(o!w3UvVtK", 34, sQLInvalidAuthorizationSpecException0);
      BomberClient bomberClient0 = BomberClient.getInstance();
      bomberClient0.setPlayerName(string0);
      ClientMsgReceiver clientMsgReceiver0 = null;
      try {
        clientMsgReceiver0 = new ClientMsgReceiver(bomberClient0.server, bomberClient0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("common.network.MsgReceiver", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      MockSocket mockSocket0 = new MockSocket();
      mockSocket0.getKeepAlive();
      mockSocket0.getReuseAddress();
      FileSystemHandling.shouldAllThrowIOExceptions();
      System.setCurrentTimeMillis((-206L));
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      SQLDataException sQLDataException0 = new SQLDataException("", "Hh8Q");
      sQLDataException0.fillInStackTrace();
      SQLSyntaxErrorException sQLSyntaxErrorException0 = new SQLSyntaxErrorException(sQLDataException0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(byteArrayOutputStream0);
      FilterOutputStream filterOutputStream0 = new FilterOutputStream(bufferedOutputStream0);
      BufferedOutputStream bufferedOutputStream1 = new BufferedOutputStream(filterOutputStream0, 232);
      MockPrintStream mockPrintStream0 = new MockPrintStream(bufferedOutputStream1);
      sQLSyntaxErrorException0.printStackTrace((PrintStream) mockPrintStream0);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.handleConnectionLoss(sQLSyntaxErrorException0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Proxy proxy0 = Proxy.NO_PROXY;
      MockSocket mockSocket0 = new MockSocket(proxy0);
      SQLTimeoutException sQLTimeoutException0 = new SQLTimeoutException();
      SQLFeatureNotSupportedException sQLFeatureNotSupportedException0 = new SQLFeatureNotSupportedException("SHUTDOWN : System.exit() is called next", sQLTimeoutException0);
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[8];
      StackTraceElement stackTraceElement0 = new StackTraceElement("SHUTDOWN : System.exit() is called next", "D~$s1jh;H|", "SHUTDOWN : System.exit() is called next", 3583);
      stackTraceElementArray0[0] = stackTraceElement0;
      StackTraceElement stackTraceElement1 = new StackTraceElement("SHUTDOWN : System.exit() is called next", "D~$s1jh;H|", "client.network.ClientMsgReceiver", (-2496));
      stackTraceElementArray0[1] = stackTraceElement1;
      StackTraceElement stackTraceElement2 = new StackTraceElement("=|Eu)g9a$e2U", "MuSU^", "7*:5XR>}", (-2496));
      stackTraceElementArray0[2] = stackTraceElement2;
      StackTraceElement stackTraceElement3 = new StackTraceElement("7*:5XR>}", "`R'v?n'0w`b", "D~$s1jh;H|", 0);
      stackTraceElementArray0[3] = stackTraceElement3;
      StackTraceElement stackTraceElement4 = new StackTraceElement("=|Eu)g9a$e2U", "Server will stop...", "You have tried to set a null level to root.", 0);
      stackTraceElementArray0[4] = stackTraceElement4;
      StackTraceElement stackTraceElement5 = new StackTraceElement("D~$s1jh;H|", "Unknown message type: ", "Unknown message type: ", 0);
      stackTraceElementArray0[5] = stackTraceElement5;
      StackTraceElement stackTraceElement6 = new StackTraceElement("client.network.ClientMsgReceiver", "Unknown message type: ", "CONNECTION LOST", 0);
      stackTraceElementArray0[6] = stackTraceElement6;
      StackTraceElement stackTraceElement7 = new StackTraceElement("D~$s1jh;H|", "S/sP':,s]|ynB1l/7q2", "CONNECTION LOST", 0);
      stackTraceElementArray0[7] = stackTraceElement7;
      sQLTimeoutException0.setStackTrace(stackTraceElementArray0);
      sQLFeatureNotSupportedException0.spliterator();
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      SQLTimeoutException sQLTimeoutException1 = new SQLTimeoutException("Qz:|;]>+o.Ne|6z3", "", 3583, sQLTimeoutException0);
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      Thread.UncaughtExceptionHandler thread_UncaughtExceptionHandler0 = clientMsgReceiver0.getUncaughtExceptionHandler();
      URL uRL0 = MockURL.getFtpExample();
      LoggerRepository loggerRepository0 = mock(LoggerRepository.class, new ViolatedAssumptionAnswer());
      OptionConverter.selectAndConfigure(uRL0, "=YL", loggerRepository0);
      MockThread.setDefaultUncaughtExceptionHandler(thread_UncaughtExceptionHandler0);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.closeConnection();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("client.network.ClientMsgReceiver", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      Proxy proxy0 = Proxy.NO_PROXY;
      MockSocket mockSocket0 = new MockSocket(proxy0);
      MockThread.interrupted();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      PrintStream printStream0 = DebugGraphics.logStream();
      FilterOutputStream filterOutputStream0 = new FilterOutputStream(byteArrayOutputStream0);
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(byteArrayOutputStream0);
      FilterOutputStream filterOutputStream1 = new FilterOutputStream(printStream0);
      byteArrayOutputStream0.close();
      byte[] byteArray0 = new byte[3];
      printStream0.write(byteArray0);
      printStream0.close();
      Locale locale0 = Locale.ENGLISH;
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) byteArrayOutputStream0;
      Object object0 = new Object();
      objectArray0[1] = object0;
      objectArray0[2] = (Object) filterOutputStream0;
      Object object1 = new Object();
      objectArray0[3] = object1;
      objectArray0[4] = (Object) proxy0;
      objectArray0[5] = (Object) proxy0;
      objectArray0[6] = (Object) bufferedOutputStream0;
      BufferedOutputStream bufferedOutputStream1 = new BufferedOutputStream(filterOutputStream1, 1);
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.displayErrorMessage();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }
}
