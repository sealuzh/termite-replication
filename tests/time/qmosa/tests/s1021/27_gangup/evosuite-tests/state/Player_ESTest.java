/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 05:41:05 GMT 2019
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.FilterInputStream;
import java.io.FilterOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.SequenceInputStream;
import java.io.UnsupportedEncodingException;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Packable;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.688656384655456
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Player player0 = new Player(1, "state.Player$JoinInfo", "", 1, 1465);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      player0.gangStrength();
      Player player1 = new Player((-2199), "state.Player$JoinInfo", 1);
      player1.setDead((long) (short)4919);
      assertEquals(4919L, player1.getTimeOfDeath());
      
      Player player2 = new Player(1, "{I@=?@", "module.ModuleBrowserDialog$ModuleFilter", (short)4919);
      player2.setJoinOK(player0, false);
      boolean boolean0 = player2.isJoinOK(player0, false);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.970620935502287
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Player player0 = new Player(3, (String) null, "", (-187), (-187));
      Player player1 = new Player();
      player0.setDead();
      player0.getIP();
      Player player2 = new Player(1);
      player2.setDead();
      player0.getX();
      player2.pack();
      assertEquals(1392409281320L, player2.getTimeOfDeath());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.4338006812941
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Player player0 = new Player(2147340491, (String) null, 827);
      player0.getTimeOfDeath();
      player0.setDead();
      player0.getY();
      Player player1 = new Player(855, (String) null, (String) null, 2563, 10);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)10;
      player1.setJoinOK(player0, true);
      player1.setMoney((-13.470608F));
      byteArray0[1] = (byte)5;
      player1.unpack(byteArray0);
      player0.add(player1);
      player0.setZ((-1636.0F));
      player0.getName();
      player0.getStrength();
      System.setCurrentTimeMillis((-1401L));
      player0.getStrength();
      player0.getStrength();
      player1.remove(player0);
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.177748603358313
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Player player0 = new Player(1, "2Ar08F\"p%RXa9+80Z", "!/", 1);
      byte[] byteArray0 = player0.pack();
      player0.getSubparty();
      player0.getSubparty();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      player0.setMoney(1998.0F);
      Player player1 = new Player((short)4919, "!/", (-538));
      player0.remove(player1);
      Player player2 = new Player(768, "", ".*[.]class$", 768, (short)4919);
      player2.getSubparty();
      player2.unpack(byteArray0);
      Player player3 = new Player(1, "", 1960);
      player3.gangStrength();
      player3.setY(768);
      Player player4 = new Player((short)4919, "|{D7t]25(hk7r", "", 1, (short)4919);
      player1.setY(0.0F);
      player0.getZ();
      player2.setMoney((short)4919);
      Player player5 = new Player(768);
      player2.getTimeOfDeath();
      float float0 = player3.getY();
      assertEquals(768.0F, float0, 0.01F);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.0497978423100225
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Player player0 = new Player((-1), "p~?z>`@/Mh+", "4ZRy", (-1));
      player0.setDead();
      player0.setZ((-2665.0F));
      player0.getStrength();
      Player player1 = new Player();
      player0.isJoinOK(player1, false);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)10;
      byteArray0[1] = (byte)3;
      byteArray0[2] = (byte)46;
      byteArray0[3] = (byte) (-71);
      byteArray0[4] = (byte) (-104);
      byteArray0[5] = (byte) (-114);
      player1.setY(227.2F);
      player0.getZ();
      player0.setMoney(0.0F);
      Player player2 = new Player((byte) (-71));
      player2.setMoney((byte)46);
      assertEquals(46.0F, player2.getMoney(), 0.01F);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.9440256153973703
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player();
      byte[] byteArray0 = player1.pack();
      Player player2 = new Player((short)4919, "4f:D", "4f:D", (-29439), (-29439));
      player2.isJoinOK(player1, false);
      player2.getZ();
      player1.setX(0.0F);
      player2.gangStrength();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player2.unpack(dataInputStream0);
      assertEquals(0.0F, player1.getX(), 0.01F);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Player player0 = new Player(1, "5h", (String) null, 1);
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.267949945418531
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player(4919, (String) null, (String) null, 5);
      Player player1 = new Player((-2773), (String) null, "", 1780, 1309);
      player0.prev = (Party) player1;
      player1.head = (Party) player0;
      player1.prev = player0.prev;
      assertEquals(1780, player1.getPictureId());
      assertEquals(1309, player1.getStrength());
      
      player0.prev.id = (-4730);
      float float0 = player0.getZ();
      assertEquals(0.0F, float0, 0.01F);
      
      player0.toString();
      player0.toString();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player((-26472), "", 1300);
      Party party0 = new Party();
      player0.add(party0);
      Party party1 = new Party((-26472));
      FileSystemHandling.shouldAllThrowIOExceptions();
      player0.head = party1;
      player0.getZ();
      // Undeclared exception!
      try { 
        player0.gangStrength();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // state.Party cannot be cast to state.Player
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Player player0 = new Player((-17248), (String) null, (String) null, 2771, (-17248));
      int int0 = player0.gangStrength();
      assertEquals(2771, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals((-17248), int0);
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String string0 = "TwVeJ<";
      Player player0 = new Player(1, "TwVeJ<", 1);
      player0.setDead();
      player0.getTimeOfDeath();
      // Undeclared exception!
      try { 
        MockFile.createTempFile("", "TwVeJ<");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Prefix string too short
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.1998534797907348
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = player0.pack();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Player player1 = new Player(4, "=7mU\"|ps5", "", (short)4919, 1);
      player0.isJoinOK(player1, false);
      Player player2 = new Player(4, "", (-1));
      player2.remove(player1);
      player1.remove(player2);
      player1.getSubparty();
      player0.unpack(byteArray0);
      player0.setX(0.0F);
      Player player3 = new Player(1, "2Ar08F\"p%RXa9+80Z", "=7mU\"|ps5", (-1), (-29439));
      Player player4 = new Player();
      player1.setY((short)4919);
      player4.getZ();
      Player player5 = new Player();
      player5.setMoney(3319.3909F);
      player0.setMoney(0.1F);
      player1.getZ();
      assertEquals(4919.0F, player1.getY(), 0.01F);
      
      float float0 = player4.getY();
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.242894687106955
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Player player0 = new Player();
      player0.pack();
      Player player1 = new Player(4, "=7mU\"|ps5", "", (short)4919, 1);
      player1.isBoss();
      player1.getZ();
      player0.setX((-4191.979F));
      player0.getStrength();
      player1.gangStrength();
      player0.setX(0.0F);
      Player player2 = new Player((-130), "", "2Ar08F\"p%RXa9+80hZ", 473, 4);
      Player player3 = new Player();
      player1.setDead();
      player2.getIP();
      Player player4 = new Player((-29439));
      player3.setDead();
      assertEquals(1392409281320L, player3.getTimeOfDeath());
      
      float float0 = player4.getX();
      assertEquals(10.0F, float0, 0.01F);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Player player0 = new Player((-2284), "}^*&", (-2284));
      Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-91);
      byteArray0[3] = (byte)1;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte) (-127);
      byteArray0[7] = (byte)11;
      byteArray0[8] = (byte)2;
      sequenceInputStream0.read(byteArray0, 2, (int) (byte)2);
      sequenceInputStream0.markSupported();
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      player0.unpack(dataInputStream0);
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Player player0 = new Player(5, ";V93M#lVc", " ", 1200);
      player0.pack();
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertFalse(player0.isDead());
      assertEquals(";V93M#lVc", player0.getIP());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(boolean0);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(1200, player0.getPictureId());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.557702411245053
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Player player0 = new Player((-1084), "Bp Kf551N;u7", "+p~`t:L-IHys", (-1084));
      Player player1 = new Player(5, "+p~`t:L-IHys", "+p~`t:L-IHys", (-397), 5);
      player0.setJoinOK(player1, true);
      player0.getPictureId();
      player0.setMoney((-1084));
      assertEquals((-1084.0F), player0.getMoney(), 0.01F);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.673415053526696
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Player player0 = new Player(0);
      player0.getIP();
      Party party0 = player0.head;
      player0.boss = null;
      player0.setY(0);
      player0.getSubparty();
      player0.setConnected(false);
      player0.setDead((long) 0);
      player0.setZ(0);
      player0.getIP();
      player0.isDead();
      assertEquals(10.0F, player0.getX(), 0.01F);
      
      player0.setX(0);
      assertEquals(0.0F, player0.getZ(), 0.01F);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Player player0 = new Player((-187), "XubY_(JS+rJ1_'B*", "XubY_(JS+rJ1_'B*", (-187));
      boolean boolean0 = player0.isDead();
      assertFalse(boolean0);
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals((-187), player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(10.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.969755134636486
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Player player0 = new Player(4919, "", "", 3, 3);
      Player player1 = new Player();
      player1.getSubparty();
      player0.setMoney((-1.0F));
      player0.isJoinOK(player1, true);
      player1.getZ();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      player0.unpack(byteArray0);
      player0.setZ(0.2F);
      player0.setMoney((-4349.3F));
      player0.setMoney((-1327.7092F));
      player0.toString();
      player0.toString();
      assertEquals((-1327.7092F), player0.getMoney(), 0.01F);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.524673352026602
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player();
      player1.pack();
      player0.isJoinOK(player1, false);
      player0.getPictureId();
      player0.gangStrength();
      Player player2 = new Player(2008);
      player2.pack();
      player1.isConnected();
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("Player.unpack(): *** WARNING *** [IO] failed to unpack data: ", false);
      String string0 = "";
      try { 
        MockURI.URI("Player.unpack(): *** WARNING *** [IO] failed to unpack data: ", "nZ.{}F'\"wE7|X&8K\"B", "nZ.{}F'\"wE7|X&8K\"B", 0, "", "{mQ3q'[C%=>2p>HJ", "");
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Illegal character in scheme name at index 13: Player.unpack(): *** WARNING *** [IO] failed to unpack data: ://nZ.%7B%7DF'%22wE7%7CX&8K%22B@nZ.{}F'\"wE7|X&8K\"B:0?%7BmQ3q'[C%25=%3E2p%3EHJ#
         //
         verifyException("java.net.URI$Parser", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Player player0 = new Player(0, "", "AHC!ued", 4, 93);
      player0.getPictureId();
      // Undeclared exception!
      try { 
        player0.pack((DataOutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Player player0 = new Player((-211), "Y<xeHFK;]}WN5STqJ", 1);
      player0.toString();
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(1, player0.getPictureId());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Player player0 = new Player((-17252), "gui.ModuleBrowserDialog$ModuleFilter", "gui.ModuleBrowserDialog$ModuleFilter", 2794);
      // Undeclared exception!
      try { 
        player0.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Player player0 = new Player();
      player0.setDead();
      player0.isBoss();
      player0.isDead();
      player0.getSubparty();
      int int0 = Packable.PLAYER;
      player0.getName();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.5594415416798357
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Player player0 = new Player(0, "0.0.0.0", "", 0, 0);
      float float0 = player0.getX();
      assertEquals(10.0F, float0, 0.01F);
      
      player0.getName();
      Player player1 = new Player((-3429), "state.Player$JoinInfo", "", 0, (-2625));
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertFalse(boolean0);
      
      float float1 = player1.getY();
      assertFalse(player1.isDead());
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals("state.Player$JoinInfo", player1.getIP());
      assertEquals(0.0F, float1, 0.01F);
      assertEquals(0, player1.getPictureId());
      assertTrue(player1.isConnected());
      assertEquals((-2625), player1.getStrength());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Player player0 = new Player();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)10;
      byteArray0[1] = (byte)3;
      byteArray0[3] = (byte) (-71);
      byteArray0[4] = (byte) (-104);
      byteArray0[5] = (byte) (-114);
      byteArray0[6] = (byte)3;
      byteArray0[7] = (byte) (-113);
      byteArray0[8] = (byte) (-94);
      Party party0 = player0.gangBoss();
      player0.prev = party0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      dataInputStream0.readUnsignedByte();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      player0.unpack(dataInputStream0);
      assertEquals(6, byteArrayInputStream0.available());
      
      Player player1 = new Player();
      assertEquals(0.0F, player1.getY(), 0.01F);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.3048808282294293
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Player player0 = new Player(0);
      player0.setZ(0);
      Player player1 = new Player();
      player0.getSubparty();
      Player player2 = new Player((short)4919, ".*[.]class$", ".*[.]class$", (-586), (-816));
      player0.isJoinOK(player1, true);
      player1.getZ();
      Player player3 = new Player((-816));
      player0.setX(0);
      player0.gangStrength();
      player3.setX(0.1F);
      player0.reset(false);
      player3.setDead(458L);
      Player player4 = new Player((-586), "", (-17248));
      player4.setDead();
      player2.getIP();
      player4.setDead();
      assertEquals(1392409281320L, player4.getTimeOfDeath());
      
      player1.isBoss();
      player1.isDead();
      player1.getTimeOfDeath();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      boolean boolean0 = player1.unpack(dataInputStream0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Player player0 = new Player(5399);
      player0.getZ();
      player0.setX((-211));
      player0.getStrength();
      player0.setY(0.0F);
      OutputStream outputStream0 = null;
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream((OutputStream) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Null output stream
         //
         verifyException("java.io.PrintStream", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.9481072480504316
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Player player0 = new Player(3129, "", "~`mP\"Gd", 0, (-1690));
      Player player1 = new Player();
      player1.getSubparty();
      player1.setMoney((-532.344F));
      Player player2 = new Player(0);
      player1.isJoinOK(player2, true);
      player0.getZ();
      player1.setX((short)4919);
      player0.getStrength();
      player1.gangStrength();
      player1.setX(10.0F);
      Player player3 = new Player(666, "p:", "~`mP\"Gd", (short)4919, 0);
      Player player4 = new Player();
      player4.setY(0.1F);
      player0.getZ();
      player3.setMoney((-1.0F));
      player1.setMoney(0.1F);
      assertEquals(10.0F, player1.getX(), 0.01F);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Player player0 = new Player(2563, "Y<xeHFK;]}WN5STqJ", "", (-26472));
      Player player1 = new Player(1, "", 4919);
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertEquals("Y<xeHFK;]}WN5STqJ", player0.getIP());
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(4919, player1.getPictureId());
      assertFalse(player1.isDead());
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals(1, player1.getStrength());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertTrue(player1.isConnected());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Player player0 = new Player(325, " ", 325);
      float float0 = player0.getMoney();
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals(325, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0.0F, float0, 0.01F);
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Player player0 = new Player();
      // Undeclared exception!
      try { 
        player0.unpack((DataInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      int int0 = 1144;
      Player player0 = new Player(1144);
      Player player1 = new Player((short)4919);
      player0.head = (Party) player1;
      long long0 = 0L;
      boolean boolean0 = false;
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Player player0 = new Player((-17248), "gui.ModuleBrowserDialog$ModuleFilter", "Player.unpack(): *** WARNING *** [IO] failed to unpack data: ", 2794);
      Player player1 = new Player((short)4919, "", "Player.unpack(): *** WARNING *** [IO] failed to unpack data: ", (-4124));
      FilterOutputStream filterOutputStream0 = new FilterOutputStream((OutputStream) null);
      MockPrintStream mockPrintStream0 = new MockPrintStream(filterOutputStream0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream0);
      DataOutputStream dataOutputStream1 = new DataOutputStream(mockPrintStream0);
      // Undeclared exception!
      try { 
        player0.pack(dataOutputStream1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.FilterOutputStream", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Player player0 = new Player(4919, "", "", 3, 3);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      MockPrintStream mockPrintStream0 = new MockPrintStream(pipedOutputStream0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream0);
      player0.pack(dataOutputStream0);
      Player player1 = new Player();
      MockFile mockFile0 = new MockFile("", ".b*_Pzp,2lkPL9");
      mockFile0.mkdirs();
      String string0 = "}R&I]lDy1\"rOze";
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/.b*_Pzp,2lkPL9");
      FileSystemHandling.createFolder(evoSuiteFile0);
      String string1 = "";
      String string2 = " ";
      try { 
        MockURI.URI("}R&I]lDy1\"rOze", "", "", 4919, ".b*_Pzp,2lkPL9", "<@7", " ");
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Relative path in absolute URI: }R&I]lDy1\"rOze://@:4919.b*_Pzp,2lkPL9?%3C@7#%20
         //
         verifyException("java.net.URI", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.5168760810714366
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Player player0 = new Player(0);
      player0.setZ(0);
      player0.setX(0);
      player0.getPictureId();
      player0.gangStrength();
      Player player1 = new Player(1233);
      player1.pack();
      player0.isConnected();
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("Player.unpack(): *** WARNING *** [IO] failed to unpack data: ", true);
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream(mockFileOutputStream0, false, "Player.unpack(): *** WARNING *** [IO] failed to unpack data: ");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // Player.unpack(): *** WARNING *** [IO] failed to unpack data: 
         //
         verifyException("java.io.PrintStream", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      System.setCurrentTimeMillis((-2377L));
      Player player0 = new Player(1841, "M+&X&l", "M+&X&l", 1841);
      player0.getIP();
      assertFalse(player0.isDead());
      assertEquals(1841, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Player player0 = new Player(100, (String) null, (String) null, 0);
      Player player1 = new Player();
      player0.boss = (Party) player1;
      assertEquals("Player-1", player0.boss.toString());
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals(0, player1.getPictureId());
      
      int int0 = player0.type();
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getPictureId());
      assertEquals(5, int0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.027215791000468
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Player player0 = new Player();
      player0.id = 4;
      player0.setX(10.0F);
      player0.gangStrength();
      Player player1 = new Player((-2913), "", "", 4, 2446);
      player0.setJoinOK(player1, false);
      player0.gangStrength();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Player player2 = new Player(1, "*R )`)XcV8;", "*R )`)XcV8;", 4, 5);
      player2.setMoney(1.0F);
      player2.boss = (Party) player0;
      player0.isJoinOK(player2, false);
      player2.getMoney();
      player2.setDead((long) 4, false);
      assertEquals(4L, player2.getTimeOfDeath());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=3.242575707840607
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Player player0 = new Player();
      player0.pack();
      Player player1 = new Player(4, "=7mU\"|ps5", "", (short)4919, 1);
      player1.isJoinOK(player0, false);
      player1.getZ();
      player0.setX((-4191.979F));
      player0.getStrength();
      player1.gangStrength();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      player0.setX(0.0F);
      player0.setJoinOK(player1, true);
      Player player2 = new Player((-130), "", "2Ar08F\"p%RXa9+80Z", 473, 4);
      Player player3 = new Player();
      player3.setY(1);
      player3.getZ();
      player2.setMoney((-4332.8193F));
      player0.setMoney(1);
      assertEquals(0.0F, player0.getX(), 0.01F);
      
      player3.getZ();
      assertEquals("Player-1", player3.getName());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      String string0 = "TwVeJ<";
      Player player0 = new Player(1, "TwVeJ<", 1);
      player0.getX();
      // Undeclared exception!
      try { 
        MockFile.createTempFile("", "TwVeJ<");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Prefix string too short
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.5168760810714366
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Player player0 = new Player((-5261));
      player0.setZ(1.0F);
      player0.setX(0.0F);
      player0.setConnected(false);
      player0.setDead((long) (-5261), true);
      player0.gangStrength();
      player0.getZ();
      player0.type();
      player0.gangStrength();
      System.setCurrentTimeMillis(1392409281320L);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=3.027841181869761
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player();
      player1.pack();
      Player player2 = new Player(2794, "4f:D", "4f:D", (-1974), (-29439));
      player1.getZ();
      Player player3 = new Player(2);
      player2.setX(910.7648F);
      player1.gangStrength();
      player3.setX((-1974));
      player2.reset(true);
      player3.setDead(298L);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      player1.setDead(0L, false);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0, (short)4919);
      DataInputStream dataInputStream1 = new DataInputStream(bufferedInputStream0);
      player3.unpack(dataInputStream0);
      assertEquals((-1974.0F), player3.getX(), 0.01F);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.943159814531569
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Player player0 = new Player((-1618));
      byte[] byteArray0 = new byte[7];
      player0.setY((-1618));
      byteArray0[0] = (byte)55;
      Player player1 = new Player((byte)55, "Hf<H]#Y", "Hf<H]#Y", (-1618));
      player0.head = (Party) player1;
      byteArray0[1] = (byte) (-94);
      byteArray0[2] = (byte) (-114);
      byteArray0[3] = (byte) (-48);
      byteArray0[4] = (byte) (-67);
      player0.setDead();
      byteArray0[5] = (byte) (-77);
      byteArray0[6] = (byte) (-88);
      player0.unpack(byteArray0);
      player1.gangStrength();
      player0.setY(1257.13F);
      player0.setY(489.15414F);
      player1.getZ();
      player1.setMoney((byte) (-48));
      player0.setMoney(1.0F);
      assertEquals(489.15414F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Player player0 = new Player((-2232), "", "", 3);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-10);
      byteArray0[1] = (byte) (-116);
      player0.unpack(byteArray0);
      assertTrue(player0.isConnected());
      assertEquals(3, player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      String string0 = "S?w{M)ck6Q-";
      Player player0 = new Player((-211), "S?w{M)ck6Q-", (-211));
      player0.getZ();
      player0.setX((-211));
      int int0 = Packable.ACTION;
      int int1 = 473;
      String string1 = "";
      String string2 = "P-%hd4/1i`pZ";
      Player player1 = new Player(473, "", "P-%hd4/1i`pZ", (short)4919);
      player1.setY((short)4919);
      OutputStream outputStream0 = null;
      boolean boolean0 = true;
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream((OutputStream) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Null output stream
         //
         verifyException("java.io.PrintStream", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      String string0 = "2Ar08F\"p%RXa9+80Z";
      boolean boolean0 = false;
      Player player0 = new Player(1, "=7mU\"|ps5", "2Ar08F\"p%RXa9+80Z", (-1), (-29450));
      Player player1 = new Player(3420, "", (short)4919);
      player1.setDead();
      // Undeclared exception!
      try { 
        MockURI.relativize((URI) null, (URI) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURI", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Player player0 = new Player((-211), "Y<xeHFK;]}WN5STqJ", 1);
      Party party0 = player0.next;
      player0.remove((Party) null);
      player0.setDead((long) 1, false);
      System.setCurrentTimeMillis(4034L);
  }
}
