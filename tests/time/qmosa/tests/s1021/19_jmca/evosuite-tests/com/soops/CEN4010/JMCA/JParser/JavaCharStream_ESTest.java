/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 05:28:54 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockRandomAccessFile;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JavaCharStream_ESTest extends JavaCharStream_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      JavaCharStream.hexval('e');
      StringReader stringReader0 = new StringReader("/'W-|^%7@;t.");
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      assertEquals(0, pipedInputStream0.available());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.5708505634534706
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("r|l'(\"v.;&X15,md1t");
      char[] charArray0 = new char[0];
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 307, 0, 0);
      javaCharStream1.FillBuff();
      javaCharStream1.readChar();
      javaCharStream1.UpdateLineColumn('W');
      StringReader stringReader1 = new StringReader("2#n");
      javaCharStream1.ReInit((Reader) stringReader1, 102, 1259);
      // Undeclared exception!
      try { 
        javaCharStream1.UpdateLineColumn('#');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byte byte0 = (byte) (-47);
      byteArray0[0] = (byte) (-47);
      byteArray0[1] = (byte)92;
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0);
      try { 
        JavaCharStream.hexval(']');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StringReader stringReader0 = new StringReader("LO");
      try { 
        JavaCharStream.hexval('`');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.526954271485024
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StringReader stringReader0 = new StringReader("LO");
      char[] charArray0 = new char[1];
      FileSystemHandling.shouldAllThrowIOExceptions();
      charArray0[0] = 'z';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), (-1), 307);
      javaCharStream0.FillBuff();
      javaCharStream0.inBuf = 307;
      javaCharStream0.readChar();
      javaCharStream0.UpdateLineColumn('5');
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-2653), 13);
      javaCharStream1.ReInit((Reader) stringReader0);
      javaCharStream1.tokenBegin = 1;
      javaCharStream0.BeginToken();
      javaCharStream1.backup((-1));
      try { 
        javaCharStream1.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.466559032149676
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StringReader stringReader0 = new StringReader("LO");
      char[] charArray0 = new char[1];
      charArray0[0] = 'z';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), (-1), 307);
      javaCharStream0.FillBuff();
      javaCharStream0.inBuf = 307;
      javaCharStream0.readChar();
      javaCharStream0.UpdateLineColumn('5');
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-2653), 13);
      javaCharStream1.ReInit((Reader) stringReader0);
      javaCharStream1.tokenBegin = 1;
      javaCharStream0.BeginToken();
      javaCharStream1.backup((-1));
      javaCharStream0.GetImage();
      assertEquals(1, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      try { 
        JavaCharStream.hexval('W');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      JavaCharStream.hexval('C');
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("");
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      try { 
        pipedInputStream0.connect(pipedOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      try { 
        JavaCharStream.hexval('Y');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.8467754238239351
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StringReader stringReader0 = new StringReader("LO");
      char[] charArray0 = new char[1];
      FileSystemHandling.shouldAllThrowIOExceptions();
      charArray0[0] = 'z';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 26, 26, 307);
      javaCharStream0.prevCharIsCR = true;
      javaCharStream0.FillBuff();
      javaCharStream0.inBuf = 26;
      javaCharStream0.readChar();
      javaCharStream0.UpdateLineColumn('#');
      StringReader stringReader1 = new StringReader("LO");
      javaCharStream0.ReInit((Reader) stringReader0, 1, 89);
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('u');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      StringReader stringReader0 = new StringReader("");
      int int0 = 0;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 0);
      stringReader0.skip(0);
      // Undeclared exception!
      try { 
        javaCharStream0.adjustBeginLineColumn(0, 757);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      JavaCharStream.hexval('1');
      StringReader stringReader0 = new StringReader("");
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      assertEquals(0, pipedInputStream0.available());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.9747718499768143
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StringReader stringReader0 = new StringReader("LO");
      char[] charArray0 = new char[1];
      FileSystemHandling.shouldAllThrowIOExceptions();
      charArray0[0] = 'z';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), (-1), 307);
      javaCharStream0.FillBuff();
      javaCharStream0.inBuf = 307;
      javaCharStream0.readChar();
      javaCharStream0.UpdateLineColumn('5');
      javaCharStream0.adjustBeginLineColumn(4087, 1);
      StringReader stringReader1 = new StringReader("LO");
      javaCharStream0.BeginToken();
      char char0 = javaCharStream0.BeginToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals('\u0000', char0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.6754806566903269
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StringReader stringReader0 = new StringReader("LO");
      char[] charArray0 = new char[1];
      FileSystemHandling.shouldAllThrowIOExceptions();
      charArray0[0] = 'z';
      stringReader0.read(charArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "LO");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 96, (-4339));
      javaCharStream0.getBeginColumn();
      javaCharStream0.GetImage();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      mockFileInputStream0.release();
      javaCharStream0.bufpos = 1;
      javaCharStream0.adjustBeginLineColumn(96, (-2339));
      javaCharStream0.BeginToken();
      try { 
        JavaCharStream.hexval('x');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      JavaCharStream.hexval('c');
      JavaCharStream.hexval('f');
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      PipedInputStream pipedInputStream1 = new PipedInputStream();
      try { 
        pipedInputStream1.connect(pipedOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      try { 
        JavaCharStream.hexval('@');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.7918951054147492
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream0);
      javaCharStream0.GetImage();
      try { 
        JavaCharStream.hexval('?');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      try { 
        JavaCharStream.hexval('G');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.610160591705525
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[2] = (byte) (-1);
      byteArray0[1] = (byte) (-5);
      byteArray0[2] = (byte) (-4);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      String string0 = javaCharStream0.GetImage();
      StringReader stringReader0 = new StringReader(string0);
      javaCharStream0.line = 1429;
      javaCharStream0.ReInit((Reader) stringReader0, 88, 9);
      javaCharStream0.BeginToken();
      javaCharStream0.getBeginColumn();
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.004289452585258
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      StringReader stringReader0 = new StringReader("LO");
      char[] charArray0 = new char[1];
      charArray0[0] = 'z';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), (-1), 307);
      javaCharStream0.FillBuff();
      StringReader stringReader1 = new StringReader("*d\t<V6Z<");
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      javaCharStream0.readChar();
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null, 1023);
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0, 1023, 1023);
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((InputStream) null, 1, 0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.9481293680228515
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream0);
      String string0 = javaCharStream0.GetImage();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, string0);
      javaCharStream0.GetImage();
      javaCharStream0.adjustBeginLineColumn(0, 1584);
      javaCharStream0.ReInit((InputStream) mockFileInputStream0);
      javaCharStream0.Done();
      StringReader stringReader0 = new StringReader(string0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 88, 117);
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.4395720605004327
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0, (int) (byte)0, (int) (byte)0, 1);
      javaCharStream0.readChar();
      javaCharStream0.GetSuffix((byte)0);
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      try { 
        JavaCharStream.hexval('T');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.7013090971439206
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      JavaCharStream.hexval('a');
      int int0 = (-1);
      Reader reader0 = null;
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 10, 62);
      // Undeclared exception!
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.7117295304586648
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" column ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1290), (-1290), 1184);
      javaCharStream0.adjustBeginLineColumn(4096, (-2271));
      javaCharStream0.readChar();
      javaCharStream0.column = 0;
      javaCharStream0.ReInit((Reader) stringReader0);
      stringReader0.reset();
      javaCharStream0.readChar();
      javaCharStream0.getColumn();
      javaCharStream0.maxNextCharInd = 0;
      try { 
        JavaCharStream.hexval(' ');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.760750468781551
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " column ");
      StringReader stringReader0 = new StringReader(" column ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1290), (-1290), 1184);
      javaCharStream0.ReadByte();
      stringReader0.read();
      JavaCharStream javaCharStream1 = null;
      try {
        javaCharStream1 = new JavaCharStream((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      StringReader stringReader0 = new StringReader("LO");
      JavaCharStream.hexval('9');
      StringReader stringReader1 = new StringReader("X$AkU6.X5_%ah");
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      assertEquals(0, pipedInputStream0.available());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.6619395666756522
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      StringReader stringReader0 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
      int int0 = (-3229);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 14, (-3229), 2634);
      javaCharStream0.ReInit((Reader) stringReader0, (-1), (-1), 2414);
      stringReader0.markSupported();
      try { 
        JavaCharStream.hexval('[');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      try { 
        JavaCharStream.hexval('P');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.15003511526394
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      StringReader stringReader0 = new StringReader("8");
      stringReader0.skip(1513L);
      stringReader0.read();
      stringReader0.reset();
      StringReader stringReader1 = new StringReader("4ha)O6.1PNtPq~3A-");
      int int0 = 91;
      int int1 = 83;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (-6566), 91, 83);
      int int2 = 0;
      javaCharStream0.ReInit((Reader) stringReader1, 0, 0, 83);
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('~');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)90;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)10;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)29;
      byteArray0[1] = (byte) (-85);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(dataInputStream0, (-1167), (-1167), 0);
      javaCharStream0.GetSuffix(92);
      // Undeclared exception!
      try { 
        javaCharStream0.getLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.0211196177983384
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      StringReader stringReader0 = new StringReader("LO");
      char[] charArray0 = new char[1];
      FileSystemHandling.shouldAllThrowIOExceptions();
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), (-1), 307);
      javaCharStream0.prevCharIsCR = true;
      javaCharStream0.inBuf = 307;
      javaCharStream0.readChar();
      javaCharStream0.BeginToken();
      assertEquals(1, javaCharStream0.bufpos);
      
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 2248, (-3565), 1);
      javaCharStream1.getBeginColumn();
      javaCharStream1.FillBuff();
      assertEquals((-1), javaCharStream1.bufpos);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      StringReader stringReader0 = new StringReader("7lsQhbaL9S");
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "7lsQhbaL9S");
      FileSystemHandling.shouldAllThrowIOExceptions();
      InputStream inputStream0 = null;
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null, 1025);
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null, 1025, 1025);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.8154193410402377
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte) (-48);
      byteArray0[2] = (byte) (-33);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0, (int) (byte) (-33), (int) (byte)0, 1);
      javaCharStream0.readChar();
      javaCharStream0.GetSuffix(1);
      javaCharStream0.getBeginLine();
      javaCharStream0.getColumn();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.UpdateLineColumn('\uFFFD');
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals((-33), javaCharStream0.getBeginLine());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.3300185960211162
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-187), (-187));
      javaCharStream0.adjustBeginLineColumn(71, 71);
      // Undeclared exception!
      try { 
        javaCharStream0.getColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedInputStream0);
      javaCharStream0.maxNextCharInd = (-1785);
      // Undeclared exception!
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.2161604920603284
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      StringReader stringReader0 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
      int int0 = 645;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 14, (-3229), 2634);
      javaCharStream0.ReInit((Reader) stringReader0, (-1), (-1), 2414);
      stringReader0.markSupported();
      javaCharStream0.BeginToken();
      JavaCharStream javaCharStream1 = null;
      try {
        javaCharStream1 = new JavaCharStream((InputStream) null, 1318, 2634, (-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      JavaCharStream.hexval('c');
      JavaCharStream.hexval('0');
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      pipedInputStream0.markSupported();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      PipedInputStream pipedInputStream1 = new PipedInputStream();
      try { 
        pipedInputStream1.connect(pipedOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" column ");
      stringReader0.read();
      stringReader0.reset();
      int int0 = 0;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 0);
      char char0 = '(';
      char[] charArray0 = new char[9];
      charArray0[0] = '(';
      // Undeclared exception!
      try { 
        javaCharStream0.getBeginLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      StringReader stringReader0 = new StringReader("LO");
      char[] charArray0 = new char[1];
      FileSystemHandling.shouldAllThrowIOExceptions();
      charArray0[0] = 'z';
      stringReader0.read(charArray0);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte) (-22);
      byteArray0[6] = (byte)13;
      byteArray0[7] = (byte)0;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      StringReader stringReader1 = new StringReader(".");
      StringReader stringReader2 = new StringReader("LO");
      stringReader1.skip((-1L));
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 0, 1);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.getBeginLine();
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.432201978904549
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      StringReader stringReader0 = new StringReader("LO");
      char[] charArray0 = new char[1];
      charArray0[0] = 'z';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), (-1), 307);
      javaCharStream0.FillBuff();
      javaCharStream0.inBuf = 307;
      javaCharStream0.readChar();
      javaCharStream0.UpdateLineColumn('5');
      javaCharStream0.column = 0;
      javaCharStream0.getLine();
      javaCharStream0.getBeginColumn();
      javaCharStream0.ReadByte();
      javaCharStream0.ReInit((Reader) stringReader0, (-1), 307);
      // Undeclared exception!
      try { 
        javaCharStream0.getEndColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      try { 
        JavaCharStream.hexval('U');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArray0[0] = (byte) (-47);
      byteArray0[1] = (byte)92;
      byteArray0[2] = (byte) (-30);
      byteArray0[3] = (byte) (-65);
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("XmT@5!*=n_C&j]-NlF");
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream(stringReader0, (-1141), 4096, (-275));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null);
      int int0 = 0;
      int int1 = 535;
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0, 0, 0, 535);
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.PushbackInputStream", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 1, 1, 0);
      javaCharStream0.ReInit((InputStream) pipedInputStream0, 0, (-2625));
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.7484110919364777
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      StringReader stringReader0 = new StringReader("LO");
      char[] charArray0 = new char[1];
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "LO");
      charArray0[0] = 'z';
      stringReader0.read(charArray0);
      StringReader stringReader1 = new StringReader("LO");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 89, 307, 71);
      javaCharStream0.readChar();
      javaCharStream0.UpdateLineColumn(' ');
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.6082873972465446
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      StringReader stringReader0 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 645, (-1));
      stringReader0.reset();
      javaCharStream0.FillBuff();
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.4475446070142595
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      StringReader stringReader0 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 14, (-3229), 2634);
      javaCharStream0.ReInit((Reader) stringReader0, (-1), (-1), 2414);
      stringReader0.markSupported();
      javaCharStream0.GetImage();
      char[] charArray0 = new char[5];
      charArray0[0] = 'D';
      charArray0[1] = '|';
      charArray0[2] = '#';
      charArray0[3] = '4';
      javaCharStream0.tokenBegin = (-1);
      charArray0[4] = '/';
      javaCharStream0.buffer = charArray0;
      javaCharStream0.ReInit((Reader) stringReader0, (-3229), (-2905));
      javaCharStream0.BeginToken();
      javaCharStream0.getBeginColumn();
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.3551956012829063
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      StringReader stringReader0 = new StringReader("LO");
      char[] charArray0 = new char[1];
      stringReader0.ready();
      charArray0[0] = 'z';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), (-1), 307);
      javaCharStream0.FillBuff();
      javaCharStream0.inBuf = 307;
      javaCharStream0.readChar();
      javaCharStream0.UpdateLineColumn('5');
      javaCharStream0.column = 0;
      javaCharStream0.getLine();
      stringReader0.markSupported();
      javaCharStream0.ReadByte();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      javaCharStream0.ReInit((Reader) stringReader0, (-1), 307);
      javaCharStream0.adjustBeginLineColumn(0, (-1107));
      assertEquals((-1107), javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.813782155210461
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, (-2607), 2101);
      javaCharStream0.adjustBeginLineColumn(0, 2101);
      // Undeclared exception!
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      try { 
        JavaCharStream.hexval(':');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.045899801278006
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArray0[0] = (byte) (-47);
      byteArray0[1] = (byte)92;
      byteArray0[2] = (byte) (-30);
      byteArray0[3] = (byte) (-65);
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      StringReader stringReader0 = new StringReader("XmT@5!*=n_C&j]-NlF");
      StringReader stringReader1 = new StringReader("XmT@5!*=n_C&j]-NlF");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte) (-65), 82, 95);
      char[] charArray0 = new char[0];
      stringReader0.read(charArray0);
      javaCharStream0.BeginToken();
      // Undeclared exception!
      try { 
        javaCharStream0.GetSuffix((byte) (-22));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.045899801278006
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      StringReader stringReader0 = new StringReader("XmT@5!*=n_C&j]-NlF");
      StringReader stringReader1 = new StringReader("XmT@5!*=n_C&j]-NlF");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (byte)0, 1198, 1828);
      char[] charArray0 = new char[4];
      charArray0[0] = 'y';
      charArray0[1] = 'y';
      charArray0[2] = 'I';
      charArray0[3] = 'y';
      stringReader0.read(charArray0);
      javaCharStream0.BeginToken();
      javaCharStream0.GetSuffix(77);
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.176645350936787
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-47);
      StringReader stringReader0 = new StringReader(":n,tV`");
      StringReader stringReader1 = new StringReader("CW,aE`DvG3Df");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 117, 97);
      javaCharStream0.BeginToken();
      // Undeclared exception!
      try { 
        javaCharStream0.GetSuffix((-1367));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.7214787039105834
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      StringReader stringReader0 = new StringReader("LO");
      int int0 = (-1);
      char[] charArray0 = new char[1];
      FileSystemHandling.shouldAllThrowIOExceptions();
      charArray0[0] = 'z';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), (-1), 307);
      javaCharStream0.prevCharIsCR = true;
      javaCharStream0.FillBuff();
      javaCharStream0.ReadByte();
      stringReader0.read();
      int int1 = (-1961);
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((Reader) stringReader0, (-1961), (-1), (-1522));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.593469940354953
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream0);
      String string0 = javaCharStream0.GetImage();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, string0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      javaCharStream0.getBeginColumn();
      String string1 = javaCharStream0.GetImage();
      javaCharStream0.adjustBeginLineColumn(0, 1584);
      StringReader stringReader0 = new StringReader(string1);
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.NativeMockedIO", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-47);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      byteArray0[1] = (byte)92;
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0);
      PushbackInputStream pushbackInputStream1 = new PushbackInputStream(pushbackInputStream0, (byte)92);
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream1, 84, (byte) (-47));
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      javaCharStream0.backup(3518);
      assertEquals(577, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.3558258304206885
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-2573), 0);
      byteArrayInputStream0.read(byteArray0, 0, 0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, 0, 0);
      javaCharStream0.prevCharIsCR = false;
      sequenceInputStream0.available();
      javaCharStream0.ExpandBuff(false);
      byteArrayInputStream0.read(byteArray0);
      char[] charArray0 = new char[5];
      charArray0[0] = 'h';
      charArray0[1] = 'E';
      charArray0[2] = 'y';
      charArray0[3] = '}';
      charArray0[4] = 'V';
      javaCharStream0.nextCharBuf = charArray0;
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1924, (-799), 62);
      javaCharStream0.ExpandBuff(false);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.1214866908538172
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArray0[0] = (byte) (-47);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      StringReader stringReader0 = new StringReader("XmT@5!*=n_C&j]-NlF");
      StringReader stringReader1 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-28), (-3086), 67);
      javaCharStream0.adjustBeginLineColumn(117, (-28));
      javaCharStream0.readChar();
      StringReader stringReader2 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
      char[] charArray0 = new char[5];
      charArray0[0] = 'X';
      charArray0[1] = 'X';
      charArray0[2] = 'X';
      charArray0[3] = 'X';
      charArray0[4] = 'y';
      stringReader2.read(charArray0);
      javaCharStream0.BeginToken();
      MockRandomAccessFile mockRandomAccessFile0 = null;
      try {
        mockRandomAccessFile0 = new MockRandomAccessFile("", "XmT@5!*=n_C&j]-NlF");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal mode \"XmT@5!*=n_C&j]-NlF\" must be one of \"r\", \"rw\", \"rws\", or \"rwd\"
         //
         verifyException("java.io.RandomAccessFile", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.196664918501384
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      StringReader stringReader0 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
      stringReader0.markSupported();
      stringReader0.markSupported();
      StringReader stringReader1 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0);
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.633972794055792
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[2] = (byte) (-1);
      byteArray0[1] = (byte) (-5);
      byteArray0[2] = (byte) (-4);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      String string0 = javaCharStream0.GetImage();
      StringReader stringReader0 = new StringReader(string0);
      javaCharStream0.line = 1429;
      javaCharStream0.ReInit((Reader) stringReader0, 88, 9);
      javaCharStream0.BeginToken();
      javaCharStream0.getBeginColumn();
      assertEquals(0, javaCharStream0.bufpos);
      
      javaCharStream0.ReInit((Reader) stringReader0, (-3359), 1620, 2805);
      assertEquals(3, byteArrayInputStream0.available());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      try { 
        JavaCharStream.hexval('s');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      int int0 = JavaCharStream.hexval('A');
      assertEquals(10, int0);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.3300185960211162
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      char[] charArray0 = new char[1];
      charArray0[0] = 'Z';
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0);
      javaCharStream0.adjustBeginLineColumn((-2653), 13);
      assertEquals((-2652), javaCharStream0.getBeginLine());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedInputStream0, 0, 0, 0);
      StringReader stringReader0 = new StringReader("-");
      javaCharStream0.ReInit((Reader) stringReader0);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      StringReader stringReader0 = new StringReader(";)3W&]2B0xW6-NrW");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 639, 0);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte) (-26);
      byteArray0[2] = (byte)30;
      byteArray0[3] = (byte) (-54);
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)122;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)122, 3270);
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.3684238135694877
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArray0[0] = (byte) (-47);
      StringReader stringReader0 = new StringReader("`YJty?9:n");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), (byte) (-47));
      String string0 = javaCharStream0.GetImage();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, string0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      javaCharStream0.getBeginColumn();
      javaCharStream0.GetImage();
      javaCharStream0.adjustBeginLineColumn(1243, (byte) (-47));
      StringReader stringReader1 = new StringReader("");
      char char0 = javaCharStream0.BeginToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('`', char0);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.0287375017310743
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1728, 1728);
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('B');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte) (-48);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArray0[2] = (byte) (-48);
      byteArray0[3] = (byte)0;
      StringReader stringReader0 = new StringReader("20CA1_q4`iX[wG2");
      StringReader stringReader1 = new StringReader("20CA1_q4`iX[wG2");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char char0 = javaCharStream0.ReadByte();
      assertEquals('2', char0);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 72
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      try { 
        JavaCharStream.hexval('S');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-47);
      byteArray0[1] = (byte)92;
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0, 1667, 1818, 997);
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)90;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)10;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)29;
      byteArray0[6] = (byte) (-85);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(dataInputStream0, (-1167), (-1167), 0);
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0, (int) (byte)90, (int) (byte)29, (int) (byte) (-85));
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      StringReader stringReader0 = new StringReader("IwI_");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.ReInit((Reader) stringReader0, 1064, 1617);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 591, 3290, 591);
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      StringReader stringReader0 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2683, (-1), 2683);
      char[] charArray0 = new char[6];
      charArray0[0] = '/';
      charArray0[1] = '<';
      charArray0[2] = '!';
      charArray0[3] = 'k';
      charArray0[4] = 'H';
      charArray0[5] = 's';
      javaCharStream0.buffer = charArray0;
      // Undeclared exception!
      try { 
        javaCharStream0.getEndLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.9975070143782863
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream0);
      String string0 = javaCharStream0.GetImage();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, string0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      javaCharStream0.getBeginColumn();
      javaCharStream0.GetImage();
      int int0 = 0;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JavaCharStream javaCharStream1 = new JavaCharStream((Reader) null, 0, (-2582));
      javaCharStream1.ReInit((Reader) null);
      JavaCharStream javaCharStream2 = new JavaCharStream((Reader) null);
      // Undeclared exception!
      try { 
        javaCharStream2.BeginToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.3128868859883
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, 2, 3);
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }
}
