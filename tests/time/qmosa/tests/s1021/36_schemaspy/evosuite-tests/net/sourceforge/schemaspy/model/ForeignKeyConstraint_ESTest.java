/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 05:32:20 GMT 2019
 */

package net.sourceforge.schemaspy.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.sql.Connection;
import java.sql.DatabaseMetaData;
import java.sql.ResultSet;
import java.util.LinkedList;
import java.util.List;
import net.sourceforge.schemaspy.Config;
import net.sourceforge.schemaspy.model.Database;
import net.sourceforge.schemaspy.model.ForeignKeyConstraint;
import net.sourceforge.schemaspy.model.Table;
import net.sourceforge.schemaspy.model.TableColumn;
import net.sourceforge.schemaspy.model.xml.SchemaMeta;
import net.sourceforge.schemaspy.model.xml.TableColumnMeta;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ForeignKeyConstraint_ESTest extends ForeignKeyConstraint_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Connection connection0 = null;
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "Cascade on delete", 2751, 3);
      foreignKeyConstraint0.isRestrictDelete();
      FileSystemHandling.shouldAllThrowIOExceptions();
      String string0 = "~tFe:&oXKx7";
      SchemaMeta schemaMeta0 = null;
      Config config0 = Config.getInstance();
      DatabaseMetaData databaseMetaData0 = null;
      Database database0 = null;
      try {
        database0 = new Database(config0, (Connection) null, (DatabaseMetaData) null, "Cascade on delete", "~4*", "", (SchemaMeta) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.Database", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = "fV5kVdsK";
      String string1 = "remarks";
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "remarks", 524, 2425);
      foreignKeyConstraint0.getParentColumns();
      foreignKeyConstraint0.getName();
      // Undeclared exception!
      try { 
        ForeignKeyConstraint.toString((List<TableColumn>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.ForeignKeyConstraint", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.82188235777104
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, (String) null, 2136, 4);
      foreignKeyConstraint0.getChildColumns();
      List<TableColumn> list0 = foreignKeyConstraint0.getParentColumns();
      ForeignKeyConstraint.toString(list0);
      foreignKeyConstraint0.getParentColumns();
      boolean boolean0 = foreignKeyConstraint0.isCascadeOnDelete();
      foreignKeyConstraint0.getDeleteRuleName();
      foreignKeyConstraint0.getParentTable();
      foreignKeyConstraint0.getChildColumns();
      foreignKeyConstraint0.getDeleteRuleDescription();
      int int0 = foreignKeyConstraint0.getUpdateRule();
      assertEquals(2136, int0);
      
      foreignKeyConstraint0.getDeleteRuleAlias();
      foreignKeyConstraint0.getChildColumns();
      foreignKeyConstraint0.getDeleteRuleAlias();
      foreignKeyConstraint0.isNullOnDelete();
      foreignKeyConstraint0.getParentTable();
      foreignKeyConstraint0.getChildTable();
      foreignKeyConstraint0.getChildColumns();
      boolean boolean1 = foreignKeyConstraint0.isNullOnDelete();
      assertTrue(boolean1 == boolean0);
      
      foreignKeyConstraint0.getChildColumns();
      foreignKeyConstraint0.getDeleteRuleName();
      foreignKeyConstraint0.getDeleteRuleName();
      foreignKeyConstraint0.getName();
      assertEquals(4, foreignKeyConstraint0.getDeleteRule());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.428693396445769
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String string0 = null;
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, (String) null, 2, 2);
      foreignKeyConstraint0.isNullOnDelete();
      foreignKeyConstraint0.getDeleteRule();
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta0).getComments();
      doReturn((String) null).when(tableColumnMeta0).getDefaultValue();
      doReturn(0).when(tableColumnMeta0).getDigits();
      doReturn((String) null).when(tableColumnMeta0).getId();
      doReturn((String) null).when(tableColumnMeta0).getName();
      doReturn(0).when(tableColumnMeta0).getSize();
      doReturn((String) null).when(tableColumnMeta0).getType();
      doReturn(false).when(tableColumnMeta0).isAutoUpdated();
      doReturn(false).when(tableColumnMeta0).isNullable();
      TableColumn tableColumn0 = new TableColumn((Table) null, tableColumnMeta0);
      Config config0 = new Config();
      tableColumn0.unlinkParents();
      foreignKeyConstraint0.getChildColumns();
      foreignKeyConstraint0.getParentColumns();
      foreignKeyConstraint0.getParentColumns();
      foreignKeyConstraint0.isCascadeOnDelete();
      foreignKeyConstraint0.getParentTable();
      foreignKeyConstraint0.getChildColumns();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "routine_comment");
      foreignKeyConstraint0.getDeleteRuleDescription();
      foreignKeyConstraint0.getUpdateRule();
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0, 0).when(resultSet0).getInt(anyString());
      doReturn((Object) null).when(resultSet0).getObject(anyString());
      doReturn((String) null, (String) null, (String) null, (String) null).when(resultSet0).getString(anyString());
      TableColumn tableColumn1 = null;
      try {
        tableColumn1 = new TableColumn((Table) null, resultSet0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.TableColumn", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.5280883009539779
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Config.getInstance();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " via ");
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, " via ", 3606, 2);
      boolean boolean0 = foreignKeyConstraint0.isCascadeOnDelete();
      assertFalse(boolean0);
      
      String string0 = foreignKeyConstraint0.getDeleteRuleName();
      assertEquals(3606, foreignKeyConstraint0.getUpdateRule());
      assertEquals("Null on delete", string0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.7671914139280234
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "=)p8nM)I\f{KBII(Db8", (-9), (-2008));
      Config.getInstance();
      foreignKeyConstraint0.isReal();
      int int0 = foreignKeyConstraint0.getUpdateRule();
      assertEquals((-9), int0);
      
      foreignKeyConstraint0.getDeleteRuleAlias();
      foreignKeyConstraint0.getChildColumns();
      foreignKeyConstraint0.isImplied();
      boolean boolean0 = foreignKeyConstraint0.isNullOnDelete();
      foreignKeyConstraint0.getParentTable();
      foreignKeyConstraint0.getChildTable();
      foreignKeyConstraint0.getParentColumns();
      foreignKeyConstraint0.getChildColumns();
      foreignKeyConstraint0.isNullOnDelete();
      boolean boolean1 = foreignKeyConstraint0.isRestrictDelete();
      boolean boolean2 = foreignKeyConstraint0.isImplied();
      assertTrue(boolean2 == boolean0);
      
      foreignKeyConstraint0.getParentColumns();
      foreignKeyConstraint0.getChildColumns();
      boolean boolean3 = foreignKeyConstraint0.isReal();
      assertEquals((-2008), foreignKeyConstraint0.getDeleteRule());
      assertFalse(boolean3 == boolean1);
      assertTrue(boolean3);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.8148657896913192
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", 156, (-1361));
      FileSystemHandling.shouldAllThrowIOExceptions();
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      foreignKeyConstraint0.isNullOnDelete();
      ForeignKeyConstraint foreignKeyConstraint1 = null;
      try {
        foreignKeyConstraint1 = new ForeignKeyConstraint((TableColumn) null, (TableColumn) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.ForeignKeyConstraint", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.832920911191322
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "[OH~%=1T@F~U^!", 156, 0);
      foreignKeyConstraint0.getDeleteRuleAlias();
      foreignKeyConstraint0.isNullOnDelete();
      foreignKeyConstraint0.getDeleteRule();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("ora.properties");
      FileSystemHandling.createFolder(evoSuiteFile0);
      Config config0 = new Config();
      foreignKeyConstraint0.isRestrictDelete();
      FileSystemHandling.shouldAllThrowIOExceptions();
      String string0 = "~tFe:&oXKx7";
      DatabaseMetaData databaseMetaData0 = mock(DatabaseMetaData.class, new ViolatedAssumptionAnswer());
      doReturn((ResultSet) null).when(databaseMetaData0).getTables(anyString() , anyString() , anyString() , any(java.lang.String[].class));
      String string1 = "RDe[6>-e-]`FuAjI";
      Database database0 = null;
      try {
        database0 = new Database(config0, (Connection) null, databaseMetaData0, "", "RDe[6>-e-]`FuAjI", "~tFe:&oXKx7", (SchemaMeta) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.Database", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta0).getComments();
      doReturn((String) null).when(tableColumnMeta0).getDefaultValue();
      doReturn(0).when(tableColumnMeta0).getDigits();
      doReturn((String) null).when(tableColumnMeta0).getId();
      doReturn((String) null).when(tableColumnMeta0).getName();
      doReturn(0).when(tableColumnMeta0).getSize();
      doReturn((String) null).when(tableColumnMeta0).getType();
      doReturn(false).when(tableColumnMeta0).isAutoUpdated();
      doReturn(false).when(tableColumnMeta0).isNullable();
      TableColumn tableColumn0 = new TableColumn((Table) null, tableColumnMeta0);
      Config.getInstance();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      String string0 = "CCyFmztrnUaW";
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "CCyFmztrnUaW", 125, 125);
      TableColumnMeta tableColumnMeta1 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta1).getComments();
      doReturn((String) null).when(tableColumnMeta1).getDefaultValue();
      doReturn(0).when(tableColumnMeta1).getDigits();
      doReturn((String) null).when(tableColumnMeta1).getId();
      doReturn((String) null).when(tableColumnMeta1).getName();
      doReturn(0).when(tableColumnMeta1).getSize();
      doReturn((String) null).when(tableColumnMeta1).getType();
      doReturn(false).when(tableColumnMeta1).isAutoUpdated();
      doReturn(false).when(tableColumnMeta1).isNullable();
      List<TableColumn> list0 = foreignKeyConstraint0.getParentColumns();
      TableColumn tableColumn1 = new TableColumn((Table) null, tableColumnMeta1);
      ForeignKeyConstraint.toString(list0);
      foreignKeyConstraint0.isNullOnDelete();
      foreignKeyConstraint0.getDeleteRule();
      String string1 = "8Kp1<}9{Fr6";
      DatabaseMetaData databaseMetaData0 = mock(DatabaseMetaData.class, new ViolatedAssumptionAnswer());
      String string2 = "";
      String string3 = "VfX";
      SchemaMeta schemaMeta0 = null;
      try {
        schemaMeta0 = new SchemaMeta("java.util.Collections$UnmodifiableRandomAccessList@0000000007", "UTF-8", "VfX");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Specified meta file \"java.util.Collections$UnmodifiableRandomAccessList@0000000007\" does not exist
         //
         verifyException("net.sourceforge.schemaspy.model.xml.SchemaMeta", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.8148657896913192
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      int int0 = 1070;
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "n{)k<{{e", 1070, 2171);
      FileSystemHandling.shouldAllThrowIOExceptions();
      foreignKeyConstraint0.isNullOnDelete();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      ForeignKeyConstraint foreignKeyConstraint1 = null;
      try {
        foreignKeyConstraint1 = new ForeignKeyConstraint((TableColumn) null, (TableColumn) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.ForeignKeyConstraint", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.5280883009539779
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta0).getComments();
      doReturn((String) null).when(tableColumnMeta0).getDefaultValue();
      doReturn(0).when(tableColumnMeta0).getDigits();
      doReturn((String) null).when(tableColumnMeta0).getId();
      doReturn((String) null).when(tableColumnMeta0).getName();
      doReturn(0).when(tableColumnMeta0).getSize();
      doReturn((String) null).when(tableColumnMeta0).getType();
      doReturn(false).when(tableColumnMeta0).isAutoUpdated();
      doReturn(false).when(tableColumnMeta0).isNullable();
      TableColumn tableColumn0 = new TableColumn((Table) null, tableColumnMeta0);
      Config.getInstance();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "UTF-8");
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "FROM", 3, 3);
      boolean boolean0 = foreignKeyConstraint0.isCascadeOnDelete();
      assertFalse(boolean0);
      
      String string0 = foreignKeyConstraint0.getDeleteRuleName();
      assertEquals(3, foreignKeyConstraint0.getUpdateRule());
      assertEquals("Restrict delete", string0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.132999251994992
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta0).getComments();
      doReturn((String) null).when(tableColumnMeta0).getDefaultValue();
      doReturn(0).when(tableColumnMeta0).getDigits();
      doReturn((String) null).when(tableColumnMeta0).getId();
      doReturn((String) null).when(tableColumnMeta0).getName();
      doReturn(0).when(tableColumnMeta0).getSize();
      doReturn((String) null).when(tableColumnMeta0).getType();
      doReturn(false).when(tableColumnMeta0).isAutoUpdated();
      doReturn(false).when(tableColumnMeta0).isNullable();
      TableColumn tableColumn0 = new TableColumn((Table) null, tableColumnMeta0);
      Config.getInstance();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "CCyFmztrnUaW", 125, 125);
      TableColumnMeta tableColumnMeta1 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta1).getComments();
      doReturn((String) null).when(tableColumnMeta1).getDefaultValue();
      doReturn(0).when(tableColumnMeta1).getDigits();
      doReturn((String) null).when(tableColumnMeta1).getId();
      doReturn((String) null).when(tableColumnMeta1).getName();
      doReturn(0).when(tableColumnMeta1).getSize();
      doReturn((String) null).when(tableColumnMeta1).getType();
      doReturn(false).when(tableColumnMeta1).isAutoUpdated();
      doReturn(false).when(tableColumnMeta1).isNullable();
      List<TableColumn> list0 = foreignKeyConstraint0.getParentColumns();
      TableColumn tableColumn1 = new TableColumn((Table) null, tableColumnMeta1);
      tableColumn1.setComments("CCyFmztrnUaW");
      foreignKeyConstraint0.addParentColumn(tableColumn1);
      foreignKeyConstraint0.getDeleteRuleName();
      foreignKeyConstraint0.getParentTable();
      ForeignKeyConstraint.toString(list0);
      assertFalse(list0.isEmpty());
      assertEquals(125, foreignKeyConstraint0.getDeleteRule());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Table table0 = null;
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta0).getComments();
      doReturn((String) null).when(tableColumnMeta0).getDefaultValue();
      doReturn(0).when(tableColumnMeta0).getDigits();
      doReturn((String) null).when(tableColumnMeta0).getId();
      doReturn((String) null).when(tableColumnMeta0).getName();
      doReturn(0).when(tableColumnMeta0).getSize();
      doReturn((String) null).when(tableColumnMeta0).getType();
      doReturn(false).when(tableColumnMeta0).isAutoUpdated();
      doReturn(false).when(tableColumnMeta0).isNullable();
      TableColumn tableColumn0 = new TableColumn((Table) null, tableColumnMeta0);
      Config.getInstance();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      String string0 = "CCyFmztrnUaW";
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "CCyFmztrnUaW", 125, 125);
      TableColumnMeta tableColumnMeta1 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta1).getComments();
      doReturn((String) null).when(tableColumnMeta1).getDefaultValue();
      doReturn(0).when(tableColumnMeta1).getDigits();
      doReturn((String) null).when(tableColumnMeta1).getId();
      doReturn((String) null).when(tableColumnMeta1).getName();
      doReturn(0).when(tableColumnMeta1).getSize();
      doReturn((String) null).when(tableColumnMeta1).getType();
      doReturn(false).when(tableColumnMeta1).isAutoUpdated();
      doReturn(false).when(tableColumnMeta1).isNullable();
      foreignKeyConstraint0.getParentColumns();
      foreignKeyConstraint0.addParentColumn(tableColumn0);
      foreignKeyConstraint0.getParentColumns();
      TableColumn tableColumn1 = new TableColumn((Table) null, tableColumnMeta1);
      ForeignKeyConstraint foreignKeyConstraint1 = null;
      try {
        foreignKeyConstraint1 = new ForeignKeyConstraint(tableColumn0, tableColumn1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.TableColumn", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.2925683891723425
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, (String) null, 0, (-1361));
      foreignKeyConstraint0.getChildColumns();
      List<TableColumn> list0 = foreignKeyConstraint0.getChildColumns();
      ForeignKeyConstraint.toString(list0);
      boolean boolean0 = foreignKeyConstraint0.isCascadeOnDelete();
      assertFalse(boolean0);
      
      foreignKeyConstraint0.getDeleteRuleName();
      FileSystemHandling.shouldAllThrowIOExceptions();
      int int0 = foreignKeyConstraint0.getUpdateRule();
      assertEquals(0, int0);
      
      foreignKeyConstraint0.getParentColumns();
      foreignKeyConstraint0.getChildColumns();
      assertEquals((-1361), foreignKeyConstraint0.getDeleteRule());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.7033374847816756
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, (String) null, 2136, (-8));
      Config config0 = new Config();
      foreignKeyConstraint0.getChildColumns();
      List<TableColumn> list0 = foreignKeyConstraint0.getParentColumns();
      ForeignKeyConstraint.toString(list0);
      foreignKeyConstraint0.getParentColumns();
      foreignKeyConstraint0.isCascadeOnDelete();
      foreignKeyConstraint0.getDeleteRuleName();
      foreignKeyConstraint0.getParentTable();
      foreignKeyConstraint0.getChildColumns();
      boolean boolean0 = foreignKeyConstraint0.isCascadeOnDelete();
      assertFalse(boolean0);
      
      foreignKeyConstraint0.getDeleteRuleAlias();
      boolean boolean1 = foreignKeyConstraint0.isNullOnDelete();
      foreignKeyConstraint0.getParentTable();
      foreignKeyConstraint0.getChildTable();
      foreignKeyConstraint0.getChildColumns();
      foreignKeyConstraint0.isNullOnDelete();
      foreignKeyConstraint0.getChildColumns();
      foreignKeyConstraint0.getDeleteRuleAlias();
      boolean boolean2 = foreignKeyConstraint0.isRestrictDelete();
      assertEquals((-8), foreignKeyConstraint0.getDeleteRule());
      assertEquals(2136, foreignKeyConstraint0.getUpdateRule());
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.310391393127219
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "' to ", 0, 1);
      foreignKeyConstraint0.isRestrictDelete();
      foreignKeyConstraint0.isCascadeOnDelete();
      foreignKeyConstraint0.getDeleteRuleName();
      foreignKeyConstraint0.getChildColumns();
      foreignKeyConstraint0.getDeleteRuleDescription();
      foreignKeyConstraint0.getDeleteRuleAlias();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)59;
      byteArray0[1] = (byte)59;
      byteArray0[2] = (byte)59;
      byteArray0[3] = (byte)59;
      byteArray0[4] = (byte)59;
      byteArray0[5] = (byte)59;
      byteArray0[6] = (byte)59;
      byteArray0[7] = (byte)59;
      byteArray0[8] = (byte)26;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      System.setCurrentTimeMillis((byte)26);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.031298644335524
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta0).getComments();
      doReturn((String) null).when(tableColumnMeta0).getDefaultValue();
      doReturn(0).when(tableColumnMeta0).getDigits();
      doReturn((String) null).when(tableColumnMeta0).getId();
      doReturn((String) null).when(tableColumnMeta0).getName();
      doReturn(0).when(tableColumnMeta0).getSize();
      doReturn((String) null).when(tableColumnMeta0).getType();
      doReturn(false).when(tableColumnMeta0).isAutoUpdated();
      doReturn(false).when(tableColumnMeta0).isNullable();
      TableColumn tableColumn0 = new TableColumn((Table) null, tableColumnMeta0);
      Config.getInstance();
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", 3606, 3606);
      TableColumnMeta tableColumnMeta1 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta1).getComments();
      doReturn((String) null).when(tableColumnMeta1).getDefaultValue();
      doReturn(0).when(tableColumnMeta1).getDigits();
      doReturn((String) null).when(tableColumnMeta1).getId();
      doReturn((String) null).when(tableColumnMeta1).getName();
      doReturn(0).when(tableColumnMeta1).getSize();
      doReturn((String) null).when(tableColumnMeta1).getType();
      doReturn(false).when(tableColumnMeta1).isAutoUpdated();
      doReturn(false).when(tableColumnMeta1).isNullable();
      TableColumn tableColumn1 = new TableColumn((Table) null, tableColumnMeta1);
      Config config0 = new Config();
      foreignKeyConstraint0.getParentColumns();
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, ":", 3606, 3606);
      foreignKeyConstraint1.getParentColumns();
      foreignKeyConstraint1.getChildColumns();
      foreignKeyConstraint0.compareTo(foreignKeyConstraint1);
      String string0 = null;
      // Undeclared exception!
      try { 
        config0.getRemainingParameters();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // org.evosuite.runtime.mock.java.lang.MockThrowable: Required parameter '-o' was not specified.
         //
         verifyException("net.sourceforge.schemaspy.Config", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      LinkedList<TableColumn> linkedList0 = new LinkedList<TableColumn>();
      String[] stringArray0 = new String[0];
      Config config0 = new Config(stringArray0);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      DatabaseMetaData databaseMetaData0 = mock(DatabaseMetaData.class, new ViolatedAssumptionAnswer());
      linkedList0.add((TableColumn) null);
      // Undeclared exception!
      try { 
        ForeignKeyConstraint.toString((List<TableColumn>) linkedList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.ForeignKeyConstraint", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.7988457068767891
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", 1070, 1070);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Config config0 = Config.getInstance();
      Config config1 = new Config();
      foreignKeyConstraint0.getParentColumns();
      String string0 = "";
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "UTF-8", 1070, 43);
      foreignKeyConstraint1.getParentColumns();
      foreignKeyConstraint1.compareTo(foreignKeyConstraint0);
      // Undeclared exception!
      try { 
        config0.getRemainingParameters();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // org.evosuite.runtime.mock.java.lang.MockThrowable: Required parameter '-o' was not specified.
         //
         verifyException("net.sourceforge.schemaspy.Config", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.031298644335524
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta0).getComments();
      doReturn((String) null).when(tableColumnMeta0).getDefaultValue();
      doReturn(0).when(tableColumnMeta0).getDigits();
      doReturn((String) null).when(tableColumnMeta0).getId();
      doReturn((String) null).when(tableColumnMeta0).getName();
      doReturn(0).when(tableColumnMeta0).getSize();
      doReturn((String) null).when(tableColumnMeta0).getType();
      doReturn(false).when(tableColumnMeta0).isAutoUpdated();
      doReturn(false).when(tableColumnMeta0).isNullable();
      TableColumn tableColumn0 = new TableColumn((Table) null, tableColumnMeta0);
      Config.getInstance();
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", 3606, 3606);
      TableColumnMeta tableColumnMeta1 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta1).getComments();
      doReturn((String) null).when(tableColumnMeta1).getDefaultValue();
      doReturn(0).when(tableColumnMeta1).getDigits();
      doReturn((String) null).when(tableColumnMeta1).getId();
      doReturn((String) null).when(tableColumnMeta1).getName();
      doReturn(0).when(tableColumnMeta1).getSize();
      doReturn((String) null).when(tableColumnMeta1).getType();
      doReturn(false).when(tableColumnMeta1).isAutoUpdated();
      doReturn(false).when(tableColumnMeta1).isNullable();
      TableColumn tableColumn1 = new TableColumn((Table) null, tableColumnMeta1);
      Config config0 = new Config();
      foreignKeyConstraint0.getParentColumns();
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "", 3606, 3606);
      foreignKeyConstraint1.getParentColumns();
      // Undeclared exception!
      try { 
        foreignKeyConstraint0.compareTo(foreignKeyConstraint1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.7988457068767891
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", 1070, 1070);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Config config0 = Config.getInstance();
      Config config1 = new Config();
      foreignKeyConstraint0.getParentColumns();
      String string0 = "";
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "UTF-8", 1070, 43);
      foreignKeyConstraint1.getParentColumns();
      foreignKeyConstraint1.compareTo(foreignKeyConstraint0);
      // Undeclared exception!
      try { 
        config0.getRemainingParameters();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // org.evosuite.runtime.mock.java.lang.MockThrowable: Required parameter '-o' was not specified.
         //
         verifyException("net.sourceforge.schemaspy.Config", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Table table0 = null;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      String string0 = "[OH~%=1T@F~U\\^!";
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "[OH~%=1T@F~U^!", 156, 0);
      foreignKeyConstraint0.getChildColumns();
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "-sbHu;`H", 125, 183);
      TableColumn tableColumn0 = null;
      foreignKeyConstraint1.addParentColumn((TableColumn) null);
      foreignKeyConstraint1.getParentColumns();
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      Config config0 = new Config();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      DatabaseMetaData databaseMetaData0 = mock(DatabaseMetaData.class, new ViolatedAssumptionAnswer());
      String string1 = "";
      String string2 = "^>&I1hb{~7a";
      String string3 = "uQkW\"CK]";
      SchemaMeta schemaMeta0 = null;
      try {
        schemaMeta0 = new SchemaMeta("uQkW\"CK]", "uQkW\"CK]", "");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Specified meta file \"uQkW\"CK]\" does not exist
         //
         verifyException("net.sourceforge.schemaspy.model.xml.SchemaMeta", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      String string0 = "fV5kVdsK";
      String string1 = "remarks";
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "remarks", 524, 2425);
      // Undeclared exception!
      try { 
        foreignKeyConstraint0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.ForeignKeyConstraint", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.689824795026437
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, (String) null, 2136, 4);
      Config config0 = new Config();
      foreignKeyConstraint0.getChildColumns();
      foreignKeyConstraint0.getParentColumns();
      foreignKeyConstraint0.getParentColumns();
      foreignKeyConstraint0.isImplied();
      foreignKeyConstraint0.getDeleteRuleName();
      foreignKeyConstraint0.getChildColumns();
      foreignKeyConstraint0.getDeleteRuleDescription();
      Integer integer0 = new Integer(4);
      foreignKeyConstraint0.getDeleteRuleAlias();
      foreignKeyConstraint0.getChildColumns();
      foreignKeyConstraint0.isImplied();
      boolean boolean0 = foreignKeyConstraint0.isNullOnDelete();
      foreignKeyConstraint0.getParentTable();
      foreignKeyConstraint0.getParentColumns();
      List<TableColumn> list0 = foreignKeyConstraint0.getChildColumns();
      foreignKeyConstraint0.getParentColumns();
      foreignKeyConstraint0.isNullOnDelete();
      foreignKeyConstraint0.isRestrictDelete();
      foreignKeyConstraint0.addChildColumn((TableColumn) null);
      boolean boolean1 = foreignKeyConstraint0.isImplied();
      assertFalse(boolean1);
      
      List<TableColumn> list1 = foreignKeyConstraint0.getParentColumns();
      assertTrue(list1.equals((Object)list0));
      
      boolean boolean2 = foreignKeyConstraint0.isRestrictDelete();
      assertEquals(4, foreignKeyConstraint0.getDeleteRule());
      assertTrue(boolean2 == boolean0);
      assertEquals(2136, foreignKeyConstraint0.getUpdateRule());
      assertFalse(boolean2);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, (String) null, (-3355), 156);
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta0).getComments();
      doReturn((String) null).when(tableColumnMeta0).getDefaultValue();
      doReturn(0).when(tableColumnMeta0).getDigits();
      doReturn((String) null).when(tableColumnMeta0).getId();
      doReturn((String) null).when(tableColumnMeta0).getName();
      doReturn(0).when(tableColumnMeta0).getSize();
      doReturn((String) null).when(tableColumnMeta0).getType();
      doReturn(false).when(tableColumnMeta0).isAutoUpdated();
      doReturn(false).when(tableColumnMeta0).isNullable();
      TableColumn tableColumn0 = new TableColumn((Table) null, tableColumnMeta0);
      foreignKeyConstraint0.addChildColumn(tableColumn0);
      String[] stringArray0 = new String[6];
      stringArray0[0] = null;
      stringArray0[1] = null;
      stringArray0[2] = null;
      stringArray0[3] = null;
      stringArray0[4] = null;
      stringArray0[5] = null;
      Config config0 = null;
      try {
        config0 = new Config(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.Config", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta0).getComments();
      doReturn((String) null).when(tableColumnMeta0).getDefaultValue();
      doReturn(0).when(tableColumnMeta0).getDigits();
      doReturn((String) null).when(tableColumnMeta0).getId();
      doReturn((String) null).when(tableColumnMeta0).getName();
      doReturn(0).when(tableColumnMeta0).getSize();
      doReturn((String) null).when(tableColumnMeta0).getType();
      doReturn(false).when(tableColumnMeta0).isAutoUpdated();
      doReturn(false).when(tableColumnMeta0).isNullable();
      TableColumn tableColumn0 = new TableColumn((Table) null, tableColumnMeta0);
      Config.getInstance();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      String string0 = "CCyFmztrnUaW";
      ForeignKeyConstraint foreignKeyConstraint0 = null;
      try {
        foreignKeyConstraint0 = new ForeignKeyConstraint(tableColumn0, tableColumn0, 125, 125);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.TableColumn", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta0).getComments();
      doReturn((String) null).when(tableColumnMeta0).getDefaultValue();
      doReturn(0).when(tableColumnMeta0).getDigits();
      doReturn((String) null).when(tableColumnMeta0).getId();
      doReturn((String) null).when(tableColumnMeta0).getName();
      doReturn(0).when(tableColumnMeta0).getSize();
      doReturn((String) null).when(tableColumnMeta0).getType();
      doReturn(false).when(tableColumnMeta0).isAutoUpdated();
      doReturn(false).when(tableColumnMeta0).isNullable();
      TableColumn tableColumn0 = new TableColumn((Table) null, tableColumnMeta0);
      Config.getInstance();
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", 3606, 3606);
      TableColumnMeta tableColumnMeta1 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta1).getComments();
      doReturn((String) null).when(tableColumnMeta1).getDefaultValue();
      doReturn(0).when(tableColumnMeta1).getDigits();
      doReturn((String) null).when(tableColumnMeta1).getId();
      doReturn((String) null).when(tableColumnMeta1).getName();
      doReturn(0).when(tableColumnMeta1).getSize();
      doReturn((String) null).when(tableColumnMeta1).getType();
      doReturn(false).when(tableColumnMeta1).isAutoUpdated();
      doReturn(false).when(tableColumnMeta1).isNullable();
      TableColumn tableColumn1 = new TableColumn((Table) null, tableColumnMeta1);
      Config config0 = Config.getInstance();
      foreignKeyConstraint0.getParentColumns();
      foreignKeyConstraint0.compareTo(foreignKeyConstraint0);
      String string0 = null;
      // Undeclared exception!
      try { 
        config0.getRemainingParameters();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // org.evosuite.runtime.mock.java.lang.MockThrowable: Required parameter '-o' was not specified.
         //
         verifyException("net.sourceforge.schemaspy.Config", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, (String) null, 4, 4);
      foreignKeyConstraint0.getParentColumns();
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "", 4, 4);
      foreignKeyConstraint0.getParentColumns();
      // Undeclared exception!
      try { 
        foreignKeyConstraint0.compareTo(foreignKeyConstraint1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.ForeignKeyConstraint", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.310391393127219
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "OH%=1T<~D!", 156, 0);
      foreignKeyConstraint0.isRestrictDelete();
      foreignKeyConstraint0.isCascadeOnDelete();
      foreignKeyConstraint0.getDeleteRuleName();
      foreignKeyConstraint0.getChildColumns();
      foreignKeyConstraint0.getDeleteRuleDescription();
      foreignKeyConstraint0.getDeleteRuleAlias();
      System.setCurrentTimeMillis(3035L);
  }
}
