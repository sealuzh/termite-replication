/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 05:56:11 GMT 2019
 */

package org.pdfsam.guiclient.commons.models;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.lowagie.text.pdf.PdfGraphics2D;
import java.awt.AWTEventMulticaster;
import java.awt.Color;
import java.awt.ContainerOrderFocusTraversalPolicy;
import java.awt.HeadlessException;
import java.awt.RenderingHints;
import java.awt.color.ICC_Profile;
import java.awt.dnd.DropTarget;
import java.awt.dnd.DropTargetListener;
import java.awt.event.MouseWheelListener;
import java.awt.image.BufferedImage;
import java.awt.image.renderable.ParameterBlock;
import java.io.IOException;
import java.time.temporal.ChronoField;
import java.util.ArrayDeque;
import java.util.ArrayList;
import java.util.Collection;
import java.util.EmptyStackException;
import java.util.HashSet;
import java.util.Hashtable;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.PriorityQueue;
import java.util.Stack;
import java.util.TreeSet;
import java.util.Vector;
import javax.media.jai.CollectionOp;
import javax.media.jai.OperationRegistry;
import javax.media.jai.operator.IIPResolutionDescriptor;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JLayeredPane;
import javax.swing.JTextField;
import javax.swing.KeyStroke;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.StyledEditorKit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;
import org.pdfsam.guiclient.commons.models.VisualListModel;
import org.pdfsam.guiclient.dto.VisualPageListItem;
import sun.awt.SunHints;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class VisualListModel_ESTest extends VisualListModel_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.3413074072024185
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      OperationRegistry.getThreadSafeOperationRegistry();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      Stack<VisualPageListItem> stack1 = new Stack<VisualPageListItem>();
      stack1.add((VisualPageListItem) null);
      visualListModel0.moveUpIndex(1);
      LinkedHashSet<VisualPageListItem> linkedHashSet1 = new LinkedHashSet<VisualPageListItem>();
      visualListModel0.addAllElements(1933, (Collection<VisualPageListItem>) arrayList0);
      // Undeclared exception!
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.7436954770702497
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "/images/thumbnailerror.png");
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      visualListModel0.moveUpIndex((-2));
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.addAllElements((-812), (Collection<VisualPageListItem>) stack0);
      int[] intArray0 = new int[1];
      visualListModel0.reverseElements(intArray0);
      visualListModel0.removeElements(intArray0, true);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel0.getElements();
      visualListModel0.getSize();
      Stack<String> stack1 = new Stack<String>();
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      visualListModel1.getValidElements();
      visualListModel0.clearData();
      stack0.remove((Object) stack1);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      visualListModel0.getElementAt(1161);
      assertEquals(2, visualListModel0.getSize());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "Vj-xc'0");
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex(0);
      int int0 = 10000;
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      Hashtable<RenderingHints.Key, VisualPageListItem> hashtable0 = new Hashtable<RenderingHints.Key, VisualPageListItem>();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_COLOR_RENDERING;
      ParameterBlock parameterBlock0 = new ParameterBlock();
      RenderingHints renderingHints0 = new RenderingHints(hashtable0);
      CollectionOp collectionOp0 = new CollectionOp("Vj-xc'0", parameterBlock0, renderingHints0);
      // Undeclared exception!
      try { 
        visualListModel0.prependAllElements(collectionOp0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No descriptor by name \"Vj-xc'0\" is registered under mode \"collection\".
         //
         verifyException("javax.media.jai.OperationRegistry", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.453211517946122
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[6];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 0;
      intArray0[4] = 0;
      intArray0[5] = 0;
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      OperationRegistry.getThreadSafeOperationRegistry();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      Stack<VisualPageListItem> stack1 = new Stack<VisualPageListItem>();
      stack1.add((VisualPageListItem) null);
      visualListModel0.moveUpIndex(765);
      LinkedHashSet<VisualPageListItem> linkedHashSet1 = new LinkedHashSet<VisualPageListItem>();
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) linkedHashSet0);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.reverseElements(intArray0);
      assertEquals(2, visualListModel0.getSize());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.4553949936248007
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      visualListModel0.moveUpIndex((-2));
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.addAllElements((-812), (Collection<VisualPageListItem>) stack0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel0.getElements();
      visualListModel0.getSize();
      Stack<String> stack1 = new Stack<String>();
      visualListModel1.getValidElements();
      visualListModel0.clearData();
      visualListModel1.getElements();
      int[] intArray0 = new int[8];
      intArray0[0] = 9999;
      intArray0[1] = 1;
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem(116, "/", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.0164927125448684
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.addAllElements((-812), (Collection<VisualPageListItem>) stack0);
      stack0.listIterator();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "5]gEg``Q[59PW<";
      DefaultComboBoxModel<String> defaultComboBoxModel0 = new DefaultComboBoxModel<String>(stringArray0);
      JComboBox<String> jComboBox0 = new JComboBox<String>(defaultComboBoxModel0);
      jComboBox0.getPropertyChangeListeners("+og4j.defaultInitOverride");
      JComboBox<String> jComboBox1 = new JComboBox<String>(stringArray0);
      JComboBox<String> jComboBox2 = new JComboBox<String>();
      MouseWheelListener mouseWheelListener0 = mock(MouseWheelListener.class, new ViolatedAssumptionAnswer());
      MouseWheelListener mouseWheelListener1 = AWTEventMulticaster.add(mouseWheelListener0, mouseWheelListener0);
      AWTEventMulticaster.remove(mouseWheelListener1, mouseWheelListener1);
      MouseWheelListener mouseWheelListener2 = AWTEventMulticaster.add((MouseWheelListener) null, mouseWheelListener1);
      AWTEventMulticaster.remove(mouseWheelListener2, mouseWheelListener2);
      jComboBox0.addMouseWheelListener(mouseWheelListener1);
      visualListModel0.removeListDataListener(jComboBox0);
      stack0.add((VisualPageListItem) null);
      visualListModel0.getValidElements();
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel0.clearData();
      Object object0 = new Object();
      stack0.remove(object0);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      assertEquals(1, visualListModel0.getSize());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.7385727210046005
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.prependAllElements(linkedHashSet0);
      VisualListModel visualListModel2 = new VisualListModel();
      ChronoField chronoField0 = ChronoField.HOUR_OF_AMPM;
      VisualPageListItem[] visualPageListItemArray0 = visualListModel0.getElements();
      assertEquals(1, visualPageListItemArray0.length);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.6593340983935647
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      visualListModel0.moveUpIndex((-2));
      String[] stringArray0 = new String[7];
      stringArray0[0] = "Dbc2";
      stringArray0[1] = "N<@&8_s|@Cnn";
      stringArray0[2] = "";
      stringArray0[3] = ").";
      stringArray0[4] = ":zjq";
      stringArray0[5] = "";
      stringArray0[6] = "OFF";
      JComboBox<String> jComboBox0 = new JComboBox<String>(stringArray0);
      Stack<String> stack0 = new Stack<String>();
      jComboBox0.firePopupMenuWillBecomeInvisible();
      JComboBox<String> jComboBox1 = new JComboBox<String>(stack0);
      Color color0 = Color.magenta;
      Color.getColor("siU3*yB|2A~6U");
      jComboBox1.setForeground(color0);
      jComboBox0.getSelectedObjects();
      int[] intArray0 = new int[1];
      intArray0[0] = (-2);
      try { 
        visualListModel0.reverseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.moveDownIndexes((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.1341639076887824
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.updateElementAt((-180), (VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      visualListModel0.moveUpIndex(1);
      LinkedHashSet<VisualPageListItem> linkedHashSet1 = new LinkedHashSet<VisualPageListItem>();
      visualListModel0.addAllElements(65535, (Collection<VisualPageListItem>) linkedHashSet0);
      visualListModel0.clearData();
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.1982020749289486
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      visualListModel0.addElementAt((VisualPageListItem) null, (-855));
      VisualPageListItem visualPageListItem0 = null;
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "/images/thumbnailerror.png");
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      visualListModel0.moveUpIndex((-2));
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.addAllElements((-812), (Collection<VisualPageListItem>) stack0);
      int[] intArray0 = new int[1];
      visualListModel0.reverseElements(intArray0);
      visualListModel0.removeElements(intArray0, true);
      // Undeclared exception!
      try { 
        stack0.pop();
        fail("Expecting exception: EmptyStackException");
      
      } catch(EmptyStackException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Stack", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.922685393561663
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[9];
      intArray0[0] = (-866);
      intArray0[1] = 1398;
      intArray0[2] = 675;
      intArray0[3] = 675;
      intArray0[4] = 14;
      intArray0[5] = 1207;
      intArray0[6] = (-3018);
      intArray0[7] = Integer.MIN_VALUE;
      intArray0[8] = Integer.MIN_VALUE;
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      VisualPageListItem visualPageListItem0 = null;
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      int int0 = (-2);
      visualListModel0.moveUpIndex((-2));
      int[] intArray1 = new int[1];
      intArray1[0] = (-2);
      try { 
        visualListModel0.rotateClockwiseElements(intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.2731738319283363
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      int int0 = (-2);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[3];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.moveUpIndex((-2));
      int int1 = (-812);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add(visualPageListItemArray0[2]);
      visualListModel0.addAllElements((-812), (Collection<VisualPageListItem>) stack0);
      int[] intArray0 = new int[1];
      // Undeclared exception!
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.7343996803791222
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      VisualPageListItem visualPageListItem0 = null;
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.prependAllElements(linkedHashSet0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.parallelStream();
      stack0.add((VisualPageListItem) null);
      Stack<VisualPageListItem> stack1 = new Stack<VisualPageListItem>();
      stack1.add((VisualPageListItem) null);
      Stack<VisualPageListItem> stack2 = new Stack<VisualPageListItem>();
      stack2.add((VisualPageListItem) null);
      // Undeclared exception!
      try { 
        visualListModel0.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.0211196177983384
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.reverseElements(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.removeElements(25, 2107, false);
      visualListModel1.getValidElements();
      // Undeclared exception!
      try { 
        visualListModel1.removeElements((int[]) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      JComboBox<String> jComboBox0 = new JComboBox<String>();
      visualListModel0.removeListDataListener(jComboBox0);
      visualListModel0.reverseElements(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.reverseElements((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.147576009616535
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElementAt((VisualPageListItem) null, (-969));
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      arrayList0.trimToSize();
      visualListModel0.moveUpIndex((-1309));
      String[] stringArray0 = new String[1];
      JComboBox<String> jComboBox0 = new JComboBox<String>(stringArray0);
      StyledEditorKit.BoldAction styledEditorKit_BoldAction0 = new StyledEditorKit.BoldAction();
      visualListModel0.updateElementAt(718, (VisualPageListItem) null);
      ArrayDeque<VisualPageListItem> arrayDeque0 = new ArrayDeque<VisualPageListItem>();
      arrayDeque0.removeFirstOccurrence(jComboBox0);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) arrayDeque0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.moveUpIndex((-1720));
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      visualListModel1.addAllElements(1, (Collection<VisualPageListItem>) priorityQueue0);
      assertEquals(0, priorityQueue0.size());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = visualListModel0.getElements();
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.getValidElements();
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem((-2807), "/", "Rendering class: [");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.1290003949677563
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      Stack<VisualPageListItem> stack1 = new Stack<VisualPageListItem>();
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, (String) null);
      stack1.add((VisualPageListItem) null);
      Stack<VisualPageListItem> stack2 = new Stack<VisualPageListItem>();
      stack2.add((VisualPageListItem) null);
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      visualListModel0.elementChanged((VisualPageListItem) null);
      Integer integer0 = IIPResolutionDescriptor.MAX_RESOLUTION;
      visualListModel0.addElement((VisualPageListItem) null);
      // Undeclared exception!
      try { 
        visualListModel0.setData((VisualPageListItem[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      String[] stringArray0 = new String[1];
      JComboBox<String> jComboBox0 = new JComboBox<String>(stringArray0);
      ContainerOrderFocusTraversalPolicy containerOrderFocusTraversalPolicy0 = new ContainerOrderFocusTraversalPolicy();
      jComboBox0.getMaximumRowCount();
      jComboBox0.setFocusTraversalPolicy(containerOrderFocusTraversalPolicy0);
      visualListModel0.addListDataListener(jComboBox0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[9];
      visualListModel0.setData(visualPageListItemArray0);
      assertEquals(9, visualListModel0.getSize());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) visualListModel0;
      objectArray0[1] = (Object) visualListModel0;
      objectArray0[2] = (Object) visualListModel0;
      objectArray0[3] = (Object) visualListModel0;
      DefaultComboBoxModel<Object> defaultComboBoxModel0 = new DefaultComboBoxModel<Object>(objectArray0);
      JComboBox<Object> jComboBox0 = new JComboBox<Object>(defaultComboBoxModel0);
      visualListModel0.addListDataListener(jComboBox0);
      int[] intArray0 = null;
      // Undeclared exception!
      try { 
        visualListModel0.moveUpIndexes((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        visualListModel0.subList(0, (-2044), true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(0) > toIndex(-2044)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.6383809415027386
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getElements();
      int[] intArray0 = new int[0];
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.removeElements(1, 65535, true);
      visualListModel1.getValidElements();
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.removeElements(intArray0, true);
      VisualListModel visualListModel3 = new VisualListModel();
      visualListModel2.getElements();
      visualListModel0.removeElements(50000, 65535, true);
      visualListModel1.getSize();
      visualListModel0.subList(0, 0);
      visualListModel3.getElementAt(93);
      visualListModel0.subList(765, 65535, true);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      assertFalse(visualListModel0.equals((Object)visualListModel2));
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElementAt((VisualPageListItem) null, (-969));
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      arrayList0.trimToSize();
      visualListModel0.moveUpIndex((-1309));
      String[] stringArray0 = new String[1];
      JComboBox<String> jComboBox0 = new JComboBox<String>(stringArray0);
      StyledEditorKit.BoldAction styledEditorKit_BoldAction0 = new StyledEditorKit.BoldAction();
      Vector<Object> vector0 = new Vector<Object>();
      ParameterBlock parameterBlock0 = new ParameterBlock(vector0, vector0);
      parameterBlock0.getSources();
      ChronoField chronoField0 = ChronoField.AMPM_OF_DAY;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      vector0.add((Object) pdfGraphics2D_HyperLinkKey0);
      ParameterBlock parameterBlock1 = new ParameterBlock(vector0);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_COLOR_RENDERING;
      Integer.getInteger("", (-1309));
      Hashtable<RenderingHints.Key, VisualPageListItem> hashtable0 = new Hashtable<RenderingHints.Key, VisualPageListItem>();
      RenderingHints renderingHints0 = new RenderingHints(hashtable0);
      visualListModel0.clearData();
      // Undeclared exception!
      try { 
        visualListModel0.getElementAt((-1309));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "-\"2Zl+T");
      VisualListModel visualListModel0 = new VisualListModel();
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      visualListModel0.prependAllElements(arrayList0);
      // Undeclared exception!
      try { 
        visualListModel0.setData((Vector<VisualPageListItem>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 0;
      boolean boolean0 = true;
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      visualListModel0.moveUpIndex(0);
      String[] stringArray0 = new String[1];
      JComboBox<String> jComboBox0 = new JComboBox<String>(stringArray0);
      KeyStroke keyStroke0 = KeyStroke.getKeyStroke(0, 0);
      jComboBox0.getActionForKeyStroke(keyStroke0);
      visualListModel0.addListDataListener(jComboBox0);
      visualListModel0.removeElements(0, 0, true);
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(0, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.1392921128169875
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      VisualPageListItem visualPageListItem0 = null;
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.updateElementAt((-180), (VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      visualListModel0.moveUpIndex(1);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel0.getListDataListeners();
      LinkedHashSet<VisualPageListItem> linkedHashSet1 = new LinkedHashSet<VisualPageListItem>();
      visualListModel0.addAllElements(65535, (Collection<VisualPageListItem>) linkedHashSet0);
      // Undeclared exception!
      try { 
        visualListModel1.rotateAnticlockwiseElements((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.undeleteElements(intArray0);
      JComboBox<String> jComboBox0 = new JComboBox<String>();
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.addListDataListener(jComboBox0);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.elementsChanged();
      OperationRegistry.getThreadSafeOperationRegistry();
      ParameterBlock parameterBlock0 = new ParameterBlock();
      Vector<Object> vector0 = parameterBlock0.getSources();
      Stack<Object> stack0 = new Stack<Object>();
      ParameterBlock parameterBlock1 = new ParameterBlock(vector0, stack0);
      Vector<Object> vector1 = parameterBlock0.getSources();
      ChronoField chronoField0 = ChronoField.AMPM_OF_DAY;
      stack0.add((Object) parameterBlock0);
      ParameterBlock parameterBlock2 = new ParameterBlock(vector1);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_COLOR_RENDERING;
      Integer.getInteger("", (-632));
      Hashtable<RenderingHints.Key, VisualPageListItem> hashtable0 = new Hashtable<RenderingHints.Key, VisualPageListItem>();
      RenderingHints renderingHints0 = new RenderingHints(hashtable0);
      visualListModel1.reverseElements(intArray0);
      ICC_Profile[] iCC_ProfileArray0 = new ICC_Profile[6];
      try { 
        ICC_Profile.getInstance("JC[Owkl5Q5^Fu/2%-S");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Cannot open file JC[Owkl5Q5^Fu/2%-S
         //
         verifyException("java.awt.color.ICC_Profile", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      boolean boolean0 = false;
      int int0 = (-2244);
      // Undeclared exception!
      try { 
        visualListModel0.subList(1609, (-2244), false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(1609) > toIndex(-2244)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.1084013788541878
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.subList(0, 0, false);
      visualListModel0.moveUpIndex(0);
      String[] stringArray0 = new String[1];
      JComboBox<String> jComboBox0 = new JComboBox<String>();
      jComboBox0.doLayout();
      jComboBox0.getKeySelectionManager();
      visualListModel0.addListDataListener(jComboBox0);
      JComboBox<String> jComboBox1 = new JComboBox<String>(stringArray0);
      ContainerOrderFocusTraversalPolicy containerOrderFocusTraversalPolicy0 = new ContainerOrderFocusTraversalPolicy();
      jComboBox1.getMaximumRowCount();
      jComboBox1.setFocusTraversalPolicy(containerOrderFocusTraversalPolicy0);
      visualListModel0.addListDataListener(jComboBox1);
      visualListModel0.moveDownIndex(44);
      visualListModel0.subList((-1), (-1));
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(0, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getElements();
      int[] intArray0 = new int[0];
      visualListModel0.reverseElements(intArray0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "F:C@FgMP";
      stringArray0[1] = "2\"Bjj_<`";
      JComboBox<String> jComboBox0 = new JComboBox<String>(stringArray0);
      JComboBox<String> jComboBox1 = new JComboBox<String>();
      jComboBox1.setForeground((Color) null);
      jComboBox0.getSelectedObjects();
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.getSize();
      jComboBox0.getPropertyChangeListeners("");
      String[] stringArray1 = new String[5];
      stringArray1[0] = "";
      stringArray1[1] = "2\"Bjj_<`";
      stringArray1[2] = "F:C@FgMP";
      stringArray1[3] = "F:C@FgMP";
      stringArray1[4] = "F:C@FgMP";
      JComboBox<String> jComboBox2 = new JComboBox<String>(stringArray1);
      DefaultComboBoxModel<Object> defaultComboBoxModel0 = new DefaultComboBoxModel<Object>();
      JComboBox<Object> jComboBox3 = new JComboBox<Object>(defaultComboBoxModel0);
      JComboBox<String> jComboBox4 = new JComboBox<String>(stringArray0);
      visualListModel0.removeListDataListener(jComboBox4);
      visualListModel0.rotateClockwiseElements(intArray0);
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      visualListModel0.prependAllElements((Collection<VisualPageListItem>) null);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 0;
      boolean boolean0 = false;
      int int1 = (-2946);
      visualListModel0.subList((-2946), 0, true);
      visualListModel0.moveUpIndex(0);
      JComboBox<String> jComboBox0 = new JComboBox<String>();
      jComboBox0.doLayout();
      jComboBox0.getKeySelectionManager();
      visualListModel0.addListDataListener(jComboBox0);
      String[] stringArray0 = null;
      JComboBox<String> jComboBox1 = null;
      try {
        jComboBox1 = new JComboBox<String>((String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.swing.DefaultComboBoxModel", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.2248830687452417
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.subList(0, 0, true);
      visualListModel0.moveUpIndex(0);
      String[] stringArray0 = new String[1];
      JComboBox<String> jComboBox0 = new JComboBox<String>();
      jComboBox0.getKeySelectionManager();
      visualListModel0.addListDataListener(jComboBox0);
      JComboBox<String> jComboBox1 = new JComboBox<String>(stringArray0);
      ContainerOrderFocusTraversalPolicy containerOrderFocusTraversalPolicy0 = new ContainerOrderFocusTraversalPolicy();
      jComboBox1.getMaximumRowCount();
      jComboBox1.setFocusTraversalPolicy(containerOrderFocusTraversalPolicy0);
      visualListModel0.addListDataListener(jComboBox1);
      assertTrue(jComboBox1.getFocusTraversalKeysEnabled());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) null);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[2];
      int int0 = (-3309);
      visualListModel0.getListDataListeners();
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.moveDownIndex((-3309));
      intArray0[0] = (-498);
      intArray0[1] = (-2046);
      BufferedImage bufferedImage0 = null;
      try {
        bufferedImage0 = new BufferedImage((-498), (-498), (-498));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown image type -498
         //
         verifyException("java.awt.image.BufferedImage", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.reverseElements(intArray0);
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel0.removeElements(intArray0, true);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      BufferedImage bufferedImage0 = null;
      try {
        bufferedImage0 = new BufferedImage(2958, 65535, 1953);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown image type 1953
         //
         verifyException("java.awt.image.BufferedImage", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.0164927125448684
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.removeElements((-3), (-1), false);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.moveUpIndex((-1));
      JComboBox<String> jComboBox0 = new JComboBox<String>();
      jComboBox0.doLayout();
      JComboBox.KeySelectionManager jComboBox_KeySelectionManager0 = jComboBox0.getKeySelectionManager();
      visualListModel0.addListDataListener(jComboBox0);
      String[] stringArray0 = new String[1];
      jComboBox0.removeItem(jComboBox_KeySelectionManager0);
      JComboBox<String> jComboBox1 = new JComboBox<String>(stringArray0);
      ContainerOrderFocusTraversalPolicy containerOrderFocusTraversalPolicy0 = new ContainerOrderFocusTraversalPolicy();
      jComboBox0.getMaximumRowCount();
      jComboBox1.setFocusTraversalPolicy(containerOrderFocusTraversalPolicy0);
      JComboBox<String> jComboBox2 = new JComboBox<String>();
      visualListModel1.addListDataListener(jComboBox2);
      visualListModel1.moveDownIndex(8);
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      VisualListModel visualListModel2 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel2.removeElementAt(8, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 8
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.4102453456579889
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.addAllElements((-812), (Collection<VisualPageListItem>) stack0);
      stack0.listIterator();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "+og4j.defaultInitOverride";
      stringArray0[1] = "5]gEg``Q[59PW<";
      stringArray0[2] = "+og4j.defaultInitOverride";
      stringArray0[3] = "+og4j.defaultInitOverride";
      stringArray0[4] = "+og4j.defaultInitOverride";
      stringArray0[5] = "+og4j.defaultInitOverride";
      stringArray0[6] = "+og4j.defaultInitOverride";
      DefaultComboBoxModel<String> defaultComboBoxModel0 = new DefaultComboBoxModel<String>(stringArray0);
      JComboBox<String> jComboBox0 = new JComboBox<String>(defaultComboBoxModel0);
      jComboBox0.getPropertyChangeListeners("+og4j.defaultInitOverride");
      JComboBox<String> jComboBox1 = new JComboBox<String>(stringArray0);
      JComboBox<String> jComboBox2 = new JComboBox<String>();
      MouseWheelListener mouseWheelListener0 = mock(MouseWheelListener.class, new ViolatedAssumptionAnswer());
      MouseWheelListener mouseWheelListener1 = AWTEventMulticaster.add(mouseWheelListener0, mouseWheelListener0);
      AWTEventMulticaster.remove(mouseWheelListener1, mouseWheelListener1);
      jComboBox2.addMouseWheelListener((MouseWheelListener) null);
      visualListModel0.removeListDataListener(jComboBox2);
      int[] intArray0 = new int[2];
      stack0.add((VisualPageListItem) null);
      intArray0[0] = 9;
      visualListModel0.getValidElements();
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel0.addAllElements(9, (Collection<VisualPageListItem>) stack0);
      assertFalse(stack0.empty());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveUpIndex(2);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      vector0.retainAll(linkedList0);
      visualListModel0.appendAllElements(vector0);
      visualListModel0.prependAllElements(vector0);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-107);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)79;
      SunHints.LCDContrastKey sunHints_LCDContrastKey0 = (SunHints.LCDContrastKey)RenderingHints.KEY_TEXT_LCD_CONTRAST;
      BufferedImage bufferedImage0 = null;
      try {
        bufferedImage0 = new BufferedImage((byte)79, (-5870), (-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown image type -1
         //
         verifyException("java.awt.image.BufferedImage", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.4993646124305886
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      VisualListModel visualListModel1 = new VisualListModel();
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      visualListModel1.getListDataListeners();
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      Stack<String> stack0 = new Stack<String>();
      int[] intArray1 = new int[9];
      intArray1[1] = 536;
      visualListModel0.rotateClockwiseElements(intArray0);
      BufferedImage bufferedImage0 = null;
      try {
        bufferedImage0 = new BufferedImage(1953, 2958, 2958);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown image type 2958
         //
         verifyException("java.awt.image.BufferedImage", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.2508570947192676
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) vector0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.addAllElements(0, (Collection<VisualPageListItem>) null);
      VisualPageListItem visualPageListItem0 = null;
      visualListModel1.elementChanged((VisualPageListItem) null);
      VisualPageListItem visualPageListItem1 = null;
      try {
        visualPageListItem1 = new VisualPageListItem(1325, "", "/");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.subList(1226, (-7));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(1226) > toIndex(-7)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.394714983677679
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 0;
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "a[rH6kv>)]u:Y@G?");
      boolean boolean0 = false;
      visualListModel0.removeElements(0, (-1), false);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.moveUpIndex((-1));
      JComboBox<String> jComboBox0 = new JComboBox<String>();
      jComboBox0.doLayout();
      jComboBox0.getKeySelectionManager();
      visualListModel0.addListDataListener(jComboBox0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      JTextField jTextField0 = new JTextField("");
      DropTarget dropTarget0 = null;
      try {
        dropTarget0 = new DropTarget(jTextField0, (-7), (DropTargetListener) null, false);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.dnd.DropTarget", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[5];
      intArray0[0] = 1;
      intArray0[1] = 50000;
      intArray0[2] = (-1);
      intArray0[3] = (-1);
      intArray0[4] = 50000;
      visualListModel0.removeElements(intArray0, false);
      visualListModel0.removeElements(256, 1, false);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[6];
      visualListModel0.moveDownIndexes(intArray0);
      int[] intArray1 = null;
      Stack<String> stack0 = new Stack<String>();
      // Undeclared exception!
      try { 
        visualListModel0.rotateClockwiseElements((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      ChronoField chronoField0 = ChronoField.MILLI_OF_DAY;
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      vector0.remove((Object) null);
      visualListModel0.setData(vector0);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.3120076729259056
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) stack0);
      VisualListModel visualListModel1 = new VisualListModel();
      Vector<Object> vector0 = new Vector<Object>();
      ParameterBlock parameterBlock0 = new ParameterBlock(vector0);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_COLOR_RENDERING;
      Integer integer0 = JLayeredPane.PALETTE_LAYER;
      Hashtable<RenderingHints.Key, VisualPageListItem> hashtable0 = new Hashtable<RenderingHints.Key, VisualPageListItem>();
      RenderingHints renderingHints0 = new RenderingHints(hashtable0);
      Object object0 = visualListModel1.getElementAt(0);
      assertNull(object0);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.reverseElements(intArray0);
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      int[] intArray1 = new int[4];
      intArray1[0] = 65535;
      intArray1[1] = 65535;
      intArray1[2] = 65535;
      intArray1[3] = 65535;
      visualListModel0.rotateAnticlockwiseElements(intArray1);
      Stack<String> stack0 = new Stack<String>();
      visualListModel0.rotateClockwiseElements(intArray0);
      int int0 = 2909;
      BufferedImage bufferedImage0 = null;
      try {
        bufferedImage0 = new BufferedImage(2909, (-2133), 65535);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown image type 65535
         //
         verifyException("java.awt.image.BufferedImage", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.2147340152127564
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.undeleteElements(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel0.moveUpIndexes(intArray0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "2mE";
      stringArray0[1] = "F:C@FgMP";
      JComboBox<String> jComboBox0 = new JComboBox<String>(stringArray0);
      jComboBox0.setForeground((Color) null);
      jComboBox0.getSelectedObjects();
      visualListModel0.reverseElements(intArray0);
      JComboBox<String> jComboBox1 = new JComboBox<String>(stringArray0);
      JComboBox<String> jComboBox2 = new JComboBox<String>(stringArray0);
      visualListModel0.removeListDataListener(jComboBox0);
      visualListModel0.rotateClockwiseElements(intArray0);
      OperationRegistry.getThreadSafeOperationRegistry();
      ParameterBlock parameterBlock0 = new ParameterBlock();
      Vector<Object> vector0 = parameterBlock0.getParameters();
      Stack<Object> stack0 = new Stack<Object>();
      ParameterBlock parameterBlock1 = new ParameterBlock(vector0, stack0);
      Hashtable<RenderingHints.Key, DefaultTableModel> hashtable0 = new Hashtable<RenderingHints.Key, DefaultTableModel>();
      RenderingHints renderingHints0 = new RenderingHints(hashtable0);
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(316, 116);
      Hashtable<RenderingHints.Key, DefaultTableModel> hashtable1 = new Hashtable<RenderingHints.Key, DefaultTableModel>(hashtable0);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_DITHERING;
      hashtable1.replace((RenderingHints.Key) sunHints_Key0, defaultTableModel0, defaultTableModel0);
      RenderingHints renderingHints1 = new RenderingHints(hashtable1);
      Object object0 = visualListModel0.getElementAt(854);
      assertNull(object0);
  }
}
