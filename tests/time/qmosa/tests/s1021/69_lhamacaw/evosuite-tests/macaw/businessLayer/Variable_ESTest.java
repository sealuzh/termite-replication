/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 05:50:48 GMT 2019
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Comparator;
import java.util.ConcurrentModificationException;
import java.util.List;
import java.util.Locale;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.businessLayer.VariableSummary;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.824516910069948
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier(248);
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      ontologyTerm0.setNameSpace((String) null);
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, macawChangeEvent0.getChangedObjectIdentifier());
      
      rawVariable0.setColumnStart((String) null);
      ontologyTerm0.setNameSpace("[8w2v4-K41;$8'DPM/");
      rawVariable0.addOntologyTerm(ontologyTerm0);
      user0.setEmail("variable.cleaningStatus.label");
      user0.setFirstName((String) null);
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.getSupportingDocuments();
      assertEquals("Unknown", rawVariable0.getAvailability());
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("Unknown", derivedVariable1.getCategory());
      
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      boolean boolean0 = derivedVariable0.isCoded();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.6680546661904034
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.addValueLabel(valueLabel0);
      derivedVariable0.setAlias("user.sttus.KaveCfanges");
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      arrayList0.parallelStream();
      User user0 = new User("8uzx}19", "8uzx}19");
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<MacawChangeEvent> arrayList1 = RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      arrayList0.retainAll(arrayList1);
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.clone();
      ArrayList<Variable> arrayList2 = new ArrayList<Variable>();
      derivedVariable0.removeSourceVariables(arrayList2);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.hasSameDisplayName(rawVariable0);
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.4435896416877303
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      ontologyTerm0.setNameSpace((String) null);
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, (Variable) null);
      rawVariable0.setColumnStart("lpf");
      ontologyTerm0.setNameSpace("lpf");
      rawVariable0.addOntologyTerm(ontologyTerm0);
      user0.setEmail("lpf");
      user0.setFirstName((String) null);
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, (Variable) null, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("user.county.saveChanges");
      derivedVariable0.setIdentifier(32);
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      arrayList0.spliterator();
      derivedVariable0.addOntologyTerms(arrayList0);
      // Undeclared exception!
      try { 
        derivedVariable0.containsSupportingDocument((SupportingDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.notes = ",-B%6wq-q90kp";
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      String string0 = derivedVariable0.getFilePath();
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", string0);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.setIdentifier((-155));
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.createVariableSummary();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.hasSameDisplayName(rawVariable0);
      assertEquals("-155", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.143652409619771
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      derivedVariable0.containsSourceVariable(rawVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.getFilePath();
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable1, (Variable) null);
      assertNull(macawChangeEvent0);
      assertFalse(rawVariable1.isCleaned());
      assertFalse(rawVariable1.isNewRecord());
      assertFalse(rawVariable1.isCoded());
      assertEquals(0, rawVariable1.getIdentifier());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setOntologyTerms((ArrayList<OntologyTerm>) null);
      RawVariable rawVariable1 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable1.removeOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      derivedVariable0.containsSourceVariable(rawVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.getFilePath();
      User user0 = new User();
      // Undeclared exception!
      try { 
        derivedVariable1.removeOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.150950739936087
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      derivedVariable0.containsSourceVariable(rawVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.getFilePath();
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, rawVariable1);
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      assertFalse(rawVariable1.isNewRecord());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertFalse(rawVariable1.isCoded());
      assertNotNull(macawChangeEvent0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.2963989538727296
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      ontologyTerm0.setNameSpace((String) null);
      User user0 = new User("0CuVgU) SmpT-q", "|KCWH||HgrN!O1;i@");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, rawVariable0);
      rawVariable0.setColumnStart("0CuVgU) SmpT-q");
      ontologyTerm0.setNameSpace((String) null);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm1);
      User user1 = new User((String) null, "|KCWH||HgrN!O1;i@");
      user1.setEmail("general.fieldValue.unknown");
      User user2 = new User();
      user2.setFirstName("|KCWH||HgrN!O1;i@");
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectFieldChanges(user1, rawVariable1, rawVariable0);
      derivedVariable0.getSupportingDocuments();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable1.getSupportingDocuments();
      derivedVariable1.setSupportingDocuments(arrayList0);
      derivedVariable0.getDisplayItemIdentifier();
      derivedVariable0.getCodeBookNumber();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm3);
      derivedVariable1.getOntologyTerms();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      assertEquals("0CuVgU) SmpT-q", rawVariable0.getColumnStart());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.7286875121524328
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      arrayList0.listIterator();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setSupportingDocuments(arrayList0);
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      derivedVariable0.getSupportingDocuments();
      rawVariable1.addSupportingDocuments(arrayList0);
      RawVariable rawVariable3 = new RawVariable();
      rawVariable3.setSupportingDocuments(arrayList0);
      rawVariable3.setCleaned(true);
      rawVariable2.setIsNewRecord(false);
      try { 
        RawVariable.validateFields(rawVariable3);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.296039215762074
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      ontologyTerm0.setNameSpace((String) null);
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      rawVariable0.setColumnStart("general.fieldValue.blank");
      ontologyTerm0.setNameSpace("[8w2v4-K41;$8'DPM/");
      rawVariable0.addOntologyTerm(ontologyTerm0);
      user0.setEmail("variable.cleaningStatus.label");
      user0.setFirstName((String) null);
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setSupportingDocuments(arrayList0);
      derivedVariable0.getDisplayItemIdentifier();
      derivedVariable0.getCodeBookNumber();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.getOntologyTerms();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      derivedVariable1.containsOntologyTerm(ontologyTerm0);
      derivedVariable1.getOntologyTerms();
      rawVariable0.updateOntologyTerm(ontologyTerm2);
      assertEquals("general.fieldValue.blank", rawVariable0.getColumnStart());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.9366297779425437
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getSupportingDocuments();
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertTrue(arrayList0.isEmpty());
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setAlternativeVariable(derivedVariable0);
      user0.setUserID("OGqn");
      derivedVariable0.containsSourceVariable(derivedVariable1);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.getFilePath();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable1, derivedVariable0);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertNotNull(macawChangeEvent0);
      
      derivedVariable2.getAlternativeVariable();
      derivedVariable1.getFilePath();
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertFalse(derivedVariable1.isNewRecord());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.5408535719613137
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnEnd("@");
      rawVariable0.getAvailability();
      rawVariable0.clone();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable0.addSourceVariable(rawVariable0);
      derivedVariable0.getCleaningStatus();
      rawVariable0.clone();
      derivedVariable0.getCategory();
      User user0 = new User("v#c}f[}yCv,3\u0000", "{e77[wp<!Kk#ko+.");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.getAlias();
      assertEquals("@", rawVariable0.getColumnEnd());
      
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.1882721790235986
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaningStatus("<KB.ee1sVt4(LCy");
      rawVariable0.setCodeBookNumber("@");
      User user0 = new User();
      user0.setStatus("@");
      user0.setAddressLine1("");
      Variable.validateFields(rawVariable0);
      user0.setAddressLine2("");
      RawVariable rawVariable1 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable1.removeOntologyTerm(ontologyTerm0);
      rawVariable0.setLabel("!)y9w!BN\"@MU`.>");
      rawVariable0.getAlternativeVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable1.getOntologyTerms();
      rawVariable1.isCoded();
      rawVariable1.setOntologyTerms(arrayList0);
      rawVariable1.getFilePath();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("");
      derivedVariable0.getDisplayName();
      rawVariable0.getFilePath();
      assertEquals("<KB.ee1sVt4(LCy", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.898598774473812
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setLabel((String) null);
      derivedVariable0.columnEnd = null;
      derivedVariable0.clone();
      derivedVariable0.setOntologyTerms(arrayList0);
      derivedVariable0.columnStart = "Q0?cFm/m,x:]VhE*";
      derivedVariable0.createVariableSummary();
      Variable.validateFields(derivedVariable0);
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList1.sort(comparator0);
      arrayList1.clear();
      arrayList1.add((Variable) derivedVariable0);
      derivedVariable0.addSourceVariables(arrayList1);
      rawVariable0.addOntologyTerms(arrayList0);
      rawVariable0.getColumnStart();
      rawVariable0.getCodeBookNumber();
      derivedVariable0.isCleaned();
      derivedVariable0.getAlternativeVariable();
      // Undeclared exception!
      try { 
        Variable.validateFields((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.6206220186660607
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      User user0 = new User("7-", "");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setForm("Unknown");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("Unknown", derivedVariable0.getForm());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.156967591106372
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      ontologyTerm0.setNameSpace((String) null);
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      rawVariable0.setColumnStart("general.fieldValue.blank");
      ontologyTerm0.setNameSpace("[8w2v4-K41;$8'DPM/");
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.setAlias("jTV)$9E{J]DHz");
      rawVariable0.setIdentifier(1);
      rawVariable0.getAlternativeVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setOntologyTerms(arrayList0);
      derivedVariable0.setNotes("[8w2v4-K41;$8'DPM/");
      derivedVariable0.getCodeBookNumber();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.getOntologyTerms();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      derivedVariable1.containsOntologyTerm(ontologyTerm2);
      derivedVariable1.getOntologyTerms();
      boolean boolean0 = rawVariable0.isNewRecord();
      assertEquals("general.fieldValue.blank", rawVariable0.getColumnStart());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.746066410830336
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier(2157);
      ontologyTerm0.setNewRecord(false);
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      User user1 = new User((String) null, "ePx/v)\"B78V*rvVJ");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("UNABLE_TO_UPDATE_ONTOLOGY_TERM");
      DerivedVariable.detectFieldChanges(user1, derivedVariable0, derivedVariable0);
      assertEquals("UNABLE_TO_UPDATE_ONTOLOGY_TERM", derivedVariable0.getDisplayName());
      assertEquals("UNABLE_TO_UPDATE_ONTOLOGY_TERM", derivedVariable0.getName());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.4696072829762055
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.codeBookNumber = "variable.cleaningStatus.label";
      rawVariable0.setIdentifier((-1161));
      rawVariable0.getNotes();
      rawVariable0.getDisplayItemIdentifier();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User("blank", "variable.cleaningStatus.label");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertEquals((-1161), rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getNotes());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.setForm("@");
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.codeBookNumber = "variable.cleaningStatus.label";
      rawVariable0.setIdentifier((-1161));
      rawVariable0.getNotes();
      rawVariable0.getDisplayItemIdentifier();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAvailability("-1161");
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.addSourceVariables(arrayList0);
      assertEquals("-1161", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.6636093674910186
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.codeBookNumber = "variable.cleaningStatus.label";
      rawVariable0.setIdentifier((-1161));
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnEnd("variable.cleaningStatus.label");
      User user0 = new User("FEd%`>p", "y}Qf7;90Cafe,J+");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable2, derivedVariable0);
      DerivedVariable derivedVariable3 = new DerivedVariable();
      derivedVariable3.cloneAttributes(rawVariable0);
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("Unknown", rawVariable0.getCategory());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.8938546574316315
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setAlternativeVariable(derivedVariable0);
      derivedVariable1.form = "";
      user0.setUserID("");
      derivedVariable0.containsSourceVariable(derivedVariable1);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.getFilePath();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable2);
      derivedVariable2.getAlternativeVariable();
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable(user0, (Variable) null, derivedVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.3448446247581223
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnEnd((String) null);
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, macawChangeEvent0.getChangedObjectIdentifier());
      assertNotNull(macawChangeEvent0);
      
      String string0 = derivedVariable0.getFilePath();
      assertNotNull(string0);
      
      derivedVariable0.getValueLabels();
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.554218296452355
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      User user0 = new User("7-", "");
      user0.setAddressLine1((String) null);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<MacawChangeEvent> arrayList0 = DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals(0, arrayList0.size());
      
      derivedVariable0.getCleaningDescription();
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.786724494755577
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.addSourceVariable(rawVariable0);
      String string0 = "&AC\"+7%OA|\\";
      derivedVariable0.setName("&AC\"+7%OA|");
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      arrayList0.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList0.add(supportingDocument1);
      // Undeclared exception!
      try { 
        derivedVariable0.removeSupportingDocuments(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.749595942245443
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.setCoded(true);
      ontologyTerm0.clone();
      User user0 = new User("Y96.XcUOG/[v>o", "Y96.XcUOG/[v>o");
      rawVariable0.setQuestionNumber("Y96.XcUOG/[v>o");
      ontologyTerm0.setNameSpace("Y96.XcUOG/[v>o");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      rawVariable0.setColumnStart("");
      ontologyTerm0.setNameSpace("[8w2v4-K41;$8'DPM/");
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.getAlternativeVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setOntologyTerms(arrayList0);
      derivedVariable0.setAvailability("Y96.XcUOG/[v>o");
      derivedVariable0.setNotes((String) null);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      derivedVariable0.setAlias("wEfG");
      derivedVariable0.getCleaningDescription();
      rawVariable0.setIdentifier(12);
      rawVariable0.setAlternativeVariable(derivedVariable0);
      rawVariable0.getForm();
      rawVariable1.getForm();
      // Undeclared exception!
      try { 
        derivedVariable0.cloneAttributes((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.949738571355795
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setYear("lpf");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      rawVariable0.getColumnEnd();
      rawVariable0.setQuestionNumber("");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.addOntologyTerms(arrayList0);
      Variable.validateFields(rawVariable0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.getNotes();
      User user0 = new User();
      RawVariable rawVariable2 = new RawVariable();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      rawVariable0.getCategory();
      assertEquals("lpf", rawVariable0.getYear());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.668146306723083
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setAlternativeVariable(derivedVariable0);
      derivedVariable0.containsSourceVariable(derivedVariable1);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable0.setCategory("");
      derivedVariable0.setYear("Unknown");
      derivedVariable1.getFilePath();
      derivedVariable2.removeSourceVariable(derivedVariable1);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      derivedVariable0.cloneAttributes(derivedVariable2);
      assertEquals("Unknown", derivedVariable2.getYear());
      assertEquals("Unknown", derivedVariable2.getCleaningStatus());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=3.835209495255853
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      rawVariable0.getColumnEnd();
      rawVariable0.setQuestionNumber("variable.notes.label");
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.addOntologyTerms(arrayList0);
      Variable.validateFields(rawVariable0);
      rawVariable0.createVariableSummary();
      rawVariable0.setForm("variable.label.label");
      rawVariable0.setAlias("variable.notes.label");
      rawVariable0.setNotes((String) null);
      rawVariable0.clone();
      rawVariable0.clone();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.8623417620344114
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean0);
      
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.setSupportingDocuments(arrayList0);
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.getSupportingDocuments();
      RawVariable rawVariable3 = new RawVariable();
      rawVariable3.addSupportingDocuments(arrayList0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
      assertEquals(0, variableSummary0.getIdentifier());
      
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList1 = RawVariable.detectFieldChanges(user0, rawVariable3, rawVariable2);
      assertFalse(rawVariable3.isCleaned());
      assertEquals("Unknown", rawVariable3.getAvailability());
      assertEquals("Unknown", rawVariable3.getCleaningStatus());
      assertEquals(0, arrayList1.size());
      assertEquals("Unknown", rawVariable3.getCategory());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.156606376293303
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setFilePath("}.7lrq]");
      rawVariable0.setCodeBookNumber("Unknown");
      rawVariable0.setFilePath("variable.name.label");
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      arrayList0.add(ontologyTerm1);
      arrayList0.add(ontologyTerm1);
      rawVariable0.addOntologyTerms(arrayList0);
      rawVariable0.setCodeBookNumber("H:$7RCQQ+");
      rawVariable0.questionNumber = "variable.name.label";
      rawVariable0.setCleaningStatus(")3aD4{ ~^rn+&@$PJ");
      rawVariable0.getIdentifier();
      rawVariable0.setYear("Lpc#");
      rawVariable0.getForm();
      rawVariable0.isCleaned();
      rawVariable0.getCodeBookNumber();
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      arrayList1.add((Variable) rawVariable0);
      derivedVariable0.setSourceVariables(arrayList1);
      System.setCurrentTimeMillis(4451L);
      derivedVariable0.getDisplayName();
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      assertEquals("Lpc#", rawVariable0.getYear());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.949995971613195
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setYear("lpf");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      rawVariable0.getColumnEnd();
      rawVariable0.setQuestionNumber("");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.addOntologyTerms(arrayList0);
      Variable.validateFields(rawVariable0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.getNotes();
      rawVariable1.codeBookNumber = "lpf";
      User user0 = new User();
      RawVariable rawVariable2 = new RawVariable();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      rawVariable0.getCategory();
      rawVariable0.getIdentifier();
      assertEquals("lpf", rawVariable0.getYear());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.4435896416877303
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setIsNewRecord(false);
      derivedVariable0.setOntologyTerms((ArrayList<OntologyTerm>) null);
      Variable.validateFields(derivedVariable0);
      String string0 = "general.fieldValue.blank";
      Variable variable0 = null;
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      // Undeclared exception!
      try { 
        derivedVariable0.addOntologyTerm(ontologyTerm0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      // Undeclared exception!
      try { 
        derivedVariable0.cloneAttributes((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.7469137914162665
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      ArrayList<ValueLabel> arrayList1 = rawVariable0.getValueLabels();
      rawVariable0.setValueLabels(arrayList1);
      rawVariable0.removeSupportingDocuments(arrayList0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.cloneAttributes(rawVariable0);
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals(0, rawVariable0.getIdentifier());
      
      derivedVariable0.getSupportingDocuments();
      VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.8910320672773926
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.columnEnd = "\"UY=R(IvL";
      rawVariable0.cloneAttributes(rawVariable1);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.addOntologyTerms(arrayList0);
      rawVariable1.setCoded(true);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.clone();
      rawVariable0.setQuestionNumber("d>N8?2ajsNX\"!p ");
      rawVariable1.removeOntologyTerm(ontologyTerm0);
      ontologyTerm0.setNameSpace("^");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable1.setColumnStart("`8?xN6Vv0@CpP6");
      ontologyTerm0.setNameSpace("^");
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable1.setIdentifier(1);
      rawVariable1.getAlternativeVariable();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setOntologyTerms(arrayList1);
      derivedVariable1.setNotes("variable.columnStart.label");
      derivedVariable1.getCodeBookNumber();
      derivedVariable1.getOntologyTerms();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm1);
      derivedVariable1.getOntologyTerms();
      User user0 = new User();
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable(user0, (Variable) null, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.835020423597695
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setYear("lpf");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      rawVariable0.getColumnEnd();
      rawVariable0.setQuestionNumber("");
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.addOntologyTerms(arrayList0);
      Variable.validateFields(rawVariable0);
      rawVariable0.createVariableSummary();
      rawVariable0.setForm("lpf");
      rawVariable0.setAlias("lpf");
      rawVariable0.setNotes("lpf");
      rawVariable0.clone();
      rawVariable0.clone();
      assertEquals("lpf", rawVariable0.getForm());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getLabel();
      derivedVariable0.codeBookNumber = "";
      derivedVariable0.getAvailability();
      derivedVariable0.setCoded(false);
      // Undeclared exception!
      try { 
        derivedVariable0.addSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User("Unknown", "Unknown");
      user0.setAddressLine1((String) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      VariableSummary variableSummary0 = derivedVariable2.createVariableSummary();
      assertEquals(0, variableSummary0.getIdentifier());
      
      derivedVariable1.getLabel();
      assertFalse(derivedVariable1.isCleaned());
      assertFalse(derivedVariable1.isCoded());
      assertFalse(derivedVariable1.isNewRecord());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.624728496322497
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.cloneAttributes(rawVariable1);
      rawVariable0.addValueLabel((ValueLabel) null);
      // Undeclared exception!
      try { 
        DerivedVariable.validateFields((DerivedVariable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.7896843142571908
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.codeBookNumber = "variable.cleaningStatus.label";
      rawVariable0.setIdentifier((-1161));
      rawVariable0.getNotes();
      rawVariable0.getDisplayItemIdentifier();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.addSupportingDocuments(arrayList0);
      rawVariable0.setIsNewRecord(false);
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.2654436797543704
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean0);
      
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.setSupportingDocuments(arrayList0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      rawVariable0.addOntologyTerms(arrayList1);
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable0.getSupportingDocuments();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, variableSummary0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=3.156450795240739
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.setCoded(true);
      ontologyTerm0.clone();
      User user0 = new User("Y96.XcUOG/[v>o", "Y96.XcUOG/[v>o");
      rawVariable0.setQuestionNumber("Y96.XcUOG/[v>o");
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      ontologyTerm0.setNameSpace("Y96.XcUOG/[v>o");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      rawVariable0.setColumnStart("");
      ontologyTerm0.setNameSpace("[8w2v4-K41;$8'DPM/");
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.setIdentifier(1);
      rawVariable0.getAlternativeVariable();
      assertEquals("Y96.XcUOG/[v>o", rawVariable0.getQuestionNumber());
      
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setOntologyTerms(arrayList0);
      derivedVariable0.setNotes((String) null);
      derivedVariable0.getCodeBookNumber();
      derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm2);
      derivedVariable0.getOntologyTerms();
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=3.534616400831924
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.codeBookNumber = ",";
      arrayList0.add((Variable) derivedVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.cloneAttributes(derivedVariable1);
      derivedVariable0.addSourceVariable(derivedVariable1);
      assertEquals(",", derivedVariable1.getCodeBookNumber());
      assertEquals("Unknown", derivedVariable1.getCategory());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      arrayList0.listIterator();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setSupportingDocuments(arrayList0);
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList0.sort(comparator0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setFilePath((String) null);
      RawVariable rawVariable2 = new RawVariable();
      rawVariable0.addSupportingDocuments(arrayList0);
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.969849579660301
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart("general.fieldValue.blank");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace("");
      rawVariable0.addOntologyTerm(ontologyTerm0);
      user0.setEmail("~j t>]Ur");
      user0.setFirstName("~j t>]Ur");
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setSupportingDocuments(arrayList0);
      derivedVariable0.getDisplayItemIdentifier();
      derivedVariable0.getCodeBookNumber();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.getOntologyTerms();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      // Undeclared exception!
      try { 
        derivedVariable0.containsOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      User user0 = new User("7-", "");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
      
      derivedVariable0.getOntologyTerms();
      derivedVariable0.getYear();
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=3.6875435765366524
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setAlternativeVariable(derivedVariable0);
      derivedVariable0.setIdentifier(3);
      derivedVariable0.containsSourceVariable(derivedVariable1);
      derivedVariable0.getFilePath();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.setColumnEnd("");
      assertEquals("3", derivedVariable0.getDisplayItemIdentifier());
      
      User user0 = new User("", "");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable2, derivedVariable1);
      derivedVariable1.cloneAttributes(derivedVariable2);
      assertEquals("Unknown", derivedVariable2.getAvailability());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=3.674785038350493
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.hasSameDisplayName(derivedVariable1);
      Variable.validateFields(derivedVariable0);
      derivedVariable0.cloneAttributes(derivedVariable1);
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertTrue(arrayList0.isEmpty());
      
      derivedVariable0.getName();
      derivedVariable0.addSourceVariable(derivedVariable1);
      derivedVariable1.codeBookNumber = "";
      String string0 = derivedVariable0.getDisplayItemIdentifier();
      assertEquals("0", string0);
      
      ArrayList<Variable> arrayList1 = derivedVariable1.getSourceVariables();
      derivedVariable1.removeSourceVariables(arrayList1);
      ArrayList<Variable> arrayList2 = new ArrayList<Variable>(arrayList1);
      derivedVariable0.removeSourceVariables(arrayList2);
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      User user0 = new User("7-", "");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.getOntologyTerms();
      boolean boolean1 = derivedVariable0.isCoded();
      assertFalse(derivedVariable0.isCleaned());
      assertTrue(boolean1 == boolean0);
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(boolean1);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.8851218920964303
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.getDisplayName();
      ontologyTerm0.setIdentifier((-1));
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIsNewRecord(true);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.clone();
      supportingDocument0.getDisplayName();
      supportingDocument1.setDocumentCode("FD*u6PuD7");
      rawVariable0.containsSupportingDocument(supportingDocument1);
      rawVariable0.getColumnStart();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable1.getSupportingDocuments();
      rawVariable0.addSupportingDocuments(arrayList0);
      rawVariable0.setIsNewRecord(false);
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      // Undeclared exception!
      try { 
        derivedVariable0.updateOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.951425628453421
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.getDisplayName();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.clone();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.getDisplayName();
      supportingDocument1.setDocumentCode("EDIT");
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.getColumnStart();
      String string0 = rawVariable0.getAvailability();
      assertEquals("Unknown", string0);
      
      boolean boolean1 = rawVariable0.isCleaned();
      assertTrue(boolean1 == boolean0);
      
      rawVariable0.isCoded();
      rawVariable0.getName();
      String string1 = rawVariable0.getCleaningStatus();
      assertEquals("Unknown", string1);
      
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.ensureCapacity(0);
      arrayList0.add(supportingDocument0);
      rawVariable0.removeSupportingDocuments(arrayList0);
      User user1 = new User();
      MacawChangeEvent macawChangeEvent1 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertEquals(0, (int)macawChangeEvent1.getVariableOwnerID());
      assertNotNull(macawChangeEvent1);
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent1.getChangeMessage());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.8773896007754103
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      ArrayList<Locale.LanguageRange> arrayList1 = new ArrayList<Locale.LanguageRange>();
      ArrayList<String> arrayList2 = new ArrayList<String>();
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) arrayList1, (Collection<String>) arrayList2);
      arrayList0.retainAll(list0);
      rawVariable0.addSupportingDocuments(arrayList0);
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList3.add(ontologyTerm0);
      rawVariable0.removeOntologyTerms(arrayList3);
      rawVariable0.setYear("");
      String string0 = "macaw.system.MacawChangeEvent";
      rawVariable0.setCategory("macaw.system.MacawChangeEvent");
      rawVariable0.getCleaningStatus();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.removeValueLabel(valueLabel0);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("variable.availability.label");
      ontologyTerm0.setNewRecord(false);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User();
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument0);
      supportingDocument0.setDescription("variable.alias.label");
      ontologyTerm0.setIdentifier((-2188));
      supportingDocument0.setIdentifier(1);
      rawVariable0.setFilePath("variable.availability.label");
      rawVariable0.containsSupportingDocument(supportingDocument0);
      ontologyTerm0.setNameSpace("3bWcoh#g5");
      ontologyTerm0.getDisplayName();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.setAlias("3bWcoh#g5");
      ontologyTerm0.setTerm("variable.availability.label");
      rawVariable0.setLabel("variable.availability.label");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.containsOntologyTerm(ontologyTerm1);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      assertTrue(arrayList0.isEmpty());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=3.534616400831924
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCodeBookNumber((String) null);
      derivedVariable0.cloneAttributes(derivedVariable0);
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.removeOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      assertTrue(arrayList1.equals((Object)arrayList0));
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.4435896416877303
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("");
      rawVariable0.columnEnd = "user.affiliation.label";
      rawVariable0.questionNumber = "user.affiliation.label";
      rawVariable0.getSupportingDocuments();
      rawVariable0.setFilePath("supportingDocument.documentCode.label");
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setCategory("QMwC-1)ht.}QPkQ/x");
      derivedVariable0.hasSameDisplayName(derivedVariable1);
      assertEquals("QMwC-1)ht.}QPkQ/x", derivedVariable1.getCategory());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      User user0 = new User("7-", "");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getCodeBookNumber();
      derivedVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.getQuestionNumber();
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=3.6676082383884046
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      rawVariable0.setQuestionNumber((String) null);
      rawVariable0.removeSupportingDocuments(arrayList0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.cloneAttributes(rawVariable0);
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      
      derivedVariable0.getSupportingDocuments();
      VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.6422165264472737
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.addSourceVariable(rawVariable0);
      String string0 = "&AC\"+7%OA|\\";
      derivedVariable0.setName("&AC\"+7%OA|");
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList0.add(supportingDocument1);
      derivedVariable0.removeSupportingDocuments(arrayList0);
      String string1 = "yt.Tmc]mB:q4IW=|y%";
      rawVariable0.setAvailability("yt.Tmc]mB:q4IW=|y%");
      rawVariable0.hasSameDisplayName(derivedVariable0);
      derivedVariable0.createVariableSummary();
      derivedVariable0.setOntologyTerms((ArrayList<OntologyTerm>) null);
      // Undeclared exception!
      try { 
        rawVariable0.addOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=3.14322620272316
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaningDescription("");
      VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
      
      ArrayList<String> arrayList0 = Variable.validateFields(derivedVariable0);
      assertEquals(1, arrayList0.size());
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User("", "");
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.getOntologyTerms();
      User user1 = new User();
      user1.clone();
      user1.setEmail("general.error.blankField");
      user1.setFirstName("");
      ArrayList<MacawChangeEvent> arrayList1 = Variable.detectFieldChanges(user1, derivedVariable0, derivedVariable0);
      assertTrue(arrayList1.isEmpty());
      
      ArrayList<SupportingDocument> arrayList2 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList2.add(supportingDocument0);
      derivedVariable0.setSupportingDocuments(arrayList2);
      String string0 = derivedVariable0.getDisplayItemIdentifier();
      assertEquals("0", string0);
      
      derivedVariable0.getCodeBookNumber();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.getOntologyTerms();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm2);
      assertFalse(boolean0);
      
      derivedVariable1.getOntologyTerms();
      derivedVariable0.getCleaningDescription();
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=3.3035770196432024
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("variable.availability.label");
      ontologyTerm0.setNewRecord(false);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User();
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument0);
      supportingDocument0.setDescription("variable.alias.label");
      ontologyTerm0.setIdentifier((-2188));
      supportingDocument0.setIdentifier(1);
      rawVariable0.setFilePath("variable.availability.label");
      rawVariable0.containsSupportingDocument(supportingDocument0);
      ontologyTerm0.setNameSpace("3bWcoh#g5");
      ontologyTerm0.getDisplayName();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.setAlias("3bWcoh#g5");
      ontologyTerm0.setTerm("variable.availability.label");
      rawVariable0.setLabel("variable.availability.label");
      Variable.validateFields(rawVariable0);
      rawVariable0.isCleaned();
      rawVariable0.getYear();
      rawVariable0.getDisplayItemIdentifier();
      rawVariable0.getCategory();
      rawVariable0.getDisplayName();
      System.setCurrentTimeMillis(0L);
      rawVariable0.getIdentifier();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.getCleaningStatus();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument1);
      assertEquals("variable.availability.label", rawVariable0.getFilePath());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=3.5169179621962994
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.codeBookNumber = ",";
      arrayList0.add((Variable) derivedVariable0);
      ArrayList<SupportingDocument> arrayList1 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.setSupportingDocuments(arrayList1);
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.addValueLabel((ValueLabel) null);
      derivedVariable0.setAlias((String) null);
      arrayList0.parallelStream();
      arrayList0.retainAll(arrayList1);
      derivedVariable0.questionNumber = null;
      derivedVariable0.questionNumber = null;
      derivedVariable0.setSourceVariables(arrayList0);
      // Undeclared exception!
      try { 
        derivedVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=3.7742397208061473
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      ontologyTerm0.setNameSpace((String) null);
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      rawVariable0.setColumnStart("Zx-n!K");
      ontologyTerm0.setNameSpace("[8w2v4-K41;$8'DPM/");
      rawVariable0.addOntologyTerm(ontologyTerm0);
      assertEquals("Zx-n!K", rawVariable0.getColumnStart());
      
      user0.setEmail("variable.cleaningStatus.label");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.cloneAttributes(rawVariable0);
      boolean boolean0 = derivedVariable0.isCoded();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 69
  /*Coverage entropy=3.6673108848350298
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.codeBookNumber = "variable.cleaningStatus.label";
      rawVariable0.setIdentifier((-1161));
      rawVariable0.getNotes();
      rawVariable0.getDisplayItemIdentifier();
      assertEquals("-1161", rawVariable0.getDisplayItemIdentifier());
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.cloneAttributes(rawVariable0);
      assertEquals("Unknown", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=3.5353865202004258
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setForm("general.fieldValue.uknown");
      rawVariable0.setLabel("general.fieldValue.uknown");
      rawVariable0.clone();
      assertEquals("general.fieldValue.uknown", rawVariable0.getLabel());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=3.14322620272316
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaningDescription("blank");
      derivedVariable0.createVariableSummary();
      Variable.validateFields(derivedVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.getOntologyTerms();
      User user0 = new User();
      user0.setEmail("general.error.blankField");
      user0.setFirstName("N9?ty_jf9}");
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setSupportingDocuments(arrayList0);
      derivedVariable0.getDisplayItemIdentifier();
      assertEquals("blank", derivedVariable0.getCleaningDescription());
      
      derivedVariable1.getCodeBookNumber();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable1.getOntologyTerms();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      derivedVariable2.containsOntologyTerm(ontologyTerm2);
      derivedVariable1.getOntologyTerms();
      assertEquals("Unknown", derivedVariable1.getAvailability());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setYear("lpf");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.addValueLabel(valueLabel0);
      // Undeclared exception!
      try { 
        DerivedVariable.validateFields((DerivedVariable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=3.723920938572946
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      derivedVariable0.setColumnStart("we2Q$p@Qe|NG8G");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setAlternativeVariable(derivedVariable0);
      derivedVariable0.containsSourceVariable(derivedVariable1);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable0.cloneAttributes(derivedVariable1);
      derivedVariable0.getSupportingDocuments();
      assertEquals("we2Q$p@Qe|NG8G", derivedVariable0.getColumnStart());
      
      derivedVariable1.createVariableSummary();
      derivedVariable1.getColumnEnd();
      assertEquals("", derivedVariable1.getYear());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.748927992058363
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setAlternativeVariable(derivedVariable0);
      derivedVariable1.form = "lpf";
      user0.setUserID("lpf");
      derivedVariable0.containsSourceVariable(derivedVariable1);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable1.createVariableSummary();
      assertEquals("lpf", derivedVariable1.getForm());
      
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=3.8327563503240505
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setYear("lpf");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      rawVariable0.getColumnEnd();
      rawVariable0.setQuestionNumber("");
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.addOntologyTerms(arrayList0);
      Variable.validateFields(rawVariable0);
      rawVariable0.createVariableSummary();
      rawVariable0.setForm("lpf");
      rawVariable0.setAlias("lpf");
      rawVariable0.setNotes("lpf");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.clone();
      assertEquals("lpf", rawVariable0.getAlias());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=2.6930121983106288
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.setSupportingDocuments(arrayList0);
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable0.getSupportingDocuments();
      RawVariable rawVariable3 = new RawVariable();
      rawVariable3.addSupportingDocuments(arrayList0);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      rawVariable2.setSupportingDocuments(arrayList1);
      rawVariable3.setIsNewRecord(true);
      try { 
        RawVariable.validateFields(rawVariable2);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }
}
