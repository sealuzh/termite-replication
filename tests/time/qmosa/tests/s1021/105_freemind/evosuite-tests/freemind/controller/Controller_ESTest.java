/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 05:33:16 GMT 2019
 */

package freemind.controller;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import freemind.controller.Controller;
import freemind.controller.MainToolBar;
import freemind.main.FreeMind;
import freemind.main.FreeMindMain;
import freemind.modes.mindmapmode.MindMapMode;
import freemind.preferences.FreemindPropertyListener;
import freemind.view.mindmapview.MapView;
import java.awt.Color;
import java.awt.Component;
import java.awt.HeadlessException;
import java.awt.event.MouseWheelEvent;
import java.util.Collection;
import java.util.Locale;
import java.util.Properties;
import javax.swing.DefaultCellEditor;
import javax.swing.JInternalFrame;
import javax.swing.JPasswordField;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.JTree;
import javax.swing.plaf.metal.MetalInternalFrameUI;
import javax.swing.text.StyledEditorKit;
import org.apache.batik.bridge.UserAgentAdapter;
import org.apache.batik.css.engine.value.ValueManager;
import org.apache.batik.css.engine.value.css2.CursorManager;
import org.apache.batik.css.engine.value.svg.MaskManager;
import org.apache.batik.css.engine.value.svg.OpacityManager;
import org.apache.batik.css.parser.Parser;
import org.apache.batik.script.InterpreterPool;
import org.apache.xalan.templates.OutputProperties;
import org.apache.xml.serializer.ToHTMLStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Controller_ESTest extends Controller_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Controller.addPropertyChangeListener((FreemindPropertyListener) null);
      MindMapMode mindMapMode0 = new MindMapMode();
      StyledEditorKit.ItalicAction styledEditorKit_ItalicAction0 = new StyledEditorKit.ItalicAction();
      JPasswordField jPasswordField0 = new JPasswordField();
      assertFalse(jPasswordField0.isFocusCycleRoot());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Controller.CloseAction controller_CloseAction0 = null;
      try {
        controller_CloseAction0 = new Controller.CloseAction((Controller) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("freemind.controller.Controller$CloseAction", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Controller.Closer controller_Closer0 = new Controller.Closer();
      MainToolBar mainToolBar0 = null;
      try {
        mainToolBar0 = new MainToolBar((Controller) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("freemind.controller.MainToolBar", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Controller.getCommonJColorChooser();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      boolean boolean1 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "[+(f&'C<}{'NQXmN`9\"");
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Collection collection0 = Controller.getPropertyChangeListeners();
      assertNotNull(collection0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Controller.DisposeOnClose controller_DisposeOnClose0 = new Controller.DisposeOnClose();
      JTextField jTextField0 = new JTextField("");
      DefaultCellEditor defaultCellEditor0 = new DefaultCellEditor(jTextField0);
      JTextField jTextField1 = (JTextField)defaultCellEditor0.getComponent();
      jTextField0.getInputVerifier();
      jTextField1.getFocusAccelerator();
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent(jTextField1, 928, 269L, 8249, 928, 8249, (-2612), false, (-2705), (-770), (-1471));
      mouseWheelEvent0.setSource((Object) null);
      mouseWheelEvent0.getPreciseWheelRotation();
      // Undeclared exception!
      try { 
        controller_DisposeOnClose0.componentHidden(mouseWheelEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("freemind.controller.Controller$DisposeOnClose", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Controller.DisposeOnClose controller_DisposeOnClose0 = new Controller.DisposeOnClose();
      ToHTMLStream toHTMLStream0 = new ToHTMLStream();
      InterpreterPool interpreterPool0 = new InterpreterPool();
      UserAgentAdapter userAgentAdapter0 = new UserAgentAdapter();
      Color color0 = MapView.standardNodeTextColor;
      Color.getColor("document");
      JTextArea jTextArea0 = new JTextArea("");
      JInternalFrame jInternalFrame0 = new JInternalFrame("", false, true, false);
      MetalInternalFrameUI metalInternalFrameUI0 = new MetalInternalFrameUI(jInternalFrame0);
      metalInternalFrameUI0.getWestPane();
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) userAgentAdapter0;
      objectArray0[1] = (Object) "";
      Object object0 = new Object();
      objectArray0[2] = object0;
      JTree jTree0 = new JTree(objectArray0);
      metalInternalFrameUI0.setWestPane(jTree0);
      metalInternalFrameUI0.getSouthPane();
      try { 
        Controller.showCommonJColorChooserDialog((Component) null, "f{oOx.m2\"5^r'gbA", (Color) null);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Properties properties0 = FreeMind.props;
      OutputProperties outputProperties0 = new OutputProperties((Properties) null);
      ClassLoader.getSystemClassLoader();
      Locale locale0 = Locale.ENGLISH;
      Parser parser0 = new Parser();
      ValueManager[] valueManagerArray0 = new ValueManager[6];
      OpacityManager opacityManager0 = new OpacityManager("o\"tY^ *", true);
      valueManagerArray0[0] = (ValueManager) opacityManager0;
      CursorManager cursorManager0 = new CursorManager();
      valueManagerArray0[1] = (ValueManager) cursorManager0;
      MaskManager maskManager0 = new MaskManager();
      // Undeclared exception!
      try { 
        Controller.addPropertyChangeListenerAndPropagate((FreemindPropertyListener) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("freemind.controller.Controller", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.786724494755577
  */
  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Controller controller0 = null;
      try {
        controller0 = new Controller((FreeMindMain) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("freemind.controller.Controller", e);
      }
  }
}
