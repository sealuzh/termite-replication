/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 05:32:19 GMT 2019
 */

package org.quickserver.net.server;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.net.Socket;
import java.net.UnknownHostException;
import java.nio.channels.SocketChannel;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.net.MockInetAddress;
import org.evosuite.runtime.mock.java.net.MockSocket;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;
import org.quickserver.net.qsadmin.CommandHandler;
import org.quickserver.net.qsadmin.Data;
import org.quickserver.net.server.Authenticator;
import org.quickserver.net.server.ClientAuthenticationHandler;
import org.quickserver.net.server.ClientBinaryHandler;
import org.quickserver.net.server.ClientCommandHandler;
import org.quickserver.net.server.ClientData;
import org.quickserver.net.server.ClientEvent;
import org.quickserver.net.server.ClientEventHandler;
import org.quickserver.net.server.ClientExtendedEventHandler;
import org.quickserver.net.server.ClientObjectHandler;
import org.quickserver.net.server.ClientWriteHandler;
import org.quickserver.net.server.QuickServer;
import org.quickserver.net.server.TheClient;
import org.quickserver.net.server.impl.BlockingClientHandler;
import org.quickserver.net.server.impl.DefaultClientEventHandler;
import org.quickserver.net.server.impl.NonBlockingClientHandler;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TheClient_ESTest extends TheClient_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.321585437079472
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getClientEventHandler();
      theClient0.getAuthenticator();
      theClient0.setAuthenticator((Authenticator) null);
      theClient0.setClientEventHandler((ClientEventHandler) null);
      theClient0.toString();
      theClient0.getClientObjectHandler();
      theClient0.setClientObjectHandler((ClientObjectHandler) null);
      String string0 = theClient0.toString();
      assertEquals("{TheClient no socket, Event: (ClientEvent-Run Blocking)}", string0);
      
      CommandHandler commandHandler0 = new CommandHandler();
      theClient0.setClientCommandHandler(commandHandler0);
      theClient0.setClientEvent((ClientEvent) null);
      theClient0.getSocketChannel();
      theClient0.getClientCommandHandler();
      theClient0.setAuthenticator((Authenticator) null);
      theClient0.setSocketChannel((SocketChannel) null);
      theClient0.getMaxConnectionMsg();
      TheClient theClient1 = new TheClient();
      theClient1.getClientAuthenticationHandler();
      theClient0.getClientEvent();
      theClient0.getAuthenticator();
      theClient0.getClientBinaryHandler();
      assertTrue(theClient0.getCommunicationLogging());
      assertFalse(theClient0.getTrusted());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.261950424367441
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.setMaxConnectionMsg("IOError ");
      theClient0.setTrusted(false);
      theClient0.setMaxAuthTryMsg("mM>`");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      theClient0.toString();
      TheClient theClient1 = new TheClient();
      org.quickserver.net.qsadmin.Authenticator authenticator0 = new org.quickserver.net.qsadmin.Authenticator();
      theClient1.setClientAuthenticationHandler(authenticator0);
      theClient1.getClientObjectHandler();
      theClient0.setTimeout(630);
      theClient0.setMaxAuthTry(0);
      theClient0.getAuthenticator();
      theClient0.getClientExtendedEventHandler();
      theClient0.toString();
      theClient0.getClientExtendedEventHandler();
      theClient0.getSocket();
      theClient0.getClientBinaryHandler();
      theClient0.toString();
      theClient0.getClientBinaryHandler();
      Data data0 = new Data();
      theClient0.setClientData(data0);
      theClient0.getClientData();
      theClient1.getClientExtendedEventHandler();
      theClient0.getClientData();
      assertEquals(630, theClient0.getTimeout());
      
      theClient1.getSocketChannel();
      assertFalse(theClient1.getTrusted());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.193764486816496
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.setTimeoutMsg("");
      theClient0.getClientCommandHandler();
      theClient0.getClientAuthenticationHandler();
      theClient0.getClientBinaryHandler();
      theClient0.getClientBinaryHandler();
      theClient0.setClientBinaryHandler((ClientBinaryHandler) null);
      theClient0.setClientWriteHandler((ClientWriteHandler) null);
      theClient0.setMaxConnectionMsg("</data-type-out>\n");
      ClientEvent clientEvent0 = ClientEvent.LOST_CON;
      theClient0.getSocket();
      theClient0.setClientCommandHandler((ClientCommandHandler) null);
      theClient0.getTimeout();
      theClient0.getClientBinaryHandler();
      BlockingClientHandler blockingClientHandler0 = new BlockingClientHandler();
      BlockingClientHandler blockingClientHandler1 = new BlockingClientHandler();
      blockingClientHandler1.getSocket();
      theClient0.setSocket((Socket) null);
      theClient0.getTimeoutMsg();
      theClient0.setTimeout((-1));
      theClient0.getClientObjectHandler();
      assertEquals((-1), theClient0.getTimeout());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.5816084910941632
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getClientObjectHandler();
      theClient0.setClientObjectHandler((ClientObjectHandler) null);
      theClient0.setMaxConnectionMsg((String) null);
      theClient0.setTrusted(false);
      MockSocket mockSocket0 = new MockSocket();
      theClient0.setSocket(mockSocket0);
      theClient0.setTimeoutMsg((String) null);
      theClient0.getClientData();
      theClient0.getClientWriteHandler();
      theClient0.setClientWriteHandler((ClientWriteHandler) null);
      theClient0.toString();
      theClient0.getSocket();
      theClient0.getClientEvent();
      theClient0.getClientCommandHandler();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      theClient0.setClientCommandHandler((ClientCommandHandler) null);
      theClient0.getTrusted();
      theClient0.setMaxAuthTry(202);
      theClient0.getSocketChannel();
      theClient0.getClientObjectHandler();
      TheClient theClient1 = new TheClient();
      theClient1.setClientObjectHandler((ClientObjectHandler) null);
      theClient1.getAuthenticator();
      theClient1.setTimeout(1228);
      theClient0.getCommunicationLogging();
      theClient1.getAuthenticator();
      theClient1.getClientExtendedEventHandler();
      assertEquals(1228, theClient1.getTimeout());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.4872576972828044
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getClientEventHandler();
      theClient0.getAuthenticator();
      theClient0.setAuthenticator((Authenticator) null);
      theClient0.setClientEventHandler((ClientEventHandler) null);
      theClient0.toString();
      theClient0.getClientObjectHandler();
      theClient0.setClientObjectHandler((ClientObjectHandler) null);
      theClient0.toString();
      CommandHandler commandHandler0 = new CommandHandler();
      theClient0.getClientWriteHandler();
      theClient0.setClientWriteHandler((ClientWriteHandler) null);
      theClient0.getMaxAuthTry();
      theClient0.getClientWriteHandler();
      TheClient theClient1 = new TheClient();
      theClient1.getClientBinaryHandler();
      theClient0.setClientBinaryHandler((ClientBinaryHandler) null);
      theClient0.getClientEventHandler();
      theClient1.setMaxAuthTry((-2531));
      theClient0.setTimeoutMsg("*d\t<V6Z<");
      theClient0.getMaxAuthTryMsg();
      theClient0.getMaxAuthTry();
      theClient1.setCommunicationLogging(false);
      theClient1.getClientObjectHandler();
      theClient0.toString();
      theClient1.getSocket();
      theClient1.getClientExtendedEventHandler();
      theClient0.getClientWriteHandler();
      theClient1.getCommunicationLogging();
      theClient1.getClientWriteHandler();
      assertEquals((-2531), theClient1.getMaxAuthTry());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.257437207088266
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      BlockingClientHandler blockingClientHandler0 = new BlockingClientHandler(597);
      blockingClientHandler0.getClientData();
      theClient0.setClientData((ClientData) null);
      theClient0.getClientExtendedEventHandler();
      theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient0.setMaxAuthTryMsg("sw");
      theClient0.setTimeout((-2774));
      theClient0.setTimeoutMsg("Ey4~");
      theClient0.getAuthenticator();
      theClient0.setAuthenticator((Authenticator) null);
      theClient0.getCommunicationLogging();
      theClient0.getMaxAuthTry();
      theClient0.getClientAuthenticationHandler();
      theClient0.getClientCommandHandler();
      theClient0.setClientCommandHandler((ClientCommandHandler) null);
      theClient0.getTimeout();
      theClient0.getClientBinaryHandler();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)126;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)9;
      byteArray0[4] = (byte)0;
      try { 
        MockInetAddress.getByAddress("~f*E}f;L2Lez*aNM\"o", byteArray0);
        fail("Expecting exception: UnknownHostException");
      
      } catch(UnknownHostException e) {
         //
         // Not IPv4: [0, 126, 0, 9, 0]
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockInetAddress", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.485528191921338
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      DefaultClientEventHandler defaultClientEventHandler0 = new DefaultClientEventHandler();
      theClient0.getAuthenticator();
      theClient0.setAuthenticator((Authenticator) null);
      theClient0.setClientEventHandler(defaultClientEventHandler0);
      theClient0.toString();
      theClient0.toString();
      theClient0.setTimeout(1421);
      theClient0.getClientBinaryHandler();
      theClient0.setClientBinaryHandler((ClientBinaryHandler) null);
      theClient0.setMaxAuthTry(1421);
      theClient0.setMaxConnectionMsg("LkNcfTyr_J!C>9d5p");
      ClientEvent clientEvent0 = ClientEvent.READ;
      theClient0.getClientAuthenticationHandler();
      theClient0.getSocketChannel();
      theClient0.getClientExtendedEventHandler();
      theClient0.getClientCommandHandler();
      theClient0.setTrusted(false);
      theClient0.getClientEventHandler();
      theClient0.getCommunicationLogging();
      theClient0.toString();
      theClient0.setClientBinaryHandler((ClientBinaryHandler) null);
      theClient0.getClientWriteHandler();
      theClient0.setClientCommandHandler((ClientCommandHandler) null);
      theClient0.getClientData();
      theClient0.getClientEventHandler();
      assertEquals(1421, theClient0.getMaxAuthTry());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.380937795632014
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      QuickServer quickServer0 = new QuickServer("wzBPW");
      quickServer0.getBindAddr();
      quickServer0.getQSAdminServerAuthenticator();
      theClient0.setServer(quickServer0);
      theClient0.setMaxAuthTry(125);
      theClient0.setServer((QuickServer) null);
      theClient0.getClientWriteHandler();
      theClient0.setClientWriteHandler((ClientWriteHandler) null);
      theClient0.getTimeout();
      org.quickserver.net.qsadmin.Authenticator authenticator0 = new org.quickserver.net.qsadmin.Authenticator();
      theClient0.setClientAuthenticationHandler(authenticator0);
      theClient0.getClientEvent();
      theClient0.getClientCommandHandler();
      theClient0.setClientCommandHandler((ClientCommandHandler) null);
      theClient0.getTrusted();
      theClient0.setMaxAuthTry(0);
      theClient0.getSocketChannel();
      theClient0.getClientObjectHandler();
      theClient0.setClientObjectHandler((ClientObjectHandler) null);
      theClient0.getAuthenticator();
      theClient0.setTimeout(125);
      theClient0.getCommunicationLogging();
      theClient0.getAuthenticator();
      TheClient theClient1 = new TheClient();
      theClient1.setMaxAuthTry(0);
      BlockingClientHandler blockingClientHandler0 = new BlockingClientHandler();
      blockingClientHandler0.getServer();
      theClient0.setServer((QuickServer) null);
      theClient0.getAuthenticator();
      theClient0.getClientAuthenticationHandler();
      theClient0.getClientObjectHandler();
      assertEquals(125, theClient0.getTimeout());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.6772245773362195
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.setTimeout(1032);
      CommandHandler commandHandler0 = new CommandHandler();
      NonBlockingClientHandler nonBlockingClientHandler0 = new NonBlockingClientHandler(1);
      theClient0.setClientCommandHandler(commandHandler0);
      commandHandler0.closingConnection(nonBlockingClientHandler0);
      theClient0.getSocket();
      CommandHandler commandHandler1 = new CommandHandler();
      theClient0.setClientCommandHandler(commandHandler1);
      theClient0.getTimeout();
      theClient0.getClientBinaryHandler();
      theClient0.setSocket((Socket) null);
      TheClient theClient1 = new TheClient();
      theClient1.getTimeoutMsg();
      theClient1.setTimeout(1032);
      theClient1.getClientObjectHandler();
      assertEquals(1032, theClient1.getTimeout());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      SocketChannel.open();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Error closing Socket/Channel: {0}");
      TheClient theClient0 = new TheClient();
      theClient0.setMaxConnectionMsg("");
      theClient0.getMaxConnectionMsg();
      theClient0.getServer();
      assertFalse(theClient0.getTrusted());
      assertTrue(theClient0.getCommunicationLogging());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.3210182221049966
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getClientExtendedEventHandler();
      theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient0.getClientBinaryHandler();
      theClient0.getClientBinaryHandler();
      theClient0.setClientBinaryHandler((ClientBinaryHandler) null);
      theClient0.getClientEventHandler();
      theClient0.setMaxAuthTry((-2531));
      theClient0.setTimeoutMsg("");
      theClient0.getMaxAuthTryMsg();
      theClient0.getMaxAuthTry();
      TheClient theClient1 = new TheClient();
      theClient1.setCommunicationLogging(true);
      theClient1.getClientData();
      theClient1.setClientData((ClientData) null);
      theClient1.getClientObjectHandler();
      theClient1.getClientObjectHandler();
      theClient0.setClientObjectHandler((ClientObjectHandler) null);
      theClient0.toString();
      assertEquals((-2531), theClient0.getMaxAuthTry());
      
      theClient1.getClientWriteHandler();
      assertFalse(theClient1.getTrusted());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.046430838943019
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.setMaxConnectionMsg("j0");
      theClient0.getClientData();
      theClient0.getClientBinaryHandler();
      CommandHandler commandHandler0 = new CommandHandler();
      theClient0.setClientCommandHandler(commandHandler0);
      theClient0.getClientWriteHandler();
      theClient0.setClientWriteHandler((ClientWriteHandler) null);
      theClient0.getMaxAuthTryMsg();
      theClient0.getMaxConnectionMsg();
      theClient0.getClientObjectHandler();
      assertFalse(theClient0.getTrusted());
      
      theClient0.setTrusted(true);
      theClient0.setClientObjectHandler((ClientObjectHandler) null);
      theClient0.getClientEventHandler();
      assertTrue(theClient0.getTrusted());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.7825850929940454
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getClientWriteHandler();
      theClient0.setMaxAuthTryMsg("");
      theClient0.getMaxAuthTryMsg();
      theClient0.setTrusted(true);
      TheClient theClient1 = new TheClient();
      theClient1.getClientBinaryHandler();
      theClient1.setClientBinaryHandler((ClientBinaryHandler) null);
      assertFalse(theClient1.getTrusted());
      
      theClient0.getTrusted();
      theClient0.getClientWriteHandler();
      theClient0.getMaxConnectionMsg();
      theClient0.setClientWriteHandler((ClientWriteHandler) null);
      assertTrue(theClient0.getTrusted());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.485528191921338
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getClientEventHandler();
      theClient0.getAuthenticator();
      theClient0.setAuthenticator((Authenticator) null);
      theClient0.setClientEventHandler((ClientEventHandler) null);
      theClient0.getClientAuthenticationHandler();
      theClient0.setClientAuthenticationHandler((ClientAuthenticationHandler) null);
      theClient0.getMaxConnectionMsg();
      theClient0.getClientObjectHandler();
      theClient0.setClientObjectHandler((ClientObjectHandler) null);
      theClient0.toString();
      CommandHandler commandHandler0 = new CommandHandler();
      theClient0.setClientCommandHandler(commandHandler0);
      theClient0.setMaxAuthTryMsg("F^33");
      theClient0.setClientEvent((ClientEvent) null);
      theClient0.setMaxConnectionMsg("T} kbgfVVgF");
      theClient0.getClientData();
      theClient0.getClientBinaryHandler();
      theClient0.setClientCommandHandler(commandHandler0);
      theClient0.getClientWriteHandler();
      theClient0.setClientWriteHandler((ClientWriteHandler) null);
      theClient0.getMaxAuthTryMsg();
      String string0 = theClient0.toString();
      assertEquals("{TheClient no socket, Event: null}", string0);
      
      theClient0.getClientObjectHandler();
      theClient0.setClientObjectHandler((ClientObjectHandler) null);
      assertTrue(theClient0.getCommunicationLogging());
      assertFalse(theClient0.getTrusted());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      MockSocket mockSocket0 = new MockSocket();
      theClient0.setTrusted(false);
      theClient0.setSocket(mockSocket0);
      theClient0.getTrusted();
      theClient0.getClientWriteHandler();
      org.quickserver.net.qsadmin.Authenticator authenticator0 = new org.quickserver.net.qsadmin.Authenticator();
      theClient0.setClientAuthenticationHandler(authenticator0);
      theClient0.getSocket();
      theClient0.getAuthenticator();
      assertFalse(theClient0.getTrusted());
      assertTrue(theClient0.getCommunicationLogging());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("FileName can't be null", 101);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      SocketChannel.open();
      TheClient theClient0 = new TheClient();
      theClient0.getSocket();
      theClient0.setSocket((Socket) null);
      String string0 = theClient0.toString();
      assertEquals("{TheClient no socket, Event: (ClientEvent-Run Blocking)}", string0);
      assertFalse(theClient0.getTrusted());
      assertTrue(theClient0.getCommunicationLogging());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.673415053526696
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      assertFalse(theClient0.getTrusted());
      
      theClient0.setTrusted(true);
      theClient0.getClientBinaryHandler();
      theClient0.setClientBinaryHandler((ClientBinaryHandler) null);
      theClient0.getTrusted();
      theClient0.getClientWriteHandler();
      theClient0.setClientWriteHandler((ClientWriteHandler) null);
      theClient0.getAuthenticator();
      theClient0.getClientObjectHandler();
      theClient0.getClientObjectHandler();
      assertTrue(theClient0.getTrusted());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.380937795632014
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getClientWriteHandler();
      theClient0.setClientWriteHandler((ClientWriteHandler) null);
      theClient0.getClientExtendedEventHandler();
      theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient0.setMaxAuthTry(1665);
      theClient0.getClientAuthenticationHandler();
      theClient0.getClientEventHandler();
      theClient0.getClientEvent();
      theClient0.getServer();
      theClient0.setMaxConnectionMsg((String) null);
      theClient0.getClientAuthenticationHandler();
      theClient0.getClientEventHandler();
      theClient0.getServer();
      theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient0.getMaxAuthTry();
      theClient0.getClientObjectHandler();
      theClient0.setClientObjectHandler((ClientObjectHandler) null);
      theClient0.setClientEventHandler((ClientEventHandler) null);
      theClient0.getTrusted();
      theClient0.getClientWriteHandler();
      theClient0.getClientExtendedEventHandler();
      theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient0.getClientCommandHandler();
      theClient0.setTimeoutMsg((String) null);
      theClient0.setTimeoutMsg("");
      assertEquals(1665, theClient0.getMaxAuthTry());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.2597682094192684
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      int int0 = theClient0.getMaxAuthTry();
      assertEquals(0, int0);
      
      theClient0.getClientAuthenticationHandler();
      theClient0.getClientCommandHandler();
      theClient0.setClientCommandHandler((ClientCommandHandler) null);
      theClient0.getClientExtendedEventHandler();
      theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient0.setMaxConnectionMsg("RD_qy/gs\txTX");
      theClient0.getClientData();
      theClient0.getClientBinaryHandler();
      CommandHandler commandHandler0 = new CommandHandler();
      theClient0.setClientCommandHandler(commandHandler0);
      theClient0.getClientWriteHandler();
      theClient0.setClientWriteHandler((ClientWriteHandler) null);
      theClient0.getMaxAuthTryMsg();
      String string0 = theClient0.toString();
      assertEquals("{TheClient no socket, Event: (ClientEvent-Run Blocking)}", string0);
      
      theClient0.getClientObjectHandler();
      theClient0.setClientObjectHandler((ClientObjectHandler) null);
      theClient0.getClientData();
      theClient0.getClientBinaryHandler();
      assertFalse(theClient0.getTrusted());
      assertTrue(theClient0.getCommunicationLogging());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.4859283519853634
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getClientObjectHandler();
      theClient0.toString();
      theClient0.setTimeoutMsg("Loading ClientWriteHandler class..");
      theClient0.getClientData();
      ClientEvent clientEvent0 = ClientEvent.READ;
      theClient0.setClientEvent(clientEvent0);
      theClient0.getTimeout();
      theClient0.getClientWriteHandler();
      TheClient theClient1 = new TheClient();
      theClient1.setClientWriteHandler((ClientWriteHandler) null);
      theClient1.getTimeout();
      org.quickserver.net.qsadmin.Authenticator authenticator0 = new org.quickserver.net.qsadmin.Authenticator();
      theClient0.setClientAuthenticationHandler(authenticator0);
      theClient0.getClientEvent();
      theClient1.getClientCommandHandler();
      theClient1.setClientCommandHandler((ClientCommandHandler) null);
      theClient1.getTrusted();
      theClient0.setMaxAuthTry((-769));
      theClient0.setClientCommandHandler((ClientCommandHandler) null);
      theClient0.getTimeout();
      theClient0.getClientBinaryHandler();
      theClient1.setSocket((Socket) null);
      theClient0.getTimeoutMsg();
      theClient0.setTimeout(0);
      theClient0.getClientEventHandler();
      theClient0.getClientData();
      assertEquals((-769), theClient0.getMaxAuthTry());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getClientData();
      theClient0.setClientData((ClientData) null);
      theClient0.getServer();
      assertTrue(theClient0.getCommunicationLogging());
      assertFalse(theClient0.getTrusted());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.9649066497880012
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.setMaxConnectionMsg("j0");
      theClient0.getClientData();
      theClient0.getClientBinaryHandler();
      CommandHandler commandHandler0 = new CommandHandler();
      theClient0.setClientCommandHandler(commandHandler0);
      theClient0.getClientWriteHandler();
      theClient0.setClientWriteHandler((ClientWriteHandler) null);
      theClient0.getMaxAuthTryMsg();
      String string0 = theClient0.toString();
      assertEquals("{TheClient no socket, Event: (ClientEvent-Run Blocking)}", string0);
      
      theClient0.getClientObjectHandler();
      theClient0.setClientObjectHandler((ClientObjectHandler) null);
      theClient0.getClientEventHandler();
      assertTrue(theClient0.getCommunicationLogging());
      assertFalse(theClient0.getTrusted());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.26315475997563
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getClientEventHandler();
      theClient0.getAuthenticator();
      theClient0.setAuthenticator((Authenticator) null);
      theClient0.setClientEventHandler((ClientEventHandler) null);
      theClient0.toString();
      theClient0.getClientObjectHandler();
      theClient0.setClientObjectHandler((ClientObjectHandler) null);
      theClient0.toString();
      CommandHandler commandHandler0 = new CommandHandler();
      theClient0.setClientCommandHandler(commandHandler0);
      theClient0.setMaxAuthTryMsg("F^33");
      theClient0.setClientEvent((ClientEvent) null);
      theClient0.setMaxAuthTryMsg("{TheClient no socket, Event: (ClientEvent-Run Blocking)}");
      theClient0.getClientBinaryHandler();
      ClientCommandHandler clientCommandHandler0 = theClient0.getClientCommandHandler();
      theClient0.setClientCommandHandler(clientCommandHandler0);
      theClient0.getClientWriteHandler();
      theClient0.setClientWriteHandler((ClientWriteHandler) null);
      TheClient theClient1 = new TheClient();
      TheClient theClient2 = new TheClient();
      theClient2.getMaxAuthTryMsg();
      String string0 = theClient1.toString();
      assertEquals("{TheClient no socket, Event: (ClientEvent-Run Blocking)}", string0);
      
      TheClient theClient3 = new TheClient();
      theClient3.getClientObjectHandler();
      TheClient theClient4 = new TheClient();
      theClient4.setClientObjectHandler((ClientObjectHandler) null);
      assertFalse(theClient4.getTrusted());
      assertTrue(theClient4.getCommunicationLogging());
  }
}
