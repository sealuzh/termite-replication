/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 05:32:22 GMT 2019
 */

package client.network;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import client.BomberClient;
import client.network.ClientMsgReceiver;
import java.awt.Color;
import java.awt.GridBagLayout;
import java.awt.HeadlessException;
import java.awt.Point;
import java.io.CharArrayWriter;
import java.net.Socket;
import java.sql.BatchUpdateException;
import java.sql.ClientInfoStatus;
import java.sql.SQLDataException;
import java.sql.SQLFeatureNotSupportedException;
import java.sql.SQLNonTransientConnectionException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Locale;
import java.util.Stack;
import javax.swing.Action;
import javax.swing.Box;
import javax.swing.DefaultComboBoxModel;
import javax.swing.Icon;
import javax.swing.JCheckBoxMenuItem;
import javax.swing.JFormattedTextField;
import javax.swing.JInternalFrame;
import javax.swing.JList;
import javax.swing.JMenuItem;
import javax.swing.MenuElement;
import javax.swing.MenuSelectionManager;
import javax.swing.event.MenuDragMouseEvent;
import javax.swing.plaf.basic.BasicToolBarUI;
import messages.global.GlobalStateMsg;
import messages.global.JoinSessionMsg;
import messages.global.ScoreMsg;
import messages.round.NewBombMsg;
import messages.round.NewTileMsg;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.mock.java.lang.MockException;
import org.evosuite.runtime.mock.java.net.MockSocket;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ClientMsgReceiver_ESTest extends ClientMsgReceiver_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(charArrayWriter0);
      Locale locale0 = Locale.FRENCH;
      Object[] objectArray0 = new Object[8];
      Object object0 = new Object();
      objectArray0[0] = object0;
      objectArray0[2] = (Object) mockSocket0;
      Object object1 = new Object();
      objectArray0[4] = object1;
      Object object2 = new Object();
      objectArray0[5] = object2;
      objectArray0[6] = (Object) "";
      objectArray0[7] = (Object) null;
      mockPrintWriter0.format(locale0, ";w.OsTz\"5?,cz4eV@b", objectArray0);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.closeConnection();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("client.network.ClientMsgReceiver", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      BatchUpdateException batchUpdateException0 = new BatchUpdateException();
      SQLNonTransientConnectionException sQLNonTransientConnectionException0 = new SQLNonTransientConnectionException((Throwable) null);
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      GlobalStateMsg globalStateMsg0 = new GlobalStateMsg(0);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.processMsg(globalStateMsg0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      int[] intArray0 = new int[9];
      intArray0[0] = 1;
      intArray0[1] = 1;
      intArray0[2] = 1;
      BatchUpdateException batchUpdateException0 = new BatchUpdateException("", "client.network.ClientMsgReceiver", 1, intArray0);
      SQLNonTransientConnectionException sQLNonTransientConnectionException0 = new SQLNonTransientConnectionException("client.network.ClientMsgReceiver", "client.network.ClientMsgReceiver", 1);
      MockException mockException0 = new MockException("mcB/i$/3", batchUpdateException0);
      StackTraceElement stackTraceElement0 = new StackTraceElement("SHUTDOWN", "SHUTDOWN", "SHUTDOWN", 823);
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[7];
      stackTraceElementArray0[0] = stackTraceElement0;
      stackTraceElementArray0[1] = stackTraceElement0;
      stackTraceElementArray0[2] = stackTraceElement0;
      stackTraceElementArray0[3] = stackTraceElement0;
      stackTraceElementArray0[4] = stackTraceElement0;
      stackTraceElementArray0[5] = stackTraceElement0;
      stackTraceElementArray0[6] = stackTraceElement0;
      batchUpdateException0.setStackTrace(stackTraceElementArray0);
      ArrayList<NewBombMsg> arrayList0 = new ArrayList<NewBombMsg>();
      Box box0 = Box.createHorizontalBox();
      MenuElement[] menuElementArray0 = new MenuElement[5];
      JInternalFrame jInternalFrame0 = new JInternalFrame("mcB/i$/3", false, false);
      jInternalFrame0.getJMenuBar();
      menuElementArray0[0] = (MenuElement) null;
      JCheckBoxMenuItem jCheckBoxMenuItem0 = new JCheckBoxMenuItem();
      menuElementArray0[1] = (MenuElement) jCheckBoxMenuItem0;
      Icon icon0 = jInternalFrame0.getFrameIcon();
      JMenuItem jMenuItem0 = new JMenuItem("SHUTDOWN", icon0);
      menuElementArray0[2] = (MenuElement) jMenuItem0;
      JFormattedTextField jFormattedTextField0 = new JFormattedTextField(sQLNonTransientConnectionException0);
      jFormattedTextField0.getAction();
      JCheckBoxMenuItem jCheckBoxMenuItem1 = new JCheckBoxMenuItem((Action) null);
      menuElementArray0[3] = (MenuElement) jCheckBoxMenuItem1;
      JMenuItem jMenuItem1 = new JMenuItem(icon0);
      menuElementArray0[4] = (MenuElement) jMenuItem1;
      MenuSelectionManager menuSelectionManager0 = new MenuSelectionManager();
      MenuDragMouseEvent menuDragMouseEvent0 = new MenuDragMouseEvent(box0, 1, 1, 1, 1, 1, 32, false, menuElementArray0, menuSelectionManager0);
      box0.getToolTipLocation(menuDragMouseEvent0);
      NewBombMsg newBombMsg0 = new NewBombMsg((Point) null, 2015, 32, 1, false);
      arrayList0.add(newBombMsg0);
      ScoreMsg scoreMsg0 = new ScoreMsg(arrayList0);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.processMsg(scoreMsg0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("messages.global.ScoreMsg", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      JoinSessionMsg joinSessionMsg0 = new JoinSessionMsg("I", "wYa}xB:;=OE&*P=W");
      int[] intArray0 = new int[5];
      intArray0[0] = 493;
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 16;
      intArray0[4] = 0;
      BatchUpdateException batchUpdateException0 = new BatchUpdateException();
      SQLNonTransientConnectionException sQLNonTransientConnectionException0 = new SQLNonTransientConnectionException((Throwable) null);
      SQLDataException sQLDataException0 = new SQLDataException(sQLNonTransientConnectionException0);
      ArrayList<NewTileMsg> arrayList0 = new ArrayList<NewTileMsg>();
      ScoreMsg scoreMsg0 = new ScoreMsg(arrayList0);
      ScoreMsg[] scoreMsgArray0 = new ScoreMsg[0];
      GridBagLayout gridBagLayout0 = new GridBagLayout();
      Point point0 = gridBagLayout0.location(0, (-1));
      NewTileMsg newTileMsg0 = new NewTileMsg((-1440), point0, "wYa}xB:;=OE&*P=W", false, false, false);
      arrayList0.add(newTileMsg0);
      DefaultComboBoxModel<ScoreMsg> defaultComboBoxModel0 = new DefaultComboBoxModel<ScoreMsg>(scoreMsgArray0);
      defaultComboBoxModel0.addElement(scoreMsg0);
      Stack<ScoreMsg> stack0 = new Stack<ScoreMsg>();
      DefaultComboBoxModel<ScoreMsg> defaultComboBoxModel1 = new DefaultComboBoxModel<ScoreMsg>(stack0);
      JList<ScoreMsg> jList0 = new JList<ScoreMsg>(defaultComboBoxModel1);
      jList0.indexToLocation(0);
      BasicToolBarUI basicToolBarUI0 = new BasicToolBarUI();
      basicToolBarUI0.getFloatingColor();
      JList<ScoreMsg> jList1 = new JList<ScoreMsg>();
      jList1.setBackground((Color) null);
      NewBombMsg newBombMsg0 = new NewBombMsg((Point) null, (-285), 0, 0, true);
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.processMsg(joinSessionMsg0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("client.network.ClientMsgReceiver", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("", 1);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      JoinSessionMsg joinSessionMsg0 = new JoinSessionMsg("I", "wYa}xB;=OE&*P=W");
      int[] intArray0 = new int[5];
      intArray0[0] = 493;
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 16;
      intArray0[4] = 0;
      BatchUpdateException batchUpdateException0 = new BatchUpdateException("I", "I", 0, intArray0);
      SQLNonTransientConnectionException sQLNonTransientConnectionException0 = new SQLNonTransientConnectionException((Throwable) null);
      SQLDataException sQLDataException0 = new SQLDataException(sQLNonTransientConnectionException0);
      sQLDataException0.getStackTrace();
      MockException mockException0 = new MockException("I", sQLDataException0);
      SQLDataException sQLDataException1 = new SQLDataException("", mockException0);
      sQLDataException1.printStackTrace();
      SQLFeatureNotSupportedException sQLFeatureNotSupportedException0 = new SQLFeatureNotSupportedException(sQLDataException1);
      SQLFeatureNotSupportedException sQLFeatureNotSupportedException1 = new SQLFeatureNotSupportedException("I", "wYa}xB;=OE&*P=W", sQLDataException1);
      Throwable throwable0 = sQLFeatureNotSupportedException1.fillInStackTrace();
      SQLDataException sQLDataException2 = new SQLDataException("", "9U}Tff() Uc", 0, throwable0);
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.handleConnectionLoss(batchUpdateException0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "&f#m^Y!");
      HashMap<String, ClientInfoStatus> hashMap0 = new HashMap<String, ClientInfoStatus>();
      HashMap<String, ClientInfoStatus> hashMap1 = new HashMap<String, ClientInfoStatus>();
      ClientInfoStatus clientInfoStatus0 = ClientInfoStatus.REASON_VALUE_TRUNCATED;
      ClientInfoStatus clientInfoStatus1 = ClientInfoStatus.REASON_UNKNOWN;
      hashMap1.replace("~c8UkzdBh+ga?lJm", clientInfoStatus1);
      hashMap1.put("~c8UkzdBh+ga?lJm", clientInfoStatus0);
      hashMap1.put("Could not instantiate configurator [", (ClientInfoStatus) null);
      hashMap1.replace("", (ClientInfoStatus) null);
      hashMap1.put("~c8UkzdBh+ga?lJm", clientInfoStatus0);
      HashMap<String, ClientInfoStatus> hashMap2 = new HashMap<String, ClientInfoStatus>();
      ClientInfoStatus clientInfoStatus2 = ClientInfoStatus.REASON_VALUE_INVALID;
      hashMap2.put("Could not instantiate configurator [", clientInfoStatus2);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-112);
      byteArray0[1] = (byte) (-112);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ClientMsgReceiver clientMsgReceiver0 = null;
      try {
        clientMsgReceiver0 = new ClientMsgReceiver((Socket) null, (BomberClient) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("common.network.MsgReceiver", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "~c8UkzdBh+ga?lJm");
      HashMap<String, ClientInfoStatus> hashMap0 = new HashMap<String, ClientInfoStatus>();
      HashMap<String, ClientInfoStatus> hashMap1 = new HashMap<String, ClientInfoStatus>();
      ClientInfoStatus clientInfoStatus0 = ClientInfoStatus.REASON_VALUE_TRUNCATED;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      hashMap1.replace("~c8UkzdBh+ga?lJm", clientInfoStatus0);
      hashMap1.put("client.network.ClientMsgReceiver", (ClientInfoStatus) null);
      hashMap0.put("p(_/!B@Gfml", (ClientInfoStatus) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "p(_/!B@Gfml");
      hashMap1.put("Login nach Enter!", (ClientInfoStatus) null);
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      ArrayList<NewBombMsg> arrayList0 = new ArrayList<NewBombMsg>();
      ScoreMsg scoreMsg0 = new ScoreMsg(arrayList0);
      SQLDataException sQLDataException0 = new SQLDataException("Login nach Enter!", "", (-1), (Throwable) null);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.displayErrorMessage();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }
}
