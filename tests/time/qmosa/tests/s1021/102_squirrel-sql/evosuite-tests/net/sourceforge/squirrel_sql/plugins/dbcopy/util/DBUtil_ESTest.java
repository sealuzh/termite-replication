/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 06:03:40 GMT 2019
 */

package net.sourceforge.squirrel_sql.plugins.dbcopy.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.gargoylesoftware.base.resource.jdbc.ConnectionWrapper;
import java.io.File;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.DatabaseMetaData;
import java.sql.Savepoint;
import java.sql.Statement;
import java.util.ArrayDeque;
import java.util.ArrayList;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Stack;
import java.util.Vector;
import java.util.concurrent.ArrayBlockingQueue;
import javax.swing.DefaultListCellRenderer;
import javax.swing.Icon;
import javax.swing.JLayeredPane;
import javax.swing.tree.DefaultTreeCellRenderer;
import net.sourceforge.squirrel_sql.client.IApplication;
import net.sourceforge.squirrel_sql.client.gui.db.SQLAlias;
import net.sourceforge.squirrel_sql.client.gui.db.SQLAliasColorProperties;
import net.sourceforge.squirrel_sql.client.gui.db.SQLAliasConnectionProperties;
import net.sourceforge.squirrel_sql.client.gui.db.SQLAliasSchemaProperties;
import net.sourceforge.squirrel_sql.client.session.ISession;
import net.sourceforge.squirrel_sql.client.session.schemainfo.SchemaInfo;
import net.sourceforge.squirrel_sql.client.util.ApplicationFiles;
import net.sourceforge.squirrel_sql.fw.id.IIdentifier;
import net.sourceforge.squirrel_sql.fw.id.IntegerIdentifier;
import net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo;
import net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectType;
import net.sourceforge.squirrel_sql.fw.sql.ForeignKeyInfo;
import net.sourceforge.squirrel_sql.fw.sql.IDatabaseObjectInfo;
import net.sourceforge.squirrel_sql.fw.sql.ISQLConnection;
import net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData;
import net.sourceforge.squirrel_sql.fw.sql.ITableInfo;
import net.sourceforge.squirrel_sql.fw.sql.SQLConnection;
import net.sourceforge.squirrel_sql.fw.sql.SQLDriver;
import net.sourceforge.squirrel_sql.fw.sql.SQLDriverPropertyCollection;
import net.sourceforge.squirrel_sql.fw.sql.TableColumnInfo;
import net.sourceforge.squirrel_sql.fw.util.FileWrapperFactoryImpl;
import net.sourceforge.squirrel_sql.plugins.dbcopy.DBCopyPlugin;
import net.sourceforge.squirrel_sql.plugins.dbcopy.prefs.DBCopyPreferenceBean;
import net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DBUtil_ESTest extends DBUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.8505612088663046
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBUtil.typesAreEquivalent((-11), 529);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      SQLAlias sQLAlias0 = new SQLAlias();
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      sQLAlias0.setConnectAtStartup(false);
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier((-2164));
      SQLDriver sQLDriver0 = new SQLDriver(integerIdentifier0);
      SQLAlias sQLAlias1 = new SQLAlias();
      sQLAlias0.getDriverPropertiesClone();
      SQLDriver sQLDriver1 = new SQLDriver();
      SQLConnection sQLConnection0 = new SQLConnection(connection0, sQLDriverPropertyCollection0, sQLDriver1);
      dBCopyPlugin0.getPasteToTableInfo(sQLConnection0, (String) null, "varchar2(4000)");
      // Undeclared exception!
      try { 
        DBUtil.getColumnCount(sQLConnection0, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.SQLDatabaseMetaData", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.6082873972465448
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("*@9^pFmO^\"h>rF(", "*@9^pFmO^\"h>rF(", "*@9^pFmO^\"h>rF(", "Yj[$oj=", 1131, ")) from ", (-2124), (-2105376123), (-2802), 545, "u", "*@9^pFmO^\"h>rF(", (-216), 1, "");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SYNONYM;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.INDEX;
      DBUtil.isBinaryType(tableColumnInfo0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Yj[$oj=");
      DBUtil.getLastStatementValues();
      DBUtil.getLastStatementValues();
      DBUtil.getSchemaNameFromDbObject(tableColumnInfo0);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.unload();
      dBCopyPlugin0.getSourceSession();
      SQLAlias sQLAlias0 = new SQLAlias();
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = sQLAlias0.getDriverPropertiesClone();
      SQLDriver sQLDriver0 = new SQLDriver();
      SQLConnection sQLConnection0 = new SQLConnection(connectionWrapper0, sQLDriverPropertyCollection0, sQLDriver0);
      // Undeclared exception!
      try { 
        DBUtil.getColumnType((ISQLConnection) sQLConnection0, (ITableInfo) null, 525);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.SQLDatabaseMetaData", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      dBCopyPlugin0.setCopyMenuEnabled(false);
      // Undeclared exception!
      try { 
        DBUtil.getTableCount((ISession) null, "DD_xS{", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "$|a+MG)", 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int int0 = 5458;
      String string0 = null;
      int int1 = 2407;
      String string1 = "'pV.i=1";
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("Eh", "uhj7sw=f!y2[#QBD", "jq{=D';", "(W", 1073741823, "jq{=D';", 1073741823, 5458, 5458, 1073741823, (String) null, "Eh", 1073741823, 2407, "'pV.i=1");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      DBUtil.replaceDistinctDataType(5458, tableColumnInfo0, (ISession) null);
      // Undeclared exception!
      try { 
        DBUtil.getColumnSql(dBCopyPlugin0, tableColumnInfo0, "(W", "(W");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      int int0 = 545;
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      SQLAlias sQLAlias0 = new SQLAlias();
      sQLAlias0.setIdentifier((IIdentifier) null);
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier(545);
      SQLDriverPropertyCollection sQLDriverPropertyCollection1 = sQLAlias0.getDriverPropertiesClone();
      sQLDriverPropertyCollection1.getDriverProperties();
      SQLDriver sQLDriver0 = new SQLDriver(integerIdentifier0);
      sQLAlias0.setDriverProperties(sQLDriverPropertyCollection1);
      SQLDriver sQLDriver1 = new SQLDriver();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      SQLDriverPropertyCollection sQLDriverPropertyCollection2 = new SQLDriverPropertyCollection();
      SQLDriver sQLDriver2 = new SQLDriver();
      SQLConnection sQLConnection0 = new SQLConnection(connection0, sQLDriverPropertyCollection2, sQLDriver2);
      FileSystemHandling.shouldAllThrowIOExceptions();
      dBCopyPlugin1.getPasteToTableInfo(sQLConnection0, "CO_zh", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      DBUtil.validateColumnNames((ITableInfo) null, dBCopyPlugin0);
      sQLAlias0.getDriverPropertiesClone();
      SQLDriver sQLDriver3 = new SQLDriver();
      DBCopyPlugin dBCopyPlugin2 = new DBCopyPlugin();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "TNof/B\"pmHW4:>v2");
      // Undeclared exception!
      try { 
        DBUtil.getColumnName(sQLConnection0, (ITableInfo) null, 545);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.SQLDatabaseMetaData", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((Statement) null).when(connection0).createStatement();
      SQLAlias sQLAlias0 = new SQLAlias();
      sQLAlias0.setIdentifier((IIdentifier) null);
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier(545);
      SQLDriverPropertyCollection sQLDriverPropertyCollection1 = sQLAlias0.getDriverPropertiesClone();
      SQLDriver sQLDriver0 = new SQLDriver(integerIdentifier0);
      sQLAlias0.setDriverProperties(sQLDriverPropertyCollection1);
      SQLDriver sQLDriver1 = new SQLDriver();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      SQLDriverPropertyCollection sQLDriverPropertyCollection2 = new SQLDriverPropertyCollection();
      SQLDriver sQLDriver2 = new SQLDriver();
      SQLConnection sQLConnection0 = new SQLConnection(connection0, sQLDriverPropertyCollection2, sQLDriver2);
      FileSystemHandling.shouldAllThrowIOExceptions();
      dBCopyPlugin1.getPasteToTableInfo(sQLConnection0, "CO_zh", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      DBUtil.validateColumnNames((ITableInfo) null, dBCopyPlugin0);
      sQLAlias0.getDriverPropertiesClone();
      SQLDriver sQLDriver3 = new SQLDriver();
      dBCopyPlugin1.setCopyMenuEnabled(true);
      DBCopyPlugin dBCopyPlugin2 = new DBCopyPlugin();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "TNof/B\"pmHW4:>v2");
      // Undeclared exception!
      try { 
        DBUtil.executeUpdate(sQLConnection0, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("5%L.F'W[ys'ED-", "net.sourceforge.squirrel_sql.plugins.dbcoTy.dbcopy", "5%L.F'W[ys'ED-", "\"?v", 715, "E*BFve&uT2r2lJ?8", (-2815), (-2815), 715, 715, "`cV#9ae]U", "E*BFve&uT2r2lJ?8", 715, (-3628), "\"?v");
      DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      SQLAlias sQLAlias0 = new SQLAlias();
      sQLAlias0.setConnectionProperties((SQLAliasConnectionProperties) null);
      sQLAlias0.getDriverPropertiesClone();
      // Undeclared exception!
      try { 
        DBUtil.convertTableToObjectList((List<ITableInfo>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("UL9(", "SessionManager.getNextSession()-> List empty so returning passed session", "sourceSessionTypeName", "OikF;4.8--X`<?,6", (-3), "UL9(", (-3), 782, 782, (-3), "SessionManager.getNextSession()-> List empty so returning passed session", "sourceSessionTypeName", (-3), 2, "UL9(");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.VIEW;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.FUNCTION;
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.SEQUENCE;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      DatabaseObjectType.createNewDatabaseObjectType("SessionManager.getNextSession()-> List empty so returning passed session");
      DatabaseObjectType databaseObjectType3 = DatabaseObjectType.SEQUENCE_TYPE_DBO;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LinkedList<ITableInfo> linkedList0 = new LinkedList<ITableInfo>();
      linkedList0.stream();
      linkedList0.offer((ITableInfo) null);
      Object object0 = new Object();
      FileSystemHandling.shouldAllThrowIOExceptions();
      DBUtil.convertTableToObjectList(linkedList0);
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      SQLAlias sQLAlias0 = new SQLAlias();
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.INDEX_TYPE_DBO;
      IIdentifier iIdentifier0 = databaseObjectType0.getIdentifier();
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      Icon icon0 = defaultTreeCellRenderer0.getLeafIcon();
      DatabaseObjectType.createNewDatabaseObjectType("", icon0);
      SQLAlias sQLAlias1 = new SQLAlias(iIdentifier0);
      sQLAlias1.getDriverPropertiesClone();
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      assertEquals(200, (int)integer0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ITableInfo iTableInfo0 = null;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "log4j.reset");
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      Locale.getISOCountries();
      // Undeclared exception!
      try { 
        DBUtil.getColumnTypes((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      // Undeclared exception!
      try { 
        DBUtil.getColumnNames((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[1];
      // Undeclared exception!
      try { 
        DBUtil.getColumnList(tableColumnInfoArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("TBRcj#?lPsK", "TBRcj#?lPsK", "TBRcj#?lPsK", "", 745, "W+", (-2583), 8192, 735, 1135, "%8fN-J", "O", 1135, (-2924), "P)QQ,FQ7szxa_wv/'X");
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[2];
      tableColumnInfoArray0[0] = tableColumnInfo0;
      tableColumnInfoArray0[1] = tableColumnInfo0;
      String string0 = DBUtil.getColumnList(tableColumnInfoArray0);
      assertEquals(", ", string0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPluginUserSettingsFolder();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo(" /|TN6RK(Y0p1", "TBRcj#?lPsK", (String) null, "x&zb5y67", (-2), "_?", 3428, 1823, 0, 0, "", "x&zb5y67", 1823, (-2), " /|TN6RK(Y0p1");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Integer integer0 = new Integer(2006);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("@@Q", "TRUNCATE TABLE ", "varchar2(4000)", "9mhG|M/", (-4), "~p!Iyb_!X", (-1549), 1, (-1549), 1385, "ZqBfrW|`g,Px0+R-", "><8Uu(X", 545, 1019, "43PbJQ%bXa}Z)OUkw");
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      SQLAlias sQLAlias0 = new SQLAlias();
      Connection connection1 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((CallableStatement) null).when(connection1).prepareCall(anyString() , anyInt() , anyInt() , anyInt());
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection1);
      connectionWrapper0.releaseSavepoint((Savepoint) null);
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      SQLDriver sQLDriver0 = new SQLDriver((IIdentifier) null);
      SQLConnection sQLConnection0 = new SQLConnection(connectionWrapper0, sQLDriverPropertyCollection0, sQLDriver0);
      DBUtil.getColumnType((ISQLConnection) sQLConnection0, (ITableInfo) null, "*6VXJYaZeqh<Y1c\"w");
      sQLDriver0.setWebSiteUrl("net.sourceforge.squirrel_sql.fw.dialects.ProgressDialectExt");
      // Undeclared exception!
      try { 
        connectionWrapper0.prepareCall("*6VXJYaZeqh<Y1c\"w", (-1054), 4, 4);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // statement
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.StatementWrapper", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)90;
      byteArray0[1] = (byte) (-67);
      byteArray0[2] = (byte)8;
      byteArray0[3] = (byte)64;
      byteArray0[4] = (byte)123;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      dBCopyPlugin0.getPluginJarFilePath();
      Stack<IDatabaseObjectInfo> stack0 = new Stack<IDatabaseObjectInfo>();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "-#{zTUx-1- 0vvJ7O", "-#{zTUx-1- 0vvJ7O", "DBUtil.info.bindbloblength", (byte) (-67), "-#{zTUx-1- 0vvJ7O", (byte) (-67), (byte)90, 0, (-206), "Pa", "DBUtil.info.bindbloblength", (-543), (byte) (-67), "-#{zTUx-1- 0vvJ7O");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SEQUENCE_TYPE_DBO;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      stack0.add((IDatabaseObjectInfo) tableColumnInfo0);
      // Undeclared exception!
      try { 
        DBUtil.convertObjectToTableList(stack0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // net.sourceforge.squirrel_sql.fw.sql.TableColumnInfo cannot be cast to net.sourceforge.squirrel_sql.fw.sql.ITableInfo
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[1];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "TABLE");
      DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      Vector<IDatabaseObjectInfo> vector0 = new Vector<IDatabaseObjectInfo>();
      boolean boolean0 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql/logs");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      EvoSuiteFile evoSuiteFile1 = null;
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "!tsP=Q`Uo\"gf+}J");
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[1];
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("nY@4 M?AO|euv~c", "nY@4 M?AO|euv~c", "NO");
      iDatabaseObjectInfoArray0[0] = (IDatabaseObjectInfo) databaseObjectInfo0;
      // Undeclared exception!
      try { 
        DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo cannot be cast to net.sourceforge.squirrel_sql.fw.sql.ITableInfo
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      // Undeclared exception!
      try { 
        DBUtil.getForeignKeySQL(dBCopyPlugin0, (ITableInfo) null, arrayList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      ForeignKeyInfo foreignKeyInfo0 = mock(ForeignKeyInfo.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        DBUtil.isBinaryType((TableColumnInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "", "");
      String[] stringArray0 = new String[6];
      stringArray0[0] = ":^kQP.lBY";
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      ApplicationFiles applicationFiles1 = new ApplicationFiles();
      MockFile mockFile0 = new MockFile("{nv)VI|", "");
      fileWrapperFactoryImpl0.create((File) mockFile0);
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.setFileWrapperFactory(fileWrapperFactoryImpl0);
      // Undeclared exception!
      try { 
        DBUtil.getColumnTypes((ISQLConnection) null, (ITableInfo) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((DatabaseMetaData) null).when(connection0).getMetaData();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql/logs");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      SQLDriver sQLDriver0 = new SQLDriver();
      SQLConnection sQLConnection0 = new SQLConnection(connection0, (SQLDriverPropertyCollection) null, sQLDriver0);
      dBCopyPlugin0.getPasteToTableInfo(sQLConnection0, (String) null, "");
      // Undeclared exception!
      try { 
        DBUtil.tableHasPrimaryKey(sQLConnection0, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getWebSite();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("", "Y<[m>pTW}0/H", "Encountered unexpected exception while attempting to determine if catalogs are used in table definitions", "Q;$T*R.4B+S[{$QW!", (-6), "bins", 2, (-7), 529, 2, "@<%aF<qx", "Opening next  nested jar: ", (-7), (-7), "@<%aF<qx");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.FUNCTION;
      DatabaseObjectType.createNewDatabaseObjectType("FROM informix.systables AS T1, informix.sysviews AS T2 ");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DBUtil.isBinaryType(tableColumnInfo0);
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.getSourceDatabaseObjects();
      // Undeclared exception!
      try { 
        DBUtil.convertObjectToTableList((List<IDatabaseObjectInfo>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Vector<IDatabaseObjectInfo> vector0 = new Vector<IDatabaseObjectInfo>();
      DBUtil.convertObjectToTableList(vector0);
      List<IDatabaseObjectInfo> list0 = new ArrayList<IDatabaseObjectInfo>();
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      SQLAlias sQLAlias0 = new SQLAlias();
      SQLAliasColorProperties sQLAliasColorProperties0 = sQLAlias0.getColorProperties();
      sQLAlias0.setColorProperties(sQLAliasColorProperties0);
      sQLAlias0.getDriverPropertiesClone();
      SQLDriver sQLDriver0 = new SQLDriver();
      assertFalse(sQLDriver0.isJDBCDriverClassLoaded());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      int int0 = 4;
      // Undeclared exception!
      try { 
        DBUtil.dropTable("null", "decode(", "null", (ISession) null, true, 4);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      String string0 = "/Rqy|JW;XMN'J";
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.unload();
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        DBUtil.getSchemaNameFromDbObject((IDatabaseObjectInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("O@qJr?GjaspGN~", "XGq4Eb2M", "varchar2(4000)", "ie ]", 0, "varchar2(4000)", 1896, 0, 1003, 1896, "XGq4Eb2M", "This CaseInsensitiveString is immutable", 12, 0, "`}/Mp7D~8");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.createNewDatabaseObjectType("^M^u>=9w564@NMxKI");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DBUtil.getSchemaNameFromDbObject(tableColumnInfo0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      // Undeclared exception!
      try { 
        DBUtil.getSchemaFromDbObject(tableColumnInfo0, schemaInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // SQLDatabaseMetaData == null
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.getPluginJarFilePath();
      DBCopyPlugin dBCopyPlugin2 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.getInsertSQL(dBCopyPlugin2, "!tsP=Q`Uo\"gf+}J", (ITableInfo) null, (-3223));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      SQLAlias sQLAlias0 = new SQLAlias();
      sQLAlias0.setName("T:clIxt\"j8_R]");
      SQLAliasSchemaProperties sQLAliasSchemaProperties0 = new SQLAliasSchemaProperties();
      sQLAlias0.setSchemaProperties(sQLAliasSchemaProperties0);
      SQLAlias sQLAlias1 = new SQLAlias();
      sQLAlias1.setSchemaProperties(sQLAliasSchemaProperties0);
      sQLAlias1.setUserName("T:clIxt\"j8_R]");
      SQLAliasConnectionProperties sQLAliasConnectionProperties0 = sQLAlias1.getConnectionProperties();
      sQLAliasConnectionProperties0.setEnableConnectionKeepAlive(true);
      sQLAlias1.setConnectionProperties(sQLAliasConnectionProperties0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql");
      FileSystemHandling.createFolder(evoSuiteFile0);
      sQLAlias0.getDriverPropertiesClone();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.sanityCheckPreferences((ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu");
      FileSystemHandling.createFolder(evoSuiteFile0);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql");
      FileSystemHandling.appendStringToFile(evoSuiteFile2, "title");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.getCreateTableSql(dBCopyPlugin0, (ITableInfo) null, "title", "SerialDate.weekInMonthToString(): invalid code.", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0730116670092564
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getWebSite();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("L5", "m~Ces$(6SJQ{@>H", "O`+)>Vrn&po_!~fr", "9`dI", 2546, "CjLUQ(VOSXIb8(u=R", 0, 0, 2, 0, "9`dI", "YkY ?3@7w(", 0, 0, "v 6sB64y-H*l~");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.FUNCTION;
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource0 = new DefaultListCellRenderer.UIResource();
      defaultListCellRenderer_UIResource0.getDisabledIcon();
      DatabaseObjectType.createNewDatabaseObjectType("YkY ?3@7w(", (Icon) null);
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.createNewDatabaseObjectType("L5");
      DatabaseObjectType.createNewDatabaseObjectType("CjLUQ(VOSXIb8(u=R", (Icon) null);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      boolean boolean1 = DBUtil.typesAreEquivalent(2, 1760);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[4];
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "TABLE");
      List<ITableInfo> list0 = new Vector<ITableInfo>();
      Vector<IDatabaseObjectInfo> vector0 = new Vector<IDatabaseObjectInfo>();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      // Undeclared exception!
      try { 
        DBUtil.getSchemaFromDbObject((IDatabaseObjectInfo) null, schemaInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[0];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "TABLE");
      DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      Vector<IDatabaseObjectInfo> vector0 = new Vector<IDatabaseObjectInfo>();
      boolean boolean0 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql/logs");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      // Undeclared exception!
      try { 
        DBUtil.convertObjectArrayToTableList((IDatabaseObjectInfo[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      DBUtil.fixCase((ISession) null, "");
      // Undeclared exception!
      try { 
        DBUtil.getCatSep((ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SYNONYM;
      String string0 = DBUtil.fixCase((ISession) null, (String) null);
      assertNull(string0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      boolean boolean0 = DBUtil.typesAreEquivalent(47, 529);
      assertFalse(boolean0);
      
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("Ld@~Jr_vLo:^`1ga7dN", "W+", "min=", ".", 3746, (String) null, (-68), 3746, 836, 0, (String) null, (String) null, 47, 529, "y|-");
      SQLAlias sQLAlias0 = new SQLAlias();
      SQLAlias sQLAlias1 = new SQLAlias();
      sQLAlias1.getDriverPropertiesClone();
      sQLAlias1.getDriverPropertiesClone();
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      boolean boolean1 = DBUtil.typesAreEquivalent(1003, 47);
      assertFalse(boolean1);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getWebSite();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      dBCopyPlugin1.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.isKeyword((ISession) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql/logs");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      dBCopyPlugin0.getPluginJarFilePath();
      // Undeclared exception!
      try { 
        DBUtil.checkKeyword((ISession) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "xb?-F");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      DBUtil.typesAreEquivalent(529, 529);
      SQLAlias sQLAlias0 = new SQLAlias();
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier(529);
      // Undeclared exception!
      try { 
        integerIdentifier0.setString("Dan Dragut");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"Dan Dragut\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu");
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileSystemHandling.setPermissions(evoSuiteFile0, true, true, true);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql");
      FileSystemHandling.appendStringToFile(evoSuiteFile1, "title");
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("title", "*6VXJYaZeqh<Y1c\"w", "*6VXJYaZeqh<Y1c\"w", "title", 6, "p5ki4'pG", (-816), 499, 3597, 1270, "p5ki4'pG", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 3, 6, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("autoDetectDisabledMessage", (String) null, "-CfRpJb^zMc", (String) null, 5, "autoDetectDisabledMessage", 5, 5, 1613, 128, "Overlapping bin", "autoDetectDisabledMessage", 1613, (-2), "-CfRpJb^zMc");
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[0];
      String string0 = DBUtil.getColumnList(tableColumnInfoArray0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBCopyPreferenceBean dBCopyPreferenceBean0 = new DBCopyPreferenceBean();
      dBCopyPlugin0.unload();
      DBUtil.setPreferences(dBCopyPreferenceBean0);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("b", "SkBppinN FK (", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 0, "b", 16, 1512, 1030, 0, "ayS>N[ VyH.y6b9", (String) null, (-766), 0, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      DBUtil.replaceDistinctDataType(0, tableColumnInfo0, (ISession) null);
      dBCopyPlugin1.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      // Undeclared exception!
      try { 
        DBUtil.getSchemaFromDbObject(tableColumnInfo0, schemaInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // SQLDatabaseMetaData == null
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.fixCase((ISession) null, "*6VXJYaZeqh<Y1c\"w");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.deleteDataInExistingTable((ISession) null, "P:GG", "replaceOthrDataType: unexpectd exception - ", "replaceOthrDataType: unexpectd exception - ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      ForeignKeyInfo foreignKeyInfo0 = mock(ForeignKeyInfo.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        DBUtil.tableHasForeignKey("id;r.=Lx%uz$6G", ";", "Vat.z~[DY8u1F,|b>", foreignKeyInfo0, dBCopyPlugin0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.sameDatabaseType((ISession) null, (ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      LinkedList<ITableInfo> linkedList0 = new LinkedList<ITableInfo>();
      LinkedList<ForeignKeyInfo> linkedList1 = new LinkedList<ForeignKeyInfo>();
      ArrayDeque<ForeignKeyInfo> arrayDeque0 = new ArrayDeque<ForeignKeyInfo>(linkedList1);
      LinkedHashSet<ForeignKeyInfo> linkedHashSet0 = new LinkedHashSet<ForeignKeyInfo>(arrayDeque0);
      ArrayBlockingQueue<ForeignKeyInfo> arrayBlockingQueue0 = new ArrayBlockingQueue<ForeignKeyInfo>(13, true, linkedHashSet0);
      linkedList0.retainAll(arrayBlockingQueue0);
      DBUtil.convertTableToObjectList(linkedList0);
      DBUtil dBUtil0 = new DBUtil();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("j11PF*RUB c\"", "njar:", "Df=", "", 182, "DBUtil.info.bindclobmem", (-1619), (-1619), (-1619), 568, (String) null, "8Mr\"jHocc%q*jjWwU\"", (-1619), 0, "@m/o)<b~F =");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.TABLE;
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.createNewDatabaseObjectType("");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      TableColumnInfo tableColumnInfo1 = null;
      try {
        tableColumnInfo1 = new TableColumnInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "njar:", (String) null, (String) null, 568, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 182, 1000000, 568, 2, ";;", "njar:", 334, 334, "", (ISQLDatabaseMetaData) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // SQLDatabaseMetaData == null
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      DBUtil.getLastStatement();
      DBUtil.setLastStatement((String) null);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBUtil.setLastStatementValues("NON-UNIQUE");
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql/logs");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("u>Xcutl K?", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (String) null, (String) null, 1896, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (-7), (-1290), (-480), 782, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (-7), (-480), "*6VXJYaZeqh<Y1c\"w");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.VIEW;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.FUNCTION;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.createNewDatabaseObjectType((String) null);
      DatabaseObjectType.createNewDatabaseObjectType("PreferencesPanel.autoCommitLabel");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertFalse(boolean0);
      
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      int int0 = DBUtil.replaceDistinctDataType((-7), tableColumnInfo0, (ISession) null);
      assertEquals((-7), int0);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("$e0-*X;I<IV\"3:Bs)a^", "$e0-*X;I<IV\"3:Bs)a^", "$e0-*X;I<IV\"3:Bs)a^", " and table_schema = ? ", 1111, " and table_schema = ? ", 1030, 1111, 4, (-198), "", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (-280), (-280), "ML'th@Wb];Ty]^f4m");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.PRIMARY_KEY;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      dBCopyPlugin0.getSourceSession();
      int int0 = DBUtil.replaceDistinctDataType(91, tableColumnInfo0, (ISession) null);
      assertEquals(91, int0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      int int0 = 529;
      DBUtil.typesAreEquivalent((-189), (-11));
      SQLAlias sQLAlias0 = new SQLAlias();
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier(8);
      // Undeclared exception!
      try { 
        integerIdentifier0.setString("I/Lbk8D|MXuqN05");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"I/Lbk8D|MXuqN05\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      int int0 = 2;
      DBUtil.typesAreEquivalent(2, 2);
      int int1 = 4;
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      SQLAlias sQLAlias0 = new SQLAlias();
      Connection connection1 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((CallableStatement) null).when(connection1).prepareCall(anyString() , anyInt() , anyInt() , anyInt());
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection1);
      connectionWrapper0.releaseSavepoint((Savepoint) null);
      // Undeclared exception!
      try { 
        connectionWrapper0.prepareCall("*6VXJYaZeqh<Y1c\"w", (-1054), 4, 4);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // statement
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.StatementWrapper", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("@JvzDWqQk;y*|", "*6VXJYaZeqh<Y1c\"w", "W+", "#&_uSL^mLsiy", (-891), "#&_uSL^mLsiy", 2001, 2366, 2001, 2366, (String) null, "W+", 3266, 3266, "W+");
      TableColumnInfo tableColumnInfo1 = new TableColumnInfo("W+", "G", "G", ">4Yk2s-de>rE", 3266, (String) null, (-891), (-3), 125, (-3), "Encountered unexpected exception when attempting to call schemaInfo.getTables with catalog = ", " )", 1376, 2001, (String) null);
      // Undeclared exception!
      try { 
        DBUtil.getMaxColumnLengthSQL((ISession) null, tableColumnInfo1, "bit_or", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.getQualifiedObjectName((ISession) null, (String) null, (String) null, (String) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.getTableCount((ISession) null, "|3cVz}a", "#&_uSL^mLsiy", "|3cVz}a", 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      SQLAlias sQLAlias0 = new SQLAlias();
      sQLAlias0.setName("T:clIxt\"j8_R]");
      SQLAliasSchemaProperties sQLAliasSchemaProperties0 = new SQLAliasSchemaProperties();
      sQLAlias0.setSchemaProperties(sQLAliasSchemaProperties0);
      SQLAlias sQLAlias1 = new SQLAlias();
      sQLAlias1.setSchemaProperties(sQLAliasSchemaProperties0);
      sQLAlias1.setUserName("T:clIxt\"j8_R]");
      sQLAlias1.getConnectionProperties();
      MockFile mockFile0 = new MockFile("Og\"UVX$_ ]~gE", "axion");
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      fileWrapperFactoryImpl0.create((File) mockFile0);
      FileWrapperFactoryImpl fileWrapperFactoryImpl1 = new FileWrapperFactoryImpl();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.getTableInfo((ISession) null, "Og\"UVX$_ ]~gE", ", ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.executeQuery((ISession) null, "varchar2(4000)");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu");
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileSystemHandling.setPermissions(evoSuiteFile0, true, true, true);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql");
      FileSystemHandling.appendStringToFile(evoSuiteFile1, "title");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.getSelectQuery(dBCopyPlugin0, "title", (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getWebSite();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("L5", "", "*6VXJYaZeqh<Y1c\"w", "L5", 0, (String) null, 0, 2, 2001, 0, "", "YkY ?3@7w(", 2001, (-264), "m~Ces$(6SJQ{@>H");
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      DBCopyPlugin dBCopyPlugin2 = new DBCopyPlugin();
      dBCopyPlugin1.setDestSession((ISession) null);
      dBCopyPlugin0.getSourceSession();
      int int0 = DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 62
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getWebSite();
      dBCopyPlugin0.getWebSite();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("supportsCatalogsInTableDefinitions", "supportsCatalogsInTableDefinitions", "$7c#8># 0|5Q", "Invalid bounds", 1073741823, "DBUtil.error.firebirdcommit", (-1208), (-692), 1073741823, (-993), "U", "$7c#8># 0|5Q", 152, (-692), ",|");
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      dBCopyPlugin1.setDestSession((ISession) null);
      dBCopyPlugin1.getSourceSession();
      int int0 = DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      assertEquals(1073741823, int0);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.getTables((ISession) null, "#&_uSL^mLsiy", "TBRcj#?lPsK", "!\"]HP!WrW\"zf6");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }
}
