/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 06:03:10 GMT 2019
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.164237536865641
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.rightBracket();
      xPathLexer0.mod();
      xPathLexer0.comma();
      xPathLexer0.div();
      xPathLexer0.dollar();
      xPathLexer0.consume((-3493));
      xPathLexer0.rightParen();
      xPathLexer0.rightBracket();
      // Undeclared exception!
      try { 
        xPathLexer0.identifier();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.110746673732862
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("y|Gu6@i1F#`P@>Bkg");
      Token token0 = xPathLexer0.rightBracket();
      token0.toString();
      token0.toString();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.colon();
      xPathLexer0.star();
      xPathLexer0.notEquals();
      xPathLexer0.operatorName();
      xPathLexer0.notEquals();
      xPathLexer0.notEquals();
      xPathLexer0.and();
      xPathLexer0.plus();
      xPathLexer0.at();
      xPathLexer0.relationalOperator();
      xPathLexer0.operatorName();
      xPathLexer0.getXPath();
      xPathLexer0.plus();
      xPathLexer0.equals();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.or();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer2.LA(3958);
      XPathLexer xPathLexer3 = new XPathLexer("y|Gu6@i1F#`P@>Bkg");
      xPathLexer3.comma();
      XPathLexer xPathLexer4 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer4.comma();
      xPathLexer2.nextToken();
      xPathLexer4.notEquals();
      xPathLexer0.at();
      Token token1 = xPathLexer4.mod();
      assertNull(token1);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.133963033577933
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|'+sXzKuW`|r@k<7?c");
      xPathLexer0.dots();
      xPathLexer0.leftParen();
      xPathLexer0.relationalOperator();
      xPathLexer0.relationalOperator();
      xPathLexer0.and();
      xPathLexer0.and();
      xPathLexer0.operatorName();
      xPathLexer0.plus();
      xPathLexer0.minus();
      xPathLexer0.plus();
      xPathLexer0.plus();
      xPathLexer0.pipe();
      xPathLexer0.comma();
      xPathLexer0.nextToken();
      xPathLexer0.colon();
      xPathLexer0.rightBracket();
      xPathLexer0.minus();
      xPathLexer0.dollar();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.rightBracket();
      xPathLexer0.whitespace();
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer("c(Y4\r5Uw{.~)x");
      xPathLexer1.leftBracket();
      xPathLexer1.plus();
      xPathLexer0.consume();
      xPathLexer0.or();
      XPathLexer xPathLexer2 = new XPathLexer("Ey*#FY>R{0PRVv|");
      xPathLexer2.nextToken();
      Token token0 = xPathLexer1.getPreviousToken();
      assertNull(token0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.823522840348096
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ph(WV+%lJZig'8");
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertTrue(boolean0);
      
      xPathLexer0.or();
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      assertEquals("p", token0.getTokenText());
      
      xPathLexer0.comma();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("(", token1.getTokenText());
      assertEquals(1, token1.getTokenType());
      
      Token token2 = xPathLexer0.colon();
      assertEquals("W", token2.getTokenText());
      assertEquals(18, token2.getTokenType());
      
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(4, token3.getTokenType());
      assertEquals("V", token3.getTokenText());
      
      xPathLexer0.operatorName();
      xPathLexer0.getXPath();
      Token token4 = xPathLexer0.plus();
      assertEquals(5, token4.getTokenType());
      assertEquals("+", token4.getTokenText());
      
      xPathLexer0.or();
      XPathLexer xPathLexer1 = new XPathLexer();
      char char0 = xPathLexer1.LA(17);
      assertEquals('\uFFFF', char0);
      
      Token token5 = xPathLexer0.comma();
      assertEquals("%", token5.getTokenText());
      
      Token token6 = xPathLexer1.comma();
      assertEquals(32, token6.getTokenType());
      
      xPathLexer1.not();
      xPathLexer0.isIdentifierChar('>');
      Token token7 = xPathLexer1.not();
      assertEquals(23, token7.getTokenType());
      
      Token token8 = xPathLexer0.star();
      assertEquals(20, token8.getTokenType());
      assertEquals("l", token8.getTokenText());
      
      char char1 = xPathLexer0.LA(5);
      assertEquals('\'', char1);
      
      Token token9 = xPathLexer1.rightParen();
      assertEquals(2, token9.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token10 = xPathLexer0.at();
      assertEquals("J", token10.getTokenText());
      assertEquals(16, token10.getTokenType());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.6477981163143105
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1Seunz<#`8 '");
      xPathLexer0.colon();
      Token token0 = xPathLexer0.pipe();
      Token token1 = xPathLexer0.number();
      assertEquals("", token1.getTokenText());
      assertEquals(30, token1.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.leftParen();
      Token token2 = xPathLexer0.colon();
      assertEquals(18, token2.getTokenType());
      assertEquals("u", token2.getTokenText());
      
      xPathLexer0.consume();
      xPathLexer0.mod();
      Token token3 = xPathLexer0.slashes();
      assertEquals(11, token3.getTokenType());
      assertEquals("z", token3.getTokenText());
      
      xPathLexer0.currentPosition();
      Token token4 = xPathLexer0.star();
      assertEquals(20, token4.getTokenType());
      assertEquals("<", token4.getTokenText());
      
      xPathLexer0.div();
      Token token5 = xPathLexer0.plus();
      assertEquals("#", token5.getTokenText());
      assertEquals(5, token5.getTokenType());
      
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('\\');
      assertFalse(boolean0);
      
      xPathLexer0.isIdentifierChar('\\');
      Token token6 = xPathLexer0.dots();
      assertEquals("`", token6.getTokenText());
      assertEquals(13, token6.getTokenType());
      
      Token token7 = xPathLexer0.identifierOrOperatorName();
      assertEquals("8", token7.getTokenText());
      
      xPathLexer0.setPreviousToken(token0);
      assertEquals(17, token0.getTokenType());
      assertEquals("S", token0.getTokenText());
      
      Token token8 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token8.getTokenType());
      
      xPathLexer0.consume();
      Token token9 = xPathLexer0.leftParen();
      assertEquals("'", token9.getTokenText());
      assertEquals(1, token9.getTokenType());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.5308386598093342
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|'+sXzKuW`|r@k<7?c");
      xPathLexer0.dots();
      xPathLexer0.at();
      xPathLexer0.not();
      xPathLexer0.relationalOperator();
      xPathLexer0.relationalOperator();
      xPathLexer0.and();
      xPathLexer0.pipe();
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.colon();
      xPathLexer0.consume();
      xPathLexer1.mod();
      xPathLexer1.slashes();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.setXPath("hmY");
      xPathLexer1.nextToken();
      xPathLexer0.notEquals();
      xPathLexer2.at();
      Token token0 = xPathLexer2.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.6632586483382714
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      XPathLexer xPathLexer1 = new XPathLexer("[ (");
      xPathLexer0.nextToken();
      xPathLexer1.number();
      xPathLexer1.star();
      xPathLexer1.or();
      xPathLexer0.or();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer("NN*L.~lj11PF*RU");
      xPathLexer2.rightParen();
      XPathLexer xPathLexer3 = new XPathLexer("[ (");
      xPathLexer3.relationalOperator();
      xPathLexer3.whitespace();
      xPathLexer0.and();
      xPathLexer3.mod();
      Token token0 = xPathLexer1.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.0998833378188118
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = "s)pLa";
      XPathLexer xPathLexer0 = new XPathLexer("s)pLa");
      xPathLexer0.nextToken();
      xPathLexer0.number();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.doubleColon();
      xPathLexer0.consume();
      xPathLexer0.dollar();
      xPathLexer0.notEquals();
      xPathLexer0.notEquals();
      xPathLexer0.and();
      xPathLexer0.and();
      xPathLexer0.not();
      xPathLexer0.or();
      xPathLexer0.mod();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.consume((-1715));
      // Undeclared exception!
      try { 
        xPathLexer1.slashes();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.5559242232373212
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ph(WV+%lJZig'8");
      Token token0 = xPathLexer0.colon();
      assertEquals(18, token0.getTokenType());
      assertEquals("p", token0.getTokenText());
      
      xPathLexer0.hasMoreChars();
      xPathLexer0.or();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("h", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.and();
      Token token2 = xPathLexer1.at();
      assertEquals(16, token2.getTokenType());
      
      Token token3 = xPathLexer1.plus();
      assertEquals(5, token3.getTokenType());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.852880906652198
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      XPathLexer xPathLexer1 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("[", token0.getTokenText());
      assertEquals(3, token0.getTokenType());
      
      Token token1 = xPathLexer1.number();
      assertEquals(30, token1.getTokenType());
      
      Token token2 = xPathLexer1.star();
      assertEquals("[", token2.getTokenText());
      assertEquals(20, token2.getTokenType());
      
      xPathLexer1.or();
      xPathLexer0.or();
      Token token3 = xPathLexer1.nextToken();
      assertEquals("(", token3.getTokenText());
      assertEquals(1, token3.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("NN*L.~lj11PF*RU");
      Token token4 = xPathLexer2.rightParen();
      assertEquals("N", token4.getTokenText());
      assertEquals(2, token4.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("[ (");
      Token token5 = xPathLexer2.notEquals();
      assertEquals(22, token5.getTokenType());
      assertEquals("N*", token5.getTokenText());
      
      Token token6 = xPathLexer0.at();
      assertEquals(16, token6.getTokenType());
      assertEquals(" ", token6.getTokenText());
      
      xPathLexer1.mod();
      xPathLexer0.and();
      Token token7 = xPathLexer2.identifierOrOperatorName();
      assertEquals("L.", token7.getTokenText());
      assertEquals(15, token7.getTokenType());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.966704435208549
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("y|Gu6@i1F#`Ph@>Bkg");
      Token token0 = xPathLexer0.rightBracket();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (4) (y)", string0);
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.colon();
      assertEquals("|", token1.getTokenText());
      assertEquals(18, token1.getTokenType());
      
      xPathLexer0.star();
      xPathLexer0.notEquals();
      xPathLexer0.operatorName();
      xPathLexer0.notEquals();
      Token token2 = xPathLexer0.notEquals();
      assertEquals("1F", token2.getTokenText());
      assertEquals(22, token2.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.plus();
      Token token3 = xPathLexer0.at();
      assertEquals(16, token3.getTokenType());
      assertEquals("`", token3.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token4 = xPathLexer0.minus();
      Token token5 = xPathLexer0.dollar();
      assertEquals(26, token5.getTokenType());
      assertEquals("h", token5.getTokenText());
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.operatorName();
      Token token6 = xPathLexer0.whitespace();
      assertEquals((-2), token6.getTokenType());
      
      xPathLexer0.and();
      Token token7 = xPathLexer0.leftBracket();
      assertEquals(3, token7.getTokenType());
      
      xPathLexer0.plus();
      String string1 = token4.toString();
      assertEquals("[ (6) (P)", string1);
      
      xPathLexer0.currentPosition();
      Token token8 = xPathLexer0.star();
      assertEquals(20, token8.getTokenType());
      
      xPathLexer0.div();
      Token token9 = xPathLexer0.plus();
      assertEquals(5, token9.getTokenType());
      
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('\\');
      assertFalse(boolean0);
      
      xPathLexer0.isIdentifierChar('\\');
      Token token10 = xPathLexer0.dots();
      assertEquals(13, token10.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.setPreviousToken(token4);
      Token token11 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token11.getTokenType());
      
      xPathLexer0.consume();
      Token token12 = xPathLexer0.leftParen();
      assertEquals(1, token12.getTokenType());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.981282714775987
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ph(WV+%lJZig'8");
      xPathLexer0.hasMoreChars();
      xPathLexer0.or();
      xPathLexer0.pipe();
      xPathLexer0.comma();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("ph(WV+%lJZig'8");
      xPathLexer1.and();
      xPathLexer1.and();
      xPathLexer1.operatorName();
      xPathLexer1.nextToken();
      xPathLexer1.plus();
      xPathLexer1.plus();
      xPathLexer1.pipe();
      xPathLexer1.comma();
      xPathLexer1.nextToken();
      xPathLexer0.colon();
      xPathLexer1.leftBracket();
      xPathLexer1.slashes();
      xPathLexer1.pipe();
      XPathLexer xPathLexer2 = new XPathLexer("auGan");
      xPathLexer1.div();
      xPathLexer2.notEquals();
      xPathLexer0.consume(97);
      xPathLexer2.currentPosition();
      xPathLexer2.equals();
      xPathLexer1.identifierOrOperatorName();
      xPathLexer0.consume();
      assertNotSame(xPathLexer0, xPathLexer1);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.6818097819978617
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1Seunz<#`8 '");
      xPathLexer0.and();
      xPathLexer0.operatorName();
      xPathLexer0.plus();
      Token token0 = xPathLexer0.minus();
      assertEquals("S", token0.getTokenText());
      assertEquals(6, token0.getTokenType());
      
      xPathLexer0.plus();
      xPathLexer0.plus();
      Token token1 = xPathLexer0.pipe();
      assertEquals("n", token1.getTokenText());
      assertEquals(17, token1.getTokenType());
      
      xPathLexer0.comma();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("<", token2.getTokenText());
      
      Token token3 = xPathLexer0.colon();
      assertEquals("#", token3.getTokenText());
      assertEquals(18, token3.getTokenType());
      
      Token token4 = xPathLexer0.rightBracket();
      assertEquals("`", token4.getTokenText());
      assertEquals(4, token4.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.getXPath();
      XPathLexer xPathLexer1 = new XPathLexer("RG7Ly;or");
      Token token5 = xPathLexer1.plus();
      assertEquals(5, token5.getTokenType());
      assertEquals("R", token5.getTokenText());
      
      xPathLexer0.or();
      char char0 = xPathLexer1.LA(111);
      assertEquals('\uFFFF', char0);
      
      Token token6 = xPathLexer1.comma();
      assertEquals("G", token6.getTokenText());
      assertEquals(32, token6.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token7 = xPathLexer1.notEquals();
      assertEquals("7L", token7.getTokenText());
      assertEquals(22, token7.getTokenType());
      
      Token token8 = xPathLexer2.at();
      assertEquals(16, token8.getTokenType());
      
      xPathLexer2.mod();
      xPathLexer1.and();
      Token token9 = xPathLexer2.identifierOrOperatorName();
      assertNotNull(token9);
      assertEquals(15, token9.getTokenType());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.9674501359822965
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|'+sXzKuW`|r@k<7?c");
      xPathLexer0.dots();
      xPathLexer0.leftParen();
      xPathLexer0.relationalOperator();
      xPathLexer0.relationalOperator();
      xPathLexer0.and();
      xPathLexer0.and();
      xPathLexer0.operatorName();
      xPathLexer0.plus();
      xPathLexer0.nextToken();
      xPathLexer0.plus();
      xPathLexer0.plus();
      xPathLexer0.pipe();
      xPathLexer0.comma();
      xPathLexer0.nextToken();
      xPathLexer0.colon();
      xPathLexer0.rightBracket();
      xPathLexer0.operatorName();
      xPathLexer0.getXPath();
      xPathLexer0.plus();
      int int0 = (-3099);
      xPathLexer0.or();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-3099));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.1615630164603923
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1Seunz<#`8 '");
      Token token0 = xPathLexer0.colon();
      assertEquals("1", token0.getTokenText());
      
      Token token1 = xPathLexer0.pipe();
      assertEquals(17, token1.getTokenType());
      assertEquals("S", token1.getTokenText());
      
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.leftParen();
      Token token3 = xPathLexer0.colon();
      assertEquals(18, token3.getTokenType());
      
      xPathLexer0.currentPosition();
      Token token4 = xPathLexer0.star();
      assertEquals("n", token4.getTokenText());
      assertEquals(20, token4.getTokenType());
      
      xPathLexer0.div();
      Token token5 = xPathLexer0.plus();
      assertEquals("z", token5.getTokenText());
      assertEquals(5, token5.getTokenType());
      
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('_');
      boolean boolean1 = xPathLexer0.isIdentifierChar('_');
      assertTrue(boolean1 == boolean0);
      
      Token token6 = xPathLexer0.dots();
      Token token7 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token7.getTokenType());
      
      xPathLexer0.setPreviousToken(token6);
      assertEquals("<", token6.getTokenText());
      assertEquals(13, token6.getTokenType());
      
      Token token8 = xPathLexer0.leftParen();
      assertEquals(1, token8.getTokenType());
      assertEquals("#", token8.getTokenText());
      
      Token token9 = xPathLexer0.dollar();
      assertEquals("`", token9.getTokenText());
      assertEquals(26, token9.getTokenType());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.4614480237337473
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|'+sXzKuW`|r@k<7?c");
      xPathLexer0.dots();
      xPathLexer0.leftParen();
      xPathLexer0.leftParen();
      xPathLexer0.at();
      xPathLexer0.not();
      xPathLexer0.relationalOperator();
      xPathLexer0.leftParen();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer("|'+sXzKuW`|r@k<7?c");
      xPathLexer1.and();
      xPathLexer1.and();
      xPathLexer0.operatorName();
      xPathLexer0.whitespace();
      xPathLexer1.plus();
      xPathLexer0.minus();
      xPathLexer1.dollar();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.at();
      xPathLexer2.and();
      XPathLexer xPathLexer3 = new XPathLexer("|'+sXzKuW`|r@k<7?c");
      xPathLexer3.currentPosition();
      xPathLexer2.or();
      xPathLexer2.div();
      xPathLexer2.literal();
      xPathLexer1.slashes();
      xPathLexer1.whitespace();
      Token token0 = xPathLexer3.and();
      assertNull(token0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.8669003185125996
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("y|Gu6@i1F#`P@>Bkg");
      Token token0 = xPathLexer0.colon();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (18) (y)", string0);
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.colon();
      Token token1 = xPathLexer0.star();
      assertEquals(20, token1.getTokenType());
      assertEquals("G", token1.getTokenText());
      
      xPathLexer0.notEquals();
      xPathLexer0.operatorName();
      xPathLexer0.notEquals();
      Token token2 = xPathLexer0.notEquals();
      assertEquals("1F", token2.getTokenText());
      
      Token token3 = xPathLexer0.dots();
      assertEquals(13, token3.getTokenType());
      assertEquals("#", token3.getTokenText());
      
      Token token4 = xPathLexer0.plus();
      assertEquals(5, token4.getTokenType());
      assertEquals("`", token4.getTokenText());
      
      Token token5 = xPathLexer0.at();
      assertEquals("P", token5.getTokenText());
      assertEquals(16, token5.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token6 = xPathLexer0.minus();
      assertEquals(6, token6.getTokenType());
      assertEquals("@", token6.getTokenText());
      
      Token token7 = xPathLexer0.dollar();
      assertEquals(">", token7.getTokenText());
      
      Token token8 = xPathLexer0.identifierOrOperatorName();
      assertEquals("Bkg", token8.getTokenText());
      assertEquals(15, token8.getTokenType());
      
      xPathLexer0.pipe();
      xPathLexer0.div();
      Token token9 = xPathLexer0.notEquals();
      assertEquals(22, token9.getTokenType());
      
      xPathLexer0.consume(27);
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.currentPosition();
      Token token10 = xPathLexer1.equals();
      assertEquals(21, token10.getTokenType());
      
      xPathLexer1.and();
      xPathLexer0.leftParen();
      Token token11 = xPathLexer0.dollar();
      assertEquals(26, token11.getTokenType());
      
      Token token12 = xPathLexer1.pipe();
      assertEquals(17, token12.getTokenType());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.6934732427698318
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|'+sXzKuW`|r@k<7?c");
      Token token0 = xPathLexer0.dots();
      assertEquals("|", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.at();
      assertEquals("'", token1.getTokenText());
      assertEquals(16, token1.getTokenType());
      
      Token token2 = xPathLexer0.not();
      assertEquals("+", token2.getTokenText());
      assertEquals(23, token2.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.relationalOperator();
      xPathLexer0.and();
      xPathLexer0.pipe();
      xPathLexer0.and();
      xPathLexer0.operatorName();
      xPathLexer0.whitespace();
      xPathLexer0.plus();
      xPathLexer0.plus();
      Token token3 = xPathLexer0.plus();
      assertEquals(5, token3.getTokenType());
      assertEquals("", token3.getTokenText());
      
      Token token4 = xPathLexer0.whitespace();
      assertEquals((-2), token4.getTokenType());
      
      Token token5 = xPathLexer0.pipe();
      assertEquals(17, token5.getTokenType());
      assertEquals("W", token5.getTokenText());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals("`|r@k<7?c", token6.getTokenText());
      
      xPathLexer0.div();
      Token token7 = xPathLexer0.rightBracket();
      assertEquals("`", token7.getTokenText());
      assertEquals(4, token7.getTokenType());
      
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('S');
      assertTrue(boolean0);
      
      Token token8 = xPathLexer0.equals();
      assertEquals("|", token8.getTokenText());
      assertEquals(21, token8.getTokenType());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.7712010480208815
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1Seunz<#`8 '");
      Token token0 = xPathLexer0.colon();
      assertEquals(18, token0.getTokenType());
      assertEquals("1", token0.getTokenText());
      
      Token token1 = xPathLexer0.pipe();
      assertEquals(17, token1.getTokenType());
      assertEquals("S", token1.getTokenText());
      
      Token token2 = xPathLexer0.number();
      assertEquals("", token2.getTokenText());
      assertEquals(30, token2.getTokenType());
      
      xPathLexer0.mod();
      Token token3 = xPathLexer0.nextToken();
      assertEquals("eunz", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer0.rightParen();
      assertEquals("<", token4.getTokenText());
      assertEquals(2, token4.getTokenType());
      
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.notEquals();
      Token token5 = xPathLexer0.at();
      assertEquals(16, token5.getTokenType());
      assertEquals("#", token5.getTokenText());
      
      Token token6 = xPathLexer1.notEquals();
      assertEquals(22, token6.getTokenType());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.5172023890664994
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.not();
      xPathLexer0.nextToken();
      xPathLexer0.star();
      xPathLexer0.rightBracket();
      xPathLexer0.pipe();
      xPathLexer0.slashes();
      xPathLexer0.LA(1);
      xPathLexer0.leftParen();
      xPathLexer0.colon();
      xPathLexer0.at();
      xPathLexer0.equals();
      xPathLexer0.comma();
      xPathLexer0.consume();
      xPathLexer0.or();
      xPathLexer0.getPreviousToken();
      xPathLexer0.dollar();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.8929085316312757
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("g. 12");
      xPathLexer0.rightBracket();
      xPathLexer0.nextToken();
      xPathLexer0.isIdentifierChar('z');
      Token token0 = xPathLexer0.rightParen();
      token0.toString();
      xPathLexer0.isIdentifierChar('z');
      xPathLexer0.mod();
      xPathLexer0.number();
      token0.toString();
      xPathLexer0.not();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.number();
      xPathLexer0.consume((-1141));
      XPathLexer xPathLexer1 = new XPathLexer("[ (2) ( )");
      xPathLexer1.rightBracket();
      xPathLexer1.rightParen();
      // Undeclared exception!
      try { 
        xPathLexer0.literal();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.603251425435171
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("y|Gu6@i1F#`P@>Bkg");
      Token token0 = xPathLexer0.rightBracket();
      token0.toString();
      token0.toString();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (4) (y)", string0);
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNotNull(token1);
      assertEquals(15, token1.getTokenType());
      
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.notEquals();
      Token token2 = xPathLexer0.star();
      assertEquals(20, token2.getTokenType());
      assertEquals("u", token2.getTokenText());
      
      Token token3 = xPathLexer0.notEquals();
      assertEquals("6@", token3.getTokenText());
      
      xPathLexer0.operatorName();
      xPathLexer0.literal();
      xPathLexer0.mod();
      xPathLexer0.notEquals();
      xPathLexer0.leftParen();
      Token token4 = xPathLexer0.plus();
      assertEquals(5, token4.getTokenType());
      
      Token token5 = xPathLexer0.at();
      assertEquals(16, token5.getTokenType());
      
      Token token6 = xPathLexer0.relationalOperator();
      assertNull(token6);
      
      xPathLexer0.notEquals();
      Token token7 = xPathLexer0.notEquals();
      assertEquals(22, token7.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.and();
      Token token8 = xPathLexer0.not();
      assertEquals(23, token8.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.mod();
      xPathLexer0.hasMoreChars();
      Token token9 = xPathLexer0.dots();
      assertEquals(13, token9.getTokenType());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.6924930504197837
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1Seunz<#`8 '");
      xPathLexer0.colon();
      xPathLexer0.pipe();
      xPathLexer0.number();
      xPathLexer0.mod();
      xPathLexer0.colon();
      xPathLexer0.consume();
      xPathLexer0.mod();
      xPathLexer0.slashes();
      xPathLexer0.nextToken();
      xPathLexer0.notEquals();
      xPathLexer0.at();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.9601347153526505
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|'+sXzKuW`|r@k<7?c");
      xPathLexer0.dots();
      xPathLexer0.leftParen();
      xPathLexer0.at();
      xPathLexer0.not();
      xPathLexer0.relationalOperator();
      xPathLexer0.leftParen();
      xPathLexer0.relationalOperator();
      xPathLexer0.and();
      xPathLexer0.and();
      xPathLexer0.operatorName();
      xPathLexer0.whitespace();
      xPathLexer0.plus();
      xPathLexer0.minus();
      xPathLexer0.plus();
      xPathLexer0.whitespace();
      xPathLexer0.pipe();
      xPathLexer0.comma();
      xPathLexer0.nextToken();
      xPathLexer0.colon();
      xPathLexer0.rightBracket();
      xPathLexer0.operatorName();
      xPathLexer0.getXPath();
      xPathLexer0.plus();
      int int0 = (-3099);
      xPathLexer0.or();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-3099));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.3779038722953336
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|'+sXzKuW`|r@k<7?c");
      Token token0 = xPathLexer0.dots();
      assertEquals("|", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      xPathLexer0.leftParen();
      xPathLexer0.at();
      Token token1 = xPathLexer0.not();
      assertEquals("s", token1.getTokenText());
      assertEquals(23, token1.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token2 = xPathLexer0.leftParen();
      assertEquals("X", token2.getTokenText());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.and();
      xPathLexer0.and();
      xPathLexer0.operatorName();
      xPathLexer0.whitespace();
      Token token3 = xPathLexer0.plus();
      assertEquals(5, token3.getTokenType());
      
      Token token4 = xPathLexer0.minus();
      assertEquals(6, token4.getTokenType());
      assertEquals("", token4.getTokenText());
      
      Token token5 = xPathLexer0.dollar();
      assertEquals(26, token5.getTokenType());
      assertEquals("u", token5.getTokenText());
      
      Token token6 = xPathLexer0.at();
      assertEquals(16, token6.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.currentPosition();
      xPathLexer0.or();
      xPathLexer0.div();
      Token token7 = xPathLexer0.literal();
      assertNull(token7);
      
      Token token8 = xPathLexer0.slashes();
      assertEquals(11, token8.getTokenType());
      
      Token token9 = xPathLexer0.whitespace();
      assertEquals((-2), token9.getTokenType());
      assertEquals("", token9.getTokenText());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.40938881326894
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.leftBracket();
      xPathLexer0.slashes();
      xPathLexer0.leftParen();
      xPathLexer0.identifier();
      xPathLexer0.rightBracket();
      xPathLexer0.equals();
      xPathLexer0.at();
      xPathLexer0.equals();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.doubleColon();
      xPathLexer0.colon();
      xPathLexer0.notEquals();
      xPathLexer0.colon();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-3351));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.4292382542647828
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|'+sXzKuW`|r@k<7?c");
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("|", token0.getTokenText());
      
      Token token1 = xPathLexer0.leftParen();
      assertEquals(1, token1.getTokenType());
      assertEquals("'", token1.getTokenText());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.relationalOperator();
      xPathLexer0.and();
      xPathLexer0.and();
      xPathLexer0.operatorName();
      xPathLexer0.plus();
      Token token2 = xPathLexer0.minus();
      assertEquals("s", token2.getTokenText());
      assertEquals(6, token2.getTokenType());
      
      xPathLexer0.plus();
      xPathLexer0.plus();
      XPathLexer xPathLexer1 = new XPathLexer("|'+sXzKuW`|r@k<7?c");
      Token token3 = xPathLexer1.nextToken();
      assertEquals("|", token3.getTokenText());
      assertEquals(17, token3.getTokenType());
      
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token4 = xPathLexer0.at();
      assertEquals(16, token4.getTokenType());
      assertEquals("K", token4.getTokenText());
      
      Token token5 = xPathLexer0.plus();
      assertEquals("", token5.getTokenText());
      assertEquals(5, token5.getTokenType());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.25762571219778
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.whitespace();
      xPathLexer0.notEquals();
      xPathLexer0.at();
      xPathLexer0.rightParen();
      xPathLexer0.not();
      xPathLexer0.plus();
      xPathLexer0.mod();
      xPathLexer0.at();
      xPathLexer0.mod();
      xPathLexer0.relationalOperator();
      xPathLexer0.dots();
      xPathLexer0.dots();
      // Undeclared exception!
      try { 
        xPathLexer0.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.132847080738926
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("y|Gu6@i1F#`Ph@>Bkg");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      assertEquals("y", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("y|Gu6@i1F#`Ph@>Bkg");
      Token token1 = xPathLexer1.colon();
      assertEquals(18, token1.getTokenType());
      assertEquals("y", token1.getTokenText());
      
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertTrue(boolean0);
      
      xPathLexer1.or();
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token2 = xPathLexer1.at();
      assertEquals("|", token2.getTokenText());
      assertEquals(16, token2.getTokenType());
      
      Token token3 = xPathLexer1.plus();
      assertEquals(5, token3.getTokenType());
      assertEquals("G", token3.getTokenText());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.121516755176394
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("y|Gu6@i1F#`P@>Bkg");
      Token token0 = xPathLexer0.rightBracket();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (4) (y)", string0);
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      assertEquals("|", token1.getTokenText());
      
      Token token2 = xPathLexer0.star();
      assertEquals(20, token2.getTokenType());
      assertEquals("G", token2.getTokenText());
      
      xPathLexer0.notEquals();
      xPathLexer0.operatorName();
      xPathLexer0.notEquals();
      Token token3 = xPathLexer0.notEquals();
      assertEquals(22, token3.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.plus();
      Token token4 = xPathLexer0.at();
      assertEquals("`", token4.getTokenText());
      assertEquals(16, token4.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token5 = xPathLexer0.minus();
      assertEquals(6, token5.getTokenType());
      assertEquals("P", token5.getTokenText());
      
      Token token6 = xPathLexer0.dollar();
      assertEquals("@", token6.getTokenText());
      assertEquals(26, token6.getTokenType());
      
      Token token7 = xPathLexer0.identifierOrOperatorName();
      assertNull(token7);
      
      xPathLexer0.rightBracket();
      Token token8 = xPathLexer0.whitespace();
      assertEquals((-2), token8.getTokenType());
      
      xPathLexer0.and();
      Token token9 = xPathLexer0.leftBracket();
      assertEquals("k", token9.getTokenText());
      assertEquals(3, token9.getTokenType());
      
      Token token10 = xPathLexer0.plus();
      assertEquals("g", token10.getTokenText());
      assertEquals(5, token10.getTokenType());
      
      xPathLexer0.consume();
      xPathLexer0.or();
      XPathLexer xPathLexer1 = new XPathLexer("y|Gu6@i1F#`P@>Bkg");
      xPathLexer1.nextToken();
      Token token11 = xPathLexer1.getPreviousToken();
      assertEquals("y", token11.getTokenText());
      assertEquals(15, token11.getTokenType());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.467331828022704
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ph(WV+%lJZig'8");
      xPathLexer0.hasMoreChars();
      xPathLexer0.or();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("ph", token0.getTokenText());
      
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token1 = xPathLexer1.at();
      assertEquals(16, token1.getTokenType());
      
      Token token2 = xPathLexer1.plus();
      assertEquals(5, token2.getTokenType());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.7704967840775552
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("y|Gu6@i1F#`P@>Bkg");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("y", token0.getTokenText());
      
      xPathLexer0.leftParen();
      Token token1 = xPathLexer0.at();
      assertEquals("G", token1.getTokenText());
      assertEquals(16, token1.getTokenType());
      
      Token token2 = xPathLexer0.not();
      assertEquals(23, token2.getTokenType());
      assertEquals("u", token2.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token3 = xPathLexer0.leftParen();
      assertEquals("6", token3.getTokenText());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.and();
      xPathLexer0.and();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.whitespace();
      xPathLexer0.plus();
      Token token4 = xPathLexer0.minus();
      assertEquals("i", token4.getTokenText());
      assertEquals(6, token4.getTokenType());
      
      xPathLexer1.plus();
      Token token5 = xPathLexer0.plus();
      assertEquals(5, token5.getTokenType());
      assertEquals("1", token5.getTokenText());
      
      Token token6 = xPathLexer0.whitespace();
      assertEquals("", token6.getTokenText());
      assertEquals((-2), token6.getTokenType());
      
      Token token7 = xPathLexer0.pipe();
      assertEquals(17, token7.getTokenType());
      assertEquals("#", token7.getTokenText());
      
      Token token8 = xPathLexer0.comma();
      assertEquals(32, token8.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token9 = xPathLexer2.nextToken();
      assertEquals((-1), token9.getTokenType());
      
      Token token10 = xPathLexer1.doubleColon();
      assertEquals(19, token10.getTokenType());
      
      Token token11 = xPathLexer2.rightBracket();
      assertEquals(4, token11.getTokenType());
      
      boolean boolean0 = xPathLexer1.isIdentifierStartChar('2');
      assertFalse(boolean0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.178319900700538
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s)pLa");
      xPathLexer0.nextToken();
      xPathLexer0.number();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.doubleColon();
      xPathLexer0.consume();
      xPathLexer0.dollar();
      xPathLexer0.notEquals();
      xPathLexer0.notEquals();
      xPathLexer0.and();
      xPathLexer0.and();
      xPathLexer0.not();
      xPathLexer0.or();
      xPathLexer0.mod();
      xPathLexer0.star();
      xPathLexer0.equals();
      xPathLexer0.comma();
      xPathLexer0.consume();
      xPathLexer0.or();
      xPathLexer0.colon();
      XPathLexer xPathLexer1 = new XPathLexer("#mKLayS");
      xPathLexer1.dollar();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.7428985098676117
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|'+sXzKuW`|r@k<7?c");
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      
      xPathLexer0.leftParen();
      xPathLexer0.at();
      Token token1 = xPathLexer0.not();
      assertEquals("s", token1.getTokenText());
      assertEquals(23, token1.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token2 = xPathLexer0.leftParen();
      assertEquals(1, token2.getTokenType());
      assertEquals("X", token2.getTokenText());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.and();
      xPathLexer0.and();
      xPathLexer0.operatorName();
      xPathLexer0.whitespace();
      xPathLexer0.plus();
      Token token3 = xPathLexer0.minus();
      assertEquals(6, token3.getTokenType());
      assertEquals("", token3.getTokenText());
      
      xPathLexer0.plus();
      Token token4 = xPathLexer0.plus();
      assertEquals("W", token4.getTokenText());
      
      Token token5 = xPathLexer0.whitespace();
      assertEquals((-2), token5.getTokenType());
      assertEquals("", token5.getTokenText());
      
      Token token6 = xPathLexer0.pipe();
      assertEquals(17, token6.getTokenType());
      
      Token token7 = xPathLexer0.comma();
      assertEquals("r", token7.getTokenText());
      assertEquals(32, token7.getTokenType());
      
      Token token8 = xPathLexer0.nextToken();
      assertEquals("@", token8.getTokenText());
      assertEquals(16, token8.getTokenType());
      
      xPathLexer0.div();
      Token token9 = xPathLexer0.rightBracket();
      assertEquals("k", token9.getTokenText());
      
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('S');
      assertTrue(boolean0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.7811021299445247
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("y|Gu6@i1F#`Ph@>Bkg");
      Token token0 = xPathLexer0.rightBracket();
      token0.toString();
      token0.toString();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.colon();
      xPathLexer0.star();
      xPathLexer0.notEquals();
      xPathLexer0.operatorName();
      xPathLexer0.notEquals();
      xPathLexer0.notEquals();
      xPathLexer0.and();
      xPathLexer0.plus();
      xPathLexer0.at();
      xPathLexer0.relationalOperator();
      xPathLexer0.minus();
      xPathLexer0.dollar();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.operatorName();
      xPathLexer0.whitespace();
      xPathLexer0.plus();
      xPathLexer0.at();
      xPathLexer0.relationalOperator();
      xPathLexer0.notEquals();
      xPathLexer0.notEquals();
      xPathLexer0.and();
      xPathLexer0.not();
      XPathLexer xPathLexer1 = null;
      try {
        xPathLexer1 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=3.261994968119123
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("");
      Token token0 = xPathLexer0.at();
      assertEquals(16, token0.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.mod();
      xPathLexer0.identifier();
      xPathLexer0.literal();
      Token token1 = xPathLexer0.literal();
      assertNull(token1);
      
      xPathLexer0.whitespace();
      Token token2 = xPathLexer0.notEquals();
      assertEquals(22, token2.getTokenType());
      
      xPathLexer0.setXPath("");
      int int0 = xPathLexer0.endPosition();
      assertEquals(0, int0);
      
      xPathLexer0.identifier();
      xPathLexer0.currentPosition();
      xPathLexer0.dollar();
      xPathLexer0.relationalOperator();
      Token token3 = xPathLexer0.whitespace();
      assertEquals((-2), token3.getTokenType());
      
      xPathLexer0.and();
      Token token4 = xPathLexer0.identifier();
      assertEquals(15, token4.getTokenType());
      
      xPathLexer0.currentPosition();
      xPathLexer0.consume();
      Token token5 = xPathLexer0.number();
      assertEquals(30, token5.getTokenType());
      
      Token token6 = xPathLexer0.plus();
      assertEquals(5, token6.getTokenType());
      
      Token token7 = xPathLexer0.not();
      assertEquals(23, token7.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token8 = xPathLexer0.pipe();
      assertEquals(17, token8.getTokenType());
      
      Token token9 = xPathLexer0.dots();
      assertEquals(13, token9.getTokenType());
      
      xPathLexer0.operatorName();
      Token token10 = xPathLexer0.leftBracket();
      assertEquals(3, token10.getTokenType());
      
      xPathLexer0.currentPosition();
      Token token11 = xPathLexer0.equals();
      assertEquals(21, token11.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.operatorName();
      xPathLexer0.rightParen();
      Token token12 = xPathLexer0.dollar();
      assertEquals(26, token12.getTokenType());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.7940269797889556
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("g. 12");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(13, token1.getTokenType());
      
      xPathLexer0.isIdentifierChar('z');
      Token token2 = xPathLexer0.rightParen();
      token2.toString();
      boolean boolean0 = xPathLexer0.isIdentifierChar('z');
      assertTrue(boolean0);
      
      xPathLexer0.mod();
      Token token3 = xPathLexer0.number();
      assertEquals("12", token3.getTokenText());
      
      token2.toString();
      xPathLexer0.not();
      token2.toString();
      xPathLexer0.and();
      String string0 = token2.toString();
      assertEquals("[ (2) ( )", string0);
      
      xPathLexer0.notEquals();
      xPathLexer0.setPreviousToken(token2);
      Token token4 = xPathLexer0.dollar();
      assertEquals(26, token4.getTokenType());
      
      Token token5 = xPathLexer0.notEquals();
      assertEquals(22, token5.getTokenType());
      
      Token token6 = xPathLexer0.comma();
      assertEquals(32, token6.getTokenType());
      
      Token token7 = xPathLexer0.not();
      assertEquals(23, token7.getTokenType());
      
      char char0 = xPathLexer0.LA((-1));
      assertEquals('\uFFFF', char0);
      
      xPathLexer0.number();
      Token token8 = xPathLexer0.leftBracket();
      assertEquals(3, token8.getTokenType());
      
      xPathLexer0.at();
      Token token9 = xPathLexer0.colon();
      assertEquals(18, token9.getTokenType());
      
      xPathLexer0.endPosition();
      xPathLexer0.relationalOperator();
      Token token10 = xPathLexer0.at();
      assertEquals(16, token10.getTokenType());
      
      xPathLexer0.literal();
      Token token11 = xPathLexer0.number();
      assertEquals(30, token11.getTokenType());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.9435816062596447
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("g. 12");
      xPathLexer0.rightBracket();
      xPathLexer0.colon();
      xPathLexer0.pipe();
      xPathLexer0.number();
      xPathLexer0.relationalOperator();
      xPathLexer0.leftParen();
      xPathLexer0.consume();
      xPathLexer0.mod();
      xPathLexer0.star();
      xPathLexer0.equals();
      xPathLexer0.doubleColon();
      xPathLexer0.consume();
      xPathLexer0.or();
      xPathLexer0.colon();
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer2.dollar();
      XPathLexer xPathLexer3 = new XPathLexer("");
      Token token0 = xPathLexer3.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.6052453841434646
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1Seunz<#`8 '");
      xPathLexer0.getPreviousToken();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.pipe();
      assertEquals("S", token1.getTokenText());
      assertEquals(17, token1.getTokenType());
      
      Token token2 = xPathLexer0.number();
      assertEquals("", token2.getTokenText());
      
      xPathLexer0.mod();
      Token token3 = xPathLexer0.leftParen();
      assertEquals("e", token3.getTokenText());
      assertEquals(1, token3.getTokenType());
      
      Token token4 = xPathLexer0.colon();
      assertEquals("u", token4.getTokenText());
      assertEquals(18, token4.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.div();
      Token token5 = xPathLexer0.literal();
      assertNull(token5);
      
      Token token6 = xPathLexer0.comma();
      assertEquals(32, token6.getTokenType());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=3.392372096514938
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!4Y*;*55");
      xPathLexer0.mod();
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      assertEquals("!", token0.getTokenText());
      
      xPathLexer0.mod();
      Token token1 = xPathLexer0.comma();
      assertEquals(32, token1.getTokenType());
      assertEquals("4", token1.getTokenText());
      
      xPathLexer0.setXPath("");
      xPathLexer0.leftParen();
      Token token2 = xPathLexer0.leftBracket();
      assertEquals(3, token2.getTokenType());
      
      Token token3 = xPathLexer0.dots();
      assertEquals(13, token3.getTokenType());
      
      Token token4 = xPathLexer0.star();
      assertEquals(20, token4.getTokenType());
      
      Token token5 = xPathLexer0.doubleColon();
      assertEquals(19, token5.getTokenType());
      
      Token token6 = xPathLexer0.dollar();
      assertEquals(26, token6.getTokenType());
      
      xPathLexer0.not();
      Token token7 = xPathLexer0.not();
      assertEquals(23, token7.getTokenType());
      
      Token token8 = xPathLexer0.colon();
      assertEquals(18, token8.getTokenType());
      
      xPathLexer0.div();
      xPathLexer0.notEquals();
      Token token9 = xPathLexer0.notEquals();
      assertEquals(22, token9.getTokenType());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.9918861436347033
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("g. 12");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("g", token0.getTokenText());
      assertEquals(4, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(13, token1.getTokenType());
      assertEquals(".", token1.getTokenText());
      
      xPathLexer0.isIdentifierChar('z');
      Token token2 = xPathLexer0.rightParen();
      token2.toString();
      boolean boolean0 = xPathLexer0.isIdentifierChar('z');
      assertTrue(boolean0);
      
      xPathLexer0.mod();
      Token token3 = xPathLexer0.number();
      assertEquals("12", token3.getTokenText());
      
      String string0 = token2.toString();
      assertEquals("[ (2) ( )", string0);
      
      Token token4 = xPathLexer0.not();
      assertEquals(23, token4.getTokenType());
      
      Token token5 = xPathLexer0.identifierOrOperatorName();
      assertNull(token5);
      
      Token token6 = xPathLexer0.number();
      assertEquals(30, token6.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("g. 12");
      xPathLexer0.rightParen();
      XPathLexer xPathLexer2 = new XPathLexer(") (");
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.relationalOperator();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token7 = xPathLexer2.at();
      assertEquals(")", token7.getTokenText());
      assertEquals(16, token7.getTokenType());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.713698724521319
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|'+sXzKuW`|r@k<7?c");
      Token token0 = xPathLexer0.dots();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (13) (|)", string0);
      
      XPathLexer xPathLexer1 = new XPathLexer("[ (13) (|)");
      xPathLexer1.identifierOrOperatorName();
      Token token1 = xPathLexer0.dots();
      xPathLexer1.setPreviousToken(token1);
      xPathLexer0.identifierOrOperatorName();
      Token token2 = xPathLexer1.colon();
      assertEquals(18, token2.getTokenType());
      assertEquals("[", token2.getTokenText());
      
      Token token3 = xPathLexer0.star();
      assertEquals("+", token3.getTokenText());
      assertEquals(20, token3.getTokenType());
      
      xPathLexer0.notEquals();
      xPathLexer1.operatorName();
      xPathLexer0.notEquals();
      Token token4 = xPathLexer1.notEquals();
      assertEquals(" (", token4.getTokenText());
      assertEquals(22, token4.getTokenType());
      
      xPathLexer0.and();
      Token token5 = xPathLexer1.plus();
      assertEquals(5, token5.getTokenType());
      assertEquals("1", token5.getTokenText());
      
      Token token6 = xPathLexer1.at();
      assertEquals("3", token6.getTokenText());
      assertEquals(16, token6.getTokenType());
      
      xPathLexer1.relationalOperator();
      Token token7 = xPathLexer1.minus();
      assertEquals(6, token7.getTokenType());
      
      xPathLexer1.dollar();
      boolean boolean0 = xPathLexer1.isIdentifierStartChar('\\');
      assertFalse(boolean0);
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.isIdentifierChar('\\');
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer3.dots();
      xPathLexer2.identifierOrOperatorName();
      Token token8 = xPathLexer0.slashes();
      assertEquals(11, token8.getTokenType());
      assertEquals("", token8.getTokenText());
      
      Token token9 = xPathLexer2.identifierOrOperatorName();
      xPathLexer2.setPreviousToken(token9);
      assertEquals(15, token9.getTokenType());
      
      Token token10 = xPathLexer2.leftParen();
      assertEquals(1, token10.getTokenType());
      
      Token token11 = xPathLexer3.dollar();
      assertEquals("o", token11.getTokenText());
      assertEquals(26, token11.getTokenType());
      
      Token token12 = xPathLexer2.leftBracket();
      assertEquals(3, token12.getTokenType());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=3.652818840571946
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.minus();
      xPathLexer0.rightBracket();
      xPathLexer0.at();
      xPathLexer0.rightBracket();
      xPathLexer0.pipe();
      xPathLexer0.consume();
      xPathLexer0.dollar();
      xPathLexer0.notEquals();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.and();
      xPathLexer0.operatorName();
      xPathLexer0.dollar();
      xPathLexer0.operatorName();
      xPathLexer0.identifier();
      xPathLexer0.relationalOperator();
      xPathLexer0.not();
      xPathLexer0.dots();
      xPathLexer0.minus();
      xPathLexer0.at();
      xPathLexer0.literal();
      xPathLexer0.plus();
      xPathLexer0.notEquals();
      xPathLexer0.slashes();
      xPathLexer0.literal();
      xPathLexer0.isIdentifierStartChar('M');
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.dollar();
      xPathLexer0.leftBracket();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=3.681632155157257
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.leftBracket();
      xPathLexer0.star();
      xPathLexer0.mod();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.doubleColon();
      xPathLexer0.rightBracket();
      xPathLexer0.dollar();
      xPathLexer0.or();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.doubleColon();
      xPathLexer0.isIdentifierStartChar('y');
      xPathLexer0.slashes();
      xPathLexer0.leftParen();
      xPathLexer0.getXPath();
      xPathLexer0.and();
      Token token0 = xPathLexer0.rightBracket();
      xPathLexer0.dollar();
      xPathLexer0.consume();
      xPathLexer0.comma();
      xPathLexer0.plus();
      xPathLexer0.leftBracket();
      xPathLexer0.literal();
      xPathLexer0.not();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.8237961248372492
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|'+sXzKuW`|r@k<7?c");
      xPathLexer0.dots();
      xPathLexer0.leftParen();
      xPathLexer0.relationalOperator();
      xPathLexer0.relationalOperator();
      xPathLexer0.and();
      xPathLexer0.and();
      xPathLexer0.operatorName();
      xPathLexer0.plus();
      xPathLexer0.minus();
      xPathLexer0.plus();
      xPathLexer0.plus();
      xPathLexer0.pipe();
      xPathLexer0.comma();
      xPathLexer0.nextToken();
      xPathLexer0.colon();
      xPathLexer0.rightBracket();
      xPathLexer0.operatorName();
      xPathLexer0.getXPath();
      xPathLexer0.plus();
      xPathLexer0.equals();
      xPathLexer0.or();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-3099));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.628705426992126
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.div();
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      
      xPathLexer0.doubleColon();
      xPathLexer0.consume();
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(19, token1.getTokenType());
      
      Token token2 = xPathLexer0.pipe();
      assertEquals(17, token2.getTokenType());
      
      xPathLexer0.div();
      Token token3 = xPathLexer0.number();
      assertEquals(30, token3.getTokenType());
      
      xPathLexer0.operatorName();
      Token token4 = xPathLexer0.rightBracket();
      assertEquals(4, token4.getTokenType());
      
      xPathLexer0.getXPath();
      Token token5 = xPathLexer0.comma();
      assertEquals(32, token5.getTokenType());
      
      xPathLexer0.consume();
      Token token6 = xPathLexer0.rightParen();
      assertEquals(2, token6.getTokenType());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.6161339775353876
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      XPathLexer xPathLexer1 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(3, token0.getTokenType());
      assertEquals("[", token0.getTokenText());
      
      Token token1 = xPathLexer1.number();
      assertEquals(30, token1.getTokenType());
      
      Token token2 = xPathLexer1.star();
      assertEquals("[", token2.getTokenText());
      assertEquals(20, token2.getTokenType());
      
      xPathLexer1.or();
      xPathLexer0.or();
      Token token3 = xPathLexer1.nextToken();
      assertEquals("(", token3.getTokenText());
      assertEquals(1, token3.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("NN*L.~lj11PF*RU");
      Token token4 = xPathLexer2.rightParen();
      assertEquals(2, token4.getTokenType());
      assertEquals("N", token4.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("[ (");
      xPathLexer3.relationalOperator();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token5 = xPathLexer2.at();
      assertEquals(16, token5.getTokenType());
      assertEquals("N", token5.getTokenText());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.5755557724932963
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.not();
      xPathLexer0.pipe();
      xPathLexer0.star();
      xPathLexer0.or();
      xPathLexer0.rightParen();
      xPathLexer0.pipe();
      xPathLexer0.pipe();
      xPathLexer0.slashes();
      xPathLexer0.mod();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.not();
      xPathLexer0.at();
      xPathLexer0.nextToken();
      xPathLexer0.hasMoreChars();
      xPathLexer0.doubleColon();
      xPathLexer0.dots();
      xPathLexer0.colon();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=3.305682427744718
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.identifier();
      xPathLexer0.leftParen();
      xPathLexer0.operatorName();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(3, token0.getTokenType());
      
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      
      xPathLexer0.doubleColon();
      xPathLexer0.operatorName();
      xPathLexer0.consume();
      xPathLexer0.comma();
      xPathLexer0.mod();
      xPathLexer0.doubleColon();
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertNotNull(token2);
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.number();
      assertEquals(30, token3.getTokenType());
      
      xPathLexer0.consume(109);
      xPathLexer0.rightBracket();
      Token token4 = xPathLexer0.literal();
      assertNull(token4);
      
      Token token5 = xPathLexer0.slashes();
      assertEquals(11, token5.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token6 = xPathLexer0.rightBracket();
      assertEquals(4, token6.getTokenType());
      
      char char0 = xPathLexer0.LA(2591);
      assertEquals('\uFFFF', char0);
      
      xPathLexer0.leftParen();
      Token token7 = xPathLexer0.dollar();
      assertEquals(26, token7.getTokenType());
      
      xPathLexer0.leftParen();
      Token token8 = xPathLexer0.not();
      assertEquals(23, token8.getTokenType());
      
      Token token9 = xPathLexer0.equals();
      assertEquals(21, token9.getTokenType());
      
      Token token10 = xPathLexer0.comma();
      assertEquals(32, token10.getTokenType());
      
      xPathLexer0.consume();
      xPathLexer0.or();
      Token token11 = xPathLexer0.doubleColon();
      assertEquals(19, token11.getTokenType());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.885700150847151
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.rightBracket();
      xPathLexer0.equals();
      xPathLexer0.and();
      xPathLexer0.consume(0);
      Token token0 = xPathLexer0.at();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.696310840642334
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      
      Token token1 = xPathLexer0.plus();
      assertEquals(5, token1.getTokenType());
      
      xPathLexer0.dots();
      xPathLexer0.relationalOperator();
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.7713601626364432
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1Seunz<#`8 '");
      Token token0 = xPathLexer0.colon();
      assertEquals(18, token0.getTokenType());
      assertEquals("1", token0.getTokenText());
      
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      xPathLexer0.mod();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("Seunz", token2.getTokenText());
      
      Token token3 = xPathLexer0.rightParen();
      assertEquals(2, token3.getTokenType());
      assertEquals("<", token3.getTokenText());
      
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.notEquals();
      Token token4 = xPathLexer1.dollar();
      assertEquals(26, token4.getTokenType());
      
      Token token5 = xPathLexer0.at();
      assertEquals("#", token5.getTokenText());
      assertEquals(16, token5.getTokenType());
      
      Token token6 = xPathLexer1.notEquals();
      assertEquals(22, token6.getTokenType());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=3.6092942324489696
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.identifier();
      xPathLexer0.leftParen();
      xPathLexer0.operatorName();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(3, token0.getTokenType());
      
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      
      xPathLexer0.doubleColon();
      xPathLexer0.operatorName();
      xPathLexer0.consume();
      xPathLexer0.comma();
      xPathLexer0.mod();
      xPathLexer0.doubleColon();
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertNotNull(token2);
      assertEquals(15, token2.getTokenType());
      
      xPathLexer0.literal();
      Token token3 = xPathLexer0.slashes();
      assertEquals(11, token3.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token4 = xPathLexer0.rightBracket();
      assertEquals(4, token4.getTokenType());
      
      Token token5 = xPathLexer0.leftParen();
      assertEquals(1, token5.getTokenType());
      
      Token token6 = xPathLexer0.dollar();
      assertEquals(26, token6.getTokenType());
      
      Token token7 = xPathLexer0.not();
      assertEquals(23, token7.getTokenType());
      
      Token token8 = xPathLexer0.equals();
      assertEquals(21, token8.getTokenType());
      
      Token token9 = xPathLexer0.comma();
      assertEquals(32, token9.getTokenType());
      
      xPathLexer0.consume();
      xPathLexer0.or();
      Token token10 = xPathLexer0.doubleColon();
      assertEquals(19, token10.getTokenType());
      
      Token token11 = xPathLexer0.minus();
      assertEquals(6, token11.getTokenType());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.4640056806567496
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|'+sXzKuW`|r@k<7?c");
      Token token0 = xPathLexer0.dots();
      assertEquals("|", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftParen();
      assertEquals("'", token1.getTokenText());
      assertEquals(1, token1.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token2 = xPathLexer0.equals();
      assertEquals("+", token2.getTokenText());
      assertEquals(21, token2.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.and();
      xPathLexer0.operatorName();
      xPathLexer0.plus();
      Token token3 = xPathLexer0.minus();
      assertEquals("X", token3.getTokenText());
      assertEquals(6, token3.getTokenType());
      
      xPathLexer0.plus();
      xPathLexer0.plus();
      XPathLexer xPathLexer1 = new XPathLexer("|'+sXzKuW`|r@k<7?c");
      Token token4 = xPathLexer1.nextToken();
      assertEquals(17, token4.getTokenType());
      assertEquals("|", token4.getTokenText());
      
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token5 = xPathLexer0.at();
      assertEquals(16, token5.getTokenType());
      assertEquals("", token5.getTokenText());
      
      Token token6 = xPathLexer0.plus();
      assertEquals(5, token6.getTokenType());
      assertEquals("u", token6.getTokenText());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=3.352755011355045
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.slashes();
      Token token1 = xPathLexer0.comma();
      assertEquals(32, token1.getTokenType());
      
      Token token2 = xPathLexer0.dollar();
      assertEquals(26, token2.getTokenType());
      
      Token token3 = xPathLexer0.at();
      assertEquals(16, token3.getTokenType());
      
      xPathLexer0.and();
      int int0 = xPathLexer0.currentPosition();
      assertEquals(5, int0);
      
      xPathLexer0.or();
      xPathLexer0.div();
      Token token4 = xPathLexer0.literal();
      assertNull(token4);
      
      Token token5 = xPathLexer0.slashes();
      assertEquals(11, token5.getTokenType());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.5935957350900978
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1Seunz<#`8 '");
      Token token0 = xPathLexer0.colon();
      assertEquals(18, token0.getTokenType());
      assertEquals("1", token0.getTokenText());
      
      Token token1 = xPathLexer0.pipe();
      assertEquals("S", token1.getTokenText());
      assertEquals(17, token1.getTokenType());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals("e", token2.getTokenText());
      assertEquals(11, token2.getTokenType());
      
      xPathLexer0.mod();
      Token token3 = xPathLexer0.nextToken();
      assertEquals("unz", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer0.rightParen();
      assertEquals("<", token4.getTokenText());
      assertEquals(2, token4.getTokenType());
      
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token5 = xPathLexer0.at();
      assertEquals("#", token5.getTokenText());
      assertEquals(16, token5.getTokenType());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.6588184240534898
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals((-1), token1.getTokenType());
      
      Token token2 = xPathLexer0.star();
      assertEquals(20, token2.getTokenType());
      
      xPathLexer0.pipe();
      Token token3 = xPathLexer0.pipe();
      assertEquals(17, token3.getTokenType());
      
      Token token4 = xPathLexer0.slashes();
      assertEquals(11, token4.getTokenType());
      
      xPathLexer0.mod();
      Token token5 = xPathLexer0.identifierOrOperatorName();
      assertNull(token5);
      
      Token token6 = xPathLexer0.notEquals();
      assertEquals(22, token6.getTokenType());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.6872110429752771
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals((-1), token1.getTokenType());
      
      Token token2 = xPathLexer0.star();
      assertEquals(20, token2.getTokenType());
      
      xPathLexer0.pipe();
      Token token3 = xPathLexer0.pipe();
      assertEquals(17, token3.getTokenType());
      
      Token token4 = xPathLexer0.slashes();
      assertEquals(11, token4.getTokenType());
      
      xPathLexer0.mod();
      Token token5 = xPathLexer0.identifierOrOperatorName();
      assertNull(token5);
      
      Token token6 = xPathLexer0.identifier();
      assertEquals(15, token6.getTokenType());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=3.661664171360863
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("y|Gu6@i1F#`Ph@>Bkg");
      Token token0 = xPathLexer0.rightBracket();
      token0.toString();
      Token token1 = xPathLexer0.dots();
      token1.toString();
      token1.toString();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.setPreviousToken(token1);
      xPathLexer0.notEquals();
      xPathLexer0.colon();
      xPathLexer0.star();
      xPathLexer0.notEquals();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.operatorName();
      xPathLexer0.literal();
      xPathLexer0.notEquals();
      xPathLexer0.leftParen();
      XPathLexer xPathLexer2 = new XPathLexer("@");
      xPathLexer2.plus();
      xPathLexer2.at();
      xPathLexer2.relationalOperator();
      xPathLexer0.notEquals();
      xPathLexer0.notEquals();
      xPathLexer2.and();
      xPathLexer2.and();
      xPathLexer2.not();
      XPathLexer xPathLexer3 = new XPathLexer("");
      xPathLexer1.dollar();
      Token token2 = xPathLexer3.literal();
      assertNull(token2);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.609111982934648
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals((-1), token1.getTokenType());
      
      Token token2 = xPathLexer0.star();
      assertEquals(20, token2.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.nextToken();
      Token token3 = xPathLexer0.rightParen();
      assertEquals(2, token3.getTokenType());
      
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertNull(token4);
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token5 = xPathLexer1.at();
      assertEquals(16, token5.getTokenType());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=3.366803220858606
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token0 = xPathLexer1.not();
      assertEquals(23, token0.getTokenType());
      
      Token token1 = xPathLexer0.star();
      assertEquals(20, token1.getTokenType());
      
      xPathLexer0.pipe();
      Token token2 = xPathLexer0.pipe();
      assertEquals(17, token2.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("i%m!Orb{%9|S)#.>#[=");
      Token token3 = xPathLexer2.slashes();
      assertEquals("i", token3.getTokenText());
      assertEquals(11, token3.getTokenType());
      
      xPathLexer2.mod();
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token4.getTokenType());
      assertNotNull(token4);
      
      Token token5 = xPathLexer1.notEquals();
      assertEquals(22, token5.getTokenType());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.6879783400147286
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|'+sXzKuW`|r@k<7?c");
      Token token0 = xPathLexer0.dots();
      assertEquals("|", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftParen();
      assertEquals("'", token1.getTokenText());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.relationalOperator();
      xPathLexer0.and();
      xPathLexer0.and();
      xPathLexer0.operatorName();
      xPathLexer0.plus();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("sXzKuW", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      xPathLexer0.plus();
      Token token3 = xPathLexer0.plus();
      assertEquals("|", token3.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token4 = xPathLexer1.nextToken();
      assertEquals((-1), token4.getTokenType());
      
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token5 = xPathLexer0.at();
      assertEquals("r", token5.getTokenText());
      assertEquals(16, token5.getTokenType());
      
      Token token6 = xPathLexer2.plus();
      assertEquals(5, token6.getTokenType());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.3998441778370108
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      XPathLexer xPathLexer1 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(3, token0.getTokenType());
      assertEquals("[", token0.getTokenText());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(" ", token1.getTokenText());
      
      Token token2 = xPathLexer1.star();
      assertEquals("[", token2.getTokenText());
      assertEquals(20, token2.getTokenType());
      
      xPathLexer1.or();
      xPathLexer0.or();
      Token token3 = xPathLexer1.nextToken();
      assertEquals(1, token3.getTokenType());
      assertEquals("(", token3.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token4 = xPathLexer2.rightParen();
      assertEquals(2, token4.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("[ (");
      xPathLexer3.relationalOperator();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token5 = xPathLexer2.at();
      assertEquals(16, token5.getTokenType());
  }
}
