/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 30 07:35:54 GMT 2020
 */

package org.firebirdsql.jdbc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import java.util.List;
import java.util.concurrent.RejectedExecutionHandler;
import java.util.concurrent.ScheduledThreadPoolExecutor;
import java.util.concurrent.ThreadFactory;
import java.util.concurrent.ThreadPoolExecutor;
import java.util.concurrent.TimeUnit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.lang.MockThread;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.firebirdsql.gds.DatabaseParameterBuffer;
import org.firebirdsql.gds.GDS;
import org.firebirdsql.gds.IscDbHandle;
import org.firebirdsql.gds.XSQLVAR;
import org.firebirdsql.gds.impl.GDSHelper;
import org.firebirdsql.gds.impl.GDSType;
import org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp;
import org.firebirdsql.gds.impl.jni.LocalGDSImpl;
import org.firebirdsql.gds.impl.jni.isc_blob_handle_impl;
import org.firebirdsql.gds.impl.jni.isc_db_handle_impl;
import org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl;
import org.firebirdsql.gds.impl.wire.isc_tr_handle_impl;
import org.firebirdsql.jca.FBManagedConnection;
import org.firebirdsql.jdbc.FBCachedFetcher;
import org.firebirdsql.jdbc.FBConnection;
import org.firebirdsql.jdbc.FBObjectListener;
import org.firebirdsql.jdbc.FBResultSet;
import org.firebirdsql.jdbc.FBSQLException;
import org.firebirdsql.jdbc.InternalTransactionCoordinator;
import org.firebirdsql.jdbc.field.FBBlobField;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FBCachedFetcher_ESTest extends FBCachedFetcher_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.1506161048031838
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      linkedList1.add((byte[][]) null);
      linkedList0.add((byte[][]) null);
      linkedList1.add((byte[][]) null);
      linkedList1.pop();
      linkedList0.offer((byte[][]) null);
      FBResultSet fBResultSet1 = new FBResultSet(xSQLVARArray0, linkedList1);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.next();
      Class<FBBlobField> class0 = FBBlobField.class;
      fBResultSet0.isWrapperFor(class0);
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.previous();
      fBCachedFetcher0.relative((-1));
      // Undeclared exception!
      try { 
        linkedList1.add((-1), (byte[][]) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -1, Size: 1
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.0161537172613797
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      linkedList0.offer((byte[][]) null);
      linkedList0.offer((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.afterLast();
      fBCachedFetcher0.previous();
      FBManagedConnection fBManagedConnection0 = null;
      FBConnection fBConnection0 = null;
      try {
        fBConnection0 = new FBConnection((FBManagedConnection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.AbstractConnection", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.0161537172613797
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      linkedList0.offer((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.afterLast();
      fBCachedFetcher0.previous();
      FBConnection fBConnection0 = null;
      try {
        fBConnection0 = new FBConnection((FBManagedConnection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.AbstractConnection", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.7201934592198251
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp3 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp4 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp5 = new DatabaseParameterBufferImp();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[1][0];
      byte[] byteArray1 = new byte[8];
      byteArray1[0] = (byte) (-104);
      byteArray1[1] = (byte) (-127);
      byteArray1[2] = (byte)0;
      byteArray1[3] = (byte) (-108);
      byteArray1[4] = (byte)25;
      byteArray1[5] = (byte)92;
      byteArray1[6] = (byte) (-1);
      byteArray1[7] = (byte)125;
      byteArray0[0] = byteArray1;
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.isLast();
      fBCachedFetcher0.getFetchSize();
      // Undeclared exception!
      try { 
        fBCachedFetcher0.previous();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.6843729712135975
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      byte[][] byteArray0 = new byte[1][6];
      byte[] byteArray1 = new byte[0];
      byteArray0[0] = byteArray1;
      linkedList0.add(byteArray0);
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      linkedList0.offer((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.next();
      fBCachedFetcher0.deleteRow();
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher1.next();
      fBCachedFetcher0.deleteRow();
      boolean boolean0 = fBCachedFetcher0.isBeforeFirst();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.139085894695714
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      linkedList0.offer((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.next();
      fBCachedFetcher0.deleteRow();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher1.isBeforeFirst();
      fBCachedFetcher1.getFetchSize();
      fBCachedFetcher1.isLast();
      // Undeclared exception!
      try { 
        fBCachedFetcher1.deleteRow();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.4848413956513
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[0][8];
      linkedList0.add(byteArray0);
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      linkedList0.offer((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.next();
      fBCachedFetcher0.deleteRow();
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher1.previous();
      fBCachedFetcher0.next();
      GDSType.getType("rolled back");
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      isc_stmt_handle_impl0.registerTransaction(isc_tr_handle_impl0);
      FBCachedFetcher fBCachedFetcher2 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher1.setFetchSize((-918));
      fBCachedFetcher2.afterLast();
      fBCachedFetcher0.isLast();
      fBCachedFetcher0.insertRow((byte[][]) null);
      int int0 = fBCachedFetcher1.getRowNum();
      assertEquals((-918), fBCachedFetcher1.getFetchSize());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      ThreadFactory threadFactory0 = mock(ThreadFactory.class, new ViolatedAssumptionAnswer());
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(47, threadFactory0);
      ThreadFactory threadFactory1 = mock(ThreadFactory.class, new ViolatedAssumptionAnswer());
      scheduledThreadPoolExecutor0.setThreadFactory(threadFactory1);
      scheduledThreadPoolExecutor0.setMaximumPoolSize(47);
      ThreadPoolExecutor.DiscardOldestPolicy threadPoolExecutor_DiscardOldestPolicy0 = new ThreadPoolExecutor.DiscardOldestPolicy();
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor1 = new ScheduledThreadPoolExecutor(47, threadPoolExecutor_DiscardOldestPolicy0);
      scheduledThreadPoolExecutor1.isTerminated();
      MockThread mockThread0 = new MockThread();
      scheduledThreadPoolExecutor0.getRejectedExecutionHandler();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      boolean boolean0 = fBCachedFetcher0.isLast();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.8711604142318066
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      linkedList1.add((byte[][]) null);
      linkedList0.add((byte[][]) null);
      linkedList1.pop();
      linkedList0.offer((byte[][]) null);
      FBResultSet fBResultSet1 = new FBResultSet(xSQLVARArray0, linkedList1);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.next();
      Class<FBBlobField> class0 = FBBlobField.class;
      fBResultSet0.isWrapperFor(class0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.insertRow((byte[][]) null);
      linkedList0.add((byte[][]) null);
      fBCachedFetcher0.next();
      GDSHelper gDSHelper0 = null;
      String string0 = "|Zx%t6rI%=CiJ*[s";
      InternalTransactionCoordinator internalTransactionCoordinator0 = new InternalTransactionCoordinator();
      InternalTransactionCoordinator.MetaDataTransactionCoordinator internalTransactionCoordinator_MetaDataTransactionCoordinator0 = null;
      try {
        internalTransactionCoordinator_MetaDataTransactionCoordinator0 = new InternalTransactionCoordinator.MetaDataTransactionCoordinator(internalTransactionCoordinator0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.InternalTransactionCoordinator$MetaDataTransactionCoordinator", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.9521156165403364
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      byte[][] byteArray0 = new byte[1][6];
      byte[] byteArray1 = new byte[0];
      byteArray0[0] = byteArray1;
      linkedList0.add(byteArray0);
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      linkedList0.offer((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.next();
      fBCachedFetcher0.deleteRow();
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher1.next();
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.isLast();
      int int0 = fBCachedFetcher1.getRowNum();
      assertFalse(fBCachedFetcher1.isBeforeFirst());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.026229622995291
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      linkedList0.offer((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.next();
      fBCachedFetcher0.deleteRow();
      fBResultSet0.closeFields();
      fBCachedFetcher0.isFirst();
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      assertTrue(fBCachedFetcher0.isFirst());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.4708084763221112
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      ThreadFactory threadFactory0 = mock(ThreadFactory.class, new ViolatedAssumptionAnswer());
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(47, threadFactory0);
      ThreadGroup threadGroup0 = mock(ThreadGroup.class, new ViolatedAssumptionAnswer());
      ThreadFactory threadFactory1 = mock(ThreadFactory.class, new ViolatedAssumptionAnswer());
      scheduledThreadPoolExecutor0.setThreadFactory(threadFactory1);
      scheduledThreadPoolExecutor0.setMaximumPoolSize(47);
      MockThread mockThread0 = new MockThread();
      scheduledThreadPoolExecutor0.getRejectedExecutionHandler();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      MockThread mockThread1 = new MockThread(threadGroup0, "");
      ThreadGroup threadGroup1 = mock(ThreadGroup.class, new ViolatedAssumptionAnswer());
      MockThread mockThread2 = new MockThread(threadGroup1, mockThread1, "@+jMos'", 0L);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList1, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.insertRow((byte[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.4142790651247086
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[6][6];
      byte[] byteArray1 = new byte[9];
      byteArray1[0] = (byte)0;
      byteArray1[1] = (byte)17;
      byteArray1[2] = (byte)111;
      linkedList0.add(byteArray0);
      byteArray1[4] = (byte) (-103);
      byteArray1[5] = (byte)0;
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.absolute((-3646));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.6773975271522592
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      linkedList0.offer((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      ThreadFactory threadFactory0 = mock(ThreadFactory.class, new ViolatedAssumptionAnswer());
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(258, threadFactory0);
      ThreadFactory threadFactory1 = mock(ThreadFactory.class, new ViolatedAssumptionAnswer());
      doReturn((Thread) null).when(threadFactory1).newThread(any(java.lang.Runnable.class));
      scheduledThreadPoolExecutor0.setThreadFactory(threadFactory1);
      MockThread mockThread0 = new MockThread("");
      ThreadPoolExecutor.DiscardOldestPolicy threadPoolExecutor_DiscardOldestPolicy0 = new ThreadPoolExecutor.DiscardOldestPolicy();
      ThreadGroup threadGroup0 = mock(ThreadGroup.class, new ViolatedAssumptionAnswer());
      MockThread mockThread1 = new MockThread(threadGroup0, mockThread0, "", (-1472L));
      TimeUnit timeUnit0 = TimeUnit.SECONDS;
      scheduledThreadPoolExecutor0.schedule((Runnable) mockThread1, (long) 258, timeUnit0);
      linkedList0.removeFirstOccurrence(threadPoolExecutor_DiscardOldestPolicy0);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList2, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.first();
      assertFalse(fBCachedFetcher0.isBeforeFirst());
      
      fBCachedFetcher1.first();
      fBCachedFetcher1.relative(258);
      boolean boolean0 = fBCachedFetcher0.absolute((-549));
      assertFalse(boolean0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.923065784324152
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      byte[][] byteArray0 = new byte[1][6];
      byte[] byteArray1 = new byte[0];
      byteArray0[0] = byteArray1;
      linkedList0.add(byteArray0);
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      linkedList0.offer((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.next();
      fBCachedFetcher0.deleteRow();
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher1.next();
      fBCachedFetcher1.close();
      fBCachedFetcher0.deleteRow();
      assertFalse(fBCachedFetcher0.isBeforeFirst());
      
      fBCachedFetcher1.updateRow((byte[][]) null);
      assertFalse(fBCachedFetcher1.isBeforeFirst());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.6731183626432506
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.getRsr_rdb();
      isc_stmt_handle_impl0.removeRows();
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener0 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      GDSHelper gDSHelper0 = new GDSHelper((GDS) null, databaseParameterBufferImp0, (IscDbHandle) null, gDSHelper_GDSHelperErrorListener0);
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener1 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      GDSHelper gDSHelper1 = new GDSHelper((GDS) null, databaseParameterBufferImp0, (IscDbHandle) null, gDSHelper_GDSHelperErrorListener1);
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[3][4];
      linkedList0.add(byteArray0);
      byteArray0[0] = gDSHelper0.BLOB_LENGTH_REQUEST;
      byteArray0[1] = gDSHelper1.BLOB_LENGTH_REQUEST;
      byteArray0[2] = gDSHelper1.BLOB_LENGTH_REQUEST;
      linkedList0.offer(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.afterLast();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      ThreadFactory threadFactory0 = mock(ThreadFactory.class, new ViolatedAssumptionAnswer());
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(47, threadFactory0);
      ThreadFactory threadFactory1 = mock(ThreadFactory.class, new ViolatedAssumptionAnswer());
      doReturn((Thread) null).when(threadFactory1).newThread(any(java.lang.Runnable.class));
      scheduledThreadPoolExecutor0.setThreadFactory(threadFactory1);
      MockThread mockThread0 = new MockThread("");
      scheduledThreadPoolExecutor0.getRejectedExecutionHandler();
      ThreadGroup threadGroup0 = mock(ThreadGroup.class, new ViolatedAssumptionAnswer());
      MockThread mockThread1 = new MockThread(threadGroup0, "5[,tSiX");
      ThreadGroup threadGroup1 = mock(ThreadGroup.class, new ViolatedAssumptionAnswer());
      MockThread mockThread2 = new MockThread(threadGroup1, (Runnable) null, "", 3489L);
      MockThread mockThread3 = new MockThread("5[,tSiX");
      TimeUnit timeUnit0 = TimeUnit.MINUTES;
      ThreadGroup threadGroup2 = mock(ThreadGroup.class, new ViolatedAssumptionAnswer());
      MockThread mockThread4 = new MockThread(threadGroup2, mockThread2);
      scheduledThreadPoolExecutor0.schedule((Runnable) mockThread4, (-2901L), timeUnit0);
      FBCachedFetcher fBCachedFetcher0 = null;
      try {
        fBCachedFetcher0 = new FBCachedFetcher((List<byte[][]>) null, (FBObjectListener.FetcherListener) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.0161537172613797
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      byte[][] byteArray0 = new byte[1][6];
      byte[] byteArray1 = new byte[0];
      byteArray0[0] = byteArray1;
      linkedList0.add(byteArray0);
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      linkedList0.offer((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.next();
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.last();
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.updateRow(byteArray0);
      assertTrue(fBCachedFetcher0.isLast());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.559581156259877
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp0.removeExtensionParams();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[8][2];
      byte[] byteArray1 = new byte[0];
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[3];
      byteArray2[0] = (byte)0;
      byteArray2[1] = (byte)105;
      byteArray2[2] = (byte)103;
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[8];
      byteArray3[0] = (byte)0;
      byteArray3[1] = (byte)103;
      byteArray3[2] = (byte)97;
      byteArray3[3] = (byte)105;
      byteArray3[4] = (byte)0;
      byteArray3[5] = (byte)103;
      byteArray3[6] = (byte)103;
      byteArray3[7] = (byte)105;
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[1];
      byteArray4[0] = (byte)105;
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[5];
      byteArray5[0] = (byte)97;
      byteArray5[1] = (byte)97;
      byteArray5[2] = (byte)103;
      byteArray5[3] = (byte)97;
      byteArray5[4] = (byte) (-82);
      byteArray0[4] = byteArray5;
      byte[] byteArray6 = new byte[9];
      byteArray6[0] = (byte)103;
      byteArray6[1] = (byte)103;
      byteArray6[2] = (byte)97;
      byteArray6[3] = (byte) (-82);
      byteArray6[4] = (byte)105;
      byteArray6[5] = (byte)0;
      byteArray6[6] = (byte)105;
      byteArray6[7] = (byte) (-82);
      byteArray6[8] = (byte)103;
      byteArray0[5] = byteArray6;
      byte[] byteArray7 = new byte[0];
      byteArray0[6] = byteArray7;
      byte[] byteArray8 = new byte[3];
      byteArray8[0] = (byte)103;
      byteArray8[1] = (byte)105;
      byteArray8[2] = (byte)0;
      byteArray0[7] = byteArray8;
      linkedList0.add(byteArray0);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      assertTrue(fBCachedFetcher0.isBeforeFirst());
      
      fBCachedFetcher0.updateRow((byte[][]) null);
      assertFalse(fBCachedFetcher0.isAfterLast());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.731535408262282
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      linkedList0.offer((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.last();
      fBCachedFetcher0.previous();
      FBManagedConnection fBManagedConnection0 = null;
      FBConnection fBConnection0 = null;
      try {
        fBConnection0 = new FBConnection((FBManagedConnection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.AbstractConnection", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.026229622995291
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      linkedList1.add((byte[][]) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      linkedList1.pop();
      linkedList0.offer((byte[][]) null);
      FBResultSet fBResultSet1 = new FBResultSet(xSQLVARArray0, linkedList1);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.next();
      fBCachedFetcher0.setFetchSize(68);
      Class<FBBlobField> class0 = FBBlobField.class;
      fBResultSet0.isWrapperFor(class0);
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.insertRow((byte[][]) null);
      // Undeclared exception!
      try { 
        linkedList1.add((-1), (byte[][]) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -1, Size: 0
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.8848713335781606
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      byte[][] byteArray0 = new byte[1][6];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBResultSet fBResultSet1 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBResultSet1.closeFields();
      fBCachedFetcher0.isFirst();
      fBCachedFetcher0.insertRow(byteArray0);
      fBCachedFetcher0.deleteRow();
      assertFalse(fBCachedFetcher0.isLast());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.9792045174343245
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      linkedList0.offer((byte[][]) null);
      FBResultSet fBResultSet1 = new FBResultSet(fBResultSet0.xsqlvars, linkedList0);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      linkedList1.add((byte[][]) null);
      linkedList0.add((byte[][]) null);
      linkedList1.pop();
      linkedList0.offer((byte[][]) null);
      FBResultSet fBResultSet2 = new FBResultSet(xSQLVARArray0, linkedList1);
      linkedList1.offer((byte[][]) null);
      FBResultSet fBResultSet3 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList1, fBResultSet2);
      fBCachedFetcher0.next();
      fBCachedFetcher0.deleteRow();
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList1, fBResultSet2);
      FBCachedFetcher fBCachedFetcher2 = new FBCachedFetcher(linkedList1, fBResultSet0);
      fBCachedFetcher2.insertRow((byte[][]) null);
      fBCachedFetcher1.relative((-2369));
      fBCachedFetcher1.relative(853);
      assertTrue(fBCachedFetcher1.isAfterLast());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp3 = new DatabaseParameterBufferImp();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      DatabaseParameterBufferImp databaseParameterBufferImp4 = new DatabaseParameterBufferImp();
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener0 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      GDSHelper gDSHelper0 = new GDSHelper((GDS) null, databaseParameterBufferImp4, isc_db_handle_impl0, gDSHelper_GDSHelperErrorListener0);
      DatabaseParameterBufferImp databaseParameterBufferImp5 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp6 = new DatabaseParameterBufferImp();
      GDSHelper gDSHelper1 = new GDSHelper((GDS) null, databaseParameterBufferImp2, isc_db_handle_impl0, (GDSHelper.GDSHelperErrorListener) null);
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      GDSHelper gDSHelper2 = new GDSHelper((GDS) null, databaseParameterBufferImp0, isc_db_handle_impl0, (GDSHelper.GDSHelperErrorListener) null);
      byte[][] byteArray0 = new byte[8][9];
      byteArray0[0] = gDSHelper0.BLOB_LENGTH_REQUEST;
      byte[] byteArray1 = new byte[2];
      byteArray1[0] = (byte)50;
      byteArray1[1] = (byte)125;
      byteArray0[1] = byteArray1;
      byteArray0[2] = gDSHelper1.BLOB_LENGTH_REQUEST;
      byteArray0[3] = gDSHelper1.BLOB_LENGTH_REQUEST;
      byteArray0[4] = gDSHelper0.BLOB_LENGTH_REQUEST;
      byteArray0[5] = gDSHelper2.BLOB_LENGTH_REQUEST;
      byteArray0[6] = gDSHelper1.BLOB_LENGTH_REQUEST;
      byteArray0[7] = gDSHelper1.BLOB_LENGTH_REQUEST;
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.deleteRow();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.5247073930301436
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[6][6];
      byte[] byteArray1 = new byte[9];
      byteArray1[0] = (byte)0;
      byteArray1[1] = (byte)17;
      byteArray1[2] = (byte)111;
      linkedList0.add(byteArray0);
      byteArray1[3] = (byte)127;
      byteArray1[4] = (byte) (-103);
      byteArray1[5] = (byte)0;
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.last();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.5810937501718236
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      linkedList0.offer((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.next();
      assertEquals(1, fBCachedFetcher0.getRowNum());
      
      fBCachedFetcher0.deleteRow();
      boolean boolean0 = fBCachedFetcher0.isAfterLast();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.9795962153613327
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.first();
      fBCachedFetcher0.afterLast();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      fBCachedFetcher0.beforeFirst();
      fBCachedFetcher0.isAfterLast();
      boolean boolean0 = fBCachedFetcher0.isAfterLast();
      boolean boolean1 = fBCachedFetcher0.last();
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.6731183626432506
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      byte[][] byteArray0 = new byte[8][2];
      byte[] byteArray1 = new byte[2];
      byteArray1[0] = (byte)56;
      byteArray1[1] = (byte)0;
      byte[] byteArray2 = new byte[5];
      byteArray1[0] = (byte)0;
      linkedList0.offer(byteArray0);
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher1.beforeFirst();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.287313879677962
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBResultSet fBResultSet1 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet1);
      fBCachedFetcher0.isFirst();
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.previous();
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher1.beforeFirst();
      LocalGDSImpl localGDSImpl0 = null;
      try {
        localGDSImpl0 = new LocalGDSImpl();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.2342678660790767
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBResultSet fBResultSet1 = new FBResultSet(xSQLVARArray0, linkedList0);
      fBResultSet1.closeFields();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.relative((-1));
      boolean boolean0 = fBCachedFetcher0.absolute(2004);
      assertFalse(boolean0);
      assertTrue(fBCachedFetcher0.isLast());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.4941751382893083
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      linkedList1.offer((byte[][]) null);
      FBResultSet fBResultSet1 = new FBResultSet(xSQLVARArray0, linkedList1);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.updateRow((byte[][]) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.next();
      boolean boolean0 = fBCachedFetcher0.next();
      assertFalse(boolean0);
      assertEquals(0, fBCachedFetcher0.getRowNum());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.5247073930301436
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      byte[][] byteArray0 = new byte[1][6];
      byte[] byteArray1 = new byte[0];
      byteArray0[0] = byteArray1;
      linkedList0.add(byteArray0);
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      linkedList0.offer((byte[][]) null);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>(linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList1, fBResultSet0);
      boolean boolean0 = fBCachedFetcher0.first();
      assertEquals(1, fBCachedFetcher0.getRowNum());
      assertEquals(0, fBResultSet0.getRow());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.5247073930301436
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp1.removeExtensionParams();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.getRsr_rdb();
      DatabaseParameterBufferImp databaseParameterBufferImp3 = new DatabaseParameterBufferImp();
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener0 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      GDSHelper gDSHelper0 = new GDSHelper((GDS) null, databaseParameterBufferImp3, (IscDbHandle) null, gDSHelper_GDSHelperErrorListener0);
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener1 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      gDSHelper0.getUserName();
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener2 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      GDSHelper gDSHelper1 = new GDSHelper((GDS) null, databaseParameterBufferImp0, (IscDbHandle) null, gDSHelper_GDSHelperErrorListener2);
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener3 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      byte[][] byteArray0 = new byte[9][8];
      byte[] byteArray1 = new byte[1];
      byteArray1[0] = (byte) (-17);
      byteArray0[1] = gDSHelper1.BLOB_LENGTH_REQUEST;
      byte[] byteArray2 = new byte[6];
      byteArray2[0] = (byte) (-17);
      byteArray2[1] = (byte) (-17);
      byteArray2[2] = (byte) (-17);
      byteArray2[3] = (byte) (-17);
      byteArray2[4] = (byte) (-17);
      byteArray2[5] = (byte) (-17);
      byteArray0[2] = byteArray2;
      byteArray0[3] = gDSHelper0.BLOB_LENGTH_REQUEST;
      byteArray0[4] = gDSHelper1.BLOB_LENGTH_REQUEST;
      byteArray0[6] = gDSHelper1.BLOB_LENGTH_REQUEST;
      byteArray0[7] = gDSHelper0.BLOB_LENGTH_REQUEST;
      byteArray0[8] = gDSHelper1.BLOB_LENGTH_REQUEST;
      linkedList0.offerFirst(byteArray0);
      GDSHelper gDSHelper2 = new GDSHelper((GDS) null, databaseParameterBufferImp2, (IscDbHandle) null, gDSHelper_GDSHelperErrorListener3);
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener4 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      GDSHelper gDSHelper3 = new GDSHelper((GDS) null, databaseParameterBufferImp3, (IscDbHandle) null, gDSHelper_GDSHelperErrorListener4);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.relative(2004);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.698782989513801
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      ThreadFactory threadFactory0 = mock(ThreadFactory.class, new ViolatedAssumptionAnswer());
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(47, threadFactory0);
      ThreadGroup threadGroup0 = mock(ThreadGroup.class, new ViolatedAssumptionAnswer());
      ThreadFactory threadFactory1 = mock(ThreadFactory.class, new ViolatedAssumptionAnswer());
      doReturn((Thread) null).when(threadFactory1).newThread(any(java.lang.Runnable.class));
      scheduledThreadPoolExecutor0.setThreadFactory(threadFactory1);
      MockThread mockThread0 = new MockThread("");
      scheduledThreadPoolExecutor0.getRejectedExecutionHandler();
      MockThread mockThread1 = new MockThread(threadGroup0, mockThread0, "tz-U8-Qv42P", 47);
      TimeUnit timeUnit0 = TimeUnit.SECONDS;
      scheduledThreadPoolExecutor0.schedule((Runnable) mockThread1, 0L, timeUnit0);
      linkedList0.removeFirstOccurrence("tz-U8-Qv42P");
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList1, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.first();
      fBCachedFetcher0.first();
      fBCachedFetcher0.relative(47);
      boolean boolean0 = fBCachedFetcher0.absolute((-549));
      assertFalse(boolean0);
      
      int int0 = fBCachedFetcher0.getFetchSize();
      assertEquals(0, int0);
      assertEquals(0, fBCachedFetcher0.getRowNum());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.4735023850806486
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ThreadFactory threadFactory0 = mock(ThreadFactory.class, new ViolatedAssumptionAnswer());
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(47, threadFactory0);
      ThreadFactory threadFactory1 = mock(ThreadFactory.class, new ViolatedAssumptionAnswer());
      doReturn((Thread) null).when(threadFactory1).newThread(any(java.lang.Runnable.class));
      scheduledThreadPoolExecutor0.setThreadFactory(threadFactory1);
      MockThread mockThread0 = new MockThread("");
      RejectedExecutionHandler rejectedExecutionHandler0 = scheduledThreadPoolExecutor0.getRejectedExecutionHandler();
      scheduledThreadPoolExecutor0.prestartAllCoreThreads();
      ThreadGroup threadGroup0 = mock(ThreadGroup.class, new ViolatedAssumptionAnswer());
      Thread thread0 = MockThread.currentThread();
      MockThread mockThread1 = new MockThread(threadGroup0, thread0, "d", 47);
      TimeUnit timeUnit0 = TimeUnit.SECONDS;
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor1 = new ScheduledThreadPoolExecutor(0, rejectedExecutionHandler0);
      scheduledThreadPoolExecutor1.schedule((Runnable) mockThread0, (long) 47, timeUnit0);
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      Object object0 = new Object();
      linkedList0.removeFirstOccurrence(object0);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      assertFalse(fBCachedFetcher0.isBeforeFirst());
      
      fBCachedFetcher0.first();
      fBCachedFetcher0.first();
      fBCachedFetcher0.relative(0);
      boolean boolean0 = fBCachedFetcher0.absolute(3027);
      assertFalse(boolean0);
      assertTrue(fBCachedFetcher0.isLast());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.8675632284814612
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      byte[] byteArray0 = new byte[2];
      byte byte0 = (byte)0;
      try { 
        fBCachedFetcher0.absolute((byte)0);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // You cannot position to the row 0 with absolute() method.
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp0.removeExtensionParams();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.getRsr_rdb();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp1.removeExtensionParams();
      isc_blob_handle_impl isc_blob_handle_impl0 = new isc_blob_handle_impl();
      isc_blob_handle_impl0.getDb();
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener0 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      GDSHelper gDSHelper0 = new GDSHelper((GDS) null, databaseParameterBufferImp1, (IscDbHandle) null, gDSHelper_GDSHelperErrorListener0);
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      gDSHelper0.setCurrentTrHandle(isc_tr_handle_impl0);
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.close();
      FBCachedFetcher fBCachedFetcher1 = null;
      try {
        fBCachedFetcher1 = new FBCachedFetcher(gDSHelper0, (-591), (-2394), isc_stmt_handle_impl0, (FBObjectListener.FetcherListener) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      byte[][] byteArray0 = new byte[9][4];
      byte[] byteArray1 = new byte[2];
      byteArray1[0] = (byte) (-1);
      byteArray1[1] = (byte) (-123);
      byte[] byteArray2 = new byte[2];
      byteArray2[0] = (byte)17;
      byteArray2[1] = (byte) (-1);
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[7];
      byteArray3[0] = (byte) (-30);
      byteArray3[1] = (byte) (-123);
      byteArray3[2] = (byte) (-123);
      byteArray3[3] = (byte) (-123);
      byteArray3[4] = (byte)17;
      byteArray3[5] = (byte) (-123);
      byteArray3[6] = (byte)17;
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[1];
      byteArray4[0] = (byte)17;
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[4];
      byteArray5[0] = (byte) (-123);
      byteArray5[1] = (byte) (-123);
      byteArray5[2] = (byte) (-123);
      byteArray5[3] = (byte) (-123);
      byteArray0[4] = byteArray5;
      byte[] byteArray6 = new byte[6];
      byteArray6[0] = (byte)0;
      byteArray6[1] = (byte) (-1);
      byteArray6[2] = (byte) (-1);
      byteArray6[3] = (byte)17;
      byteArray6[4] = (byte) (-1);
      byteArray6[5] = (byte) (-30);
      byteArray0[5] = byteArray6;
      byte[] byteArray7 = new byte[1];
      byteArray7[0] = (byte) (-1);
      byteArray0[6] = byteArray7;
      byte[] byteArray8 = new byte[0];
      byteArray0[7] = byteArray8;
      byte[] byteArray9 = new byte[0];
      byteArray0[8] = byteArray9;
      linkedList0.add(byteArray0);
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.isEmpty();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      IscDbHandle iscDbHandle0 = isc_tr_handle_impl0.getDbHandle();
      assertNull(iscDbHandle0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.6731183626432506
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBuffer databaseParameterBuffer0 = databaseParameterBufferImp0.removeExtensionParams();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.getRsr_rdb();
      isc_stmt_handle_impl0.removeRows();
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener0 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      GDSHelper gDSHelper0 = new GDSHelper((GDS) null, databaseParameterBuffer0, (IscDbHandle) null, gDSHelper_GDSHelperErrorListener0);
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener1 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      GDSHelper gDSHelper1 = new GDSHelper((GDS) null, databaseParameterBufferImp0, (IscDbHandle) null, gDSHelper_GDSHelperErrorListener1);
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[8][2];
      byteArray0[0] = gDSHelper0.BLOB_LENGTH_REQUEST;
      byteArray0[1] = gDSHelper1.BLOB_LENGTH_REQUEST;
      byteArray0[2] = gDSHelper1.BLOB_LENGTH_REQUEST;
      byteArray0[3] = gDSHelper0.BLOB_LENGTH_REQUEST;
      byteArray0[4] = gDSHelper0.BLOB_LENGTH_REQUEST;
      byteArray0[5] = gDSHelper1.BLOB_LENGTH_REQUEST;
      byteArray0[6] = gDSHelper1.BLOB_LENGTH_REQUEST;
      byteArray0[7] = gDSHelper1.BLOB_LENGTH_REQUEST;
      linkedList0.offer(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.afterLast();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.5247073930301436
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp3 = (DatabaseParameterBufferImp)databaseParameterBufferImp1.removeExtensionParams();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.getRsr_rdb();
      DatabaseParameterBufferImp databaseParameterBufferImp4 = new DatabaseParameterBufferImp();
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener0 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      GDSHelper gDSHelper0 = new GDSHelper((GDS) null, databaseParameterBufferImp4, (IscDbHandle) null, gDSHelper_GDSHelperErrorListener0);
      databaseParameterBufferImp1.removeExtensionParams();
      DatabaseParameterBufferImp databaseParameterBufferImp5 = (DatabaseParameterBufferImp)databaseParameterBufferImp1.removeExtensionParams();
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener1 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      GDSHelper gDSHelper1 = new GDSHelper((GDS) null, databaseParameterBufferImp3, (IscDbHandle) null, gDSHelper_GDSHelperErrorListener1);
      DatabaseParameterBufferImp databaseParameterBufferImp6 = new DatabaseParameterBufferImp();
      gDSHelper0.getUserName();
      DatabaseParameterBufferImp databaseParameterBufferImp7 = new DatabaseParameterBufferImp();
      gDSHelper0.getUserName();
      DatabaseParameterBufferImp databaseParameterBufferImp8 = (DatabaseParameterBufferImp)databaseParameterBufferImp5.deepCopy();
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener2 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      GDSHelper gDSHelper2 = new GDSHelper((GDS) null, databaseParameterBufferImp8, (IscDbHandle) null, gDSHelper_GDSHelperErrorListener2);
      databaseParameterBufferImp1.removeExtensionParams();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener3 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      databaseParameterBufferImp3.removeExtensionParams();
      byte[][] byteArray0 = new byte[1][0];
      byteArray0[0] = gDSHelper1.BLOB_LENGTH_REQUEST;
      linkedList0.add(byteArray0);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.first();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.4708084763221112
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp3 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp4 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp5 = new DatabaseParameterBufferImp();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[1][0];
      byte[] byteArray1 = new byte[8];
      byteArray1[0] = (byte) (-70);
      byteArray1[1] = (byte) (-127);
      byteArray1[2] = (byte)0;
      byteArray1[3] = (byte) (-108);
      byteArray1[4] = (byte)25;
      byteArray1[5] = (byte)92;
      byteArray1[6] = (byte) (-1);
      byteArray1[7] = (byte)125;
      byteArray0[0] = byteArray1;
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.insertRow(byteArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.4708084763221112
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      ThreadFactory threadFactory0 = mock(ThreadFactory.class, new ViolatedAssumptionAnswer());
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(47, threadFactory0);
      ThreadGroup threadGroup0 = mock(ThreadGroup.class, new ViolatedAssumptionAnswer());
      ThreadFactory threadFactory1 = mock(ThreadFactory.class, new ViolatedAssumptionAnswer());
      doReturn((Thread) null).when(threadFactory1).newThread(any(java.lang.Runnable.class));
      scheduledThreadPoolExecutor0.setThreadFactory(threadFactory1);
      scheduledThreadPoolExecutor0.setMaximumPoolSize(47);
      MockThread mockThread0 = new MockThread();
      scheduledThreadPoolExecutor0.getRejectedExecutionHandler();
      MockThread mockThread1 = new MockThread(threadGroup0, "");
      ThreadGroup threadGroup1 = mock(ThreadGroup.class, new ViolatedAssumptionAnswer());
      MockThread mockThread2 = new MockThread(threadGroup1, mockThread1, "@+jMos'", 0L);
      MockThread mockThread3 = new MockThread();
      Thread.UncaughtExceptionHandler thread_UncaughtExceptionHandler0 = MockThread.getDefaultUncaughtExceptionHandler();
      mockThread3.setUncaughtExceptionHandler(thread_UncaughtExceptionHandler0);
      MockThread.getAllStackTraces();
      TimeUnit timeUnit0 = TimeUnit.NANOSECONDS;
      scheduledThreadPoolExecutor0.schedule((Runnable) mockThread0, 1053L, timeUnit0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[][] byteArray0 = new byte[0][3];
      // Undeclared exception!
      try { 
        fBCachedFetcher0.insertRow(byteArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.4941751382893083
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      byte[][] byteArray0 = new byte[8][2];
      byte[] byteArray1 = new byte[2];
      byteArray1[0] = (byte)56;
      byteArray1[1] = (byte)0;
      byteArray0[0] = byteArray1;
      byteArray0[1] = byteArray1;
      byte[] byteArray2 = new byte[7];
      byteArray2[0] = (byte)0;
      byteArray2[1] = (byte)0;
      byteArray2[2] = (byte)0;
      byteArray2[3] = (byte)56;
      byteArray2[4] = (byte)56;
      byteArray2[5] = (byte)56;
      byteArray2[6] = (byte)0;
      byteArray0[2] = byteArray2;
      byte[] byteArray3 = new byte[4];
      byteArray3[0] = (byte)56;
      byteArray3[1] = (byte)56;
      byteArray3[2] = (byte)56;
      byteArray3[3] = (byte)0;
      byteArray0[3] = byteArray3;
      byte[] byteArray4 = new byte[5];
      byteArray4[0] = (byte)0;
      byteArray4[1] = (byte)56;
      byteArray4[3] = (byte)56;
      byteArray4[4] = (byte)0;
      byteArray0[4] = byteArray4;
      byte[] byteArray5 = new byte[2];
      byteArray5[0] = (byte)56;
      byteArray5[1] = (byte)0;
      byteArray0[5] = byteArray5;
      byte[] byteArray6 = new byte[6];
      byteArray6[0] = (byte)0;
      byteArray6[1] = (byte)0;
      byteArray6[2] = (byte)56;
      byteArray6[3] = (byte)0;
      byteArray6[4] = (byte)0;
      byteArray6[5] = (byte)0;
      byteArray0[6] = byteArray6;
      byte[] byteArray7 = new byte[3];
      byteArray7[0] = (byte)0;
      byteArray7[1] = (byte)56;
      byteArray7[2] = (byte)0;
      byteArray0[7] = byteArray7;
      // Undeclared exception!
      try { 
        fBCachedFetcher0.updateRow(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      DatabaseParameterBuffer databaseParameterBuffer0 = databaseParameterBufferImp1.removeExtensionParams();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.getRsr_rdb();
      DatabaseParameterBufferImp databaseParameterBufferImp3 = new DatabaseParameterBufferImp();
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener0 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      GDSHelper gDSHelper0 = new GDSHelper((GDS) null, databaseParameterBufferImp3, (IscDbHandle) null, gDSHelper_GDSHelperErrorListener0);
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener1 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      GDSHelper gDSHelper1 = new GDSHelper((GDS) null, databaseParameterBuffer0, (IscDbHandle) null, gDSHelper_GDSHelperErrorListener1);
      DatabaseParameterBufferImp databaseParameterBufferImp4 = new DatabaseParameterBufferImp();
      gDSHelper0.getUserName();
      DatabaseParameterBuffer databaseParameterBuffer1 = databaseParameterBuffer0.deepCopy();
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener2 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      GDSHelper gDSHelper2 = new GDSHelper((GDS) null, databaseParameterBuffer1, (IscDbHandle) null, gDSHelper_GDSHelperErrorListener2);
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener3 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      GDSHelper gDSHelper3 = new GDSHelper((GDS) null, databaseParameterBufferImp4, (IscDbHandle) null, gDSHelper_GDSHelperErrorListener3);
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener4 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      GDSHelper gDSHelper4 = new GDSHelper((GDS) null, databaseParameterBuffer1, (IscDbHandle) null, gDSHelper_GDSHelperErrorListener4);
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      boolean boolean0 = fBCachedFetcher0.isEmpty();
      assertTrue(boolean0);
      assertEquals(0, fBCachedFetcher0.getRowNum());
  }
}
