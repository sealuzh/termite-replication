/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 05:25:21 GMT 2019
 */

package nu.staldal.lagoon;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import nu.staldal.lagoon.LagoonCLI;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LagoonCLI_ESTest extends LagoonCLI_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String[] stringArray0 = new String[6];
      stringArray0[0] = "HO)B;]Y|~Dyw%,~";
      stringArray0[1] = "build";
      stringArray0[2] = "";
      stringArray0[3] = "Cu#QOc";
      stringArray0[4] = "n-.staldal.xtree.Node.xml";
      stringArray0[5] = "1wG'(J";
      LagoonCLI.main(stringArray0);
      assertEquals(6, stringArray0.length);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "Ga6=x[=%M.sitemap";
      stringArray0[1] = "force";
      // Undeclared exception!
      try { 
        LagoonCLI.main(stringArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.8212146057008812
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("4QuO7=ERd:");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)1;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      String[] stringArray0 = new String[1];
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      stringArray0[0] = "4QuO7=ERd:";
      LagoonCLI.main(stringArray0);
      LagoonCLI.main(stringArray0);
      assertEquals(1, stringArray0.length);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "Ga6=x[=eiM.sitemap";
      stringArray0[1] = "force";
      stringArray0[2] = "force";
      stringArray0[3] = "Ga6=x[=eiM.sitemap";
      LagoonCLI.main(stringArray0);
      assertEquals(9, stringArray0.length);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String[] stringArray0 = new String[6];
      stringArray0[0] = ".xml";
      stringArray0[1] = "7";
      stringArray0[2] = "...with errors...";
      stringArray0[3] = "YX4whg4";
      stringArray0[4] = "Incorrect password";
      stringArray0[5] = "HYO";
      LagoonCLI.main(stringArray0);
      assertEquals(6, stringArray0.length);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "LocalNa may notbenll";
      stringArray0[1] = "force";
      stringArray0[2] = "Ffe,xt!VhE*[Rh";
      stringArray0[4] = "force";
      stringArray0[5] = "LocalNa may notbenll";
      stringArray0[6] = "Ffe,xt!VhE*[Rh";
      LagoonCLI.main(stringArray0);
      assertEquals(7, stringArray0.length);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "'rD#90:X4v|R";
      stringArray0[1] = "r7]tGJx]lPJS%Mr=Z";
      stringArray0[2] = "$9@*&mz|L1gn";
      stringArray0[3] = "`tOxFw(] n}'F E-";
      stringArray0[4] = "LoalNa myG not be nl.xml";
      stringArray0[5] = "Elw;/";
      stringArray0[6] = "Password is required but not specified";
      String[] stringArray1 = new String[1];
      stringArray1[0] = "nu.staldal.xtree.Node";
      LagoonCLI.main(stringArray1);
      assertNotSame(stringArray1, stringArray0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("4QuO7=ERd:");
      FileSystemHandling.setPermissions(evoSuiteFile0, false, false, false);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.setPermissions(evoSuiteFile0, false, false, false);
      FileSystemHandling.shouldAllThrowIOExceptions();
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("4QuO7=ERd:");
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile(evoSuiteFile1, byteArray0);
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.setPermissions(evoSuiteFile0, true, false, true);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "4QuO7=ERd:";
      LagoonCLI.main(stringArray0);
      assertEquals(1, stringArray0.length);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "(9DEIgm4sFMLB<";
      stringArray0[5] = "force";
      stringArray0[2] = "force";
      String[] stringArray1 = new String[3];
      stringArray1[0] = "Ff/,x]VhE*[Rh";
      stringArray1[1] = "force";
      stringArray1[2] = "force";
      String[] stringArray2 = new String[0];
      LagoonCLI.main(stringArray2);
      assertNotSame(stringArray2, stringArray0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "q0~U40F<fLUi-#]";
      stringArray0[2] = "Incorrect password";
      stringArray0[3] = "%crSrX(4<TuF,44o4*r";
      stringArray0[4] = "Attribute {";
      stringArray0[5] = "4QuO7=ERd:";
      stringArray0[6] = "Lo)alName maypnot be null.sitemap";
      // Undeclared exception!
      try { 
        LagoonCLI.main(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[0] = "loHWV/4.JYA%ibJV";
      stringArray0[1] = "YWKx:YOz28?|*/BhJ";
      stringArray0[2] = "All elements are not yet ended";
      stringArray0[3] = "preserve";
      stringArray0[4] = "space";
      stringArray0[5] = "5*XQ";
      stringArray0[6] = "/qr~ seQr`";
      stringArray0[7] = "";
      LagoonCLI.main(stringArray0);
      assertEquals(8, stringArray0.length);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.8053415898278653
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LagoonCLI lagoonCLI0 = new LagoonCLI();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "tXTyq)]|Q ";
      stringArray0[1] = "Lagoon initialized successfully";
      stringArray0[2] = "vw[:)9TgY]'(k^NxA";
      stringArray0[3] = "M|MY}O;?,Mf3)d4OZ}";
      stringArray0[4] = "org.apache.log.output.io.rotate.BaseFileNameFilter";
      stringArray0[5] = "org.apache.log.output.io.rotate.BaseFileNameFilter";
      stringArray0[6] = "_m+U#l^bs@Ml,s4[=";
      LagoonCLI.main(stringArray0);
      String[] stringArray1 = new String[8];
      stringArray1[0] = "";
      stringArray1[1] = "d%]b0";
      stringArray1[2] = "sR{Ipa,AT";
      stringArray1[3] = "";
      stringArray1[4] = "";
      LagoonCLI.main(stringArray0);
      assertNotSame(stringArray0, stringArray1);
  }
}
