/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 05:50:03 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.SequenceInputStream;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassReader;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.47370348975956
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2631));
      classWriter0.newClass("CQi0.C <wB");
      String string0 = "0%])UWC>#x";
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2631), "CQi0.C <wB", "CQi0.C <wB", "0%])UWC>#x", (Object) null);
      fieldWriter0.getSize();
      classWriter0.version = 37;
      fieldWriter0.getSize();
      String string1 = "wzxrvT3}K";
      String[] stringArray0 = new String[17];
      stringArray0[0] = "CQi0.C <wB";
      Attribute attribute0 = new Attribute("");
      fieldWriter0.visitAttribute(attribute0);
      stringArray0[1] = "CQi0.C <wB";
      stringArray0[2] = "CQi0.C <wB";
      stringArray0[3] = "0%])UWC>#x";
      ByteVector byteVector0 = new ByteVector(28);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0948498709861045
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ClassWriter classWriter0 = new ClassWriter((-2631));
      classWriter0.version = 2652;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2631), ";R,0r+W[DVBU9FmO?a", "CQi0.C <wB", "0%]);G&CU#x", (Object) null);
      fieldWriter0.getSize();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null);
      PushbackInputStream pushbackInputStream1 = new PushbackInputStream((InputStream) null);
      classWriter0.addType("");
      FieldWriter fieldWriter1 = null;
      try {
        fieldWriter1 = new FieldWriter(classWriter0, 2652, "The wildcard array must not be null", "CQi0.C <wB", "0%]);G&CU#x", classWriter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.ClassWriter@5
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.3952585200528596
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)115;
      byteArray0[1] = (byte)56;
      byteArray0[2] = (byte) (-11);
      byteArray0[3] = (byte)37;
      byteArray0[4] = (byte)8;
      byteArray0[5] = (byte)63;
      byteArray0[6] = (byte)8;
      byteArray0[7] = (byte) (-102);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.index = (-727);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      classWriter0.newClass("rsmiuh:A_");
      classWriter0.newLong((-726));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "rsmiuh:A_", "LO", (String) null, "rsmiuh:A_");
      ByteVector byteVector0 = new ByteVector(2);
      ByteVector byteVector1 = byteVector0.put12((-726), (-726));
      fieldWriter0.getSize();
      fieldWriter0.getSize();
      fieldWriter0.getSize();
      fieldWriter0.put(byteVector0);
      fieldWriter0.put(byteVector1);
      assertSame(byteVector0, byteVector1);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.8945706855324711
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)115;
      byteArray0[1] = (byte)56;
      byteArray0[2] = (byte) (-11);
      byteArray0[3] = (byte)49;
      byteArray0[4] = (byte)115;
      ClassWriter classWriter0 = new ClassWriter((byte)115);
      ByteVector byteVector0 = classWriter0.pool;
      ByteVector byteVector1 = byteVector0.putByte((byte) (-11));
      ByteVector byteVector2 = byteVector1.putLong(0L);
      byteVector2.length = 56;
      byteVector2.putByte((byte)56);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (byte)49, "", "", "", (Object) null);
      ByteVector byteVector3 = new ByteVector();
      fieldWriter0.put(byteVector3);
      ByteVector byteVector4 = byteVector0.putUTF8("");
      fieldWriter0.put(byteVector4);
      assertSame(byteVector4, byteVector2);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.3426497841485943
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)115;
      byteArray0[1] = (byte)56;
      byteArray0[2] = (byte) (-11);
      byteArray0[3] = (byte)37;
      byteArray0[4] = (byte)8;
      byteArray0[5] = (byte)63;
      byteArray0[6] = (byte)8;
      byteArray0[7] = (byte) (-102);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.newClass("rsmiuh:A_");
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "rsmiuh:A_", "LO", (String) null, "rsmiuh:A_");
      ByteVector byteVector0 = new ByteVector(2);
      byteVector0.put12(2, 2);
      byteVector0.length = (int) (byte)115;
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, (byte) (-11), "rsmiuh:A_", "I3xa{MEBCSF2f~K", "", (Object) null);
      classWriter0.visitOuterClass("e{#O\"K", "", (String) null);
      fieldWriter0.getSize();
      // Undeclared exception!
      try { 
        fieldWriter1.put(byteVector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ByteVector", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      int int0 = 0;
      classWriter0.newClass("rsmiuh:A_");
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "rsmiuh:A_", "LO", (String) null, "rsmiuh:A_");
      ByteVector byteVector0 = new ByteVector(2);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      byteVector0.put11((-1133), 171);
      int int1 = 59;
      Attribute attribute0 = new Attribute("org.apache.commons.io.filefilter.PrefixFileFilter");
      Attribute attribute1 = attribute0.next;
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.5320130067116113
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ClassWriter classWriter0 = new ClassWriter((-2631));
      classWriter0.version = 16777221;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 742, "0%]);G&CU#x", "mD 9=l:|6D", "rc$ZzA", "IkZA1~JSJD");
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null);
      PushbackInputStream pushbackInputStream1 = new PushbackInputStream(pushbackInputStream0);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(sequenceInputStream0, pushbackInputStream0);
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.putShort((-2810));
      fieldWriter0.put(byteVector1);
      fieldWriter0.getSize();
      fieldWriter0.visitAnnotation("ht", false);
      fieldWriter0.getSize();
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.49057893774639
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2631));
      classWriter0.version = 16777221;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)63;
      byteArray0[1] = (byte)63;
      byteArray0[2] = (byte)63;
      byteArray0[3] = (byte)63;
      byteArray0[4] = (byte)7;
      ClassWriter classWriter1 = new ClassWriter(2);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-713), "", ";R,0r+W[DVBU9FmO?a", (String) null, "rsmiuh:A_");
      ByteVector byteVector0 = new ByteVector((byte)63);
      byteVector0.put12(3834, 3);
      fieldWriter0.getSize();
      ByteVector byteVector1 = new ByteVector();
      fieldWriter0.put(byteVector1);
      fieldWriter0.getSize();
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.2525306450725109
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ClassWriter classWriter0 = new ClassWriter((-2631));
      classWriter0.version = 16777221;
      int int0 = 16777221;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 742, "0%]);G&CU#x", "mD 9=l:|6D", ".|$ZA", "IkZA1~JSJD");
      Attribute attribute0 = new Attribute(".|$ZA");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.0832409930999294
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)115;
      ClassWriter classWriter0 = new ClassWriter((-65));
      classWriter0.newClass("rsmiuh:A_");
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 3401, "%_.X_\"z`W!~b", "RuntimeVisibeAnnotations", "?F!heXM:`7.h>", "?F!heXM:`7.h>");
      ByteVector byteVector0 = new ByteVector(24117248);
      ByteVector byteVector1 = byteVector0.put12((byte)63, 4096);
      ByteVector byteVector2 = byteVector0.putInt(3401);
      byteVector2.putInt(37);
      byteVector1.put12((-2252), (byte)63);
      fieldWriter0.put(byteVector0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream1);
      AnnotationVisitor annotationVisitor0 = fieldWriter0.visitAnnotation("?F!heXM:`7.h>", true);
      assertNotNull(annotationVisitor0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.5188608584534495
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.newClass("rsmiuh:A_");
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "rsmiuh:A_", "LO", (String) null, "rsmiuh:A_");
      ByteVector byteVector0 = new ByteVector(2);
      ByteVector byteVector1 = byteVector0.put12(2, 2);
      fieldWriter0.getSize();
      ByteVector byteVector2 = byteVector1.putShort(1);
      ByteVector byteVector3 = byteVector2.put11(562, 0);
      byteVector3.putShort(562);
      fieldWriter0.put(byteVector2);
      Attribute attribute0 = new Attribute((String) null);
      Attribute attribute1 = attribute0.next;
      byteVector0.put11(135, 0);
      fieldWriter0.visitEnd();
      fieldWriter0.put(byteVector0);
      assertSame(byteVector0, byteVector3);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.6760204571978223
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1617);
      classWriter0.version = 131072;
      classWriter0.visitField(3079, "myO/", "myO/", "myO/", (Object) null);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 115, "fg?x=!r\u0005", "myO/", "sI8g]0_|]o", "fg?x=!r\u0005");
      fieldWriter0.getSize();
      fieldWriter0.visitAnnotation("sI8g]0_|]o", false);
      fieldWriter0.visitAnnotation("aH[6,1&O;WY\"Y>{$afh", true);
      ByteVector byteVector0 = new ByteVector(1);
      ByteVector byteVector1 = byteVector0.putShort((-725));
      ByteVector byteVector2 = byteVector1.putInt(2733);
      byteVector0.putUTF8("fg?x=!r\u0005");
      fieldWriter0.put(byteVector2);
      ByteVector byteVector3 = byteVector2.put11((-725), 698);
      ByteVector byteVector4 = byteVector3.putUTF8("");
      fieldWriter0.put(byteVector4);
      fieldWriter0.visitAnnotation("myO/", false);
      fieldWriter0.visitAnnotation("ConstantValue", true);
      fieldWriter0.getSize();
      fieldWriter0.visitAnnotation("ConstantValue", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(60, int0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)114;
      byte byte0 = (byte)56;
      byteArray0[1] = (byte)56;
      ClassWriter classWriter0 = new ClassWriter((byte)114);
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, (byte)56, "#l_%1c!Z]8r[z)$G", (String) null, "", (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.9859526183035509
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-128));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-128), "CQi0.C <wB", "ConstantValue", "`", "CQi0.C <wB");
      fieldWriter0.getSize();
      ClassWriter classWriter1 = new ClassWriter((-128));
      Attribute attribute0 = new Attribute("ConstantValue");
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(sequenceInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }
}
