/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 05:40:35 GMT 2019
 */


import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Services_ESTest extends Services_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("https://_O_HOkG8P]C:1");
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("200.42.42.0", 1);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "A=?fn?Uq{c,V!Cf3a");
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testSMTP("A=?fn?Uq{c,V!Cf3a", 1);
      assertFalse(services_SIMPLE_Result0.works);
      assertEquals(0L, services_SIMPLE_Result0.time);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.6545216946179053
  */
  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = new Services.HTTP_Result();
      services_HTTP_Result0.reset();
      assertEquals(0L, services_HTTP_Result0.time);
      assertEquals(0, services_HTTP_Result0.code);
      assertFalse(services_HTTP_Result0.works);
      assertEquals(0, services_HTTP_Result0.page_weight);
      
      EvoSuiteLocalAddress evoSuiteLocalAddress0 = new EvoSuiteLocalAddress("192.168.1.42", 40000);
      NetworkHandling.sendMessageOnTcp(evoSuiteLocalAddress0, "");
      Services.testSMTP((String) null, 0);
      Services.testPOP3("", (-1401));
      Services.HTTP_Result services_HTTP_Result1 = Services.testHTTP("**Erreur d'E/S** (java.io.IOException: Remote address/port is not opened: org.evosuite.runtime.vnet.EndPointInfo@5fb6a8eb) **", (-1401));
      String string0 = services_HTTP_Result1.toString();
      assertEquals("**** Resultat : \n** Fonctionnement : false\n** Temps : 0 ms\n** Poid de la page : 0 octets\n** Code de page : 0\n** Erreur g\u00E9n\u00E9r\u00E9e : **URL Mal Form\u00E9** (java.net.MalformedURLException: Invalid port number :-1401) **.\n****", string0);
      
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://A8RxE:0");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "**URL Mal Form\u00E9** (java.net.MalformedURLException: Invalid port number :-1401) **");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "");
      Services.testPOP3("B6(h$O:g", 0);
      Services.testHTTP("B6(h$O:g", 0);
      Services.testHTTPS("MEl`|-1T]|h:8Fhv1", 0);
      System.setCurrentTimeMillis(1L);
      Services.HTTP_Result services_HTTP_Result2 = Services.testHTTP("A8RxE", 0);
      assertTrue(services_HTTP_Result2.works);
      assertEquals(82, services_HTTP_Result2.page_weight);
      
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testSMTP("", 0);
      assertEquals(0L, services_SIMPLE_Result0.time);
      assertFalse(services_SIMPLE_Result0.works);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      EvoSuiteLocalAddress evoSuiteLocalAddress0 = new EvoSuiteLocalAddress("192.168.1.42", 40000);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("**Erreur d'E/S** (", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("https://_O_HOkG8P]C:1");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "A=?fn?Uq{c,!Cf3a");
      NetworkHandling.sendMessageOnTcp(evoSuiteLocalAddress0, "_O_HOkG8P]C");
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTPS("_O_HOkG8P]C", 1);
      assertTrue(services_HTTP_Result0.works);
      assertEquals(17, services_HTTP_Result0.page_weight);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("https://_O_HOkG8P]C:1");
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("200.42.42.0", 1);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "A=?fn?Uq{c,V!Cf3a");
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testPOP3("A=?fn?Uq{c,V!Cf3a", 1);
      assertEquals(0L, services_SIMPLE_Result0.time);
      assertFalse(services_SIMPLE_Result0.works);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, (String) null);
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTPS((String) null, 0);
      assertEquals(0, services_HTTP_Result0.page_weight);
      assertEquals(0L, services_HTTP_Result0.time);
      assertFalse(services_HTTP_Result0.works);
      assertEquals(0, services_HTTP_Result0.code);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      System.setCurrentTimeMillis(1914L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(2299L);
      System.setCurrentTimeMillis(1540L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(1540L);
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis((-180L));
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTPS("", (-4779));
      assertEquals(0, services_HTTP_Result0.page_weight);
      assertFalse(services_HTTP_Result0.works);
      assertEquals(0, services_HTTP_Result0.code);
      assertEquals(0L, services_HTTP_Result0.time);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      System.setCurrentTimeMillis(1914L);
      System.setCurrentTimeMillis(1914L);
      System.setCurrentTimeMillis((-3954L));
      System.setCurrentTimeMillis(0L);
      Services.SIMPLE_Result services_SIMPLE_Result0 = new Services.SIMPLE_Result();
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis(1914L);
      System.setCurrentTimeMillis(1914L);
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis(2203L);
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTP((String) null, 1);
      assertEquals(0L, services_HTTP_Result0.time);
      assertFalse(services_HTTP_Result0.works);
      assertEquals(0, services_HTTP_Result0.page_weight);
      assertEquals(0, services_HTTP_Result0.code);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.6897618907690553
  */
  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = new Services.HTTP_Result();
      services_HTTP_Result0.time = 2105L;
      services_HTTP_Result0.toString();
      services_HTTP_Result0.toString();
      services_HTTP_Result0.toString();
      services_HTTP_Result0.code = (-2325);
      Services.testPOP3("qsZIBcXj_", (-1));
      services_HTTP_Result0.code = (-1);
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testPOP3("qsZIBcXj_", 0);
      services_SIMPLE_Result0.time = (long) (-1);
      services_SIMPLE_Result0.toString();
      services_HTTP_Result0.toString();
      services_SIMPLE_Result0.toString();
      services_SIMPLE_Result0.toString();
      services_SIMPLE_Result0.toString();
      services_HTTP_Result0.reset();
      services_HTTP_Result0.reset();
      services_SIMPLE_Result0.toString();
      services_HTTP_Result0.toString();
      assertEquals(0, services_HTTP_Result0.code);
      
      Services.SIMPLE_Result services_SIMPLE_Result1 = Services.testPOP3("Op^/?;|&w", (-1));
      Services services0 = new Services();
      Services.testSMTP("http", (-1));
      services_SIMPLE_Result1.reset();
      Services.testPOP3("qsZIBcXj_", (-1));
      Services.SIMPLE_Result services_SIMPLE_Result2 = Services.testPOP3("?J", (-2325));
      assertEquals(0L, services_SIMPLE_Result2.time);
  }
}
