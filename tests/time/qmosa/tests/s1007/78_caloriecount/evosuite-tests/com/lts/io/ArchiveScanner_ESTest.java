/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 19:28:39 GMT 2019
 */

package com.lts.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.lts.io.ArchiveScanner;
import com.lts.io.DirectoryScanner;
import com.lts.io.ImprovedFile;
import java.io.File;
import java.net.URI;
import java.util.Collection;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Set;
import java.util.Vector;
import java.util.function.Consumer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ArchiveScanner_ESTest extends ArchiveScanner_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("-*lXw@R]n=yly2 2", "-*lXw@R]n=yly2 2");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-*lXw@R]n=yly2 2";
      archiveScanner0.addDefaultExcludes();
      String[] stringArray1 = new String[7];
      stringArray1[0] = "-*lXw@R]n=yly2 2";
      stringArray1[1] = "-*lXw@R]n=yly2 2";
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.filesIncluded = vector0;
      stringArray1[2] = "-*lXw@R]n=yly2 2";
      stringArray1[3] = "-*lXw@R]n=yly2 2";
      stringArray1[4] = "-*lXw@R]n=yly2 2";
      stringArray1[5] = "-*lXw@R]n=yly2 2";
      Locale locale0 = Locale.ITALY;
      Locale locale1 = Locale.KOREA;
      String[] stringArray2 = new String[2];
      stringArray2[0] = "-*lXw@R]n=yly2 2";
      stringArray2[1] = "-*lXw@R]n=yly2 2";
      archiveScanner0.setIncludes(stringArray2);
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory(improvedFile0, "-*lXw@R]n=yly2 2", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("-*lXw@R]n=yly2 2", "-*lXw@R]n=yly2 2");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-*lXw@R]n=yly2 2";
      stringArray0[1] = "-*lXw@R]n=yly2 2";
      archiveScanner0.addDefaultExcludes();
      archiveScanner0.setIncludes(stringArray0);
      improvedFile0.toURL();
      // Undeclared exception!
      try { 
        archiveScanner0.processFile("-*lXw@R]n=yly2 2");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.8323649625844873
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MockFile mockFile0 = new MockFile("ts'L60KDtD%pq/:0S", "ts'L60KDtD%pq/:0S");
      ImprovedFile improvedFile0 = new ImprovedFile(mockFile0);
      mockFile0.mkdirs();
      mockFile0.getCanonicalPath();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/ts'L60KDtD%pq/:0S0ts'L60KDtD%pq/:0S");
      byte[] byteArray0 = new byte[2];
      URI uRI0 = MockURI.aHttpURI;
      byteArray0[0] = (byte) (-4);
      mockFile0.setExecutable(true);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, (byte[]) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      mockFile0.toURI();
      ImprovedFile improvedFile1 = new ImprovedFile("ts'L60KDtD%pq/:0S");
      MockFile.createTempFile("LlicU", "LlicU", (File) improvedFile0);
      improvedFile1.setWritable(true, false);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/tmp/ts'L60KDtD%pq/:0S0ts'L60KDtD%pq/:0S");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "/home/ubuntu/termite/projects/78_caloriecount/ts'L60KDtD%pq/:0S/ts'L60KDtD%pq/:0S";
      stringArray0[1] = "LlicU";
      stringArray0[2] = "LlicU";
      stringArray0[3] = "";
      stringArray0[4] = "LlicU";
      archiveScanner0.setExcludes(stringArray0);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(mockFile0, "X?gH{C!jD;8u_", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String string0 = "-*lXw@R]n=yly2 2";
      ImprovedFile improvedFile0 = new ImprovedFile("-*lXw@R]n=yly2 2", "-*lXw@R]n=yly2 2");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      ArchiveScanner archiveScanner1 = new ArchiveScanner(improvedFile0);
      Vector<Integer> vector0 = new Vector<Integer>();
      archiveScanner0.dirsNotIncluded = vector0;
      archiveScanner0.setIncludes(archiveScanner1.DEFAULT_ARCHIVE_EXTENSIONS);
      improvedFile0.tempRename();
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive(improvedFile0, "-*lXw@R]n=yly2 2");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("-*lXw@R]n=yly2c 2", "-*lXw@R]n=yly2c 2");
      Vector<Object> vector0 = new Vector<Object>();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      DirectoryScanner.matchPath("-*lXw@R]n=yly2c 2", "-*lXw@R]n=yly2c 2");
      vector0.forEach(consumer0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "-*lXw@R]n=yly2c 2";
      stringArray0[1] = "-*lXw@R]n=yly2c 2";
      archiveScanner0.myTempdir = improvedFile0;
      stringArray0[2] = "-*lXw@R]n=yly2c 2";
      stringArray0[3] = "-*lXw@R]n=yly2c 2";
      stringArray0[4] = "-*lXw@R]n=yly2c 2";
      archiveScanner0.setIncludes(stringArray0);
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive(improvedFile0, "-*lXw@R]n=yly2c 2");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MockFile mockFile0 = new MockFile("ts'L60KDtD%pq/:0S", "ts'L60KDtD%pq/:0S");
      ImprovedFile improvedFile0 = new ImprovedFile("ts'L60KDtD%pq/:0S");
      mockFile0.mkdirs();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      Vector<Integer> vector0 = new Vector<Integer>();
      archiveScanner0.filesExcluded = vector0;
      archiveScanner0.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory(mockFile0, "The system has encountered an severe error that has prevented it starting up.  This is probably the result of a bug or other problem that is beyond your control.  The details button may provide information that will help in resolving the problem so you may wish to copy the %ontents of that window and include it in any bug reports, etc.", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.4471627089619605
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MockFile mockFile0 = new MockFile("ts'L60KDtD%pq/:0S", "ts'L60KDtD%pq/:0S");
      ImprovedFile improvedFile0 = new ImprovedFile(mockFile0);
      DirectoryScanner.match("ts'L60KDtD%pq/:0S", "ts'L60KDtD%pq/:0S");
      mockFile0.getCanonicalPath();
      improvedFile0.createTempDir();
      URI uRI0 = MockURI.aFileURI;
      MockFile mockFile1 = new MockFile(uRI0);
      ImprovedFile improvedFile1 = new ImprovedFile(mockFile1);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile1);
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(mockFile0, "Pc", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      ArchiveScanner archiveScanner1 = new ArchiveScanner((ImprovedFile) null);
      // Undeclared exception!
      try { 
        archiveScanner0.isArchive((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String string0 = "Y\\q&bP,7fbR";
      ImprovedFile improvedFile0 = new ImprovedFile("Yq&bP,7fbR", "Yq&bP,7fbR");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[0];
      archiveScanner0.setIncludes(stringArray0);
      improvedFile0.setWritable(true, true);
      try { 
        archiveScanner0.scandir(improvedFile0, "Yq&bP,7fbR", false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // IO error scanning directory /home/ubuntu/termite/projects/78_caloriecount/Yq&bP,7fbR/Yq&bP,7fbR
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MockFile mockFile0 = new MockFile("ts'L60KDtD%pq/:0S", "ts'L60KDtD%pq/:0S");
      ImprovedFile improvedFile0 = new ImprovedFile(mockFile0);
      mockFile0.mkdirs();
      mockFile0.getCanonicalPath();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/ts'L60KDtD%pq/:0S0ts'L60KDtD%pq/:0S");
      byte[] byteArray0 = new byte[2];
      mockFile0.toURI();
      byteArray0[0] = (byte) (-4);
      mockFile0.setExecutable(true);
      mockFile0.toURI();
      byteArray0[1] = (byte)55;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      FileSystemHandling.setPermissions(evoSuiteFile0, false, false, false);
      mockFile0.setReadable(true);
      mockFile0.setWritable(true, false);
      archiveScanner0.scandir(mockFile0, "]oflTAN9+Tye|Y161LWvOo^isB8hw9.jar", true);
      archiveScanner0.scandir(mockFile0, "]oflTAN9+Tye|Y161LWvOo^isB8hw9.jar", false);
      assertTrue(mockFile0.canWrite());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      Vector<String> vector0 = new Vector<String>();
      archiveScanner0.filesExcluded = vector0;
      // Undeclared exception!
      try { 
        archiveScanner0.scanArchive((File) null, "0~~n");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.archive.AbstractNestedArchive", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("sns:>~A1De", "sns:>~A1De");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      Vector<Object> vector0 = new Vector<Object>();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "sns:>~A1De";
      stringArray0[1] = "sns:>~A1De";
      stringArray0[2] = "sns:>~A1De";
      Locale locale0 = Locale.JAPANESE;
      Locale locale1 = Locale.CANADA_FRENCH;
      Vector<Locale.LanguageRange> vector1 = new Vector<Locale.LanguageRange>(2);
      Set<String> set0 = locale1.getUnicodeLocaleAttributes();
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) vector1, (Collection<String>) set0);
      Locale.lookupTag(vector1, list0);
      Locale locale2 = Locale.ITALIAN;
      Locale locale3 = Locale.JAPANESE;
      locale1.getDisplayVariant(locale3);
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Collection<Locale> collection0 = null;
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      List<Locale> list1 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) null, locale_FilteringMode0);
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list1, locale_FilteringMode1);
      locale0.getUnicodeLocaleAttributes();
      archiveScanner0.isArchive(improvedFile0);
      locale1.getDisplayScript(locale0);
      Locale.LanguageRange locale_LanguageRange0 = null;
      try {
        locale_LanguageRange0 = new Locale.LanguageRange("sns:>~A1De", 1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // range=sns:>~a1de
         //
         verifyException("java.util.Locale$LanguageRange", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("-*lXw@R]n=yly2 2", "-*lXw@R]n=yly2 2");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      Locale locale0 = Locale.JAPANESE;
      Locale locale1 = Locale.CANADA_FRENCH;
      Locale locale2 = Locale.CANADA;
      Locale.getISOLanguages();
      locale0.getDisplayLanguage(locale1);
      Locale locale3 = Locale.ROOT;
      locale1.getDisplayVariant(locale2);
      Vector<Locale.LanguageRange> vector0 = new Vector<Locale.LanguageRange>();
      locale2.getDisplayName();
      Vector<Locale> vector1 = new Vector<Locale>();
      Integer[] integerArray0 = new Integer[8];
      integerArray0[0] = (Integer) 2;
      integerArray0[1] = (Integer) 2;
      integerArray0[2] = (Integer) 1;
      integerArray0[3] = (Integer) 1;
      integerArray0[4] = (Integer) 1;
      integerArray0[5] = (Integer) 1;
      integerArray0[6] = (Integer) 1;
      integerArray0[7] = (Integer) 2;
      vector0.toArray(integerArray0);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) vector0, (Collection<Locale>) vector1, locale_FilteringMode0);
      Locale locale4 = Locale.ITALIAN;
      Locale locale5 = Locale.KOREA;
      Set<String> set0 = locale5.getUnicodeLocaleAttributes();
      Vector<Object> vector2 = new Vector<Object>();
      vector2.removeAll(vector0);
      locale1.getUnicodeLocaleAttributes();
      Vector<Object> vector3 = new Vector<Object>();
      vector3.removeAll(set0);
      Vector<String> vector4 = new Vector<String>();
      ArchiveScanner archiveScanner1 = new ArchiveScanner(improvedFile0);
      try { 
        archiveScanner0.scanArchive(improvedFile0, "English (Canada)");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error trying to list archive, /home/ubuntu/termite/projects/78_caloriecount/-*lXw@R]n=yly2 2/-*lXw@R]n=yly2 2
         //
         verifyException("com.lts.io.archive.AbstractNestedArchive", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      DirectoryScanner.matchPatternStart("", "");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "";
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      Vector<String> vector0 = new Vector<String>();
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      // Undeclared exception!
      try { 
        archiveScanner0.toFileType((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Vector<Object> vector0 = new Vector<Object>();
      String[] stringArray0 = new String[3];
      Locale locale0 = Locale.JAPANESE;
      Locale locale1 = Locale.CANADA_FRENCH;
      Locale locale2 = Locale.ITALIAN;
      Locale locale3 = Locale.JAPANESE;
      locale1.getDisplayVariant(locale3);
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) null, locale_FilteringMode0);
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list0, locale_FilteringMode1);
      locale0.getUnicodeLocaleAttributes();
      locale1.getDisplayScript(locale0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Set<String> set0 = locale2.getUnicodeLocaleAttributes();
      List<String> list1 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0);
      vector0.removeAll(list1);
      Vector<String> vector1 = new Vector<String>();
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      ImprovedFile improvedFile0 = new ImprovedFile("");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.toFileType(improvedFile0);
      System.setCurrentTimeMillis(1765L);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.4471627089619605
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("-*lXw@R]n=yly2 2", "-*lXw@R]n=yly2 2");
      improvedFile0.mkdirs();
      improvedFile0.getCanonicalPath();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/ts'L60KDtD%pq/:0S0ts'L60KDtD%pq/:0S");
      archiveScanner0.setBasedir(":0S281320.X6`.jar");
      ImprovedFile improvedFile1 = improvedFile0.createTempDir("'.jar", "'.jar");
      improvedFile1.toURI();
      improvedFile0.setExecutable(false);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.setPermissions(evoSuiteFile0, true, true, false);
      improvedFile1.setWritable(true, false);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/tmp/ts'L60KDtD%pq/:0S0ts'L60KDtD%pq/:0S");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(improvedFile0, "/home/ubuntu/termite/projects/78_caloriecount/-*lXw@R]n=yly2 2/-*lXw@R]n=yly2 2", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.428860207414804
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("-*lXw@R]n=yly2 2", "-*lXw@R]n=yly2 2");
      ImprovedFile improvedFile1 = new ImprovedFile(improvedFile0, "Error during repository cleanu.Continue startup?.jar");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile1);
      archiveScanner0.toFileType(improvedFile0);
      archiveScanner0.toFileType(improvedFile1);
      ImprovedFile improvedFile2 = new ImprovedFile(improvedFile1, "Error during repository cleanu.Continue startup?.jar");
      improvedFile1.setWritable(false, false);
      improvedFile2.createTempDir();
      improvedFile2.setReadOnly();
      // Undeclared exception!
      try { 
        ImprovedFile.createTempDirectory((String) null, ".JAR");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ImprovedFile", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile(".ziWp", ".ziWp");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      Vector<Object> vector0 = new Vector<Object>();
      ArchiveScanner archiveScanner1 = new ArchiveScanner(improvedFile0);
      archiveScanner1.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      improvedFile0.toURL();
      // Undeclared exception!
      try { 
        archiveScanner1.processFile("=d8IiF+2bnya6U}");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("-*lXw@R]n=yly2 2", "-*lXw@R]n=yly2 2");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      Vector<Object> vector0 = new Vector<Object>();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      vector0.forEach(consumer0);
      Consumer<Object> consumer1 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      vector0.forEach(consumer1);
      Locale locale0 = Locale.JAPANESE;
      Locale locale1 = Locale.CANADA_FRENCH;
      Locale locale2 = Locale.CANADA;
      Locale.getISOLanguages();
      locale1.getDisplayLanguage(locale2);
      Locale locale3 = Locale.ROOT;
      locale3.getDisplayVariant(locale1);
      Vector<Locale.LanguageRange> vector1 = new Vector<Locale.LanguageRange>();
      Vector<Locale> vector2 = new Vector<Locale>();
      Integer[] integerArray0 = new Integer[0];
      vector1.toArray(integerArray0);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) vector1, (Collection<Locale>) vector2, locale_FilteringMode0);
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) vector1, (Collection<Locale>) list0, locale_FilteringMode1);
      Set<String> set0 = locale3.getUnicodeLocaleAttributes();
      archiveScanner0.isArchive(improvedFile0);
      locale3.getDisplayScript(locale1);
      FileSystemHandling.shouldAllThrowIOExceptions();
      locale0.getUnicodeLocaleAttributes();
      vector0.removeAll(set0);
      Vector<String> vector3 = new Vector<String>();
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis((-1061L));
  }
}
