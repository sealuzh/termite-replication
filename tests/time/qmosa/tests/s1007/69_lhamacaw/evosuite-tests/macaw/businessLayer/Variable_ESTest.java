/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 19:22:35 GMT 2019
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.ConcurrentModificationException;
import java.util.function.Predicate;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.businessLayer.VariableSummary;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getCleaningDescription();
      rawVariable0.columnStart = "";
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.hasSameDisplayName(rawVariable0);
      // Undeclared exception!
      try { 
        derivedVariable0.containsOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.createVariableSummary();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument0.setFileName("general.error.blankField");
      derivedVariable0.containsSupportingDocument(supportingDocument1);
      derivedVariable0.getColumnEnd();
      derivedVariable0.getFilePath();
      User user0 = null;
      DerivedVariable derivedVariable1 = new DerivedVariable();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges((User) null, derivedVariable1, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.49649273994102
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnEnd("ONTOLOGY_TERM");
      derivedVariable0.notes = "variable.questionNumber.label";
      derivedVariable0.createVariableSummary();
      derivedVariable0.setCleaned(true);
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.0113645074166633
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName((String) null);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      assertEquals("lha.mrc.ac.uk:LHA", ontologyTerm2.getNameSpace());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.removeSupportingDocument(supportingDocument0);
      rawVariable0.getDisplayName();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      ArrayList<Integer> arrayList1 = new ArrayList<Integer>();
      arrayList0.containsAll(arrayList1);
      arrayList0.ensureCapacity((-2147483645));
      arrayList0.add(supportingDocument0);
      // Undeclared exception!
      try { 
        rawVariable0.removeSupportingDocuments(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      String string0 = " 5EXC=5p";
      rawVariable0.setForm("R");
      // Undeclared exception!
      try { 
        rawVariable0.addSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("variable.cleaningDescription.label");
      rawVariable0.isCoded();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setIsNewRecord(false);
      // Undeclared exception!
      try { 
        derivedVariable1.cloneAttributes((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.5810259613520468
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Object object0 = derivedVariable0.clone();
      derivedVariable0.setColumnEnd("");
      Predicate.isEqual(object0);
      // Undeclared exception!
      try { 
        derivedVariable0.addOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=4.0159899022388315
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable1.containsSupportingDocument(supportingDocument0);
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable2.getOntologyTerms();
      rawVariable0.addOntologyTerms(arrayList0);
      rawVariable0.removeOntologyTerms(arrayList0);
      DerivedVariable derivedVariable3 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable4 = new DerivedVariable();
      derivedVariable4.updateOntologyTerm(ontologyTerm0);
      derivedVariable4.setAlias("M#IQ].FyGN");
      rawVariable0.cloneAttributes(derivedVariable3);
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable4, rawVariable0);
      derivedVariable3.getDisplayName();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm1);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      derivedVariable4.containsSupportingDocument(supportingDocument1);
      derivedVariable2.setCleaned(false);
      derivedVariable3.setForm((String) null);
      derivedVariable0.setName("kQ(hD1TH@,3x");
      derivedVariable1.getCleaningDescription();
      derivedVariable1.addSourceVariable(derivedVariable0);
      derivedVariable2.setYear("");
      DerivedVariable derivedVariable5 = new DerivedVariable();
      derivedVariable3.getFilePath();
      derivedVariable2.hasSameDisplayName(derivedVariable1);
      derivedVariable1.getCleaningDescription();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.5748480241208815
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      rawVariable0.removeSupportingDocuments(arrayList0);
      derivedVariable0.cloneAttributes(rawVariable0);
      assertEquals("Unknown", rawVariable0.getCategory());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.5053262207700677
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<ValueLabel> arrayList0 = rawVariable0.getValueLabels();
      rawVariable0.setValueLabels(arrayList0);
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList1.add(ontologyTerm0);
      arrayList1.ensureCapacity((-2335));
      ValueLabel valueLabel0 = new ValueLabel();
      arrayList0.add(valueLabel0);
      rawVariable0.setValueLabels(arrayList0);
      ArrayList<OntologyTerm> arrayList2 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList1.add(ontologyTerm1);
      arrayList2.ensureCapacity(0);
      ArrayList<OntologyTerm> arrayList3 = rawVariable0.getOntologyTerms();
      rawVariable0.addOntologyTerms(arrayList3);
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerms(arrayList1);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.665925868143944
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
      
      SupportingDocument supportingDocument1 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument1);
      assertFalse(boolean0);
      
      derivedVariable0.addSupportingDocument(supportingDocument0);
      derivedVariable0.getColumnEnd();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.cloneAttributes(rawVariable0);
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.821926044432282
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(false);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setCoded(true);
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      rawVariable0.getCleaningDescription();
      rawVariable1.getLabel();
      try { 
        RawVariable.validateFields(rawVariable1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.739228799640037
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnStart = "A(-~";
      derivedVariable0.setCategory("user.city.label");
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.removeValueLabel(valueLabel0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFilePath((String) null);
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      derivedVariable0.form = "user.password.label";
      derivedVariable0.setName((String) null);
      String string0 = "variable.codeBookNumber.label";
      derivedVariable0.setCategory("variable.codeBookNumber.label");
      User user0 = new User((String) null, "u.P99j");
      RawVariable rawVariable0 = new RawVariable();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, rawVariable0);
      derivedVariable0.cloneAttributes(rawVariable0);
      rawVariable0.setIdentifier(2147483645);
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel1.setMissingValue(true);
      derivedVariable0.addValueLabel(valueLabel0);
      // Undeclared exception!
      try { 
        derivedVariable0.hasSameDisplayName(rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.8290648605126876
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.cloneAttributes(rawVariable1);
      rawVariable0.setCategory("v-KtKDK[@8zmz<");
      rawVariable0.setIdentifier(1);
      rawVariable1.setIsNewRecord(false);
      rawVariable1.setQuestionNumber("variable.cleaningDescription.label");
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      rawVariable0.getName();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDocumentCode("variable.codeBookNumber.label");
      supportingDocument0.setIdentifier(1);
      rawVariable0.containsSupportingDocument(supportingDocument0);
      System.setCurrentTimeMillis(1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.validateFields(derivedVariable0);
      ArrayList<ValueLabel> arrayList0 = rawVariable0.getValueLabels();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setIdentifier(2473);
      arrayList0.add(valueLabel0);
      valueLabel0.setValue("");
      arrayList0.add(valueLabel0);
      derivedVariable0.setValueLabels(arrayList0);
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      derivedVariable0.addSourceVariables(arrayList1);
      rawVariable1.getValueLabels();
      derivedVariable0.isCoded();
      derivedVariable0.addSourceVariable(rawVariable0);
      derivedVariable0.questionNumber = "=DzV$>~oE<";
      rawVariable0.clone();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      assertEquals("=DzV$>~oE<", derivedVariable0.getQuestionNumber());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.929803467805602
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = "variable.questionNumber.label";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("variable.questionNumber.label");
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.setNotes("supportingDocument.fileName.saveChanges");
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm0);
      arrayList0.add(ontologyTerm0);
      rawVariable0.removeOntologyTerms(arrayList0);
      User user0 = new User("variable.saveChanges.valueChanged", "supportingDocument.fileName.saveChanges");
      ValueLabel.differencesExist(user0, rawVariable0, valueLabel0, valueLabel0);
      ontologyTerm0.setTerm("variable.questionNumber.label");
      rawVariable0.removeValueLabel(valueLabel0);
      rawVariable0.setCleaningStatus("variable.saveChanges.valueChanged");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.addValueLabel(valueLabel0);
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.setForm("^Z");
      rawVariable0.getColumnStart();
      ArrayList<SupportingDocument> arrayList1 = rawVariable0.getSupportingDocuments();
      arrayList1.iterator();
      rawVariable0.setSupportingDocuments(arrayList1);
      rawVariable0.setAlternativeVariable(derivedVariable0);
      rawVariable0.setCleaningDescription("");
      rawVariable0.isNewRecord();
      ArrayList<Variable> arrayList2 = new ArrayList<Variable>();
      derivedVariable0.setSourceVariables(arrayList2);
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      derivedVariable0.getSourceVariables();
      derivedVariable0.clone();
      assertEquals("^Z", derivedVariable0.getForm());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.85806926358508
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      String string0 = "__;(,wRn";
      user0.setLastName("__;(,wRn");
      derivedVariable0.setForm((String) null);
      user0.setPassword("__;(,wRn");
      derivedVariable0.setCoded(false);
      user0.setPhone("__;(,wRn");
      user0.setStatus("!3U");
      derivedVariable0.createVariableSummary();
      derivedVariable0.setName("4c-/p\"p_Fc\"?<z");
      DerivedVariable.validateFields(derivedVariable0);
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.6851309643957646
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      user0.setCounty("GUt?Ozsqd^H*Nw");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setLabel("GUt?Ozsqd^H*Nw");
      rawVariable0.removeValueLabel(valueLabel0);
      rawVariable0.notes = "userIfirstName.saveChanges";
      rawVariable0.setColumnEnd("GUt?Ozsqd^H*Nw");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setSourceVariables((ArrayList<Variable>) null);
      derivedVariable0.getLabel();
      derivedVariable0.getName();
      rawVariable0.getYear();
      assertEquals("userIfirstName.saveChanges", rawVariable0.getNotes());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.9494499710671946
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = "variable.questionNumber.label";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("variable.questionNumber.label");
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.setNotes("supportingDocument.fileName.saveChanges");
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setCoded(false);
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      try { 
        RawVariable.validateFields(rawVariable1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.897034609452277
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.codeBookNumber = "UNABLE_TO_CREATE_SUPPORTING_DOCUMENT";
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      rawVariable0.setCleaningDescription("");
      Variable.validateFields(rawVariable0);
      rawVariable0.form = "&v^M";
      rawVariable0.setQuestionNumber("dT._\"$/mnyNRMm");
      rawVariable0.setCleaningStatus("dT._\"$/mnyNRMm");
      rawVariable0.getName();
      rawVariable0.getCleaningStatus();
      rawVariable0.getColumnStart();
      rawVariable0.questionNumber = "|hhb1LeE:qqW^\"xSD";
      rawVariable0.getColumnEnd();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      try { 
        OntologyTerm.validateFields(ontologyTerm0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.OntologyTerm", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.9395845667241933
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlias("?[S/AaQvj&^YwA.");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerms(arrayList0);
      rawVariable0.removeOntologyTerms(arrayList0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.cloneAttributes(derivedVariable0);
      User user0 = new User();
      User user1 = new User();
      Variable.detectChangesInAlternativeVariable(user1, derivedVariable0, derivedVariable1);
      derivedVariable2.getDisplayName();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable1.containsSupportingDocument(supportingDocument0);
      derivedVariable2.setForm("?[S/AaQvj&^YwA.");
      derivedVariable0.setName("");
      derivedVariable2.getCleaningDescription();
      derivedVariable2.addSourceVariable(rawVariable0);
      derivedVariable0.setYear((String) null);
      DerivedVariable derivedVariable3 = new DerivedVariable();
      derivedVariable1.getFilePath();
      derivedVariable3.hasSameDisplayName(derivedVariable0);
      // Undeclared exception!
      try { 
        derivedVariable1.containsSupportingDocument((SupportingDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.9393804225984406
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = "variable.questionNumber.label";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("variable.questionNumber.label");
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable1.addOntologyTerms(arrayList0);
      rawVariable1.removeOntologyTerms(arrayList0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable1.updateOntologyTerm(ontologyTerm1);
      rawVariable0.cloneAttributes(derivedVariable1);
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable1, rawVariable1);
      derivedVariable0.getDisplayName();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable1.containsSupportingDocument(supportingDocument0);
      derivedVariable0.setForm("");
      derivedVariable1.setName("=^.");
      derivedVariable1.getCleaningDescription();
      derivedVariable0.addSourceVariable(rawVariable0);
      derivedVariable0.setYear("P");
      assertEquals("P", derivedVariable0.getYear());
      
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.getFilePath();
      derivedVariable2.hasSameDisplayName(rawVariable1);
      assertFalse(rawVariable1.isCoded());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.037230412531385
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      user0.setCounty("GUt?Ozsqd^H*Nw");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setLabel("GUt?Ozsqd^H*Nw");
      rawVariable0.removeValueLabel(valueLabel0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setCleaningDescription("GUt?Ozsqd^H*Nw");
      ArrayList<SupportingDocument> arrayList0 = rawVariable1.getSupportingDocuments();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.addSupportingDocuments(arrayList0);
      rawVariable2.getCleaningStatus();
      rawVariable0.getCleaningDescription();
      rawVariable2.getDisplayItemIdentifier();
      RawVariable rawVariable3 = new RawVariable();
      rawVariable3.getForm();
      rawVariable0.setAvailability("variable.availability.label");
      assertEquals("variable.availability.label", rawVariable0.getAvailability());
      
      rawVariable1.setColumnStart("Mre%X6$`AxUajz?(");
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      rawVariable3.addSupportingDocuments(arrayList1);
      rawVariable2.getCleaningStatus();
      User user1 = new User((String) null, (String) null);
      RawVariable.detectFieldChanges(user1, rawVariable1, rawVariable2);
      rawVariable2.getAlternativeVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user1, derivedVariable0, derivedVariable0);
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.673415053526696
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      supportingDocument0.getDisplayName();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.notes = "-";
      VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
      assertEquals("", variableSummary0.getYear());
      assertEquals(0, variableSummary0.getIdentifier());
      assertEquals("", variableSummary0.getName());
      assertEquals("", variableSummary0.getLabel());
      
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setFileName("macaw.system.MacawErrorType");
      derivedVariable0.containsSupportingDocument(supportingDocument1);
      derivedVariable0.addSupportingDocument(supportingDocument0);
      String string0 = derivedVariable0.getColumnEnd();
      assertEquals("", string0);
      
      String string1 = derivedVariable0.getFilePath();
      assertEquals("", string1);
      
      boolean boolean1 = derivedVariable0.isNewRecord();
      assertTrue(boolean1 == boolean0);
      
      String string2 = derivedVariable0.getAlias();
      assertEquals("", string2);
      
      derivedVariable0.getOntologyTerms();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.582160402760742
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument1);
      derivedVariable1.addSupportingDocument(supportingDocument1);
      derivedVariable1.getColumnEnd();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument3);
      boolean boolean1 = derivedVariable0.isNewRecord();
      assertTrue(boolean1 == boolean0);
      
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable1, derivedVariable0);
      assertEquals(0, macawChangeEvent0.getChangedObjectIdentifier());
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      
      derivedVariable1.getYear();
      assertFalse(derivedVariable1.isCleaned());
      assertFalse(derivedVariable1.isCoded());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.6598635624173648
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName("~^<NG_siK");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm1);
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertFalse(derivedVariable1.isCleaned());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.7550838911049205
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getNotes();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      User user0 = new User();
      user0.setPostCode("");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIdentifier(0);
      supportingDocument0.getDisplayName();
      supportingDocument0.setTitle("");
      supportingDocument0.setFileName("");
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.getIdentifier();
      rawVariable0.cloneAttributes(derivedVariable0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.addOntologyTerms(arrayList0);
      rawVariable0.setAlias((String) null);
      rawVariable0.clone();
      rawVariable0.clone();
      derivedVariable0.hasSameDisplayName(rawVariable0);
      rawVariable0.setName((String) null);
      derivedVariable0.setIdentifier(0);
      rawVariable0.clone();
      // Undeclared exception!
      try { 
        Variable.validateFields(rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIdentifier((-1205));
      supportingDocument0.setTitle("user.email.label");
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.setColumnEnd("user.email.label");
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.7092355599154843
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      rawVariable0.setCleaned(true);
      rawVariable0.questionNumber = null;
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setCoded(true);
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.2315252883863894
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlias("?[S/AaQvj&^YwA.");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.setNotes("");
      derivedVariable0.setAlias("");
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      ontologyTerm0.setOntologyName("");
      arrayList0.add(ontologyTerm0);
      arrayList0.subList(0, 0);
      arrayList0.listIterator(0);
      arrayList0.add(ontologyTerm0);
      arrayList0.parallelStream();
      arrayList0.clear();
      derivedVariable0.removeOntologyTerms(arrayList0);
      derivedVariable0.setNotes("8)p0_");
      derivedVariable0.setAlias("8)p0_");
      derivedVariable0.setColumnStart("");
      Variable.validateFields(derivedVariable0);
      derivedVariable0.getAlias();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setNameSpace("8)p0_");
      derivedVariable1.updateOntologyTerm(ontologyTerm1);
      derivedVariable0.hasSameDisplayName(derivedVariable1);
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable1.removeValueLabel(valueLabel0);
      derivedVariable1.addValueLabel(valueLabel0);
      derivedVariable0.addOntologyTerms(arrayList0);
      assertEquals("8)p0_", derivedVariable0.getNotes());
      
      User user0 = new User("UNABLE_TO_UPDATE_ONTOLOGY_TERM", "SJdv");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      ArrayList<MacawChangeEvent> arrayList1 = DerivedVariable.detectFieldChanges(user0, derivedVariable2, derivedVariable2);
      assertEquals(0, arrayList1.size());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.0831221229604164
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.addOntologyTerms(arrayList0);
      derivedVariable0.setIsNewRecord(false);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      rawVariable0.removeOntologyTerms(arrayList1);
      derivedVariable0.hasSameDisplayName(rawVariable0);
      rawVariable0.hasSameDisplayName(derivedVariable0);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.3558258304206885
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean0);
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
      assertEquals(0, variableSummary0.getIdentifier());
      
      ontologyTerm0.setOntologyName("~^<NG_siK");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm1);
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      String string0 = derivedVariable0.getCleaningStatus();
      assertNotNull(string0);
      assertEquals("Unknown", string0);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>(1);
      rawVariable0.setColumnStart("3dtso5s w");
      rawVariable0.setCleaningDescription("valueLabel.value.saveChanges");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      assertEquals("valueLabel.value.saveChanges", rawVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.421284995138365
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = "variable.questionNumber.label";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("variable.questionNumber.label");
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.setNotes("supportingDocument.fileName.saveChanges");
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.listIterator();
      arrayList0.add(ontologyTerm0);
      arrayList0.add(ontologyTerm0);
      rawVariable0.removeOntologyTerms(arrayList0);
      User user0 = new User("variable.saveChanges.valueChanged", "supportingDocument.fileName.saveChanges");
      ValueLabel.differencesExist(user0, rawVariable0, valueLabel0, valueLabel0);
      ontologyTerm0.setTerm("variable.questionNumber.label");
      rawVariable0.removeValueLabel(valueLabel0);
      rawVariable0.setCleaningStatus("variable.saveChanges.valueChanged");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.addValueLabel(valueLabel0);
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.setForm("^Z");
      rawVariable0.getColumnStart();
      ArrayList<SupportingDocument> arrayList1 = rawVariable0.getSupportingDocuments();
      arrayList1.iterator();
      rawVariable0.setSupportingDocuments(arrayList1);
      rawVariable0.setAlternativeVariable(derivedVariable0);
      rawVariable0.setCleaningDescription("");
      derivedVariable0.getLabel();
      assertEquals("^Z", derivedVariable0.getForm());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.8055124628724255
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<ValueLabel> arrayList0 = rawVariable0.getValueLabels();
      ValueLabel valueLabel0 = new ValueLabel();
      arrayList0.add(valueLabel0);
      ValueLabel valueLabel1 = new ValueLabel();
      User user0 = new User();
      ValueLabel.validateFields(valueLabel0);
      user0.setIdentifier((-2086126969));
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel.detectFieldChanges(user0, derivedVariable0, valueLabel1, valueLabel0);
      arrayList0.add(valueLabel1);
      rawVariable0.codeBookNumber = "";
      User user1 = new User("|JP_`&", "");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ValueLabel valueLabel2 = new ValueLabel();
      Variable.detectFieldChanges(user1, derivedVariable0, rawVariable0);
      valueLabel2.setMissingValue(true);
      derivedVariable0.addValueLabel(valueLabel1);
      derivedVariable1.setLabel("|JP_`&");
      derivedVariable1.getSourceVariables();
      // Undeclared exception!
      try { 
        rawVariable0.removeSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.746066410830336
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      User user1 = new User("%n0DKpG[}S6Bd1[2", "%n0DKpG[}S6Bd1[2");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = null;
      derivedVariable0.addOntologyTerm((OntologyTerm) null);
      // Undeclared exception!
      try { 
        derivedVariable0.updateOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.3798389570661653
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
      
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.addSupportingDocument(supportingDocument0);
      derivedVariable0.getColumnEnd();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertTrue(boolean0);
      
      derivedVariable0.getAlias();
      derivedVariable0.getName();
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.9699627658515864
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      String string0 = rawVariable0.getCategory();
      assertNotNull(string0);
      assertEquals("Unknown", string0);
      
      rawVariable0.getName();
      rawVariable0.getLabel();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIsNewRecord(true);
      supportingDocument0.setIdentifier(0);
      rawVariable0.addSupportingDocument(supportingDocument0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm1);
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      rawVariable0.setSupportingDocuments(arrayList0);
      User user0 = new User("variable.columnEnd.label", "user.status.unverified");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<MacawChangeEvent> arrayList1 = DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals(0, arrayList1.size());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.454482887875094
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
      assertEquals(0, variableSummary0.getIdentifier());
      
      SupportingDocument supportingDocument1 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument1);
      supportingDocument1.setTitle("UNABLE_TO_CLEAR_TABLE");
      derivedVariable0.addSupportingDocument(supportingDocument0);
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument1);
      RawVariable rawVariable0 = new RawVariable();
      ontologyTerm0.setTerm("UNABLE_TO_CLEAR_TABLE");
      boolean boolean1 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean1);
      
      SupportingDocument supportingDocument2 = new SupportingDocument();
      derivedVariable0.getColumnEnd();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      boolean boolean2 = derivedVariable1.containsSupportingDocument(supportingDocument2);
      assertFalse(boolean2 == boolean0);
      
      String string0 = derivedVariable0.getCategory();
      assertNotNull(string0);
      assertEquals("Unknown", string0);
      
      derivedVariable0.getOntologyTerms();
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCategory("variable.year.label");
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName("variable.year.label");
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      derivedVariable0.getQuestionNumber();
      derivedVariable0.getCodeBookNumber();
      derivedVariable0.addSourceVariables(arrayList0);
      assertEquals("variable.year.label", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.940988962482918
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable1.getOntologyTerms();
      rawVariable0.addOntologyTerms(arrayList0);
      rawVariable0.removeOntologyTerms(arrayList0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable2.updateOntologyTerm(ontologyTerm0);
      rawVariable0.cloneAttributes(derivedVariable1);
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable1, derivedVariable1);
      derivedVariable0.getDisplayName();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      derivedVariable2.containsSupportingDocument(supportingDocument0);
      derivedVariable1.setCleaned(true);
      derivedVariable2.setForm("");
      derivedVariable0.setName("kQ(hD1TH@,3x");
      derivedVariable1.getCleaningDescription();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      rawVariable0.removeSupportingDocuments(arrayList2);
      DerivedVariable derivedVariable3 = new DerivedVariable();
      derivedVariable0.cloneAttributes(derivedVariable1);
      assertEquals("kQ(hD1TH@,3x", derivedVariable1.getName());
      assertEquals("kQ(hD1TH@,3x", derivedVariable0.getName());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.583838507642472
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      rawVariable0.setCleaned(true);
      rawVariable0.questionNumber = null;
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.2215523079930732
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      derivedVariable0.createVariableSummary();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setForm("variable.cleaningStatus.label");
      derivedVariable1.addSupportingDocument(supportingDocument0);
      derivedVariable1.getColumnEnd();
      derivedVariable1.containsSupportingDocument(supportingDocument0);
      derivedVariable0.removeSourceVariable(derivedVariable1);
      assertEquals("variable.cleaningStatus.label", derivedVariable1.getForm());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.568413258053965
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("variable.questionNumber.label");
      arrayList0.add(ontologyTerm0);
      rawVariable0.removeOntologyTerms(arrayList0);
      rawVariable0.setFilePath("variable.questionNumber.label");
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=3.949561029419363
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = "variable.questionNumber.label";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("variable.questionNumber.label");
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.setNotes("supportingDocument.fileName.saveChanges");
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.listIterator();
      arrayList0.add(ontologyTerm0);
      arrayList0.add(ontologyTerm0);
      rawVariable0.removeOntologyTerms(arrayList0);
      User user0 = new User("variable.saveChanges.valueChanged", "supportingDocument.fileName.saveChanges");
      ValueLabel.differencesExist(user0, rawVariable0, valueLabel0, valueLabel0);
      ontologyTerm0.setTerm("variable.questionNumber.label");
      rawVariable0.removeValueLabel(valueLabel0);
      rawVariable0.setCleaningStatus("variable.saveChanges.valueChanged");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.addValueLabel(valueLabel0);
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.setForm("^Z");
      rawVariable0.getColumnStart();
      ArrayList<SupportingDocument> arrayList1 = rawVariable0.getSupportingDocuments();
      arrayList1.iterator();
      rawVariable0.setSupportingDocuments(arrayList1);
      arrayList0.clear();
      derivedVariable0.removeOntologyTerms(arrayList0);
      derivedVariable0.cloneAttributes(rawVariable0);
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.495914456064185
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(true);
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.getColumnEnd();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      derivedVariable0.setYear("{N <ce,# 0");
      arrayList0.parallelStream();
      assertEquals("{N <ce,# 0", derivedVariable0.getYear());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.setNotes("");
      derivedVariable0.setAlias("");
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      derivedVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      ontologyTerm0.setNewRecord(false);
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      // Undeclared exception!
      try { 
        arrayList0.subList(92, 958);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // toIndex = 958
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm((String) null);
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.setQuestionNumber(">o UAXTc4'Ep");
      rawVariable0.questionNumber = "'9d?kcUy";
      rawVariable0.removeSupportingDocuments(arrayList0);
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      assertFalse(supportingDocument1.equals((Object)supportingDocument0));
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.6585173550746726
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      rawVariable0.setCleaned(true);
      rawVariable0.questionNumber = null;
      User user0 = new User();
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.removeSourceVariables(arrayList0);
      derivedVariable0.setAvailability((String) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.columnEnd = "UNABLE_TO_CREATE_AVAILABILITY_STATE";
      derivedVariable1.setAlias("UNABLE_TO_CREATE_AVAILABILITY_STATE");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable1.removeOntologyTerm(ontologyTerm0);
      assertEquals("UNABLE_TO_CREATE_AVAILABILITY_STATE", derivedVariable1.getAlias());
      
      derivedVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.setSourceVariables((ArrayList<Variable>) null);
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("");
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      rawVariable0.addSupportingDocuments(arrayList0);
      String string0 = rawVariable0.getAvailability();
      assertEquals("Unknown", string0);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=3.708665825820528
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAvailability((String) null);
      rawVariable0.setCleaningStatus("nR%Ca[Yv>&'8j{X");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.cloneAttributes(rawVariable1);
      rawVariable1.setCodeBookNumber((String) null);
      rawVariable0.getAvailability();
      rawVariable1.isCoded();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      rawVariable1.removeOntologyTerm(ontologyTerm0);
      rawVariable1.isCoded();
      assertEquals("nR%Ca[Yv>&'8j{X", rawVariable1.getCleaningStatus());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIsNewRecord(false);
      supportingDocument0.setIdentifier(0);
      supportingDocument0.setIsNewRecord(false);
      rawVariable0.removeSupportingDocument(supportingDocument0);
      rawVariable0.columnStart = "1(TX\">b ";
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      rawVariable0.setOntologyTerms(arrayList0);
      // Undeclared exception!
      try { 
        rawVariable0.removeSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnStart = "#F1:qY";
      rawVariable0.setNotes(" i6)qNi");
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.removeValueLabel(valueLabel0);
      rawVariable0.getForm();
      rawVariable0.getForm();
      rawVariable0.setLabel("");
      assertEquals(" i6)qNi", rawVariable0.getNotes());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.6772245773362195
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<ValueLabel> arrayList0 = rawVariable0.getValueLabels();
      rawVariable0.setValueLabels(arrayList0);
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList1.add(ontologyTerm0);
      arrayList1.ensureCapacity((-2335));
      rawVariable0.addOntologyTerms(arrayList1);
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      rawVariable0.removeOntologyTerms(arrayList2);
      ontologyTerm0.setOntologyName("UNABLE_TO_CHECK_ONTOLOGY_TERM_ASSOCIATION_DUPLICATE");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.addOntologyTerm(ontologyTerm1);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.updateOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      assertTrue(ontologyTerm2.isNewRecord());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName("~^<NG_siK");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.addSupportingDocument(supportingDocument0);
      derivedVariable0.getColumnEnd();
      derivedVariable0.getFilePath();
      boolean boolean1 = derivedVariable0.isCoded();
      assertTrue(boolean1 == boolean0);
      
      derivedVariable1.getColumnStart();
      assertFalse(derivedVariable1.isNewRecord());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals(0, derivedVariable1.getIdentifier());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.431259504143956
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = "variable.questionNumber.label";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("variable.questionNumber.label");
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.setNotes("supportingDocument.fileName.saveChanges");
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm0);
      arrayList0.add(ontologyTerm0);
      rawVariable0.removeOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm1);
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      assertFalse(ontologyTerm2.equals((Object)ontologyTerm1));
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.1944064129383247
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFileName((String) null);
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean0);
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName("~^<NG_siK");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm1);
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      derivedVariable0.getNotes();
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=3.5810346049146524
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      User user0 = new User();
      user0.setCounty((String) null);
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setLabel((String) null);
      ValueLabel valueLabel1 = new ValueLabel();
      User user1 = new User("%n0DKp[}S6Bd1[2", "%n0DKp[}S6Bd1[2");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel2 = new ValueLabel();
      derivedVariable0.addValueLabel(valueLabel1);
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.removeSupportingDocuments(arrayList0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.cloneAttributes(rawVariable0);
      assertFalse(rawVariable0.isCleaned());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("Unknown", rawVariable0.getCategory());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.6772245773362195
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlias("?[S/AaQvj&^YwA.");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.setNotes("");
      derivedVariable0.setAlias("");
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.removeValueLabel(valueLabel0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFilePath("");
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      derivedVariable0.setName("?[S/AaQvj&^YwA.");
      derivedVariable0.setCategory("");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setOntologyName("C?o1nxH(E)z\"_HLje");
      User user0 = new User("variable.questionNumber.label", "i_.6zpm ");
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setIdentifier(488);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm2, ontologyTerm3);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      ontologyTerm4.setIdentifier((-2075900857));
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      boolean boolean0 = derivedVariable0.hasSameDisplayName(derivedVariable1);
      assertEquals("?[S/AaQvj&^YwA.", derivedVariable0.getDisplayName());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(true);
      RawVariable rawVariable0 = new RawVariable();
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean0);
      
      rawVariable0.getSupportingDocuments();
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIdentifier(1);
      rawVariable0.setName("");
      rawVariable0.columnEnd = "Ry+";
      rawVariable0.getDisplayName();
      assertEquals("1", rawVariable0.getDisplayItemIdentifier());
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getSourceVariables();
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=3.7643543240279156
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      User user0 = new User("Mre%X6$`AxUajz?(", "Mre%X6$`AxUajz?(");
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable1, rawVariable0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertNotNull(macawChangeEvent0);
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.addOntologyTerms(arrayList0);
      rawVariable0.cloneAttributes(rawVariable1);
      rawVariable0.getAlternativeVariable();
      int int0 = rawVariable1.getIdentifier();
      assertEquals(0, int0);
      
      ArrayList<String> arrayList1 = Variable.validateFields(rawVariable1);
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertFalse(rawVariable1.isCleaned());
      assertFalse(rawVariable1.isCoded());
      assertEquals(1, arrayList1.size());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=3.883833805784883
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = "variable.questionNumber.label";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("variable.questionNumber.label");
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      arrayList0.ensureCapacity((-2028178998));
      rawVariable0.addOntologyTerms(arrayList0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      rawVariable0.removeOntologyTerms(arrayList1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm2);
      rawVariable0.cloneAttributes(derivedVariable0);
      User user0 = new User();
      User user1 = new User((String) null, "o");
      Variable.detectChangesInAlternativeVariable(user1, rawVariable0, rawVariable0);
      derivedVariable0.getDisplayName();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm1.setTerm("");
      rawVariable0.containsOntologyTerm(ontologyTerm1);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.getColumnEnd();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.containsSupportingDocument(supportingDocument0);
      rawVariable0.getName();
      assertEquals("variable.questionNumber.label", rawVariable0.getColumnEnd());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=3.7020843809584587
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<ValueLabel> arrayList0 = derivedVariable0.getValueLabels();
      ValueLabel valueLabel0 = new ValueLabel();
      arrayList0.add(valueLabel0);
      ValueLabel valueLabel1 = new ValueLabel();
      User user0 = new User();
      ValueLabel.validateFields(valueLabel1);
      user0.setIdentifier((-669));
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ValueLabel valueLabel2 = new ValueLabel();
      ValueLabel.detectFieldChanges(user0, derivedVariable1, valueLabel2, valueLabel1);
      arrayList0.add(valueLabel2);
      User user1 = new User("", "TQZg(U@R");
      Variable.detectChangesInAlternativeVariable(user1, derivedVariable1, derivedVariable0);
      derivedVariable1.cloneAttributes(derivedVariable0);
      ValueLabel valueLabel3 = new ValueLabel();
      valueLabel3.setMissingValue(true);
      derivedVariable0.addValueLabel(valueLabel2);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable1.hasSameDisplayName(derivedVariable2);
      derivedVariable2.setLabel("");
      assertEquals("0", derivedVariable2.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=3.663715948892564
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      User user1 = new User();
      RawVariable rawVariable2 = new RawVariable();
      RawVariable.detectFieldChanges(user1, rawVariable1, rawVariable2);
      RawVariable rawVariable3 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      RawVariable rawVariable4 = new RawVariable();
      rawVariable4.removeSupportingDocuments(arrayList0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.setQuestionNumber("KH3b");
      derivedVariable2.cloneAttributes(rawVariable1);
      assertEquals("KH3b", rawVariable1.getQuestionNumber());
      
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      derivedVariable0.setSourceVariables(arrayList1);
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=3.70816141220136
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaningDescription("v-KtKDK[@8zmz<");
      rawVariable0.isCoded();
      rawVariable0.getOntologyTerms();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.cloneAttributes(rawVariable1);
      assertEquals("v-KtKDK[@8zmz<", rawVariable1.getCleaningDescription());
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.setSourceVariables(arrayList0);
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=3.739393192209493
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = "variable.questionNumber.label";
      rawVariable0.setNotes("supportingDocument.fileName.saveChanges");
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.listIterator();
      rawVariable0.removeOntologyTerms(arrayList0);
      User user0 = new User("variable.saveChanges.valueChanged", "supportingDocument.fileName.saveChanges");
      ValueLabel.differencesExist(user0, rawVariable0, valueLabel0, valueLabel0);
      User user1 = new User("supportingDocument.fileName.saveChanges", "");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.cloneAttributes(rawVariable0);
      ValueLabel valueLabel2 = new ValueLabel();
      valueLabel2.setMissingValue(false);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.addValueLabel(valueLabel1);
      derivedVariable0.hasSameDisplayName(rawVariable0);
      assertEquals("", rawVariable0.getColumnEnd());
      
      derivedVariable0.setLabel("variable.saveChanges.valueChanged");
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.415600505453946
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      supportingDocument0.setTitle("j]NVzLmpO6Yx%e~");
      VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
      
      SupportingDocument supportingDocument1 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument1);
      supportingDocument1.setTitle("UNABLE_TO_CLEAR_TABLE");
      derivedVariable0.addSupportingDocument(supportingDocument0);
      boolean boolean1 = derivedVariable0.containsSupportingDocument(supportingDocument1);
      assertFalse(boolean1 == boolean0);
      
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.addSourceVariable(rawVariable0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.parallelStream();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<Variable> arrayList1 = derivedVariable1.getSourceVariables();
      derivedVariable0.removeSourceVariables(arrayList1);
      ArrayList<String> arrayList2 = Variable.validateFields(derivedVariable1);
      assertFalse(derivedVariable1.isCleaned());
      assertFalse(derivedVariable1.isCoded());
      assertEquals(1, arrayList2.size());
      assertFalse(derivedVariable1.isNewRecord());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=3.7418796790491555
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.clone();
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectChangesInAlternativeVariable((User) null, rawVariable1, (Variable) null);
      rawVariable0.setCleaningDescription("g<aT[,e%30|;");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.cloneAttributes(derivedVariable0);
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.8408855330084224
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      User user1 = new User("%n0DKpG[}S6Bd1[2", "%n0DKpG[}S6Bd1[2");
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.getDisplayItemIdentifier();
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertFalse(rawVariable1.isCoded());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertFalse(rawVariable1.isNewRecord());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.495914456064185
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.notes = "variable.questionNumber.label";
      derivedVariable0.createVariableSummary();
      assertFalse(derivedVariable0.isCleaned());
      
      derivedVariable0.setCleaned(true);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(true);
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.getColumnEnd();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      arrayList0.parallelStream();
      assertTrue(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=3.625071549495739
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable1.getSupportingDocuments();
      rawVariable0.removeSupportingDocuments(arrayList0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.cloneAttributes(rawVariable1);
      assertEquals("Unknown", rawVariable1.getCategory());
      assertFalse(rawVariable1.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertFalse(rawVariable1.isCoded());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("Unknown", rawVariable1.getAvailability());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      boolean boolean0 = rawVariable0.isCleaned();
      assertFalse(boolean0);
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
  }
}
