/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 19:29:05 GMT 2019
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedOutputStream;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.SequenceInputStream;
import java.net.URI;
import java.util.Enumeration;
import java.util.LinkedList;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Packable;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.647826624623992
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)100;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)100;
      byteArray0[3] = (byte) (-73);
      byteArray0[4] = (byte)18;
      byteArray0[5] = (byte) (-59);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Player player0 = new Player(486, "state.Player", 486);
      player0.setDead();
      int int0 = (-1);
      Player player1 = new Player((-1406), "-bG", (-1));
      player0.head = (Party) player1;
      player0.gangStrength();
      player0.getPictureId();
      player0.add(player1);
      player0.getPictureId();
      player0.getPictureId();
      player0.type();
      player0.getY();
      player0.getY();
      boolean boolean0 = true;
      // Undeclared exception!
      player1.gangStrength();
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.678706058817701
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Player player0 = new Player();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      player0.pack();
      Player player1 = new Player((short)4919);
      player0.isJoinOK(player1, false);
      Player player2 = new Player(296, (String) null, "CJpp=&pd_SFlw-zybze", (short)4919);
      boolean boolean0 = player2.isJoinOK(player0, true);
      assertEquals("Player-1", player0.toString());
      assertFalse(boolean0);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player0.getPictureId());
      
      String string0 = player2.getIP();
      assertNull(string0);
      
      float float0 = player2.getZ();
      assertEquals(0.0F, float0, 0.01F);
      
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("h@q/G%U", false);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
      player2.pack(dataOutputStream0);
      assertEquals(0.0F, player2.getY(), 0.01F);
      assertEquals(10.0F, player2.getX(), 0.01F);
      assertEquals(1, player2.getStrength());
      assertFalse(player2.isDead());
      assertEquals(0L, player2.getTimeOfDeath());
      assertEquals(4919, player2.getPictureId());
      assertTrue(player2.isConnected());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.9687776175299367
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Player player0 = new Player((-262), "", "", 482, 10);
      player0.setZ((-3448.579F));
      player0.getX();
      Player player1 = new Player();
      player0.add(player1);
      player0.next = (Party) player1;
      player1.setDead(1392409281320L);
      System.setCurrentTimeMillis(482);
      player0.type();
      player0.getX();
      System.setCurrentTimeMillis(865L);
      player0.toString();
      player0.isJoinOK(player1, false);
      DataInputStream dataInputStream0 = null;
      // Undeclared exception!
      try { 
        player0.unpack((DataInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.970620935502287
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Player player0 = new Player((-1698), "*Zy!Z", "", (-1698), (-1168));
      player0.setDead();
      Player player1 = new Player((short)4919, "Player.unpack(): *** WARNING *** data is not of proper type!", "#eosKu9", (-1168));
      player0.isJoinOK(player1, false);
      player1.getMoney();
      player1.setY((short)4919);
      player0.setDead((long) (-1698));
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      player0.getStrength();
      player1.getX();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      int int0 = (-1621);
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream(pipedOutputStream0, (-1621));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Player player0 = new Player(2807);
      player0.toString();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)10;
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte) (-52);
      byteArray0[5] = (byte) (-10);
      byteArray0[6] = (byte)10;
      player0.unpack(byteArray0);
      System.setCurrentTimeMillis((short)4919);
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player((-1988), "", "(q)SwbJQE_o92_7M", 5);
      player0.getX();
      player0.reset(true);
      Locale locale0 = new Locale("(q)SwbJQE_o92_7M", "d8z1Oakjya~VlB~z", "t.+|2h>ArRbQ&elZn6=");
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      player0.getMoney();
      player0.setDead((long) 0, false);
      player0.getIP();
      assertTrue(player0.isDead());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.5554870467334947
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Player player0 = new Player();
      player0.pack();
      player0.getX();
      player0.isDead();
      player0.getX();
      player0.setDead();
      player0.gangStrength();
      player0.getZ();
      Player player1 = new Player((short)4919);
      byte[] byteArray0 = player1.pack();
      player0.isJoinOK(player1, true);
      player0.setZ((-2124.0F));
      player0.reset(true);
      player1.unpack(byteArray0);
      player0.setY(1.0F);
      player0.getX();
      Player player2 = new Player((short)4919, ".*[.]class$", ".*[.]class$", 916);
      player2.gangStrength();
      player2.getStrength();
      player1.getMoney();
      player1.reset(false);
      player2.setConnected(true);
      player2.getZ();
      player0.getZ();
      player0.reset(false);
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.2414625352988633
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = player0.pack();
      player0.getX();
      player0.reset(true);
      player0.setDead((-1350L), true);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      player0.unpack(dataInputStream0);
      player0.setDead(0L, true);
      Player player1 = new Player();
      player1.gangStrength();
      Player player2 = new Player((short)4919, "e]F*C@&:u||f#", "e]F*C@&:u||f#", 0);
      player2.pack();
      player0.setConnected(true);
      player2.getName();
      player2.isConnected();
      player2.setX(0.0F);
      player0.setY((-1350L));
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream("e]F*C@&:u||f#");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.197846119469557
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Player player0 = new Player(0, "EhXMt\"!$qc+p", "E#j1!;$", 0);
      player0.setDead(2045L);
      Player player1 = new Player((short)4919, "E#j1!;$", "1PEwX'^W\"", 5238, 5238);
      player1.getSubparty();
      player0.setX(0.0F);
      player1.setJoinOK(player0, false);
      player0.setY(0.0F);
      player0.pack();
      player0.setY(2045L);
      Player player2 = new Player((short)4919, "1PEwX'^W\"", "Yh{pD-E_~5.1Wb_t%R", (short)4919, (-1280));
      player1.isJoinOK(player2, false);
      player0.getIP();
      player2.getZ();
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("vje", false);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Simulated IOException
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)54;
      byteArray0[1] = (byte)54;
      byteArray0[2] = (byte)54;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      Player player0 = new Player((byte)54, "*Ng.k(6a9dS'io", "*Ng.k(6a9dS'io", 24886);
      int int0 = 5888;
      Player player1 = new Player((byte)54, "module.ModuleBrowserDialog$ModuleFilter", "*Ng.k(6a9dS'io", 5888);
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.127712680255688
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Player player0 = new Player(0, "EhXMt\"!$qc+p", "E#j1!;$", 0);
      player0.setDead(2045L);
      Player player1 = new Player(0, "EhXMt\"!$qc+p", "1PEwX'^W\"", 0, 0);
      player1.id = 0;
      player0.getSubparty();
      player1.setZ(0.0F);
      player1.setJoinOK(player0, false);
      player0.head = (Party) player1;
      player1.setY(0);
      player0.setY(1.7317996F);
      player1.isJoinOK(player0, true);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-5);
      byteArray0[2] = (byte)0;
      player1.unpack(byteArray0);
      player0.type();
      player0.setDead((-562L));
      player0.getTimeOfDeath();
      assertEquals(1.7317996F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.022794924510636
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player(0, "+Qw.ro", "+Qw.ro", 0, 0);
      player0.setDead(573L, true);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)10;
      byteArray0[2] = (byte)105;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      player0.unpack(dataInputStream0);
      player0.setDead((long) 0, true);
      player0.gangStrength();
      player0.pack();
      player0.getName();
      player0.isConnected();
      player0.setX((-1591.0808F));
      player0.setY(0);
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream("+Qw.ro");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.053085404600997
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Player player0 = new Player(0, "+Qw.ro", 0);
      player0.setDead(607L, true);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)0;
      Player player1 = new Player((byte)0, "", "", (byte)0);
      player0.setJoinOK(player1, false);
      player0.setY(0);
      player1.setY((byte)0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      player0.isJoinOK(player1, true);
      player0.setZ(2513.7642F);
      player1.unpack(byteArray0);
      player1.type();
      player1.setDead((long) 5);
      long long0 = player0.getTimeOfDeath();
      assertEquals(2513.7642F, player0.getZ(), 0.01F);
      assertEquals(607L, long0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.021517785302462
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)97;
      byteArray0[1] = (byte)54;
      byteArray0[2] = (byte)54;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      Player player0 = new Player((byte)54, "state.Party", "state.Party", (byte)97);
      player0.unpack(dataInputStream0);
      player0.setDead((-3147L), false);
      player0.gangStrength();
      player0.pack();
      player0.setConnected(false);
      player0.getName();
      player0.isConnected();
      player0.setX(1316.0F);
      player0.setY((-3147L));
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream("");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.8836095585126564
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Player player0 = new Player((-3891), ".*[.]class$", ".*[.]class$", 0);
      Player player1 = new Player((-3891), "state.Player$JoinInfo", "XA", 5, 2582);
      player0.setDead((long) 2582, true);
      Player player2 = (Player)player1.gangBoss();
      player0.boss = (Party) player2;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)19;
      byteArray0[2] = (byte) (-57);
      byteArray0[3] = (byte)0;
      player2.setDead((long) (byte) (-57), false);
      player2.getX();
      player0.setZ(2582);
      player2.setConnected(true);
      player0.getZ();
      Player player3 = new Player();
      player3.getZ();
      player0.reset(false);
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.966442007031004
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Player player0 = new Player(0, "EhXMt\"!$qc+p", "E#j1!;$", 0);
      player0.setDead(2045L);
      Player player1 = new Player(0, "EhXMt\"!$qc+p", "1PEwX'^W\"", 0, 0);
      player1.id = 0;
      player0.getSubparty();
      player1.setJoinOK(player0, false);
      player0.head = (Party) player1;
      player1.setY(0);
      player1.id = (-2355);
      player1.isJoinOK(player0, true);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-5);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)33;
      byteArray0[3] = (byte)0;
      player0.type();
      assertEquals(2045L, player0.getTimeOfDeath());
      
      player0.setDead((long) 0);
      player0.gangStrength();
      float float0 = player0.getY();
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.673415053526696
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Player player0 = new Player();
      player0.pack();
      player0.getX();
      player0.reset(true);
      player0.setConnected(true);
      Locale locale0 = new Locale("Player.pack(): *** ERROR *** [IO] pack failed! current state is inconsistent: ", "d8z1Oakjya~VlB~z", "E!6)cm%7:]A\u0007<Bb[6");
      Object object0 = new Object();
      Object object1 = new Object();
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = object1;
      objectArray0[2] = (Object) "E!6)cm%7:]A\u0007<Bb[6";
      objectArray0[3] = (Object) player0;
      Object object2 = new Object();
      objectArray0[4] = object2;
      objectArray0[5] = (Object) "WRY~^*O%>3`";
      objectArray0[6] = object1;
      player0.getMoney();
      player0.setDead(1L, true);
      PipedInputStream pipedInputStream0 = new PipedInputStream(610);
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(1L, player0.getTimeOfDeath());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.471659105458744
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Player player0 = new Player(0, "&3.M1", 0);
      player0.setDead((long) 0);
      player0.getSubparty();
      player0.pack();
      player0.gangStrength();
      player0.isDead();
      player0.getX();
      player0.setDead();
      player0.getZ();
      Player player1 = new Player((-1089));
      byte[] byteArray0 = player1.pack();
      player0.isJoinOK(player1, true);
      player1.setZ(10.0F);
      player1.reset(false);
      player1.setDead();
      player0.unpack(byteArray0);
      player1.setY((-2359.1472F));
      player0.getX();
      player0.gangStrength();
      player0.getStrength();
      player1.getMoney();
      player0.unpack(byteArray0);
      float float0 = player0.getX();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
      assertEquals(10.0F, float0, 0.01F);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.124771615329544
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Player player0 = new Player((-2111), "", "", 1846, (-2111));
      player0.setDead((long) 1108);
      Party party0 = new Party(1108);
      player0.boss = party0;
      player0.getSubparty();
      player0.setDead((-1132L), true);
      player0.isDead();
      player0.getX();
      Player player1 = new Player(0, "", 0);
      player0.isJoinOK(player1, false);
      player0.setJoinOK(player1, false);
      assertEquals((-1132L), player0.getTimeOfDeath());
      
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte)21;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-89);
      byteArray0[4] = (byte)1;
      player1.unpack(byteArray0);
      float float0 = player1.getMoney();
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.888488895463434
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      int int0 = 0;
      Player player0 = new Player(0, "EhXMt\"!$qc+p", "E#j1!;$", 0);
      player0.setDead(2045L);
      Player player1 = new Player(0, "EhXMt\"!$qc+p", "1PEwX'^W\"", 0, 0);
      player1.id = 0;
      player0.getSubparty();
      player1.setZ(0.0F);
      player1.setJoinOK(player0, false);
      player0.head = (Party) player1;
      player1.setY(0);
      player0.setY(0.0F);
      player1.isJoinOK(player0, true);
      // Undeclared exception!
      try { 
        player0.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.555632017870312
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      int int0 = 0;
      Player player0 = new Player(0, "", " ", 0, 0);
      Party party0 = player0.boss;
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      player0.unpack(dataInputStream0);
      player0.head = null;
      player0.getIP();
      player0.getY();
      player0.getMoney();
      player0.toString();
      DataInputStream dataInputStream1 = new DataInputStream((InputStream) null);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Player player0 = new Player(2334, "", 2334);
      player0.getSubparty();
      player0.pack();
      player0.getName();
      float float0 = player0.getX();
      assertEquals(10.0F, float0, 0.01F);
      
      String string0 = player0.getIP();
      assertEquals("0.0.0.0", string0);
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertEquals(2334, player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Player player0 = new Player(5);
      int int0 = player0.type();
      assertEquals(5, int0);
      
      float float0 = player0.getY();
      assertEquals(0.0F, float0, 0.01F);
      
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)3;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("Player5", player0.toString());
      assertEquals(0, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", player0.getIP());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Player player0 = new Player(0, "state.Party", "state.Party", 0, (-1875));
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("state.Party", false);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
      player0.pack(dataOutputStream0);
      assertEquals((-1875), player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.1952296882816973
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Player player0 = new Player(0, "state.Player$JoinInfo", "gui.ModuleBrowserDialog$ModuleFilter", 0, 0);
      player0.setZ(0.0F);
      player0.reset(true);
      player0.setMoney(0.0F);
      Player player1 = new Player(0);
      player0.add(player1);
      player1.setJoinOK(player0, false);
      player1.getMoney();
      player1.type();
      player1.pack();
      player0.setZ(1416.6405F);
      player1.getMoney();
      player0.getStrength();
      player1.reset(true);
      player0.getIP();
      assertEquals(1416.6405F, player0.getZ(), 0.01F);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.9663881312694826
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)97;
      byteArray0[1] = (byte)54;
      byteArray0[2] = (byte)54;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      Player player0 = new Player((byte)54, "state.Party", "state.Party", (byte)97);
      player0.unpack(dataInputStream0);
      Player player1 = new Player((byte)97);
      player1.getSubparty();
      player0.setX(3480.3503F);
      player1.setJoinOK(player0, false);
      player0.setY(2140.8F);
      player0.pack();
      player1.getStrength();
      player0.getY();
      URI uRI0 = MockURI.URI("state.Party", ">P@e=(rp1N#0bB", "", "", "");
      MockFile mockFile0 = null;
      try {
        mockFile0 = new MockFile(uRI0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // URI scheme is not \"file\"
         //
         verifyException("java.io.File", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Player player0 = new Player(2874, "Player.unpack(): *** WARNING *** [IO] failed to unpack data: ", "Player.unpack(): *** WARNING *** [IO] failed to unpack data: ", 1009);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(byteArrayOutputStream0);
      dataOutputStream0.close();
      byteArrayOutputStream0.write(0);
      dataOutputStream0.write(2874);
      player0.pack(dataOutputStream0);
      assertEquals("\u0000:\u00137:\u0000\u0001\u0003\uFFFDA \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000=Player.unpack(): *** WARNING *** [IO] failed to unpack data: ", byteArrayOutputStream0.toString());
      
      player0.getPictureId();
      player0.setConnected(true);
      player0.getY();
      float float0 = player0.getZ();
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      String string0 = null;
      int int0 = 1;
      Player player0 = new Player(5, "state.Party", (String) null, 5, 1);
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.975507230548075
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Player player0 = new Player(0, "EhXMt\"!$qc+p", "E#j1!;$", 0);
      player0.setDead(2045L);
      Player player1 = new Player(0, "EhXMt\"!$qc+p", "1PEwX'^W\"", 7, 7);
      player1.id = 0;
      player1.getSubparty();
      player0.setX(0);
      player1.setJoinOK(player0, false);
      player0.head = (Party) player1;
      player1.setY(0);
      player1.setY(0.0F);
      player1.isJoinOK(player0, false);
      player1.setZ(0.0F);
      int int0 = Packable.PLAYER;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ".*[.]class$");
      player0.setDead(3084L);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      player1.reset(false);
      PipedOutputStream pipedOutputStream1 = null;
      try {
        pipedOutputStream1 = new PipedOutputStream(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Player player0 = new Player(2732, "state.Player$JoinInfo", "W.&cBU39N]'#", 4919, 1);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("P6woImR%$", true);
      MockFile mockFile0 = new MockFile("k2%x/s");
      // Undeclared exception!
      try { 
        player0.unpack((DataInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.8872569749260304
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = player0.pack();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      MockFile.createTempFile("E#j1!;$", "E#j1!;$");
      Player player1 = new Player((short)4919, "E#j1!;$", "L<g`njmot%}K", 1605);
      Player player2 = new Player(13878, (String) null, "L<g`njmot%}K", (short)4919, (short)4919);
      Player player3 = new Player((short)4919);
      byteArrayInputStream0.skip((short)4919);
      LinkedList<Party> linkedList0 = new LinkedList<Party>();
      player0.setX((short)4919);
      player0.setY(0.2F);
      player1.pack();
      Player player4 = new Player(5432, "L<g`njmot%}K", "zvN", 1605);
      player4.setY(0.2F);
      player4.getIP();
      player0.getZ();
      DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) null);
      // Undeclared exception!
      try { 
        player1.pack(dataOutputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataOutputStream", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.455760027083268
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Player player0 = new Player((byte)54, "state.Party", ",Dl", (byte)54);
      Player player1 = new Player((short)4919, "", "", (byte)54);
      player1.setJoinOK(player0, false);
      player0.setY(0.0F);
      player1.isJoinOK(player0, true);
      Player player2 = new Player((byte)54, (String) null, "&id>lO:w", (byte)54);
      player2.setZ(0.2F);
      int int0 = Packable.PLAYER;
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      PipedOutputStream pipedOutputStream1 = null;
      try {
        pipedOutputStream1 = new PipedOutputStream(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.45126227595883
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)97;
      Player player0 = new Player((byte)97, "state.Party", "&id>lO:w", 1);
      Player player1 = new Player(0, "state.Party", "gui.ModuleBrowserDialog$ModuleFilter", 1);
      player1.setJoinOK(player0, false);
      player0.setY(0.0F);
      player1.isJoinOK(player0, false);
      player0.setZ((byte)54);
      int int0 = Packable.PLAYER;
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      PipedOutputStream pipedOutputStream1 = null;
      try {
        pipedOutputStream1 = new PipedOutputStream(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.7853437136837007
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Player player0 = new Player(3, "", (String) null, 3, 3);
      player0.getSubparty();
      player0.setY(3);
      player0.setX(3);
      Player player1 = new Player();
      player0.remove(player1);
      Player player2 = new Player(2194);
      player0.next = (Party) player2;
      player0.getSubparty();
      player0.setX(0.0F);
      player0.type();
      player0.isConnected();
      player0.setZ(5);
      player0.setX((-1.0F));
      assertEquals(5.0F, player0.getZ(), 0.01F);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Player player0 = new Player(20330, "zn0vd=RqRL|i<@", 20330);
      String string0 = player0.getIP();
      assertEquals("0.0.0.0", string0);
      
      Party party0 = new Party();
      player0.next = party0;
      float float0 = player0.getY();
      assertEquals(0.0F, float0, 0.01F);
      
      int int0 = player0.type();
      assertEquals(5, int0);
      
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)116;
      byteArray0[1] = (byte)56;
      byteArray0[3] = (byte)110;
      party0.boss = player0.next;
      byteArray0[4] = (byte)0;
      int int1 = player0.getPictureId();
      assertEquals(20330, int1);
      
      int int2 = player0.getStrength();
      assertTrue(player0.isConnected());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(1, int2);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Player player0 = new Player();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      System.setCurrentTimeMillis((-403L));
      float float0 = player0.getY();
      assertEquals(0.0F, float0, 0.01F);
      
      int int0 = player0.getPictureId();
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertFalse(player0.isDead());
      assertEquals("Player-1", player0.getName());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/27_gangup");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "W.&cBU39N]'#");
      Player player0 = new Player(0, "state.Party", "state.Party", 0, (-1875));
      player0.setMoney(0);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("state.Party");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("state.Party", false);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Player player0 = new Player();
      player0.getZ();
      player0.getName();
      player0.getZ();
      player0.getPictureId();
      player0.getTimeOfDeath();
      ObjectInputStream objectInputStream0 = null;
      try {
        objectInputStream0 = new ObjectInputStream((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ObjectInputStream$PeekInputStream", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.7808459625592628
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Player player0 = new Player();
      player0.pack();
      player0.getX();
      player0.reset(true);
      player0.setConnected(true);
      Locale locale0 = new Locale("Player.pack(): *** ERROR *** [IO] pack failed! current state is inconsistent: ", "d8z1Oakjya~VlB~z", "E!6)cm%7:]A\u0007<Bb[6");
      Object object0 = new Object();
      Object object1 = new Object();
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = object1;
      objectArray0[2] = (Object) "E!6)cm%7:]A\u0007<Bb[6";
      objectArray0[3] = (Object) player0;
      Object object2 = new Object();
      objectArray0[4] = object2;
      objectArray0[5] = (Object) "WRY~^*O%>3`";
      objectArray0[6] = object1;
      player0.getMoney();
      Player player1 = new Player((short)4919);
      player0.next = (Party) player1;
      player0.setDead(1L, true);
      player0.getName();
      assertEquals(1L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/27_gangup");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "");
      Player player0 = new Player(0, "state.Party", "state.Party", 0, (-1875));
      player0.gangStrength();
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("state.Party");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("state.Party", true);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.678706058817701
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Player player0 = new Player((-1029), "&id>lO:w", "", 4919);
      Player player1 = new Player((-904), "gui.ModuleBrowserDialog$ModuleFilter", "", (-1029));
      player1.setJoinOK(player0, true);
      player1.setY(0.2F);
      Player player2 = new Player();
      player2.isJoinOK(player1, true);
      player0.setZ(0.0F);
      int int0 = Packable.PLAYER;
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      PipedOutputStream pipedOutputStream1 = null;
      try {
        pipedOutputStream1 = new PipedOutputStream(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Player player0 = new Player((-2052));
      player0.getY();
      player0.getMoney();
      player0.getMoney();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)10;
      byteArray0[1] = (byte) (-9);
      byteArray0[2] = (byte)2;
      byteArray0[3] = (byte)5;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)105;
      byteArray0[6] = (byte)5;
      byteArray0[7] = (byte)10;
      byteArray0[8] = (byte) (-59);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.close();
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      dataInputStream0.markSupported();
      player0.unpack(dataInputStream0);
      assertEquals(7, byteArrayInputStream0.available());
      
      int int0 = player0.getPictureId();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.6401461330725327
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Player player0 = new Player((-2237), "Player.unpack(): *** WARNING *** data is not of proper type!", (-2237));
      player0.setX((-2237));
      player0.setZ((-2237));
      player0.setY((-2237));
      player0.setZ(0.0F);
      player0.getZ();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)23;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)5;
      byteArray0[3] = (byte)9;
      byteArray0[4] = (byte) (-1);
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)34;
      player0.gangStrength();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byteArray0[7] = (byte) (-33);
      player0.unpack(byteArray0);
      assertEquals((-2237.0F), player0.getY(), 0.01F);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=3.048820325203473
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Player player0 = new Player((-2111), "", "", 1846, (-2111));
      player0.setDead((long) 1108);
      Party party0 = new Party(1108);
      player0.boss = party0;
      player0.getSubparty();
      player0.isDead();
      player0.getX();
      Player player1 = new Player(0, "", 0);
      player0.isJoinOK(player1, true);
      player0.setJoinOK(player1, true);
      assertEquals(1108L, player0.getTimeOfDeath());
      
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte)21;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-89);
      byteArray0[4] = (byte)1;
      player1.unpack(byteArray0);
      assertEquals(0, player1.getPictureId());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Player player0 = new Player((-1875));
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("state.Party", false);
      Player player1 = new Player(0, "yIi#|6", (-1875));
      player1.setDead((long) (-1875));
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      PipedInputStream pipedInputStream1 = null;
      try {
        pipedInputStream1 = new PipedInputStream(pipedOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)54;
      byteArray0[2] = (byte)54;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      Player player0 = new Player((byte)0);
      Player player1 = new Player((-1168), "_vU|s", "_vU|s", 2164, 29752);
      assertEquals(29752, player1.getStrength());
      assertEquals(2164, player1.getPictureId());
      
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("$(", true);
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockFileOutputStream0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(bufferedOutputStream0);
      player0.pack(dataOutputStream0);
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertEquals("Player0", player0.getName());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
  }
}
