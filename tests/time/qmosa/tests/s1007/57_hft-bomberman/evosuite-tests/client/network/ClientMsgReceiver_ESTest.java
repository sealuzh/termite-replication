/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 19:06:00 GMT 2019
 */

package client.network;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import client.BomberClient;
import client.network.ClientMsgReceiver;
import java.awt.HeadlessException;
import java.net.Proxy;
import java.net.Socket;
import java.sql.ClientInfoStatus;
import java.sql.SQLFeatureNotSupportedException;
import java.sql.SQLIntegrityConstraintViolationException;
import java.sql.SQLInvalidAuthorizationSpecException;
import java.sql.SQLSyntaxErrorException;
import java.sql.SQLTransactionRollbackException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Hashtable;
import java.util.LinkedList;
import java.util.Stack;
import java.util.Vector;
import java.util.function.Consumer;
import javax.swing.table.DefaultTableModel;
import messages.global.GlobalStateMsg;
import messages.global.JoinAckMsg;
import messages.global.LoginMsg;
import messages.global.MapInfo;
import messages.global.MapListMsg;
import messages.global.ParticipantInfo;
import org.apache.log4j.helpers.Loader;
import org.apache.log4j.helpers.LogLog;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.lang.MockThread;
import org.evosuite.runtime.mock.java.net.MockSocket;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ClientMsgReceiver_ESTest extends ClientMsgReceiver_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Proxy proxy0 = Proxy.NO_PROXY;
      MockSocket mockSocket0 = new MockSocket(proxy0);
      int[] intArray0 = new int[1];
      intArray0[0] = 1272;
      Stack<ParticipantInfo> stack0 = new Stack<ParticipantInfo>();
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(stack0, stack0);
      stack0.removeElement(defaultTableModel0);
      JoinAckMsg joinAckMsg0 = new JoinAckMsg(false, 1272);
      Vector<ParticipantInfo> vector0 = new Vector<ParticipantInfo>();
      Loader.getResource("]!PEk");
      ArrayList<ParticipantInfo> arrayList0 = new ArrayList<ParticipantInfo>();
      joinAckMsg0.setParticipants(arrayList0);
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.processMsg(joinAckMsg0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Proxy proxy0 = Proxy.NO_PROXY;
      MockSocket mockSocket0 = new MockSocket(proxy0);
      int[] intArray0 = new int[20];
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      LinkedList<MapInfo> linkedList0 = new LinkedList<MapInfo>();
      MapInfo mapInfo0 = mock(MapInfo.class, new ViolatedAssumptionAnswer());
      MapInfo mapInfo1 = mock(MapInfo.class, new ViolatedAssumptionAnswer());
      linkedList0.add(mapInfo1);
      linkedList0.add(mapInfo0);
      MapListMsg mapListMsg0 = new MapListMsg(linkedList0);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.processMsg(mapListMsg0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("messages.global.MapListMsg", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Proxy proxy0 = Proxy.NO_PROXY;
      MockSocket mockSocket0 = new MockSocket(proxy0);
      byte[] byteArray0 = new byte[18];
      byteArray0[0] = (byte)0;
      byteArray0[16] = (byte) (-37);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte) (-76);
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      byte[] byteArray1 = new byte[10];
      byteArray1[0] = (byte)0;
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray1);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      String string0 = "";
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      GlobalStateMsg globalStateMsg0 = new GlobalStateMsg(1630);
      BomberClient bomberClient0 = BomberClient.getInstance();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, bomberClient0);
      int int0 = 1268;
      LoginMsg loginMsg0 = new LoginMsg(string0, int0);
      clientMsgReceiver0.processMsg(loginMsg0);
      long long0 = (-1225L);
      System.setCurrentTimeMillis(long0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Proxy proxy0 = Proxy.NO_PROXY;
      MockSocket mockSocket0 = new MockSocket(proxy0);
      byte[] byteArray0 = new byte[18];
      byte byte0 = (byte)44;
      byteArray0[0] = (byte)44;
      byte byte1 = (byte) (-37);
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      MockThread.getDefaultUncaughtExceptionHandler();
      LogLog.setQuietMode(true);
      HashMap<Thread, StackTraceElement[]> hashMap0 = new HashMap<Thread, StackTraceElement[]>();
      Thread.UncaughtExceptionHandler thread_UncaughtExceptionHandler0 = MockThread.getDefaultUncaughtExceptionHandler();
      MockThread.setDefaultUncaughtExceptionHandler(thread_UncaughtExceptionHandler0);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.closeConnection();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("client.network.ClientMsgReceiver", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Proxy proxy0 = Proxy.NO_PROXY;
      byte[] byteArray0 = new byte[18];
      MockThread.getDefaultUncaughtExceptionHandler();
      LogLog.setQuietMode(true);
      HashMap<Thread, StackTraceElement[]> hashMap0 = new HashMap<Thread, StackTraceElement[]>();
      Thread.UncaughtExceptionHandler thread_UncaughtExceptionHandler0 = MockThread.getDefaultUncaughtExceptionHandler();
      MockThread.setDefaultUncaughtExceptionHandler(thread_UncaughtExceptionHandler0);
      System.setCurrentTimeMillis((byte)44);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((byte)0);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      Hashtable<String, ClientInfoStatus> hashtable0 = new Hashtable<String, ClientInfoStatus>();
      System.setCurrentTimeMillis((byte)44);
      System.setCurrentTimeMillis((-3055L));
      System.setCurrentTimeMillis((byte)44);
      System.setCurrentTimeMillis(821L);
      System.setCurrentTimeMillis(821L);
      System.setCurrentTimeMillis((byte)0);
      System.setCurrentTimeMillis((-1670L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      ClientMsgReceiver clientMsgReceiver0 = null;
      try {
        clientMsgReceiver0 = new ClientMsgReceiver((Socket) null, (BomberClient) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("common.network.MsgReceiver", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      byte[] byteArray0 = new byte[18];
      byteArray0[0] = (byte)44;
      byteArray0[16] = (byte) (-29);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte) (-76);
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "org.hsqldb.HsqlException");
      byte[] byteArray1 = new byte[17];
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray1);
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray1);
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      HashMap<Thread, StackTraceElement[]> hashMap0 = new HashMap<Thread, StackTraceElement[]>();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.displayErrorMessage();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      SQLInvalidAuthorizationSpecException sQLInvalidAuthorizationSpecException0 = new SQLInvalidAuthorizationSpecException("");
      sQLInvalidAuthorizationSpecException0.getSuppressed();
      SQLSyntaxErrorException sQLSyntaxErrorException0 = new SQLSyntaxErrorException("", "", sQLInvalidAuthorizationSpecException0);
      SQLFeatureNotSupportedException sQLFeatureNotSupportedException0 = new SQLFeatureNotSupportedException("- SwgNhLK", sQLInvalidAuthorizationSpecException0);
      sQLFeatureNotSupportedException0.printStackTrace();
      sQLFeatureNotSupportedException0.getStackTrace();
      StackTraceElement[] stackTraceElementArray0 = sQLFeatureNotSupportedException0.getStackTrace();
      SQLFeatureNotSupportedException sQLFeatureNotSupportedException1 = new SQLFeatureNotSupportedException(">@ymSdY_0U-@6 <c~5", ">@ymSdY_0U-@6 <c~5", 2598, sQLInvalidAuthorizationSpecException0);
      sQLFeatureNotSupportedException0.addSuppressed(sQLSyntaxErrorException0);
      SQLIntegrityConstraintViolationException sQLIntegrityConstraintViolationException0 = new SQLIntegrityConstraintViolationException("", (Throwable) null);
      SQLFeatureNotSupportedException sQLFeatureNotSupportedException2 = new SQLFeatureNotSupportedException("CONNECTION LOST", ">@ymSdY_0U-@6 <c~5", 0, sQLIntegrityConstraintViolationException0);
      sQLFeatureNotSupportedException0.addSuppressed(sQLFeatureNotSupportedException2);
      sQLFeatureNotSupportedException2.spliterator();
      SQLFeatureNotSupportedException sQLFeatureNotSupportedException3 = new SQLFeatureNotSupportedException(sQLIntegrityConstraintViolationException0);
      SQLTransactionRollbackException sQLTransactionRollbackException0 = new SQLTransactionRollbackException("CONNECTION LOST", (String) null, sQLFeatureNotSupportedException0);
      sQLFeatureNotSupportedException2.setStackTrace(stackTraceElementArray0);
      SQLFeatureNotSupportedException sQLFeatureNotSupportedException4 = new SQLFeatureNotSupportedException(sQLFeatureNotSupportedException0);
      SQLFeatureNotSupportedException sQLFeatureNotSupportedException5 = new SQLFeatureNotSupportedException("2TYy-)i]82K6{%eCr:");
      sQLFeatureNotSupportedException5.printStackTrace();
      SQLIntegrityConstraintViolationException sQLIntegrityConstraintViolationException1 = new SQLIntegrityConstraintViolationException(sQLFeatureNotSupportedException1);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      sQLIntegrityConstraintViolationException0.forEach(consumer0);
      sQLFeatureNotSupportedException5.addSuppressed(sQLTransactionRollbackException0);
      MockSocket mockSocket0 = new MockSocket();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.handleConnectionLoss(sQLIntegrityConstraintViolationException0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }
}
