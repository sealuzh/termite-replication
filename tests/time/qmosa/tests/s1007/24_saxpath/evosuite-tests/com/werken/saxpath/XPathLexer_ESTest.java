/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 19:22:25 GMT 2019
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.0550093402673624
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("L`SxPt7a&B|lWo.A^");
      Token token0 = xPathLexer0.dollar();
      assertEquals("L", token0.getTokenText());
      
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.comma();
      Token token2 = xPathLexer0.notEquals();
      assertEquals("Sx", token2.getTokenText());
      assertEquals(22, token2.getTokenType());
      
      Token token3 = xPathLexer0.number();
      char char0 = xPathLexer0.LA(1);
      assertEquals('P', char0);
      
      xPathLexer0.operatorName();
      Token token4 = xPathLexer0.minus();
      assertEquals(6, token4.getTokenType());
      
      xPathLexer0.setPreviousToken(token3);
      xPathLexer0.and();
      xPathLexer0.mod();
      token1.toString();
      xPathLexer0.dots();
      String string0 = token1.toString();
      assertEquals("[ (32) (`)", string0);
      
      xPathLexer0.consume(1);
      xPathLexer0.consume(1);
      Token token5 = xPathLexer0.plus();
      assertEquals(5, token5.getTokenType());
      assertEquals("&", token5.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.setPreviousToken(token3);
      assertEquals("", token3.getTokenText());
      assertEquals(30, token3.getTokenType());
      
      Token token6 = xPathLexer1.not();
      assertEquals(23, token6.getTokenType());
      
      xPathLexer1.setXPath("");
      xPathLexer0.dots();
      Token token7 = xPathLexer1.dollar();
      assertEquals(26, token7.getTokenType());
      
      Token token8 = xPathLexer0.doubleColon();
      assertEquals("|l", token8.getTokenText());
      assertEquals(19, token8.getTokenType());
      
      Token token9 = xPathLexer1.at();
      assertEquals(16, token9.getTokenType());
      
      xPathLexer0.nextToken();
      Token token10 = xPathLexer1.dots();
      assertEquals(13, token10.getTokenType());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.0085705788075314
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.plus();
      xPathLexer0.setXPath("< :Ds=@1xa7rbDEdE^o");
      xPathLexer0.number();
      xPathLexer0.div();
      XPathLexer xPathLexer1 = new XPathLexer("< :Ds=@1xa7rbDEdE^o");
      xPathLexer1.notEquals();
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer2.mod();
      xPathLexer1.leftParen();
      xPathLexer2.relationalOperator();
      xPathLexer1.dots();
      xPathLexer0.relationalOperator();
      xPathLexer2.endPosition();
      xPathLexer2.doubleColon();
      xPathLexer1.pipe();
      xPathLexer1.currentPosition();
      xPathLexer2.doubleColon();
      xPathLexer2.not();
      XPathLexer xPathLexer3 = new XPathLexer("[ (");
      xPathLexer0.number();
      xPathLexer1.doubleColon();
      xPathLexer0.isIdentifierChar('>');
      xPathLexer3.consume(6925);
      Token token0 = xPathLexer1.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.1498931023455925
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("zj7pVn]iAJLEZ)UM");
      xPathLexer0.dollar();
      xPathLexer0.operatorName();
      xPathLexer0.comma();
      xPathLexer0.or();
      xPathLexer0.consume();
      xPathLexer0.number();
      xPathLexer0.rightBracket();
      xPathLexer0.colon();
      xPathLexer0.whitespace();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.slashes();
      xPathLexer0.dollar();
      xPathLexer0.literal();
      xPathLexer0.setPreviousToken((Token) null);
      xPathLexer0.LA(483);
      xPathLexer0.setXPath("zj7pVn]iAJLEZ)UM");
      xPathLexer0.nextToken();
      xPathLexer0.and();
      xPathLexer0.plus();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.1085482543622143
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ag9d=*|F+GGT=^w)&z\"");
      xPathLexer0.whitespace();
      xPathLexer0.plus();
      xPathLexer0.leftParen();
      xPathLexer0.identifier();
      xPathLexer0.pipe();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.and();
      xPathLexer0.leftParen();
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      xPathLexer0.number();
      xPathLexer0.LA((-1));
      xPathLexer0.plus();
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.equals();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer2.getXPath();
      xPathLexer2.consume((-1));
      xPathLexer1.leftBracket();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.9468516067514527
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ag9d=*|F+GGT=^w)&z\"");
      xPathLexer0.whitespace();
      xPathLexer0.rightParen();
      Token token0 = xPathLexer0.leftParen();
      xPathLexer0.identifier();
      xPathLexer0.pipe();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.and();
      xPathLexer0.leftParen();
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      xPathLexer0.number();
      xPathLexer0.LA((-1));
      xPathLexer0.plus();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.notEquals();
      xPathLexer0.mod();
      Token token1 = xPathLexer0.dots();
      token1.toString();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.consume((-1));
      xPathLexer0.plus();
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer("6|/Zb=`[Y[&}vl(3~");
      xPathLexer3.LA(9);
      xPathLexer3.leftParen();
      // Undeclared exception!
      try { 
        xPathLexer1.or();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.9826287591021416
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("zj7pVn]iAJLEZ)UM");
      Token token0 = xPathLexer0.dollar();
      assertEquals(26, token0.getTokenType());
      
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      assertEquals("j", token1.getTokenText());
      
      xPathLexer0.or();
      xPathLexer0.consume();
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(4, token3.getTokenType());
      assertEquals("p", token3.getTokenText());
      
      char char0 = xPathLexer0.LA(124);
      assertEquals('\uFFFF', char0);
      
      xPathLexer0.operatorName();
      Token token4 = xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken(token4);
      assertEquals(15, token4.getTokenType());
      assertEquals("Vn", token4.getTokenText());
      
      Token token5 = xPathLexer0.notEquals();
      xPathLexer0.mod();
      Token token6 = xPathLexer0.dots();
      assertEquals("A", token6.getTokenText());
      
      String string0 = token5.toString();
      assertEquals("[ (22) (]i)", string0);
      
      xPathLexer0.consume(922);
      Token token7 = xPathLexer0.plus();
      assertEquals(5, token7.getTokenType());
      
      xPathLexer0.setPreviousToken((Token) null);
      Token token8 = xPathLexer0.literal();
      assertNull(token8);
      
      Token token9 = xPathLexer0.dots();
      assertEquals(13, token9.getTokenType());
      
      Token token10 = xPathLexer0.at();
      assertEquals(16, token10.getTokenType());
      
      Token token11 = xPathLexer0.nextToken();
      assertEquals((-1), token11.getTokenType());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.7271116541352263
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("L`SxPt7a&B|lWo.A^");
      Token token0 = xPathLexer0.dollar();
      assertEquals("L", token0.getTokenText());
      
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.comma();
      xPathLexer0.or();
      Token token2 = xPathLexer0.number();
      xPathLexer0.LA(1);
      xPathLexer0.operatorName();
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      
      xPathLexer0.setPreviousToken(token2);
      Token token4 = xPathLexer0.notEquals();
      assertEquals("&B", token4.getTokenText());
      assertEquals(22, token4.getTokenType());
      
      xPathLexer0.mod();
      token1.toString();
      xPathLexer0.dots();
      String string0 = token1.toString();
      assertEquals("[ (32) (`)", string0);
      
      xPathLexer0.consume(1);
      xPathLexer0.consume(1);
      Token token5 = xPathLexer0.plus();
      assertEquals(5, token5.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.setPreviousToken(token2);
      assertEquals(30, token2.getTokenType());
      assertEquals("", token2.getTokenText());
      
      xPathLexer1.setXPath("");
      Token token6 = xPathLexer0.dots();
      assertEquals(".", token6.getTokenText());
      assertEquals(13, token6.getTokenType());
      
      Token token7 = xPathLexer1.dollar();
      assertEquals(26, token7.getTokenType());
      
      Token token8 = xPathLexer0.doubleColon();
      assertEquals(19, token8.getTokenType());
      assertEquals("A^", token8.getTokenText());
      
      Token token9 = xPathLexer1.at();
      assertEquals(16, token9.getTokenType());
      
      Token token10 = xPathLexer0.nextToken();
      assertEquals("", token10.getTokenText());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.1386967926225036
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("zj7pVn]iAJLEZ)UM");
      xPathLexer0.dollar();
      xPathLexer0.operatorName();
      xPathLexer0.div();
      xPathLexer0.notEquals();
      xPathLexer0.mod();
      xPathLexer0.leftParen();
      xPathLexer0.or();
      xPathLexer0.dots();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.endPosition();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.doubleColon();
      Token token0 = xPathLexer1.pipe();
      xPathLexer2.slashes();
      xPathLexer1.currentPosition();
      xPathLexer2.doubleColon();
      xPathLexer2.setPreviousToken(token0);
      xPathLexer0.not();
      xPathLexer0.number();
      xPathLexer2.doubleColon();
      xPathLexer1.isIdentifierChar('M');
      xPathLexer0.consume((-2400));
      xPathLexer0.at();
      XPathLexer xPathLexer3 = new XPathLexer("B\"9wyG)GSmm");
      xPathLexer3.nextToken();
      xPathLexer1.rightParen();
      // Undeclared exception!
      try { 
        xPathLexer0.number();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.8728301465334967
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ag9d=*|F+GGT=^w)&z\"");
      Token token0 = xPathLexer0.whitespace();
      assertEquals("", token0.getTokenText());
      assertEquals((-2), token0.getTokenType());
      
      xPathLexer0.plus();
      Token token1 = xPathLexer0.leftParen();
      Token token2 = xPathLexer0.identifier();
      assertEquals("d", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.pipe();
      assertEquals(17, token3.getTokenType());
      assertEquals("=", token3.getTokenText());
      
      Token token4 = xPathLexer0.equals();
      assertEquals("*", token4.getTokenText());
      assertEquals(21, token4.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.leftParen();
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      Token token5 = xPathLexer0.number();
      assertEquals("", token5.getTokenText());
      assertEquals(30, token5.getTokenType());
      
      xPathLexer0.LA((-1));
      xPathLexer0.plus();
      xPathLexer0.setPreviousToken(token1);
      assertEquals("9", token1.getTokenText());
      
      Token token6 = xPathLexer0.notEquals();
      assertEquals(22, token6.getTokenType());
      assertEquals("GT", token6.getTokenText());
      
      Token token7 = xPathLexer0.dots();
      String string0 = token7.toString();
      assertEquals("[ (13) (=)", string0);
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.consume((-1));
      Token token8 = xPathLexer0.plus();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.setPreviousToken(token8);
      assertEquals(5, token8.getTokenType());
      
      xPathLexer1.setXPath("UyA?)&");
      xPathLexer0.dots();
      Token token9 = xPathLexer1.doubleColon();
      assertEquals(19, token9.getTokenType());
      assertEquals("Uy", token9.getTokenText());
      
      Token token10 = xPathLexer0.at();
      assertEquals(")", token10.getTokenText());
      assertEquals(16, token10.getTokenType());
      
      Token token11 = xPathLexer0.nextToken();
      assertEquals("&z\"", token11.getTokenText());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.919813084535127
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ag9d=*|F+GGT=^w)&z\"");
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      assertEquals("", token0.getTokenText());
      
      xPathLexer0.plus();
      Token token1 = xPathLexer0.leftParen();
      Token token2 = xPathLexer0.identifier();
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.pipe();
      assertEquals(17, token3.getTokenType());
      
      Token token4 = xPathLexer0.equals();
      assertEquals(21, token4.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.leftParen();
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      Token token5 = xPathLexer0.number();
      assertEquals(30, token5.getTokenType());
      
      xPathLexer0.LA((-1));
      xPathLexer0.plus();
      xPathLexer0.setPreviousToken(token1);
      assertEquals(1, token1.getTokenType());
      assertEquals("9", token1.getTokenText());
      
      Token token6 = xPathLexer0.notEquals();
      assertEquals(22, token6.getTokenType());
      assertEquals("GT", token6.getTokenText());
      
      xPathLexer0.dots();
      xPathLexer0.consume((-1));
      XPathLexer xPathLexer1 = new XPathLexer("[ (");
      Token token7 = xPathLexer1.plus();
      assertEquals("[", token7.getTokenText());
      assertEquals(5, token7.getTokenType());
      
      xPathLexer0.setPreviousToken((Token) null);
      Token token8 = xPathLexer0.colon();
      xPathLexer0.setPreviousToken(token8);
      assertEquals("=", token8.getTokenText());
      assertEquals(18, token8.getTokenType());
      
      Token token9 = xPathLexer0.dots();
      assertEquals(13, token9.getTokenType());
      assertEquals("^", token9.getTokenText());
      
      Token token10 = xPathLexer0.doubleColon();
      assertEquals("w)", token10.getTokenText());
      
      Token token11 = xPathLexer1.at();
      assertEquals(16, token11.getTokenType());
      assertEquals(" ", token11.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token12 = xPathLexer2.nextToken();
      assertEquals((-1), token12.getTokenType());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.7518685126965625
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.consume((-31));
      // Undeclared exception!
      try { 
        xPathLexer0.whitespace();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.01106591807027
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.comma();
      xPathLexer0.setXPath("V*");
      xPathLexer0.dots();
      Token token0 = xPathLexer0.nextToken();
      token0.toString();
      token0.toString();
      xPathLexer0.mod();
      token0.toString();
      token0.toString();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.rightBracket();
      xPathLexer0.consume(2461);
      xPathLexer0.rightParen();
      xPathLexer0.at();
      xPathLexer0.rightBracket();
      xPathLexer0.plus();
      xPathLexer0.consume(1);
      xPathLexer0.slashes();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.dollar();
      xPathLexer0.number();
      boolean boolean0 = xPathLexer0.isIdentifierChar('|');
      assertFalse(boolean0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.568664903798831
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.literal();
      xPathLexer0.dots();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.at();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.identifierOrOperatorName();
      xPathLexer1.colon();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.relationalOperator();
      xPathLexer0.whitespace();
      xPathLexer1.comma();
      xPathLexer2.currentPosition();
      XPathLexer xPathLexer3 = new XPathLexer("");
      xPathLexer3.getPreviousToken();
      xPathLexer2.dots();
      xPathLexer3.setXPath("");
      xPathLexer0.not();
      xPathLexer0.colon();
      xPathLexer1.identifier();
      xPathLexer3.rightBracket();
      xPathLexer1.div();
      XPathLexer xPathLexer4 = new XPathLexer("");
      Token token0 = xPathLexer4.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.251850859732577
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("zj7pVn]iAJLEZ)UM");
      xPathLexer0.dollar();
      xPathLexer0.operatorName();
      xPathLexer0.div();
      xPathLexer0.notEquals();
      xPathLexer0.mod();
      xPathLexer0.leftParen();
      xPathLexer0.or();
      xPathLexer0.dots();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.endPosition();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.doubleColon();
      Token token0 = xPathLexer1.pipe();
      xPathLexer2.slashes();
      xPathLexer1.currentPosition();
      xPathLexer2.doubleColon();
      xPathLexer2.setPreviousToken(token0);
      xPathLexer0.not();
      xPathLexer0.number();
      xPathLexer2.doubleColon();
      xPathLexer1.isIdentifierChar('M');
      xPathLexer0.consume((-2400));
      // Undeclared exception!
      try { 
        xPathLexer0.relationalOperator();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.9518904476278403
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.comma();
      assertEquals(32, token0.getTokenType());
      
      xPathLexer0.setXPath("VO");
      Token token1 = xPathLexer0.dots();
      assertEquals("V", token1.getTokenText());
      assertEquals(13, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      token2.toString();
      token2.toString();
      token2.toString();
      token2.toString();
      xPathLexer0.mod();
      token2.toString();
      token2.toString();
      String string0 = token2.toString();
      assertEquals("[ (15) (O)", string0);
      
      xPathLexer0.setPreviousToken(token2);
      xPathLexer0.rightBracket();
      xPathLexer0.consume(2461);
      Token token3 = xPathLexer0.rightParen();
      assertEquals(2, token3.getTokenType());
      
      Token token4 = xPathLexer0.rightBracket();
      assertEquals(4, token4.getTokenType());
      
      xPathLexer0.consume(60);
      Token token5 = xPathLexer0.slashes();
      assertEquals(11, token5.getTokenType());
      
      Token token6 = xPathLexer0.identifierOrOperatorName();
      assertNull(token6);
      
      Token token7 = xPathLexer0.dollar();
      assertEquals(26, token7.getTokenType());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.9509001198812665
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("C)Xe,8:+T>9");
      Token token0 = xPathLexer0.doubleColon();
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      assertEquals("X", token1.getTokenText());
      
      String string0 = token0.toString();
      assertEquals("[ (19) (C))", string0);
      
      Token token2 = xPathLexer0.not();
      assertEquals(23, token2.getTokenType());
      assertEquals("e", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(32, token3.getTokenType());
      assertEquals(",", token3.getTokenText());
      
      xPathLexer0.literal();
      Token token4 = xPathLexer0.minus();
      assertEquals(6, token4.getTokenType());
      
      Token token5 = xPathLexer0.dots();
      assertEquals(13, token5.getTokenType());
      
      xPathLexer0.leftParen();
      xPathLexer0.operatorName();
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('j');
      xPathLexer0.or();
      boolean boolean1 = xPathLexer0.hasMoreChars();
      assertFalse(boolean1 == boolean0);
      
      xPathLexer0.doubleColon();
      Token token6 = xPathLexer0.notEquals();
      assertEquals(22, token6.getTokenType());
      
      xPathLexer0.or();
      Token token7 = xPathLexer0.slashes();
      assertEquals(11, token7.getTokenType());
      
      xPathLexer0.colon();
      Token token8 = xPathLexer0.number();
      assertEquals(30, token8.getTokenType());
      
      char char0 = xPathLexer0.LA(0);
      assertEquals('\uFFFF', char0);
      
      Token token9 = xPathLexer0.leftParen();
      assertEquals(1, token9.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.colon();
      Token token10 = xPathLexer0.pipe();
      assertEquals(17, token10.getTokenType());
      
      xPathLexer0.or();
      Token token11 = xPathLexer0.colon();
      assertEquals(18, token11.getTokenType());
      
      Token token12 = xPathLexer0.dollar();
      assertEquals(26, token12.getTokenType());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.084606315709269
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ag9d=*|F+GGT=^w)&z\"");
      xPathLexer0.whitespace();
      xPathLexer0.plus();
      xPathLexer0.leftParen();
      xPathLexer0.identifier();
      Token token0 = xPathLexer0.pipe();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.and();
      xPathLexer0.leftParen();
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      xPathLexer0.number();
      xPathLexer0.LA((-1));
      xPathLexer0.plus();
      xPathLexer0.slashes();
      xPathLexer0.dollar();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.LA((-1));
      xPathLexer0.setXPath("Ag9d=*|F+GGT=^w)&z\"");
      xPathLexer0.nextToken();
      xPathLexer0.and();
      xPathLexer0.plus();
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.mod();
      assertNull(token1);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.9359861557767637
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      xPathLexer0.rightBracket();
      xPathLexer0.pipe();
      xPathLexer0.number();
      xPathLexer0.rightParen();
      xPathLexer0.comma();
      xPathLexer0.comma();
      xPathLexer0.not();
      xPathLexer0.doubleColon();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.consume((-14));
      xPathLexer0.star();
      int int0 = (-1);
      xPathLexer0.consume((-1));
      // Undeclared exception!
      try { 
        xPathLexer0.nextToken();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.9687285023682126
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("zj7pVn]iAJLEZ)UM");
      Token token0 = xPathLexer0.dollar();
      assertEquals("z", token0.getTokenText());
      assertEquals(26, token0.getTokenType());
      
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.comma();
      assertEquals(32, token1.getTokenType());
      assertEquals("j", token1.getTokenText());
      
      xPathLexer0.or();
      xPathLexer0.consume();
      Token token2 = xPathLexer0.number();
      assertEquals("", token2.getTokenText());
      assertEquals(30, token2.getTokenType());
      
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(4, token3.getTokenType());
      
      Token token4 = xPathLexer0.colon();
      assertEquals("V", token4.getTokenText());
      assertEquals(18, token4.getTokenType());
      
      Token token5 = xPathLexer0.whitespace();
      assertEquals("", token5.getTokenText());
      assertEquals((-2), token5.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.identifierOrOperatorName();
      Token token6 = xPathLexer0.equals();
      assertEquals(21, token6.getTokenType());
      assertEquals("]", token6.getTokenText());
      
      Token token7 = xPathLexer0.nextToken();
      assertEquals("iAJLEZ", token7.getTokenText());
      assertEquals(15, token7.getTokenType());
      
      xPathLexer1.getXPath();
      xPathLexer1.consume(2767);
      Token token8 = xPathLexer0.leftBracket();
      assertEquals(")", token8.getTokenText());
      assertEquals(3, token8.getTokenType());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.9061736302467556
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("r wRM#8ZbE:-`9?{jP4");
      Token token0 = xPathLexer0.equals();
      token0.toString();
      xPathLexer0.nextToken();
      xPathLexer0.literal();
      xPathLexer0.minus();
      xPathLexer0.literal();
      xPathLexer0.dots();
      xPathLexer0.minus();
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.number();
      int int0 = (-1);
      xPathLexer0.LA((-1));
      xPathLexer0.plus();
      xPathLexer0.setPreviousToken((Token) null);
      xPathLexer0.notEquals();
      xPathLexer0.mod();
      xPathLexer0.dots();
      // Undeclared exception!
      try { 
        token1.toString();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.8979918833043925
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("r wRM#8ZbE:-`9?{jP4");
      Token token0 = xPathLexer0.equals();
      token0.toString();
      xPathLexer0.nextToken();
      xPathLexer0.literal();
      xPathLexer0.minus();
      xPathLexer0.literal();
      xPathLexer0.dots();
      xPathLexer0.minus();
      XPathLexer xPathLexer1 = new XPathLexer(":1I-T/8G`3{7M");
      xPathLexer0.getPreviousToken();
      xPathLexer1.or();
      Token token1 = xPathLexer0.dollar();
      xPathLexer1.setPreviousToken(token1);
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.LA(26);
      xPathLexer0.setXPath("");
      xPathLexer1.nextToken();
      xPathLexer0.and();
      xPathLexer1.relationalOperator();
      xPathLexer1.plus();
      xPathLexer1.relationalOperator();
      Token token2 = xPathLexer0.mod();
      assertNull(token2);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.917618135597483
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.dollar();
      assertEquals(26, token0.getTokenType());
      
      Token token1 = xPathLexer0.rightParen();
      assertEquals(2, token1.getTokenType());
      
      xPathLexer0.consume();
      xPathLexer0.identifierOrOperatorName();
      Token token2 = xPathLexer0.pipe();
      assertEquals(17, token2.getTokenType());
      
      xPathLexer0.identifier();
      xPathLexer0.equals();
      Token token3 = xPathLexer0.identifier();
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer0.leftBracket();
      assertEquals(3, token4.getTokenType());
      
      Token token5 = xPathLexer0.dots();
      assertEquals(13, token5.getTokenType());
      
      xPathLexer0.number();
      xPathLexer0.setXPath("com.werken.saxpath.Token");
      xPathLexer0.consume();
      Token token6 = xPathLexer0.number();
      assertEquals("", token6.getTokenText());
      assertEquals(30, token6.getTokenType());
      
      Token token7 = xPathLexer0.equals();
      assertEquals(21, token7.getTokenType());
      assertEquals("o", token7.getTokenText());
      
      Token token8 = xPathLexer0.doubleColon();
      assertEquals("m.", token8.getTokenText());
      assertEquals(19, token8.getTokenType());
      
      xPathLexer0.consume();
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('_');
      assertTrue(boolean0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.1507382063832186
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("J$g}qu");
      Token token0 = xPathLexer0.identifier();
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.number();
      assertEquals("", token1.getTokenText());
      assertEquals(30, token1.getTokenType());
      
      Token token2 = xPathLexer0.rightParen();
      assertEquals("$", token2.getTokenText());
      assertEquals(2, token2.getTokenType());
      
      xPathLexer0.operatorName();
      Token token3 = xPathLexer0.star();
      assertEquals(20, token3.getTokenType());
      
      Token token4 = xPathLexer0.rightBracket();
      assertEquals("}", token4.getTokenText());
      
      Token token5 = xPathLexer0.plus();
      assertEquals("q", token5.getTokenText());
      assertEquals(5, token5.getTokenType());
      
      Token token6 = xPathLexer0.at();
      assertEquals("u", token6.getTokenText());
      assertEquals(16, token6.getTokenType());
      
      xPathLexer0.div();
      xPathLexer0.setXPath("uO#q6J{?'|t");
      xPathLexer0.consume();
      xPathLexer0.relationalOperator();
      xPathLexer0.relationalOperator();
      xPathLexer0.equals();
      Token token7 = xPathLexer0.not();
      assertEquals(23, token7.getTokenType());
      assertEquals("#", token7.getTokenText());
      
      Token token8 = xPathLexer0.equals();
      assertEquals(21, token8.getTokenType());
      assertEquals("q", token8.getTokenText());
      
      xPathLexer0.currentPosition();
      xPathLexer0.endPosition();
      xPathLexer0.operatorName();
      xPathLexer0.consume((-2227));
      Token token9 = xPathLexer0.rightBracket();
      assertEquals(4, token9.getTokenType());
      
      xPathLexer0.currentPosition();
      int int0 = xPathLexer0.currentPosition();
      assertEquals((-2222), int0);
      
      Token token10 = xPathLexer0.doubleColon();
      assertEquals(19, token10.getTokenType());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.000657777543511
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("zj7pVn]iAJLEZ)UM");
      xPathLexer0.operatorName();
      xPathLexer0.comma();
      xPathLexer0.or();
      xPathLexer0.consume();
      xPathLexer0.number();
      xPathLexer0.rightBracket();
      xPathLexer0.colon();
      xPathLexer0.whitespace();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.equals();
      xPathLexer0.nextToken();
      xPathLexer0.getXPath();
      xPathLexer0.consume(2767);
      xPathLexer0.leftBracket();
      xPathLexer0.operatorName();
      xPathLexer0.rightBracket();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.7868539782723318
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.comma();
      assertEquals(32, token0.getTokenType());
      
      xPathLexer0.setXPath("V*");
      Token token1 = xPathLexer0.dots();
      assertEquals("V", token1.getTokenText());
      assertEquals(13, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      token2.toString();
      token2.toString();
      xPathLexer0.mod();
      token2.toString();
      token2.toString();
      String string0 = token2.toString();
      assertEquals("[ (20) (*)", string0);
      
      xPathLexer0.setPreviousToken(token2);
      xPathLexer0.rightBracket();
      xPathLexer0.star();
      xPathLexer0.consume(2461);
      Token token3 = xPathLexer0.rightParen();
      assertEquals(2, token3.getTokenType());
      
      Token token4 = xPathLexer0.at();
      assertEquals(16, token4.getTokenType());
      
      Token token5 = xPathLexer0.rightBracket();
      assertEquals(4, token5.getTokenType());
      
      Token token6 = xPathLexer0.plus();
      assertEquals(5, token6.getTokenType());
      
      xPathLexer0.consume(1);
      Token token7 = xPathLexer0.slashes();
      assertEquals(11, token7.getTokenType());
      
      Token token8 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token8.getTokenType());
      
      Token token9 = xPathLexer0.dollar();
      assertEquals(26, token9.getTokenType());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.140122500323738
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("zj7pVn]iAJLEZ)UM");
      Token token0 = xPathLexer0.dollar();
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.comma();
      assertEquals("j", token1.getTokenText());
      assertEquals(32, token1.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.consume();
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      
      Token token3 = xPathLexer0.rightBracket();
      Token token4 = xPathLexer0.whitespace();
      assertEquals((-2), token4.getTokenType());
      
      String string0 = token0.toString();
      assertEquals("[ (26) (z)", string0);
      
      xPathLexer0.identifierOrOperatorName();
      String string1 = token3.toString();
      assertEquals("[ (4) (p)", string1);
      
      xPathLexer0.consume((-1));
      Token token5 = xPathLexer0.plus();
      assertEquals("n", token5.getTokenText());
      assertEquals(5, token5.getTokenType());
      
      xPathLexer0.setPreviousToken(token0);
      Token token6 = xPathLexer0.dots();
      assertEquals(13, token6.getTokenType());
      assertEquals("]", token6.getTokenText());
      
      Token token7 = xPathLexer0.at();
      assertEquals("i", token7.getTokenText());
      assertEquals(16, token7.getTokenType());
      
      Token token8 = xPathLexer0.nextToken();
      assertEquals("AJLEZ", token8.getTokenText());
      assertEquals(15, token8.getTokenType());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.3198708991066126
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      xPathLexer0.literal();
      xPathLexer0.notEquals();
      xPathLexer0.dots();
      xPathLexer0.consume((-3891));
      xPathLexer0.consume(0);
      xPathLexer0.rightParen();
      xPathLexer0.at();
      xPathLexer0.isIdentifierChar('g');
      xPathLexer0.minus();
      // Undeclared exception!
      try { 
        xPathLexer0.identifierOrOperatorName();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.839934452506274
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Pg");
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
      
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      
      Token token2 = xPathLexer0.rightParen();
      xPathLexer0.operatorName();
      xPathLexer0.setPreviousToken(token2);
      assertEquals(2, token2.getTokenType());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.5684706661777539
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.not();
      xPathLexer0.rightParen();
      xPathLexer0.rightParen();
      xPathLexer0.pipe();
      xPathLexer0.notEquals();
      xPathLexer0.nextToken();
      xPathLexer0.slashes();
      xPathLexer0.getPreviousToken();
      xPathLexer0.consume();
      xPathLexer0.leftBracket();
      xPathLexer0.number();
      xPathLexer0.not();
      xPathLexer0.minus();
      xPathLexer0.or();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-2330));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.1261370228592535
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      
      Token token1 = xPathLexer0.pipe();
      assertEquals(17, token1.getTokenType());
      
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      
      Token token3 = xPathLexer0.rightParen();
      assertEquals("(", token3.getTokenText());
      
      xPathLexer0.comma();
      Token token4 = xPathLexer0.comma();
      assertEquals(32, token4.getTokenType());
      
      Token token5 = xPathLexer0.not();
      assertEquals(23, token5.getTokenType());
      
      Token token6 = xPathLexer0.doubleColon();
      assertEquals(19, token6.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.consume(0);
      xPathLexer0.star();
      xPathLexer0.consume((-1));
      Token token7 = xPathLexer0.nextToken();
      assertEquals((-1), token7.getTokenType());
      
      Token token8 = xPathLexer0.plus();
      assertEquals(5, token8.getTokenType());
      
      xPathLexer0.leftParen();
      Token token9 = xPathLexer0.identifier();
      assertEquals(15, token9.getTokenType());
      
      Token token10 = xPathLexer0.slashes();
      assertEquals(11, token10.getTokenType());
      
      xPathLexer0.consume();
      xPathLexer0.mod();
      xPathLexer0.isIdentifierStartChar('#');
      xPathLexer0.leftParen();
      Token token11 = xPathLexer0.minus();
      assertEquals(6, token11.getTokenType());
      
      char char0 = xPathLexer0.LA((-1));
      assertEquals('\uFFFF', char0);
      
      Token token12 = xPathLexer0.notEquals();
      assertEquals(22, token12.getTokenType());
      
      xPathLexer0.consume();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.consume((-1));
      Token token13 = xPathLexer0.rightParen();
      assertEquals(2, token13.getTokenType());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.1714645058323443
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("zj7pVn]iAJLEZ)UM");
      Token token0 = xPathLexer0.dollar();
      assertEquals(26, token0.getTokenType());
      assertEquals("z", token0.getTokenText());
      
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.comma();
      assertEquals(32, token1.getTokenType());
      assertEquals("j", token1.getTokenText());
      
      xPathLexer0.or();
      xPathLexer0.consume();
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      
      Token token3 = xPathLexer0.rightBracket();
      assertEquals("p", token3.getTokenText());
      assertEquals(4, token3.getTokenType());
      
      Token token4 = xPathLexer0.colon();
      Token token5 = xPathLexer0.whitespace();
      assertEquals((-2), token5.getTokenType());
      
      Token token6 = xPathLexer0.identifierOrOperatorName();
      token6.toString();
      xPathLexer0.identifierOrOperatorName();
      String string0 = token4.toString();
      assertEquals("[ (18) (V)", string0);
      
      token6.toString();
      String string1 = token6.toString();
      assertEquals("[ (15) ()", string1);
      
      xPathLexer0.consume((-1));
      Token token7 = xPathLexer0.plus();
      assertEquals(5, token7.getTokenType());
      assertEquals("n", token7.getTokenText());
      
      xPathLexer0.setPreviousToken(token6);
      Token token8 = xPathLexer0.dots();
      assertEquals("]", token8.getTokenText());
      assertEquals(13, token8.getTokenType());
      
      Token token9 = xPathLexer0.doubleColon();
      assertEquals(19, token9.getTokenType());
      assertEquals("iA", token9.getTokenText());
      
      Token token10 = xPathLexer0.at();
      assertEquals("J", token10.getTokenText());
      assertEquals(16, token10.getTokenType());
      
      Token token11 = xPathLexer0.nextToken();
      assertEquals("LEZ)UM", token11.getTokenText());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.9193511114545823
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.and();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.doubleColon();
      xPathLexer0.dots();
      token0.toString();
      xPathLexer0.number();
      xPathLexer0.LA(2921);
      xPathLexer0.operatorName();
      xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.notEquals();
      xPathLexer0.mod();
      token0.toString();
      xPathLexer0.plus();
      xPathLexer0.identifier();
      xPathLexer0.rightBracket();
      Token token1 = xPathLexer0.div();
      assertNull(token1);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.1333797292879098
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.dollar();
      xPathLexer0.operatorName();
      xPathLexer0.comma();
      xPathLexer0.or();
      xPathLexer0.consume();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.number();
      xPathLexer0.rightBracket();
      xPathLexer1.colon();
      xPathLexer0.whitespace();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer1.equals();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.6109245817684168
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.and();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("co", token0.getTokenText());
      
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer("6fK23X\tCF'?#kB<0k(");
      xPathLexer1.leftParen();
      xPathLexer0.consume();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(".", token1.getTokenText());
      assertEquals(13, token1.getTokenType());
      
      xPathLexer0.number();
      xPathLexer0.LA(2921);
      Token token2 = xPathLexer0.plus();
      assertEquals(5, token2.getTokenType());
      
      xPathLexer0.slashes();
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertTrue(boolean0);
      
      Token token3 = xPathLexer0.doubleColon();
      assertEquals(19, token3.getTokenType());
      
      Token token4 = xPathLexer1.notEquals();
      assertEquals(22, token4.getTokenType());
      assertEquals("fK", token4.getTokenText());
      
      xPathLexer1.or();
      Token token5 = xPathLexer0.slashes();
      assertEquals(11, token5.getTokenType());
      assertEquals("e", token5.getTokenText());
      
      xPathLexer1.colon();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token6 = xPathLexer2.number();
      assertEquals(30, token6.getTokenType());
      
      char char0 = xPathLexer2.LA(99);
      assertEquals('\uFFFF', char0);
      
      xPathLexer0.leftParen();
      xPathLexer0.or();
      Token token7 = xPathLexer0.colon();
      assertEquals(18, token7.getTokenType());
      assertEquals(".", token7.getTokenText());
      
      Token token8 = xPathLexer0.pipe();
      assertEquals("s", token8.getTokenText());
      assertEquals(17, token8.getTokenType());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.340545928202022
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":2=bn4");
      xPathLexer0.leftBracket();
      xPathLexer0.and();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.pipe();
      xPathLexer0.minus();
      xPathLexer0.equals();
      xPathLexer0.not();
      xPathLexer0.and();
      xPathLexer0.hasMoreChars();
      Token token0 = xPathLexer0.plus();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.9803826642462354
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ag9d=*|F+GGT=^w)&z\"");
      Token token0 = xPathLexer0.whitespace();
      assertEquals("", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightParen();
      assertEquals("g", token1.getTokenText());
      
      Token token2 = xPathLexer0.leftParen();
      xPathLexer0.identifier();
      Token token3 = xPathLexer0.pipe();
      assertEquals("=", token3.getTokenText());
      assertEquals(17, token3.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.and();
      xPathLexer0.leftParen();
      xPathLexer0.consume();
      Token token4 = xPathLexer0.nextToken();
      assertEquals(15, token4.getTokenType());
      
      Token token5 = xPathLexer0.number();
      assertEquals(30, token5.getTokenType());
      
      xPathLexer0.LA((-1));
      xPathLexer0.plus();
      xPathLexer0.setPreviousToken(token2);
      assertEquals("9", token2.getTokenText());
      assertEquals(1, token2.getTokenType());
      
      Token token6 = xPathLexer0.notEquals();
      assertEquals("GG", token6.getTokenText());
      assertEquals(22, token6.getTokenType());
      
      xPathLexer0.mod();
      Token token7 = xPathLexer0.dots();
      String string0 = token7.toString();
      assertEquals("[ (13) (T)", string0);
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.consume((-1));
      Token token8 = xPathLexer0.plus();
      String string1 = token8.toString();
      assertEquals("[ (5) (=)", string1);
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.mod();
      xPathLexer2.setPreviousToken(token8);
      xPathLexer0.dots();
      xPathLexer1.doubleColon();
      Token token9 = xPathLexer0.at();
      assertEquals("w", token9.getTokenText());
      assertEquals(16, token9.getTokenType());
      
      Token token10 = xPathLexer0.nextToken();
      assertEquals(2, token10.getTokenType());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.764754922816505
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.dollar();
      xPathLexer0.operatorName();
      xPathLexer0.comma();
      xPathLexer0.or();
      xPathLexer0.consume();
      xPathLexer0.number();
      xPathLexer0.rightBracket();
      xPathLexer0.colon();
      xPathLexer0.whitespace();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.9086365769700184
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("zj7pVn]iAJLEZ)UM");
      Token token0 = xPathLexer0.dollar();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer("zj7pVn]iAJLEZ)UM");
      Token token1 = xPathLexer1.literal();
      assertNull(token1);
      
      Token token2 = xPathLexer0.colon();
      assertEquals(18, token2.getTokenType());
      assertEquals("j", token2.getTokenText());
      
      Token token3 = xPathLexer1.rightParen();
      assertEquals(2, token3.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.setPreviousToken(token0);
      assertEquals("z", token0.getTokenText());
      assertEquals(26, token0.getTokenType());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.0722071434335145
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.and();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.doubleColon();
      Token token1 = xPathLexer0.dots();
      assertEquals(14, token1.getTokenType());
      
      Token token2 = xPathLexer0.dollar();
      assertEquals("w", token2.getTokenText());
      
      String string0 = token0.toString();
      assertEquals("[ (19) (co)", string0);
      
      xPathLexer0.number();
      char char0 = xPathLexer0.LA(2921);
      assertEquals('\uFFFF', char0);
      
      xPathLexer0.operatorName();
      Token token3 = xPathLexer0.nextToken();
      assertEquals("erken.saxpath.XPathLexer", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer0.notEquals();
      assertEquals(22, token4.getTokenType());
      
      xPathLexer0.mod();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token5 = xPathLexer1.rightParen();
      assertEquals(2, token5.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token6 = xPathLexer2.at();
      assertEquals(16, token6.getTokenType());
      assertEquals("c", token6.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token7 = xPathLexer3.rightBracket();
      assertEquals("c", token7.getTokenText());
      assertEquals(4, token7.getTokenType());
      
      Token token8 = xPathLexer1.plus();
      assertEquals(5, token8.getTokenType());
      
      xPathLexer2.consume(108);
      Token token9 = xPathLexer0.slashes();
      assertEquals(11, token9.getTokenType());
      
      Token token10 = xPathLexer3.number();
      assertEquals(30, token10.getTokenType());
      assertEquals("", token10.getTokenText());
      
      Token token11 = xPathLexer2.dollar();
      assertEquals(26, token11.getTokenType());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.6683397901520114
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("r wRM#8ZbE:-`9?{jP4");
      xPathLexer0.equals();
      xPathLexer0.notEquals();
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      xPathLexer0.plus();
      xPathLexer0.doubleColon();
      xPathLexer0.pipe();
      xPathLexer0.star();
      xPathLexer0.setXPath("r wRM#8ZbE:-`9?{jP4");
      xPathLexer0.isIdentifierChar('W');
      xPathLexer0.at();
      xPathLexer0.identifier();
      xPathLexer0.operatorName();
      xPathLexer0.minus();
      xPathLexer0.consume(0);
      xPathLexer0.getXPath();
      xPathLexer0.setXPath("r wRM#8ZbE:-`9?{jP4");
      assertEquals("r wRM#8ZbE:-`9?{jP4", xPathLexer0.getXPath());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.7536432686684778
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ag9d=*|F+GGT=^w)&z\"");
      Token token0 = xPathLexer0.plus();
      assertEquals("A", token0.getTokenText());
      assertEquals(5, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftParen();
      Token token2 = xPathLexer0.identifier();
      assertEquals("9d", token2.getTokenText());
      
      Token token3 = xPathLexer0.pipe();
      assertEquals("=", token3.getTokenText());
      assertEquals(17, token3.getTokenType());
      
      Token token4 = xPathLexer0.identifierOrOperatorName();
      Token token5 = xPathLexer0.number();
      assertEquals(30, token5.getTokenType());
      
      Token token6 = xPathLexer0.rightBracket();
      assertEquals(4, token6.getTokenType());
      assertEquals("*", token6.getTokenText());
      
      Token token7 = xPathLexer0.colon();
      assertEquals("|", token7.getTokenText());
      assertEquals(18, token7.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.identifierOrOperatorName();
      String string0 = token4.toString();
      assertEquals("[ (15) ()", string0);
      
      xPathLexer0.consume(120);
      xPathLexer0.setPreviousToken(token1);
      assertEquals("g", token1.getTokenText());
      assertEquals(1, token1.getTokenType());
      
      Token token8 = xPathLexer0.doubleColon();
      assertEquals(19, token8.getTokenType());
      
      Token token9 = xPathLexer0.at();
      assertEquals(16, token9.getTokenType());
      
      Token token10 = xPathLexer0.nextToken();
      assertEquals((-1), token10.getTokenType());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.6187423679469681
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      
      xPathLexer0.number();
      Token token1 = xPathLexer0.comma();
      assertEquals(32, token1.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.consume();
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(4, token3.getTokenType());
      
      Token token4 = xPathLexer0.colon();
      assertEquals(18, token4.getTokenType());
      
      Token token5 = xPathLexer0.whitespace();
      assertEquals((-2), token5.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.identifierOrOperatorName();
      Token token6 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token6.getTokenType());
      
      Token token7 = xPathLexer0.equals();
      assertEquals(21, token7.getTokenType());
      
      Token token8 = xPathLexer0.nextToken();
      assertEquals((-1), token8.getTokenType());
      
      xPathLexer0.getXPath();
      xPathLexer0.consume(2767);
      Token token9 = xPathLexer0.leftBracket();
      assertEquals(3, token9.getTokenType());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.6772245773362195
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.and();
      xPathLexer0.or();
      Token token0 = xPathLexer0.comma();
      assertEquals(32, token0.getTokenType());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.9660352874610862
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("[", token0.getTokenText());
      assertEquals(4, token0.getTokenType());
      
      Token token1 = xPathLexer0.pipe();
      assertEquals(" ", token1.getTokenText());
      assertEquals(17, token1.getTokenType());
      
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      
      Token token3 = xPathLexer0.rightParen();
      assertEquals(2, token3.getTokenType());
      
      Token token4 = xPathLexer0.comma();
      assertEquals(32, token4.getTokenType());
      
      xPathLexer0.div();
      Token token5 = xPathLexer0.not();
      assertEquals(23, token5.getTokenType());
      
      Token token6 = xPathLexer0.doubleColon();
      assertEquals(19, token6.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.consume(0);
      xPathLexer0.star();
      xPathLexer0.consume((-1));
      Token token7 = xPathLexer0.nextToken();
      assertEquals((-1), token7.getTokenType());
      
      xPathLexer0.plus();
      xPathLexer0.leftParen();
      xPathLexer0.identifier();
      Token token8 = xPathLexer0.slashes();
      assertEquals(11, token8.getTokenType());
      
      xPathLexer0.consume();
      xPathLexer0.mod();
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('#');
      assertFalse(boolean0);
      
      Token token9 = xPathLexer0.leftParen();
      assertEquals(1, token9.getTokenType());
      
      Token token10 = xPathLexer0.minus();
      assertEquals(6, token10.getTokenType());
      
      xPathLexer0.LA((-1));
      XPathLexer xPathLexer1 = new XPathLexer(")");
      Token token11 = xPathLexer1.colon();
      assertEquals(18, token11.getTokenType());
      
      Token token12 = xPathLexer1.star();
      assertEquals(20, token12.getTokenType());
      
      Token token13 = xPathLexer1.plus();
      assertEquals(5, token13.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("MX$j>vkK~S4asz9B>");
      xPathLexer2.relationalOperator();
      xPathLexer0.mod();
      Token token14 = xPathLexer0.notEquals();
      assertEquals(22, token14.getTokenType());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.1503644914205693
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("zj7pVn]iAJLEZ)UM");
      Token token0 = xPathLexer0.dollar();
      assertEquals(26, token0.getTokenType());
      assertEquals("z", token0.getTokenText());
      
      xPathLexer0.operatorName();
      xPathLexer0.div();
      Token token1 = xPathLexer0.notEquals();
      assertEquals("j7", token1.getTokenText());
      assertEquals(22, token1.getTokenType());
      
      xPathLexer0.mod();
      Token token2 = xPathLexer0.leftParen();
      assertEquals("p", token2.getTokenText());
      
      xPathLexer0.or();
      Token token3 = xPathLexer0.dots();
      assertEquals(13, token3.getTokenType());
      assertEquals("V", token3.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token4 = xPathLexer0.number();
      assertEquals(30, token4.getTokenType());
      
      Token token5 = xPathLexer0.rightBracket();
      assertEquals(4, token5.getTokenType());
      
      Token token6 = xPathLexer0.colon();
      assertEquals(18, token6.getTokenType());
      
      Token token7 = xPathLexer0.whitespace();
      assertEquals((-2), token7.getTokenType());
      assertEquals("", token7.getTokenText());
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.identifierOrOperatorName();
      Token token8 = xPathLexer0.equals();
      assertEquals(21, token8.getTokenType());
      assertEquals(")", token8.getTokenText());
      
      Token token9 = xPathLexer0.nextToken();
      assertEquals(15, token9.getTokenType());
      assertEquals("UM", token9.getTokenText());
      
      xPathLexer0.getXPath();
      xPathLexer0.consume((-259));
      Token token10 = xPathLexer0.leftBracket();
      assertEquals(3, token10.getTokenType());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.9962570385361187
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.rightBracket();
      xPathLexer0.pipe();
      xPathLexer0.number();
      xPathLexer0.rightParen();
      xPathLexer0.comma();
      xPathLexer0.comma();
      xPathLexer0.not();
      xPathLexer0.doubleColon();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.consume(0);
      xPathLexer0.star();
      int int0 = (-1);
      xPathLexer0.consume((-2));
      xPathLexer0.nextToken();
      xPathLexer0.plus();
      xPathLexer0.leftParen();
      XPathLexer xPathLexer1 = new XPathLexer("j3d5<Qmm");
      xPathLexer1.identifier();
      xPathLexer0.slashes();
      xPathLexer0.consume();
      xPathLexer1.mod();
      xPathLexer0.isIdentifierStartChar('T');
      xPathLexer1.leftParen();
      xPathLexer1.minus();
      XPathLexer xPathLexer2 = new XPathLexer();
      // Undeclared exception!
      try { 
        xPathLexer2.LA((-2));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.9930136045094393
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.and();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.doubleColon();
      Token token1 = xPathLexer0.dots();
      assertEquals(14, token1.getTokenType());
      assertEquals("m.", token1.getTokenText());
      
      String string0 = token0.toString();
      assertEquals("[ (19) (co)", string0);
      
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      
      xPathLexer0.LA(2921);
      xPathLexer0.operatorName();
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("werken.saxpath.XPathLexer", token3.getTokenText());
      
      xPathLexer0.slashes();
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertFalse(boolean0);
      
      xPathLexer0.doubleColon();
      Token token4 = xPathLexer0.notEquals();
      assertEquals(22, token4.getTokenType());
      
      xPathLexer0.or();
      Token token5 = xPathLexer0.slashes();
      assertEquals(11, token5.getTokenType());
      
      xPathLexer0.colon();
      xPathLexer0.number();
      char char0 = xPathLexer0.LA(94);
      assertEquals('\uFFFF', char0);
      
      Token token6 = xPathLexer0.leftParen();
      assertEquals(1, token6.getTokenType());
      
      xPathLexer0.or();
      Token token7 = xPathLexer0.colon();
      assertEquals(18, token7.getTokenType());
      
      Token token8 = xPathLexer0.pipe();
      assertEquals(17, token8.getTokenType());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.6543295176471653
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Pg");
      Token token0 = xPathLexer0.rightParen();
      xPathLexer0.operatorName();
      xPathLexer0.setPreviousToken(token0);
      assertEquals("P", token0.getTokenText());
      
      Token token1 = xPathLexer0.getPreviousToken();
      assertEquals(2, token1.getTokenType());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=3.1818130932648296
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.leftBracket();
      char char0 = xPathLexer0.LA(0);
      assertEquals('\uFFFF', char0);
      
      xPathLexer0.dollar();
      Token token0 = xPathLexer0.at();
      assertEquals(16, token0.getTokenType());
      
      Token token1 = xPathLexer0.dollar();
      assertEquals(26, token1.getTokenType());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      
      xPathLexer0.div();
      Token token3 = xPathLexer0.colon();
      assertEquals(18, token3.getTokenType());
      
      Token token4 = xPathLexer0.not();
      assertEquals(23, token4.getTokenType());
      
      Token token5 = xPathLexer0.identifier();
      assertEquals(15, token5.getTokenType());
      
      xPathLexer0.leftBracket();
      Token token6 = xPathLexer0.leftBracket();
      assertEquals(3, token6.getTokenType());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=3.2006658244120896
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifier();
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.equals();
      assertEquals(21, token2.getTokenType());
      
      Token token3 = xPathLexer0.minus();
      assertEquals(6, token3.getTokenType());
      
      Token token4 = xPathLexer0.leftParen();
      assertEquals(1, token4.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.div();
      xPathLexer0.relationalOperator();
      xPathLexer0.div();
      Token token5 = xPathLexer0.colon();
      assertEquals(18, token5.getTokenType());
      
      Token token6 = xPathLexer0.plus();
      assertEquals(5, token6.getTokenType());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=3.4680208352710347
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.rightParen();
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      
      xPathLexer0.mod();
      Token token3 = xPathLexer0.rightParen();
      assertEquals(2, token3.getTokenType());
      
      Token token4 = xPathLexer0.literal();
      assertNull(token4);
      
      Token token5 = xPathLexer0.equals();
      assertEquals(21, token5.getTokenType());
      
      Token token6 = xPathLexer0.doubleColon();
      assertEquals(19, token6.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.div();
      Token token7 = xPathLexer0.star();
      assertEquals(20, token7.getTokenType());
      
      Token token8 = xPathLexer0.identifier();
      assertEquals(15, token8.getTokenType());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=3.195940019931307
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("");
      xPathLexer0.comma();
      xPathLexer0.div();
      xPathLexer0.mod();
      xPathLexer0.not();
      xPathLexer0.div();
      xPathLexer0.star();
      xPathLexer0.comma();
      xPathLexer0.operatorName();
      xPathLexer0.minus();
      xPathLexer0.literal();
      xPathLexer0.equals();
      xPathLexer0.at();
      xPathLexer0.mod();
      xPathLexer0.rightBracket();
      xPathLexer0.or();
      xPathLexer0.leftBracket();
      xPathLexer0.and();
      xPathLexer0.number();
      xPathLexer0.consume(0);
      xPathLexer0.div();
      xPathLexer0.dots();
      // Undeclared exception!
      try { 
        xPathLexer0.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=3.7045284399632994
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("zj7pVn]iAJLEZ)UM");
      Token token0 = xPathLexer0.dollar();
      assertEquals("z", token0.getTokenText());
      
      xPathLexer0.operatorName();
      xPathLexer0.div();
      Token token1 = xPathLexer0.notEquals();
      assertEquals("j7", token1.getTokenText());
      assertEquals(22, token1.getTokenType());
      
      xPathLexer0.mod();
      Token token2 = xPathLexer0.leftParen();
      assertEquals("p", token2.getTokenText());
      assertEquals(1, token2.getTokenType());
      
      xPathLexer0.or();
      Token token3 = xPathLexer0.dots();
      assertEquals("V", token3.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      int int0 = xPathLexer1.endPosition();
      assertEquals(0, int0);
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.doubleColon();
      Token token4 = xPathLexer1.pipe();
      assertEquals(17, token4.getTokenType());
      
      xPathLexer2.slashes();
      xPathLexer1.currentPosition();
      Token token5 = xPathLexer2.doubleColon();
      assertEquals(19, token5.getTokenType());
      
      xPathLexer2.consume((-1));
      Token token6 = xPathLexer2.rightParen();
      assertEquals(2, token6.getTokenType());
      
      Token token7 = xPathLexer2.at();
      assertEquals(16, token7.getTokenType());
      
      Token token8 = xPathLexer0.rightBracket();
      assertEquals(4, token8.getTokenType());
      assertEquals("n", token8.getTokenText());
      
      Token token9 = xPathLexer0.plus();
      assertEquals(5, token9.getTokenType());
      assertEquals("]", token9.getTokenText());
      
      xPathLexer2.consume(2461);
      Token token10 = xPathLexer0.slashes();
      assertEquals(11, token10.getTokenType());
      
      Token token11 = xPathLexer1.identifierOrOperatorName();
      assertEquals(15, token11.getTokenType());
      
      Token token12 = xPathLexer0.dollar();
      assertEquals(26, token12.getTokenType());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=3.0579615741800987
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.plus();
      xPathLexer0.setXPath("< :Ds=@1xa7rbDEdE^o");
      xPathLexer0.number();
      xPathLexer0.div();
      xPathLexer0.notEquals();
      xPathLexer0.mod();
      xPathLexer0.leftParen();
      xPathLexer0.relationalOperator();
      xPathLexer0.dots();
      xPathLexer0.relationalOperator();
      xPathLexer0.endPosition();
      xPathLexer0.doubleColon();
      xPathLexer0.rightBracket();
      xPathLexer0.consume((-1032));
      XPathLexer xPathLexer1 = new XPathLexer("qy#Up*^{}iQ*f:(R!Or");
      xPathLexer1.rightParen();
      xPathLexer1.rightBracket();
      xPathLexer1.plus();
      // Undeclared exception!
      try { 
        xPathLexer0.identifier();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.0746254402907756
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("R6-M");
      xPathLexer0.whitespace();
      Token token0 = xPathLexer0.minus();
      assertEquals("6", token0.getTokenText());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals("-", token1.getTokenText());
      
      Token token2 = xPathLexer0.leftBracket();
      assertEquals("M", token2.getTokenText());
      assertEquals(3, token2.getTokenType());
      
      xPathLexer0.not();
      xPathLexer0.getPreviousToken();
      xPathLexer0.comma();
      xPathLexer0.or();
      xPathLexer0.div();
      Token token3 = xPathLexer0.number();
      assertEquals(30, token3.getTokenType());
      
      xPathLexer0.minus();
      xPathLexer0.leftParen();
      xPathLexer0.getPreviousToken();
      Token token4 = xPathLexer0.not();
      assertEquals(23, token4.getTokenType());
      
      Token token5 = xPathLexer0.rightParen();
      assertEquals(2, token5.getTokenType());
      
      xPathLexer0.nextToken();
      char char0 = xPathLexer0.LA(2);
      assertEquals('\uFFFF', char0);
      
      Token token6 = xPathLexer0.slashes();
      assertEquals(11, token6.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token7 = xPathLexer0.at();
      assertEquals(16, token7.getTokenType());
      
      Token token8 = xPathLexer0.minus();
      assertEquals(6, token8.getTokenType());
      
      Token token9 = xPathLexer0.identifier();
      assertEquals(15, token9.getTokenType());
      
      xPathLexer0.mod();
      Token token10 = xPathLexer0.plus();
      assertEquals(5, token10.getTokenType());
      
      xPathLexer0.nextToken();
      xPathLexer0.leftParen();
      xPathLexer0.div();
      boolean boolean0 = xPathLexer0.isIdentifierChar('z');
      assertTrue(boolean0);
      
      Token token11 = xPathLexer0.star();
      assertEquals(20, token11.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.whitespace();
      Token token12 = xPathLexer0.pipe();
      assertEquals(17, token12.getTokenType());
      
      Token token13 = xPathLexer0.whitespace();
      assertEquals("", token13.getTokenText());
      assertEquals((-2), token13.getTokenType());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.053387280868622
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.and();
      xPathLexer0.mod();
      xPathLexer0.doubleColon();
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer("6fK23X\tCF'?#kB<0k(");
      Token token0 = xPathLexer1.leftParen();
      assertEquals(1, token0.getTokenType());
      assertEquals("6", token0.getTokenText());
      
      xPathLexer0.consume();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(13, token1.getTokenType());
      assertEquals(".", token1.getTokenText());
      
      xPathLexer0.number();
      char char0 = xPathLexer0.LA(2921);
      assertEquals('\uFFFF', char0);
      
      xPathLexer0.plus();
      xPathLexer0.slashes();
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertTrue(boolean0);
      
      Token token2 = xPathLexer0.doubleColon();
      assertEquals("rk", token2.getTokenText());
      
      Token token3 = xPathLexer1.notEquals();
      assertEquals(22, token3.getTokenType());
      assertEquals("fK", token3.getTokenText());
      
      xPathLexer1.or();
      Token token4 = xPathLexer0.slashes();
      assertEquals("e", token4.getTokenText());
      assertEquals(11, token4.getTokenType());
      
      Token token5 = xPathLexer1.colon();
      assertEquals(18, token5.getTokenType());
      assertEquals("2", token5.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.number();
      xPathLexer1.setPreviousToken((Token) null);
      xPathLexer2.dots();
      xPathLexer0.doubleColon();
      Token token6 = xPathLexer0.at();
      assertEquals("s", token6.getTokenText());
      
      Token token7 = xPathLexer0.nextToken();
      assertEquals((-1), token7.getTokenType());
      assertEquals("axpath.XPathLexer", token7.getTokenText());
      
      xPathLexer1.div();
      Token token8 = xPathLexer0.plus();
      assertEquals(5, token8.getTokenType());
      assertEquals("a", token8.getTokenText());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.171479764854241
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("zj7pVn]iAJLEZ)UM");
      Token token0 = xPathLexer0.dollar();
      assertEquals(26, token0.getTokenType());
      assertEquals("z", token0.getTokenText());
      
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.comma();
      assertEquals("j", token1.getTokenText());
      assertEquals(32, token1.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.consume();
      Token token2 = xPathLexer0.number();
      Token token3 = xPathLexer0.rightBracket();
      assertEquals("p", token3.getTokenText());
      assertEquals(4, token3.getTokenType());
      
      Token token4 = xPathLexer0.colon();
      Token token5 = xPathLexer0.whitespace();
      assertEquals((-2), token5.getTokenType());
      
      Token token6 = xPathLexer0.identifierOrOperatorName();
      assertNotNull(token6);
      
      String string0 = token6.toString();
      assertEquals("[ (15) ()", string0);
      
      xPathLexer0.identifierOrOperatorName();
      String string1 = token4.toString();
      assertEquals("[ (18) (V)", string1);
      
      xPathLexer0.consume((-1));
      Token token7 = xPathLexer0.plus();
      assertEquals(5, token7.getTokenType());
      
      xPathLexer0.setPreviousToken(token6);
      xPathLexer0.setPreviousToken(token2);
      assertEquals("", token2.getTokenText());
      assertEquals(30, token2.getTokenType());
      
      Token token8 = xPathLexer0.dots();
      assertEquals(13, token8.getTokenType());
      assertEquals("]", token8.getTokenText());
      
      Token token9 = xPathLexer0.doubleColon();
      assertEquals(19, token9.getTokenType());
      assertEquals("iA", token9.getTokenText());
      
      Token token10 = xPathLexer0.at();
      assertEquals("J", token10.getTokenText());
      assertEquals(16, token10.getTokenType());
      
      Token token11 = xPathLexer0.nextToken();
      assertEquals((-1), token11.getTokenType());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.8354431447956436
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      xPathLexer0.rightBracket();
      xPathLexer0.pipe();
      xPathLexer0.number();
      xPathLexer0.rightParen();
      xPathLexer0.comma();
      xPathLexer0.whitespace();
      xPathLexer0.not();
      xPathLexer0.doubleColon();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.consume(0);
      xPathLexer0.star();
      int int0 = (-1);
      xPathLexer0.consume((-1));
      xPathLexer0.nextToken();
      xPathLexer0.plus();
      xPathLexer0.leftParen();
      xPathLexer0.identifier();
      xPathLexer0.slashes();
      xPathLexer0.dots();
      Token token0 = xPathLexer0.rightParen();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.8911215275064341
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("zj7pVn]iAJLEZ)UM");
      xPathLexer0.dollar();
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.comma();
      xPathLexer0.or();
      Token token1 = xPathLexer0.number();
      xPathLexer0.LA(1);
      xPathLexer0.operatorName();
      xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken(token1);
      xPathLexer0.notEquals();
      xPathLexer0.mod();
      token0.toString();
      xPathLexer0.dots();
      token0.toString();
      xPathLexer0.consume(1);
      xPathLexer0.plus();
      xPathLexer0.pipe();
      xPathLexer0.setPreviousToken(token0);
      XPathLexer xPathLexer1 = null;
      try {
        xPathLexer1 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.876811474413727
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      
      Token token1 = xPathLexer0.literal();
      assertNull(token1);
      
      xPathLexer0.mod();
      Token token2 = xPathLexer0.comma();
      assertEquals(32, token2.getTokenType());
      
      xPathLexer0.getPreviousToken();
      xPathLexer0.operatorName();
      Token token3 = xPathLexer0.identifier();
      assertEquals(15, token3.getTokenType());
      
      xPathLexer0.operatorName();
      Token token4 = xPathLexer0.number();
      assertEquals(30, token4.getTokenType());
      
      Token token5 = xPathLexer0.plus();
      assertEquals(5, token5.getTokenType());
      
      Token token6 = xPathLexer0.whitespace();
      assertEquals((-2), token6.getTokenType());
      
      Token token7 = xPathLexer0.slashes();
      assertEquals(11, token7.getTokenType());
      
      Token token8 = xPathLexer0.dollar();
      assertEquals(26, token8.getTokenType());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=3.3180668922877485
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.notEquals();
      xPathLexer0.identifier();
      Token token0 = xPathLexer0.equals();
      assertEquals(21, token0.getTokenType());
      
      Token token1 = xPathLexer0.minus();
      assertEquals(6, token1.getTokenType());
      
      Token token2 = xPathLexer0.leftParen();
      assertEquals(1, token2.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.div();
      xPathLexer0.relationalOperator();
      xPathLexer0.div();
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token3 = xPathLexer1.notEquals();
      assertEquals(22, token3.getTokenType());
      
      xPathLexer1.consume();
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token4.getTokenType());
      assertNotNull(token4);
      
      xPathLexer0.consume(2785);
      Token token5 = xPathLexer0.rightParen();
      assertEquals(2, token5.getTokenType());
  }
}
