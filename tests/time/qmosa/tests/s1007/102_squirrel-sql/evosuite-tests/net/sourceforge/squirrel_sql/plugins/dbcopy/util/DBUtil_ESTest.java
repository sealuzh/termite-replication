/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 18:58:50 GMT 2019
 */

package net.sourceforge.squirrel_sql.plugins.dbcopy.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.gargoylesoftware.base.resource.jdbc.CallableStatementWrapper;
import com.gargoylesoftware.base.resource.jdbc.ConnectionWrapper;
import java.io.File;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import javax.swing.DefaultListCellRenderer;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JInternalFrame;
import javax.swing.JToggleButton;
import javax.swing.plaf.basic.BasicTreeUI;
import net.sourceforge.squirrel_sql.client.IApplication;
import net.sourceforge.squirrel_sql.client.gui.db.SQLAlias;
import net.sourceforge.squirrel_sql.client.session.ISession;
import net.sourceforge.squirrel_sql.client.session.schemainfo.SchemaInfo;
import net.sourceforge.squirrel_sql.client.util.ApplicationFileWrappersImpl;
import net.sourceforge.squirrel_sql.client.util.ApplicationFiles;
import net.sourceforge.squirrel_sql.fw.id.IntegerIdentifier;
import net.sourceforge.squirrel_sql.fw.id.UidIdentifier;
import net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo;
import net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectType;
import net.sourceforge.squirrel_sql.fw.sql.ForeignKeyInfo;
import net.sourceforge.squirrel_sql.fw.sql.IDatabaseObjectInfo;
import net.sourceforge.squirrel_sql.fw.sql.ISQLConnection;
import net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData;
import net.sourceforge.squirrel_sql.fw.sql.ITableInfo;
import net.sourceforge.squirrel_sql.fw.sql.SQLConnection;
import net.sourceforge.squirrel_sql.fw.sql.SQLDriver;
import net.sourceforge.squirrel_sql.fw.sql.SQLDriverPropertyCollection;
import net.sourceforge.squirrel_sql.fw.sql.TableColumnInfo;
import net.sourceforge.squirrel_sql.fw.sql.TableInfo;
import net.sourceforge.squirrel_sql.fw.util.FileWrapperFactoryImpl;
import net.sourceforge.squirrel_sql.fw.util.FileWrapperImpl;
import net.sourceforge.squirrel_sql.plugins.dbcopy.DBCopyPlugin;
import net.sourceforge.squirrel_sql.plugins.dbcopy.prefs.DBCopyPreferenceBean;
import net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.jfree.date.SerialDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DBUtil_ESTest extends DBUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.3120076729259056
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      fileWrapperFactoryImpl0.create("Cj:8@R");
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      applicationFiles0.getUserSettingsDirectory();
      int int0 = (-2358);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("R(IxI^y/B(rFt\"!", "^j'dBj'N;Mjvh", "R(IxI^y/B(rFt\"!", ".", (-3), "Cj:8@R", (-7), 3004, 3004, 1570, "^j'dBj'N;Mjvh", ".", (-2358), (-904), "catalog=");
      DBUtil.isBinaryType(tableColumnInfo0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      DBUtil.replaceDistinctDataType(2076, tableColumnInfo0, (ISession) null);
      // Undeclared exception!
      try { 
        DBUtil.checkKeyword((ISession) null, "*QGAA", "^j'dBj'N;Mjvh");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = "X'X,%={DoTy";
      String string1 = "R(I\\xI^y/B(rFt\"!";
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("whe:7Yy@D !Itt", "whe:7Yy@D !Itt", "X'X,%={DoTy", "whe:7Yy@D !Itt", 3132, " }in@|v!m3d\"fjZ[3]w", 621, 3132, 1500, (-3), " }in@|v!m3d\"fjZ[3]w", "whe:7Yy@D !Itt", (-632), 1155, "R(IxI^y/B(rFt\"!");
      DBUtil.isBinaryType(tableColumnInfo0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.replaceDistinctDataType(2001, tableColumnInfo0, (ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ISQLConnection iSQLConnection0 = null;
      int int0 = 4;
      // Undeclared exception!
      try { 
        DBUtil.getPKColumnString((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("", (String) null, "',S`?<ZQ2e@CCvQ{rm", "Attempted to reset the LoggerFactory without possessing the guard.", (-5609), "\"m+hW&gJ~6?Bw#&", (-5609), (-5609), (-5609), (-5609), "\"m+hW&gJ~6?Bw#&", "", (-4), (-3), "Ehl_:@c6(X");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SCHEMA;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      DBUtil.getSchemaFromDbObject(tableColumnInfo0, schemaInfo0);
      dBCopyPlugin0.unload();
      ForeignKeyInfo foreignKeyInfo0 = mock(ForeignKeyInfo.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        DBUtil.tableHasForeignKey(" does not have a class function toLevel(String, Level)", "=W", "',S`?<ZQ2e@CCvQ{rm", foreignKeyInfo0, dBCopyPlugin0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier((-2096353082));
      IntegerIdentifier integerIdentifier1 = new IntegerIdentifier(2005);
      SQLDriver sQLDriver0 = new SQLDriver(integerIdentifier1);
      UidIdentifier uidIdentifier1 = new UidIdentifier();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.setPasteMenuEnabled(false);
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", ":~[h,:- .[%!");
      SerialDate.getMonths(false);
      // Undeclared exception!
      try { 
        DBUtil.tableHasPrimaryKey((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.convertTableToObjectList((List<ITableInfo>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.getPasteToTableInfo((ISQLConnection) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "true");
      // Undeclared exception!
      try { 
        DBUtil.getForeignKeySQL(dBCopyPlugin0, (ITableInfo) null, (ArrayList<ITableInfo>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.VIEW;
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.setPasteMenuEnabled(false);
      DBCopyPlugin dBCopyPlugin2 = new DBCopyPlugin();
      dBCopyPlugin2.setCopyMenuEnabled(true);
      dBCopyPlugin2.getPasteToTableInfo((ISQLConnection) null, "5D/pOY<Gb-Mn", "5D/pOY<Gb-Mn");
      DBCopyPlugin dBCopyPlugin3 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.getColumnNames((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ImageIcon imageIcon0 = new ImageIcon("v5\"(e]%&b.$S^lqc");
      DatabaseObjectType.createNewDatabaseObjectType((String) null, (Icon) imageIcon0);
      BasicTreeUI basicTreeUI0 = new BasicTreeUI();
      JToggleButton jToggleButton0 = new JToggleButton();
      jToggleButton0.addNotify();
      basicTreeUI0.getAccessibleChildrenCount(jToggleButton0);
      basicTreeUI0.getCollapsedIcon();
      basicTreeUI0.getExpandedIcon();
      DatabaseObjectType.createNewDatabaseObjectType("81%gTsiDJ6x!y5YK", (Icon) imageIcon0);
      DatabaseObjectType.createNewDatabaseObjectType("v5\"(e]%&b.$S^lqc");
      DatabaseObjectType.createNewDatabaseObjectType(" and table_schema = ? ");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.VIEW;
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo(" and table_schema = ? ", "5roj'K/B]*LWHH*_YAT", " in conversion patterrn.", (String) null, (-2), (String) null, 0, 91, (-907), 1324, (String) null, "v5\"(e]%&b.$S^lqc", (-1202), 1324, " in conversion patterrn.");
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.USER;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      DBUtil.isBinaryType(tableColumnInfo0);
      // Undeclared exception!
      try { 
        DBUtil.getTableCount((ISession) null, "URvC3+]dQl>?&.`{\".L", "", "", 1324);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int int0 = 16;
      // Undeclared exception!
      try { 
        DBUtil.getColumnName((ISQLConnection) null, (ITableInfo) null, 16);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      dBCopyPlugin0.getSourceSession();
      int int0 = DBUtil.replaceDistinctDataType((-2276), (TableColumnInfo) null, (ISession) null);
      assertEquals((-2276), int0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      SQLAlias sQLAlias0 = new SQLAlias();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("AND T2.tabid = T1.tabid", "double", "OlJ9wuu]X=HwR", ",8", 1111, "double", (-1044), (-609), (-372), (-172), "CREATE TABLE ", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 1111, (-609), ",8");
      dBCopyPlugin0.getSourceSession();
      DBUtil.replaceDistinctDataType(1111, tableColumnInfo0, (ISession) null);
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      SQLAlias sQLAlias1 = new SQLAlias(uidIdentifier0);
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = sQLAlias1.getDriverPropertiesClone();
      SQLDriver sQLDriver0 = new SQLDriver();
      sQLDriverPropertyCollection0.getDriverProperties();
      SQLDriver sQLDriver1 = new SQLDriver();
      SQLConnection sQLConnection0 = null;
      try {
        sQLConnection0 = new SQLConnection((Connection) null, sQLDriverPropertyCollection0, sQLDriver1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // SQLConnection == null
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.SQLConnection", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "41");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      System.setCurrentTimeMillis(1L);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("41", "41", "Requires start >= 0.", "41", 124, "Requires start >= 0.", (-632), 2010, (-349), (-632), "Requires start >= 0.", "41", (-632), 2010, "Requires start >= 0.");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      int int0 = DBUtil.replaceDistinctDataType(2010, tableColumnInfo0, (ISession) null);
      assertEquals(2010, int0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.6379940485425777
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, (String) null, (String) null, "number(19,0)", 1114, (String) null, 1114, 991, 1114, 991, (String) null, "&PdVL+SR2=N", (-1863), 1114, (String) null);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.FUNCTION;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM((DatabaseObjectType) null);
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.FOREIGN_KEY;
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.TABLE_TYPE_DBO;
      DatabaseObjectType databaseObjectType3 = DatabaseObjectType.INDEX;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      DBUtil.isBinaryType(tableColumnInfo0);
      DBUtil.getSchemaNameFromDbObject(tableColumnInfo0);
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[2];
      TableColumnInfo tableColumnInfo1 = new TableColumnInfo("1", "mkq\"{d).uVqW^N`", "&PdVL+SR2=N", (String) null, 1774, "mkq\"{d).uVqW^N`", 991, (-591), (-591), 1774, "o", "mkq\"{d).uVqW^N`", 3083, 9999, "o");
      tableColumnInfoArray0[0] = tableColumnInfo1;
      tableColumnInfoArray0[1] = tableColumnInfo0;
      DBUtil.getColumnList(tableColumnInfoArray0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceDatabaseObjects();
      // Undeclared exception!
      try { 
        DBUtil.convertObjectToTableList((List<IDatabaseObjectInfo>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "_ahU@JFdHVz]j\"a12lN");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      applicationFiles0.getChangeLogFile();
      File file0 = MockFile.createTempFile("_ahU@JFdHVz]j\"a12lN", "VOSX");
      FileWrapperImpl fileWrapperImpl0 = new FileWrapperImpl(file0);
      DBUtil.typesAreEquivalent(3, (-257));
      ConnectionWrapper connectionWrapper0 = null;
      try {
        connectionWrapper0 = new ConnectionWrapper((Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.ConnectionWrapper", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DBUtil.setLastStatementValues("Ye`3/^#s");
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((CallableStatement) null).when(connection0).prepareCall(anyString());
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      // Undeclared exception!
      try { 
        connectionWrapper0.prepareCall("Ye`3/^#s");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // statement
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.StatementWrapper", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.6593340983935647
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("' ", "'4_", "Unexpected exception while attempting to determine if a table (", "char(2147000000)", (-2273), ".-01MRCck'^5'Ae,B", 2005, (-707), 621, 621, "=xuGe'XOo1swi'", " schema = ", 621, (-707), " N%)h|O&[@pp^j}");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.FOREIGN_KEY;
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.TABLE_TYPE_DBO;
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.INDEX;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      DBUtil.isBinaryType(tableColumnInfo0);
      DBUtil.getSchemaNameFromDbObject(tableColumnInfo0);
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[1];
      tableColumnInfoArray0[0] = tableColumnInfo0;
      DBUtil.getColumnList(tableColumnInfoArray0);
      dBCopyPlugin0.getSourceDatabaseObjects();
      // Undeclared exception!
      try { 
        DBUtil.convertObjectToTableList((List<IDatabaseObjectInfo>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.6379940485425777
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, (String) null, (String) null, "number(19,0)", 1114, (String) null, 1114, 991, 1114, 991, (String) null, "&PdVL+SR2=N", (-1863), 1114, (String) null);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.FUNCTION;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM((DatabaseObjectType) null);
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.FOREIGN_KEY;
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.TABLE_TYPE_DBO;
      DatabaseObjectType databaseObjectType3 = DatabaseObjectType.INDEX;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      DBUtil.isBinaryType(tableColumnInfo0);
      DBUtil.getSchemaNameFromDbObject(tableColumnInfo0);
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[2];
      TableColumnInfo tableColumnInfo1 = new TableColumnInfo("1", "mkq\"{d).uVqW^N`", "&PdVL+SR2=N", (String) null, 1774, "mkq\"{d).uVqW^N`", 991, (-591), (-591), 1774, (String) null, "mkq\"{d).uVqW^N`", 3083, 9999, (String) null);
      tableColumnInfoArray0[0] = tableColumnInfo1;
      tableColumnInfoArray0[1] = tableColumnInfo0;
      DBUtil.getColumnList(tableColumnInfoArray0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceDatabaseObjects();
      // Undeclared exception!
      try { 
        DBUtil.convertObjectToTableList((List<IDatabaseObjectInfo>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin2 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin3 = new DBCopyPlugin();
      dBCopyPlugin1.getDestSession();
      dBCopyPlugin3.getSourceSession();
      dBCopyPlugin1.setPasteToTableName("Or?Ye_55y0j a1v");
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[0];
      DBUtil.getColumnList(tableColumnInfoArray0);
      dBCopyPlugin3.getPluginUserSettingsFolder();
      CallableStatementWrapper callableStatementWrapper0 = null;
      try {
        callableStatementWrapper0 = new CallableStatementWrapper((CallableStatement) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // statement
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.StatementWrapper", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SQLAlias sQLAlias0 = new SQLAlias();
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = sQLAlias0.getDriverPropertiesClone();
      SQLDriver sQLDriver0 = new SQLDriver();
      sQLDriverPropertyCollection0.getDriverProperties();
      SQLDriver sQLDriver1 = new SQLDriver();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, " not found in _sessionsList when trying to remove it.", "DBUtil.error.firebirdcommit");
      DBUtil.getColumnType((ISQLConnection) null, (ITableInfo) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      System.setCurrentTimeMillis((-1720L));
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("la9&(I", "81%gTsiDJ6x!y5YK", "l8.<lIxhfXkc|rt", "Eo9j r/7 r\"", 0, "Eo9j r/7 r\"", 0, 7, (-832), 0, "", "l8.<lIxhfXkc|rt", 3349, 0, "R&{UM)-Y=U+!_.n K");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.TABLE;
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.BEST_ROW_ID;
      DatabaseObjectType.createNewDatabaseObjectType("#]AU4ZHVnDX2]b 3Q t^");
      BasicTreeUI basicTreeUI0 = new BasicTreeUI();
      DatabaseObjectType.createNewDatabaseObjectType("la9&(I");
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.INDEX;
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[2];
      iDatabaseObjectInfoArray0[0] = (IDatabaseObjectInfo) tableColumnInfo0;
      iDatabaseObjectInfoArray0[1] = (IDatabaseObjectInfo) tableColumnInfo0;
      // Undeclared exception!
      try { 
        DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // net.sourceforge.squirrel_sql.fw.sql.TableColumnInfo cannot be cast to net.sourceforge.squirrel_sql.fw.sql.ITableInfo
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("_trigger \n", " }in@|v!m3d\"fjZ[3]w", "gbbyS+>VB'3\">X]", " }in@|v!m3d\"fjZ[3]w", (-4), "E[", (-3407), 59, (-876), (-716), " }in@|v!m3d\"fjZ[3]w", "", (-3407), 59, "[");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.UDT_TYPE_DBO;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, "^>90|TcE1Y*NS", "VOSX", "la9&(I", 2004, "of/llPI!9/NJi", 1136, 12, (-1415), 2004, "6Th$Xffw", "la9&(I", 3349, (-2105376123), "la9&(I");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.BEST_ROW_ID;
      DatabaseObjectType.createNewDatabaseObjectType("VOSX");
      BasicTreeUI basicTreeUI0 = new BasicTreeUI();
      basicTreeUI0.getCollapsedIcon();
      basicTreeUI0.getExpandedIcon();
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.createNewDatabaseObjectType("F#pU{D&;2L", (Icon) null);
      DatabaseObjectType.createNewDatabaseObjectType("l8.<lIxhfXkc|rt");
      DatabaseObjectType.createNewDatabaseObjectType((String) null);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("l8.<lIxhfXkc|rt", "J", "J");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      // Undeclared exception!
      try { 
        DBUtil.getSchemaFromDbObject(databaseObjectInfo0, schemaInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // SQLDatabaseMetaData == null
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      File file0 = applicationFiles0.getChangeLogFile();
      MockFile mockFile0 = new MockFile("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileWrapperImpl fileWrapperImpl0 = new FileWrapperImpl(file0);
      // Undeclared exception!
      try { 
        DBUtil.getCreateTableSql(dBCopyPlugin0, (ITableInfo) null, "", "VOSX", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("_bG", "[ Options: [ short ", "'4_", "R(?BC", 2005, "\"'fY:_U", 23503, (-2040109463), 1446, 7, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", " N%)h|O&[@pp^j}", (-2273), (-2096353082), "\"'fY:_U");
      TableColumnInfo tableColumnInfo1 = new TableColumnInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", " N%)h|O&[@pp^j}", "VOSX", "_bG", 664, " N%)h|O&[@pp^j}", 1649, (-705), (-5), 1446, " N%)h|O&[@pp^j}", "Application.info.setjdbcdebuglog", 535, 243, "R(?BC");
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.executeUpdate((ISQLConnection) null, "' ", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      dBCopyPlugin0.setFileWrapperFactory(fileWrapperFactoryImpl0);
      // Undeclared exception!
      try { 
        DBUtil.getColumnList((TableColumnInfo[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.1641933683302232
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      int int0 = 0;
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      List<IDatabaseObjectInfo> list0 = DBUtil.convertTableToObjectList(arrayList0);
      DBUtil.convertObjectToTableList(list0);
      int int1 = 16;
      DBUtil.typesAreEquivalent(16, 0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      String string0 = "X\\:dy8+~.r0M36";
      String string1 = ";@F6omMv";
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      schemaInfo0.getSQLDatabaseMetaData();
      dBCopyPlugin0.getWebSite();
      String string2 = "org.hibernate.dialect.PostgreSQLDialect$1";
      String string3 = "fk_child_idx";
      String string4 = "zq\\2";
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[8];
      String string5 = "#QrKy";
      String string6 = "~ FUle9&S";
      int int2 = (-2099);
      int int3 = 7440;
      String string7 = "ignore rollback";
      int int4 = 1231;
      ConnectionWrapper connectionWrapper0 = null;
      try {
        connectionWrapper0 = new ConnectionWrapper((Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.ConnectionWrapper", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier((-2096353082));
      IntegerIdentifier integerIdentifier1 = new IntegerIdentifier(2005);
      SQLDriver sQLDriver0 = new SQLDriver(integerIdentifier1);
      UidIdentifier uidIdentifier1 = new UidIdentifier();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.deleteDataInExistingTable((ISession) null, "NuyGoW6)Zv", "R(IxI^y/B(rFt\"!", " }in@|v!m3d\"fjZ[3]w");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("PCekjip-[", "-8.<lIxhfXkc|rt", "l8.<lIxhfXkc|rt", "-8.<lIxhfXkc|rt", 0, "PCekjip-[", 2295, 2295, 59, (-832), "#]AU4ZVnDX2]b 3Q t^", "//", 1536, 2295, "PCekjip-[");
      TableColumnInfo tableColumnInfo1 = new TableColumnInfo("g'[C2w{'0p[w7W/", "R(IxI^y/B(rFt\"!", "hT:WkIE${iejtD", (String) null, (-3999), " cascade constraints", (-2579), (-441), 1573, (-832), "R(IxI^y/B(rFt\"!", "#]AU4ZVnDX2]b 3Q t^", (-2579), 125, "g'[C2w{'0p[w7W/");
      // Undeclared exception!
      try { 
        DBUtil.getMaxColumnLengthSQL((ISession) null, tableColumnInfo0, "(3G*QW3", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "[*ntQMzJ*0 N");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)70;
      byteArray0[1] = (byte) (-44);
      byteArray0[2] = (byte) (-42);
      byteArray0[3] = (byte) (-18);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      DBUtil.setLastStatement("");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      schemaInfo0.getSQLDatabaseMetaData();
      TableInfo tableInfo0 = null;
      try {
        tableInfo0 = new TableInfo("[*ntQMzJ*0 N", (String) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (String) null, "%BKg,tCSBD2'<#:", (ISQLDatabaseMetaData) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // SQLDatabaseMetaData == null
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[0];
      List<ITableInfo> list0 = DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
      assertTrue(list0.isEmpty());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      String string0 = "X\\:dy8+~.r0M36";
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("J~_", "X:dy8+~.r0M36", "J~_", "l8.<lIxhfXkc|rt", (-364), "X:dy8+~.r0M36", 43, (-364), (-832), 2752, (String) null, (String) null, (-832), (-396), "J~_");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.replaceOtherDataType((TableColumnInfo) null, (ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("", "", "~Qf3/z>qV", "Dw?irhybU(", 70, "~Qf3/z>qV", 1640, 1446, 70, 30, "object is a multicolumn type", (String) null, 1446, 2147483644, "");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.TABLE;
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      String string0 = DBUtil.fixCase((ISession) null, (String) null);
      assertNull(string0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      DBUtil.fixCase((ISession) null, "");
      SQLAlias sQLAlias0 = new SQLAlias();
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      SQLAlias sQLAlias1 = new SQLAlias(uidIdentifier0);
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = sQLAlias1.getDriverPropertiesClone();
      SQLDriver sQLDriver0 = new SQLDriver();
      sQLDriverPropertyCollection0.getDriverProperties();
      SQLDriver sQLDriver1 = new SQLDriver();
      SQLConnection sQLConnection0 = null;
      try {
        sQLConnection0 = new SQLConnection((Connection) null, sQLDriverPropertyCollection0, sQLDriver1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // SQLConnection == null
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.SQLConnection", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier((-2096353082));
      IntegerIdentifier integerIdentifier1 = new IntegerIdentifier(2005);
      SQLDriver sQLDriver0 = new SQLDriver(integerIdentifier1);
      UidIdentifier uidIdentifier1 = new UidIdentifier();
      //  // Unstable assertion: assertEquals("-76573cb2:16ecd1db0a8:-7e37", uidIdentifier1.toString());
      
      boolean boolean0 = DBUtil.typesAreEquivalent((-718), (-718));
      //  // Unstable assertion: assertTrue(boolean0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("HASH", (String) null, "HASH", "\n", (-920), "\n", 5468, (-920), 991, (-2573), ".cX/[e/L);", "#]AU4ZVnDX2]b 3Q t^", 5468, 215, "Y:cUr8K{G$NG");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.OTHER;
      DatabaseObjectType.createNewDatabaseObjectType(".cX/[e/L);");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.SYNONYM;
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.createNewDatabaseObjectType(".cX/[e/L);");
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource0 = new DefaultListCellRenderer.UIResource();
      defaultListCellRenderer_UIResource0.getIcon();
      DatabaseObjectType databaseObjectType3 = DatabaseObjectType.createNewDatabaseObjectType((String) null, (Icon) null);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      DatabaseObjectType databaseObjectType4 = DatabaseObjectType.SYNONYM;
      DatabaseObjectType.createNewDatabaseObjectType(" FROM SYSCAT.VIEWS ");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType3);
      DatabaseObjectType databaseObjectType5 = DatabaseObjectType.TABLE;
      DatabaseObjectType.createNewDatabaseObjectType((String) null);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType5);
      // Undeclared exception!
      try { 
        DBUtil.getSchemaFromDbObject(tableColumnInfo0, (SchemaInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      LinkedList<IDatabaseObjectInfo> linkedList0 = new LinkedList<IDatabaseObjectInfo>();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestDatabaseObject();
      linkedList0.add((IDatabaseObjectInfo) null);
      List<ITableInfo> list0 = DBUtil.convertObjectToTableList(linkedList0);
      DBUtil.convertTableToObjectList(list0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql/logs");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-44);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      // Undeclared exception!
      try { 
        DBUtil.getSchemaFromDbObject((IDatabaseObjectInfo) null, schemaInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (String) null, (String) null, "", (-2193), "2^/AI`?mm]", 128, 1024, 1024, 2004, "D6d*Q_=8Ezc!", "Z(pV,_i=m85vC$", 1, 2752, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      boolean boolean0 = DBUtil.typesAreEquivalent((-2), (-2));
      assertTrue(boolean0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      boolean boolean0 = DBUtil.typesAreEquivalent(135, (-832));
      assertFalse(boolean0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier((-2096353082));
      IntegerIdentifier integerIdentifier1 = new IntegerIdentifier(2005);
      SQLDriver sQLDriver0 = new SQLDriver(integerIdentifier1);
      UidIdentifier uidIdentifier1 = new UidIdentifier();
      //  // Unstable assertion: assertEquals("-76573cb2:16ecd1db0a8:-7e9d", uidIdentifier1.toString());
      
      boolean boolean0 = DBUtil.typesAreEquivalent((-2), 53);
      //  // Unstable assertion: assertFalse(boolean0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)24;
      byteArray0[1] = (byte)32;
      DBUtil.typesAreEquivalent(3, (byte)24);
      ConnectionWrapper connectionWrapper0 = null;
      try {
        connectionWrapper0 = new ConnectionWrapper((Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.ConnectionWrapper", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl2 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl1.getJDBCDebugLogFile();
      applicationFileWrappersImpl0.getUserPreferencesFile();
      applicationFileWrappersImpl1.getUserPreferencesFile();
      applicationFileWrappersImpl1.getLicenceFile();
      dBCopyPlugin0.setApplicationFiles(applicationFileWrappersImpl1);
      dBCopyPlugin0.unload();
      ForeignKeyInfo foreignKeyInfo0 = null;
      String string0 = "%E~j@";
      String string1 = "_RRx#3XJ%";
      String string2 = "7nf7mFv(S%";
      // Undeclared exception!
      try { 
        DBUtil.getSchemaNameFromDbObject((IDatabaseObjectInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("la9&(I", "81%gTsiDJ6x!y5YK", "l8.<lIxhfXkc|rt", "Eo9j r/7 r\"", 0, "Eo9j r/7 r\"", 0, 7, (-832), 0, "", "l8.<lIxhfXkc|rt", 3349, 0, "R&{UM)-Y=U+!_.n K");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.TABLE;
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.BEST_ROW_ID;
      DatabaseObjectType.createNewDatabaseObjectType("#]AU4ZHVnDX2]b 3Q t^");
      JInternalFrame jInternalFrame0 = new JInternalFrame();
      Icon icon0 = jInternalFrame0.getFrameIcon();
      DatabaseObjectType.createNewDatabaseObjectType(",\n\tPRIMARY KEY ", icon0);
      ImageIcon imageIcon0 = new ImageIcon("Eo9j r/7 r\"");
      DatabaseObjectType.createNewDatabaseObjectType("v5\"(e]%&b.$S^lqc", (Icon) imageIcon0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "v5\"(e]%&b.$S^lqc", "");
      // Undeclared exception!
      try { 
        DBUtil.getInsertSQL(dBCopyPlugin0, "DatabaseObjectType == null", (ITableInfo) null, 121);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("J~_", "J~_", (String) null, "Iva{oc", 1446, (String) null, 1446, 1190, 1446, 1190, "n(", (String) null, 1446, 1190, "Dw?irhybU(");
      TableColumnInfo tableColumnInfo1 = new TableColumnInfo("Dw?irhybU(", (String) null, "n(", "n(", 1446, (String) null, 2295, 236, 1446, (-832), "l8.<lIxhfXkc|rt", "n(", 1190, 1190, (String) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      int int0 = DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      assertEquals(1446, int0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier((-2096353082));
      IntegerIdentifier integerIdentifier1 = new IntegerIdentifier(2005);
      SQLDriver sQLDriver0 = new SQLDriver(integerIdentifier1);
      UidIdentifier uidIdentifier1 = new UidIdentifier();
      uidIdentifier0.setString("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      SQLDriver sQLDriver1 = new SQLDriver(uidIdentifier1);
      IntegerIdentifier integerIdentifier2 = new IntegerIdentifier(2005);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("DBUtil.info.bindclobfile", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "U:HGF*v", "S", (-2096353082), "(", (-3839), (-1584), (-1), 1924, "org.fest.swing.edt.GuiAction", "WHERE OWNER = ", (-2096353082), 621, "S");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      assertEquals("DBCopy Plugin", dBCopyPlugin1.getDescriptiveName());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      String string0 = "n(";
      String string1 = "bM=%3x6b4K";
      int int0 = 59;
      int int1 = 1640;
      int int2 = 2295;
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)91;
      byteArray0[1] = (byte)4;
      byteArray0[2] = (byte)108;
      byteArray0[3] = (byte)32;
      byteArray0[4] = (byte)110;
      byteArray0[5] = (byte)3;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      int int3 = (-832);
      String string2 = "' ";
      String string3 = "";
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.isKeyword((ISession) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.sameDatabaseType((ISession) null, (ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      DBUtil.getLastStatementValues();
      SQLAlias sQLAlias0 = new SQLAlias();
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      SQLAlias sQLAlias1 = new SQLAlias(uidIdentifier0);
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = sQLAlias1.getDriverPropertiesClone();
      SQLDriver sQLDriver0 = new SQLDriver();
      sQLDriverPropertyCollection0.getDriverProperties();
      SQLDriver sQLDriver1 = new SQLDriver();
      SQLConnection sQLConnection0 = null;
      try {
        sQLConnection0 = new SQLConnection((Connection) null, sQLDriverPropertyCollection0, sQLDriver1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // SQLConnection == null
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.SQLConnection", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("la9&(I", "81%gTsiDJ6x!y5YK", "-8.<lIxhfXkc|rt", "\n", 0, "\n", 0, 7, (-832), 3, "=\"", "l8.<lIxhfXkc|rt", 3349, 0, "R&{UM)-Y=U+!_.n K");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.TABLE;
      DatabaseObjectType.createNewDatabaseObjectType("@F|U-w};CR/Q0/wuw");
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.createNewDatabaseObjectType("#]AU4ZVnDX2]b 3Q t^");
      DatabaseObjectType.createNewDatabaseObjectType("-8.<lIxhfXkc|rt");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      // Undeclared exception!
      try { 
        DBUtil.isBinaryType((TableColumnInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "-8.<lIxhfXkc|rt", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", " }in@|v!m3d\"fjZ[3]w", 2000, "-8.<lIxhfXkc|rt", 2000, 31, 231, 231, " }in@|v!m3d\"fjZ[3]w", " ", 2003, 1421, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.getColumnSql(dBCopyPlugin1, tableColumnInfo0, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.TABLE;
      // Undeclared exception!
      try { 
        DBUtil.convertObjectArrayToTableList((IDatabaseObjectInfo[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.TABLE;
      DatabaseObjectType.createNewDatabaseObjectType("la9&(I");
      DatabaseObjectType.createNewDatabaseObjectType("#]AU4ZVnDX2]b 3Q t^");
      DatabaseObjectType.createNewDatabaseObjectType("-8.<lIxhfXkc|rt");
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.INDEX;
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[5];
      List<ITableInfo> list0 = DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
      assertEquals(5, list0.size());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl2 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl2.getDatabaseAliasesTreeStructureFile();
      ApplicationFileWrappersImpl applicationFileWrappersImpl3 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl4 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl4.getJDBCDebugLogFile();
      applicationFileWrappersImpl2.getUserPreferencesFile();
      applicationFileWrappersImpl3.getLicenceFile();
      // Undeclared exception!
      try { 
        DBUtil.getTables((ISession) null, "Yh6", "getSystemFunctions", "' ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.fixCase((ISession) null, "R(IxI^y/B(rFt\"!");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      DBUtil dBUtil0 = new DBUtil();
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      SQLDriver sQLDriver0 = new SQLDriver(uidIdentifier0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.getTableInfo((ISession) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier((-2096353082));
      IntegerIdentifier integerIdentifier1 = new IntegerIdentifier(2005);
      SQLDriver sQLDriver0 = new SQLDriver(integerIdentifier1);
      UidIdentifier uidIdentifier1 = new UidIdentifier();
      uidIdentifier0.setString("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      SQLDriver sQLDriver1 = new SQLDriver(uidIdentifier1);
      IntegerIdentifier integerIdentifier2 = new IntegerIdentifier(2005);
      SQLDriver sQLDriver2 = new SQLDriver(integerIdentifier0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.dropTable((String) null, "$Te=Y", "S", (ISession) null, true, (-2045222519));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.getQualifiedObjectName((ISession) null, "org.hibernate.dialect.IngresDialect", "9hM{FT", " ", (-3));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      FileWrapperFactoryImpl fileWrapperFactoryImpl1 = new FileWrapperFactoryImpl();
      FileWrapperFactoryImpl fileWrapperFactoryImpl2 = new FileWrapperFactoryImpl();
      dBCopyPlugin0.setFileWrapperFactory(fileWrapperFactoryImpl2);
      // Undeclared exception!
      try { 
        DBUtil.sanityCheckPreferences((ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      String string0 = DBUtil.getLastStatement();
      assertNull(string0);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      ArrayList<IDatabaseObjectInfo> arrayList0 = new ArrayList<IDatabaseObjectInfo>();
      DBUtil.convertObjectToTableList(arrayList0);
      DBCopyPreferenceBean dBCopyPreferenceBean0 = new DBCopyPreferenceBean();
      dBCopyPreferenceBean0.setWriteScript(false);
      int int0 = 0;
      dBCopyPreferenceBean0.setSelectFetchSize(0);
      dBCopyPreferenceBean0.setCheckKeywords(false);
      DBUtil.setPreferences(dBCopyPreferenceBean0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      String string0 = "";
      // Undeclared exception!
      try { 
        DBUtil.executeQuery((ISession) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.getCatSep((ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }
}
