/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 19:06:51 GMT 2019
 */

package org.pdfsam.guiclient.commons.models;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.lowagie.text.pdf.PdfGraphics2D;
import java.awt.AWTKeyStroke;
import java.awt.RenderingHints;
import java.awt.geom.AffineTransform;
import java.awt.image.BufferedImage;
import java.awt.image.ConvolveOp;
import java.awt.image.IndexColorModel;
import java.awt.image.Kernel;
import java.awt.image.renderable.ParameterBlock;
import java.util.ArrayDeque;
import java.util.Collection;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Hashtable;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Stack;
import java.util.TreeSet;
import java.util.Vector;
import java.util.function.BiConsumer;
import java.util.function.Consumer;
import javax.media.jai.OperationRegistry;
import javax.media.jai.operator.FPXDescriptor;
import javax.media.jai.operator.IIPResolutionDescriptor;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JLayeredPane;
import javax.swing.KeyStroke;
import javax.swing.event.ListDataListener;
import javax.swing.event.RowSorterEvent;
import javax.swing.table.DefaultTableColumnModel;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.pdfsam.guiclient.commons.models.VisualListModel;
import org.pdfsam.guiclient.dto.VisualPageListItem;
import sun.awt.SunHints;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class VisualListModel_ESTest extends VisualListModel_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.542197707885852
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      Consumer<VisualPageListItem> consumer0 = (Consumer<VisualPageListItem>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      linkedHashSet0.forEach(consumer0);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.elementChanged((VisualPageListItem) null);
      visualListModel0.prependAllElements(linkedHashSet0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[9];
      visualPageListItemArray0[0] = null;
      int[] intArray0 = new int[7];
      intArray0[0] = 2822;
      intArray0[1] = 2822;
      intArray0[2] = (-1276);
      intArray0[3] = 2822;
      intArray0[4] = 2822;
      intArray0[5] = 2822;
      intArray0[6] = 2822;
      visualListModel0.reverseElements(intArray0);
      visualListModel0.setData(visualPageListItemArray0);
      int[] intArray1 = new int[3];
      intArray1[0] = 2822;
      intArray1[1] = 2822;
      intArray1[2] = 2822;
      try { 
        visualListModel0.undeleteElements(intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 2822
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.6198787278292057
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.getValidElements();
      visualListModel0.prependAllElements((Collection<VisualPageListItem>) null);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.getSize();
      HashMap<RenderingHints.Key, Object> hashMap0 = new HashMap<RenderingHints.Key, Object>();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_ANTIALIASING;
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      VisualListModel visualListModel1 = new VisualListModel();
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.rotateAnticlockwiseElements(intArray0);
      VisualListModel visualListModel3 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      VisualListModel visualListModel4 = new VisualListModel();
      visualListModel2.setData((Vector<VisualPageListItem>) stack0);
      visualListModel2.moveDownIndexes(intArray0);
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem(0, "Nc?g)>Y<AWF_");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.7629091722923045
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElementAt((VisualPageListItem) null, (-384));
      int[] intArray0 = new int[1];
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[2];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualListModel0.setData(visualPageListItemArray0);
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      ArrayDeque<VisualPageListItem> arrayDeque0 = new ArrayDeque<VisualPageListItem>();
      hashSet0.addAll(arrayDeque0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.rotateClockwiseElements(intArray0);
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel0.addAllElements((-384), (Collection<VisualPageListItem>) hashSet0);
      visualListModel0.moveDownIndex(1);
      visualListModel1.getSize();
      VisualListModel visualListModel3 = new VisualListModel();
      visualListModel3.moveDownIndex(1824);
      visualListModel3.getSize();
      visualListModel1.removeElements(intArray0, false);
      visualListModel3.clearData();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel3.setData(vector0);
      vector0.add((VisualPageListItem) null);
      // Undeclared exception!
      try { 
        visualListModel0.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.867173317385429
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElementAt((VisualPageListItem) null, (-384));
      int[] intArray0 = new int[1];
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[2];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualListModel0.setData(visualPageListItemArray0);
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      visualListModel0.prependAllElements(hashSet0);
      visualListModel0.moveDownIndex((-384));
      JComboBox<VisualPageListItem> jComboBox0 = new JComboBox<VisualPageListItem>(visualPageListItemArray0);
      hashSet0.add(visualPageListItemArray0[0]);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.prependAllElements(hashSet0);
      visualListModel1.moveDownIndex((-384));
      VisualPageListItem[] visualPageListItemArray1 = new VisualPageListItem[3];
      Character character0 = new Character('B');
      HashMap<RenderingHints.Key, RenderingHints.Key> hashMap0 = new HashMap<RenderingHints.Key, RenderingHints.Key>();
      RenderingHints renderingHints0 = new RenderingHints(hashMap0);
      OperationRegistry.getThreadSafeOperationRegistry();
      ParameterBlock parameterBlock0 = new ParameterBlock();
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel1.moveUpIndexes(intArray0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel2.clearData();
      VisualListModel visualListModel3 = new VisualListModel();
      VisualListModel visualListModel4 = new VisualListModel();
      visualListModel4.setData((Vector<VisualPageListItem>) stack0);
      visualListModel2.moveDownIndexes(intArray0);
      visualListModel0.reverseElements(intArray0);
      visualListModel4.setData(visualPageListItemArray1);
      visualListModel3.undeleteElements(intArray0);
      visualListModel2.updateElementAt((-902), (VisualPageListItem) null);
      visualListModel3.removeElements(intArray0, true);
      assertFalse(visualListModel3.equals((Object)visualListModel1));
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.472540831253326
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElementAt((VisualPageListItem) null, (-384));
      int[] intArray0 = new int[1];
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[2];
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[1] = visualPageListItemArray0[1];
      visualListModel0.setData(visualPageListItemArray0);
      HashMap<RenderingHints.Key, Object> hashMap0 = new HashMap<RenderingHints.Key, Object>();
      Object object0 = new Object();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_RENDERING;
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      hashMap0.put(sunHints_Key0, visualListModel0);
      RowSorterEvent.Type rowSorterEvent_Type0 = RowSorterEvent.Type.SORT_ORDER_CHANGED;
      HashMap<RenderingHints.Key, Object> hashMap1 = new HashMap<RenderingHints.Key, Object>(hashMap0);
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_DITHERING;
      Integer integer1 = JLayeredPane.FRAME_CONTENT_LAYER;
      hashMap0.put(sunHints_Key1, integer1);
      Character character0 = new Character('T');
      Hashtable<RenderingHints.Key, Object> hashtable0 = new Hashtable<RenderingHints.Key, Object>();
      RenderingHints renderingHints0 = new RenderingHints(hashtable0);
      OperationRegistry.getThreadSafeOperationRegistry();
      ParameterBlock parameterBlock0 = new ParameterBlock();
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel0.moveUpIndexes(intArray0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.clearData();
      VisualListModel visualListModel3 = new VisualListModel();
      visualListModel3.setData((Vector<VisualPageListItem>) stack0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel3.reverseElements(intArray0);
      visualListModel1.setData(visualPageListItemArray0);
      // Undeclared exception!
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.3451614688224813
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[2];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualListModel0.setData(visualPageListItemArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.rotateClockwiseElements(intArray0);
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      VisualListModel visualListModel3 = new VisualListModel();
      visualListModel1.rotateAnticlockwiseElements(intArray0);
      VisualListModel visualListModel4 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add(visualPageListItemArray0[0]);
      VisualListModel visualListModel5 = new VisualListModel();
      visualListModel3.setData((Vector<VisualPageListItem>) stack0);
      int[] intArray1 = new int[3];
      intArray1[0] = 635;
      intArray1[1] = 635;
      intArray1[2] = 635;
      visualListModel1.moveDownIndexes(intArray1);
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem(635, "Nc?g)>Y<AWF_");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.228981377503334
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElementAt((VisualPageListItem) null, (-384));
      int[] intArray0 = new int[1];
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[2];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      hashSet0.add(visualPageListItemArray0[0]);
      visualListModel0.prependAllElements(hashSet0);
      HashSet<VisualPageListItem> hashSet1 = new HashSet<VisualPageListItem>();
      visualListModel0.moveDownIndex(666);
      JComboBox<VisualPageListItem> jComboBox0 = new JComboBox<VisualPageListItem>(visualPageListItemArray0);
      visualListModel0.removeListDataListener(jComboBox0);
      Integer integer0 = new Integer((-384));
      visualListModel0.reverseElements(intArray0);
      visualListModel0.removeElements(intArray0, true);
      List<VisualPageListItem> list0 = visualListModel0.getValidElements();
      assertNull(list0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.0185681646104108
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElementAt((VisualPageListItem) null, (-384));
      int[] intArray0 = new int[1];
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[2];
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[1] = visualPageListItemArray0[1];
      visualListModel0.setData(visualPageListItemArray0);
      HashMap<RenderingHints.Key, Object> hashMap0 = new HashMap<RenderingHints.Key, Object>();
      Object object0 = new Object();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_RENDERING;
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      hashMap0.put(sunHints_Key0, visualListModel0);
      RowSorterEvent.Type rowSorterEvent_Type0 = RowSorterEvent.Type.SORTED;
      HashMap<RenderingHints.Key, Object> hashMap1 = new HashMap<RenderingHints.Key, Object>(hashMap0);
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_DITHERING;
      Integer integer1 = JLayeredPane.FRAME_CONTENT_LAYER;
      hashMap0.put(sunHints_Key1, integer1);
      Character character0 = new Character('T');
      Hashtable<RenderingHints.Key, Object> hashtable0 = new Hashtable<RenderingHints.Key, Object>();
      hashtable0.keySet();
      RenderingHints renderingHints0 = new RenderingHints(hashtable0);
      OperationRegistry.getThreadSafeOperationRegistry();
      ParameterBlock parameterBlock0 = new ParameterBlock();
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel0.moveUpIndexes(intArray0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      SunHints.Key sunHints_Key2 = (SunHints.Key)RenderingHints.KEY_DITHERING;
      Integer integer2 = JLayeredPane.FRAME_CONTENT_LAYER;
      hashMap0.put(sunHints_Key0, (Object) null);
      visualListModel0.reverseElements(intArray0);
      assertEquals(2, visualListModel0.getSize());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.880022123484118
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElementAt((VisualPageListItem) null, (-384));
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[9];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[5] = null;
      visualPageListItemArray0[6] = null;
      visualPageListItemArray0[7] = null;
      visualPageListItemArray0[8] = null;
      visualListModel0.setData(visualPageListItemArray0);
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      OperationRegistry.getThreadSafeOperationRegistry();
      VisualListModel visualListModel1 = new VisualListModel();
      int[] intArray0 = new int[3];
      intArray0[0] = (-384);
      intArray0[1] = (-384);
      intArray0[2] = (-384);
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -384
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.3224106955121098
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElementAt((VisualPageListItem) null, (-384));
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[2];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualListModel0.setData(visualPageListItemArray0);
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      visualListModel0.prependAllElements(hashSet0);
      visualListModel0.getListDataListeners();
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.addElement(visualPageListItemArray0[0]);
      visualListModel1.clearData();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      assertEquals(10, stack0.capacity());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.2654436797543704
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      HashMap<RenderingHints.Key, Object> hashMap0 = new HashMap<RenderingHints.Key, Object>();
      Object object0 = new Object();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_RENDERING;
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      Integer integer1 = new Integer((-384));
      hashMap0.put(sunHints_Key0, integer1);
      RowSorterEvent.Type rowSorterEvent_Type0 = RowSorterEvent.Type.SORT_ORDER_CHANGED;
      HashMap<RenderingHints.Key, Object> hashMap1 = new HashMap<RenderingHints.Key, Object>(hashMap0);
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_DITHERING;
      Integer integer2 = JLayeredPane.FRAME_CONTENT_LAYER;
      hashMap0.put(sunHints_Key1, (Object) null);
      Character character0 = new Character('S');
      RenderingHints renderingHints0 = new RenderingHints(hashMap1);
      OperationRegistry.getThreadSafeOperationRegistry();
      ParameterBlock parameterBlock0 = new ParameterBlock();
      VisualListModel visualListModel1 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel1.moveUpIndexes(intArray0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel1.clearData();
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel1.setData((Vector<VisualPageListItem>) stack0);
      visualListModel2.moveDownIndexes(intArray0);
      // Undeclared exception!
      try { 
        visualListModel1.undeleteElements((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.7818237633141387
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElementAt((VisualPageListItem) null, (-384));
      int[] intArray0 = new int[1];
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[2];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualListModel0.setData(visualPageListItemArray0);
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.rotateClockwiseElements(intArray0);
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel0.addAllElements((-1259), (Collection<VisualPageListItem>) hashSet0);
      VisualListModel visualListModel3 = new VisualListModel();
      visualListModel3.rotateAnticlockwiseElements(intArray0);
      VisualListModel visualListModel4 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      VisualListModel visualListModel5 = new VisualListModel();
      visualListModel5.setData((Vector<VisualPageListItem>) stack0);
      visualListModel3.moveDownIndexes(intArray0);
      VisualListModel visualListModel6 = new VisualListModel();
      visualListModel6.reverseElements(intArray0);
      visualListModel1.setData(visualPageListItemArray0);
      VisualListModel visualListModel7 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel1.undeleteElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.7300480657918285
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      Consumer<VisualPageListItem> consumer0 = (Consumer<VisualPageListItem>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      linkedHashSet0.forEach(consumer0);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      VisualPageListItem visualPageListItem0 = null;
      visualListModel0.addElement((VisualPageListItem) null);
      boolean boolean0 = false;
      visualListModel0.subList(2822, 2822, false);
      visualListModel0.getElements();
      visualListModel0.elementChanged((VisualPageListItem) null);
      visualListModel0.prependAllElements((Collection<VisualPageListItem>) null);
      visualListModel0.updateElementAt(2822, (VisualPageListItem) null);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[9];
      visualPageListItemArray0[0] = null;
      int int0 = 2510;
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.setData(vector0);
      VisualPageListItem visualPageListItem1 = null;
      try {
        visualPageListItem1 = new VisualPageListItem(2510);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.880022123484118
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem visualPageListItem0 = null;
      visualListModel0.addElementAt((VisualPageListItem) null, (-384));
      int[] intArray0 = new int[1];
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[2];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualListModel0.setData(visualPageListItemArray0);
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      VisualListModel visualListModel1 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.620089674945963
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) linkedHashSet0);
      visualListModel0.moveUpIndex(0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.getListDataListeners();
      linkedHashSet0.add((VisualPageListItem) null);
      int[] intArray0 = new int[4];
      HashMap<RenderingHints.Key, Object> hashMap0 = new HashMap<RenderingHints.Key, Object>();
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      Object object0 = new Object();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_RENDERING;
      Integer integer1 = JLayeredPane.MODAL_LAYER;
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[4];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualListModel1.setData(visualPageListItemArray0);
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      visualListModel1.prependAllElements(linkedHashSet0);
      visualListModel0.moveDownIndex(0);
      JComboBox<VisualPageListItem> jComboBox0 = new JComboBox<VisualPageListItem>(visualPageListItemArray0);
      visualListModel1.moveUpIndex(10);
      visualListModel0.removeListDataListener(jComboBox0);
      visualListModel0.getSize();
      visualListModel1.reverseElements(intArray0);
      // Undeclared exception!
      try { 
        visualListModel1.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.631322079921271
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) linkedHashSet0);
      visualListModel0.moveUpIndex(0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.getListDataListeners();
      int[] intArray0 = new int[4];
      HashMap<RenderingHints.Key, Object> hashMap0 = new HashMap<RenderingHints.Key, Object>();
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      Object object0 = new Object();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_RENDERING;
      Integer integer1 = JLayeredPane.MODAL_LAYER;
      hashMap0.put(sunHints_Key0, integer1);
      RowSorterEvent.Type rowSorterEvent_Type0 = RowSorterEvent.Type.SORT_ORDER_CHANGED;
      HashMap<RenderingHints.Key, Object> hashMap1 = new HashMap<RenderingHints.Key, Object>(hashMap0);
      hashMap1.put(sunHints_Key0, linkedHashSet0);
      Character character0 = new Character('B');
      KeyStroke keyStroke0 = KeyStroke.getKeyStroke(character0, 0);
      hashMap0.put(sunHints_Key0, keyStroke0);
      RenderingHints renderingHints0 = new RenderingHints(hashMap1);
      OperationRegistry.getThreadSafeOperationRegistry();
      ParameterBlock parameterBlock0 = new ParameterBlock();
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.moveUpIndexes(intArray0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.clearData();
      visualListModel0.moveDownIndexes(intArray0);
      int[] intArray1 = new int[3];
      intArray1[0] = (int) 'B';
      intArray1[1] = 0;
      intArray1[2] = 0;
      visualListModel2.undeleteElements(intArray1);
      visualListModel1.subList(0, 66);
      visualListModel1.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      assertFalse(visualListModel1.equals((Object)visualListModel0));
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.2508570947192676
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Integer[] integerArray0 = new Integer[6];
      Integer integer0 = IIPResolutionDescriptor.MAX_RESOLUTION;
      integerArray0[0] = integer0;
      Integer integer1 = JLayeredPane.FRAME_CONTENT_LAYER;
      integerArray0[1] = integer1;
      Integer integer2 = IIPResolutionDescriptor.MAX_RESOLUTION;
      integerArray0[2] = integer2;
      Integer integer3 = FPXDescriptor.MAX_RESOLUTION;
      integerArray0[3] = integer3;
      Integer integer4 = new Integer((int) integerArray0[1]);
      integerArray0[4] = integer4;
      Integer integer5 = JLayeredPane.POPUP_LAYER;
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.subList(0, 0, true);
      Stack<String> stack0 = new Stack<String>();
      DefaultComboBoxModel<String> defaultComboBoxModel0 = new DefaultComboBoxModel<String>(stack0);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel0.getElementAt(50);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_DITHERING;
      RowSorterEvent.Type rowSorterEvent_Type0 = RowSorterEvent.Type.SORTED;
      HashMap<RenderingHints.Key, Object> hashMap0 = null;
      try {
        hashMap0 = new HashMap<RenderingHints.Key, Object>((int) integerArray0[4], (-2257.9194F));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal initial capacity: -30000
         //
         verifyException("java.util.HashMap", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.9459959973559475
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElementAt((VisualPageListItem) null, (-384));
      int[] intArray0 = new int[1];
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[2];
      visualPageListItemArray0[1] = null;
      visualListModel0.setData(visualPageListItemArray0);
      HashMap<RenderingHints.Key, Object> hashMap0 = new HashMap<RenderingHints.Key, Object>();
      Object object0 = new Object();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_RENDERING;
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      HashMap<RenderingHints.Key, Object> hashMap1 = new HashMap<RenderingHints.Key, Object>();
      Object object1 = new Object();
      hashMap1.put(sunHints_Key0, object1);
      RowSorterEvent.Type rowSorterEvent_Type0 = RowSorterEvent.Type.SORT_ORDER_CHANGED;
      HashMap<RenderingHints.Key, Object> hashMap2 = new HashMap<RenderingHints.Key, Object>(hashMap0);
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_DITHERING;
      Integer integer1 = JLayeredPane.FRAME_CONTENT_LAYER;
      HashMap<RenderingHints.Key, Object> hashMap3 = new HashMap<RenderingHints.Key, Object>();
      hashMap3.put(sunHints_Key0, hashMap0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.elementChanged((VisualPageListItem) null);
      assertEquals(2, visualListModel0.getSize());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.156496413892256
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[2];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualListModel0.setData(visualPageListItemArray0);
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      visualListModel0.prependAllElements(hashSet0);
      HashSet<VisualPageListItem> hashSet1 = new HashSet<VisualPageListItem>();
      hashSet1.add(visualPageListItemArray0[1]);
      visualListModel0.prependAllElements(hashSet1);
      visualListModel0.getSize();
      visualListModel0.getSize();
      AWTKeyStroke.getAWTKeyStroke((-1612), (-1612));
      HashMap<RenderingHints.Key, Object> hashMap0 = new HashMap<RenderingHints.Key, Object>();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_ALPHA_INTERPOLATION;
      hashMap0.put(sunHints_Key0, hashSet1);
      Character character0 = new Character(',');
      OperationRegistry.getThreadSafeOperationRegistry();
      ParameterBlock parameterBlock0 = new ParameterBlock();
      VisualListModel visualListModel1 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.clearData();
      VisualListModel visualListModel2 = new VisualListModel();
      VisualListModel visualListModel3 = new VisualListModel();
      visualListModel3.setData((Vector<VisualPageListItem>) stack0);
      visualListModel0.setData(visualPageListItemArray0);
      assertEquals(2, visualListModel0.getSize());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.3847257578340364
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElementAt((VisualPageListItem) null, (-384));
      int[] intArray0 = new int[1];
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[2];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualListModel0.setData(visualPageListItemArray0);
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      visualListModel0.prependAllElements(hashSet0);
      HashSet<VisualPageListItem> hashSet1 = new HashSet<VisualPageListItem>();
      visualListModel0.prependAllElements(hashSet1);
      visualListModel0.moveDownIndex((-384));
      visualListModel0.getSize();
      visualListModel0.getSize();
      // Undeclared exception!
      try { 
        visualListModel0.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.1553659796953863
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElementAt((VisualPageListItem) null, (-384));
      int[] intArray0 = new int[1];
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[2];
      visualPageListItemArray0[1] = null;
      visualListModel0.setData(visualPageListItemArray0);
      HashMap<RenderingHints.Key, Object> hashMap0 = new HashMap<RenderingHints.Key, Object>();
      Object object0 = new Object();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_RENDERING;
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      HashMap<RenderingHints.Key, Object> hashMap1 = new HashMap<RenderingHints.Key, Object>();
      Object object1 = new Object();
      hashMap1.put(sunHints_Key0, object1);
      RowSorterEvent.Type rowSorterEvent_Type0 = RowSorterEvent.Type.SORT_ORDER_CHANGED;
      HashMap<RenderingHints.Key, Object> hashMap2 = new HashMap<RenderingHints.Key, Object>(hashMap0);
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_DITHERING;
      Integer integer1 = JLayeredPane.FRAME_CONTENT_LAYER;
      HashMap<RenderingHints.Key, Object> hashMap3 = new HashMap<RenderingHints.Key, Object>();
      hashMap3.put(sunHints_Key0, hashMap0);
      visualListModel0.removeElements(intArray0, true);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.elementChanged((VisualPageListItem) null);
      assertEquals(1, visualListModel0.getSize());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.4715093613566137
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      Consumer<VisualPageListItem> consumer0 = (Consumer<VisualPageListItem>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      linkedHashSet0.forEach(consumer0);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.elementChanged((VisualPageListItem) null);
      visualListModel0.prependAllElements(linkedHashSet0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[9];
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.clearData();
      VisualListModel visualListModel1 = new VisualListModel();
      VisualListModel visualListModel2 = new VisualListModel();
      Stack<VisualPageListItem> stack1 = new Stack<VisualPageListItem>();
      visualListModel2.setData((Vector<VisualPageListItem>) stack1);
      visualListModel2.setData(visualPageListItemArray0);
      assertEquals(9, visualListModel2.getSize());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.2801024911433996
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElementAt((VisualPageListItem) null, (-384));
      int[] intArray0 = new int[1];
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[2];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualListModel0.setData(visualPageListItemArray0);
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      OperationRegistry.getThreadSafeOperationRegistry();
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.rotateClockwiseElements(intArray0);
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      treeSet0.containsAll(hashSet0);
      visualListModel0.addAllElements((-384), (Collection<VisualPageListItem>) treeSet0);
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.5025736131826015
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.removeElements(intArray0, false);
      OperationRegistry.getThreadSafeOperationRegistry();
      float[] floatArray0 = new float[3];
      floatArray0[0] = (float) (-1);
      floatArray0[1] = (-1.0F);
      floatArray0[2] = (float) (-1);
      Kernel kernel0 = new Kernel((-1), (-1), floatArray0);
      Hashtable<RenderingHints.Key, Object> hashtable0 = new Hashtable<RenderingHints.Key, Object>();
      RenderingHints renderingHints0 = new RenderingHints(hashtable0);
      ConvolveOp convolveOp0 = new ConvolveOp(kernel0, (-1), renderingHints0);
      visualListModel0.moveDownIndex(2040);
      visualListModel0.removeElements(6, 0, false);
      visualListModel0.moveUpIndex(916);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.moveUpIndexes(intArray0);
      visualListModel0.undeleteElements(intArray0);
      visualListModel1.moveDownIndexes(intArray0);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.undeleteElements(intArray0);
      assertFalse(visualListModel2.equals((Object)visualListModel1));
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.436463203826685
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElementAt((VisualPageListItem) null, (-384));
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[2];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualListModel0.setData(visualPageListItemArray0);
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      visualListModel0.prependAllElements(hashSet0);
      JComboBox<VisualPageListItem> jComboBox0 = new JComboBox<VisualPageListItem>(visualPageListItemArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.prependAllElements(hashSet0);
      visualListModel1.moveDownIndex((-384));
      VisualPageListItem[] visualPageListItemArray1 = new VisualPageListItem[3];
      visualPageListItemArray1[0] = null;
      visualPageListItemArray1[1] = null;
      visualPageListItemArray1[2] = null;
      JComboBox<VisualPageListItem> jComboBox1 = new JComboBox<VisualPageListItem>(visualPageListItemArray1);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel0.moveDownIndex(0);
      visualListModel0.removeElements(0, (-384), false);
      visualListModel1.moveUpIndex((-3316));
      BufferedImage bufferedImage0 = null;
      try {
        bufferedImage0 = new BufferedImage((-360), 106, (-3316), (IndexColorModel) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.image.BufferedImage", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      TreeSet<VisualPageListItem> treeSet1 = new TreeSet<VisualPageListItem>();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) treeSet0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.moveUpIndex(0);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.getListDataListeners();
      visualListModel2.addElement((VisualPageListItem) null);
      visualListModel0.updateElementAt(1877, (VisualPageListItem) null);
      assertFalse(visualListModel0.equals((Object)visualListModel2));
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.8207751622034678
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      TreeSet<VisualPageListItem> treeSet1 = new TreeSet<VisualPageListItem>();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) linkedHashSet0);
      visualListModel0.moveUpIndex(2);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel0.getListDataListeners();
      visualListModel1.addElement((VisualPageListItem) null);
      visualListModel1.updateElementAt((-1), (VisualPageListItem) null);
      assertEquals(1, visualListModel1.getSize());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.subList(1084, (-980), false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(1084) > toIndex(-980)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.setData((Vector<VisualPageListItem>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.8599785716462063
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel0.getListDataListeners();
      HashMap<RenderingHints.Key, Object> hashMap0 = new HashMap<RenderingHints.Key, Object>();
      Object object0 = new Object();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_RENDERING;
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      hashMap0.put(sunHints_Key0, integer0);
      RowSorterEvent.Type rowSorterEvent_Type0 = RowSorterEvent.Type.SORT_ORDER_CHANGED;
      HashMap<RenderingHints.Key, Object> hashMap1 = new HashMap<RenderingHints.Key, Object>(hashMap0);
      hashMap1.put(sunHints_Key0, linkedHashSet0);
      Integer integer1 = JLayeredPane.PALETTE_LAYER;
      hashMap1.put(sunHints_Key0, integer1);
      AWTKeyStroke aWTKeyStroke0 = AWTKeyStroke.getAWTKeyStroke((-2685), 835);
      hashMap0.put(sunHints_Key0, aWTKeyStroke0);
      Character character0 = new Character('B');
      OperationRegistry.getThreadSafeOperationRegistry();
      ParameterBlock parameterBlock0 = new ParameterBlock();
      VisualListModel visualListModel2 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.clearData();
      VisualListModel visualListModel3 = new VisualListModel();
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[0];
      visualListModel0.setData(visualPageListItemArray0);
      assertFalse(visualListModel0.equals((Object)visualListModel2));
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveUpIndex(6);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      RenderingHints renderingHints0 = new RenderingHints(sunHints_Key0, (Object) null);
      visualListModel0.removeElements((-655), (-655), true);
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(20000, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 20000
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      int[] intArray0 = new int[5];
      int[] intArray1 = new int[0];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[1] = 0;
      intArray0[3] = 1932;
      intArray0[4] = (-303);
      HashMap<RenderingHints.Key, String> hashMap0 = new HashMap<RenderingHints.Key, String>();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_ANTIALIASING;
      RenderingHints renderingHints0 = new RenderingHints(hashMap0);
      OperationRegistry.getThreadSafeOperationRegistry();
      ParameterBlock parameterBlock0 = new ParameterBlock();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.removeElements(183, 1932, true);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.4466856169199285
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      OperationRegistry.getThreadSafeOperationRegistry();
      OperationRegistry.getThreadSafeOperationRegistry();
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.removeElements(intArray0, true);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel1.rotateAnticlockwiseElements(intArray0);
      visualListModel1.removeElements(1000, (-1), true);
      assertEquals(0, visualListModel1.getSize());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.setData((VisualPageListItem[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.8212565066006587
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElementAt((VisualPageListItem) null, (-384));
      int[] intArray0 = new int[1];
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[2];
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[1] = visualPageListItemArray0[1];
      visualListModel0.setData(visualPageListItemArray0);
      HashMap<RenderingHints.Key, Object> hashMap0 = new HashMap<RenderingHints.Key, Object>();
      Object object0 = new Object();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_RENDERING;
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      hashMap0.put(sunHints_Key0, visualListModel0);
      RowSorterEvent.Type rowSorterEvent_Type0 = RowSorterEvent.Type.SORT_ORDER_CHANGED;
      HashMap<RenderingHints.Key, Object> hashMap1 = new HashMap<RenderingHints.Key, Object>(hashMap0);
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        visualListModel0.removeElements(intArray0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualListModel visualListModel1 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.moveUpIndexes((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.5168760810714366
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.reverseElements(intArray0);
      visualListModel0.getValidElements();
      visualListModel0.prependAllElements((Collection<VisualPageListItem>) null);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.getSize();
      HashMap<RenderingHints.Key, Object> hashMap0 = new HashMap<RenderingHints.Key, Object>();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_ANTIALIASING;
      BiConsumer<RenderingHints.Key, Object> biConsumer0 = (BiConsumer<RenderingHints.Key, Object>) mock(BiConsumer.class, new ViolatedAssumptionAnswer());
      hashMap0.forEach(biConsumer0);
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      HashMap<RenderingHints.Key, Object> hashMap1 = new HashMap<RenderingHints.Key, Object>();
      hashMap1.put(sunHints_Key0, (Object) null);
      RowSorterEvent.Type rowSorterEvent_Type0 = RowSorterEvent.Type.SORT_ORDER_CHANGED;
      visualListModel0.getElementAt(1164);
      hashMap0.put(sunHints_Key0, (Object) null);
      Integer integer1 = new Integer(20000);
      Integer integer2 = JLayeredPane.POPUP_LAYER;
      Integer.getInteger("lR'AV^{'XYF[>kqwLu2", integer2);
      hashMap0.put(sunHints_Key0, integer1);
      RenderingHints renderingHints0 = new RenderingHints(hashMap0);
      OperationRegistry.getThreadSafeOperationRegistry();
      ParameterBlock parameterBlock0 = new ParameterBlock();
      OperationRegistry.getThreadSafeOperationRegistry();
      visualListModel0.rotateClockwiseElements(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.reverseElements((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addAllElements(151, (Collection<VisualPageListItem>) linkedHashSet0);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.getElementAt((-1975));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getElements();
      float[] floatArray0 = new float[0];
      Kernel kernel0 = null;
      try {
        kernel0 = new Kernel((-250), (-250), floatArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Data array too small (is 0 and should be 62500
         //
         verifyException("java.awt.image.Kernel", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = null;
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.setData(vector0);
      // Undeclared exception!
      try { 
        visualListModel0.moveDownIndexes((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.203456186693981
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[5];
      int[] intArray1 = new int[0];
      visualListModel0.reverseElements(intArray1);
      int int0 = 0;
      intArray0[1] = 0;
      intArray0[1] = (-29);
      int int1 = 1932;
      visualListModel0.getValidElements();
      intArray0[3] = 1932;
      visualListModel0.prependAllElements((Collection<VisualPageListItem>) null);
      intArray0[4] = (-29);
      HashMap<RenderingHints.Key, String> hashMap0 = new HashMap<RenderingHints.Key, String>();
      float[] floatArray0 = new float[6];
      floatArray0[1] = (float) 0;
      floatArray0[3] = (float) (-29);
      floatArray0[4] = (float) 1932;
      Kernel kernel0 = new Kernel((-29), 0, floatArray0);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_ANTIALIASING;
      HashMap<RenderingHints.Key, Object> hashMap1 = new HashMap<RenderingHints.Key, Object>();
      hashMap1.put(sunHints_Key0, kernel0);
      Object object0 = hashMap1.put(sunHints_Key0, sunHints_Key0);
      RenderingHints renderingHints0 = new RenderingHints(hashMap0);
      OperationRegistry.getThreadSafeOperationRegistry();
      ParameterBlock parameterBlock0 = new ParameterBlock();
      OperationRegistry.getThreadSafeOperationRegistry();
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel0.rotateClockwiseElements(intArray0);
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      visualListModel0.rotateAnticlockwiseElements(intArray1);
      visualListModel1.getValidElements();
      float float0 = (-3046.0364F);
      RenderingHints renderingHints1 = new RenderingHints(sunHints_Key0, object0);
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      // Undeclared exception!
      try { 
        renderingHints1.put(hashMap0, pdfGraphics2D_HyperLinkKey0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.util.HashMap cannot be cast to java.awt.RenderingHints$Key
         //
         verifyException("java.awt.RenderingHints", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) null);
      int[] intArray0 = new int[1];
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.615537791432606
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.add((VisualPageListItem) null);
      int[] intArray0 = new int[8];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 0;
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) linkedHashSet0);
      intArray0[3] = 0;
      intArray0[4] = (-1);
      intArray0[5] = 0;
      intArray0[6] = 0;
      intArray0[7] = 0;
      visualListModel0.rotateClockwiseElements(intArray0);
      TreeSet<VisualPageListItem> treeSet1 = new TreeSet<VisualPageListItem>();
      visualListModel0.addAllElements(356, (Collection<VisualPageListItem>) null);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.rotateAnticlockwiseElements(intArray0);
      VisualListModel visualListModel2 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      VisualListModel visualListModel3 = new VisualListModel();
      visualListModel3.setData(vector0);
      visualListModel3.moveDownIndexes(intArray0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[4];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualListModel2.setData(visualPageListItemArray0);
      VisualListModel visualListModel4 = new VisualListModel();
      visualListModel4.undeleteElements(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.4841652152843623
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>(3006);
      visualListModel0.appendAllElements(linkedHashSet0);
      LinkedHashSet<VisualPageListItem> linkedHashSet1 = new LinkedHashSet<VisualPageListItem>();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      linkedHashSet1.removeAll(stack0);
      VisualListModel visualListModel1 = new VisualListModel();
      ParameterBlock parameterBlock0 = new ParameterBlock();
      OperationRegistry operationRegistry0 = new OperationRegistry();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_ANTIALIASING;
      RenderingHints renderingHints0 = new RenderingHints(sunHints_Key0, parameterBlock0);
      // Undeclared exception!
      try { 
        operationRegistry0.createCollection("", parameterBlock0, renderingHints0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No descriptor by name \"\" is registered under mode \"collection\".
         //
         verifyException("javax.media.jai.OperationRegistry", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.removeListDataListener((ListDataListener) null);
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(0, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      Consumer<VisualPageListItem> consumer0 = (Consumer<VisualPageListItem>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      visualListModel0.subList(1000, 1000, false);
      Collection<VisualPageListItem> collection0 = visualListModel0.subList(593, 2123, true);
      assertNull(collection0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.elementsChanged();
      float[] floatArray0 = new float[9];
      floatArray0[0] = 0.0F;
      floatArray0[1] = (-166.48389F);
      floatArray0[2] = 0.0F;
      floatArray0[3] = 0.0F;
      floatArray0[4] = 524.4207F;
      floatArray0[5] = (float) 0;
      floatArray0[6] = (float) 0;
      floatArray0[7] = (-166.48389F);
      floatArray0[8] = (float) 0;
      Kernel kernel0 = new Kernel(0, 0, floatArray0);
      BufferedImage bufferedImage0 = null;
      try {
        bufferedImage0 = new BufferedImage((-1818), (-1904), (-1965));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown image type -1965
         //
         verifyException("java.awt.image.BufferedImage", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.3303466540076667
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Collection<VisualPageListItem> collection0 = visualListModel0.subList(0, 0);
      visualListModel0.addAllElements(collection0);
      visualListModel0.getElementAt(356);
      visualListModel0.getValidElements();
      int[] intArray0 = new int[1];
      intArray0[0] = 356;
      visualListModel0.reverseElements(intArray0);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.subList(356, 0, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(356) > toIndex(0)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.0067795890632527
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.subList(0, 0, false);
      VisualListModel visualListModel2 = new VisualListModel();
      assertEquals(0, visualListModel2.getSize());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = (-1173);
      // Undeclared exception!
      try { 
        visualListModel0.subList(1021, (-1173));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(1021) > toIndex(-1173)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      OperationRegistry.getThreadSafeOperationRegistry();
      ParameterBlock parameterBlock0 = new ParameterBlock();
      Vector<Object> vector0 = parameterBlock0.getParameters();
      ParameterBlock parameterBlock1 = new ParameterBlock(vector0);
      Collection<VisualPageListItem> collection0 = visualListModel0.subList((-980), (-980), true);
      assertNull(collection0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.3120076729259056
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      ParameterBlock parameterBlock0 = new ParameterBlock();
      Vector<Object> vector0 = parameterBlock0.getSources();
      ParameterBlock parameterBlock1 = new ParameterBlock(vector0, vector0);
      Vector<Object> vector1 = parameterBlock1.getSources();
      vector1.clear();
      JComboBox<Object> jComboBox0 = new JComboBox<Object>(vector1);
      visualListModel0.addListDataListener(jComboBox0);
      visualListModel0.subList((-4437), (-1184));
      // Undeclared exception!
      try { 
        visualListModel0.subList(1084, (-980), true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(1084) > toIndex(-980)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      AffineTransform.getQuadrantRotateInstance((-1207));
      SunHints.LCDContrastKey sunHints_LCDContrastKey0 = (SunHints.LCDContrastKey)RenderingHints.KEY_TEXT_LCD_CONTRAST;
      visualListModel0.getElementAt(0);
      RenderingHints renderingHints0 = new RenderingHints(sunHints_LCDContrastKey0, (Object) null);
      DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
      DefaultTableColumnModel defaultTableColumnModel1 = new DefaultTableColumnModel();
      defaultTableColumnModel1.getColumnCount();
      // Undeclared exception!
      try { 
        renderingHints0.put(defaultTableColumnModel0, defaultTableColumnModel1);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // javax.swing.table.DefaultTableColumnModel cannot be cast to java.awt.RenderingHints$Key
         //
         verifyException("java.awt.RenderingHints", e);
      }
  }
}
