/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 19:21:36 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.InputStream;
import java.io.ObjectInputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassReader;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.654937111837786
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "NX", "NX", "T@{8RXP<9>,", "T@{8RXP<9>,");
      ByteVector byteVector0 = classWriter0.pool;
      byteVector0.putInt(131072);
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 0, "T@{8RXP<9>,", "NX", "NX", "NX");
      ClassWriter classWriter1 = new ClassWriter(3);
      ByteVector byteVector1 = classWriter1.pool;
      ByteVector byteVector2 = byteVector0.putInt(1);
      classWriter0.toByteArray();
      fieldWriter1.put(byteVector2);
      Attribute attribute0 = new Attribute("I");
      classWriter0.visitMethod(722, "", "T@{8RXP<9>,", ",n]", (String[]) null);
      Attribute attribute1 = attribute0.next;
      fieldWriter0.visitAnnotation("", false);
      fieldWriter1.visitAttribute(attribute0);
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter1.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.2885387096069334
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      String string0 = "=4K";
      String string1 = null;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "=4K", "=4K", (String) null, (Object) null);
      fieldWriter0.getSize();
      byte byte0 = (byte)114;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)56;
      // Undeclared exception!
      try { 
        fieldWriter0.put((ByteVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.687174305680018
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "NX", "NX", "T@{8RXP<9>,", "T@{8RXP<9>,");
      ByteVector byteVector0 = classWriter0.pool;
      byteVector0.putInt(131072);
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 0, "T@{8RXP<9>,", "NX", "NX", "NX");
      ClassWriter classWriter1 = new ClassWriter(3);
      ByteVector byteVector1 = classWriter1.pool;
      ByteVector byteVector2 = byteVector0.putInt(1);
      fieldWriter1.put(byteVector2);
      Attribute attribute0 = new Attribute("I");
      classWriter0.visitMethod(722, "", "T@{8RXP<9>,", ",n]", (String[]) null);
      Attribute attribute1 = attribute0.next;
      fieldWriter0.visitAnnotation("", false);
      fieldWriter1.visitAttribute(attribute0);
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      String string0 = "=4K";
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "=4K", "=4K", "=4K", "=4K");
      ByteVector byteVector0 = classWriter0.pool;
      ByteVector byteVector1 = byteVector0.putInt(0);
      ByteVector byteVector2 = byteVector1.putShort(131072);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)46;
      byteArray0[1] = (byte)13;
      byteArray0[2] = (byte) (-19);
      byteArray0[3] = (byte) (-127);
      byteArray0[4] = (byte)8;
      byteVector2.data = byteArray0;
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ByteVector", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.5105940255887167
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      boolean boolean0 = true;
      classWriter0.newMethodItem("=4K", "=4K", "=4K", true);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "=4K", "=4K", (String) null, (Object) null);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.getSize();
      String string0 = "(S_f[YbP<]\"G8^zBN]5";
      byteVector0.putUTF8("(S_f[YbP<]\"G8^zBN]5");
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, (-7), "org.apache.commons.io.filefilter.AndFileFilter", "=4K", "=4K", "org.apache.commons.io.filefilter.AndFileFilter");
      ByteVector byteVector1 = new ByteVector(1);
      ByteVector byteVector2 = byteVector0.put11(2, 1656);
      byteVector2.put11(1, (-881));
      ByteVector byteVector3 = new ByteVector(0);
      byteVector1.putInt((-7));
      fieldWriter1.put(byteVector2);
      ByteVector byteVector4 = byteVector3.putInt(0);
      byteVector3.putUTF8("(S_f[YbP<]\"G8^zBN]5");
      byteVector1.putShort(5);
      fieldWriter0.put(byteVector4);
      fieldWriter1.getSize();
      boolean boolean1 = false;
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.5250199997186045
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      String string0 = "EyQQWN";
      String string1 = "";
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 127, "EyQQWN", "EyQQWN", "EyQQWN", "");
      fieldWriter0.getSize();
      fieldWriter0.visitAnnotation("EyQQWN", false);
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.putShort(4091);
      fieldWriter0.put(byteVector1);
      fieldWriter0.getSize();
      byte[] byteArray0 = new byte[0];
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0, (-502), 3);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -494
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.5038957092877099
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "=4K", "=4K", "=4K", (Object) null);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.getSize();
      String string0 = "(S_f[YbP<]\"G8^zBN]5";
      ByteVector byteVector1 = byteVector0.putUTF8("(S_f[YbP<]\"G8^zBN]5");
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, (-7), "org.apache.commons.io.filefilter.AndFileFilter", "=4K", "=4K", "org.apache.commons.io.filefilter.AndFileFilter");
      ByteVector byteVector2 = new ByteVector(1);
      ByteVector byteVector3 = byteVector0.put11(2, 1656);
      ByteVector byteVector4 = byteVector1.putShort(2);
      ByteVector byteVector5 = new ByteVector(0);
      byteVector3.putInt((-7));
      fieldWriter1.put(byteVector3);
      byteVector5.putUTF8("(S_f[YbP<]\"G8^zBN]5");
      byteVector2.putShort(2);
      fieldWriter0.put(byteVector4);
      fieldWriter1.getSize();
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        fieldWriter1.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter((ClassWriter) null, 0, "ym@Id%;r", "ConstantValue", "ym@Id%;r", (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2498);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1), "Signature", "The filter must not be null", "", "The filter must not be null");
      fieldWriter0.visitEnd();
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.4804779276453799
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int int0 = 0;
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1019), "The wildcard list must not be null", "The wildcard list must not be null", "The wildcard list must not be null", "T@8~X<9',");
      fieldWriter0.visitAnnotation("", true);
      InputStream inputStream0 = null;
      classWriter0.toByteArray();
      ObjectInputStream objectInputStream0 = null;
      try {
        objectInputStream0 = new ObjectInputStream((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ObjectInputStream$PeekInputStream", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(675);
      String string0 = "#@@wQ<Hg";
      Object object0 = new Object();
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 675, " scf:gavcDf", "#@@wQ<Hg", " scf:gavcDf", object0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value java.lang.Object@4196adfb
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }
}
