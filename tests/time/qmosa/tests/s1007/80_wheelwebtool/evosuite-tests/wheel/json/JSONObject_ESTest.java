/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 29 20:21:38 GMT 2020
 */

package wheel.json;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.StringWriter;
import java.io.Writer;
import java.util.Collection;
import java.util.HashMap;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.json.JSONArray;
import wheel.json.JSONObject;
import wheel.json.JSONTokener;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JSONObject_ESTest extends JSONObject_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.768712125492369
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      HashMap<JSONObject, Byte> hashMap0 = new HashMap<JSONObject, Byte>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      jSONObject0.append("-319.2", "java.lang.Long@0000000003.");
      String string0 = jSONObject0.toString(558);
      assertNotNull(string0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.4327072914612193
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      JSONObject jSONObject0 = new JSONObject(object0);
      try { 
        jSONObject0.getDouble("Cv3rSk-bG /=VZK");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"Cv3rSk-bG /=VZK\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.2995530335744938
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Float float0 = new Float(1477.7966F);
      JSONObject jSONObject0 = new JSONObject(float0);
      jSONObject0.putOpt("java.lang.Long@0000000003.", "java.lang.Long@0000000003.");
      assertEquals(4, jSONObject0.length());
      
      jSONObject0.remove("java.lang.Long@0000000003.");
      assertEquals(3, jSONObject0.length());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.5655234268707423
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Short short0 = new Short((short) (-2160));
      JSONObject jSONObject0 = new JSONObject(short0);
      jSONObject0.append("LRKYJdZdMSXBZSQ#N>", short0);
      jSONObject0.optString("LRKYJdZdMSXBZSQ#N>");
      assertEquals(2, jSONObject0.length());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.094729047527649
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.put("", 33L);
      long long0 = jSONObject0.optLong("");
      assertEquals(33L, long0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.4941751382893085
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray();
      HashMap<JSONObject, Byte> hashMap0 = new HashMap<JSONObject, Byte>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      JSONObject jSONObject1 = jSONObject0.append("", jSONArray0);
      Object object0 = jSONObject1.opt("");
      assertNotSame(object0, jSONArray0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      Iterator iterator0 = jSONObject0.keys();
      assertNotNull(iterator0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.8343719702816235
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      JSONObject jSONObject1 = jSONObject0.put("", (Map) hashMap0);
      JSONObject jSONObject2 = (JSONObject)jSONObject1.get("");
      assertEquals(0, jSONObject2.length());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      String string0 = JSONObject.valueToString(object0, 1520, 1520);
      assertEquals("null", string0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String string0 = jSONObject0.toString(12, 0);
      assertEquals("{}", string0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.7260509192674385
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      JSONObject jSONObject0 = new JSONObject(object0);
      jSONObject0.toString((-3663), (-3663));
      assertEquals(1, jSONObject0.length());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String string0 = jSONObject0.toString(0);
      assertEquals("{}", string0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      Object object0 = jSONObject0.remove((String) null);
      assertNull(object0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      Object object0 = jSONObject0.remove("");
      assertNull(object0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      String string0 = JSONObject.quote((String) null);
      assertEquals("\"\"", string0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      String string0 = JSONObject.quote("");
      assertEquals("\"\"", string0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.2367930007966412
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Short short0 = new Short((short) (-2160));
      JSONObject jSONObject0 = new JSONObject(short0);
      jSONObject0.putOpt("", short0);
      assertEquals(2, jSONObject0.length());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.6957425341696346
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Byte byte0 = new Byte((byte)0);
      String[] stringArray0 = new String[2];
      JSONObject jSONObject0 = new JSONObject(byte0, stringArray0);
      jSONObject0.put("ZQ]gs:RMgi'WhJ_Rhw", (Map) null);
      assertEquals(1, jSONObject0.length());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.1648729119013703
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Short short0 = new Short((short)42);
      JSONObject jSONObject0 = new JSONObject(short0);
      LinkedList<JSONObject> linkedList0 = new LinkedList<JSONObject>();
      jSONObject0.put("", (Collection) linkedList0);
      assertEquals(2, jSONObject0.length());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0114042647073516
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      HashMap<JSONObject, Byte> hashMap0 = new HashMap<JSONObject, Byte>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      jSONObject0.put("java.lang.Short@000000001.", (Object) "getfloatToRawIntBits");
      assertEquals(1, jSONObject0.length());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.0114042647073516
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      Byte byte0 = new Byte((byte)102);
      jSONObject0.put("", (Object) byte0);
      assertEquals(1, jSONObject0.length());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.277034259466139
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.put("3AqS&|Qb7i;;_ |Obo", (-2768L));
      assertEquals(1, jSONObject0.length());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.6715952780212544
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Long long0 = Long.getLong("gettoString", 0L);
      String[] stringArray0 = JSONObject.getNames((Object) long0);
      assertNotNull(stringArray0);
      
      JSONObject jSONObject0 = new JSONObject("gettoString", stringArray0);
      jSONObject0.put("0", (-12473307));
      assertEquals(1, jSONObject0.length());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.277034259466139
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.put("9>t(8(IWKlI;YQ198!", 43);
      assertEquals(1, jSONObject0.length());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.3097558619082146
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      JSONObject jSONObject0 = new JSONObject(object0);
      String string0 = jSONObject0.optString("] is not a Boolean.", (String) null);
      assertNull(string0);
      assertEquals(1, jSONObject0.length());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      HashMap<JSONObject, Byte> hashMap0 = new HashMap<JSONObject, Byte>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      String string0 = jSONObject0.optString("`T{|Y", "");
      assertEquals("", string0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String string0 = jSONObject0.optString((String) null, "It7i4");
      assertEquals("It7i4", string0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String string0 = jSONObject0.optString("", "java.lang.Float@0000000001");
      assertNotNull(string0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.1464631760614805
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Byte byte0 = new Byte((byte)0);
      String[] stringArray0 = new String[2];
      JSONObject jSONObject0 = new JSONObject(byte0, stringArray0);
      long long0 = jSONObject0.optLong("`mXB^j_.n{`$", (long) (byte)0);
      assertEquals(0L, long0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.9320738874454946
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      long long0 = jSONObject0.optLong("Bad value from toJSONString: ", 3999L);
      assertEquals(3999L, long0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.7478680974667573
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      long long0 = jSONObject0.optLong("", (-2043L));
      assertEquals((-2043L), long0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      long long0 = jSONObject0.optLong((String) null);
      assertEquals(0L, long0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      String[] stringArray0 = new String[4];
      JSONObject jSONObject0 = new JSONObject("", stringArray0);
      JSONObject jSONObject1 = jSONObject0.optJSONObject("4gAy7S}7r6!");
      assertNull(jSONObject1);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONArray jSONArray0 = jSONObject0.optJSONArray((String) null);
      assertNull(jSONArray0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      HashMap<JSONObject, Byte> hashMap0 = new HashMap<JSONObject, Byte>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      int int0 = jSONObject0.optInt((String) null, 101);
      assertEquals(101, int0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.572528756326852
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      JSONObject jSONObject0 = new JSONObject(object0);
      int int0 = jSONObject0.optInt("java.lang.Float@0000000001.", (-724));
      assertEquals((-724), int0);
      assertEquals(1, jSONObject0.length());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.7478680974667573
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      HashMap<JSONObject, Byte> hashMap0 = new HashMap<JSONObject, Byte>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      int int0 = jSONObject0.optInt("", 1060);
      assertEquals(1060, int0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.7851038147158325
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      JSONObject jSONObject0 = new JSONObject(object0);
      int int0 = jSONObject0.optInt((String) null);
      assertEquals(1, jSONObject0.length());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.2337380151460804
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Float float0 = new Float(1477.7966F);
      JSONObject jSONObject0 = new JSONObject(float0);
      double double0 = jSONObject0.optDouble("' and instead saw '", (-2135.2276810115));
      assertEquals((-2135.2276810115), double0, 0.01);
      assertEquals(3, jSONObject0.length());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      double double0 = jSONObject0.optDouble((String) null, (double) 0L);
      assertEquals(0.0, double0, 0.01);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      double double0 = jSONObject0.optDouble("", (double) 0L);
      assertEquals(0.0, double0, 0.01);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      double double0 = jSONObject0.optDouble((String) null);
      assertEquals(Double.NaN, double0, 0.01);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      double double0 = jSONObject0.optDouble("");
      assertEquals(Double.NaN, double0, 0.01);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      boolean boolean0 = jSONObject0.optBoolean((String) null, false);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.572528756326852
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      JSONObject jSONObject0 = new JSONObject(object0);
      boolean boolean0 = jSONObject0.optBoolean(" at character ", true);
      assertEquals(1, jSONObject0.length());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.0746142917293842
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      boolean boolean0 = jSONObject0.optBoolean("Bad value from toJSONString: ");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.1648729119013703
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      JSONObject jSONObject0 = new JSONObject(object0);
      jSONObject0.opt("{\n\"java.lang.String@0000000009\": [java.lang.Short@000000001],\n\"java.lang.String@0000000004\": java.lang.Long@0000000005,\n\"java.lang.String@0000000002\": \"java.lang.Class@0000000003\",\n\"java.lang.String@0000000006\": \"java.lang.String@0000000007\"\n}");
      assertEquals(1, jSONObject0.length());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Short short0 = Short.valueOf((short)34);
      String string0 = JSONObject.numberToString(short0);
      assertNotNull(string0);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      boolean boolean0 = jSONObject0.has("");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      try { 
        jSONObject0.getString("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.469483727358999
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Float float0 = new Float(1477.7966F);
      JSONObject jSONObject0 = new JSONObject(float0);
      try { 
        jSONObject0.getLong("va");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"va\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      HashMap<JSONObject, Byte> hashMap0 = new HashMap<JSONObject, Byte>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      try { 
        jSONObject0.getJSONObject((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.488507861129921
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Short short0 = new Short((short)42);
      JSONObject jSONObject0 = new JSONObject(short0);
      try { 
        jSONObject0.getJSONObject("Dbb");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"Dbb\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      try { 
        jSONObject0.getJSONArray((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      try { 
        jSONObject0.getJSONArray("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=0.7776612957621659
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      try { 
        jSONObject0.getInt("3Z2lGJa<");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"3Z2lGJa<\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      HashMap<String, Float> hashMap0 = new HashMap<String, Float>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      try { 
        jSONObject0.getInt("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      try { 
        jSONObject0.getDouble((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.7478680974667573
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Byte byte0 = new Byte((byte)0);
      String[] stringArray0 = new String[2];
      JSONObject jSONObject0 = new JSONObject(byte0, stringArray0);
      try { 
        jSONObject0.getBoolean((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      try { 
        jSONObject0.getBoolean("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      try { 
        jSONObject0.get("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      String string0 = JSONObject.doubleToString(1508.081056);
      assertEquals("1508.081056", string0);
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.4750763110546947
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray();
      HashMap<JSONObject, Byte> hashMap0 = new HashMap<JSONObject, Byte>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      try { 
        jSONObject0.append((String) null, jSONArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      // Undeclared exception!
      try { 
        jSONObject0.write((Writer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.1786549963416462
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      HashMap<Double, Double> hashMap0 = new HashMap<Double, Double>();
      Double double0 = new Double(2692.152505539015);
      hashMap0.put((Double) null, double0);
      // Undeclared exception!
      try { 
        JSONObject.valueToString(hashMap0, (-812), 2448);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      try { 
        jSONObject0.put((String) null, (Map) hashMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Byte byte0 = new Byte((byte)0);
      String[] stringArray0 = new String[2];
      JSONObject jSONObject0 = new JSONObject(byte0, stringArray0);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      try { 
        jSONObject0.put((String) null, (Collection) linkedList0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      HashMap<JSONObject, Byte> hashMap0 = new HashMap<JSONObject, Byte>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      try { 
        jSONObject0.put((String) null, (Object) "-146.1052971393654");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      HashMap<JSONObject, Byte> hashMap0 = new HashMap<JSONObject, Byte>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      try { 
        jSONObject0.put((String) null, (long) 1060);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      // Undeclared exception!
      try { 
        JSONObject.getNames((JSONObject) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.5655234268707423
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      JSONObject jSONObject0 = new JSONObject(object0);
      try { 
        jSONObject0.getInt((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.464816384890813
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      try { 
        jSONObject0.accumulate((String) null, jSONObject0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("Fxre!IxlaPg");
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject(jSONTokener0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must begin with '{' at character 1 of Fxre!IxlaPg
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener((String) null);
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject(jSONTokener0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      String[] stringArray0 = new String[5];
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject((JSONObject) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      String[] stringArray0 = new String[5];
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject((Object) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.5146861055007865
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.accumulate("false", jSONObject0);
      StringWriter stringWriter0 = new StringWriter();
      // Undeclared exception!
      jSONObject0.write(stringWriter0);
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.7152863051349312
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Float float0 = new Float(1477.7966F);
      JSONObject jSONObject0 = new JSONObject(float0);
      StringWriter stringWriter0 = new StringWriter((short)32);
      jSONObject0.write(stringWriter0);
      assertEquals(3, jSONObject0.length());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.8310204811135158
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      JSONObject jSONObject1 = jSONObject0.put("", (Map) hashMap0);
      jSONObject1.toString((-12473307));
      assertEquals(1, jSONObject0.length());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      String string0 = JSONObject.valueToString((Object) null, 0, 0);
      assertEquals("null", string0);
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.8270722164693372
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Short short0 = new Short((short) (-2160));
      JSONObject jSONObject0 = new JSONObject(short0);
      jSONObject0.append("LRKYJdZdMSXBZSQ#N>", short0);
      jSONObject0.toString();
      assertEquals(2, jSONObject0.length());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.317688301004166
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      JSONObject jSONObject0 = new JSONObject(object0);
      JSONObject.valueToString(jSONObject0);
      assertEquals(1, jSONObject0.length());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.656181515091442
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      Object object0 = JSONObject.NULL;
      jSONObject0.putOpt("T%9xwLF=?o*O\"f", object0);
      jSONObject0.toString();
      assertEquals(1, jSONObject0.length());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      String string0 = JSONObject.valueToString((Object) null);
      assertEquals("null", string0);
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.2367930007966412
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      JSONObject jSONObject0 = new JSONObject(object0);
      LinkedList<JSONObject> linkedList0 = new LinkedList<JSONObject>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      JSONArray jSONArray1 = jSONObject0.toJSONArray(jSONArray0);
      assertNull(jSONArray1);
      assertEquals(1, jSONObject0.length());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.04138000510499
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      int int0 = jSONObject0.optInt("nJ85f\u0002p");
      assertEquals(0, int0);
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.3480251115140525
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      JSONObject jSONObject0 = new JSONObject(object0);
      try { 
        jSONObject0.get("M~oH/1w<Qp@`jv.;");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"M~oH/1w<Qp@`jv.;\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      String string0 = JSONObject.quote("{\n\"java.lang.String@0000000004\": java.lang.Long@0000000005,\n\"java.lang.String@0000000002\": \"java.lang.Class@0000000003\"\n}");
      assertNotNull(string0);
  }

  /**
  //Test case number: 90
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      HashMap<JSONObject, Byte> hashMap0 = new HashMap<JSONObject, Byte>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      JSONObject jSONObject1 = jSONObject0.putOpt("3", (Object) null);
      assertSame(jSONObject1, jSONObject0);
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.277034259466139
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.put("", true);
      assertEquals(1, jSONObject0.length());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.7244762067315986
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.put("Missing value", false);
      jSONObject0.toString((-579));
      assertEquals(1, jSONObject0.length());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      String[] stringArray0 = new String[6];
      JSONObject jSONObject0 = new JSONObject("ishashCode", stringArray0);
      JSONObject jSONObject1 = jSONObject0.optJSONObject("");
      assertNull(jSONObject1);
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.3097558619082146
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Short short0 = new Short((short)42);
      JSONObject jSONObject0 = new JSONObject(short0);
      jSONObject0.optJSONArray("Gg~](]%g");
      assertEquals(1, jSONObject0.length());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.442783312158676
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      JSONObject jSONObject0 = new JSONObject(object0);
      jSONObject0.put("ROdK9RZ", 908L);
      double double0 = jSONObject0.optDouble("ROdK9RZ", (double) 248L);
      assertEquals(2, jSONObject0.length());
      assertEquals(908.0, double0, 0.01);
  }

  /**
  //Test case number: 96
  /*Coverage entropy=2.2048026613837544
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      JSONObject jSONObject0 = new JSONObject(object0);
      JSONObject jSONObject1 = jSONObject0.put("ROdK9RZ", 908L);
      jSONObject0.putOpt("{\"java.lang.String@0000000004\":java.lang.Long@0000000005,\"java.lang.String@0000000002\":\"java.lang.Class@0000000003\"}", "M~oH/1w<Qp@`jv.;");
      Short short0 = new Short((short)27);
      jSONObject1.append("wheel.json.JSONObject@0000000001", short0);
      jSONObject1.toString((-1));
      assertEquals(4, jSONObject1.length());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.8008293981022103
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject((Object) "`mXB^j_.n{`$");
      String string0 = jSONObject0.toString();
      assertNotNull(string0);
      assertEquals(3, jSONObject0.length());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      try { 
        JSONObject.numberToString((Number) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null pointer
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.9881854020991203
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      JSONObject jSONObject0 = new JSONObject(object0);
      jSONObject0.put("ROdK9RZ", 908L);
      jSONObject0.toString(1520, 1520);
      assertEquals(2, jSONObject0.length());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONArray jSONArray0 = jSONObject0.names();
      assertNull(jSONArray0);
  }

  /**
  //Test case number: 101
  /*Coverage entropy=1.4085788142038693
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      JSONObject jSONObject0 = new JSONObject(object0);
      JSONArray jSONArray0 = jSONObject0.names();
      assertEquals(1, jSONArray0.length());
      assertNotNull(jSONArray0);
  }

  /**
  //Test case number: 102
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      String[] stringArray0 = JSONObject.getNames((Object) hashMap0);
      assertNull(stringArray0);
  }

  /**
  //Test case number: 103
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      String[] stringArray0 = JSONObject.getNames((Object) null);
      assertNull(stringArray0);
  }

  /**
  //Test case number: 104
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String[] stringArray0 = JSONObject.getNames(jSONObject0);
      assertNull(stringArray0);
  }

  /**
  //Test case number: 105
  /*Coverage entropy=1.5294599036351055
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      JSONObject jSONObject0 = new JSONObject(object0);
      String[] stringArray0 = JSONObject.getNames(jSONObject0);
      assertNotNull(stringArray0);
      assertEquals(1, jSONObject0.length());
      assertEquals(1, stringArray0.length);
  }

  /**
  //Test case number: 106
  /*Coverage entropy=2.094729047527649
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.put(".", 0L);
      jSONObject0.optLong(".");
      assertEquals(1, jSONObject0.length());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=2.0981473891350673
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      HashMap<String, Float> hashMap0 = new HashMap<String, Float>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      jSONObject0.append("", "");
      try { 
        jSONObject0.getLong("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] is not a number.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.979204517434325
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.put("", 33L);
      try { 
        jSONObject0.getJSONObject("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] is not a JSONObject.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 109
  /*Coverage entropy=1.572528756326852
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      JSONObject jSONObject0 = new JSONObject(object0);
      jSONObject0.put("ROdK9RZ", 908L);
      try { 
        jSONObject0.getJSONArray("ROdK9RZ");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"ROdK9RZ\"] is not a JSONArray.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 110
  /*Coverage entropy=2.3034884952192693
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray();
      HashMap<JSONObject, Byte> hashMap0 = new HashMap<JSONObject, Byte>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      JSONObject jSONObject1 = jSONObject0.append("", jSONArray0);
      int int0 = jSONObject1.optInt("");
      assertEquals(1, jSONObject0.length());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 111
  /*Coverage entropy=1.484925891109223
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.put(".", 0L);
      try { 
        jSONObject0.getBoolean(".");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\".\"] is not a Boolean.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 112
  /*Coverage entropy=1.7851038147158325
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      JSONObject jSONObject0 = new JSONObject(object0);
      jSONObject0.put("ROdK9RZ", 908L);
      int int0 = jSONObject0.optInt("ROdK9RZ");
      assertEquals(2, jSONObject0.length());
      assertEquals(908, int0);
  }

  /**
  //Test case number: 113
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      String string0 = JSONObject.doubleToString(0.0);
      assertEquals("0", string0);
  }

  /**
  //Test case number: 114
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      String string0 = JSONObject.doubleToString((-319.2));
      assertEquals("-319.2", string0);
  }

  /**
  //Test case number: 115
  /*Coverage entropy=1.377819508039033
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      HashMap<String, Float> hashMap0 = new HashMap<String, Float>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      JSONObject jSONObject1 = jSONObject0.append("", "");
      Float float0 = new Float((float) 1060);
      jSONObject1.append("", float0);
      assertEquals(1, jSONObject0.length());
  }

  /**
  //Test case number: 116
  /*Coverage entropy=1.6417347121875212
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.put(".", 0L);
      jSONObject0.accumulate(".", (Object) null);
      assertEquals(1, jSONObject0.length());
  }

  /**
  //Test case number: 117
  /*Coverage entropy=0.8675632284814612
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject("{}");
      assertEquals(0, jSONObject0.length());
  }

  /**
  //Test case number: 118
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must begin with '{' at character 0 of 
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 119
  /*Coverage entropy=1.5498260458782016
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Byte byte0 = new Byte((byte)0);
      String[] stringArray0 = new String[2];
      JSONObject jSONObject0 = new JSONObject(byte0, stringArray0);
      JSONObject jSONObject1 = new JSONObject(jSONObject0, stringArray0);
      assertFalse(jSONObject1.equals((Object)jSONObject0));
  }

  /**
  //Test case number: 120
  /*Coverage entropy=1.2092536248090335
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Short short0 = new Short((short)42);
      JSONObject jSONObject0 = new JSONObject(short0);
      try { 
        jSONObject0.put((String) null, (int) (short)42);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 121
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      boolean boolean0 = jSONObject0.optBoolean((String) null);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 122
  /*Coverage entropy=1.442783312158676
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      Short short0 = new Short((short) (-2160));
      JSONObject jSONObject0 = new JSONObject(short0);
      String string0 = jSONObject0.optString("LRKYJdZdMSXBZSQ#N>");
      assertEquals(1, jSONObject0.length());
      assertEquals("", string0);
  }

  /**
  //Test case number: 123
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      HashMap<JSONObject, Byte> hashMap0 = new HashMap<JSONObject, Byte>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      boolean boolean0 = jSONObject0.isNull("8cv0`Ocpu1Vy)E`cqhU");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 124
  /*Coverage entropy=1.094408629847781
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject("{\n\"java.lang.String@0000000009\": [java.lang.Short@000000001],\n\"java.lang.String@0000000004\": java.lang.Long@0000000005,\n\"java.lang.String@0000000002\": \"java.lang.Class@0000000003\",\n\"java.lang.String@0000000006\": \"java.lang.String@0000000007\"\n}");
      assertEquals(4, jSONObject0.length());
  }

  /**
  //Test case number: 125
  /*Coverage entropy=1.2130075659799042
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.put("<qOgd')", (double) 0L);
      assertEquals(1, jSONObject0.length());
  }

  /**
  //Test case number: 126
  /*Coverage entropy=1.514014536653706
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      JSONObject jSONObject0 = new JSONObject(object0);
      JSONObject jSONObject1 = jSONObject0.put("ROdK9RZ", 908L);
      try { 
        jSONObject1.append("ROdK9RZ", (Object) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[ROdK9RZ] is not a JSONArray.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 127
  /*Coverage entropy=0.7776612957621659
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      HashMap<JSONObject, Byte> hashMap0 = new HashMap<JSONObject, Byte>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      try { 
        jSONObject0.getString("isequals");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"isequals\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 128
  /*Coverage entropy=1.3625664136253977
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      Float float0 = new Float(1477.7966F);
      JSONObject jSONObject0 = new JSONObject(float0);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      JSONObject jSONObject1 = jSONObject0.put("fl", (Collection) linkedList0);
      jSONObject1.optJSONArray("fl");
      assertEquals(4, jSONObject0.length());
  }

  /**
  //Test case number: 129
  /*Coverage entropy=1.442783312158676
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      Short short0 = new Short((short) (-2160));
      JSONObject jSONObject0 = new JSONObject(short0);
      double double0 = jSONObject0.optDouble("3");
      assertEquals(Double.NaN, double0, 0.01);
      assertEquals(1, jSONObject0.length());
  }

  /**
  //Test case number: 130
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      boolean boolean0 = jSONObject0.has(".");
      assertFalse(boolean0);
  }
}
