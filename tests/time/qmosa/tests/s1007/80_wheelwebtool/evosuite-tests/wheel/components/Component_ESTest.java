/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 29 19:59:35 GMT 2020
 */

package wheel.components;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockGregorianCalendar;
import org.junit.runner.RunWith;
import org.xmlpull.mxp1_serializer.MXSerializer;
import org.xmlpull.v1.XmlPullParserFactory;
import org.xmlpull.v1.XmlSerializer;
import org.xmlpull.v1.wrapper.classic.XmlSerializerDelegate;
import wheel.ErrorPage;
import wheel.components.ActionExpression;
import wheel.components.Any;
import wheel.components.Checkbox;
import wheel.components.Component;
import wheel.components.DateInput;
import wheel.components.ElExpression;
import wheel.components.FileInput;
import wheel.components.Form;
import wheel.components.FormElement;
import wheel.components.Hidden;
import wheel.components.Image;
import wheel.components.Label;
import wheel.components.Link;
import wheel.components.NumberInput;
import wheel.components.Radio;
import wheel.components.RenderableComponent;
import wheel.components.Select;
import wheel.components.StandaloneComponent;
import wheel.components.Submit;
import wheel.components.Table;
import wheel.components.TableBlock;
import wheel.components.TableRow;
import wheel.components.Text;
import wheel.components.TextArea;
import wheel.components.TextInput;
import wheel.components.XmlEntityRef;
import wheel.util.DynamicSelectModel;
import wheel.util.InitialFieldValue;
import wheel.util.StringSelectModel;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Component_ESTest extends Component_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.2130075659799042
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Checkbox checkbox0 = new Checkbox((Component) null, "empty string is not allowed for ignorable whitespace", "a");
      checkbox0.afterAdd();
      assertTrue(checkbox0.isValid());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.4708084763221112
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      DateInput dateInput0 = new DateInput(errorPage0, "`", "`", "`");
      dateInput0._getChildren();
      assertEquals("`", dateInput0.getComponentId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.241964657871291
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Component component0 = errorPage0.wBlock("/");
      assertEquals("Block_1", component0.getComponentId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.6762349391347309
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      DateInput dateInput0 = new DateInput(errorPage0, "`", "`", "`");
      StandaloneComponent standaloneComponent0 = dateInput0.getPage();
      assertEquals("wheel_ErrorPage", standaloneComponent0.getComponentId());
      assertFalse(dateInput0._isGeneratedId());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.4708084763221112
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      TextInput textInput0 = new TextInput(errorPage0, "GGT=^w)&z\"IB:,84P0m", "sub");
      textInput0.getEngine();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertEquals("sub", textInput0.getComponentId());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      errorPage0.create();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Form form0 = new Form("address");
      Component component0 = form0.up((-1937));
      assertEquals("address", component0.getComponentId());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.4941751382893085
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("toJCkG'&uuh^gR@+||");
      // Undeclared exception!
      try { 
        xmlEntityRef0.textarea("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.1285490048751514
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      DateInput dateInput0 = new DateInput(errorPage0, "", "", "");
      // Undeclared exception!
      try { 
        dateInput0.submit("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.2071079677498235
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Checkbox checkbox0 = new Checkbox(errorPage0, "$$", "iframe");
      // Undeclared exception!
      try { 
        checkbox0.span((Object) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.4941751382893085
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("");
      // Undeclared exception!
      try { 
        xmlEntityRef0.reset((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.796311640173813
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef((String) null);
      Component component0 = xmlEntityRef0.renderHint((CharSequence) null);
      assertEquals("wheel_components_XmlEntityRef", component0.getComponentId());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.9502705392332347
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Component component0 = errorPage0.renderHint("java.lang.String@0000000004");
      assertEquals("wheel_ErrorPage", component0.getComponentId());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.7351264569629226
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Form form0 = new Form("Thead component can be added only to a Table.");
      // Undeclared exception!
      try { 
        form0.passwordInput("Thead component can be added only to a Table.");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.5684452166984877
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      ActionExpression actionExpression0 = new ActionExpression("");
      Form form0 = new Form(errorPage0, "span", actionExpression0);
      Component component0 = form0.tt();
      TextArea textArea0 = new TextArea(component0, "9q=@", "");
      // Undeclared exception!
      try { 
        textArea0.numberInput("9q=@", (CharSequence) actionExpression0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Failed to initialize DecimalFormat with pattern ''.
         //
         verifyException("wheel.components.NumberInput", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.3296613488547582
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("");
      // Undeclared exception!
      try { 
        xmlEntityRef0.message("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No top level component found.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.308761080498052
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Link link0 = new Link(errorPage0, errorPage0);
      Table table0 = new Table(link0, "spcn");
      // Undeclared exception!
      try { 
        table0.imageSubmit("", "_ml(AX?p");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.5498260458782016
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("span");
      // Undeclared exception!
      try { 
        xmlEntityRef0.i((Object) "span");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.5498260458782016
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("");
      // Undeclared exception!
      try { 
        xmlEntityRef0.h4((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef((String) null);
      // Undeclared exception!
      try { 
        xmlEntityRef0.get((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No top level component found.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.5388586489099843
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Component component0 = errorPage0.form("Il)p>3PN1%J&:\"FMg");
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertEquals("Il)p>3PN1%J&:\"FMg", component0.getComponentId());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.5498260458782016
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("sub");
      // Undeclared exception!
      try { 
        xmlEntityRef0.find("QBp!!B");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No top level component found.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.791759469228055
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      DateInput dateInput0 = new DateInput((Component) null, (String) null, "[00%0b-usZD\"}!-8", "[00%0b-usZD\"}!-8");
      // Undeclared exception!
      try { 
        dateInput0.entity("b@DmwT<s");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("Thead component can be added only to a Table.");
      xmlEntityRef0.el("Thead component can be added only to a Table.");
      assertEquals("Thead component can be added only to a Table.", xmlEntityRef0.getComponentId());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("Thead componen can be added only to a Table.");
      xmlEntityRef0.el("");
      assertEquals("Thead componen can be added only to a Table.", xmlEntityRef0.getComponentId());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.215121560924562
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Component component0 = errorPage0.dfn((Object) null);
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(component0._isGeneratedId());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.6488470716724795
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      DateInput dateInput0 = new DateInput(errorPage0, "`", "`", "`");
      // Undeclared exception!
      try { 
        dateInput0.dateFormat("$$", (Object) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unsupported type given for dateFormat. Supported types are: Date, Calendar, Long/long .
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.068513497359536
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      DateInput dateInput0 = new DateInput(errorPage0, "", "", "");
      // Undeclared exception!
      try { 
        dateInput0.dateFormat("", "");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unsupported type given for dateFormat. Supported types are: Date, Calendar, Long/long .
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.8866967846580784
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Form form0 = new Form("abbr");
      DynamicSelectModel dynamicSelectModel0 = form0.selectModel();
      ElExpression elExpression0 = new ElExpression("");
      // Undeclared exception!
      try { 
        form0.checkboxGroup("", dynamicSelectModel0, elExpression0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.009709181894145
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Link link0 = new Link(errorPage0, errorPage0);
      // Undeclared exception!
      try { 
        link0.checkbox("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("map");
      Component component0 = xmlEntityRef0.addInternalRenderHint((String) null);
      assertEquals("map", component0.getComponentId());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.991509361356614
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      DateInput dateInput0 = new DateInput(errorPage0, "", "", "");
      Component component0 = dateInput0.addInternalRenderHint("?0=");
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(component0._isGeneratedId());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.277034259466139
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef((String) null);
      Component component0 = xmlEntityRef0.actionBinding("");
      assertEquals("wheel_components_XmlEntityRef", component0.getComponentId());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.7351264569629226
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Link link0 = new Link(errorPage0, errorPage0);
      link0._setGeneratedId(false);
      assertFalse(link0._isGeneratedId());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Form form0 = new Form("INVOKEINTERFACE org/mvel/ExecutableStatement.getValue");
      form0._setComponentId("java.lang.StringBuffer@0000000010");
      assertEquals("form", form0.defaultTagName());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.9913464134109882
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      TextInput textInput0 = new TextInput(errorPage0, "GGT=^w)&z\"IB:,84P0m", "");
      StandaloneComponent standaloneComponent0 = textInput0._getTopLevelComponent(false);
      assertTrue(textInput0._isGeneratedId());
      assertEquals("wheel_ErrorPage", standaloneComponent0.getComponentId());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.5229550675313182
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("");
      // Undeclared exception!
      try { 
        xmlEntityRef0.wBlock("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.7917594692280554
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Checkbox checkbox0 = new Checkbox((Component) null, "empty string is not allowed for ignorable whitespace", "a");
      // Undeclared exception!
      try { 
        checkbox0.var();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.7104932300550038
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      ActionExpression actionExpression0 = new ActionExpression("\"Xq");
      Form form0 = new Form(errorPage0, "characters ]]> are not allowed in content", actionExpression0);
      // Undeclared exception!
      try { 
        form0.up(1161);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.5498260458782016
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Form form0 = new Form("span");
      // Undeclared exception!
      try { 
        form0.tt();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.5498260458782016
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Form form0 = new Form("`");
      // Undeclared exception!
      try { 
        form0.title("`");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.870568889415637
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Checkbox checkbox0 = new Checkbox(errorPage0, "h3", "h3");
      // Undeclared exception!
      try { 
        checkbox0.textarea("h3");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.7351264569629226
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Form form0 = new Form("F_oi596!");
      // Undeclared exception!
      try { 
        form0.textInput("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.5498260458782016
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Form form0 = new Form("INVOKEINTERFACE org/mvel/ExecutableStatement.getValue");
      // Undeclared exception!
      try { 
        form0.sup();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.7917594692280554
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Checkbox checkbox0 = new Checkbox((Component) null, "empty string is not allowed for ignorable whitespace", "a");
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(620, 620, (-1813), (-531), (-531), (-1813));
      // Undeclared exception!
      try { 
        checkbox0.span((Object) mockGregorianCalendar0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.9459101490553132
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("selected");
      Checkbox checkbox0 = new Checkbox(xmlEntityRef0, "wheel.components.TextInput", ";&dq=lZl");
      // Undeclared exception!
      try { 
        checkbox0.span((Object) xmlEntityRef0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.2343358078055116
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      TextInput textInput0 = new TextInput(errorPage0, "GGT=^w)&z\"IB:,84P0m", "sub");
      // Undeclared exception!
      try { 
        textInput0.small();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.5498260458782016
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("");
      // Undeclared exception!
      try { 
        xmlEntityRef0.small();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.5498260458782016
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("Thead component can be added only to a Table.");
      // Undeclared exception!
      try { 
        xmlEntityRef0.s();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.4941751382893085
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("");
      // Undeclared exception!
      try { 
        xmlEntityRef0.reset("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.7351264569629226
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Form form0 = new Form("CHECKCAST [Z");
      // Undeclared exception!
      try { 
        form0.reset("java.lang.StringBuffer@0000000010");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.2712845757741036
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Component component0 = errorPage0.q();
      // Undeclared exception!
      try { 
        component0.remove("`i(}r&");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.2343358078055116
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      DateInput dateInput0 = new DateInput(errorPage0, "`", "`", "`");
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(68, 68, 27, 27, 68, 68);
      // Undeclared exception!
      try { 
        dateInput0.q((Object) mockGregorianCalendar0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.5498260458782016
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Form form0 = new Form("F_oi596!");
      // Undeclared exception!
      try { 
        form0.q((Object) "F_oi596!");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.5498260458782016
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Form form0 = new Form("Thead component can be added only to a Table.");
      // Undeclared exception!
      try { 
        form0.q();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.7917594692280554
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      FileInput fileInput0 = new FileInput((Component) null, "(xB@ibh[0IT$QE=", "kdb");
      // Undeclared exception!
      try { 
        fileInput0.pre();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.5229550675313182
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("");
      // Undeclared exception!
      try { 
        xmlEntityRef0.placeholder("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.9459101490553132
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Form form0 = new Form("");
      Checkbox checkbox0 = new Checkbox(form0, "a", "$W/Z)sEWr");
      // Undeclared exception!
      try { 
        checkbox0.p((Object) checkbox0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.7670091910745693
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Form form0 = new Form("INVOKEINTERFACE org/mvel/ExecutableStatement.getValue");
      Radio radio0 = new Radio(form0, "INVOKEINTERFACE org/mvel/ExecutableStatement.getValue", "INVOKEINTERFACE org/mvel/ExecutableStatement.getValue");
      Submit submit0 = new Submit(radio0, "INVOKEINTERFACE org/mvel/ExecutableStatement.getValue", "Could not dind component wiph id");
      Checkbox checkbox0 = new Checkbox(submit0, "INVOKEINTERFACE org/mvel/ExecutableStatement.getValue", "Could not dind component wiph id");
      // Undeclared exception!
      try { 
        checkbox0.p();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.7351264569629226
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Form form0 = new Form("P5T{;OM");
      // Undeclared exception!
      try { 
        form0.numberInput("[()");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.5498260458782016
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("");
      // Undeclared exception!
      try { 
        xmlEntityRef0.noscript();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.7917594692280554
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Checkbox checkbox0 = new Checkbox((Component) null, "empty string is not allowed for ignorable whitespace", "empty string is not allowed for ignorable whitespace");
      Hidden hidden0 = new Hidden(checkbox0, "empty string is not allowed for ignorable whitespace", "empty string is not allowed for ignorable whitespace");
      // Undeclared exception!
      try { 
        hidden0.noframes();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.2581044308027467
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Checkbox checkbox0 = new Checkbox(errorPage0, "h3", "h3");
      // Undeclared exception!
      try { 
        checkbox0.meta();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.3296613488547582
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("`");
      // Undeclared exception!
      try { 
        xmlEntityRef0.message("7'*cfFO:(ZjdQ4uWF");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No top level component found.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.5832584594204766
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Checkbox checkbox0 = new Checkbox((Component) null, "empty string is not allowed for ignorable whitespace", "empty string is not allowed for ignorable whitespace");
      // Undeclared exception!
      try { 
        checkbox0.map("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.4026375677033958
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Component component0 = errorPage0.code();
      Checkbox checkbox0 = new Checkbox(component0, "} ", "");
      // Undeclared exception!
      try { 
        checkbox0.link();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.791759469228055
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Checkbox checkbox0 = new Checkbox((Component) null, "empty string is not allowed for ignorable whitespace", "a");
      Hidden hidden0 = new Hidden(checkbox0, "a", "a");
      // Undeclared exception!
      try { 
        hidden0.link();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.559581156259877
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Form form0 = new Form("Thead componen can be added only to a Table.");
      // Undeclared exception!
      try { 
        form0.li();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.7671949977916748
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Form form0 = new Form("!q}tR");
      TextInput textInput0 = new TextInput(form0, "!q}tR", "reset");
      // Undeclared exception!
      try { 
        textInput0.li();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.7917594692280554
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Checkbox checkbox0 = new Checkbox((Component) null, "empty string is not allowed for ignorable whitespace", "a");
      // Undeclared exception!
      try { 
        checkbox0.legend();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.7917594692280554
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      TextInput textInput0 = new TextInput((Component) null, "dt", "java.lang.StringBuffer@0000000010");
      Checkbox checkbox0 = new Checkbox(textInput0, "(xB@ibh[0IT$QE=", "java.lang.StringBuffer@0000000010");
      // Undeclared exception!
      try { 
        checkbox0.legend();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.5498260458782016
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Form form0 = new Form("");
      // Undeclared exception!
      try { 
        form0.label();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.7917594692280554
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Checkbox checkbox0 = new Checkbox((Component) null, "empty string is not allowed for ignorable whitespace", "a");
      Hidden hidden0 = new Hidden(checkbox0, "a", "a");
      Float float0 = Float.valueOf((float) (-1813));
      // Undeclared exception!
      try { 
        hidden0.kbd((Object) float0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.5498260458782016
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Form form0 = new Form("F_oi596!");
      // Undeclared exception!
      try { 
        form0.ins();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.5498260458782016
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Form form0 = new Form("");
      // Undeclared exception!
      try { 
        form0.img("2yX[m+D{@[{", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.3296613488547582
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("");
      // Undeclared exception!
      try { 
        xmlEntityRef0.id("java.lang.StringBuffer@0000000010");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No top level component found.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.5498260458782016
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("");
      // Undeclared exception!
      try { 
        xmlEntityRef0.i();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.933809998920632
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Form form0 = new Form("INVOKEINTERFACE org/mvel/ExecutableStatement.getValue");
      Radio radio0 = new Radio(form0, "INVOKEINTERFACE org/mvel/ExecutableStatement.getValue", "INVOKEINTERFACE org/mvel/ExecutableStatement.getValue");
      Submit submit0 = new Submit(radio0, "INVOKEINTERFACE org/mvel/ExecutableStatement.getValue", "Could not find component with id ");
      Checkbox checkbox0 = new Checkbox(submit0, "INVOKEINTERFACE org/mvel/ExecutableStatement.getValue", "Could not find component with id ");
      // Undeclared exception!
      try { 
        checkbox0.htmlText(radio0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.559581156259877
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Form form0 = new Form("");
      // Undeclared exception!
      try { 
        form0.hr();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.5498260458782016
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Form form0 = new Form("span");
      // Undeclared exception!
      try { 
        form0.h2();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.9459101490553132
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Form form0 = new Form("abbr");
      DateInput dateInput0 = new DateInput(form0, "d]C%jgM:}[", "alt", "d]C%jgM:}[");
      // Undeclared exception!
      try { 
        dateInput0.h1((Object) "");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.2343358078055116
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Hidden hidden0 = new Hidden(errorPage0, "sub", "sub");
      // Undeclared exception!
      try { 
        hidden0.h1();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.5498260458782016
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Form form0 = new Form("`");
      // Undeclared exception!
      try { 
        form0.h1();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.0549201679861442
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Form form0 = new Form("");
      // Undeclared exception!
      try { 
        form0.getPage();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.5498260458782016
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("");
      // Undeclared exception!
      try { 
        xmlEntityRef0.find((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No top level component found.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.5498260458782016
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("UC1Wk");
      // Undeclared exception!
      try { 
        xmlEntityRef0.dt((Object) "UC1Wk");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.5498260458782016
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Form form0 = new Form("F_oi596!");
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("F_oi596!");
      // Undeclared exception!
      try { 
        xmlEntityRef0.dfn((Object) form0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=2.2343358078055116
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Checkbox checkbox0 = new Checkbox(errorPage0, "GGT=^w)&z\"IB:,84P0m", "wF}");
      // Undeclared exception!
      try { 
        checkbox0.dfn();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.791759469228055
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Checkbox checkbox0 = new Checkbox((Component) null, "a", "dfn");
      // Undeclared exception!
      try { 
        checkbox0.dfn();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.7782333057997077
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Checkbox checkbox0 = new Checkbox((Component) null, "empty string is not allowed for ignorable whitespace", "a");
      Hidden hidden0 = new Hidden(checkbox0, "a", "a");
      Checkbox checkbox1 = new Checkbox(hidden0, "", "a");
      // Undeclared exception!
      try { 
        checkbox1.dfn();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 90
  /*Coverage entropy=2.2242289462368827
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Link link0 = new Link(errorPage0, errorPage0);
      Hidden hidden0 = new Hidden(link0, "`Xux<{Wjmy:CsJ+C)S", "");
      // Undeclared exception!
      try { 
        hidden0.code();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.5498260458782016
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("toJCkG'&uuh^gR@+||");
      // Undeclared exception!
      try { 
        xmlEntityRef0.code();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.5498260458782016
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Form form0 = new Form("");
      // Undeclared exception!
      try { 
        form0.cite((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.6417347121875212
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      String string0 = "INVOKEINTERFACE org/mvel/ExecutableStatement.getValue";
      Form form0 = new Form("INVOKEINTERFACE org/mvel/ExecutableStatement.getValue");
      TextArea textArea0 = new TextArea(form0, string0, "6!yG>[s0?U");
      // Undeclared exception!
      try { 
        textArea0.cite();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.7782333057997075
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Checkbox checkbox0 = new Checkbox((Component) null, "f'qjD", "??+");
      // Undeclared exception!
      try { 
        checkbox0.buttonInput("colgroup");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.559581156259877
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Form form0 = new Form("address");
      // Undeclared exception!
      try { 
        form0.br();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef((String) null);
      // Undeclared exception!
      try { 
        xmlEntityRef0.bdo((CharSequence) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.5498260458782016
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("map");
      // Undeclared exception!
      try { 
        xmlEntityRef0.b((Object) xmlEntityRef0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.8095142558492818
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Checkbox checkbox0 = new Checkbox((Component) null, "empty string is not allowed for ignorable whitespace", "a");
      Hidden hidden0 = new Hidden(checkbox0, "a", "a");
      TextInput textInput0 = new TextInput(hidden0, "empty string is not allowed for ignorable whitespace", "dt");
      String[] stringArray0 = new String[5];
      // Undeclared exception!
      try { 
        textInput0.area(stringArray0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.9459101490553132
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Form form0 = new Form("INVOKEINTERFACE org/mvel/ExecutableStatement.getValue");
      TextInput textInput0 = new TextInput(form0, "INVOKEINTERFACE org/mvel/ExecutableStatement.getValue", "4Hn,'LA1x*K");
      // Undeclared exception!
      try { 
        textInput0.address((Object) "INVOKEINTERFACE org/mvel/ExecutableStatement.getValue");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 100
  /*Coverage entropy=1.6417347121875212
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("");
      FileInput fileInput0 = new FileInput(xmlEntityRef0, "", "org.mvel.ast.InlineCollectionNode");
      // Undeclared exception!
      try { 
        fileInput0.add((Component) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 101
  /*Coverage entropy=1.351783994289646
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      ElExpression elExpression0 = new ElExpression("Dt99s_f+Hy%|/VP");
      // Undeclared exception!
      try { 
        errorPage0.a((Object) elExpression0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not evaluate expression Dt99s_f+Hy%|/VP in class wheel.ErrorPage
         //
         verifyException("wheel.components.ElExpression", e);
      }
  }

  /**
  //Test case number: 102
  /*Coverage entropy=1.5498260458782016
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Form form0 = new Form("F_oi596!");
      // Undeclared exception!
      try { 
        form0.a();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 103
  /*Coverage entropy=1.0549201679861442
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Form form0 = new Form("");
      // Undeclared exception!
      try { 
        form0._getTopLevelComponent(true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No top level component found.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 104
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Form form0 = new Form("K;RO)Uu>y");
      // Undeclared exception!
      try { 
        form0.end();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not end compoennt, already at root.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 105
  /*Coverage entropy=2.150060224484236
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Link link0 = new Link(errorPage0, errorPage0);
      Hidden hidden0 = new Hidden(link0, "`Xux<{Wjmy:CsJ+C)S", "");
      ElExpression elExpression0 = new ElExpression("Sl!r||)<ir W");
      List<Component> list0 = hidden0.findAll(elExpression0);
      assertTrue(hidden0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertNotNull(list0);
  }

  /**
  //Test case number: 106
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Radio radio0 = new Radio(errorPage0, "span", "E");
      ActionExpression actionExpression0 = new ActionExpression("java.lang.StringBuffer@0000000010");
      actionExpression0.setOwner(radio0);
      // Undeclared exception!
      try { 
        actionExpression0.getUpdateTarget();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not find component with id null on the page.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 107
  /*Coverage entropy=1.5157079520857129
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try { 
        errorPage0.get("|Gf");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not find component with id '|Gf'.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 108
  /*Coverage entropy=0.5297061990576545
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      errorPage0._clear();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("");
      Component component0 = xmlEntityRef0.addInternalRenderHint("");
      assertEquals("wheel_components_XmlEntityRef", component0.getComponentId());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=2.4811785792171435
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "\"2Kr#Le:ZeQRy8|<");
      TableBlock tableBlock0 = table0.thead();
      Any any0 = tableBlock0.col();
      assertEquals("Any_1", any0.getComponentId());
      
      Component component0 = tableBlock0.table();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertEquals("Table_1", component0.getComponentId());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=2.5090671321924054
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "START_TAG");
      TableBlock tableBlock0 = table0.tbody();
      assertTrue(tableBlock0._isGeneratedId());
      
      tableBlock0.id("7{ks|qULZ;{-smDe'?u");
      assertFalse(tableBlock0._isGeneratedId());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=2.4676052963574033
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Link link0 = new Link(errorPage0, errorPage0);
      InitialFieldValue initialFieldValue0 = new InitialFieldValue("span");
      errorPage0.dfn((Object) initialFieldValue0);
      TableBlock tableBlock0 = new TableBlock(link0);
      tableBlock0.id("Can't add components to a component that is not an instance of IContainer.");
      assertFalse(tableBlock0._isGeneratedId());
      assertTrue(link0._isGeneratedId());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=2.3482355626252422
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Component component0 = errorPage0.div();
      assertEquals("Block_1", component0.getComponentId());
      
      Table table0 = new Table(errorPage0, "\"2Kr#Le:ZeQRy8|<");
      assertFalse(table0._isGeneratedId());
      
      table0.id("\"2Kr#Le:ZeQRy8|<");
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=2.160129810836369
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      TextInput textInput0 = new TextInput(errorPage0, "GGT=^w)z\"IB:,84P0m", "sub");
      ActionExpression actionExpression0 = new ActionExpression("[cqadut3qq0*`,QX");
      Form form0 = new Form(textInput0, "?W5pA~{PG^`T\"", actionExpression0);
      // Undeclared exception!
      try { 
        form0.id("");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.AbstractMap", e);
      }
  }

  /**
  //Test case number: 115
  /*Coverage entropy=1.4708084763221112
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Hidden hidden0 = new Hidden(errorPage0, "sub", "sub");
      hidden0._classReferenceFromHints();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertEquals("sub", hidden0.getComponentId());
  }

  /**
  //Test case number: 116
  /*Coverage entropy=1.923065784324152
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      StringBuffer stringBuffer0 = new StringBuffer(63);
      Any any0 = new Any(errorPage0, stringBuffer0);
      String string0 = any0._classReferenceFromHints();
      assertNotNull(string0);
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertEquals("Any_1", any0.getComponentId());
  }

  /**
  //Test case number: 117
  /*Coverage entropy=2.4978227639031583
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      ActionExpression actionExpression0 = new ActionExpression("");
      Form form0 = new Form(errorPage0, "span", actionExpression0);
      Component component0 = form0.tt();
      assertTrue(component0._isGeneratedId());
      
      List<RenderableComponent> list0 = form0._getRenderableChildren();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertNotNull(list0);
      assertEquals(1, list0.size());
      assertFalse(form0._isGeneratedId());
  }

  /**
  //Test case number: 118
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Form form0 = new Form("");
      List<RenderableComponent> list0 = form0._getRenderableChildren();
      assertEquals("wheel_components_Form", form0.getComponentId());
      assertNotNull(list0);
  }

  /**
  //Test case number: 119
  /*Coverage entropy=1.7768429883314822
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "7Q");
      Table table1 = table0.renderHint("7Q");
      Table table2 = table1.renderHint("span");
      assertFalse(table2._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  /**
  //Test case number: 120
  /*Coverage entropy=2.215121560924562
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Form form0 = new Form("Thead component can be added only to a Table.");
      ErrorPage errorPage0 = new ErrorPage();
      Component component0 = errorPage0.em((Object) form0);
      assertEquals("Thead component can be added only to a Table.", form0.getComponentId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(component0._isGeneratedId());
  }

  /**
  //Test case number: 121
  /*Coverage entropy=2.265519645571082
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Component component0 = errorPage0.code();
      Long long0 = new Long(1861L);
      Component component1 = component0.cite((Object) long0);
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(component1._isGeneratedId());
  }

  /**
  //Test case number: 122
  /*Coverage entropy=2.438065127986557
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      TextInput textInput0 = new TextInput(errorPage0, "GGT=^w)&z\"IB:,84P0m", "sub");
      Table table0 = new Table(textInput0, "abbr");
      TableBlock tableBlock0 = table0.thead();
      Component component0 = tableBlock0.dfn();
      assertTrue(component0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertFalse(table0._isGeneratedId());
  }

  /**
  //Test case number: 123
  /*Coverage entropy=2.412134388414951
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      ActionExpression actionExpression0 = new ActionExpression("");
      Form form0 = new Form(errorPage0, "span", actionExpression0);
      Component component0 = form0.sup();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(component0._isGeneratedId());
      assertFalse(form0._isGeneratedId());
  }

  /**
  //Test case number: 124
  /*Coverage entropy=2.2215276028105078
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      TextInput textInput0 = new TextInput(errorPage0, "java.lang.StringBuffer@0000000010", (String) null);
      Checkbox checkbox0 = new Checkbox(textInput0, "", (String) null);
      // Undeclared exception!
      try { 
        checkbox0.noscript();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 125
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try { 
        errorPage0.td();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Td component can be added only to a TableRow.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 126
  /*Coverage entropy=1.4270610433807247
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Checkbox checkbox0 = new Checkbox((Component) null, "empty string is not allowed for ignorable whitespace", "a");
      // Undeclared exception!
      try { 
        checkbox0.addFirst((Component) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 127
  /*Coverage entropy=2.389518766866414
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Link link0 = new Link(errorPage0, errorPage0);
      NumberInput numberInput0 = new NumberInput(link0, "ul", "^p:T*(|&Qjh%kHz");
      Component component0 = link0.p((Object) numberInput0);
      assertFalse(numberInput0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(component0._isGeneratedId());
  }

  /**
  //Test case number: 128
  /*Coverage entropy=1.8462202193216333
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("");
      Boolean boolean0 = new Boolean(false);
      Label label0 = new Label(errorPage0, boolean0);
      // Undeclared exception!
      try { 
        xmlEntityRef0.a((Object) label0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 129
  /*Coverage entropy=1.5498260458782016
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("Thead component can be added only to a Table.");
      // Undeclared exception!
      try { 
        xmlEntityRef0.label((Object) "Thead component can be added only to a Table.");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 130
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      Form form0 = new Form("F_oi596!");
      // Undeclared exception!
      try { 
        form0.caption();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Thead component can be added only to a Table.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 131
  /*Coverage entropy=2.4371339210561693
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Checkbox checkbox0 = new Checkbox(errorPage0, "h3", "h3");
      ActionExpression actionExpression0 = new ActionExpression("dt");
      Form form0 = new Form(checkbox0, "CHECKCAST ", actionExpression0);
      FormElement formElement0 = form0.reset("/");
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertFalse(actionExpression0.isSubmissible());
      assertEquals("/", formElement0.getComponentId());
  }

  /**
  //Test case number: 132
  /*Coverage entropy=1.559581156259877
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("toJCkG'&uuh^gR@+||");
      // Undeclared exception!
      try { 
        xmlEntityRef0.ol();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 133
  /*Coverage entropy=1.5498260458782016
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("Thead component can be added only to a Table.");
      // Undeclared exception!
      try { 
        xmlEntityRef0.big((Object) "Thead component can be added only to a Table.");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 134
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("toJCkG'&uuh^gR@+||");
      // Undeclared exception!
      try { 
        xmlEntityRef0.thead();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Thead component can be added only to a Table.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 135
  /*Coverage entropy=2.3666690906796073
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      DateInput dateInput0 = new DateInput(errorPage0, "`", "`", "`");
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.enumeration("`");
      Select select0 = new Select(dateInput0, "#k&N<OlX&", "#k&N<OlX&", "`", dynamicSelectModel1, true);
      Component component0 = errorPage0.address((Object) select0);
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertEquals("#k&N<OlX&", select0.getComponentId());
      assertTrue(component0._isGeneratedId());
  }

  /**
  //Test case number: 136
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      XmlPullParserFactory xmlPullParserFactory0 = XmlPullParserFactory.newInstance();
      XmlSerializer xmlSerializer0 = xmlPullParserFactory0.newSerializer();
      errorPage0._renderActions(xmlSerializer0);
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  /**
  //Test case number: 137
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef((String) null);
      // Undeclared exception!
      try { 
        xmlEntityRef0.style();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 138
  /*Coverage entropy=2.0101626586396124
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      Form form0 = new Form("INVOKEINTERFACE org/mvel/ExecutableStatement.getValue");
      Radio radio0 = new Radio(form0, "INVOKEINTERFACE org/mvel/ExecutableStatement.getValue", "INVOKEINTERFACE org/mvel/ExecutableStatement.getValue");
      Submit submit0 = new Submit(radio0, "INVOKEINTERFACE org/mvel/ExecutableStatement.getValue", "Could not find componenNwithid ");
      Checkbox checkbox0 = new Checkbox(submit0, "INVOKEINTERFACE org/mvel/ExecutableStatement.getValue", "Could not find componenNwithid ");
      // Undeclared exception!
      try { 
        checkbox0.textarea("Could not find componenNwithid ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 139
  /*Coverage entropy=1.7782333057997075
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      NumberInput numberInput0 = new NumberInput((Component) null, "java.lang.StringBuffer@0000000010", "R?82O&zMB4_aC");
      // Undeclared exception!
      try { 
        numberInput0.textInput("java.lang.StringBuffer@0000000010");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 140
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try { 
        errorPage0.th();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Th component can be added only to a TableRow.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 141
  /*Coverage entropy=2.214810368050709
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      DateInput dateInput0 = new DateInput(errorPage0, "`", "`", "`");
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("");
      // Undeclared exception!
      try { 
        dateInput0.rawText(xmlEntityRef0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 142
  /*Coverage entropy=1.5832584594204766
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("");
      // Undeclared exception!
      try { 
        xmlEntityRef0.wrapSelf();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No top level component found.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 143
  /*Coverage entropy=1.8705688894156371
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      DateInput dateInput0 = new DateInput(errorPage0, "`", "`", "`");
      // Undeclared exception!
      try { 
        dateInput0.submit("`");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 144
  /*Coverage entropy=2.4121343884149504
  */
  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "\"2Kr#Le:ZeQRy8|<");
      Component component0 = table0.link();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(component0._isGeneratedId());
      assertEquals("\"2Kr#Le:ZeQRy8|<", table0.getComponentId());
  }

  /**
  //Test case number: 145
  /*Coverage entropy=2.4284049859711825
  */
  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      ActionExpression actionExpression0 = new ActionExpression("");
      Form form0 = new Form(errorPage0, "span", actionExpression0);
      Component component0 = form0.tt();
      TextArea textArea0 = new TextArea(component0, "9q=@", "");
      // Undeclared exception!
      try { 
        textArea0.cite();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 146
  /*Coverage entropy=1.5498260458782016
  */
  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("");
      // Undeclared exception!
      try { 
        xmlEntityRef0.big();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 147
  /*Coverage entropy=1.559581156259877
  */
  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("");
      // Undeclared exception!
      try { 
        xmlEntityRef0.iframe();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 148
  /*Coverage entropy=2.2343358078055116
  */
  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      DateInput dateInput0 = new DateInput(errorPage0, "`", "`", "`");
      // Undeclared exception!
      try { 
        dateInput0.h1((Object) dateInput0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 149
  /*Coverage entropy=2.438065127986557
  */
  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      TextInput textInput0 = new TextInput(errorPage0, "GGT=^w)&z\"IB:,84P0m", "sub");
      Table table0 = new Table(textInput0, "abbr");
      Component component0 = table0.noframes();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertEquals("Block_2", component0.getComponentId());
      assertTrue(component0._isGeneratedId());
      assertEquals("abbr", table0.getComponentId());
  }

  /**
  //Test case number: 150
  /*Coverage entropy=2.4121343884149504
  */
  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      ActionExpression actionExpression0 = new ActionExpression("");
      Form form0 = new Form(errorPage0, "span", actionExpression0);
      Component component0 = form0.i();
      assertTrue(component0._isGeneratedId());
      assertEquals("span", form0.getComponentId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  /**
  //Test case number: 151
  /*Coverage entropy=2.427212791555671
  */
  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try { 
        errorPage0.head();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.StandaloneComponent", e);
      }
  }

  /**
  //Test case number: 152
  /*Coverage entropy=2.203399008114057
  */
  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Component component0 = errorPage0.u();
      assertTrue(component0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  /**
  //Test case number: 153
  /*Coverage entropy=2.338951607622378
  */
  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Component component0 = errorPage0.hr();
      // Undeclared exception!
      try { 
        component0.del((Object) "Q]n@]a=0B");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 154
  /*Coverage entropy=2.2343358078055116
  */
  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Hidden hidden0 = new Hidden(errorPage0, "sub", "sub");
      // Undeclared exception!
      try { 
        hidden0.script();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 155
  /*Coverage entropy=2.412134388414951
  */
  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      ActionExpression actionExpression0 = new ActionExpression("");
      Form form0 = new Form(errorPage0, "span", actionExpression0);
      Component component0 = form0.h2();
      assertEquals("span", form0.getComponentId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(component0._isGeneratedId());
  }

  /**
  //Test case number: 156
  /*Coverage entropy=2.2208348271471956
  */
  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Checkbox checkbox0 = new Checkbox(errorPage0, "h3", "h3");
      TextInput textInput0 = new TextInput(checkbox0, "/", "dt");
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("h2");
      // Undeclared exception!
      try { 
        textInput0.sub((Object) xmlEntityRef0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 157
  /*Coverage entropy=2.214810368050709
  */
  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Link link0 = new Link(errorPage0, errorPage0);
      Submit submit0 = new Submit(errorPage0, "span", "(Lx2^i1dAA8Jrnb~AcW");
      TableBlock tableBlock0 = new TableBlock(link0);
      // Undeclared exception!
      try { 
        submit0.htmlText(tableBlock0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 158
  /*Coverage entropy=1.7917594692280554
  */
  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      Checkbox checkbox0 = new Checkbox((Component) null, "Sensitive", "U-8bi$/wis6O");
      Radio radio0 = new Radio(checkbox0, "^D5GRZn)ZT", "U-8bi$/wis6O");
      // Undeclared exception!
      try { 
        checkbox0.li((Object) radio0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 159
  /*Coverage entropy=2.2343358078055116
  */
  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      TextInput textInput0 = new TextInput(errorPage0, "GGT=^w)&z\"IB:,84P0m", "sub");
      ActionExpression actionExpression0 = new ActionExpression((String) null);
      // Undeclared exception!
      try { 
        textInput0.bdo(actionExpression0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 160
  /*Coverage entropy=1.933809998920632
  */
  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      Form form0 = new Form("INVOKEINTERFACE org/mvel/ExecutableStatement.getValue");
      Radio radio0 = new Radio(form0, "INVOKEINTERFACE org/mvel/ExecutableStatement.getValue", "INVOKEINTERFACE org/mvel/ExecutableStatement.getValue");
      Submit submit0 = new Submit(radio0, "INVOKEINTERFACE org/mvel/ExecutableStatement.getValue", "Could not find component with id ");
      // Undeclared exception!
      try { 
        submit0.code((Object) radio0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 161
  /*Coverage entropy=2.513896005944442
  */
  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Image image0 = new Image(errorPage0, "INVOKEINTERFACE org/mvel/ExecutableStatement.getValue", "INVOKEINTERFACE org/mvel/ExecutableStatement.getValue");
      Component component0 = errorPage0.dfn((Object) image0);
      TextArea textArea0 = new TextArea(component0, "[QV8s$T", "");
      // Undeclared exception!
      try { 
        textArea0.numberInput("", (CharSequence) "");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 162
  /*Coverage entropy=1.791759469228055
  */
  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      Checkbox checkbox0 = new Checkbox((Component) null, "empty string is not allowed for ignorable whitespace", "a");
      // Undeclared exception!
      try { 
        checkbox0.text("empty string is not allowed for ignorable whitespace");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 163
  /*Coverage entropy=2.2343358078055116
  */
  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      DateInput dateInput0 = new DateInput(errorPage0, "script", "script", "script");
      // Undeclared exception!
      try { 
        dateInput0.h4((Object) "script");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 164
  /*Coverage entropy=2.2151922093961676
  */
  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Checkbox checkbox0 = new Checkbox(errorPage0, "h3", "h3");
      TextInput textInput0 = new TextInput(checkbox0, "/", "dt");
      // Undeclared exception!
      try { 
        textInput0.h4();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 165
  /*Coverage entropy=2.2343358078055116
  */
  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Hidden hidden0 = new Hidden(errorPage0, "sub", "sub");
      // Undeclared exception!
      try { 
        hidden0.b();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 166
  /*Coverage entropy=2.3794633844022064
  */
  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Checkbox checkbox0 = new Checkbox(errorPage0, "h3", "h3");
      Text text0 = new Text(checkbox0, "sup");
      Component component0 = errorPage0.b((Object) text0);
      assertTrue(component0._isGeneratedId());
      assertEquals("h3", checkbox0.getComponentId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  /**
  //Test case number: 167
  /*Coverage entropy=2.5681011930904813
  */
  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Radio radio0 = new Radio(errorPage0, "java.lang.String@0000000015", "java.lang.String@0000000015");
      Image image0 = new Image(radio0, "java.lang.String@0000000015", "java.lang.String@0000000015");
      ActionExpression actionExpression0 = new ActionExpression("java.lang.String@0000000015");
      Form form0 = new Form(image0, "java.lang.String@0000000015", actionExpression0);
      TableBlock tableBlock0 = new TableBlock(form0, "java.lang.String@0000000015");
      FormElement formElement0 = tableBlock0.buttonInput("java.lang.String@0000000015");
      assertTrue(image0._isGeneratedId());
      assertFalse(formElement0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  /**
  //Test case number: 168
  /*Coverage entropy=1.791759469228055
  */
  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      DateInput dateInput0 = new DateInput(errorPage0, "`", "`", "`");
      // Undeclared exception!
      try { 
        dateInput0.entity("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 169
  /*Coverage entropy=1.7351264569629226
  */
  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      Form form0 = new Form("");
      // Undeclared exception!
      try { 
        form0.passwordInput("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 170
  /*Coverage entropy=1.5498260458782016
  */
  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      Form form0 = new Form("");
      // Undeclared exception!
      try { 
        form0.var((Object) "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 171
  /*Coverage entropy=1.7917594692280554
  */
  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      Checkbox checkbox0 = new Checkbox((Component) null, "empty string is not allowed for ignorable whitespace", "a");
      Hidden hidden0 = new Hidden(checkbox0, "a", "a");
      // Undeclared exception!
      try { 
        hidden0.pre();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 172
  /*Coverage entropy=2.203399008114057
  */
  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Component component0 = errorPage0.ins();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(component0._isGeneratedId());
  }

  /**
  //Test case number: 173
  /*Coverage entropy=2.203399008114057
  */
  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Component component0 = errorPage0.object();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(component0._isGeneratedId());
  }

  /**
  //Test case number: 174
  /*Coverage entropy=1.5498260458782016
  */
  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      Form form0 = new Form("empty string s\not allowed for ignorable whitespace");
      // Undeclared exception!
      try { 
        form0.acronym();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 175
  /*Coverage entropy=2.2343358078055116
  */
  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Checkbox checkbox0 = new Checkbox(errorPage0, "h3", "h3");
      // Undeclared exception!
      try { 
        checkbox0.tt((Object) "h3");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 176
  /*Coverage entropy=1.4708084763221112
  */
  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      DateInput dateInput0 = new DateInput(errorPage0, "`", "`", "`");
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("");
      // Undeclared exception!
      try { 
        xmlEntityRef0.remove((Component) dateInput0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 177
  /*Coverage entropy=2.2305112122117543
  */
  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Component component0 = errorPage0.ul();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertEquals("Block_1", component0.getComponentId());
  }

  /**
  //Test case number: 178
  /*Coverage entropy=2.246213836677445
  */
  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Link link0 = new Link(errorPage0, errorPage0);
      TextInput textInput0 = new TextInput(errorPage0, "", "");
      // Undeclared exception!
      try { 
        textInput0.abbr((Object) link0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 179
  /*Coverage entropy=1.6715952780212542
  */
  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      ActionExpression actionExpression0 = new ActionExpression("");
      Form form0 = new Form(errorPage0, "span", actionExpression0);
      // Undeclared exception!
      try { 
        form0.col();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Col component can be added only to a TableBlock.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 180
  /*Coverage entropy=2.106577333232116
  */
  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      DateInput dateInput0 = new DateInput(errorPage0, "", "", "");
      // Undeclared exception!
      try { 
        dateInput0.dateFormat((String) null, "YR");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Failed to initialize SimpleDateFormat with pattern 'null'.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 181
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      Form form0 = new Form("");
      String string0 = form0.getComponentName();
      assertEquals("Form", string0);
      assertEquals("wheel_components_Form", form0.getComponentId());
  }

  /**
  //Test case number: 182
  /*Coverage entropy=1.559581156259877
  */
  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("UC1Wk");
      // Undeclared exception!
      try { 
        xmlEntityRef0.fieldset();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 183
  /*Coverage entropy=2.4109207168582683
  */
  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Link link0 = new Link(errorPage0, errorPage0);
      Table table0 = new Table(errorPage0, "7Q");
      TableBlock tableBlock0 = table0.colgroup();
      Component component0 = tableBlock0.q((Object) link0);
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(component0._isGeneratedId());
      assertFalse(table0._isGeneratedId());
  }

  /**
  //Test case number: 184
  /*Coverage entropy=1.9974465815025308
  */
  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Component component0 = errorPage0.a();
      assertTrue(component0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  /**
  //Test case number: 185
  /*Coverage entropy=2.203399008114057
  */
  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Component component0 = errorPage0.del();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(component0._isGeneratedId());
  }

  /**
  //Test case number: 186
  /*Coverage entropy=2.3641994115047673
  */
  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "");
      TableRow tableRow0 = table0.tr();
      TextInput textInput0 = new TextInput(tableRow0, "p>:RauH%*wtlt", "");
      // Undeclared exception!
      try { 
        textInput0.li();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 187
  /*Coverage entropy=2.308761080498052
  */
  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Link link0 = new Link(errorPage0, errorPage0);
      Table table0 = new Table(link0, "spcn");
      // Undeclared exception!
      try { 
        table0.imageSubmit("8", "_ml(AX?p");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 188
  /*Coverage entropy=1.3208883431493221
  */
  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      ActionExpression actionExpression0 = new ActionExpression("`");
      Component component0 = errorPage0.actionBinding(actionExpression0);
      assertEquals("wheel_ErrorPage", component0.getComponentId());
  }

  /**
  //Test case number: 189
  /*Coverage entropy=1.8462202193216333
  */
  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try { 
        errorPage0.form("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // A Form must always have a given componentId.
         //
         verifyException("wheel.components.Form", e);
      }
  }

  /**
  //Test case number: 190
  /*Coverage entropy=1.559581156259877
  */
  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      Form form0 = new Form("");
      // Undeclared exception!
      try { 
        form0.dl();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 191
  /*Coverage entropy=2.2151922093961676
  */
  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      TextInput textInput0 = new TextInput(errorPage0, "GGT=^w)&z\"IB:,84P0m", "sub");
      DateInput dateInput0 = new DateInput(textInput0, "<(,((' YIe\"F_9tAm", "GGT=^w)&z\"IB:,84P0m", "sub");
      // Undeclared exception!
      try { 
        dateInput0.samp((Object) "GGT=^w)&z\"IB:,84P0m");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 192
  /*Coverage entropy=2.2655196455710818
  */
  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Component component0 = errorPage0.q();
      Component component1 = component0.img("bdo", "`");
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(component1._isGeneratedId());
  }

  /**
  //Test case number: 193
  /*Coverage entropy=2.593880335597625
  */
  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      ActionExpression actionExpression0 = new ActionExpression("");
      Form form0 = new Form(errorPage0, "span", actionExpression0);
      Component component0 = form0.tt();
      TextArea textArea0 = new TextArea(component0, "9q=@", "");
      // Undeclared exception!
      try { 
        textArea0.numberInput("span");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 194
  /*Coverage entropy=1.7351264569629226
  */
  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      Form form0 = new Form("Thead componen can be added only to a Table.");
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      ElExpression elExpression0 = new ElExpression("F4:b`M! J`J+rdOyo)|");
      // Undeclared exception!
      try { 
        form0.checkboxGroup("F4:b`M! J`J+rdOyo)|", dynamicSelectModel0, elExpression0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 195
  /*Coverage entropy=1.5498260458782016
  */
  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("e[`]LE)C3aGc");
      // Undeclared exception!
      try { 
        xmlEntityRef0.i((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 196
  /*Coverage entropy=2.4873993153820475
  */
  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      ActionExpression actionExpression0 = new ActionExpression("");
      Form form0 = new Form(errorPage0, "span", actionExpression0);
      Component component0 = form0.br();
      assertEquals("Any_1", component0.getComponentId());
      
      component0._setComponentId("");
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  /**
  //Test case number: 197
  /*Coverage entropy=1.5498260458782016
  */
  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("");
      // Undeclared exception!
      try { 
        xmlEntityRef0.button();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 198
  /*Coverage entropy=1.9096604215404314
  */
  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "\"2Kr#Le:ZeQRy8|<");
      // Undeclared exception!
      try { 
        table0.checkbox("sub");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 199
  /*Coverage entropy=2.2655196455710818
  */
  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Component component0 = errorPage0.q();
      Component component1 = component0.strong();
      assertTrue(component1._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  /**
  //Test case number: 200
  /*Coverage entropy=2.108169769053504
  */
  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Submit submit0 = new Submit(errorPage0, ">khns", "sup");
      // Undeclared exception!
      try { 
        submit0.placeholder("vGV_w*QH 0Bthf#<");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 201
  /*Coverage entropy=1.5832584594204766
  */
  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      Checkbox checkbox0 = new Checkbox((Component) null, "Could not find component with id ", " on the page.");
      // Undeclared exception!
      try { 
        checkbox0.p();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 202
  /*Coverage entropy=2.3142828349831306
  */
  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Checkbox checkbox0 = new Checkbox(errorPage0, "h3", "h3");
      TextInput textInput0 = new TextInput(checkbox0, "/", "dt");
      // Undeclared exception!
      try { 
        textInput0.area((String[]) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 203
  /*Coverage entropy=2.203399008114057
  */
  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Component component0 = errorPage0.h3();
      assertTrue(component0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  /**
  //Test case number: 204
  /*Coverage entropy=1.5498260458782016
  */
  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("");
      // Undeclared exception!
      try { 
        xmlEntityRef0.h6();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 205
  /*Coverage entropy=2.349081839644462
  */
  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Link link0 = new Link(errorPage0, errorPage0);
      Component component0 = link0.s();
      Component component1 = component0.span();
      assertEquals("Block_2", component1.getComponentId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  /**
  //Test case number: 206
  /*Coverage entropy=1.9061547465398496
  */
  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      DateInput dateInput0 = new DateInput(errorPage0, "`", "`", "`");
      Component component0 = dateInput0.requestFocus();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertEquals("`", component0.getComponentId());
  }

  /**
  //Test case number: 207
  /*Coverage entropy=2.203399008114057
  */
  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Component component0 = errorPage0.var();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(component0._isGeneratedId());
  }

  /**
  //Test case number: 208
  /*Coverage entropy=1.5498260458782016
  */
  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("'");
      Byte byte0 = new Byte((byte)1);
      // Undeclared exception!
      try { 
        xmlEntityRef0.sup((Object) byte0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 209
  /*Coverage entropy=2.265519645571082
  */
  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Component component0 = errorPage0.small();
      Component component1 = component0.h1();
      assertTrue(component1._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  /**
  //Test case number: 210
  /*Coverage entropy=1.3296613488547582
  */
  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      Form form0 = new Form("abbr");
      StringBuffer stringBuffer0 = new StringBuffer("abbr");
      // Undeclared exception!
      try { 
        form0.frame(stringBuffer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 211
  /*Coverage entropy=2.2379795021964175
  */
  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Hidden hidden0 = new Hidden(errorPage0, "sub", "sub");
      // Undeclared exception!
      try { 
        hidden0.kbd((Object) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 212
  /*Coverage entropy=2.203399008114057
  */
  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Component component0 = errorPage0.samp();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(component0._isGeneratedId());
  }

  /**
  //Test case number: 213
  /*Coverage entropy=2.4606882558732113
  */
  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Checkbox checkbox0 = new Checkbox(errorPage0, "h3", "h3");
      ActionExpression actionExpression0 = new ActionExpression("dt");
      Form form0 = new Form(checkbox0, "CHECKCAST ", actionExpression0);
      Component component0 = form0.label();
      assertTrue(component0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertFalse(form0._isGeneratedId());
  }

  /**
  //Test case number: 214
  /*Coverage entropy=2.1618731955069412
  */
  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Checkbox checkbox0 = new Checkbox(errorPage0, "h3", "h3");
      // Undeclared exception!
      try { 
        checkbox0.map("=qk[eKY qjqs{d6w6IW");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 215
  /*Coverage entropy=2.4654489146237024
  */
  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      InitialFieldValue initialFieldValue0 = new InitialFieldValue("span");
      Component component0 = errorPage0.dfn((Object) initialFieldValue0);
      ActionExpression actionExpression0 = new ActionExpression("9");
      Form form0 = new Form(component0, "9", actionExpression0);
      Component component1 = form0.up(2);
      assertTrue(component0._isGeneratedId());
      assertEquals("wheel_ErrorPage", component1.getComponentId());
      assertNotNull(component1);
      assertFalse(form0._isGeneratedId());
  }

  /**
  //Test case number: 216
  /*Coverage entropy=1.3208883431493221
  */
  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("");
      Component component0 = xmlEntityRef0.actionBinding("empty string is not allowed for ignorable whitespace");
      assertEquals("wheel_components_XmlEntityRef", component0.getComponentId());
  }

  /**
  //Test case number: 217
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try { 
        errorPage0.tfoot();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Tfoot component can be added only to a Table.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 218
  /*Coverage entropy=2.203399008114057
  */
  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Component component0 = errorPage0.h2((Object) "83TV0|7'6iJ1");
      assertTrue(component0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  /**
  //Test case number: 219
  /*Coverage entropy=1.6170531525095537
  */
  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      ActionExpression actionExpression0 = new ActionExpression("%i3`B ;uQ\"CxA0a7dz0");
      ErrorPage errorPage0 = new ErrorPage();
      TextInput textInput0 = new TextInput(errorPage0, "FT", "%i3`B ;uQ\"CxA0a7dz0");
      Component component0 = textInput0.clasS(actionExpression0);
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertEquals("%i3`B ;uQ\"CxA0a7dz0", component0.getComponentId());
  }

  /**
  //Test case number: 220
  /*Coverage entropy=2.461571919541428
  */
  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Checkbox checkbox0 = new Checkbox(errorPage0, "h3", "h3");
      ActionExpression actionExpression0 = new ActionExpression("dt");
      Form form0 = new Form(checkbox0, "CHECKCAST ", actionExpression0);
      StringSelectModel stringSelectModel0 = new StringSelectModel();
      Select select0 = (Select)form0.multiSelect("h3", stringSelectModel0, "java.lang.StringBuffer@0000000010");
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertFalse(select0._isGeneratedId());
      assertTrue(select0._isBuilt());
  }

  /**
  //Test case number: 221
  /*Coverage entropy=2.40490507609277
  */
  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Component component0 = errorPage0.code();
      Checkbox checkbox0 = new Checkbox(component0, "} ", "Vq>FSFc|G$Qd>d");
      // Undeclared exception!
      try { 
        checkbox0.legend();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 222
  /*Coverage entropy=1.5498260458782016
  */
  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("toJCkG'&uuh^gR@+||");
      // Undeclared exception!
      try { 
        xmlEntityRef0.kbd();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 223
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      MXSerializer mXSerializer0 = new MXSerializer();
      XmlSerializerDelegate xmlSerializerDelegate0 = new XmlSerializerDelegate(mXSerializer0);
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("span");
      xmlEntityRef0._renderXhtmlAttributes(xmlSerializerDelegate0);
      assertEquals("span", xmlEntityRef0.getComponentId());
  }

  /**
  //Test case number: 224
  /*Coverage entropy=2.2343358078055116
  */
  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Checkbox checkbox0 = new Checkbox(errorPage0, "GGT=^w)&z\"IB:,84P0m", "wF}");
      Image image0 = new Image(errorPage0, "h5", "sub");
      // Undeclared exception!
      try { 
        checkbox0.dt((Object) image0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 225
  /*Coverage entropy=1.559581156259877
  */
  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      Form form0 = new Form("F_oi596");
      // Undeclared exception!
      try { 
        form0.dd();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
