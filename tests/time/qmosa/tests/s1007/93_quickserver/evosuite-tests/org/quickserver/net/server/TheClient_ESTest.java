/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 19:28:35 GMT 2019
 */

package org.quickserver.net.server;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.net.InetSocketAddress;
import java.net.Proxy;
import java.net.Socket;
import java.net.SocketAddress;
import java.nio.channels.SocketChannel;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.net.MockInetSocketAddress;
import org.evosuite.runtime.mock.java.net.MockSocket;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;
import org.quickserver.net.qsadmin.CommandHandler;
import org.quickserver.net.qsadmin.Data;
import org.quickserver.net.server.Authenticator;
import org.quickserver.net.server.ClientAuthenticationHandler;
import org.quickserver.net.server.ClientBinaryHandler;
import org.quickserver.net.server.ClientCommandHandler;
import org.quickserver.net.server.ClientData;
import org.quickserver.net.server.ClientEvent;
import org.quickserver.net.server.ClientEventHandler;
import org.quickserver.net.server.ClientExtendedEventHandler;
import org.quickserver.net.server.ClientObjectHandler;
import org.quickserver.net.server.ClientWriteHandler;
import org.quickserver.net.server.QuickServer;
import org.quickserver.net.server.TheClient;
import org.quickserver.net.server.impl.BlockingClientHandler;
import org.quickserver.net.server.impl.DefaultClientEventHandler;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TheClient_ESTest extends TheClient_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("", 12345);
      MockSocket mockSocket0 = new MockSocket();
      theClient0.setSocket(mockSocket0);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      String string0 = theClient0.toString();
      assertEquals("{TheClient Socket[unconnected], Event: (ClientEvent-Run Blocking)}", string0);
      
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "{TheClient Socket[unconnected], Event: (ClientEvent-Run Blocking)}");
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, (byte[]) null);
      theClient0.getServer();
      assertFalse(theClient0.getTrusted());
      assertTrue(theClient0.getCommunicationLogging());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.6275577079926418
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getClientWriteHandler();
      theClient0.getClientExtendedEventHandler();
      theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient0.getClientWriteHandler();
      theClient0.setClientWriteHandler((ClientWriteHandler) null);
      theClient0.setSocketChannel((SocketChannel) null);
      theClient0.getCommunicationLogging();
      theClient0.getMaxAuthTryMsg();
      theClient0.getClientBinaryHandler();
      theClient0.getClientEventHandler();
      theClient0.getClientAuthenticationHandler();
      theClient0.setTimeout(125);
      theClient0.getMaxAuthTryMsg();
      theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient0.setMaxAuthTry(0);
      theClient0.getTimeout();
      TheClient theClient1 = new TheClient();
      theClient1.getClientObjectHandler();
      theClient0.setClientObjectHandler((ClientObjectHandler) null);
      theClient1.getClientCommandHandler();
      theClient0.setMaxConnectionMsg("");
      theClient1.getClientAuthenticationHandler();
      theClient0.toString();
      theClient1.setClientAuthenticationHandler((ClientAuthenticationHandler) null);
      theClient0.getClientCommandHandler();
      theClient1.getClientCommandHandler();
      theClient0.getMaxConnectionMsg();
      DefaultClientEventHandler defaultClientEventHandler0 = new DefaultClientEventHandler();
      theClient1.setClientEventHandler((ClientEventHandler) null);
      theClient1.getAuthenticator();
      theClient0.toString();
      assertEquals(125, theClient0.getTimeout());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.9727115278367817
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      TheClient theClient0 = new TheClient();
      theClient0.getClientExtendedEventHandler();
      theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient0.setClientEvent((ClientEvent) null);
      theClient0.setMaxConnectionMsg("PID: {0}");
      theClient0.getClientEvent();
      theClient0.getClientExtendedEventHandler();
      theClient0.getAuthenticator();
      theClient0.setAuthenticator((Authenticator) null);
      theClient0.getServer();
      theClient0.getClientExtendedEventHandler();
      theClient0.getClientWriteHandler();
      theClient0.getClientWriteHandler();
      theClient0.getClientObjectHandler();
      theClient0.getServer();
      theClient0.getClientWriteHandler();
      theClient0.getClientEvent();
      theClient0.getClientWriteHandler();
      theClient0.getClientBinaryHandler();
      theClient0.getAuthenticator();
      assertTrue(theClient0.getCommunicationLogging());
      assertFalse(theClient0.getTrusted());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      BlockingClientHandler blockingClientHandler0 = new BlockingClientHandler();
      ClientEvent clientEvent0 = ClientEvent.MAX_CON;
      blockingClientHandler0.hasEvent(clientEvent0);
      blockingClientHandler0.getClientData();
      assertEquals("<ClientHandler-Pool#-1-ID:1>", blockingClientHandler0.getName());
      
      theClient0.setClientData((ClientData) null);
      theClient0.setMaxConnectionMsg("IllegalAccessException : ");
      theClient0.getMaxConnectionMsg();
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, (byte[]) null);
      theClient0.getMaxConnectionMsg();
      assertFalse(theClient0.getTrusted());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.4872576972828044
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getClientWriteHandler();
      theClient0.toString();
      theClient0.getClientBinaryHandler();
      theClient0.getAuthenticator();
      theClient0.setAuthenticator((Authenticator) null);
      theClient0.setClientBinaryHandler((ClientBinaryHandler) null);
      theClient0.setMaxAuthTry((-715));
      theClient0.setClientBinaryHandler((ClientBinaryHandler) null);
      theClient0.setClientWriteHandler((ClientWriteHandler) null);
      theClient0.getCommunicationLogging();
      theClient0.getClientObjectHandler();
      theClient0.setClientObjectHandler((ClientObjectHandler) null);
      theClient0.getCommunicationLogging();
      theClient0.getMaxAuthTry();
      theClient0.getClientBinaryHandler();
      ClientEvent clientEvent0 = ClientEvent.READ;
      theClient0.setClientEvent(clientEvent0);
      theClient0.setClientEvent(clientEvent0);
      theClient0.getMaxAuthTryMsg();
      theClient0.getServer();
      theClient0.getCommunicationLogging();
      theClient0.setAuthenticator((Authenticator) null);
      org.quickserver.net.qsadmin.Authenticator authenticator0 = new org.quickserver.net.qsadmin.Authenticator();
      theClient0.setClientAuthenticationHandler(authenticator0);
      theClient0.setTimeout(0);
      theClient0.getServer();
      theClient0.getClientAuthenticationHandler();
      theClient0.toString();
      theClient0.getClientBinaryHandler();
      theClient0.getClientExtendedEventHandler();
      assertEquals((-715), theClient0.getMaxAuthTry());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.6275577079926418
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.setClientAuthenticationHandler((ClientAuthenticationHandler) null);
      theClient0.getClientExtendedEventHandler();
      theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient0.getClientWriteHandler();
      theClient0.setClientWriteHandler((ClientWriteHandler) null);
      theClient0.setSocketChannel((SocketChannel) null);
      theClient0.getCommunicationLogging();
      theClient0.getMaxAuthTryMsg();
      theClient0.getClientBinaryHandler();
      theClient0.getClientEventHandler();
      theClient0.getClientAuthenticationHandler();
      theClient0.setTimeout((-1970));
      theClient0.getMaxAuthTryMsg();
      theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient0.setMaxAuthTry(1969);
      theClient0.getTimeout();
      theClient0.getClientObjectHandler();
      theClient0.setClientObjectHandler((ClientObjectHandler) null);
      theClient0.getClientCommandHandler();
      theClient0.setMaxConnectionMsg((String) null);
      theClient0.getClientAuthenticationHandler();
      theClient0.toString();
      theClient0.setClientAuthenticationHandler((ClientAuthenticationHandler) null);
      theClient0.getClientCommandHandler();
      theClient0.getClientCommandHandler();
      theClient0.getMaxConnectionMsg();
      DefaultClientEventHandler defaultClientEventHandler0 = new DefaultClientEventHandler();
      theClient0.setClientEventHandler(defaultClientEventHandler0);
      theClient0.getAuthenticator();
      theClient0.toString();
      theClient0.getClientWriteHandler();
      assertEquals((-1970), theClient0.getTimeout());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.6709087878625355
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getClientObjectHandler();
      theClient0.setClientObjectHandler((ClientObjectHandler) null);
      InetSocketAddress inetSocketAddress0 = MockInetSocketAddress.createUnresolved("", 1092);
      Proxy.Type proxy_Type0 = Proxy.Type.SOCKS;
      Proxy proxy0 = new Proxy(proxy_Type0, inetSocketAddress0);
      Proxy proxy1 = Proxy.NO_PROXY;
      MockSocket mockSocket0 = new MockSocket(proxy1);
      mockSocket0.setReuseAddress(true);
      theClient0.setSocket(mockSocket0);
      boolean boolean0 = theClient0.getTrusted();
      assertFalse(boolean0);
      
      int int0 = theClient0.getTimeout();
      assertEquals(0, int0);
      
      theClient0.getSocket();
      theClient0.getMaxConnectionMsg();
      DefaultClientEventHandler defaultClientEventHandler0 = new DefaultClientEventHandler();
      theClient0.setClientEventHandler(defaultClientEventHandler0);
      assertTrue(theClient0.getCommunicationLogging());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.9687776175299367
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getClientExtendedEventHandler();
      CommandHandler commandHandler0 = new CommandHandler();
      theClient0.setClientCommandHandler(commandHandler0);
      assertFalse(theClient0.getTrusted());
      
      theClient0.setTrusted(true);
      theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient0.toString();
      theClient0.getClientBinaryHandler();
      theClient0.setClientBinaryHandler((ClientBinaryHandler) null);
      Data data0 = new Data();
      data0.setLastAsked("u7XGhaN KIl");
      theClient0.setClientData(data0);
      theClient0.getClientBinaryHandler();
      theClient0.setClientBinaryHandler((ClientBinaryHandler) null);
      theClient0.getClientCommandHandler();
      theClient0.toString();
      theClient0.getClientWriteHandler();
      theClient0.getSocket();
      assertTrue(theClient0.getTrusted());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.048820325203473
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getClientExtendedEventHandler();
      CommandHandler commandHandler0 = new CommandHandler();
      theClient0.setClientCommandHandler(commandHandler0);
      assertFalse(theClient0.getTrusted());
      
      theClient0.setTrusted(true);
      theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient0.toString();
      theClient0.getClientBinaryHandler();
      theClient0.setClientBinaryHandler((ClientBinaryHandler) null);
      Data data0 = new Data();
      data0.setLastAsked("u7XGhaN KIl");
      theClient0.setClientData(data0);
      theClient0.getClientBinaryHandler();
      theClient0.setClientBinaryHandler((ClientBinaryHandler) null);
      CommandHandler commandHandler1 = new CommandHandler();
      theClient0.setMaxAuthTryMsg("u7XGhaN KIl");
      theClient0.getClientData();
      theClient0.getClientAuthenticationHandler();
      theClient0.getClientWriteHandler();
      assertTrue(theClient0.getTrusted());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.5370597511562574
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getClientExtendedEventHandler();
      theClient0.setClientAuthenticationHandler((ClientAuthenticationHandler) null);
      theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient0.getClientWriteHandler();
      theClient0.setClientWriteHandler((ClientWriteHandler) null);
      theClient0.getCommunicationLogging();
      theClient0.getMaxAuthTryMsg();
      theClient0.getClientBinaryHandler();
      theClient0.getClientEventHandler();
      theClient0.getClientAuthenticationHandler();
      theClient0.setTimeout(125);
      theClient0.getMaxAuthTryMsg();
      theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient0.getAuthenticator();
      theClient0.setAuthenticator((Authenticator) null);
      theClient0.getAuthenticator();
      theClient0.getSocketChannel();
      theClient0.setTimeout(125);
      theClient0.getClientWriteHandler();
      theClient0.setClientWriteHandler((ClientWriteHandler) null);
      TheClient theClient1 = new TheClient();
      theClient1.setAuthenticator((Authenticator) null);
      theClient1.setCommunicationLogging(false);
      theClient0.setSocketChannel((SocketChannel) null);
      theClient0.getServer();
      theClient1.getAuthenticator();
      theClient1.getClientCommandHandler();
      theClient0.setClientCommandHandler((ClientCommandHandler) null);
      theClient1.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient1.getCommunicationLogging();
      theClient1.setAuthenticator((Authenticator) null);
      theClient0.toString();
      assertEquals(125, theClient0.getTimeout());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.2627848006711537
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getClientWriteHandler();
      theClient0.toString();
      theClient0.getClientBinaryHandler();
      theClient0.getAuthenticator();
      theClient0.toString();
      theClient0.getClientBinaryHandler();
      theClient0.setClientBinaryHandler((ClientBinaryHandler) null);
      Data data0 = new Data();
      data0.setLastAsked("");
      theClient0.getClientData();
      theClient0.setClientData((ClientData) null);
      theClient0.getClientBinaryHandler();
      theClient0.setClientBinaryHandler((ClientBinaryHandler) null);
      CommandHandler commandHandler0 = new CommandHandler();
      theClient0.setClientEventHandler(commandHandler0);
      theClient0.getSocket();
      theClient0.getServer();
      ClientEventHandler clientEventHandler0 = theClient0.getClientEventHandler();
      theClient0.setClientEventHandler(clientEventHandler0);
      theClient0.getServer();
      TheClient theClient1 = new TheClient();
      String string0 = theClient1.toString();
      assertEquals("{TheClient no socket, Event: (ClientEvent-Run Blocking)}", string0);
      
      ClientEvent clientEvent0 = ClientEvent.ACCEPT;
      theClient0.setClientEvent(clientEvent0);
      theClient1.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient1.getClientObjectHandler();
      theClient0.getClientObjectHandler();
      theClient1.setClientObjectHandler((ClientObjectHandler) null);
      assertFalse(theClient1.getTrusted());
      assertTrue(theClient1.getCommunicationLogging());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.487795765617483
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.setTrusted(true);
      theClient0.toString();
      theClient0.getClientExtendedEventHandler();
      theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient0.setMaxAuthTryMsg(".igUe5");
      theClient0.getClientObjectHandler();
      theClient0.setClientObjectHandler((ClientObjectHandler) null);
      theClient0.getClientAuthenticationHandler();
      theClient0.getClientBinaryHandler();
      theClient0.setClientBinaryHandler((ClientBinaryHandler) null);
      theClient0.getClientAuthenticationHandler();
      theClient0.setTimeout(2197);
      theClient0.getMaxAuthTryMsg();
      theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient0.setMaxAuthTry((-1159));
      theClient0.getTimeout();
      theClient0.getClientObjectHandler();
      theClient0.setClientObjectHandler((ClientObjectHandler) null);
      theClient0.getClientCommandHandler();
      theClient0.setMaxConnectionMsg(".igUe5");
      theClient0.getClientAuthenticationHandler();
      theClient0.toString();
      theClient0.setClientAuthenticationHandler((ClientAuthenticationHandler) null);
      theClient0.getClientCommandHandler();
      theClient0.getClientCommandHandler();
      TheClient theClient1 = new TheClient();
      theClient0.setMaxAuthTryMsg("");
      theClient0.setCommunicationLogging(true);
      assertEquals((-1159), theClient0.getMaxAuthTry());
      
      TheClient theClient2 = new TheClient();
      theClient2.getClientEvent();
      assertEquals(0, theClient2.getTimeout());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.322575046183876
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getClientExtendedEventHandler();
      CommandHandler commandHandler0 = new CommandHandler();
      theClient0.setClientCommandHandler(commandHandler0);
      assertFalse(theClient0.getTrusted());
      
      theClient0.setTrusted(true);
      theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient0.toString();
      theClient0.getClientBinaryHandler();
      theClient0.setClientBinaryHandler((ClientBinaryHandler) null);
      Data data0 = new Data();
      data0.setLastAsked("u7XGhaN KIl");
      theClient0.setClientData(data0);
      theClient0.getClientBinaryHandler();
      theClient0.setClientBinaryHandler((ClientBinaryHandler) null);
      CommandHandler commandHandler1 = new CommandHandler();
      theClient0.setClientEventHandler(commandHandler1);
      theClient0.getSocket();
      theClient0.getServer();
      theClient0.setClientEventHandler(commandHandler1);
      theClient0.getServer();
      ClientEvent clientEvent0 = ClientEvent.ACCEPT;
      theClient0.setClientEvent(clientEvent0);
      theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient0.getClientObjectHandler();
      theClient0.setClientObjectHandler((ClientObjectHandler) null);
      theClient0.getTrusted();
      theClient0.getSocket();
      theClient0.getClientWriteHandler();
      assertTrue(theClient0.getTrusted());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.435964402895254
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getClientBinaryHandler();
      theClient0.getAuthenticator();
      theClient0.setAuthenticator((Authenticator) null);
      theClient0.setClientBinaryHandler((ClientBinaryHandler) null);
      theClient0.setMaxAuthTry(2000);
      theClient0.getClientBinaryHandler();
      theClient0.setClientBinaryHandler((ClientBinaryHandler) null);
      theClient0.getClientWriteHandler();
      theClient0.setClientWriteHandler((ClientWriteHandler) null);
      theClient0.getCommunicationLogging();
      theClient0.getClientObjectHandler();
      theClient0.setClientObjectHandler((ClientObjectHandler) null);
      theClient0.getCommunicationLogging();
      theClient0.getMaxAuthTry();
      theClient0.getClientBinaryHandler();
      ClientEvent clientEvent0 = ClientEvent.READ;
      theClient0.setClientEvent(clientEvent0);
      TheClient theClient1 = new TheClient();
      theClient1.setClientEvent(clientEvent0);
      theClient0.getMaxAuthTryMsg();
      theClient0.getServer();
      theClient1.getCommunicationLogging();
      theClient0.getAuthenticator();
      org.quickserver.net.qsadmin.Authenticator authenticator0 = new org.quickserver.net.qsadmin.Authenticator();
      theClient1.getClientAuthenticationHandler();
      theClient0.setClientAuthenticationHandler((ClientAuthenticationHandler) null);
      theClient0.setTimeout(9877);
      assertEquals(9877, theClient0.getTimeout());
      
      TheClient theClient2 = new TheClient();
      theClient2.getServer();
      theClient2.getClientExtendedEventHandler();
      assertEquals(0, theClient2.getMaxAuthTry());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      QuickServer quickServer0 = new QuickServer();
      theClient0.setServer(quickServer0);
      theClient0.getServer();
      MockSocket mockSocket0 = new MockSocket();
      mockSocket0.getLocalSocketAddress();
      // Undeclared exception!
      try { 
        SocketChannel.open((SocketAddress) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.196422294125466
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getClientWriteHandler();
      theClient0.toString();
      theClient0.getClientBinaryHandler();
      theClient0.getAuthenticator();
      theClient0.setAuthenticator((Authenticator) null);
      theClient0.setClientBinaryHandler((ClientBinaryHandler) null);
      theClient0.setMaxAuthTry((-715));
      theClient0.setClientBinaryHandler((ClientBinaryHandler) null);
      theClient0.setClientWriteHandler((ClientWriteHandler) null);
      theClient0.getCommunicationLogging();
      theClient0.getClientObjectHandler();
      theClient0.setClientObjectHandler((ClientObjectHandler) null);
      theClient0.getCommunicationLogging();
      theClient0.getMaxAuthTry();
      theClient0.getClientBinaryHandler();
      TheClient theClient1 = new TheClient();
      theClient1.getClientExtendedEventHandler();
      theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      assertEquals((-715), theClient0.getMaxAuthTry());
      
      theClient1.getClientObjectHandler();
      theClient1.setClientObjectHandler((ClientObjectHandler) null);
      assertTrue(theClient1.getCommunicationLogging());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.7808459625592628
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.setTimeoutMsg("h2'5_)X;xe(AI:");
      theClient0.toString();
      theClient0.getSocket();
      theClient0.setSocket((Socket) null);
      theClient0.getClientObjectHandler();
      theClient0.getTimeout();
      theClient0.setTimeout(1320);
      theClient0.getMaxConnectionMsg();
      theClient0.getTimeoutMsg();
      theClient0.getSocket();
      assertEquals(1320, theClient0.getTimeout());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.582567877087128
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.setMaxAuthTry((-548));
      theClient0.setTimeoutMsg("JH(\"Wa#");
      theClient0.getClientExtendedEventHandler();
      theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient0.getAuthenticator();
      theClient0.setMaxAuthTryMsg("");
      theClient0.getSocket();
      theClient0.setSocket((Socket) null);
      theClient0.setAuthenticator((Authenticator) null);
      theClient0.setAuthenticator((Authenticator) null);
      theClient0.getTimeout();
      theClient0.getClientAuthenticationHandler();
      theClient0.getClientBinaryHandler();
      theClient0.getClientCommandHandler();
      theClient0.setClientCommandHandler((ClientCommandHandler) null);
      theClient0.getSocketChannel();
      theClient0.getCommunicationLogging();
      theClient0.toString();
      theClient0.getClientExtendedEventHandler();
      ClientEvent clientEvent0 = theClient0.getClientEvent();
      theClient0.setClientEvent(clientEvent0);
      theClient0.getMaxAuthTryMsg();
      theClient0.setSocket((Socket) null);
      theClient0.setMaxAuthTryMsg("]C$b$aJ#'eq");
      theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient0.setClientAuthenticationHandler((ClientAuthenticationHandler) null);
      theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient0.toString();
      assertEquals((-548), theClient0.getMaxAuthTry());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.7111835171758907
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getClientObjectHandler();
      theClient0.setClientObjectHandler((ClientObjectHandler) null);
      theClient0.getClientCommandHandler();
      theClient0.setClientCommandHandler((ClientCommandHandler) null);
      theClient0.setClientCommandHandler((ClientCommandHandler) null);
      theClient0.getMaxAuthTry();
      theClient0.setTimeoutMsg("");
      theClient0.getClientExtendedEventHandler();
      theClient0.setTrusted(true);
      theClient0.getTimeoutMsg();
      theClient0.getCommunicationLogging();
      TheClient theClient1 = new TheClient();
      theClient1.getClientAuthenticationHandler();
      theClient0.setClientAuthenticationHandler((ClientAuthenticationHandler) null);
      theClient0.getClientExtendedEventHandler();
      theClient1.setClientCommandHandler((ClientCommandHandler) null);
      theClient0.getAuthenticator();
      theClient1.setTimeout(0);
      theClient0.setTimeoutMsg("");
      theClient0.getMaxAuthTry();
      theClient0.getServer();
      theClient0.getClientAuthenticationHandler();
      theClient0.getMaxAuthTryMsg();
      theClient1.getTimeout();
      theClient0.setMaxAuthTry((-3933));
      theClient0.getClientData();
      theClient0.getSocketChannel();
      theClient0.getClientEventHandler();
      theClient0.setCommunicationLogging(true);
      ClientEvent clientEvent0 = theClient0.getClientEvent();
      theClient1.setClientEvent(clientEvent0);
      assertEquals((-3933), theClient0.getMaxAuthTry());
      assertTrue(theClient0.getCommunicationLogging());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.193764486816496
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getClientExtendedEventHandler();
      theClient0.setClientAuthenticationHandler((ClientAuthenticationHandler) null);
      theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient0.getClientWriteHandler();
      theClient0.setClientWriteHandler((ClientWriteHandler) null);
      boolean boolean0 = theClient0.getCommunicationLogging();
      theClient0.getMaxAuthTryMsg();
      theClient0.getClientBinaryHandler();
      theClient0.getClientEventHandler();
      theClient0.getClientAuthenticationHandler();
      theClient0.setTimeout(125);
      theClient0.getMaxAuthTryMsg();
      theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient0.getClientObjectHandler();
      theClient0.getTimeout();
      theClient0.setTimeoutMsg(":}2Clv$3~lI3*");
      assertEquals(125, theClient0.getTimeout());
      
      boolean boolean1 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getTimeoutMsg();
      int int0 = (-2337);
      MockInetSocketAddress mockInetSocketAddress0 = null;
      try {
        mockInetSocketAddress0 = new MockInetSocketAddress((String) null, (-2337));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // hostname can't be null
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockInetSocketAddress", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      ClientEvent clientEvent0 = ClientEvent.MAX_CON_BLOCKING;
      SocketChannel socketChannel0 = SocketChannel.open();
      theClient0.setSocketChannel(socketChannel0);
      theClient0.getSocketChannel();
      theClient0.getSocket();
      assertTrue(theClient0.getCommunicationLogging());
      assertFalse(theClient0.getTrusted());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getClientData();
      theClient0.setClientAuthenticationHandler((ClientAuthenticationHandler) null);
      theClient0.setClientData((ClientData) null);
      theClient0.getClientWriteHandler();
      theClient0.getClientObjectHandler();
      assertTrue(theClient0.getCommunicationLogging());
      assertFalse(theClient0.getTrusted());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getClientWriteHandler();
      theClient0.setClientWriteHandler((ClientWriteHandler) null);
      theClient0.getMaxAuthTry();
      CommandHandler commandHandler0 = new CommandHandler();
      QuickServer quickServer0 = new QuickServer((String) null, 0);
      // Undeclared exception!
      try { 
        quickServer0.findClientByKey("sp)L-F0~W*d3w~;nL[");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.quickserver.net.server.QuickServer", e);
      }
  }
}
