/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 19:10:27 GMT 2019
 */


import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Services_ESTest extends Services_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.384415616105067
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      byte[] byteArray0 = new byte[6];
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("https://vv. k|_~ |K9Ch:70");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "HB9aI(Zt@]*=D_04!l");
      byteArray0[1] = (byte) (-75);
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte)16;
      byteArray0[4] = (byte)70;
      byteArray0[5] = (byte) (-75);
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTPS("vv. k|_~ |K9Ch", (byte)70);
      assertEquals(19, services_HTTP_Result0.page_weight);
      assertTrue(services_HTTP_Result0.works);
      
      Services.testPOP3("", (byte) (-1));
      System.setCurrentTimeMillis((byte)16);
      Services.HTTP_Result services_HTTP_Result1 = Services.testHTTP("M", 1404);
      assertEquals(0L, services_HTTP_Result1.time);
      assertFalse(services_HTTP_Result1.works);
      assertEquals(0, services_HTTP_Result1.code);
      assertEquals(0, services_HTTP_Result1.page_weight);
      
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testPOP3("", 0);
      assertEquals(0L, services_SIMPLE_Result0.time);
      assertFalse(services_SIMPLE_Result0.works);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("200.42.42.0", 2805);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      Services.testSMTP(" zNP5=rAYWO8|\"zRc'h", 2805);
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testSMTP("@?$)u<2Q6", 0);
      assertFalse(services_SIMPLE_Result0.works);
      assertEquals(0L, services_SIMPLE_Result0.time);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      System.setCurrentTimeMillis((-1712L));
      System.setCurrentTimeMillis((-1712L));
      Services.testSMTP("~$Ip][T'%D;", (-3863));
      System.setCurrentTimeMillis((-478L));
      System.setCurrentTimeMillis((-478L));
      System.setCurrentTimeMillis(1L);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("200.42.42.1", 1081);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis(0L);
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testPOP3("}wb%Wdn>8&LD", 1081);
      assertEquals(0L, services_SIMPLE_Result0.time);
      assertFalse(services_SIMPLE_Result0.works);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://ayHH!gcS:6925");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "ayHH!gcS");
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTP("ayHH!gcS", 6925);
      assertTrue(services_HTTP_Result0.works);
      assertEquals(9, services_HTTP_Result0.page_weight);
      
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testSMTP("", 0);
      assertEquals(0L, services_SIMPLE_Result0.time);
      assertFalse(services_SIMPLE_Result0.works);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.8606101898701155
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = new Services.HTTP_Result();
      Services services0 = new Services();
      Services.testHTTPS("", 0);
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testPOP3("LLUq_*k\"7", 517);
      Services.testHTTPS("", 0);
      Services.SIMPLE_Result services_SIMPLE_Result1 = Services.testSMTP("", 0);
      services_SIMPLE_Result1.reset();
      services_SIMPLE_Result1.works = false;
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://:0");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "K|VeH :qn=");
      services_SIMPLE_Result0.toString();
      String string0 = services_SIMPLE_Result1.toString();
      assertEquals("**** Resultat : \n** Fonctionnement : false\n** Temps : 0 ms\n** Erreur g\u00E9n\u00E9r\u00E9e : .\n****", string0);
      
      String string1 = services_HTTP_Result0.toString();
      assertEquals("**** Resultat : \n** Fonctionnement : false\n** Temps : 0 ms\n** Poid de la page : 0 octets\n** Code de page : 0\n** Erreur g\u00E9n\u00E9r\u00E9e : .\n****", string1);
      
      services_SIMPLE_Result1.reset();
      Services.HTTP_Result services_HTTP_Result1 = Services.testHTTP("", 0);
      assertTrue(services_HTTP_Result1.works);
      assertEquals(11, services_HTTP_Result1.page_weight);
      
      Services.testPOP3("", 12);
      services_SIMPLE_Result1.reset();
      assertFalse(services_SIMPLE_Result1.works);
      
      Services.HTTP_Result services_HTTP_Result2 = Services.testHTTPS("sr/dAEr-B3R+'=@U]6X", 0);
      assertEquals(0, services_HTTP_Result2.code);
      assertEquals(0, services_HTTP_Result2.page_weight);
      assertEquals(0L, services_HTTP_Result2.time);
      assertFalse(services_HTTP_Result2.works);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = new Services.HTTP_Result();
      services_HTTP_Result0.code = (-3208);
      Services.HTTP_Result services_HTTP_Result1 = new Services.HTTP_Result();
      assertEquals(0, services_HTTP_Result1.code);
      
      services_HTTP_Result1.code = (-3208);
      services_HTTP_Result1.works = false;
      services_HTTP_Result1.time = (long) 0;
      services_HTTP_Result1.page_weight = 0;
      services_HTTP_Result1.toString();
      services_HTTP_Result0.reset();
      services_HTTP_Result0.reset();
      services_HTTP_Result0.Error = "";
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testSMTP("** Erreur g\u00E9n\u00E9r\u00E9e : ", (-3208));
      assertEquals(0L, services_SIMPLE_Result0.time);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Services.SIMPLE_Result services_SIMPLE_Result0 = new Services.SIMPLE_Result();
      String string0 = services_SIMPLE_Result0.toString();
      assertEquals("**** Resultat : \n** Fonctionnement : false\n** Temps : 0 ms\n** Erreur g\u00E9n\u00E9r\u00E9e : .\n****", string0);
      
      services_SIMPLE_Result0.reset();
      Services.SIMPLE_Result services_SIMPLE_Result1 = Services.testPOP3("nM3_uo.~i(3&", (-3198));
      assertFalse(services_SIMPLE_Result1.works);
      assertEquals(0L, services_SIMPLE_Result1.time);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTP((String) null, 874);
      assertFalse(services_HTTP_Result0.works);
      assertEquals(0L, services_HTTP_Result0.time);
      assertEquals(0, services_HTTP_Result0.page_weight);
      assertEquals(0, services_HTTP_Result0.code);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      System.setCurrentTimeMillis((-1705L));
      System.setCurrentTimeMillis((-1705L));
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis(1263L);
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis((-1055L));
      System.setCurrentTimeMillis((-650L));
      System.setCurrentTimeMillis((-3863));
      System.setCurrentTimeMillis((-650L));
      Services.testHTTP("", (-3863));
      System.setCurrentTimeMillis((-1L));
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.0942863972825854
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTPS("", 3908);
      Services.HTTP_Result services_HTTP_Result1 = Services.testHTTPS("y3r)h\")C3r*m=2hW", 0);
      services_HTTP_Result1.reset();
      services_HTTP_Result1.reset();
      String string0 = services_HTTP_Result0.toString();
      assertEquals("**** Resultat : \n** Fonctionnement : false\n** Temps : 0 ms\n** Poid de la page : 0 octets\n** Code de page : 0\n** Erreur g\u00E9n\u00E9r\u00E9e : **Erreur d'E/S** (org.evosuite.runtime.mock.java.lang.MockThrowable: Could not find: ) **.\n****", string0);
      
      services_HTTP_Result1.toString();
      Services.testHTTPS("", (-4770));
      Services.HTTP_Result services_HTTP_Result2 = Services.testHTTP("**** Resultat : \n** Fonctionnement : false\n** Temps : 0 ms\n** Poid de la page : 0 octets\n** Code de page : 0\n** Erreur g\u00E9n\u00E9r\u00E9e : **Erreur d'E/S** (org.evosuite.runtime.mock.java.lang.MockThrowable: Could not find: ) **.\n****", 0);
      assertFalse(services_HTTP_Result2.works);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "1b059LKcOmO{");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, (String) null);
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTPS((String) null, 1);
      assertFalse(services_HTTP_Result0.works);
      assertEquals(0, services_HTTP_Result0.page_weight);
      assertEquals(0, services_HTTP_Result0.code);
      assertEquals(0L, services_HTTP_Result0.time);
  }
}
