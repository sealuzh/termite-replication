/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 16:02:10 GMT 2019
 */

package org.pdfsam.guiclient.commons.models;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.sun.media.jai.codec.FPXDecodeParam;
import com.sun.media.jai.codec.SeekableStream;
import java.awt.RenderingHints;
import java.awt.image.BufferedImage;
import java.awt.image.IndexColorModel;
import java.awt.image.RenderedImage;
import java.awt.image.RescaleOp;
import java.awt.image.ShortLookupTable;
import java.math.BigInteger;
import java.util.ArrayDeque;
import java.util.Collection;
import java.util.Comparator;
import java.util.ConcurrentModificationException;
import java.util.HashMap;
import java.util.HashSet;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.PriorityQueue;
import java.util.Stack;
import java.util.Vector;
import java.util.function.BiConsumer;
import java.util.function.Consumer;
import javax.media.jai.RenderedOp;
import javax.media.jai.TiledImage;
import javax.media.jai.operator.AndDescriptor;
import javax.media.jai.operator.FPXDescriptor;
import javax.media.jai.operator.IIPResolutionDescriptor;
import javax.media.jai.operator.PhaseDescriptor;
import javax.swing.JComboBox;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.DefaultEditorKit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.pdfsam.guiclient.commons.models.VisualListModel;
import org.pdfsam.guiclient.dto.VisualPageListItem;
import sun.awt.SunHints;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class VisualListModel_ESTest extends VisualListModel_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.4390227790243086
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel0.appendAllElements(vector0);
      int[] intArray0 = new int[1];
      VisualPageListItem visualPageListItem0 = null;
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) vector0);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) null);
      vector0.clone();
      int int0 = 71;
      vector0.setSize(71);
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      linkedList0.add((VisualPageListItem) null);
      visualListModel0.undeleteElements(intArray0);
      vector0.add((VisualPageListItem) null);
      int int1 = 9970;
      visualListModel0.setData(vector0);
      visualListModel0.reverseElements(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) vector0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Vector$Itr", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.027377075708073
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      intArray0[0] = 5000;
      visualListModel0.getListDataListeners();
      visualListModel0.rotateClockwiseElements(intArray0);
      int[] intArray1 = new int[8];
      intArray1[0] = 5000;
      intArray1[1] = 5000;
      intArray1[2] = 5000;
      intArray1[3] = 5000;
      intArray1[4] = 181;
      intArray1[5] = 5000;
      intArray1[6] = 0;
      intArray1[7] = 5000;
      visualListModel0.rotateClockwiseElements(intArray1);
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel0.setData(vector0);
      // Undeclared exception!
      try { 
        visualListModel0.setData((VisualPageListItem[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.555632017870312
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      VisualPageListItem visualPageListItem0 = null;
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      ArrayDeque<VisualPageListItem> arrayDeque0 = new ArrayDeque<VisualPageListItem>();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) arrayDeque0);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) arrayDeque0);
      visualListModel0.removeElements(intArray0, false);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.setSize(71);
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.removeElements((-5101), 763, false);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      int[] intArray1 = new int[2];
      intArray1[0] = 763;
      intArray1[1] = 1214;
      try { 
        visualListModel0.rotateClockwiseElements(intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 763
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.5407108604577933
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel0.appendAllElements(vector0);
      int[] intArray0 = new int[1];
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) vector0);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) null);
      vector0.clone();
      vector0.setSize(71);
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      visualListModel0.undeleteElements(intArray0);
      vector0.add((VisualPageListItem) null);
      visualListModel0.setData(vector0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.addElementAt((VisualPageListItem) null, 9970);
      visualListModel0.updateElementAt(9970, (VisualPageListItem) null);
      visualListModel0.updateElementAt(9970, (VisualPageListItem) null);
      assertEquals(72, visualListModel0.getSize());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.5693997521856344
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      vector0.add((VisualPageListItem) null);
      VisualListModel visualListModel1 = new VisualListModel();
      int[] intArray0 = new int[2];
      intArray0[1] = 379;
      visualListModel1.rotateAnticlockwiseElements(intArray0);
      vector0.removeAll(stack0);
      vector0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
      visualListModel1.moveDownIndexes(intArray0);
      visualListModel1.moveDownIndexes(intArray0);
      visualListModel1.elementChanged((VisualPageListItem) null);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[7];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[5] = null;
      visualPageListItemArray0[6] = null;
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel1.getValidElements();
      try { 
        visualListModel0.reverseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 379
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.7512588085724774
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      linkedList0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedList0);
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) linkedList0);
      linkedList0.add((VisualPageListItem) null);
      int[] intArray0 = new int[1];
      intArray0[0] = 0;
      visualListModel0.removeElements(intArray0, true);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.moveDownIndexes(intArray0);
      visualListModel1.undeleteElements(intArray0);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.removeElements(intArray0, false);
      VisualListModel visualListModel3 = new VisualListModel();
      visualListModel1.getElementAt(9999);
      int[] intArray1 = new int[4];
      intArray1[1] = 9999;
      intArray1[2] = 9999;
      intArray1[3] = 0;
      visualListModel0.removeElements(intArray1, true);
      visualListModel1.undeleteElements(intArray1);
      visualListModel0.moveDownIndex(0);
      visualListModel2.addAllElements(0, (Collection<VisualPageListItem>) linkedList0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      visualPageListItemArray0[0] = null;
      visualListModel2.setData(visualPageListItemArray0);
      // Undeclared exception!
      try { 
        visualListModel2.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.786724494755577
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      int[] intArray0 = new int[6];
      intArray0[1] = 111;
      visualListModel0.getValidElements();
      intArray0[2] = 65535;
      vector0.spliterator();
      intArray0[3] = (-870);
      Object[] objectArray0 = new Object[0];
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      visualListModel0.getElements();
      visualListModel0.updateElementAt(102, (VisualPageListItem) null);
      visualListModel0.updateElementAt(111, (VisualPageListItem) null);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel0.appendAllElements(vector0);
      int[] intArray0 = new int[1];
      vector0.add((VisualPageListItem) null);
      vector0.add((VisualPageListItem) null);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      vector0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(vector0);
      visualListModel0.setData(vector0);
      // Undeclared exception!
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.2679499454185312
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      int[] intArray0 = new int[1];
      intArray0[0] = 14;
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      vector0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) null);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel0.moveDownIndexes(intArray0);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel0.moveDownIndexes(intArray0);
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 14
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      vector0.add((VisualPageListItem) null);
      vector0.parallelStream();
      Vector<VisualPageListItem> vector1 = visualListModel0.data;
      vector1.add((VisualPageListItem) null);
      // Undeclared exception!
      try { 
        visualListModel0.addAllElements((Collection<VisualPageListItem>) vector0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Vector$Itr", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.1341286000959614
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.reverseElements(intArray0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      int[] intArray1 = null;
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      stack0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_COLOR_RENDERING;
      RenderingHints renderingHints0 = new RenderingHints(sunHints_Key0, (Object) null);
      RescaleOp rescaleOp0 = new RescaleOp((-431.1051F), 1518.0F, renderingHints0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.getElements();
      // Undeclared exception!
      try { 
        visualListModel1.moveDownIndexes((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.data = (Vector<VisualPageListItem>) stack0;
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      VisualPageListItem visualPageListItem0 = null;
      visualListModel0.moveUpIndex((-1029));
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.moveUpIndexes(intArray0);
      HashMap<RenderingHints.Key, DefaultTableModel> hashMap0 = new HashMap<RenderingHints.Key, DefaultTableModel>();
      HashMap<RenderingHints.Key, Integer> hashMap1 = new HashMap<RenderingHints.Key, Integer>();
      HashMap<RenderingHints.Key, Object> hashMap2 = new HashMap<RenderingHints.Key, Object>();
      RenderingHints renderingHints0 = new RenderingHints(hashMap0);
      visualListModel0.reverseElements(intArray0);
      int int0 = (-974);
      short[][] shortArray0 = new short[0][3];
      ShortLookupTable shortLookupTable0 = null;
      try {
        shortLookupTable0 = new ShortLookupTable((-974), shortArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Offset must be greater than 0
         //
         verifyException("java.awt.image.LookupTable", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.469770230921831
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      int[] intArray0 = new int[1];
      vector0.add((VisualPageListItem) null);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      vector0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) vector0);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_COLOR_RENDERING;
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.removeElements(671, 671, false);
      visualListModel1.setData(vector0);
      VisualListModel visualListModel2 = new VisualListModel();
      int[] intArray1 = new int[4];
      intArray1[0] = 0;
      intArray1[1] = 9999;
      intArray1[2] = 671;
      intArray1[3] = 0;
      visualListModel1.rotateClockwiseElements(intArray1);
      // Undeclared exception!
      try { 
        visualListModel1.appendAllElements(vector0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Vector$Itr", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.7214787039105834
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      linkedList0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedList0);
      visualListModel0.data = null;
      int int0 = 4613;
      visualListModel0.getValidElements();
      // Undeclared exception!
      try { 
        visualListModel0.moveUpIndex(4613);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.7777850025721307
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      linkedList0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedList0);
      linkedList0.add((VisualPageListItem) null);
      int[] intArray0 = new int[1];
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedList0);
      visualListModel0.removeElements(intArray0, true);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.moveDownIndexes(intArray0);
      visualListModel1.undeleteElements(intArray0);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.removeElements(intArray0, false);
      VisualListModel visualListModel3 = new VisualListModel();
      int int0 = 9999;
      visualListModel1.getElementAt(9999);
      int[] intArray1 = new int[4];
      intArray1[0] = 9999;
      intArray1[1] = 9999;
      intArray1[2] = 9999;
      visualListModel0.removeElements(intArray1, true);
      visualListModel1.undeleteElements(intArray1);
      visualListModel0.moveDownIndex(0);
      visualListModel2.addAllElements(9999, (Collection<VisualPageListItem>) linkedList0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      visualPageListItemArray0[0] = null;
      visualListModel2.setData(visualPageListItemArray0);
      // Undeclared exception!
      try { 
        visualListModel2.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.6843792535317563
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      linkedList0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedList0);
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) linkedList0);
      linkedList0.add((VisualPageListItem) null);
      int[] intArray0 = new int[1];
      intArray0[0] = 0;
      visualListModel0.removeElements(intArray0, true);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.moveDownIndexes(intArray0);
      visualListModel1.undeleteElements(intArray0);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.removeElements(intArray0, false);
      VisualListModel visualListModel3 = new VisualListModel();
      visualListModel1.getElementAt(9999);
      int[] intArray1 = new int[4];
      intArray1[0] = 9999;
      visualListModel1.moveDownIndex(1);
      intArray1[1] = 9999;
      intArray1[2] = 9999;
      intArray1[3] = 0;
      visualListModel0.removeElements(intArray1, true);
      visualListModel1.undeleteElements(intArray1);
      visualListModel0.moveDownIndex(0);
      visualListModel0.reverseElements(intArray0);
      VisualListModel visualListModel4 = new VisualListModel();
      visualListModel4.addElementAt((VisualPageListItem) null, 9999);
      visualListModel0.updateElementAt(1, (VisualPageListItem) null);
      visualListModel3.updateElementAt(14, (VisualPageListItem) null);
      assertNotSame(visualListModel3, visualListModel4);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.45126227595883
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel0.appendAllElements(vector0);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) vector0);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) null);
      vector0.addElement((VisualPageListItem) null);
      vector0.setSize(71);
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      visualListModel0.setData(vector0);
      visualListModel0.addElementAt((VisualPageListItem) null, (-1071));
      visualListModel0.updateElementAt((-1071), (VisualPageListItem) null);
      visualListModel0.updateElementAt(9999, (VisualPageListItem) null);
      visualListModel0.getElements();
      assertEquals(71, visualListModel0.getSize());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.undeleteElements(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.rotateClockwiseElements((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = new Stack<VisualPageListItem>();
      visualListModel0.appendAllElements(vector0);
      int[] intArray0 = new int[5];
      VisualPageListItem visualPageListItem0 = null;
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) vector0);
      vector0.addElement((VisualPageListItem) null);
      vector0.setSize(9999);
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      visualListModel0.undeleteElements(intArray0);
      int int0 = 9999;
      visualListModel0.setData(vector0);
      // Undeclared exception!
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.92967840055467
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      int[] intArray0 = new int[1];
      VisualPageListItem visualPageListItem0 = null;
      vector0.add((VisualPageListItem) null);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.subList((-3481), (-3481), true);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) vector0);
      vector0.add((VisualPageListItem) null);
      vector0.add((VisualPageListItem) null);
      visualListModel0.removeElements(intArray0, true);
      boolean boolean0 = true;
      vector0.addElement((VisualPageListItem) null);
      // Undeclared exception!
      try { 
        vector0.setSize((-3481));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.9289738521096165
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      vector0.add((VisualPageListItem) null);
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.3623160600127653
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      int[] intArray0 = new int[1];
      vector0.add((VisualPageListItem) null);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      vector0.removeAll(stack0);
      vector0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) vector0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[7];
      visualPageListItemArray0[0] = null;
      visualListModel0.elementChanged((VisualPageListItem) null);
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualListModel0.setData(visualPageListItemArray0);
      // Undeclared exception!
      try { 
        visualListModel0.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.502808529414704
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      int int0 = 0;
      VisualListModel visualListModel1 = new VisualListModel();
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.moveDownIndexes(intArray0);
      visualListModel1.moveDownIndexes(intArray0);
      visualListModel2.rotateClockwiseElements(intArray0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[0];
      visualListModel2.setData(visualPageListItemArray0);
      visualListModel1.reverseElements(intArray0);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_ANTIALIASING;
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>((Comparator<? super VisualPageListItem>) null);
      visualListModel2.addAllElements(0, (Collection<VisualPageListItem>) priorityQueue0);
      Integer integer0 = new Integer((-2112));
      RenderingHints renderingHints0 = new RenderingHints(sunHints_Key0, visualListModel1);
      Integer integer1 = IIPResolutionDescriptor.MAX_RESOLUTION;
      Integer.remainderUnsigned((-2112), (-2112));
      RenderingHints renderingHints1 = new RenderingHints(sunHints_Key0, integer1);
      // Undeclared exception!
      try { 
        AndDescriptor.create((RenderedImage) null, (RenderedImage) null, renderingHints1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The input argument(s) may not be null.
         //
         verifyException("javax.media.jai.ParameterBlockJAI", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      linkedList0.add((VisualPageListItem) null);
      visualListModel0.addElement((VisualPageListItem) null);
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem(2786, "", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.0572842263623
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel0.appendAllElements(vector0);
      vector0.add((VisualPageListItem) null);
      vector0.add((VisualPageListItem) null);
      vector0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) vector0);
      vector0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) null);
      vector0.setSize(71);
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      visualListModel0.setData(vector0);
      visualListModel0.appendAllElements((Collection<VisualPageListItem>) null);
      int int0 = visualListModel0.getSize();
      assertEquals(71, int0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.612726894621007
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      linkedList0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedList0);
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) linkedList0);
      visualListModel0.data = null;
      int int0 = 2786;
      String string0 = "";
      String string1 = "";
      // Undeclared exception!
      try { 
        visualListModel0.addElement((VisualPageListItem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.971651851606482
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      int[] intArray0 = new int[2];
      vector0.add((VisualPageListItem) null);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      vector0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) vector0);
      visualListModel0.moveDownIndexes(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.9160175838494788
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      int[] intArray0 = new int[1];
      vector0.add((VisualPageListItem) null);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      vector0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) vector0);
      visualListModel0.moveDownIndexes(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getValidElements();
      visualListModel0.prependAllElements((Collection<VisualPageListItem>) null);
      visualListModel0.clearData();
      short[] shortArray0 = new short[8];
      visualListModel0.addAllElements((-312), (Collection<VisualPageListItem>) null);
      shortArray0[0] = (short)1246;
      int[] intArray0 = null;
      // Undeclared exception!
      try { 
        visualListModel0.moveUpIndexes((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.4947357946173248
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[5];
      visualListModel0.removeElements(intArray0, true);
      visualListModel0.moveDownIndexes(intArray0);
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = (-5124);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.subList(0, 0, false);
      intArray0[4] = (-5124);
      visualListModel0.removeElements(intArray0, true);
      int[] intArray1 = new int[2];
      intArray1[0] = 0;
      intArray1[1] = 0;
      visualListModel0.removeElements(intArray1, true);
      visualListModel0.moveDownIndexes(intArray1);
      visualListModel0.moveDownIndexes(intArray1);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.removeElements(intArray1, true);
      visualListModel0.removeElements(intArray1, false);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.getElementAt(0);
      visualListModel1.removeElements(intArray0, true);
      visualListModel1.undeleteElements(intArray1);
      visualListModel1.moveDownIndex(0);
      visualListModel1.undeleteElements(intArray0);
      visualListModel0.moveUpIndex((-1));
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveUpIndex(0);
      visualListModel0.moveDownIndex(0);
      int[] intArray0 = new int[6];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 0;
      intArray0[4] = 0;
      intArray0[5] = 0;
      visualListModel0.reverseElements(intArray0);
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem(0, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = (-4);
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      hashSet0.forEach(consumer0);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) hashSet0);
      visualListModel0.moveUpIndex((-4));
      // Undeclared exception!
      try { 
        visualListModel0.reverseElements((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.7389896102893403
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 3;
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      VisualPageListItem visualPageListItem0 = null;
      linkedList0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedList0);
      visualListModel0.addAllElements(3, (Collection<VisualPageListItem>) linkedList0);
      boolean boolean0 = true;
      linkedList0.add((VisualPageListItem) null);
      int[] intArray0 = new int[1];
      intArray0[0] = 3;
      try { 
        visualListModel0.removeElements(intArray0, true);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // toIndex = 4
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.4665302366210544
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      linkedList0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedList0);
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) linkedList0);
      linkedList0.add((VisualPageListItem) null);
      int[] intArray0 = new int[1];
      intArray0[0] = 0;
      visualListModel0.removeElements(intArray0, true);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.moveDownIndexes(intArray0);
      visualListModel1.undeleteElements(intArray0);
      HashMap<RenderingHints.Key, DefaultEditorKit.InsertTabAction> hashMap0 = new HashMap<RenderingHints.Key, DefaultEditorKit.InsertTabAction>();
      BiConsumer<Object, Object> biConsumer0 = (BiConsumer<Object, Object>) mock(BiConsumer.class, new ViolatedAssumptionAnswer());
      hashMap0.forEach(biConsumer0);
      RenderingHints renderingHints0 = new RenderingHints(hashMap0);
      RescaleOp rescaleOp0 = new RescaleOp(0, 0.0F, renderingHints0);
      VisualListModel visualListModel2 = new VisualListModel();
      VisualListModel visualListModel3 = new VisualListModel();
      visualListModel3.removeElements(0, 0, false);
      VisualListModel visualListModel4 = new VisualListModel();
      visualListModel4.getListDataListeners();
      visualListModel3.rotateClockwiseElements(intArray0);
      assertArrayEquals(new int[] {0}, intArray0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.665856580132754
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[5];
      visualListModel0.removeElements(intArray0, true);
      visualListModel0.moveDownIndexes(intArray0);
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = (-5124);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.subList(0, 0, true);
      intArray0[4] = (-5124);
      visualListModel0.removeElements(intArray0, true);
      int[] intArray1 = new int[2];
      intArray1[0] = 0;
      visualListModel0.moveDownIndexes(intArray1);
      visualListModel0.moveDownIndexes(intArray1);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.removeElements(intArray1, true);
      visualListModel0.removeElements(intArray1, false);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.getElementAt(0);
      visualListModel1.removeElements(intArray0, true);
      visualListModel1.undeleteElements(intArray1);
      visualListModel1.moveDownIndex(0);
      visualListModel1.undeleteElements(intArray0);
      visualListModel0.moveUpIndex((-1));
      visualListModel0.undeleteElements(intArray1);
      visualListModel1.rotateClockwiseElements(intArray0);
      visualListModel1.moveUpIndexes(intArray1);
      assertEquals(0, visualListModel1.getSize());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      int[] intArray1 = new int[5];
      intArray1[1] = (-2125);
      intArray1[2] = (-1631);
      intArray1[2] = 1;
      intArray1[4] = 1;
      visualListModel0.moveUpIndexes(intArray1);
      visualListModel0.removeElements(intArray0, true);
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) 1;
      Object object0 = new Object();
      objectArray0[1] = object0;
      objectArray0[2] = (Object) visualListModel0;
      objectArray0[3] = (Object) visualListModel0;
      objectArray0[4] = (Object) (-2125);
      objectArray0[5] = (Object) visualListModel0;
      objectArray0[6] = (Object) 1;
      objectArray0[7] = (Object) 1;
      JComboBox<Object> jComboBox0 = new JComboBox<Object>(objectArray0);
      visualListModel0.addListDataListener(jComboBox0);
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      Object[] objectArray1 = new Object[0];
      JComboBox<Object> jComboBox1 = new JComboBox<Object>(objectArray1);
      visualListModel0.addListDataListener(jComboBox1);
      BufferedImage bufferedImage0 = null;
      try {
        bufferedImage0 = new BufferedImage(1, (-1650), (-841));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown image type -841
         //
         verifyException("java.awt.image.BufferedImage", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.3842713196839629
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[7];
      intArray0[0] = (-261);
      intArray0[1] = 0;
      int int0 = (-5124);
      visualListModel0.undeleteElements(intArray0);
      boolean boolean0 = true;
      int int1 = (-2008);
      // Undeclared exception!
      try { 
        visualListModel0.subList(0, (-2008), true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(0) > toIndex(-2008)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.7962284387340903
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[6];
      int int0 = 1;
      intArray0[0] = 1;
      int int1 = 1;
      intArray0[1] = 1;
      int int2 = 2284;
      intArray0[2] = 2284;
      intArray0[3] = (-1126);
      intArray0[4] = (-5101);
      intArray0[5] = 1;
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.moveUpIndex(1);
      // Undeclared exception!
      try { 
        visualListModel0.getElementAt((-4363));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -4363
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Collection<VisualPageListItem> collection0 = null;
      visualListModel0.prependAllElements((Collection<VisualPageListItem>) null);
      visualListModel0.clearData();
      short[] shortArray0 = new short[8];
      shortArray0[0] = (short)1246;
      shortArray0[1] = (short)1105;
      shortArray0[2] = (short) (-358);
      shortArray0[3] = (short) (-2339);
      shortArray0[4] = (short) (-2339);
      shortArray0[5] = (short)3257;
      shortArray0[7] = (short) (-2553);
      float[] floatArray0 = new float[5];
      floatArray0[0] = (float) (short) (-358);
      floatArray0[2] = (float) (short)1105;
      floatArray0[3] = (float) (short) (-2339);
      floatArray0[4] = (float) (short)3257;
      HashMap<RenderingHints.Key, DefaultTableModel> hashMap0 = new HashMap<RenderingHints.Key, DefaultTableModel>();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      hashMap0.put(sunHints_Key0, defaultTableModel0);
      Stack<String> stack0 = new Stack<String>();
      DefaultTableModel defaultTableModel1 = new DefaultTableModel(stack0, (short)1246);
      hashMap0.put(sunHints_Key0, defaultTableModel1);
      RenderingHints renderingHints0 = new RenderingHints(hashMap0);
      RescaleOp rescaleOp0 = new RescaleOp(floatArray0, floatArray0, renderingHints0);
      visualListModel0.removeElements((int) (short) (-358), Integer.MIN_VALUE, false);
      BigInteger bigInteger0 = null;
      try {
        bigInteger0 = new BigInteger((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.math.BigInteger", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.subList((-1754), 6, false);
      visualListModel0.addAllElements((-1111), (Collection<VisualPageListItem>) null);
      visualListModel0.moveDownIndex((-1));
      visualListModel0.moveUpIndex(4);
      int[] intArray0 = new int[0];
      visualListModel0.rotateClockwiseElements(intArray0);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.5513433025795
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      int[] intArray0 = new int[6];
      intArray0[4] = (-1958);
      visualListModel0.rotateClockwiseElements(intArray0);
      int int0 = 111;
      intArray0[1] = 111;
      visualListModel0.getValidElements();
      intArray0[2] = 65535;
      vector0.spliterator();
      int int1 = (-870);
      intArray0[3] = (-870);
      intArray0[4] = 1079;
      intArray0[5] = 549;
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.appendAllElements(vector0);
      int[] intArray1 = new int[1];
      vector0.add((VisualPageListItem) null);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      vector0.add((VisualPageListItem) null);
      visualListModel0.rotateAnticlockwiseElements(intArray1);
      vector0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) vector0);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) null);
      visualListModel0.moveUpIndexes(intArray1);
      // Undeclared exception!
      try { 
        visualListModel0.removeElements(intArray1, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = (-1749);
      int int1 = (-2587);
      int[] intArray0 = new int[9];
      intArray0[0] = (-2587);
      intArray0[1] = (-2587);
      intArray0[2] = (-1749);
      intArray0[3] = (-1749);
      intArray0[4] = (-2587);
      intArray0[5] = (-2587);
      visualListModel0.getListDataListeners();
      intArray0[6] = (-1749);
      intArray0[7] = (-1749);
      visualListModel0.moveUpIndexes(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.setData((Vector<VisualPageListItem>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) null);
      VisualPageListItem[] visualPageListItemArray0 = visualListModel0.getElements();
      assertEquals(0, visualPageListItemArray0.length);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.data = vector0;
      int int0 = visualListModel0.getSize();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveUpIndex(0);
      visualListModel0.moveDownIndex((-71));
      int[] intArray0 = new int[6];
      intArray0[0] = (-71);
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = (-71);
      intArray0[4] = (-71);
      intArray0[5] = 0;
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.reverseElements(intArray0);
      String string0 = null;
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem(0, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.521586834652811
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel0.data = vector0;
      SunHints.LCDContrastKey sunHints_LCDContrastKey0 = (SunHints.LCDContrastKey)RenderingHints.KEY_TEXT_LCD_CONTRAST;
      DefaultEditorKit.InsertTabAction defaultEditorKit_InsertTabAction0 = new DefaultEditorKit.InsertTabAction();
      RenderingHints renderingHints0 = new RenderingHints(sunHints_LCDContrastKey0, sunHints_LCDContrastKey0);
      RescaleOp rescaleOp0 = new RescaleOp((-1014), (-218.7F), renderingHints0);
      VisualListModel visualListModel1 = new VisualListModel();
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.moveDownIndexes(intArray0);
      VisualListModel visualListModel3 = new VisualListModel();
      visualListModel3.undeleteElements(intArray0);
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        visualListModel3.undeleteElements((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.786724494755577
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      SunHints.LCDContrastKey sunHints_LCDContrastKey0 = (SunHints.LCDContrastKey)RenderingHints.KEY_TEXT_LCD_CONTRAST;
      DefaultEditorKit.InsertTabAction defaultEditorKit_InsertTabAction0 = new DefaultEditorKit.InsertTabAction();
      DefaultEditorKit.InsertTabAction defaultEditorKit_InsertTabAction1 = new DefaultEditorKit.InsertTabAction();
      RenderingHints renderingHints0 = new RenderingHints(sunHints_LCDContrastKey0, defaultEditorKit_InsertTabAction1);
      visualListModel0.removeElements(9999, 9999, true);
      RescaleOp rescaleOp0 = new RescaleOp((-1.0F), 1815.442F, renderingHints0);
      VisualListModel visualListModel1 = new VisualListModel();
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.6999267696231979
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      linkedList0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedList0);
      visualListModel0.addAllElements(10, (Collection<VisualPageListItem>) linkedList0);
      visualListModel0.data = null;
      int int0 = 2786;
      String string0 = "";
      String string1 = "";
      // Undeclared exception!
      try { 
        visualListModel0.addElement((VisualPageListItem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      linkedList0.add((VisualPageListItem) null);
      Vector<VisualPageListItem> vector0 = null;
      visualListModel0.data = null;
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt((-14), true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.getElements();
      Object object0 = visualListModel1.getElementAt(932);
      assertNull(object0);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[8];
      int[] intArray1 = new int[7];
      intArray1[0] = 1;
      intArray1[1] = 225;
      intArray1[2] = 1839;
      intArray1[3] = 8;
      intArray1[4] = 8;
      intArray1[5] = (-5101);
      intArray1[6] = 91;
      visualListModel0.rotateClockwiseElements(intArray1);
      intArray0[0] = 1839;
      intArray0[1] = 1620;
      intArray0[2] = (-1);
      intArray0[3] = (-1);
      intArray0[4] = 943;
      visualListModel0.subList((-3217), (-1));
      intArray0[5] = 46;
      intArray0[6] = (-380);
      Class<Integer> class0 = Integer.class;
      // Undeclared exception!
      try { 
        visualListModel0.getListeners((Class) class0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Ljava.lang.Integer; cannot be cast to [Ljava.util.EventListener;
         //
         verifyException("javax.swing.event.EventListenerList", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.702783948524193
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveUpIndex(0);
      visualListModel0.removeElements(11, 0, true);
      visualListModel0.getListDataListeners();
      visualListModel0.subList(0, 0);
      int[] intArray0 = new int[7];
      intArray0[0] = 1392;
      intArray0[1] = 0;
      intArray0[2] = 11;
      intArray0[3] = 11;
      intArray0[4] = 11;
      intArray0[5] = 1392;
      visualListModel0.getElements();
      visualListModel0.removeElements(intArray0, false);
      visualListModel0.removeElements(intArray0, false);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.removeElements(intArray0, false);
      visualListModel0.getElementAt(0);
      visualListModel0.undeleteElements(intArray0);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = (-5101);
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt((-5101), true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -5101
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 2019;
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(2019, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 2019
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.3958417125578464
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[5];
      visualListModel0.removeElements(intArray0, true);
      visualListModel0.getListDataListeners();
      visualListModel0.moveDownIndexes(intArray0);
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = (-5124);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.subList(0, 0, true);
      intArray0[4] = (-5124);
      visualListModel0.removeElements(intArray0, true);
      int[] intArray1 = new int[2];
      intArray1[0] = 0;
      intArray1[1] = 0;
      visualListModel0.removeElements(intArray1, true);
      visualListModel0.moveDownIndexes(intArray1);
      visualListModel0.moveDownIndexes(intArray1);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.removeElements(intArray1, true);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.removeElements(intArray1, false);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.getElementAt(0);
      visualListModel1.removeElements(intArray0, true);
      visualListModel1.undeleteElements(intArray1);
      visualListModel1.moveDownIndex(0);
      visualListModel1.undeleteElements(intArray0);
      Collection<VisualPageListItem> collection0 = visualListModel0.subList(0, 34, false);
      assertNull(collection0);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.7911998103932196
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.subList(4, 4);
      int[] intArray0 = new int[1];
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      HashMap<RenderingHints.Key, Object> hashMap0 = new HashMap<RenderingHints.Key, Object>();
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      RenderingHints renderingHints0 = new RenderingHints(hashMap0);
      SeekableStream seekableStream0 = mock(SeekableStream.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(seekableStream0).canSeekBackwards();
      doReturn(0, 0, 0, 0).when(seekableStream0).read();
      RenderedOp renderedOp0 = FPXDescriptor.create(seekableStream0, (FPXDecodeParam) null, renderingHints0);
      // Undeclared exception!
      try { 
        PhaseDescriptor.create(renderedOp0, renderingHints0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // - Unable to render RenderedOp for this operation.
         //
         verifyException("javax.media.jai.RenderedOp", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.8063294488351005
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.moveUpIndexes(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel0.moveDownIndex(2052);
      visualListModel0.moveUpIndex(2019);
      ShortLookupTable shortLookupTable0 = null;
      try {
        shortLookupTable0 = new ShortLookupTable(4, (short[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.image.ShortLookupTable", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      SunHints.LCDContrastKey sunHints_LCDContrastKey0 = (SunHints.LCDContrastKey)RenderingHints.KEY_TEXT_LCD_CONTRAST;
      DefaultEditorKit.InsertTabAction defaultEditorKit_InsertTabAction0 = new DefaultEditorKit.InsertTabAction();
      DefaultEditorKit.InsertTabAction defaultEditorKit_InsertTabAction1 = new DefaultEditorKit.InsertTabAction();
      RenderingHints renderingHints0 = new RenderingHints(sunHints_LCDContrastKey0, defaultEditorKit_InsertTabAction1);
      RescaleOp rescaleOp0 = new RescaleOp((-1.0F), 1815.442F, renderingHints0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.moveDownIndexes(intArray0);
      visualListModel0.undeleteElements(intArray0);
      Object object0 = new Object();
      visualListModel0.undeleteElements(intArray0);
      Collection<VisualPageListItem> collection0 = visualListModel1.subList((-1602), 0, true);
      assertNull(collection0);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.subList(13, (-292));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(13) > toIndex(-292)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.0186515595961074
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[4];
      intArray0[0] = (-1487);
      intArray0[1] = (-822);
      visualListModel0.rotateClockwiseElements(intArray0);
      intArray0[2] = 1214;
      visualListModel0.reverseElements(intArray0);
      intArray0[3] = Integer.MIN_VALUE;
      visualListModel0.reverseElements(intArray0);
      int[] intArray1 = new int[5];
      intArray1[0] = Integer.MIN_VALUE;
      intArray1[1] = Integer.MIN_VALUE;
      intArray1[2] = (-822);
      intArray1[3] = (-256);
      intArray1[4] = (-822);
      visualListModel0.rotateAnticlockwiseElements(intArray1);
      visualListModel0.removeElements(0, (-822), false);
      int int0 = (-467);
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem(3851, "w+kIPCbbGo14|c", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.9417429777213613
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      SunHints.LCDContrastKey sunHints_LCDContrastKey0 = (SunHints.LCDContrastKey)RenderingHints.KEY_TEXT_LCD_CONTRAST;
      DefaultEditorKit.InsertTabAction defaultEditorKit_InsertTabAction0 = new DefaultEditorKit.InsertTabAction();
      DefaultEditorKit.InsertTabAction defaultEditorKit_InsertTabAction1 = new DefaultEditorKit.InsertTabAction();
      RenderingHints renderingHints0 = new RenderingHints(sunHints_LCDContrastKey0, defaultEditorKit_InsertTabAction1);
      RescaleOp rescaleOp0 = new RescaleOp((-1.0F), 1815.442F, renderingHints0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel0.removeElements(318, (-43), false);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel0.rotateClockwiseElements(intArray0);
      assertEquals(0, intArray0.length);
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      linkedList0.add((VisualPageListItem) null);
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) vector0);
      visualListModel0.addAllElements((-918), (Collection<VisualPageListItem>) vector0);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_ANTIALIASING;
      DefaultEditorKit.InsertTabAction defaultEditorKit_InsertTabAction0 = new DefaultEditorKit.InsertTabAction();
      RenderingHints renderingHints0 = new RenderingHints(sunHints_Key0, defaultEditorKit_InsertTabAction0);
      TiledImage tiledImage0 = null;
      try {
        tiledImage0 = new TiledImage((RenderedImage) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.media.jai.TiledImage", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.elementsChanged();
      byte[] byteArray0 = new byte[5];
      byte byte0 = (byte)1;
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte) (-12);
      byte byte1 = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)1;
      byteArray0[4] = (byte) (-128);
      byte[] byteArray1 = new byte[0];
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel(0, 0, byteArray0, byteArray0, byteArray1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Number of pixel bits must be > 0
         //
         verifyException("java.awt.image.ColorModel", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      HashMap<RenderingHints.Key, Integer> hashMap0 = new HashMap<RenderingHints.Key, Integer>();
      hashMap0.values();
      RenderingHints renderingHints0 = new RenderingHints(hashMap0);
      visualListModel0.prependAllElements(linkedHashSet0);
      assertEquals(0, linkedHashSet0.size());
  }
}
