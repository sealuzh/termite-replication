/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 15:55:22 GMT 2019
 */

package net.sourceforge.squirrel_sql.plugins.dbcopy.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.gargoylesoftware.base.resource.jdbc.CallableStatementWrapper;
import com.gargoylesoftware.base.resource.jdbc.ConnectionWrapper;
import java.awt.AWTEventMulticaster;
import java.awt.event.InputMethodListener;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeListenerProxy;
import java.io.IOException;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.DriverPropertyInfo;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.Collection;
import java.util.LinkedList;
import java.util.List;
import java.util.Stack;
import java.util.Vector;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.plaf.metal.MetalComboBoxUI;
import javax.swing.tree.DefaultTreeCellRenderer;
import net.sourceforge.squirrel_sql.client.IApplication;
import net.sourceforge.squirrel_sql.client.gui.db.SQLAlias;
import net.sourceforge.squirrel_sql.client.session.ISession;
import net.sourceforge.squirrel_sql.client.session.schemainfo.SchemaInfo;
import net.sourceforge.squirrel_sql.client.session.schemainfo.SchemaInfoUpdateListener;
import net.sourceforge.squirrel_sql.client.util.ApplicationFileWrappersImpl;
import net.sourceforge.squirrel_sql.fw.id.UidIdentifier;
import net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo;
import net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectType;
import net.sourceforge.squirrel_sql.fw.sql.ForeignKeyInfo;
import net.sourceforge.squirrel_sql.fw.sql.IDatabaseObjectInfo;
import net.sourceforge.squirrel_sql.fw.sql.ISQLConnection;
import net.sourceforge.squirrel_sql.fw.sql.ITableInfo;
import net.sourceforge.squirrel_sql.fw.sql.ProcedureInfo;
import net.sourceforge.squirrel_sql.fw.sql.SQLDatabaseMetaData;
import net.sourceforge.squirrel_sql.fw.sql.SQLDriver;
import net.sourceforge.squirrel_sql.fw.sql.SQLDriverPropertyCollection;
import net.sourceforge.squirrel_sql.fw.sql.TableColumnInfo;
import net.sourceforge.squirrel_sql.plugins.dbcopy.DBCopyPlugin;
import net.sourceforge.squirrel_sql.plugins.dbcopy.SessionInfoProvider;
import net.sourceforge.squirrel_sql.plugins.dbcopy.prefs.DBCopyPreferenceBean;
import net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DBUtil_ESTest extends DBUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.5357939587515939
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 2005, 2396, 2604, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MetalComboBoxUI metalComboBoxUI0 = new MetalComboBoxUI();
      PropertyChangeListener propertyChangeListener0 = metalComboBoxUI0.createPropertyChangeListener();
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("~Ce~=?yOB;", propertyChangeListener0);
      DefaultTreeCellRenderer defaultTreeCellRenderer1 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer1.addPropertyChangeListener((String) null, propertyChangeListener0);
      DriverPropertyInfo driverPropertyInfo0 = new DriverPropertyInfo("~Ce~=?yOB;", "");
      DriverPropertyInfo driverPropertyInfo1 = new DriverPropertyInfo("", "'DlK?ARkP%7q3x/y");
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      sQLDriverPropertyCollection0.applyDriverPropertynfo((DriverPropertyInfo[]) null);
      SQLDriver sQLDriver0 = new SQLDriver();
      boolean boolean0 = DBUtil.typesAreEquivalent(16, 573);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)4;
      byteArray0[1] = (byte) (-101);
      byteArray0[2] = (byte) (-93);
      DriverPropertyInfo driverPropertyInfo0 = new DriverPropertyInfo("06!1IOBB@bw\"e", "");
      DriverPropertyInfo driverPropertyInfo1 = new DriverPropertyInfo("", "'DlK?ARkP%7q3x/y");
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      sQLDriverPropertyCollection0.clear();
      sQLDriverPropertyCollection0.applyDriverPropertynfo((DriverPropertyInfo[]) null);
      sQLDriverPropertyCollection0.applyDriverPropertynfo((DriverPropertyInfo[]) null);
      SQLDriver sQLDriver0 = new SQLDriver();
      boolean boolean0 = DBUtil.typesAreEquivalent(16, (byte) (-101));
      assertFalse(boolean0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ISQLConnection iSQLConnection0 = null;
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      String string0 = "net.sourceforge.squirrel_sql.client.ApplicationArguments$IOptions";
      dBCopyPlugin0.getPluginJarFilePath();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "net.sourceforge.squirrel_sql.client.ApplicationArguments$IOptions", "net.sourceforge.squirrel_sql.client.ApplicationArguments$IOptions");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "net.sourceforge.squirrel_sql.client.ApplicationArguments$IOptions";
      stringArray0[1] = "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy";
      stringArray0[2] = "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy";
      // Undeclared exception!
      try { 
        DBUtil.getColumnTypes((ISQLConnection) null, (ITableInfo) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, (String) null, "|vel5lc+mf24", "8f84)oc*Fb-", 300, "YzpE/Dj\"V>a^8", 6, 6, 6, 6, "\"E&G", "8f84)oc*Fb-", 6, 300, "|vel5lc+mf24");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      DBUtil.replaceDistinctDataType((-319), tableColumnInfo0, (ISession) null);
      // Undeclared exception!
      try { 
        DBUtil.replaceOtherDataType((TableColumnInfo) null, (ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.8505612088663046
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      DefaultTreeCellRenderer defaultTreeCellRenderer1 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer1.hasFocus();
      DBUtil.typesAreEquivalent((-9), 573);
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[0];
      List<ITableInfo> list0 = DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
      assertEquals(0, list0.size());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DBUtil.typesAreEquivalent(2, 70);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.setPasteMenuEnabled(false);
      dBCopyPlugin0.getDestSession();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      CallableStatement callableStatement0 = null;
      CallableStatementWrapper callableStatementWrapper0 = null;
      try {
        callableStatementWrapper0 = new CallableStatementWrapper((CallableStatement) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // statement
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.StatementWrapper", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MetalComboBoxUI metalComboBoxUI0 = new MetalComboBoxUI();
      PropertyChangeListener propertyChangeListener0 = metalComboBoxUI0.createPropertyChangeListener();
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("~Ce~=?yOB;", propertyChangeListener0);
      DefaultTreeCellRenderer defaultTreeCellRenderer1 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer1.addPropertyChangeListener((String) null, propertyChangeListener0);
      DriverPropertyInfo driverPropertyInfo0 = new DriverPropertyInfo("~Ce~=?yOB;", "");
      DriverPropertyInfo driverPropertyInfo1 = new DriverPropertyInfo("", "'DlK?ARkP%7q3x/y");
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      sQLDriverPropertyCollection0.applyDriverPropertynfo((DriverPropertyInfo[]) null);
      SQLDriver sQLDriver0 = new SQLDriver();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("YzpE/Dj\"V>a^8", "~Ce~=?yOB;", "", "", 16, "!(dp~\"K=x\"HU,+-Uj", 3, (-22), 506, (-3142), "org.hibernatevtype.TimestampType", "", (-682), 7, "cellImportExport.xml");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      DBUtil.replaceDistinctDataType((-319), tableColumnInfo0, (ISession) null);
      DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      // Undeclared exception!
      try { 
        DBUtil.isKeyword((ISession) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBUtil.validateColumnNames((ITableInfo) null, dBCopyPlugin0);
      String string0 = "R6m/GQ]w>S8)nlS";
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin2 = new DBCopyPlugin();
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      // Undeclared exception!
      try { 
        DBUtil.getForeignKeySQL(dBCopyPlugin1, (ITableInfo) null, arrayList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ArrayList<IDatabaseObjectInfo> arrayList0 = new ArrayList<IDatabaseObjectInfo>();
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("DBUtil.info.bindcloblength", "DBUtil.info.bindcloblength", "] using ");
      arrayList0.add((IDatabaseObjectInfo) databaseObjectInfo0);
      // Undeclared exception!
      try { 
        DBUtil.convertObjectToTableList(arrayList0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo cannot be cast to net.sourceforge.squirrel_sql.fw.sql.ITableInfo
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      boolean boolean0 = DBUtil.typesAreEquivalent(3, 3);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[18];
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.PRIMARY_KEY;
      List<ITableInfo> list0 = DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("LcCjgENccy ", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 2004, "LcCjgENccy ", 3280, 3280, 524, 2004, "x J4C.", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 4424, (-3142), "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertTrue(boolean0);
      
      DBUtil.getSchemaNameFromDbObject(tableColumnInfo0);
      Stack<IDatabaseObjectInfo> stack0 = new Stack<IDatabaseObjectInfo>();
      stack0.removeAll(list0);
      assertEquals(18, list0.size());
      
      Vector<IDatabaseObjectInfo> vector0 = new Vector<IDatabaseObjectInfo>();
      List<ITableInfo> list1 = DBUtil.convertObjectToTableList(vector0);
      assertFalse(list1.equals((Object)list0));
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String string0 = "RU@Y$kWB$<b#JG./";
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("RU@Y$kWB$<b#JG./", "RU@Y$kWB$<b#JG./", "RU@Y$kWB$<b#JG./", "RU@Y$kWB$<b#JG./", (-2), "RU@Y$kWB$<b#JG./", (-1391), (-2), 3705, 1007, "<7h'zHo)/DRhJ", (String) null, (-2), (-1183), "");
      DBUtil.isBinaryType(tableColumnInfo0);
      Vector<IDatabaseObjectInfo> vector0 = new Vector<IDatabaseObjectInfo>();
      vector0.removeAllElements();
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      Connection connection0 = null;
      ConnectionWrapper connectionWrapper0 = null;
      try {
        connectionWrapper0 = new ConnectionWrapper((Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.ConnectionWrapper", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql/logs");
      FileSystemHandling.setPermissions(evoSuiteFile0, true, true, true);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBUtil.validateColumnNames((ITableInfo) null, dBCopyPlugin0);
      // Undeclared exception!
      try { 
        DBUtil.getPKColumnString((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("oxYD+c=~", "Q'Lg;id\" >:l?/_vn", "oxYD+c=~", "42%IBVz^Rp<4qILl#|u", 1614, "w@hm3VMZz1`!GA($F|_", 4451, 1614, 4451, 4451, "w@hm3VMZz1`!GA($F|_", (String) null, 5765, 4451, "jF_'.w:2F6.\"AKu");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      // Undeclared exception!
      try { 
        DBUtil.getSchemaFromDbObject(tableColumnInfo0, schemaInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // SQLDatabaseMetaData == null
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      DBUtil.validateColumnNames((ITableInfo) null, (SessionInfoProvider) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      assertFalse(schemaInfo0.isLoaded());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ITableInfo iTableInfo0 = null;
      ISQLConnection iSQLConnection0 = null;
      int int0 = (-777);
      // Undeclared exception!
      try { 
        DBUtil.getColumnName((ISQLConnection) null, (ITableInfo) null, (-777));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.PRIMARY_KEY;
      String string0 = "YzpE/Dj\\\"V>a^8";
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      String string1 = "|Hu";
      // Undeclared exception!
      try { 
        DBUtil.getTableCount((ISession) null, "|Hu", "YzpE/Dj\"V>a^8", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-93);
      byteArray0[1] = (byte) (-101);
      byteArray0[2] = (byte) (-101);
      byteArray0[3] = (byte) (-93);
      byteArray0[4] = (byte) (-101);
      byteArray0[5] = (byte) (-93);
      byteArray0[6] = (byte) (-93);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "|X](D>m-U]x6l8");
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      uidIdentifier0.setString("8PaD");
      // Undeclared exception!
      try { 
        DBUtil.getCreateTableSql(dBCopyPlugin0, (ITableInfo) null, (String) null, "y{m:rX-7La7bnrWb", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte)4;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      SQLDriver sQLDriver0 = new SQLDriver();
      ISQLConnection iSQLConnection0 = null;
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "DBUtil.info.bindbloblength", "DBUtil.info.bindbloblength");
      dBCopyPlugin0.getPluginJarFilePath();
      // Undeclared exception!
      try { 
        DBUtil.getColumnCount((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.convertObjectArrayToTableList((IDatabaseObjectInfo[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("%eqdzjl8i{;sF", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "XT3dKYV", "Level token is [", 0, "", (-3), (-1174), (byte)4, (-9999), "r/G]OBDN<S)", "]Oy[TwL!1H", 0, 0, "xAKy!R]Iy");
      FileSystemHandling.shouldAllThrowIOExceptions();
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[0];
      DBUtil.getColumnList(tableColumnInfoArray0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      try { 
        dBCopyPlugin0.getPluginUserSettingsFolder();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Cannot create directory as a file of the same name already exists: /home/ubuntu/.squirrel-sql/plugins/dbcopy/
         //
         verifyException("net.sourceforge.squirrel_sql.client.plugin.DefaultPlugin", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      DriverPropertyInfo driverPropertyInfo0 = new DriverPropertyInfo("yS7zvP", "net.sourceforge.squirrel_sql.fw.util.BaseRuntimeException");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.getSelectQuery(dBCopyPlugin0, "yS7zvP", (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      MetalComboBoxUI metalComboBoxUI0 = new MetalComboBoxUI();
      PropertyChangeListener propertyChangeListener0 = metalComboBoxUI0.createPropertyChangeListener();
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("~Ce~=?yOB;", propertyChangeListener0);
      DefaultTreeCellRenderer defaultTreeCellRenderer1 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer1.addPropertyChangeListener((String) null, propertyChangeListener0);
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("5=j^=I^R~KZRGWvvp", "P P>,dB!e~'#^x", (String) null);
      // Undeclared exception!
      try { 
        DBUtil.getSchemaFromDbObject(databaseObjectInfo0, (SchemaInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      MetalComboBoxUI metalComboBoxUI0 = new MetalComboBoxUI();
      PropertyChangeListener propertyChangeListener0 = metalComboBoxUI0.createPropertyChangeListener();
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("~Ce~=?yOB;", propertyChangeListener0);
      boolean boolean0 = DBUtil.typesAreEquivalent(112, 112);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      String string0 = "dA%D\"l2}I<p";
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "ruGt", "dA%D\"l2}I<p");
      // Undeclared exception!
      try { 
        DBUtil.getColumnNames((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-59);
      byteArray0[1] = (byte)85;
      ImageIcon imageIcon0 = new ImageIcon(byteArray0);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.createNewDatabaseObjectType("RdS0WIf0a*l?MY", (Icon) imageIcon0);
      imageIcon0.setImageObserver(defaultTreeCellRenderer0);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("getDatabaseProductVersion", (String) null, "getDatabaseProductVersion", (String) null, 192, "org.hibernate.dialect.InformixDialect", 3299, 0, (byte) (-59), (byte) (-59), "identity not null", "org.hibernate.dialect.InformixDialect", 4000, (-3855), "Aka;/5g!b[M&59Z)Srj");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DBUtil.isBinaryType(tableColumnInfo0);
      DBUtil.getSchemaNameFromDbObject(tableColumnInfo0);
      Stack<IDatabaseObjectInfo> stack0 = new Stack<IDatabaseObjectInfo>();
      // Undeclared exception!
      try { 
        stack0.removeAll((Collection<?>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[1];
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.INDEX_TYPE_DBO;
      List<ITableInfo> list0 = DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      List<IDatabaseObjectInfo> list1 = DBUtil.convertTableToObjectList(list0);
      assertFalse(list1.isEmpty());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)4;
      byteArray0[1] = (byte) (-101);
      byteArray0[2] = (byte) (-93);
      byteArray0[3] = (byte) (-45);
      byteArray0[4] = (byte) (-8);
      byteArray0[5] = (byte) (-3);
      byteArray0[6] = (byte)91;
      byteArray0[7] = (byte) (-4);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "|X](D>m-U]x6l8");
      ForeignKeyInfo foreignKeyInfo0 = mock(ForeignKeyInfo.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        DBUtil.tableHasForeignKey("executeQuery: TimesTen allows a maximum fetch size of 128.  Altering preferred fetch size from ", "r{](v/`", "(B(U1]U=E!\"Kj1|>%", foreignKeyInfo0, dBCopyPlugin0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      DriverPropertyInfo driverPropertyInfo0 = new DriverPropertyInfo("", " ");
      DriverPropertyInfo driverPropertyInfo1 = new DriverPropertyInfo(" ", "");
      DriverPropertyInfo driverPropertyInfo2 = new DriverPropertyInfo((String) null, (String) null);
      DriverPropertyInfo driverPropertyInfo3 = new DriverPropertyInfo((String) null, (String) null);
      SQLAlias sQLAlias0 = new SQLAlias();
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = sQLAlias0.getDriverPropertiesClone();
      sQLDriverPropertyCollection0.applyDriverPropertynfo((DriverPropertyInfo[]) null);
      SQLDriver sQLDriver0 = new SQLDriver();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("", "P P>,dB!e~'#^x", (String) null, "x", (-3824), "7ud9GofJx[ZBqlv", 7, (-3142), 2213, 246, (String) null, (String) null, 2006, 2006, "_z/>StN-jd");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      int int0 = DBUtil.replaceDistinctDataType(2213, tableColumnInfo0, (ISession) null);
      assertEquals(2213, int0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      MetalComboBoxUI metalComboBoxUI0 = new MetalComboBoxUI();
      PropertyChangeListener propertyChangeListener0 = metalComboBoxUI0.createPropertyChangeListener();
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("~Ce~=?yOB;", propertyChangeListener0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql/logs");
      FileSystemHandling.setPermissions(evoSuiteFile0, false, false, false);
      DefaultTreeCellRenderer defaultTreeCellRenderer1 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer1.addPropertyChangeListener((String) null, propertyChangeListener0);
      DefaultTreeCellRenderer defaultTreeCellRenderer2 = new DefaultTreeCellRenderer();
      InputMethodListener inputMethodListener0 = mock(InputMethodListener.class, new ViolatedAssumptionAnswer());
      InputMethodListener inputMethodListener1 = mock(InputMethodListener.class, new ViolatedAssumptionAnswer());
      InputMethodListener inputMethodListener2 = AWTEventMulticaster.remove(inputMethodListener0, inputMethodListener1);
      InputMethodListener inputMethodListener3 = AWTEventMulticaster.add(inputMethodListener2, inputMethodListener2);
      defaultTreeCellRenderer2.removeInputMethodListener(inputMethodListener3);
      Icon icon0 = defaultTreeCellRenderer2.getDefaultClosedIcon();
      DatabaseObjectType.createNewDatabaseObjectType("~Ce~=?yOB;", icon0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.sameDatabaseType((ISession) null, (ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.executeUpdate((ISQLConnection) null, "oxYD+c=~", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      // Undeclared exception!
      try { 
        DBUtil.getCatSep((ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("@FF", "&{Dj+|'bj+q$WCi{R>t", "DBUtil.info.bindbloblength", "DBUtil.error.tablenotfound", 2003, "y{m:rX-7La7bnrWb", 2002, 2003, 2156, 2003, "[B$<L1;Caf", "DBUtil.error.tablenotfound", 37, 244, "*|HB");
      FileSystemHandling.shouldAllThrowIOExceptions();
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[8];
      tableColumnInfoArray0[0] = tableColumnInfo0;
      tableColumnInfoArray0[1] = tableColumnInfo0;
      tableColumnInfoArray0[2] = tableColumnInfo0;
      tableColumnInfoArray0[3] = tableColumnInfo0;
      tableColumnInfoArray0[4] = tableColumnInfo0;
      tableColumnInfoArray0[5] = tableColumnInfo0;
      tableColumnInfoArray0[6] = tableColumnInfo0;
      tableColumnInfoArray0[7] = tableColumnInfo0;
      DBUtil.getColumnList(tableColumnInfoArray0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      try { 
        dBCopyPlugin0.getPluginUserSettingsFolder();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Cannot create directory as a file of the same name already exists: /home/ubuntu/.squirrel-sql/plugins/dbcopy/
         //
         verifyException("net.sourceforge.squirrel_sql.client.plugin.DefaultPlugin", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("{Gc@o(hJrXmj^Xg", "eqitF=DioenB9o+r", "{Gc@o(hJrXmj^Xg", "tonumber", 1434, "][{O |Pe.m5", 2964, (-3664), (-1178), (-9), " J", "{Gc@o(hJrXmj^Xg", (-9), 0, " primary key ");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[4];
      tableColumnInfoArray0[0] = tableColumnInfo0;
      tableColumnInfoArray0[1] = tableColumnInfo0;
      tableColumnInfoArray0[3] = tableColumnInfo0;
      // Undeclared exception!
      try { 
        DBUtil.getColumnList(tableColumnInfoArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)4;
      byteArray0[1] = (byte) (-101);
      byteArray0[2] = (byte) (-93);
      byteArray0[3] = (byte) (-101);
      byteArray0[5] = (byte) (-3);
      byteArray0[6] = (byte)91;
      byteArray0[7] = (byte) (-4);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "|X](D>m-U]x6l8");
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.getTables((ISession) null, (String) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "(B(U1]U=E!\"Kj1|>%");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "GS&kaB!J", "M\"", 999999999, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 999999999, 23, 23, 999999999, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "GS&kaB!J", 6, 290, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      // Undeclared exception!
      try { 
        DBUtil.getColumnSql(dBCopyPlugin0, tableColumnInfo0, "GS&kaB!J", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu");
      FileSystemHandling.createFolder(evoSuiteFile0);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("{Gc@o(hJrXmj^Xg", "eqitF=DioenB9o+r", "{Gc@o(hJrXmj^Xg", "tonumber", 1434, "][{O |Pe.m5", 2964, (-3664), (-1178), (-2470), " J", "{Gc@o(hJrXmj^Xg", (-2470), 0, " primary key ");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      dBCopyPlugin0.setApplicationFiles(applicationFileWrappersImpl0);
      dBCopyPlugin0.getDestSession();
      int int0 = DBUtil.replaceDistinctDataType(0, tableColumnInfo0, (ISession) null);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql/logs");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "select seqname from sysibm.syssequences");
      DriverPropertyInfo driverPropertyInfo0 = new DriverPropertyInfo("", " ");
      DriverPropertyInfo driverPropertyInfo1 = new DriverPropertyInfo(" ", "");
      DriverPropertyInfo driverPropertyInfo2 = new DriverPropertyInfo((String) null, (String) null);
      DriverPropertyInfo driverPropertyInfo3 = new DriverPropertyInfo((String) null, (String) null);
      SQLAlias sQLAlias0 = new SQLAlias();
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = sQLAlias0.getDriverPropertiesClone();
      sQLDriverPropertyCollection0.applyDriverPropertynfo((DriverPropertyInfo[]) null);
      SQLDriver sQLDriver0 = new SQLDriver();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("", "P P>,dB!e~'#^x", (String) null, "x", (-3824), "7ud9GofJx[ZBqlv", 7, (-3142), 2213, 246, (String) null, (String) null, 2006, 2006, "_z/>StN-jd");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      int int0 = DBUtil.replaceDistinctDataType(2213, tableColumnInfo0, (ISession) null);
      assertEquals(2213, int0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      DBCopyPreferenceBean dBCopyPreferenceBean0 = new DBCopyPreferenceBean();
      dBCopyPreferenceBean0.setDelayBetweenObjects(true);
      dBCopyPreferenceBean0.setPromptForDialect(true);
      DBUtil.setPreferences(dBCopyPreferenceBean0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      dBCopyPlugin0.setPasteMenuEnabled(true);
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      schemaInfo0.getSQLDatabaseMetaData();
      SchemaInfoUpdateListener schemaInfoUpdateListener0 = mock(SchemaInfoUpdateListener.class, new ViolatedAssumptionAnswer());
      schemaInfo0.removeSchemaInfoUpdateListener(schemaInfoUpdateListener0);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("\t", "", "", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 2, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 910, 2, 0, 0, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "\t", 910, 910, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      assertEquals("", tableColumnInfo0.toString());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      DBUtil dBUtil0 = new DBUtil();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.isKeyword((ISession) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.getTableCount((ISession) null, "7MW(:w;U-.875_7+j", "vPM[sT+Qw1r", "Kf!Up4oxh'SV", 4089);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      MetalComboBoxUI metalComboBoxUI0 = new MetalComboBoxUI();
      PropertyChangeListener propertyChangeListener0 = metalComboBoxUI0.createPropertyChangeListener();
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("~Ce~=?yOB;", propertyChangeListener0);
      DefaultTreeCellRenderer defaultTreeCellRenderer1 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer1.addPropertyChangeListener((String) null, propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("qW", propertyChangeListener0);
      DefaultTreeCellRenderer defaultTreeCellRenderer2 = new DefaultTreeCellRenderer();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, (String) null, "X=fq&b", ":$_m", 15, "org.hibernate.dialect.InformixDialect", (-1320), 12, 15, 15, "org.hibernate.dialect.InformixDialect", "qY.u6r@[I~k\u0004@{", 15, (-2325), "ymg:*W#X_$2Y5!b");
      // Undeclared exception!
      try { 
        DBUtil.getMaxColumnLengthSQL((ISession) null, tableColumnInfo0, "~Ce~=?yOB;", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      String string0 = null;
      DBUtil.fixCase((ISession) null, (String) null);
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      String string1 = "";
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((CallableStatement) null).when(connection0).prepareCall(anyString());
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      // Undeclared exception!
      try { 
        connectionWrapper0.prepareCall("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // statement
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.StatementWrapper", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ISession iSession0 = null;
      String string0 = "";
      DBUtil.fixCase((ISession) null, "");
      String string1 = "E?-RwbOTY|Wpz([W";
      // Undeclared exception!
      try { 
        DBUtil.getTableCount((ISession) null, "", "l|!)8B>V1l}fW8S$", "&y1/y", (-2067947214));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      MetalComboBoxUI metalComboBoxUI0 = new MetalComboBoxUI();
      PropertyChangeListener propertyChangeListener0 = metalComboBoxUI0.createPropertyChangeListener();
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("~Ce~=?yOB;", propertyChangeListener0);
      DefaultTreeCellRenderer defaultTreeCellRenderer1 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer1.addPropertyChangeListener((String) null, propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("qW", propertyChangeListener0);
      DefaultTreeCellRenderer defaultTreeCellRenderer2 = new DefaultTreeCellRenderer();
      metalComboBoxUI0.getAccessibleChild(defaultTreeCellRenderer0, 4000);
      DefaultTreeCellRenderer defaultTreeCellRenderer3 = new DefaultTreeCellRenderer();
      MetalComboBoxUI metalComboBoxUI1 = new MetalComboBoxUI();
      metalComboBoxUI1.createPropertyChangeListener();
      defaultTreeCellRenderer1.addPropertyChangeListener("Zi\u0000=w[U2H!J<t7>", (PropertyChangeListener) propertyChangeListenerProxy0);
      DefaultTreeCellRenderer defaultTreeCellRenderer4 = new DefaultTreeCellRenderer();
      DefaultTreeCellRenderer defaultTreeCellRenderer5 = new DefaultTreeCellRenderer();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      dBCopyPlugin0.setPasteToTableName("x^");
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.getTableInfo((ISession) null, (String) null, "getCatSep: Unexpected Exception - ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql/logs");
      FileSystemHandling.createFolder(evoSuiteFile0);
      byte[] byteArray0 = new byte[18];
      byteArray0[0] = (byte) (-106);
      byteArray0[1] = (byte)4;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      boolean boolean0 = DBUtil.typesAreEquivalent((byte)4, (-690));
      assertFalse(boolean0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      String string0 = "6L X.:zA6VoQ";
      DBUtil.setLastStatementValues("6L X.:zA6VoQ");
      String string1 = "(3";
      String string2 = "eE?";
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      schemaInfo0.getSQLDatabaseMetaData();
      ProcedureInfo procedureInfo0 = null;
      try {
        procedureInfo0 = new ProcedureInfo("(3", "(3", "eE?", "W#U!", 32000, (SQLDatabaseMetaData) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // SQLDatabaseMetaData == null
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.executeQuery((ISession) null, "ST^RM");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      String string0 = DBUtil.getLastStatementValues();
      assertNull(string0);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      DBUtil.setLastStatement("X<0SAR]8AvuhtV'KE");
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        DBUtil.dropTable("ezPo?7*:<", " from ", "ezPo?7*:<", (ISession) null, false, (-891));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      MetalComboBoxUI metalComboBoxUI0 = new MetalComboBoxUI();
      PropertyChangeListener propertyChangeListener0 = metalComboBoxUI0.createPropertyChangeListener();
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("~Ce~=?yOB;", propertyChangeListener0);
      DefaultTreeCellRenderer defaultTreeCellRenderer1 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer1.addPropertyChangeListener((String) null, propertyChangeListener0);
      DefaultTreeCellRenderer defaultTreeCellRenderer2 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer2.getDefaultClosedIcon();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      dBCopyPlugin0.getSourceSession();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("%V(2Otv]Cx#W_!", "~Ce~=?yOB;", "8f84)oc*Fb-", "", 1863, "D<Uj!2~", 1863, 2667, 2667, 1863, "vWT#mpZ4Sd@s(", "squirrel-sql.log", 1863, 2058, (String) null);
      // Undeclared exception!
      try { 
        DBUtil.fixCase((ISession) null, "8f84)oc*Fb-");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.checkKeyword((ISession) null, "y}@]pG3", "pY<<T");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.getQualifiedObjectName((ISession) null, "P P>,dB!e~'#^x", "HkYH32Z=[:@", "P P>,dB!e~'#^x", 102);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.sanityCheckPreferences((ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.convertObjectToTableList((List<IDatabaseObjectInfo>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.3842713196839629
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql/logs");
      FileSystemHandling.setPermissions(evoSuiteFile0, true, true, true);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBUtil.validateColumnNames((ITableInfo) null, dBCopyPlugin0);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)85;
      ImageIcon imageIcon0 = new ImageIcon(byteArray0);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("DBUtil.info.bindcloblength", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "", "DBUtil.info.bindcloblength", 1388, "getDatabaseProductVersion", 14, (-970), 4328, 1268, "V", "getDatabaseProductVersion", 822, 14, "P P>,dB!e~'#^x");
      DBUtil.isBinaryType(tableColumnInfo0);
      // Undeclared exception!
      try { 
        DBUtil.getSchemaNameFromDbObject((IDatabaseObjectInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.6675530205253588
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[18];
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.PRIMARY_KEY;
      List<ITableInfo> list0 = DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)85;
      byteArray0[1] = (byte) (-59);
      ImageIcon imageIcon0 = new ImageIcon(byteArray0);
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.createNewDatabaseObjectType("identity not null", (Icon) imageIcon0);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, "NETEZZA", "identity not null", "max", 4000, (String) null, 3056, 3056, 193, (-1109), "max", "identity not null", 1388, (-970), "getDatabaseProductVersion");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      DBUtil.isBinaryType(tableColumnInfo0);
      String string0 = DBUtil.getSchemaNameFromDbObject(tableColumnInfo0);
      assertEquals("NETEZZA", string0);
      
      Stack<IDatabaseObjectInfo> stack0 = new Stack<IDatabaseObjectInfo>();
      stack0.removeAll(list0);
      assertEquals(18, list0.size());
      
      DBUtil.convertObjectToTableList(stack0);
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql/logs");
      FileSystemHandling.createFolder(evoSuiteFile0);
      byte[] byteArray0 = new byte[18];
      byteArray0[0] = (byte) (-106);
      byteArray0[1] = (byte)4;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      LinkedList<ITableInfo> linkedList0 = new LinkedList<ITableInfo>();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql");
      FileSystemHandling.appendStringToFile(evoSuiteFile1, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      // Undeclared exception!
      try { 
        DBUtil.getInsertSQL(dBCopyPlugin0, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (ITableInfo) null, (byte)4);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[1];
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("", "", "SyLJ`L");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.INDEX_TYPE_DBO;
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      iDatabaseObjectInfoArray0[0] = (IDatabaseObjectInfo) databaseObjectInfo0;
      // Undeclared exception!
      try { 
        DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo cannot be cast to net.sourceforge.squirrel_sql.fw.sql.ITableInfo
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("c!B;5m", "c!B;5m", "c!B;5m", "c!B;5m", (-12), "w> ,:X29pG?NhF-T", 1733, 1733, 126, 7, "*|HB", "c!B;5m", 1733, 126, "w> ,:X29pG?NhF-T");
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 62
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      List<IDatabaseObjectInfo> list0 = DBUtil.convertTableToObjectList(arrayList0);
      assertEquals(0, list0.size());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPluginUserSettingsFolder();
      // Undeclared exception!
      try { 
        DBUtil.convertTableToObjectList((List<ITableInfo>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      String string0 = DBUtil.getLastStatement();
      assertNull(string0);
  }

  /**
  //Test case number: 65
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      String string0 = "b\\*$lb5$z_&\\uOP[3";
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, "P", " and catalog ", "M}(@W6SJ-Ld<fytp0", 0, string0, 0, 0, 403, 3939, "ch6k#9QVu", "`Zh~,`ZQY", 0, 3939, "");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.UDT_TYPE_DBO;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DatabaseObjectType.createNewDatabaseObjectType("fFNbIG0F");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.isBinaryType((TableColumnInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.deleteDataInExistingTable((ISession) null, (String) null, "zie$59AT6v", "zie$59AT6v");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }
}
