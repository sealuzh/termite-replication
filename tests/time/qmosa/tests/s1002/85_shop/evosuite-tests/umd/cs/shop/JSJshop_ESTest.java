/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 16:01:23 GMT 2019
 */

package umd.cs.shop;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.datatransfer.DataFlavor;
import java.awt.datatransfer.StringSelection;
import java.awt.datatransfer.UnsupportedFlavorException;
import java.io.PipedReader;
import java.io.StreamTokenizer;
import java.io.StringReader;
import java.util.function.Function;
import java.util.function.UnaryOperator;
import javax.swing.DropMode;
import javax.swing.JApplet;
import javax.swing.JLayeredPane;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.lang.MockThread;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import umd.cs.shop.JSJshop;
import umd.cs.shop.JSJshopNode;
import umd.cs.shop.JSJshopVars;
import umd.cs.shop.JSPairPlanTSListNodes;
import umd.cs.shop.JSPlan;
import umd.cs.shop.JSPlanningDomain;
import umd.cs.shop.JSPlanningProblem;
import umd.cs.shop.JSState;
import umd.cs.shop.JSTaskAtom;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JSJshop_ESTest extends JSJshop_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)2;
      JSJshop jSJshop0 = new JSJshop();
      PipedReader pipedReader0 = new PipedReader();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(pipedReader0);
      StreamTokenizer streamTokenizer2 = new StreamTokenizer(pipedReader0);
      streamTokenizer2.resetSyntax();
      JApplet jApplet0 = JSJshop.applet;
      jSJshop0.getBufferedReader("N/YA`", (String) null, (JApplet) null);
      System.setCurrentTimeMillis((-4));
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.1271365034467795
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("farp.shp");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-22);
      byteArray0[1] = (byte) (-43);
      byteArray0[2] = (byte) (-22);
      byteArray0[3] = (byte) (-86);
      FileSystemHandling.appendStringToFile(evoSuiteFile0, (String) null);
      byteArray0[4] = (byte)3;
      byteArray0[5] = (byte)2;
      byteArray0[6] = (byte)58;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      JSJshop jSJshop0 = new JSJshop();
      jSJshop0.testParser();
      JSState jSState0 = new JSState();
      jSJshop0.parserFile("farp.shp");
      JSJshopNode jSJshopNode0 = jSJshop0.tree();
      assertNull(jSJshopNode0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      UnaryOperator<Object> unaryOperator0 = UnaryOperator.identity();
      Function<Object, JSPlanningProblem> function0 = (Function<Object, JSPlanningProblem>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<Object, JSPlanningProblem> function1 = unaryOperator0.andThen((Function<? super Object, ? extends JSPlanningProblem>) function0);
      Function<Object, JSPlanningProblem> function2 = unaryOperator0.andThen((Function<? super Object, ? extends JSPlanningProblem>) function1);
      Function<Object, JSPlanningProblem> function3 = unaryOperator0.andThen((Function<? super Object, ? extends JSPlanningProblem>) function1);
      Function<Object, JSPlanningProblem> function4 = unaryOperator0.andThen((Function<? super Object, ? extends JSPlanningProblem>) function3);
      unaryOperator0.andThen((Function<? super Object, ? extends JSPlanningProblem>) function4);
      UnaryOperator<JSPlanningProblem> unaryOperator1 = UnaryOperator.identity();
      Function<Object, DropMode> function5 = (Function<Object, DropMode>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<JSPlanningProblem, DropMode> function6 = unaryOperator1.andThen((Function<? super JSPlanningProblem, ? extends DropMode>) function5);
      unaryOperator1.andThen((Function<? super JSPlanningProblem, ? extends DropMode>) function6);
      unaryOperator0.compose((Function<? super JSPlanningProblem, ?>) function2);
      Object object0 = new Object();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("y,1Y");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "W*ZC*m}B4W\"PS/");
      JSJshop jSJshop0 = null;
      try {
        jSJshop0 = new JSJshop("y,1Y", "y,1Y");
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-11);
      ThreadGroup threadGroup0 = mock(ThreadGroup.class, new ViolatedAssumptionAnswer());
      MockThread mockThread0 = new MockThread(threadGroup0, "sK.Kt`^NbTtow\"Y!i");
      MockThread mockThread1 = new MockThread(mockThread0, "sK.Kt`^NbTtow\"Y!i");
      MockThread mockThread2 = new MockThread();
      MockThread mockThread3 = new MockThread(mockThread2);
      ClassLoader classLoader0 = mockThread1.getContextClassLoader();
      ClassLoader classLoader1 = classLoader0.getParent();
      ClassLoader classLoader2 = classLoader0.getParent();
      classLoader1.getParent();
      classLoader0.setClassAssertionStatus("ahmk<f/$-g);/5", false);
      classLoader2.setDefaultAssertionStatus(false);
      DataFlavor dataFlavor0 = DataFlavor.fragmentHtmlFlavor;
      ClassLoader.getSystemClassLoader();
      JSJshop jSJshop0 = new JSJshop();
      JApplet jApplet0 = JSJshop.applet;
      // Undeclared exception!
      try { 
        jSJshop0.getAppletURL("ahmk<f/$-g);/5", (JApplet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSJshop", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.5584105701317909
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("farp.shp");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte) (-43);
      byteArray0[2] = (byte) (-76);
      byteArray0[3] = (byte) (-86);
      FileSystemHandling.appendStringToFile(evoSuiteFile0, (String) null);
      byteArray0[4] = (byte)3;
      byteArray0[5] = (byte)2;
      byteArray0[6] = (byte)58;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      JSJshop jSJshop0 = new JSJshop();
      JSJshopVars.rightPar = (int) (byte)58;
      JSJshopVars.flagLevel = (int) (byte)2;
      jSJshop0.testParser();
      StringReader stringReader0 = new StringReader("ML51hTfG:");
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.563023629494366
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("farp.shp");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte) (-43);
      byteArray0[2] = (byte) (-76);
      byteArray0[3] = (byte) (-76);
      FileSystemHandling.appendStringToFile(evoSuiteFile0, (String) null);
      byteArray0[4] = (byte)3;
      byteArray0[5] = (byte)2;
      byteArray0[6] = (byte)56;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      JSJshop jSJshop0 = new JSJshop();
      jSJshop0.testParser();
      StringReader stringReader0 = null;
      try {
        stringReader0 = new StringReader((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)2;
      JSJshop jSJshop0 = new JSJshop();
      PipedReader pipedReader0 = new PipedReader();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(pipedReader0);
      StreamTokenizer streamTokenizer2 = new StreamTokenizer(pipedReader0);
      streamTokenizer2.resetSyntax();
      JSPlanningDomain jSPlanningDomain0 = jSJshop0.dom();
      assertNull(jSPlanningDomain0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      JSTaskAtom jSTaskAtom0 = new JSTaskAtom();
      UnaryOperator.identity();
      JSJshop jSJshop0 = null;
      try {
        jSJshop0 = new JSJshop((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.4399756932787804
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DataFlavor dataFlavor0 = DataFlavor.stringFlavor;
      StringSelection stringSelection0 = new StringSelection("P04<eh7:");
      Object object0 = new Object();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "z";
      // Undeclared exception!
      try { 
        JSJshop.main(stringArray0);
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String[] stringArray0 = null;
      // Undeclared exception!
      try { 
        JSJshop.main((String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSJshop", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.1944064129383247
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      jSJshop0.prob();
      jSJshop0.getDeleteList();
      JSJshopVars.flagExit = false;
      String[] stringArray0 = new String[8];
      stringArray0[0] = "pL";
      stringArray0[1] = "A0LbllJai";
      stringArray0[2] = "ltt`";
      stringArray0[3] = "` ";
      stringArray0[4] = ". ";
      stringArray0[5] = "x~t]-c!>Y5R%:a3*VT";
      stringArray0[6] = "all";
      stringArray0[7] = "2nYtMc7LaB6";
      JSJshop.main(stringArray0);
      JSJshop jSJshop1 = new JSJshop("A0LbllJai", "/ ");
      DataFlavor dataFlavor0 = DataFlavor.imageFlavor;
      dataFlavor0.isFlavorTextType();
      StringSelection stringSelection0 = new StringSelection("all");
      try { 
        stringSelection0.getTransferData(dataFlavor0);
        fail("Expecting exception: UnsupportedFlavorException");
      
      } catch(UnsupportedFlavorException e) {
         //
         // Image
         //
         verifyException("java.awt.datatransfer.StringSelection", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)2;
      DataFlavor dataFlavor0 = DataFlavor.imageFlavor;
      StringSelection stringSelection0 = new StringSelection("' ");
      StringSelection stringSelection1 = new StringSelection("' ");
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      classLoader0.clearAssertionStatus();
      ClassLoader classLoader1 = classLoader0.getParent();
      classLoader0.setClassAssertionStatus("~k-AN*fOCM:z@Wo4{", false);
      classLoader0.setDefaultAssertionStatus(false);
      DataFlavor dataFlavor1 = DataFlavor.fragmentHtmlFlavor;
      ClassLoader classLoader2 = ClassLoader.getSystemClassLoader();
      classLoader1.setDefaultAssertionStatus(false);
      classLoader2.setDefaultAssertionStatus(false);
      ClassLoader.getSystemClassLoader();
      dataFlavor1.match(dataFlavor0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "~k-AN*fOCM:z@Wo4{";
      JSJshop.main(stringArray0);
      assertEquals(1, stringArray0.length);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator<JSPlanningProblem> unaryOperator0 = UnaryOperator.identity();
      Function<Object, DropMode> function0 = (Function<Object, DropMode>) mock(Function.class, new ViolatedAssumptionAnswer());
      unaryOperator0.andThen((Function<? super JSPlanningProblem, ? extends DropMode>) function0);
      UnaryOperator<Object> unaryOperator1 = UnaryOperator.identity();
      Function.identity();
      UnaryOperator.identity();
      JSTaskAtom jSTaskAtom0 = new JSTaskAtom();
      jSTaskAtom0.replaceAll(unaryOperator1);
      JSJshop jSJshop0 = new JSJshop();
      jSJshop0.getDeleteList();
      jSJshop0.getAddList();
      JSPairPlanTSListNodes jSPairPlanTSListNodes0 = jSJshop0.getSolution();
      assertNull(jSPairPlanTSListNodes0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[0] = "u{e;*nrLI/Q2UA";
      stringArray0[1] = "z";
      stringArray0[2] = "9:p$`k;}";
      stringArray0[3] = "oJ}";
      JSJshop.main(stringArray0);
      assertEquals(4, stringArray0.length);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[1] = "z";
      stringArray0[2] = "Ltt`";
      JSJshop.main(stringArray0);
      DataFlavor dataFlavor0 = DataFlavor.imageFlavor;
      StringSelection stringSelection0 = new StringSelection("Ltt`");
      StringSelection stringSelection1 = new StringSelection("z");
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ClassLoader classLoader1 = classLoader0.getParent();
      DataFlavor dataFlavor1 = null;
      try {
        dataFlavor1 = new DataFlavor("~k-AN*fOCM:z@Wo4{", "z", classLoader1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // failed to parse:~k-AN*fOCM:z@Wo4{
         //
         verifyException("java.awt.datatransfer.DataFlavor", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      JSJshopVars.backquote = 418;
      // Undeclared exception!
      try { 
        jSJshop0.setFile("U*$Qp?JNlWx/YEu", (JSTaskAtom) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSJshop", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte) (-43);
      JSJshop jSJshop0 = new JSJshop();
      PipedReader pipedReader0 = new PipedReader();
      // Undeclared exception!
      try { 
        jSJshop0.parserFile((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      jSJshop0.prob();
      JSPlan jSPlan0 = new JSPlan();
      StreamTokenizer streamTokenizer0 = null;
      // Undeclared exception!
      try { 
        jSJshop0.processToken((StreamTokenizer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSJshop", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)2;
      JSJshop jSJshop0 = new JSJshop();
      PipedReader pipedReader0 = new PipedReader();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(pipedReader0);
      StreamTokenizer streamTokenizer2 = new StreamTokenizer(pipedReader0);
      streamTokenizer0.slashSlashComments(true);
      streamTokenizer2.resetSyntax();
      // Undeclared exception!
      try { 
        jSJshop0.processToken(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSJshop", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      JSJshopVars.rightBrac = 46;
      JSJshopVars.flagExit = true;
      boolean boolean0 = jSJshop0.parserFile("'wr'r?");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("farp.shp");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte) (-43);
      String string0 = "g6,+>\\uwM:'";
      FileSystemHandling.appendLineToFile(evoSuiteFile0, string0);
      JSJshop jSJshop0 = new JSJshop();
      JSJshop jSJshop1 = new JSJshop();
      jSJshop1.getDeleteList();
      jSJshop0.getAddList();
      JSJshopNode jSJshopNode0 = jSJshop0.getTree();
      assertNull(jSJshopNode0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      JSTaskAtom jSTaskAtom0 = new JSTaskAtom();
      UnaryOperator<Object> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator<Integer> unaryOperator1 = UnaryOperator.identity();
      Function<Object, JSPlanningProblem> function0 = (Function<Object, JSPlanningProblem>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<Object, JSPlanningProblem> function1 = unaryOperator0.andThen((Function<? super Object, ? extends JSPlanningProblem>) function0);
      unaryOperator0.andThen((Function<? super Object, ? extends JSPlanningProblem>) function1);
      UnaryOperator<JSPlanningProblem> unaryOperator2 = UnaryOperator.identity();
      Function<JSPlanningProblem, DropMode> function2 = (Function<JSPlanningProblem, DropMode>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<JSPlanningProblem, DropMode> function3 = unaryOperator2.andThen((Function<? super JSPlanningProblem, ? extends DropMode>) function2);
      unaryOperator0.compose((Function<? super JSPlanningProblem, ?>) function3);
      unaryOperator0.apply(unaryOperator2);
      Function.identity();
      UnaryOperator.identity();
      jSTaskAtom0.replaceAll(unaryOperator1);
      JSJshop jSJshop0 = new JSJshop();
      jSJshop0.getAddList();
      JSPlan jSPlan0 = jSJshop0.sol();
      assertNull(jSPlan0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      UnaryOperator<Object> unaryOperator0 = UnaryOperator.identity();
      Function<Object, JSPlanningProblem> function0 = (Function<Object, JSPlanningProblem>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<Object, JSPlanningProblem> function1 = unaryOperator0.andThen((Function<? super Object, ? extends JSPlanningProblem>) function0);
      unaryOperator0.andThen((Function<? super Object, ? extends JSPlanningProblem>) function1);
      Function<Object, JSPlanningProblem> function2 = unaryOperator0.andThen((Function<? super Object, ? extends JSPlanningProblem>) function1);
      Function<Object, JSPlanningProblem> function3 = unaryOperator0.andThen((Function<? super Object, ? extends JSPlanningProblem>) function2);
      unaryOperator0.andThen((Function<? super Object, ? extends JSPlanningProblem>) function3);
      UnaryOperator.identity();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)58;
      JSJshop jSJshop0 = new JSJshop();
      // Undeclared exception!
      try { 
        jSJshop0.testParser();
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      UnaryOperator<Object> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator<Object> unaryOperator1 = UnaryOperator.identity();
      Function<Object, JSPlanningProblem> function0 = (Function<Object, JSPlanningProblem>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<Object, JSPlanningProblem> function1 = unaryOperator1.andThen((Function<? super Object, ? extends JSPlanningProblem>) function0);
      unaryOperator0.andThen((Function<? super Object, ? extends JSPlanningProblem>) function1);
      unaryOperator0.andThen((Function<? super Object, ? extends JSPlanningProblem>) function1);
      UnaryOperator<JSPlanningProblem> unaryOperator2 = UnaryOperator.identity();
      Function<Object, DropMode> function2 = (Function<Object, DropMode>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<JSPlanningProblem, DropMode> function3 = unaryOperator2.andThen((Function<? super JSPlanningProblem, ? extends DropMode>) function2);
      unaryOperator2.andThen((Function<? super JSPlanningProblem, ? extends DropMode>) function3);
      unaryOperator1.compose((Function<? super JSPlanningProblem, ?>) function3);
      Object object0 = new Object();
      JSJshop jSJshop0 = null;
      try {
        jSJshop0 = new JSJshop("V886H*^;R$tQuU`", "V886H*^;R$tQuU`");
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      JSTaskAtom jSTaskAtom0 = new JSTaskAtom();
      UnaryOperator<Object> unaryOperator0 = UnaryOperator.identity();
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      UnaryOperator<Integer> unaryOperator1 = UnaryOperator.identity();
      Integer.compare((-1934001693), (-1934001693));
      Function.identity();
      unaryOperator1.apply(integer0);
      jSTaskAtom0.replaceAll(unaryOperator0);
      jSTaskAtom0.setSize(0);
      JSJshop jSJshop0 = null;
      try {
        jSJshop0 = new JSJshop("`6e~f\"Zim=;C>Jm{", jSTaskAtom0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSJshop", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      JSTaskAtom jSTaskAtom0 = new JSTaskAtom();
      UnaryOperator.identity();
      UnaryOperator<Integer> unaryOperator0 = UnaryOperator.identity();
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      unaryOperator0.apply(integer0);
      jSTaskAtom0.replaceAll(unaryOperator0);
      jSTaskAtom0.setSize(567);
      JSJshop jSJshop0 = null;
      try {
        jSJshop0 = new JSJshop("`6e~f\"Zim=;C>Jm{", jSTaskAtom0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSJshop", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-11);
      ThreadGroup threadGroup0 = mock(ThreadGroup.class, new ViolatedAssumptionAnswer());
      MockThread mockThread0 = new MockThread(threadGroup0, "sK.Kt`^NbTtow\"Y!i");
      MockThread mockThread1 = new MockThread(mockThread0, "sK.Kt`^NbTtow\"Y!i");
      MockThread mockThread2 = new MockThread();
      MockThread mockThread3 = new MockThread(mockThread2);
      ClassLoader classLoader0 = mockThread1.getContextClassLoader();
      ClassLoader classLoader1 = classLoader0.getParent();
      ClassLoader classLoader2 = classLoader0.getParent();
      classLoader1.getParent();
      classLoader0.setClassAssertionStatus("ahmk<f/$-g);/5", false);
      classLoader2.setDefaultAssertionStatus(false);
      DataFlavor dataFlavor0 = DataFlavor.fragmentHtmlFlavor;
      ClassLoader.getSystemClassLoader();
      JSJshop jSJshop0 = new JSJshop();
      JApplet jApplet0 = JSJshop.applet;
      jSJshop0.getBufferedReader("/ts{^", "OdOzU(fe,j_[mR#~", (JApplet) null);
      System.setCurrentTimeMillis(1L);
  }
}
