/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 15:36:56 GMT 2019
 */

package umd.cs.shop;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.StreamTokenizer;
import java.io.StringReader;
import java.util.Collection;
import java.util.Comparator;
import java.util.function.Consumer;
import java.util.function.Function;
import java.util.function.UnaryOperator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;
import umd.cs.shop.JSJshopVars;
import umd.cs.shop.JSPredicateForm;
import umd.cs.shop.JSSubstitution;
import umd.cs.shop.JSTerm;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JSPredicateForm_ESTest extends JSPredicateForm_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.790024509383223
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      StringReader stringReader0 = new StringReader("9|@z#Y!ukP7zt$.");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      StringReader stringReader1 = new StringReader("L~`M}mj|X");
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader1);
      stringReader0.ready();
      stringReader0.markSupported();
      JSTerm jSTerm1 = (JSTerm)jSTerm0.clone();
      JSTerm jSTerm2 = new JSTerm(streamTokenizer1);
      jSTerm0.clonePF();
      jSTerm2.add((Object) jSTerm1);
      jSTerm1.isEmpty();
      jSTerm2.clonePF();
      stringReader1.read();
      Object object0 = new Object();
      jSTerm0.add((Object) "L~`M}mj|X");
      jSTerm1.matches((JSPredicateForm) jSTerm2, jSSubstitution0);
      // Undeclared exception!
      try { 
        jSTerm0.applySubstitutionPF(jSSubstitution0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to umd.cs.shop.JSTerm
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.154495808699948
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      StringReader stringReader0 = new StringReader("9|@z#Y!ukP7zt$.");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSPredicateForm jSPredicateForm0 = jSTerm0.standarizerPredicateForm();
      JSPredicateForm jSPredicateForm1 = jSPredicateForm0.clonePF();
      JSPredicateForm jSPredicateForm2 = (JSPredicateForm)jSPredicateForm1.clone();
      jSPredicateForm0.clonePF();
      JSTerm jSTerm1 = new JSTerm();
      jSPredicateForm1.matches(jSPredicateForm2);
      jSTerm1.add((Object) jSPredicateForm0);
      jSTerm1.makeVariable();
      // Undeclared exception!
      try { 
        jSTerm0.equals((JSPredicateForm) jSTerm1);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // umd.cs.shop.JSPredicateForm cannot be cast to java.lang.String
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.7653291326451686
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      StringReader stringReader0 = new StringReader("o++");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      stringReader0.markSupported();
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSPredicateForm jSPredicateForm0 = jSTerm0.clonePF();
      StringReader stringReader1 = new StringReader("o++");
      stringReader1.read();
      StringReader stringReader2 = new StringReader("o++");
      StringReader stringReader3 = new StringReader("_Z6,QH");
      jSPredicateForm0.toStr();
      long long0 = 1L;
      System.setCurrentTimeMillis(1L);
      jSSubstitution0.ensureCapacity(111);
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis((-1L));
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      jSSubstitution1.add((Object) jSSubstitution0);
      // Undeclared exception!
      try { 
        jSTerm0.matches(jSPredicateForm0, jSSubstitution1);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // umd.cs.shop.JSSubstitution cannot be cast to umd.cs.shop.JSPairVarTerm
         //
         verifyException("umd.cs.shop.JSSubstitution", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SystemInUtil.addInputLine((String) null);
      StringReader stringReader0 = new StringReader("GoW;k{Hht;rt XKI(\"");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm();
      JSTerm jSTerm1 = new JSTerm(streamTokenizer0);
      JSTerm jSTerm2 = new JSTerm();
      Integer integer0 = new Integer(32);
      jSTerm0.add((Object) integer0);
      // Undeclared exception!
      try { 
        jSTerm1.matches((JSPredicateForm) jSTerm0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Integer cannot be cast to java.lang.String
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.6105981585090816
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      StringReader stringReader0 = new StringReader("GoW;k{Hht;rt XKI(\"");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      stringReader0.markSupported();
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSPredicateForm jSPredicateForm0 = jSTerm0.clonePF();
      StringReader stringReader1 = new StringReader("GoW;k{Hht;rt XKI(\"");
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader1);
      stringReader0.ready();
      jSPredicateForm0.clone();
      JSTerm jSTerm1 = new JSTerm(streamTokenizer1);
      jSPredicateForm0.equals((JSPredicateForm) jSTerm1);
      JSPredicateForm jSPredicateForm1 = new JSPredicateForm((String) null);
      // Undeclared exception!
      try { 
        jSPredicateForm0.get((-366172151));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.7988457068767891
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StringReader stringReader0 = new StringReader("failedsubstitbton");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      SystemInUtil.addInputLine((String) null);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      streamTokenizer0.quoteChar(1004);
      streamTokenizer0.ttype = 0;
      stringReader0.skip(0);
      JSPredicateForm jSPredicateForm0 = jSTerm0.applySubstitutionPF(jSSubstitution0);
      JSTerm jSTerm1 = new JSTerm();
      jSPredicateForm0.set(0, jSTerm1);
      jSPredicateForm0.addElement("%%%");
      jSPredicateForm0.matches((JSPredicateForm) jSTerm0, (JSSubstitution) null);
      // Undeclared exception!
      try { 
        jSPredicateForm0.clonePF();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // umd.cs.shop.JSTerm cannot be cast to java.lang.String
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.039581156259877
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      StringReader stringReader0 = new StringReader("o++");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      stringReader0.markSupported();
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSPredicateForm jSPredicateForm0 = jSTerm0.clonePF();
      StringReader stringReader1 = new StringReader("o++");
      jSTerm0.standarizerPredicateForm();
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      jSTerm0.makeVariable();
      jSTerm0.equals((JSPredicateForm) null);
      jSTerm0.standarizerPredicateForm();
      StringReader stringReader2 = new StringReader("h");
      stringReader0.read();
      SystemInUtil.addInputLine("h");
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader1);
      JSSubstitution jSSubstitution2 = new JSSubstitution();
      JSSubstitution jSSubstitution3 = new JSSubstitution();
      jSSubstitution0.add((Object) jSTerm0);
      jSPredicateForm0.applySubstitutionPF(jSSubstitution3);
      JSTerm jSTerm1 = new JSTerm(streamTokenizer1);
      // Undeclared exception!
      try { 
        jSTerm1.matches((JSPredicateForm) null, jSSubstitution3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.7824268046877836
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      StringReader stringReader0 = new StringReader("o++");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      stringReader0.markSupported();
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSPredicateForm jSPredicateForm0 = jSTerm0.clonePF();
      StringReader stringReader1 = new StringReader("o++");
      Comparator<String> comparator0 = (Comparator<String>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      jSPredicateForm0.sort(comparator0);
      SystemInUtil.addInputLine("(");
      jSPredicateForm0.setSize(32);
      JSPredicateForm jSPredicateForm1 = jSTerm0.standarizerPredicateForm();
      UnaryOperator<String> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator<String> unaryOperator1 = UnaryOperator.identity();
      unaryOperator1.andThen((Function<? super String, ? extends String>) unaryOperator0);
      jSPredicateForm1.replaceAll(unaryOperator1);
      jSPredicateForm1.clone();
      // Undeclared exception!
      try { 
        jSPredicateForm0.print();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.4780709313740181
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      StringReader stringReader0 = new StringReader("o++");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      stringReader0.markSupported();
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSPredicateForm jSPredicateForm0 = jSTerm0.clonePF();
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) stringReader0;
      objectArray0[1] = (Object) stringReader0;
      objectArray0[2] = (Object) jSSubstitution0;
      objectArray0[3] = (Object) stringReader0;
      objectArray0[4] = (Object) streamTokenizer0;
      objectArray0[5] = (Object) jSTerm0;
      objectArray0[6] = (Object) jSTerm0;
      objectArray0[7] = (Object) jSSubstitution0;
      objectArray0[8] = (Object) jSSubstitution0;
      jSPredicateForm0.toArray(objectArray0);
      Comparator<String> comparator0 = (Comparator<String>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      jSPredicateForm0.setSize(32);
      jSTerm0.standarizerPredicateForm();
      // Undeclared exception!
      try { 
        jSPredicateForm0.clonePF();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.5094656225315988
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      StringReader stringReader0 = new StringReader("u8o)rJWUE;)#");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      StringReader stringReader1 = new StringReader("9.0");
      stringReader1.markSupported();
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSPredicateForm jSPredicateForm0 = jSTerm0.clonePF();
      StringReader stringReader2 = new StringReader("8.0");
      Comparator<String> comparator0 = (Comparator<String>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      jSPredicateForm0.sort(comparator0);
      jSPredicateForm0.setSize(32);
      // Undeclared exception!
      try { 
        jSPredicateForm0.standarizerPredicateForm();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.7189451615186133
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      StringReader stringReader0 = new StringReader("9|@z#Y!ukP7zt$.");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      StringReader stringReader1 = new StringReader("L~`M}mj|X");
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader1);
      stringReader0.ready();
      jSTerm0.clone();
      JSTerm jSTerm1 = new JSTerm(streamTokenizer1);
      JSPredicateForm jSPredicateForm0 = jSTerm0.clonePF();
      jSTerm0.equals(jSPredicateForm0);
      streamTokenizer0.nval = (double) (-1);
      JSPredicateForm jSPredicateForm1 = jSTerm1.clonePF();
      StringReader stringReader2 = new StringReader("L~`M}mj|X");
      stringReader1.read();
      jSTerm0.setSize(4048);
      jSPredicateForm1.clonePF();
      Object object0 = new Object();
      jSTerm0.add((Object) "L~`M}mj|X");
      // Undeclared exception!
      try { 
        jSTerm0.applySubstitutionPF(jSSubstitution0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.4659497192528061
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      String string0 = "9|@z#Y!ukP7zt$.";
      StringReader stringReader0 = new StringReader("9|@z#Y!ukP7zt$.");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      StringReader stringReader1 = new StringReader("9|@z#Y!ukP7zt$.");
      stringReader1.read();
      JSTerm jSTerm1 = new JSTerm();
      jSTerm0.clone();
      JSPredicateForm jSPredicateForm0 = jSTerm0.clonePF();
      jSPredicateForm0.print();
      StringReader stringReader2 = null;
      try {
        stringReader2 = new StringReader((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.7875550098159887
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      StringReader stringReader0 = new StringReader("9|@z#Y!ukP7zt$.");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.standarizerPredicateForm();
      JSPredicateForm jSPredicateForm0 = jSTerm0.clonePF();
      JSJshopVars.leftPar = (-2);
      jSPredicateForm0.iterator();
      jSPredicateForm0.spliterator();
      UnaryOperator.identity();
      jSPredicateForm0.toStr();
      System.setCurrentTimeMillis((-2));
      System.setCurrentTimeMillis((-2));
      long long0 = 1L;
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis((-2));
      System.setCurrentTimeMillis(8L);
      jSTerm0.removeAll(jSPredicateForm0);
      JSTerm jSTerm1 = null;
      try {
        jSTerm1 = new JSTerm(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSTerm", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.455848709151796
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      String string0 = "u8o)rJWUE;)#";
      StringReader stringReader0 = new StringReader("u8o)rJWUE;)#");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      StringReader stringReader1 = new StringReader("9.0");
      stringReader1.markSupported();
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSPredicateForm jSPredicateForm0 = jSTerm0.clonePF();
      jSPredicateForm0.setSize(41);
      StringReader stringReader2 = new StringReader("| ");
      StringReader stringReader3 = new StringReader("| ");
      // Undeclared exception!
      try { 
        jSPredicateForm0.toStr();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.7945725536756378
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      StringReader stringReader0 = new StringReader("9|@z#Y!ukP7zt$.");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      StringReader stringReader1 = new StringReader("L~`M}mj|X");
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader1);
      stringReader0.ready();
      stringReader0.markSupported();
      JSTerm jSTerm1 = (JSTerm)jSTerm0.clone();
      JSTerm jSTerm2 = new JSTerm(streamTokenizer1);
      jSTerm0.clonePF();
      jSTerm1.isEmpty();
      jSTerm2.clonePF();
      stringReader1.read();
      Object object0 = new Object();
      jSTerm0.add((Object) "L~`M}mj|X");
      jSTerm1.matches((JSPredicateForm) jSTerm2, jSSubstitution0);
      // Undeclared exception!
      try { 
        jSTerm0.applySubstitutionPF(jSSubstitution0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to umd.cs.shop.JSTerm
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Object[] objectArray0 = new Object[2];
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      Consumer<String> consumer0 = (Consumer<String>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      Consumer<Object> consumer1 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm((StreamTokenizer) null);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.5012592323783793
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      StringReader stringReader0 = new StringReader("GoW;k{Hht;rt XKI(\"");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm();
      JSTerm jSTerm1 = new JSTerm(streamTokenizer0);
      JSTerm jSTerm2 = new JSTerm(streamTokenizer0);
      jSTerm1.matches((JSPredicateForm) jSTerm2);
      JSTerm jSTerm3 = null;
      try {
        jSTerm3 = new JSTerm(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSTerm", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.0809586127392572
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SystemInUtil.addInputLine("}(EypKqUR");
      System.setCurrentTimeMillis(0L);
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      jSPredicateForm0.spliterator();
      StringReader stringReader0 = new StringReader("acV");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSPredicateForm jSPredicateForm1 = new JSPredicateForm();
      jSTerm0.equals(jSPredicateForm1);
      // Undeclared exception!
      try { 
        stringReader0.read((char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SystemInUtil.addInputLine("}(EypKqUR");
      System.setCurrentTimeMillis(0L);
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      jSPredicateForm0.spliterator();
      jSPredicateForm0.toStr();
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      SystemInUtil.addInputLine("}(EypKqUR");
      System.setCurrentTimeMillis(924L);
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      SystemInUtil.addInputLine("call");
      SystemInUtil.addInputLine("9K::");
      jSTerm0.removeAllElements();
      // Undeclared exception!
      try { 
        jSTerm0.toStr();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.286740885507357
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      StringReader stringReader0 = new StringReader("9|@z#Y!ukP7zt$.");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSPredicateForm jSPredicateForm0 = jSTerm0.standarizerPredicateForm();
      JSPredicateForm jSPredicateForm1 = jSPredicateForm0.clonePF();
      JSPredicateForm jSPredicateForm2 = (JSPredicateForm)jSPredicateForm1.clone();
      JSPredicateForm jSPredicateForm3 = jSPredicateForm0.clonePF();
      JSTerm jSTerm1 = new JSTerm();
      JSSubstitution jSSubstitution1 = jSPredicateForm1.matches(jSPredicateForm2);
      jSTerm0.equals((JSPredicateForm) jSTerm1);
      JSPredicateForm jSPredicateForm4 = jSTerm0.standarizerPredicateForm();
      jSPredicateForm3.addAll((Collection) jSPredicateForm4);
      JSSubstitution jSSubstitution2 = jSPredicateForm4.matches(jSPredicateForm3, jSSubstitution0);
      stringReader0.read();
      jSTerm0.add((Object) jSSubstitution2);
      UnaryOperator.identity();
      JSPredicateForm jSPredicateForm5 = jSPredicateForm1.applySubstitutionPF(jSSubstitution2);
      // Undeclared exception!
      try { 
        jSPredicateForm5.insertElementAt(jSSubstitution1, (-126554113));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.2890718878383596
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      StringReader stringReader0 = new StringReader("9|@z#Y!ukP7zt$.");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSPredicateForm jSPredicateForm0 = jSTerm0.standarizerPredicateForm();
      JSPredicateForm jSPredicateForm1 = jSPredicateForm0.clonePF();
      JSPredicateForm jSPredicateForm2 = (JSPredicateForm)jSPredicateForm1.clone();
      JSPredicateForm jSPredicateForm3 = jSPredicateForm0.clonePF();
      JSTerm jSTerm1 = new JSTerm();
      JSSubstitution jSSubstitution1 = jSPredicateForm1.matches(jSPredicateForm2);
      jSTerm1.makeVariable();
      jSTerm0.equals((JSPredicateForm) jSTerm1);
      JSPredicateForm jSPredicateForm4 = jSTerm0.standarizerPredicateForm();
      JSSubstitution jSSubstitution2 = jSPredicateForm4.matches(jSPredicateForm3, jSSubstitution0);
      stringReader0.read();
      UnaryOperator.identity();
      JSPredicateForm jSPredicateForm5 = jSPredicateForm1.applySubstitutionPF(jSSubstitution2);
      jSPredicateForm5.matches((JSPredicateForm) jSTerm1, jSSubstitution1);
      // Undeclared exception!
      try { 
        jSTerm1.clonePF();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      StringReader stringReader0 = new StringReader("Expecting variable nam i trm");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      // Undeclared exception!
      try { 
        jSTerm0.matches((JSPredicateForm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.7842068034002125
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      StringReader stringReader0 = new StringReader("jg.ZN4TV");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.standarizerPredicateForm();
      streamTokenizer0.quoteChar((-1740));
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      streamTokenizer1.quoteChar(3958);
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm(streamTokenizer1);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.714368502479712
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      StringReader stringReader0 = new StringReader("9|@z#Y!ukP7zt$.");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      StringReader stringReader1 = new StringReader("L~`M}mj|X");
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader1);
      stringReader0.ready();
      jSTerm0.clone();
      JSTerm jSTerm1 = new JSTerm(streamTokenizer1);
      JSPredicateForm jSPredicateForm0 = jSTerm0.clonePF();
      jSTerm0.equals(jSPredicateForm0);
      jSTerm1.clonePF();
      StringReader stringReader2 = new StringReader("L~`M}mj|X");
      stringReader1.read();
      Object object0 = new Object();
      jSTerm0.add((Object) "L~`M}mj|X");
      // Undeclared exception!
      try { 
        jSTerm0.applySubstitutionPF(jSSubstitution0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to umd.cs.shop.JSTerm
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.023779764724312
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      StringReader stringReader0 = new StringReader("GoW;k{Hht;rt XKI(\"");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      stringReader0.markSupported();
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.clonePF();
      JSJshopVars.exclamation = 32;
      StringReader stringReader1 = new StringReader("GoW;k{Hht;rt XKI(\"");
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      stringReader1.ready();
      jSTerm0.clone();
      JSTerm jSTerm1 = new JSTerm(streamTokenizer1);
      jSTerm0.equals((JSPredicateForm) jSTerm1);
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm("GoW;k{Hht;rt XKI(\"");
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.5012592323783793
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      jSPredicateForm0.equals((JSPredicateForm) null);
      JSJshopVars.equalT = 33;
      StringReader stringReader0 = new StringReader("Expecting variable nam i trm");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      jSPredicateForm0.clone();
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.equals((JSPredicateForm) null);
      jSTerm0.clonePF();
      StringReader stringReader1 = null;
      try {
        stringReader1 = new StringReader((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("Expecting variable name in term");
      stringReader1.read();
      stringReader0.read();
      StringReader stringReader2 = new StringReader("gow;khht;rt");
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      System.setCurrentTimeMillis(2579L);
      JSTerm jSTerm0 = new JSTerm();
      // Undeclared exception!
      try { 
        jSTerm0.equals(jSPredicateForm0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      StringReader stringReader0 = new StringReader("(\"kwn>");
      Object[] objectArray0 = new Object[2];
      objectArray0[1] = (Object) "(\"kwn>";
      stringReader0.skip(0L);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      Consumer<String> consumer0 = (Consumer<String>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      Consumer<Object> consumer1 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      Consumer<String> consumer2 = (Consumer<String>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      jSSubstitution0.forEach(consumer2);
      stringReader0.close();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm(streamTokenizer0);
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      StringReader stringReader0 = new StringReader("h");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      // Undeclared exception!
      try { 
        jSTerm0.JSPredicateFormInit(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.5012592323783793
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      StringReader stringReader0 = new StringReader("jg.ZN4TV");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.makeVariable();
      streamTokenizer0.eolIsSignificant(false);
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      JSSubstitution jSSubstitution0 = jSPredicateForm0.matches((JSPredicateForm) jSTerm0);
      JSTerm jSTerm1 = new JSTerm();
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      // Undeclared exception!
      try { 
        jSPredicateForm0.matches((JSPredicateForm) jSTerm1, jSSubstitution0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Object[] objectArray0 = new Object[2];
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      Consumer<String> consumer0 = (Consumer<String>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      Consumer<Object> consumer1 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      Consumer<String> consumer2 = (Consumer<String>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      jSSubstitution0.forEach(consumer2);
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      // Undeclared exception!
      try { 
        jSPredicateForm0.applySubstitutionPF(jSSubstitution0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      StringReader stringReader0 = new StringReader("(\"kwn>");
      Object[] objectArray0 = new Object[2];
      objectArray0[1] = (Object) "(\"kwn>";
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      Consumer<String> consumer0 = (Consumer<String>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      Consumer<Object> consumer1 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      Consumer<String> consumer2 = (Consumer<String>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm((String) null);
      JSJshopVars.verticalL = (-2028306831);
      Object object0 = jSPredicateForm0.clone();
      jSPredicateForm0.print();
      jSPredicateForm0.print();
      assertNotSame(jSPredicateForm0, object0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      UnaryOperator<Integer> unaryOperator0 = UnaryOperator.identity();
      Integer integer0 = new Integer((-1112680239));
      Integer integer1 = new Integer((-1112680239));
      UnaryOperator<Integer> unaryOperator1 = UnaryOperator.identity();
      unaryOperator0.andThen((Function<? super Integer, ? extends Integer>) unaryOperator1);
      Integer integer2 = new Integer((-1112680239));
      jSPredicateForm0.replaceAll(unaryOperator0);
      Object object0 = jSPredicateForm0.clone();
      jSPredicateForm0.print();
      assertNotSame(jSPredicateForm0, object0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      JSPredicateForm jSPredicateForm1 = (JSPredicateForm)jSPredicateForm0.clone();
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis(1L);
      // Undeclared exception!
      try { 
        jSPredicateForm1.matches(jSPredicateForm0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.810684261516669
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      StringReader stringReader0 = new StringReader("GoW;k{Hht;rt XKI(\"");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSPredicateForm jSPredicateForm0 = jSTerm0.standarizerPredicateForm();
      JSPredicateForm jSPredicateForm1 = jSTerm0.clonePF();
      jSTerm0.standarizerPredicateForm();
      JSTerm jSTerm1 = new JSTerm();
      jSPredicateForm1.clonePF();
      JSPredicateForm jSPredicateForm2 = jSPredicateForm0.standarizerPredicateForm();
      JSTerm jSTerm2 = new JSTerm(streamTokenizer0);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSPredicateForm2.applySubstitutionPF(jSSubstitution0);
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      JSTerm jSTerm3 = new JSTerm();
      JSPredicateForm jSPredicateForm3 = jSTerm0.standarizerPredicateForm();
      jSPredicateForm2.clonePF();
      jSTerm2.add((Object) streamTokenizer0);
      jSPredicateForm3.applySubstitutionPF(jSSubstitution1);
      // Undeclared exception!
      try { 
        jSTerm2.standarizerPredicateForm();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.io.StreamTokenizer cannot be cast to umd.cs.shop.JSTerm
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      // Undeclared exception!
      try { 
        jSTerm0.standarizerPredicateForm();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      SystemInUtil.addInputLine("}(EypKqUR");
      UnaryOperator<Integer> unaryOperator0 = UnaryOperator.identity();
      Integer integer0 = new Integer((-1718654355));
      unaryOperator0.apply(integer0);
      Integer integer1 = new Integer((-626));
      Integer integer2 = new Integer(1);
      unaryOperator0.apply(integer1);
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.replaceAll(unaryOperator0);
      jSTerm0.clone();
      // Undeclared exception!
      try { 
        jSTerm0.print();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.8293230219306162
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      String string0 = "(kwn>";
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm("(kwn>");
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.7488320958430319
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      StringReader stringReader0 = new StringReader("(\"kwn>");
      SystemInUtil.addInputLine("GigURf0~");
      Object[] objectArray0 = new Object[2];
      objectArray0[1] = (Object) "(\"kwn>";
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      Consumer<String> consumer0 = (Consumer<String>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      Consumer<Object> consumer1 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      Consumer<String> consumer2 = (Consumer<String>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      jSSubstitution0.forEach(consumer2);
      SystemInUtil.addInputLine("(\"kwn>");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }
}
