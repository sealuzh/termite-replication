/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 16:01:55 GMT 2019
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.070120915230914
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.mod();
      xPathLexer0.rightParen();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.or();
      xPathLexer0.leftBracket();
      xPathLexer0.whitespace();
      xPathLexer0.at();
      xPathLexer0.rightBracket();
      xPathLexer0.dots();
      xPathLexer0.star();
      xPathLexer0.minus();
      xPathLexer0.setXPath(") (");
      xPathLexer0.pipe();
      xPathLexer0.operatorName();
      xPathLexer0.minus();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.comma();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.rightParen();
      xPathLexer1.setXPath("Vo\"Q}nv]QaG");
      xPathLexer1.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer(") (");
      xPathLexer1.mod();
      xPathLexer0.and();
      XPathLexer xPathLexer4 = new XPathLexer("fD}f");
      xPathLexer3.nextToken();
      xPathLexer3.isIdentifierChar('L');
      xPathLexer3.getPreviousToken();
      Token token0 = xPathLexer1.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.2685166131976793
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("wn>!1H3");
      xPathLexer0.whitespace();
      xPathLexer0.rightParen();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.or();
      xPathLexer0.leftBracket();
      xPathLexer0.at();
      xPathLexer0.rightBracket();
      xPathLexer0.dots();
      xPathLexer0.minus();
      xPathLexer0.setXPath("Vo\"Q}nv]QaG");
      XPathLexer xPathLexer1 = new XPathLexer("wn>!1H3");
      xPathLexer1.pipe();
      xPathLexer1.div();
      xPathLexer0.operatorName();
      xPathLexer0.minus();
      xPathLexer1.comma();
      xPathLexer1.rightParen();
      xPathLexer0.setXPath("wn>!1H3");
      xPathLexer1.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer("wn>!1H3");
      xPathLexer1.mod();
      xPathLexer1.and();
      XPathLexer xPathLexer3 = new XPathLexer(",,!");
      xPathLexer1.nextToken();
      boolean boolean0 = xPathLexer3.isIdentifierChar('O');
      assertTrue(boolean0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.8410861129046323
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("wn>!1H3");
      Token token0 = xPathLexer0.whitespace();
      assertEquals("", token0.getTokenText());
      assertEquals((-2), token0.getTokenType());
      
      Token token1 = xPathLexer0.dots();
      token1.toString();
      Token token2 = xPathLexer0.leftBracket();
      xPathLexer0.nextToken();
      String string0 = token1.toString();
      assertEquals("[ (13) (n)", string0);
      
      String string1 = token2.toString();
      assertEquals("[ (3) (>)", string1);
      
      Token token3 = xPathLexer0.star();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token4 = xPathLexer1.comma();
      assertEquals(32, token4.getTokenType());
      
      xPathLexer1.setXPath("UHBH- v");
      Token token5 = xPathLexer0.getPreviousToken();
      assertEquals(23, token5.getTokenType());
      assertEquals("!", token5.getTokenText());
      
      Token token6 = xPathLexer0.number();
      assertEquals(30, token6.getTokenType());
      assertEquals("", token6.getTokenText());
      
      xPathLexer1.rightBracket();
      xPathLexer0.and();
      char char0 = xPathLexer0.LA(0);
      assertEquals('1', char0);
      
      Token token7 = xPathLexer0.plus();
      assertEquals("H", token7.getTokenText());
      assertEquals(5, token7.getTokenType());
      
      xPathLexer1.isIdentifierStartChar('1');
      Token token8 = xPathLexer1.colon();
      assertEquals(18, token8.getTokenType());
      assertEquals("H", token8.getTokenText());
      
      Token token9 = xPathLexer1.dollar();
      assertEquals(26, token9.getTokenType());
      assertEquals("B", token9.getTokenText());
      
      xPathLexer0.getXPath();
      Token token10 = xPathLexer0.minus();
      assertEquals(6, token10.getTokenType());
      assertEquals("3", token10.getTokenText());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(7, int0);
      
      xPathLexer0.leftBracket();
      xPathLexer0.and();
      Token token11 = xPathLexer0.at();
      assertEquals(16, token11.getTokenType());
      
      xPathLexer0.getXPath();
      xPathLexer0.nextToken();
      Token token12 = xPathLexer0.rightBracket();
      assertEquals(4, token12.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.setPreviousToken(token3);
      assertEquals(20, token3.getTokenType());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.8857700785266607
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("wn>!1H3");
      Token token0 = xPathLexer0.whitespace();
      xPathLexer0.comma();
      Token token1 = xPathLexer0.leftBracket();
      xPathLexer0.nextToken();
      token1.toString();
      token1.toString();
      xPathLexer0.star();
      token0.toString();
      xPathLexer0.operatorName();
      xPathLexer0.minus();
      xPathLexer0.comma();
      xPathLexer0.rightParen();
      xPathLexer0.setXPath("[ (3) (>)");
      xPathLexer0.star();
      xPathLexer0.minus();
      xPathLexer0.comma();
      xPathLexer0.rightParen();
      xPathLexer0.setXPath("wn>!1H3");
      xPathLexer0.nextToken();
      xPathLexer0.mod();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.and();
      xPathLexer1.nextToken();
      xPathLexer1.getXPath();
      Token token2 = xPathLexer1.operatorName();
      assertNull(token2);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.7682944117976493
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.identifier();
      xPathLexer0.setXPath("com.werken.saxpath.XPathLexer");
      xPathLexer0.relationalOperator();
      xPathLexer0.dots();
      xPathLexer0.or();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.relationalOperator();
      xPathLexer0.mod();
      xPathLexer0.isIdentifierChar('D');
      xPathLexer0.mod();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.setXPath("@g;N]Xga3");
      xPathLexer1.comma();
      xPathLexer0.plus();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer2.colon();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer("");
      xPathLexer3.mod();
      xPathLexer1.and();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.isIdentifierChar('n');
      Token token0 = xPathLexer0.leftParen();
      assertEquals(1, token0.getTokenType());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.9522632366827257
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("_R'(x7jy^K-ox");
      xPathLexer0.setXPath("_R'(x7jy^K-ox");
      Token token0 = xPathLexer0.slashes();
      token0.toString();
      token0.toString();
      token0.toString();
      xPathLexer0.div();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.star();
      assertEquals(20, token2.getTokenType());
      assertEquals("R", token2.getTokenText());
      
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (11) ()", string0);
      
      xPathLexer0.slashes();
      xPathLexer0.minus();
      xPathLexer0.setPreviousToken(token0);
      XPathLexer xPathLexer1 = new XPathLexer("[ (11) ()");
      Token token3 = xPathLexer1.pipe();
      assertEquals("[", token3.getTokenText());
      
      Token token4 = xPathLexer1.minus();
      assertEquals(6, token4.getTokenType());
      assertEquals(" ", token4.getTokenText());
      
      Token token5 = xPathLexer1.pipe();
      assertEquals(17, token5.getTokenType());
      
      Token token6 = xPathLexer1.dollar();
      assertEquals("1", token6.getTokenText());
      
      xPathLexer1.setXPath("[ (11) ()");
      Token token7 = xPathLexer0.nextToken();
      assertEquals(15, token7.getTokenType());
      assertEquals("x7jy", token7.getTokenText());
      
      xPathLexer1.hasMoreChars();
      Token token8 = xPathLexer0.leftBracket();
      assertEquals("^", token8.getTokenText());
      assertEquals(3, token8.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token9 = xPathLexer2.dollar();
      assertEquals(26, token9.getTokenType());
      
      xPathLexer2.mod();
      int int0 = xPathLexer1.endPosition();
      assertEquals(10, int0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.147905004525108
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.colon();
      assertEquals(18, token0.getTokenType());
      
      xPathLexer0.rightParen();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.or();
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      
      Token token2 = xPathLexer0.whitespace();
      assertEquals((-2), token2.getTokenType());
      
      Token token3 = xPathLexer0.at();
      assertEquals(16, token3.getTokenType());
      
      Token token4 = xPathLexer0.rightBracket();
      assertEquals(4, token4.getTokenType());
      
      Token token5 = xPathLexer0.dots();
      assertEquals(13, token5.getTokenType());
      
      Token token6 = xPathLexer0.star();
      assertEquals(20, token6.getTokenType());
      
      xPathLexer0.minus();
      xPathLexer0.setXPath("Vo\"Q}nv]QaG");
      Token token7 = xPathLexer0.pipe();
      assertEquals(17, token7.getTokenType());
      assertEquals("V", token7.getTokenText());
      
      xPathLexer0.operatorName();
      xPathLexer0.minus();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token8 = xPathLexer0.comma();
      assertEquals("\"", token8.getTokenText());
      assertEquals(32, token8.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token9 = xPathLexer0.rightParen();
      assertEquals("Q", token9.getTokenText());
      assertEquals(2, token9.getTokenType());
      
      xPathLexer2.setXPath("Vo\"Q}nv]QaG");
      xPathLexer1.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer("Vo\"Q}nv]QaG");
      xPathLexer3.mod();
      xPathLexer0.and();
      XPathLexer xPathLexer4 = new XPathLexer("PJf(O");
      Token token10 = xPathLexer4.nextToken();
      assertEquals("PJf", token10.getTokenText());
      assertEquals(15, token10.getTokenType());
      
      boolean boolean0 = xPathLexer2.isIdentifierChar('L');
      assertTrue(boolean0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.7269628814089004
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("x}HG 2VX\u0002XGY>$G`/");
      xPathLexer0.equals();
      xPathLexer0.equals();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.star();
      assertEquals(20, token1.getTokenType());
      assertEquals(" ", token1.getTokenText());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.relationalOperator();
      xPathLexer0.mod();
      XPathLexer xPathLexer1 = new XPathLexer("x}HG 2VX\u0002XGY>$G`/");
      xPathLexer1.isIdentifierChar('D');
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.mod();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.setXPath("com.werken.saxpath.XPathLexer");
      xPathLexer0.comma();
      Token token2 = xPathLexer1.plus();
      assertEquals(5, token2.getTokenType());
      assertEquals("x", token2.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer(" SAwL;y,%5j^F{$Ux");
      Token token3 = xPathLexer0.colon();
      assertEquals("2", token3.getTokenText());
      assertEquals(18, token3.getTokenType());
      
      xPathLexer0.identifier();
      xPathLexer3.consume();
      Token token4 = xPathLexer0.nextToken();
      assertEquals(">", token4.getTokenText());
      assertEquals(9, token4.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token5 = xPathLexer5.comma();
      assertEquals(32, token5.getTokenType());
      
      xPathLexer4.isIdentifierChar('*');
      XPathLexer xPathLexer6 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token6 = xPathLexer6.not();
      assertEquals("c", token6.getTokenText());
      assertEquals(23, token6.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer(" SAwL;y,%5j^F{$Ux");
      xPathLexer7.operatorName();
      Token token7 = xPathLexer0.equals();
      assertEquals(21, token7.getTokenType());
      assertEquals("$", token7.getTokenText());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.7703520150296057
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/'0vFT");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.plus();
      assertEquals("/", token0.getTokenText());
      assertEquals(5, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftBracket();
      Token token2 = xPathLexer0.nextToken();
      String string0 = token1.toString();
      assertEquals("[ (3) (')", string0);
      
      String string1 = token2.toString();
      assertEquals("[ (30) (0)", string1);
      
      Token token3 = xPathLexer0.star();
      String string2 = token3.toString();
      assertEquals("[ (20) (v)", string2);
      
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token4 = xPathLexer1.minus();
      assertEquals(6, token4.getTokenType());
      
      Token token5 = xPathLexer1.rightParen();
      assertEquals(2, token5.getTokenType());
      
      xPathLexer1.setXPath("[ (3) (')");
      xPathLexer1.nextToken();
      xPathLexer1.mod();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.and();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token6 = xPathLexer1.nextToken();
      assertEquals("(", token6.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.getXPath();
      xPathLexer4.operatorName();
      xPathLexer4.star();
      Token token7 = xPathLexer4.whitespace();
      assertEquals((-2), token7.getTokenType());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.8101067596835914
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("wn>!1H3");
      xPathLexer0.whitespace();
      xPathLexer0.dots();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.slashes();
      xPathLexer0.rightParen();
      XPathLexer xPathLexer2 = new XPathLexer("0#n*{?c?XJ#");
      xPathLexer2.dots();
      xPathLexer0.whitespace();
      xPathLexer2.star();
      xPathLexer1.comma();
      xPathLexer1.star();
      xPathLexer1.pipe();
      xPathLexer2.whitespace();
      xPathLexer0.dollar();
      xPathLexer0.setXPath("wn>!1H3");
      xPathLexer0.nextToken();
      xPathLexer2.mod();
      xPathLexer2.and();
      xPathLexer1.plus();
      XPathLexer xPathLexer3 = new XPathLexer();
      boolean boolean0 = xPathLexer1.isIdentifierChar('6');
      assertTrue(boolean0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.9086857276329798
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/'0vFT");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      assertEquals("/", token0.getTokenText());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals("'", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
      
      Token token2 = xPathLexer0.rightParen();
      assertEquals("0", token2.getTokenText());
      assertEquals(2, token2.getTokenType());
      
      Token token3 = xPathLexer0.dots();
      assertEquals("v", token3.getTokenText());
      assertEquals(13, token3.getTokenType());
      
      xPathLexer0.whitespace();
      Token token4 = xPathLexer0.star();
      assertEquals("T", token4.getTokenText());
      
      Token token5 = xPathLexer0.comma();
      assertEquals(32, token5.getTokenType());
      
      Token token6 = xPathLexer0.star();
      assertEquals(20, token6.getTokenType());
      
      Token token7 = xPathLexer0.pipe();
      assertEquals(17, token7.getTokenType());
      
      Token token8 = xPathLexer0.whitespace();
      assertEquals("", token8.getTokenText());
      assertEquals((-2), token8.getTokenType());
      
      xPathLexer0.dollar();
      xPathLexer0.setXPath("");
      Token token9 = xPathLexer0.nextToken();
      assertEquals((-1), token9.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.and();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.isIdentifierChar('<');
      xPathLexer1.relationalOperator();
      Token token10 = xPathLexer0.identifier();
      assertEquals(15, token10.getTokenType());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.7983490771326474
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.notEquals();
      xPathLexer0.identifier();
      xPathLexer0.setXPath("com.werken.saxpath.XPathLexer");
      xPathLexer0.relationalOperator();
      xPathLexer0.dots();
      xPathLexer0.dots();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.relationalOperator();
      xPathLexer0.mod();
      xPathLexer0.isIdentifierChar('D');
      xPathLexer0.mod();
      xPathLexer0.not();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.setXPath("@g;N]Xga3");
      xPathLexer1.comma();
      xPathLexer0.plus();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer2.colon();
      xPathLexer2.identifier();
      xPathLexer2.relationalOperator();
      xPathLexer2.pipe();
      xPathLexer1.consume();
      xPathLexer1.nextToken();
      xPathLexer2.comma();
      XPathLexer xPathLexer3 = new XPathLexer("");
      xPathLexer3.leftBracket();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer3.dollar();
      Token token0 = xPathLexer3.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.922343084815671
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      
      xPathLexer0.or();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.rightBracket();
      XPathLexer xPathLexer3 = new XPathLexer("[ (");
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      
      xPathLexer1.minus();
      xPathLexer2.setXPath("com.werken.saxpath.Token");
      Token token3 = xPathLexer3.pipe();
      assertEquals("[", token3.getTokenText());
      assertEquals(17, token3.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer0.plus();
      xPathLexer2.operatorName();
      Token token4 = xPathLexer0.minus();
      assertEquals(6, token4.getTokenType());
      
      Token token5 = xPathLexer4.comma();
      assertEquals(32, token5.getTokenType());
      
      Token token6 = xPathLexer2.rightParen();
      assertEquals(2, token6.getTokenType());
      assertEquals("c", token6.getTokenText());
      
      xPathLexer4.setXPath("2?^^U`<Gu itZVJYm");
      xPathLexer2.nextToken();
      xPathLexer4.mod();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.and();
      XPathLexer xPathLexer6 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token7 = xPathLexer6.nextToken();
      assertEquals("com.werken.saxpath.XPathLexer", token7.getTokenText());
      assertEquals(15, token7.getTokenType());
      
      xPathLexer3.isIdentifierChar('Q');
      xPathLexer4.isIdentifierChar('Q');
      Token token8 = xPathLexer0.doubleColon();
      assertEquals(19, token8.getTokenType());
      
      Token token9 = xPathLexer2.rightBracket();
      assertEquals(4, token9.getTokenType());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.075803621850849
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.colon();
      assertEquals(18, token0.getTokenType());
      
      xPathLexer0.rightParen();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.or();
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
      
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(4, token3.getTokenType());
      
      Token token4 = xPathLexer0.dots();
      assertEquals(13, token4.getTokenType());
      
      xPathLexer0.minus();
      xPathLexer0.setXPath("snh8wD");
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token5 = xPathLexer0.pipe();
      assertEquals("s", token5.getTokenText());
      assertEquals(17, token5.getTokenType());
      
      xPathLexer1.div();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.rightParen();
      xPathLexer2.operatorName();
      Token token6 = xPathLexer1.minus();
      assertEquals(6, token6.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.comma();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.operatorName();
      Token token7 = xPathLexer4.rightParen();
      assertEquals(2, token7.getTokenType());
      
      xPathLexer3.setXPath("snh8wD");
      Token token8 = xPathLexer3.nextToken();
      assertEquals("snh8wD", token8.getTokenText());
      assertEquals(15, token8.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("");
      xPathLexer3.mod();
      xPathLexer0.and();
      XPathLexer xPathLexer6 = new XPathLexer("Vo\"Q}nv]QaG");
      Token token9 = xPathLexer3.nextToken();
      assertEquals("", token9.getTokenText());
      
      boolean boolean0 = xPathLexer6.isIdentifierChar('O');
      assertTrue(boolean0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.932474922582763
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("x}HG 2VX\u0002XGY>$G`/");
      Token token0 = xPathLexer0.at();
      assertEquals(16, token0.getTokenType());
      assertEquals("x", token0.getTokenText());
      
      xPathLexer0.equals();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.star();
      assertEquals(20, token2.getTokenType());
      assertEquals(" ", token2.getTokenText());
      
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.and();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.setXPath("[ (");
      Token token3 = xPathLexer2.comma();
      assertEquals("[", token3.getTokenText());
      
      Token token4 = xPathLexer0.plus();
      assertEquals(5, token4.getTokenType());
      
      Token token5 = xPathLexer2.colon();
      assertEquals(" ", token5.getTokenText());
      assertEquals(18, token5.getTokenType());
      
      xPathLexer2.slashes();
      xPathLexer2.consume();
      Token token6 = xPathLexer0.nextToken();
      assertEquals(30, token6.getTokenType());
      assertEquals("2", token6.getTokenText());
      
      Token token7 = xPathLexer1.comma();
      assertEquals(32, token7.getTokenType());
      
      boolean boolean0 = xPathLexer2.isIdentifierChar('9');
      assertTrue(boolean0);
      
      Token token8 = xPathLexer1.not();
      assertEquals(23, token8.getTokenType());
      
      xPathLexer1.getPreviousToken();
      xPathLexer2.identifierOrOperatorName();
      Token token9 = xPathLexer0.slashes();
      assertEquals("V", token9.getTokenText());
      
      xPathLexer2.getPreviousToken();
      Token token10 = xPathLexer0.equals();
      assertEquals(21, token10.getTokenType());
      assertEquals("X", token10.getTokenText());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.8949426956163016
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.slashes();
      xPathLexer0.or();
      xPathLexer0.whitespace();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.at();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.rightBracket();
      XPathLexer xPathLexer3 = new XPathLexer("[ (");
      xPathLexer0.dots();
      Token token0 = xPathLexer1.minus();
      xPathLexer2.setXPath("");
      xPathLexer3.pipe();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer0.plus();
      xPathLexer2.operatorName();
      xPathLexer0.minus();
      xPathLexer4.comma();
      xPathLexer2.rightParen();
      xPathLexer4.setXPath("2?^^U`<Gu itZVJYm");
      xPathLexer1.setXPath("2?^^U`<Gu itZVJYm");
      xPathLexer2.nextToken();
      xPathLexer4.mod();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.and();
      xPathLexer4.nextToken();
      xPathLexer4.getXPath();
      xPathLexer1.operatorName();
      Token token1 = xPathLexer0.notEquals();
      assertFalse(token1.equals((Object)token0));
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.5628989265532751
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("wn>!1H3");
      Token token0 = xPathLexer0.star();
      assertEquals(20, token0.getTokenType());
      assertEquals("w", token0.getTokenText());
      
      Token token1 = xPathLexer0.dots();
      assertEquals("n", token1.getTokenText());
      
      Token token2 = xPathLexer0.leftBracket();
      xPathLexer0.nextToken();
      token2.toString();
      String string0 = token2.toString();
      assertEquals("[ (3) (>)", string0);
      
      xPathLexer0.setPreviousToken(token2);
      Token token3 = xPathLexer0.not();
      assertEquals("1", token3.getTokenText());
      assertEquals(23, token3.getTokenType());
      
      xPathLexer0.number();
      Token token4 = xPathLexer0.plus();
      assertEquals("H", token4.getTokenText());
      assertEquals(5, token4.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.and();
      Token token5 = xPathLexer0.nextToken();
      assertEquals(30, token5.getTokenType());
      assertEquals("3", token5.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      boolean boolean0 = xPathLexer1.isIdentifierChar('d');
      assertTrue(boolean0);
      
      Token token6 = xPathLexer1.dots();
      assertEquals(13, token6.getTokenType());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.0819135483808062
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("^!.Hc!0+q3");
      xPathLexer0.setXPath("wn>!1H3");
      Token token0 = xPathLexer0.doubleColon();
      token0.toString();
      token0.toString();
      token0.toString();
      xPathLexer0.div();
      Token token1 = xPathLexer0.relationalOperator();
      token1.toString();
      token0.toString();
      token1.toString();
      token0.toString();
      Token token2 = xPathLexer0.whitespace();
      token1.toString();
      xPathLexer0.star();
      token1.toString();
      token2.toString();
      xPathLexer0.slashes();
      xPathLexer0.minus();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.pipe();
      xPathLexer0.minus();
      xPathLexer0.pipe();
      xPathLexer0.dollar();
      xPathLexer0.colon();
      xPathLexer0.pipe();
      xPathLexer0.getXPath();
      xPathLexer0.number();
      xPathLexer0.getXPath();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token3 = xPathLexer1.operatorName();
      assertNull(token3);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.87627013774151
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Fq0{<4(Ku>A@8");
      xPathLexer0.rightParen();
      Token token0 = xPathLexer0.minus();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.doubleColon();
      xPathLexer0.dollar();
      xPathLexer0.rightParen();
      xPathLexer0.slashes();
      xPathLexer0.mod();
      xPathLexer0.rightParen();
      xPathLexer0.LA(3221);
      xPathLexer0.dollar();
      xPathLexer0.rightBracket();
      xPathLexer0.endPosition();
      xPathLexer0.comma();
      xPathLexer0.rightParen();
      xPathLexer0.setXPath("Fq0{<4(Ku>A@8");
      xPathLexer0.nextToken();
      xPathLexer0.mod();
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.rightParen();
      xPathLexer0.nextToken();
      boolean boolean0 = xPathLexer0.isIdentifierChar('d');
      assertTrue(boolean0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.2218852066299695
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.colon();
      xPathLexer0.rightParen();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.or();
      xPathLexer0.leftBracket();
      xPathLexer0.whitespace();
      xPathLexer0.at();
      xPathLexer0.rightBracket();
      xPathLexer0.dots();
      xPathLexer0.star();
      xPathLexer0.minus();
      xPathLexer0.setXPath("Vo\"Q}nv]QaG");
      xPathLexer0.pipe();
      xPathLexer0.operatorName();
      xPathLexer0.minus();
      xPathLexer0.comma();
      xPathLexer0.rightParen();
      xPathLexer0.doubleColon();
      xPathLexer0.identifier();
      xPathLexer0.notEquals();
      xPathLexer0.nextToken();
      xPathLexer0.hasMoreChars();
      xPathLexer0.leftBracket();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.dollar();
      Token token0 = xPathLexer1.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.672606408287727
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.slashes();
      xPathLexer0.or();
      xPathLexer0.whitespace();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token0 = xPathLexer0.at();
      assertEquals(16, token0.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.rightBracket();
      XPathLexer xPathLexer3 = new XPathLexer("[ (");
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      
      Token token2 = xPathLexer1.minus();
      assertEquals(6, token2.getTokenType());
      
      xPathLexer2.setXPath("com.werken.saxpath.Token");
      Token token3 = xPathLexer3.pipe();
      assertEquals("[", token3.getTokenText());
      assertEquals(17, token3.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token4 = xPathLexer0.plus();
      assertEquals(5, token4.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("");
      Token token5 = xPathLexer5.nextToken();
      assertEquals((-1), token5.getTokenType());
      
      xPathLexer1.mod();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer2.and();
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token6 = xPathLexer2.slashes();
      assertEquals("c", token6.getTokenText());
      assertEquals(11, token6.getTokenType());
      
      Token token7 = xPathLexer3.nextToken();
      assertEquals("(", token7.getTokenText());
      assertEquals(1, token7.getTokenType());
      
      xPathLexer4.or();
      Token token8 = xPathLexer4.rightBracket();
      assertEquals(4, token8.getTokenType());
      
      Token token9 = xPathLexer0.comma();
      assertEquals(32, token9.getTokenType());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.7184930042903095
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("wn>!1H3");
      Token token0 = xPathLexer0.whitespace();
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      
      Token token2 = xPathLexer0.leftBracket();
      Token token3 = xPathLexer0.nextToken();
      assertEquals("!", token3.getTokenText());
      assertEquals(23, token3.getTokenType());
      
      token2.toString();
      String string0 = token2.toString();
      assertEquals("[ (3) (>)", string0);
      
      Token token4 = xPathLexer0.star();
      assertEquals(20, token4.getTokenType());
      assertEquals("1", token4.getTokenText());
      
      String string1 = token0.toString();
      assertEquals("[ (-2) ()", string1);
      
      xPathLexer0.operatorName();
      Token token5 = xPathLexer0.minus();
      assertEquals(6, token5.getTokenType());
      assertEquals("H", token5.getTokenText());
      
      xPathLexer0.comma();
      Token token6 = xPathLexer0.rightParen();
      assertEquals(2, token6.getTokenType());
      
      xPathLexer0.setXPath("[ (3) (>)");
      xPathLexer0.nextToken();
      xPathLexer0.mod();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.and();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token7 = xPathLexer2.slashes();
      assertEquals(11, token7.getTokenType());
      
      Token token8 = xPathLexer0.nextToken();
      assertEquals("(", token8.getTokenText());
      
      xPathLexer0.or();
      xPathLexer2.rightBracket();
      Token token9 = xPathLexer0.comma();
      assertEquals(32, token9.getTokenType());
      assertEquals("3", token9.getTokenText());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.1227782941390814
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.at();
      xPathLexer0.rightParen();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.or();
      xPathLexer0.not();
      xPathLexer0.rightBracket();
      xPathLexer0.dots();
      xPathLexer0.star();
      xPathLexer0.minus();
      xPathLexer0.setXPath("Vo\"Q}nv]QaG");
      xPathLexer0.pipe();
      xPathLexer0.div();
      xPathLexer0.operatorName();
      xPathLexer0.minus();
      xPathLexer0.comma();
      xPathLexer0.doubleColon();
      xPathLexer0.identifier();
      xPathLexer0.nextToken();
      xPathLexer0.hasMoreChars();
      xPathLexer0.leftBracket();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.dollar();
      Token token0 = xPathLexer1.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.8338197904179458
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/'0vFT");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      assertEquals("/", token0.getTokenText());
      
      xPathLexer0.slashes();
      Token token1 = xPathLexer0.rightParen();
      assertEquals("0", token1.getTokenText());
      assertEquals(2, token1.getTokenType());
      
      Token token2 = xPathLexer0.dots();
      assertEquals("v", token2.getTokenText());
      assertEquals(13, token2.getTokenType());
      
      Token token3 = xPathLexer0.whitespace();
      assertEquals("", token3.getTokenText());
      
      xPathLexer0.star();
      Token token4 = xPathLexer0.comma();
      assertEquals(32, token4.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token5 = xPathLexer1.star();
      assertEquals(20, token5.getTokenType());
      
      Token token6 = xPathLexer0.pipe();
      assertEquals(17, token6.getTokenType());
      
      Token token7 = xPathLexer1.whitespace();
      assertEquals((-2), token7.getTokenType());
      
      xPathLexer1.dollar();
      xPathLexer0.setXPath("/'0vFT");
      Token token8 = xPathLexer0.nextToken();
      assertEquals(11, token8.getTokenType());
      assertEquals("/", token8.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.mod();
      xPathLexer2.and();
      Token token9 = xPathLexer0.nextToken();
      assertEquals((-1), token9.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token10 = xPathLexer3.literal();
      assertNull(token10);
      
      boolean boolean0 = xPathLexer1.isIdentifierChar('d');
      assertTrue(boolean0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.054307484823563
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("_R'(x7jy^K-ox");
      xPathLexer0.setXPath("_R'(x7jy^K-ox");
      Token token0 = xPathLexer0.doubleColon();
      token0.toString();
      token0.toString();
      token0.toString();
      xPathLexer0.div();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      xPathLexer0.whitespace();
      Token token1 = xPathLexer0.star();
      assertEquals("'", token1.getTokenText());
      assertEquals(20, token1.getTokenType());
      
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (19) (_)", string0);
      
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      assertEquals("(", token2.getTokenText());
      
      Token token3 = xPathLexer0.minus();
      assertEquals("x", token3.getTokenText());
      
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.pipe();
      Token token4 = xPathLexer0.minus();
      assertEquals(6, token4.getTokenType());
      
      xPathLexer0.pipe();
      Token token5 = xPathLexer0.whitespace();
      assertEquals((-2), token5.getTokenType());
      
      Token token6 = xPathLexer0.colon();
      assertEquals(18, token6.getTokenType());
      assertEquals("K", token6.getTokenText());
      
      Token token7 = xPathLexer0.pipe();
      assertEquals("-", token7.getTokenText());
      assertEquals(17, token7.getTokenType());
      
      xPathLexer0.getXPath();
      Token token8 = xPathLexer0.number();
      assertEquals(30, token8.getTokenType());
      assertEquals("", token8.getTokenText());
      
      xPathLexer0.operatorName();
      Token token9 = xPathLexer0.equals();
      assertEquals(21, token9.getTokenType());
      assertEquals("o", token9.getTokenText());
      
      Token token10 = xPathLexer0.comma();
      assertEquals("x", token10.getTokenText());
      assertEquals(32, token10.getTokenType());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.9219537817263705
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("x}HG 2VX\u0002XGY>$G`/");
      Token token0 = xPathLexer0.equals();
      assertEquals("x", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals((-1), token1.getTokenType());
      
      Token token2 = xPathLexer0.star();
      assertEquals(20, token2.getTokenType());
      assertEquals("}", token2.getTokenText());
      
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.and();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.setXPath("[ (");
      Token token3 = xPathLexer2.comma();
      assertEquals("[", token3.getTokenText());
      
      Token token4 = xPathLexer0.plus();
      assertEquals(5, token4.getTokenType());
      assertEquals("H", token4.getTokenText());
      
      Token token5 = xPathLexer2.colon();
      assertEquals(" ", token5.getTokenText());
      assertEquals(18, token5.getTokenType());
      
      Token token6 = xPathLexer1.identifier();
      assertEquals(15, token6.getTokenType());
      
      xPathLexer2.consume();
      Token token7 = xPathLexer0.nextToken();
      assertNotSame(token7, token1);
      
      Token token8 = xPathLexer1.comma();
      assertEquals(32, token8.getTokenType());
      
      boolean boolean0 = xPathLexer2.isIdentifierChar('9');
      assertTrue(boolean0);
      
      Token token9 = xPathLexer0.not();
      assertEquals(23, token9.getTokenType());
      assertEquals("G", token9.getTokenText());
      
      xPathLexer1.operatorName();
      Token token10 = xPathLexer1.equals();
      assertEquals(21, token10.getTokenType());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.9749062100731816
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.colon();
      xPathLexer0.rightParen();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.or();
      xPathLexer0.leftBracket();
      xPathLexer0.whitespace();
      xPathLexer0.at();
      xPathLexer0.rightBracket();
      xPathLexer0.dots();
      xPathLexer0.minus();
      xPathLexer0.setXPath("snh8wD");
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer0.pipe();
      xPathLexer1.div();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.operatorName();
      xPathLexer2.operatorName();
      xPathLexer0.minus();
      xPathLexer1.comma();
      xPathLexer0.rightParen();
      xPathLexer0.setXPath("Vo\"Q}nv]QaG");
      xPathLexer0.nextToken();
      xPathLexer2.mod();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer1.and();
      xPathLexer2.nextToken();
      xPathLexer1.getXPath();
      Token token0 = xPathLexer2.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.0800985864109314
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.and();
      xPathLexer0.setXPath("");
      xPathLexer0.and();
      xPathLexer0.consume((-878));
      xPathLexer0.consume();
      // Undeclared exception!
      try { 
        xPathLexer0.whitespace();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.564860030689219
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.colon();
      xPathLexer0.rightParen();
      xPathLexer0.nextToken();
      xPathLexer0.identifier();
      xPathLexer0.number();
      xPathLexer0.and();
      xPathLexer0.currentPosition();
      xPathLexer0.minus();
      xPathLexer0.isIdentifierStartChar('p');
      xPathLexer0.div();
      xPathLexer0.div();
      xPathLexer0.doubleColon();
      xPathLexer0.equals();
      xPathLexer0.at();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-607));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.colon();
      XPathLexer xPathLexer1 = null;
      try {
        xPathLexer1 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.0164334907014783
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.mod();
      xPathLexer0.div();
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      
      xPathLexer0.consume(2425);
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      
      xPathLexer0.comma();
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.slashes();
      assertEquals(11, token3.getTokenType());
      
      Token token4 = xPathLexer0.minus();
      assertEquals(6, token4.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.nextToken();
      Token token5 = xPathLexer0.at();
      assertEquals(16, token5.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token6 = xPathLexer0.comma();
      assertEquals(32, token6.getTokenType());
      
      xPathLexer0.setXPath("UHBH- v");
      Token token7 = xPathLexer0.getPreviousToken();
      assertEquals((-1), token7.getTokenType());
      
      xPathLexer0.number();
      xPathLexer0.rightBracket();
      xPathLexer0.and();
      char char0 = xPathLexer0.LA(0);
      assertEquals('U', char0);
      
      xPathLexer0.plus();
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('U');
      assertTrue(boolean0);
      
      Token token8 = xPathLexer0.colon();
      Token token9 = xPathLexer0.number();
      assertEquals(30, token9.getTokenType());
      
      String string0 = token8.toString();
      assertEquals("[ (18) (B)", string0);
      
      Token token10 = xPathLexer0.plus();
      assertEquals(5, token10.getTokenType());
      assertEquals("H", token10.getTokenText());
      
      xPathLexer0.setPreviousToken(token8);
      xPathLexer0.colon();
      xPathLexer0.or();
      Token token11 = xPathLexer0.rightBracket();
      assertEquals("-", token11.getTokenText());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.6784021764834152
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("_R`(x7jy^K-ox");
      Token token0 = xPathLexer0.whitespace();
      Token token1 = xPathLexer0.dots();
      xPathLexer0.leftBracket();
      Token token2 = xPathLexer0.nextToken();
      token0.toString();
      token2.toString();
      xPathLexer0.star();
      token1.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.and();
      xPathLexer0.doubleColon();
      xPathLexer0.identifier();
      xPathLexer0.notEquals();
      xPathLexer0.nextToken();
      xPathLexer0.hasMoreChars();
      xPathLexer0.leftBracket();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.dollar();
      Token token3 = xPathLexer1.mod();
      assertNull(token3);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.175538122371014
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.rightBracket();
      xPathLexer0.mod();
      xPathLexer0.div();
      xPathLexer0.notEquals();
      xPathLexer0.consume(2425);
      xPathLexer0.comma();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.slashes();
      xPathLexer0.minus();
      xPathLexer0.operatorName();
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      xPathLexer0.comma();
      xPathLexer0.setXPath("UHBH- v");
      xPathLexer0.getPreviousToken();
      xPathLexer0.number();
      xPathLexer0.rightBracket();
      xPathLexer0.and();
      xPathLexer0.LA(0);
      xPathLexer0.plus();
      xPathLexer0.isIdentifierStartChar('U');
      xPathLexer0.colon();
      xPathLexer0.dollar();
      xPathLexer0.getXPath();
      xPathLexer0.minus();
      xPathLexer0.endPosition();
      xPathLexer0.leftBracket();
      xPathLexer0.and();
      xPathLexer0.at();
      xPathLexer0.getXPath();
      xPathLexer0.nextToken();
      xPathLexer0.rightBracket();
      xPathLexer0.setPreviousToken((Token) null);
      assertEquals("UHBH- v", xPathLexer0.getXPath());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.4174118256134687
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.mod();
      xPathLexer0.rightBracket();
      xPathLexer0.colon();
      xPathLexer0.setXPath("com.werken.saxpath.XPathLexer");
      xPathLexer0.number();
      xPathLexer0.and();
      xPathLexer0.operatorName();
      xPathLexer0.leftParen();
      xPathLexer0.doubleColon();
      xPathLexer0.rightParen();
      xPathLexer0.leftParen();
      xPathLexer0.mod();
      xPathLexer0.currentPosition();
      xPathLexer0.leftBracket();
      xPathLexer0.literal();
      xPathLexer0.not();
      xPathLexer0.div();
      xPathLexer0.notEquals();
      xPathLexer0.doubleColon();
      xPathLexer0.pipe();
      xPathLexer0.slashes();
      xPathLexer0.whitespace();
      xPathLexer0.or();
      xPathLexer0.literal();
      xPathLexer0.leftParen();
      xPathLexer0.comma();
      xPathLexer0.star();
      xPathLexer0.equals();
      xPathLexer0.dollar();
      int int0 = xPathLexer0.endPosition();
      assertEquals(29, int0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.172646727145631
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.colon();
      xPathLexer0.rightParen();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.or();
      xPathLexer0.leftBracket();
      xPathLexer0.whitespace();
      xPathLexer0.at();
      xPathLexer0.rightBracket();
      xPathLexer0.literal();
      xPathLexer0.dots();
      xPathLexer0.star();
      xPathLexer0.minus();
      xPathLexer0.setXPath("Vo\"Q}nv]QaG");
      xPathLexer0.pipe();
      xPathLexer0.div();
      xPathLexer0.operatorName();
      xPathLexer0.minus();
      xPathLexer0.comma();
      xPathLexer0.rightParen();
      xPathLexer0.doubleColon();
      xPathLexer0.identifier();
      xPathLexer0.minus();
      xPathLexer0.colon();
      xPathLexer0.or();
      xPathLexer0.rightBracket();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.9060072306619327
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.mod();
      xPathLexer0.rightBracket();
      xPathLexer0.colon();
      xPathLexer0.setXPath("com.werken.saxpath.XPathLexer");
      xPathLexer0.number();
      xPathLexer0.and();
      xPathLexer0.not();
      xPathLexer0.leftParen();
      xPathLexer0.doubleColon();
      xPathLexer0.rightParen();
      xPathLexer0.leftParen();
      xPathLexer0.mod();
      xPathLexer0.leftBracket();
      xPathLexer0.literal();
      xPathLexer0.not();
      xPathLexer0.div();
      xPathLexer0.notEquals();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.comma();
      xPathLexer1.rightParen();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.mod();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer0.and();
      xPathLexer2.nextToken();
      xPathLexer2.getXPath();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.7962861387918492
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.equals();
      assertEquals(21, token0.getTokenType());
      
      xPathLexer0.nextToken();
      xPathLexer0.or();
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      
      Token token2 = xPathLexer0.whitespace();
      assertEquals((-2), token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token3 = xPathLexer1.at();
      assertEquals(16, token3.getTokenType());
      
      Token token4 = xPathLexer0.rightBracket();
      assertEquals(4, token4.getTokenType());
      
      xPathLexer1.dots();
      XPathLexer xPathLexer2 = new XPathLexer("[ (");
      Token token5 = xPathLexer2.dots();
      assertEquals("[", token5.getTokenText());
      assertEquals(13, token5.getTokenType());
      
      Token token6 = xPathLexer2.minus();
      assertEquals(" ", token6.getTokenText());
      
      xPathLexer0.setXPath("[ (");
      Token token7 = xPathLexer2.pipe();
      assertEquals(17, token7.getTokenType());
      assertEquals("(", token7.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.div();
      xPathLexer3.operatorName();
      Token token8 = xPathLexer0.minus();
      assertEquals(6, token8.getTokenType());
      
      Token token9 = xPathLexer1.comma();
      assertEquals(32, token9.getTokenType());
      
      Token token10 = xPathLexer1.rightParen();
      assertEquals(2, token10.getTokenType());
      
      xPathLexer1.setXPath("[ (");
      xPathLexer3.nextToken();
      xPathLexer0.mod();
      xPathLexer1.and();
      xPathLexer2.nextToken();
      boolean boolean0 = xPathLexer0.isIdentifierChar('n');
      assertTrue(boolean0);
      
      Token token11 = xPathLexer2.getPreviousToken();
      assertEquals((-1), token11.getTokenType());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.635251526321581
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("wn>!1H3");
      Token token0 = xPathLexer0.whitespace();
      Token token1 = xPathLexer0.dots();
      assertEquals("n", token1.getTokenText());
      assertEquals(13, token1.getTokenType());
      
      Token token2 = xPathLexer0.leftBracket();
      Token token3 = xPathLexer0.nextToken();
      assertEquals(23, token3.getTokenType());
      
      token2.toString();
      String string0 = token2.toString();
      assertEquals("[ (3) (>)", string0);
      
      xPathLexer0.star();
      String string1 = token0.toString();
      assertEquals("[ (-2) ()", string1);
      
      xPathLexer0.setPreviousToken(token2);
      Token token4 = xPathLexer0.not();
      assertEquals("H", token4.getTokenText());
      
      Token token5 = xPathLexer0.star();
      assertEquals("3", token5.getTokenText());
      assertEquals(20, token5.getTokenType());
      
      Token token6 = xPathLexer0.number();
      assertEquals(30, token6.getTokenType());
      
      Token token7 = xPathLexer0.plus();
      assertEquals(5, token7.getTokenType());
      
      xPathLexer0.setPreviousToken(token0);
      Token token8 = xPathLexer0.colon();
      assertEquals(18, token8.getTokenType());
      
      xPathLexer0.or();
      Token token9 = xPathLexer0.rightBracket();
      assertEquals(4, token9.getTokenType());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.7695561165867812
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.identifier();
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.currentPosition();
      Token token1 = xPathLexer0.minus();
      assertEquals(6, token1.getTokenType());
      
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('c');
      assertTrue(boolean0);
      
      Token token2 = xPathLexer0.doubleColon();
      assertEquals(19, token2.getTokenType());
      
      Token token3 = xPathLexer0.equals();
      assertEquals(21, token3.getTokenType());
      
      xPathLexer0.mod();
      Token token4 = xPathLexer0.rightBracket();
      assertEquals(4, token4.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token5 = xPathLexer0.at();
      assertEquals(16, token5.getTokenType());
      
      Token token6 = xPathLexer0.not();
      assertEquals(23, token6.getTokenType());
      
      xPathLexer0.getPreviousToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token7 = xPathLexer1.identifierOrOperatorName();
      assertEquals(15, token7.getTokenType());
      
      Token token8 = xPathLexer0.pipe();
      assertEquals(17, token8.getTokenType());
      
      Token token9 = xPathLexer1.nextToken();
      assertEquals((-1), token9.getTokenType());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.0984187009037174
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(",|t8WHa/(vX|");
      xPathLexer0.equals();
      xPathLexer0.slashes();
      xPathLexer0.number();
      xPathLexer0.dollar();
      xPathLexer0.pipe();
      xPathLexer0.currentPosition();
      xPathLexer0.literal();
      xPathLexer0.getPreviousToken();
      xPathLexer0.comma();
      xPathLexer0.comma();
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      xPathLexer0.and();
      xPathLexer0.slashes();
      xPathLexer0.slashes();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.not();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.4316244347695988
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.colon();
      xPathLexer0.rightBracket();
      xPathLexer0.colon();
      String string0 = null;
      // Undeclared exception!
      try { 
        xPathLexer0.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.1620200774057516
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.colon();
      xPathLexer0.rightParen();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
      
      xPathLexer0.or();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.identifierOrOperatorName();
      xPathLexer1.or();
      Token token2 = xPathLexer1.leftBracket();
      assertEquals(3, token2.getTokenType());
      
      Token token3 = xPathLexer1.whitespace();
      assertEquals((-2), token3.getTokenType());
      
      Token token4 = xPathLexer1.at();
      assertEquals(16, token4.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.rightBracket();
      xPathLexer2.literal();
      xPathLexer2.dots();
      Token token5 = xPathLexer0.star();
      assertEquals(20, token5.getTokenType());
      
      xPathLexer2.minus();
      xPathLexer2.setXPath("com.werken.saxpath.XPathLexer");
      Token token6 = xPathLexer2.dots();
      assertEquals("c", token6.getTokenText());
      
      Token token7 = xPathLexer0.pipe();
      assertEquals(17, token7.getTokenType());
      
      xPathLexer1.div();
      xPathLexer0.operatorName();
      xPathLexer1.minus();
      Token token8 = xPathLexer0.comma();
      assertEquals(32, token8.getTokenType());
      
      Token token9 = xPathLexer1.rightParen();
      assertEquals(2, token9.getTokenType());
      
      Token token10 = xPathLexer0.doubleColon();
      assertEquals(19, token10.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.identifier();
      Token token11 = xPathLexer2.minus();
      assertEquals(6, token11.getTokenType());
      assertEquals("o", token11.getTokenText());
      
      Token token12 = xPathLexer2.nextToken();
      assertEquals(15, token12.getTokenType());
      assertEquals("m.werken.saxpath.XPathLexer", token12.getTokenText());
      
      Token token13 = xPathLexer3.colon();
      assertEquals(18, token13.getTokenType());
      
      xPathLexer1.or();
      Token token14 = xPathLexer2.rightBracket();
      assertEquals(4, token14.getTokenType());
      
      Token token15 = xPathLexer0.dots();
      assertEquals(13, token15.getTokenType());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.5044995417427938
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.at();
      assertEquals(16, token0.getTokenType());
      
      xPathLexer0.identifier();
      Token token1 = xPathLexer0.identifier();
      assertEquals(15, token1.getTokenType());
      
      xPathLexer0.or();
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
      
      Token token3 = xPathLexer0.whitespace();
      assertEquals((-2), token3.getTokenType());
      
      Token token4 = xPathLexer0.literal();
      assertNull(token4);
      
      xPathLexer0.div();
      Token token5 = xPathLexer0.rightBracket();
      assertEquals(4, token5.getTokenType());
      
      Token token6 = xPathLexer0.equals();
      assertEquals(21, token6.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.or();
      Token token7 = xPathLexer0.notEquals();
      assertEquals(22, token7.getTokenType());
      
      Token token8 = xPathLexer0.doubleColon();
      assertEquals(19, token8.getTokenType());
      
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('@');
      assertFalse(boolean0);
      
      xPathLexer0.relationalOperator();
      xPathLexer0.div();
      Token token9 = xPathLexer0.comma();
      assertEquals(32, token9.getTokenType());
      
      Token token10 = xPathLexer0.leftParen();
      assertEquals(1, token10.getTokenType());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.16898882396699
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.colon();
      xPathLexer0.rightParen();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.or();
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      
      xPathLexer0.whitespace();
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
      
      xPathLexer0.rightBracket();
      Token token3 = xPathLexer0.literal();
      assertNull(token3);
      
      Token token4 = xPathLexer0.dots();
      assertEquals(13, token4.getTokenType());
      
      Token token5 = xPathLexer0.star();
      assertEquals(20, token5.getTokenType());
      
      xPathLexer0.minus();
      xPathLexer0.setXPath("Vo\"Q}nv]QaG");
      Token token6 = xPathLexer0.pipe();
      assertEquals(17, token6.getTokenType());
      assertEquals("V", token6.getTokenText());
      
      xPathLexer0.div();
      xPathLexer0.operatorName();
      xPathLexer0.minus();
      Token token7 = xPathLexer0.comma();
      assertEquals(32, token7.getTokenType());
      assertEquals("\"", token7.getTokenText());
      
      Token token8 = xPathLexer0.rightParen();
      assertEquals("Q", token8.getTokenText());
      assertEquals(2, token8.getTokenType());
      
      Token token9 = xPathLexer0.doubleColon();
      assertEquals(19, token9.getTokenType());
      assertEquals("}n", token9.getTokenText());
      
      Token token10 = xPathLexer0.identifier();
      assertEquals(15, token10.getTokenType());
      
      Token token11 = xPathLexer0.minus();
      assertEquals("]", token11.getTokenText());
      assertEquals(6, token11.getTokenType());
      
      Token token12 = xPathLexer0.nextToken();
      assertEquals("QaG", token12.getTokenText());
      assertNotSame(token12, token0);
      
      Token token13 = xPathLexer0.colon();
      assertEquals("Q", token13.getTokenText());
      assertEquals(18, token13.getTokenType());
      
      xPathLexer0.or();
      Token token14 = xPathLexer0.rightBracket();
      assertEquals(4, token14.getTokenType());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=3.308234784925545
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("l=NhRdK~>");
      Token token0 = xPathLexer0.identifier();
      xPathLexer0.rightBracket();
      xPathLexer0.div();
      xPathLexer0.pipe();
      xPathLexer0.plus();
      xPathLexer0.notEquals();
      xPathLexer0.at();
      xPathLexer0.notEquals();
      token0.toString();
      xPathLexer0.identifier();
      xPathLexer0.getPreviousToken();
      xPathLexer0.whitespace();
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.div();
      assertNull(token1);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.4086898576238656
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.equals();
      xPathLexer0.nextToken();
      xPathLexer0.at();
      xPathLexer0.star();
      xPathLexer0.relationalOperator();
      xPathLexer0.and();
      xPathLexer0.comma();
      xPathLexer0.colon();
      xPathLexer0.identifier();
      xPathLexer0.consume();
      xPathLexer0.doubleColon();
      xPathLexer0.equals();
      XPathLexer xPathLexer1 = new XPathLexer("%n/7");
      assertFalse(xPathLexer1.equals((Object)xPathLexer0));
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.1778454201691764
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("_R'(x7jy^K-ox");
      xPathLexer0.setXPath("_R'(x7jy^K-ox");
      Token token0 = xPathLexer0.doubleColon();
      token0.toString();
      token0.toString();
      token0.toString();
      xPathLexer0.leftBracket();
      Token token1 = xPathLexer0.nextToken();
      token0.toString();
      token1.toString();
      Token token2 = xPathLexer0.star();
      // Undeclared exception!
      try { 
        token2.toString();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.6565228427496839
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("_R'(x7jy^K-ox");
      Token token0 = xPathLexer0.whitespace();
      Token token1 = xPathLexer0.dots();
      xPathLexer0.leftBracket();
      Token token2 = xPathLexer0.nextToken();
      token0.toString();
      token2.toString();
      Token token3 = xPathLexer0.star();
      token1.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.not();
      xPathLexer0.plus();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.setPreviousToken(token3);
      xPathLexer0.colon();
      xPathLexer1.or();
      xPathLexer0.rightBracket();
      boolean boolean0 = xPathLexer1.isIdentifierChar('q');
      assertTrue(boolean0);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.2098679989536034
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/'0vFT");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.plus();
      assertEquals("/", token0.getTokenText());
      assertEquals(5, token0.getTokenType());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals("'", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightParen();
      assertEquals("0", token2.getTokenText());
      assertEquals(2, token2.getTokenType());
      
      Token token3 = xPathLexer0.dots();
      assertEquals("v", token3.getTokenText());
      assertEquals(13, token3.getTokenType());
      
      xPathLexer0.whitespace();
      Token token4 = xPathLexer0.star();
      assertEquals("T", token4.getTokenText());
      
      Token token5 = xPathLexer0.comma();
      assertEquals(32, token5.getTokenType());
      
      Token token6 = xPathLexer0.star();
      assertEquals(20, token6.getTokenType());
      
      Token token7 = xPathLexer0.pipe();
      assertEquals(17, token7.getTokenType());
      
      Token token8 = xPathLexer0.whitespace();
      assertEquals((-2), token8.getTokenType());
      
      Token token9 = xPathLexer0.dollar();
      assertEquals(26, token9.getTokenType());
      
      xPathLexer0.setXPath("7Mat2<oQ26");
      Token token10 = xPathLexer0.nextToken();
      assertEquals("7", token10.getTokenText());
      assertEquals(30, token10.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.and();
      Token token11 = xPathLexer0.nextToken();
      assertEquals("Mat2<oQ26", token11.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.isIdentifierChar('n');
      Token token12 = xPathLexer0.leftParen();
      assertEquals(1, token12.getTokenType());
      assertEquals("M", token12.getTokenText());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.795520931177426
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("wn>!1H3");
      Token token0 = xPathLexer0.whitespace();
      xPathLexer0.dots();
      Token token1 = xPathLexer0.leftBracket();
      xPathLexer0.dollar();
      xPathLexer0.nextToken();
      token1.toString();
      token1.toString();
      xPathLexer0.star();
      token0.toString();
      xPathLexer0.setPreviousToken(token1);
      xPathLexer0.not();
      xPathLexer0.star();
      xPathLexer0.number();
      xPathLexer0.plus();
      xPathLexer0.at();
      xPathLexer0.notEquals();
      XPathLexer xPathLexer1 = new XPathLexer("wn>!1H3");
      xPathLexer1.identifier();
      boolean boolean0 = xPathLexer0.isIdentifierChar('V');
      assertTrue(boolean0);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=3.3756036257989352
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("m1");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertEquals("m1", token0.getTokenText());
      
      xPathLexer0.operatorName();
      xPathLexer0.operatorName();
      xPathLexer0.and();
      Token token1 = xPathLexer0.minus();
      assertEquals(6, token1.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.div();
      Token token2 = xPathLexer0.comma();
      assertEquals(32, token2.getTokenType());
      
      Token token3 = xPathLexer0.equals();
      assertEquals(21, token3.getTokenType());
      
      Token token4 = xPathLexer0.slashes();
      assertEquals(11, token4.getTokenType());
      
      Token token5 = xPathLexer0.at();
      assertEquals(16, token5.getTokenType());
      
      Token token6 = xPathLexer0.not();
      assertEquals(23, token6.getTokenType());
      
      xPathLexer0.getPreviousToken();
      Token token7 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token7.getTokenType());
      assertNotNull(token7);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.6910923968504477
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.identifier();
      xPathLexer0.at();
      Token token1 = xPathLexer0.rightParen();
      assertEquals(2, token1.getTokenType());
      
      Token token2 = xPathLexer0.not();
      assertEquals(23, token2.getTokenType());
      
      token0.toString();
      Token token3 = xPathLexer0.dollar();
      assertEquals(26, token3.getTokenType());
      
      xPathLexer0.setPreviousToken(token0);
      Token token4 = xPathLexer0.number();
      assertEquals(30, token4.getTokenType());
      
      xPathLexer0.nextToken();
      xPathLexer0.notEquals();
      token0.toString();
      xPathLexer0.minus();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (15) ()", string0);
      
      Token token5 = xPathLexer0.minus();
      assertEquals(6, token5.getTokenType());
      
      xPathLexer0.div();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.relationalOperator();
      Token token6 = xPathLexer0.leftParen();
      assertEquals(1, token6.getTokenType());
      
      Token token7 = xPathLexer0.at();
      assertEquals(16, token7.getTokenType());
      
      Token token8 = xPathLexer0.notEquals();
      assertEquals(22, token8.getTokenType());
      
      xPathLexer0.or();
      Token token9 = xPathLexer0.getPreviousToken();
      assertEquals(15, token9.getTokenType());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.6221533454419224
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.dots();
      xPathLexer0.rightBracket();
      xPathLexer0.plus();
      xPathLexer0.slashes();
      xPathLexer0.setXPath("rliv9F7gP^!e]");
      xPathLexer0.not();
      xPathLexer0.at();
      xPathLexer0.rightBracket();
      xPathLexer0.or();
      xPathLexer0.consume();
      xPathLexer0.whitespace();
      xPathLexer0.literal();
      xPathLexer0.minus();
      xPathLexer0.LA(0);
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.nextToken();
      assertFalse(token1.equals((Object)token0));
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.0045050694731685
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.colon();
      xPathLexer0.rightParen();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
      
      xPathLexer0.or();
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      
      Token token2 = xPathLexer0.whitespace();
      assertEquals((-2), token2.getTokenType());
      
      Token token3 = xPathLexer0.at();
      assertEquals(16, token3.getTokenType());
      
      xPathLexer0.rightBracket();
      Token token4 = xPathLexer0.dots();
      assertEquals(13, token4.getTokenType());
      
      Token token5 = xPathLexer0.star();
      assertEquals(20, token5.getTokenType());
      
      xPathLexer0.minus();
      xPathLexer0.setXPath("Vo\"Q}nv]QaG");
      Token token6 = xPathLexer0.pipe();
      assertEquals(17, token6.getTokenType());
      
      xPathLexer0.operatorName();
      Token token7 = xPathLexer0.minus();
      assertEquals(6, token7.getTokenType());
      assertEquals("o", token7.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token8 = xPathLexer0.comma();
      assertEquals(32, token8.getTokenType());
      assertEquals("\"", token8.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token9 = xPathLexer0.rightParen();
      assertEquals(2, token9.getTokenType());
      
      xPathLexer2.setXPath("Vo\"Q}nv]QaG");
      Token token10 = xPathLexer1.nextToken();
      assertEquals((-1), token10.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("Vo\"Q}nv]QaG");
      xPathLexer3.mod();
      Token token11 = xPathLexer1.colon();
      assertEquals(18, token11.getTokenType());
      
      xPathLexer1.or();
      Token token12 = xPathLexer1.rightBracket();
      assertEquals(4, token12.getTokenType());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.593030483766062
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Fq0{<4(Ku>A@8");
      Token token0 = xPathLexer0.rightParen();
      assertEquals("F", token0.getTokenText());
      
      Token token1 = xPathLexer0.minus();
      token1.toString();
      token1.toString();
      token1.toString();
      token1.toString();
      token1.toString();
      String string0 = token1.toString();
      assertEquals("[ (6) (q)", string0);
      
      xPathLexer0.setPreviousToken(token1);
      Token token2 = xPathLexer0.doubleColon();
      assertEquals("0{", token2.getTokenText());
      assertEquals(19, token2.getTokenType());
      
      xPathLexer0.dollar();
      xPathLexer0.rightParen();
      Token token3 = xPathLexer0.slashes();
      assertEquals("(", token3.getTokenText());
      assertEquals(11, token3.getTokenType());
      
      xPathLexer0.mod();
      Token token4 = xPathLexer0.rightParen();
      assertEquals(2, token4.getTokenType());
      
      char char0 = xPathLexer0.LA(3221);
      assertEquals('\uFFFF', char0);
      
      Token token5 = xPathLexer0.dollar();
      assertEquals("u", token5.getTokenText());
      
      xPathLexer0.rightBracket();
      int int0 = xPathLexer0.endPosition();
      assertEquals(13, int0);
      
      xPathLexer0.consume(3221);
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertFalse(boolean0);
      
      Token token6 = xPathLexer0.pipe();
      assertEquals(17, token6.getTokenType());
      
      Token token7 = xPathLexer0.comma();
      assertEquals(32, token7.getTokenType());
      
      Token token8 = xPathLexer0.rightBracket();
      assertEquals(4, token8.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token9 = xPathLexer0.at();
      assertEquals(16, token9.getTokenType());
      
      Token token10 = xPathLexer0.not();
      assertEquals(23, token10.getTokenType());
      
      xPathLexer0.getPreviousToken();
      Token token11 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token11.getTokenType());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.6879838680898738
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.plus();
      xPathLexer0.slashes();
      xPathLexer0.rightParen();
      xPathLexer0.dots();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.9183760349241186
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("wn>!1H3");
      Token token0 = xPathLexer0.whitespace();
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      assertEquals("n", token1.getTokenText());
      
      Token token2 = xPathLexer0.leftBracket();
      Token token3 = xPathLexer0.nextToken();
      assertEquals(23, token3.getTokenType());
      
      token2.toString();
      String string0 = token2.toString();
      assertEquals("[ (3) (>)", string0);
      
      xPathLexer0.star();
      String string1 = token0.toString();
      assertEquals("[ (-2) ()", string1);
      
      xPathLexer0.setPreviousToken(token2);
      Token token4 = xPathLexer0.not();
      assertEquals("H", token4.getTokenText());
      
      Token token5 = xPathLexer0.star();
      assertEquals("3", token5.getTokenText());
      assertEquals(20, token5.getTokenType());
      
      Token token6 = xPathLexer0.number();
      assertEquals(30, token6.getTokenType());
      
      Token token7 = xPathLexer0.plus();
      assertEquals(5, token7.getTokenType());
      
      Token token8 = xPathLexer0.at();
      assertEquals(16, token8.getTokenType());
      
      xPathLexer0.not();
      xPathLexer0.getPreviousToken();
      Token token9 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token9.getTokenType());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=3.26416869243142
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[EtFOB");
      xPathLexer0.leftParen();
      xPathLexer0.rightBracket();
      xPathLexer0.operatorName();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.whitespace();
      xPathLexer0.and();
      xPathLexer0.dollar();
      xPathLexer0.notEquals();
      xPathLexer0.dollar();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-1354));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.9929070536530287
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/'0vFT");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.plus();
      assertEquals("/", token0.getTokenText());
      assertEquals(5, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNotNull(token1);
      
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      assertEquals("'", token2.getTokenText());
      
      Token token3 = xPathLexer0.rightParen();
      assertEquals("0", token3.getTokenText());
      assertEquals(2, token3.getTokenType());
      
      Token token4 = xPathLexer0.dots();
      assertEquals("v", token4.getTokenText());
      
      xPathLexer0.whitespace();
      Token token5 = xPathLexer0.star();
      assertEquals("T", token5.getTokenText());
      
      Token token6 = xPathLexer0.comma();
      assertEquals(32, token6.getTokenType());
      
      xPathLexer0.div();
      Token token7 = xPathLexer0.star();
      assertEquals(20, token7.getTokenType());
      
      Token token8 = xPathLexer0.pipe();
      assertEquals(17, token8.getTokenType());
      
      Token token9 = xPathLexer0.whitespace();
      assertEquals((-2), token9.getTokenType());
      assertEquals("", token9.getTokenText());
      
      Token token10 = xPathLexer0.dollar();
      assertEquals(26, token10.getTokenType());
      
      Token token11 = xPathLexer0.doubleColon();
      assertEquals(19, token11.getTokenType());
      
      Token token12 = xPathLexer0.identifier();
      assertEquals(15, token12.getTokenType());
      
      Token token13 = xPathLexer0.nextToken();
      assertEquals((-1), token13.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token14 = xPathLexer1.at();
      assertEquals(16, token14.getTokenType());
      
      Token token15 = xPathLexer0.notEquals();
      assertEquals(22, token15.getTokenType());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      int int0 = xPathLexer0.endPosition();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.704142477985002
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("m1");
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.operatorName();
      xPathLexer0.and();
      xPathLexer0.minus();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.div();
      xPathLexer0.comma();
      xPathLexer0.equals();
      xPathLexer0.slashes();
      xPathLexer0.and();
      xPathLexer0.at();
      xPathLexer0.getXPath();
      xPathLexer0.nextToken();
      xPathLexer0.rightBracket();
      XPathLexer xPathLexer1 = null;
      try {
        xPathLexer1 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.0162273147219376
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.colon();
      xPathLexer0.rightParen();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.or();
      xPathLexer0.relationalOperator();
      xPathLexer0.leftBracket();
      xPathLexer0.whitespace();
      xPathLexer0.at();
      xPathLexer0.comma();
      xPathLexer0.dots();
      xPathLexer0.star();
      xPathLexer0.minus();
      xPathLexer0.pipe();
      xPathLexer0.operatorName();
      xPathLexer0.comma();
      xPathLexer0.rightParen();
      xPathLexer0.doubleColon();
      xPathLexer0.identifier();
      xPathLexer0.notEquals();
      xPathLexer0.nextToken();
      xPathLexer0.hasMoreChars();
      xPathLexer0.leftBracket();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.rightParen();
      xPathLexer1.dollar();
      Token token0 = xPathLexer1.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 62
  /*Coverage entropy=3.3178570678998662
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("m1");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertEquals("m1", token0.getTokenText());
      
      xPathLexer0.operatorName();
      xPathLexer0.operatorName();
      xPathLexer0.and();
      Token token1 = xPathLexer0.minus();
      assertEquals(6, token1.getTokenType());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertNotNull(token2);
      
      xPathLexer0.div();
      Token token3 = xPathLexer0.comma();
      assertEquals(32, token3.getTokenType());
      
      Token token4 = xPathLexer0.equals();
      assertEquals(21, token4.getTokenType());
      
      Token token5 = xPathLexer0.at();
      assertEquals(16, token5.getTokenType());
      
      Token token6 = xPathLexer0.notEquals();
      assertEquals(22, token6.getTokenType());
      
      Token token7 = xPathLexer0.identifier();
      assertEquals(15, token7.getTokenType());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(2, int0);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.185041009195978
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.colon();
      assertEquals(18, token0.getTokenType());
      
      Token token1 = xPathLexer0.rightParen();
      assertEquals(2, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.or();
      xPathLexer0.leftBracket();
      Token token3 = xPathLexer0.whitespace();
      assertEquals((-2), token3.getTokenType());
      
      Token token4 = xPathLexer0.at();
      assertEquals(16, token4.getTokenType());
      
      Token token5 = xPathLexer0.rightBracket();
      assertEquals(4, token5.getTokenType());
      
      Token token6 = xPathLexer0.dots();
      assertEquals(13, token6.getTokenType());
      
      Token token7 = xPathLexer0.star();
      assertEquals(20, token7.getTokenType());
      
      xPathLexer0.minus();
      xPathLexer0.setXPath("Vo\"Q}nv]QaG");
      Token token8 = xPathLexer0.pipe();
      assertEquals("V", token8.getTokenText());
      assertEquals(17, token8.getTokenType());
      
      Token token9 = xPathLexer0.minus();
      assertEquals("o", token9.getTokenText());
      assertEquals(6, token9.getTokenType());
      
      Token token10 = xPathLexer0.comma();
      assertEquals("\"", token10.getTokenText());
      assertEquals(32, token10.getTokenType());
      
      Token token11 = xPathLexer0.doubleColon();
      assertEquals(19, token11.getTokenType());
      assertEquals("Q}", token11.getTokenText());
      
      Token token12 = xPathLexer0.identifier();
      assertEquals("nv", token12.getTokenText());
      
      Token token13 = xPathLexer0.notEquals();
      assertEquals("]Q", token13.getTokenText());
      
      Token token14 = xPathLexer0.nextToken();
      assertNotSame(token14, token2);
      
      xPathLexer0.hasMoreChars();
      Token token15 = xPathLexer0.leftBracket();
      assertEquals("a", token15.getTokenText());
      assertEquals(3, token15.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.consume((-852));
      Token token16 = xPathLexer1.dollar();
      assertEquals(26, token16.getTokenType());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=3.4688509423090874
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("X>y/N,~jc");
      Token token0 = xPathLexer0.identifier();
      assertEquals("X", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      assertEquals(">", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightParen();
      assertEquals("y", token2.getTokenText());
      assertEquals(2, token2.getTokenType());
      
      xPathLexer0.consume(0);
      Token token3 = xPathLexer0.dollar();
      assertEquals(26, token3.getTokenType());
      
      xPathLexer0.or();
      Token token4 = xPathLexer0.not();
      assertEquals("N", token4.getTokenText());
      assertEquals(23, token4.getTokenType());
      
      Token token5 = xPathLexer0.equals();
      assertEquals(",", token5.getTokenText());
      
      xPathLexer0.number();
      xPathLexer0.and();
      xPathLexer0.relationalOperator();
      Token token6 = xPathLexer0.minus();
      assertEquals("~", token6.getTokenText());
      
      Token token7 = xPathLexer0.slashes();
      assertEquals("j", token7.getTokenText());
      
      xPathLexer0.rightBracket();
      Token token8 = xPathLexer0.equals();
      assertEquals(21, token8.getTokenType());
      
      Token token9 = xPathLexer0.star();
      assertEquals(20, token9.getTokenType());
      
      Token token10 = xPathLexer0.whitespace();
      assertEquals((-2), token10.getTokenType());
      
      Token token11 = xPathLexer0.doubleColon();
      assertEquals(19, token11.getTokenType());
      
      Token token12 = xPathLexer0.minus();
      assertEquals(6, token12.getTokenType());
      
      xPathLexer0.consume(0);
      xPathLexer0.consume(0);
      xPathLexer0.leftBracket();
      xPathLexer0.getPreviousToken();
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('/');
      assertFalse(boolean0);
      
      Token token13 = xPathLexer0.pipe();
      assertEquals(17, token13.getTokenType());
      
      Token token14 = xPathLexer0.leftBracket();
      assertEquals(3, token14.getTokenType());
      
      Token token15 = xPathLexer0.rightBracket();
      assertEquals(4, token15.getTokenType());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.69674006410746
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.minus();
      assertEquals(6, token0.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.comma();
      assertEquals(32, token1.getTokenType());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=3.181183419907883
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifier();
      assertEquals(15, token1.getTokenType());
      
      xPathLexer0.leftBracket();
      Token token2 = xPathLexer0.leftBracket();
      assertEquals(3, token2.getTokenType());
      
      Token token3 = xPathLexer0.doubleColon();
      assertEquals(19, token3.getTokenType());
      
      Token token4 = xPathLexer0.colon();
      assertEquals(18, token4.getTokenType());
      
      Token token5 = xPathLexer0.literal();
      assertNull(token5);
      
      Token token6 = xPathLexer0.comma();
      assertEquals(32, token6.getTokenType());
      
      Token token7 = xPathLexer0.star();
      assertEquals(20, token7.getTokenType());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.5631072095744685
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("wn>!1H3");
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("w", token0.getTokenText());
      
      Token token1 = xPathLexer0.leftBracket();
      Token token2 = xPathLexer0.nextToken();
      token1.toString();
      String string0 = token1.toString();
      assertEquals("n", token1.getTokenText());
      assertEquals("[ (3) (n)", string0);
      
      xPathLexer0.setPreviousToken(token2);
      assertEquals(">", token2.getTokenText());
      assertEquals(9, token2.getTokenType());
      
      Token token3 = xPathLexer0.not();
      assertEquals("!", token3.getTokenText());
      assertEquals(23, token3.getTokenType());
      
      Token token4 = xPathLexer0.number();
      assertEquals("1", token4.getTokenText());
      assertEquals(30, token4.getTokenType());
      
      Token token5 = xPathLexer0.plus();
      assertEquals(5, token5.getTokenType());
      assertEquals("H", token5.getTokenText());
      
      Token token6 = xPathLexer0.colon();
      assertEquals(18, token6.getTokenType());
      assertEquals("3", token6.getTokenText());
      
      xPathLexer0.or();
      Token token7 = xPathLexer0.rightBracket();
      assertEquals(4, token7.getTokenType());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.7038808366708316
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(",Q@j$x/M0\\bolm");
      Token token0 = xPathLexer0.dollar();
      assertEquals(26, token0.getTokenType());
      assertEquals(",", token0.getTokenText());
      
      xPathLexer0.leftParen();
      Token token1 = xPathLexer0.identifier();
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.pipe();
      assertEquals("@", token2.getTokenText());
      assertEquals(17, token2.getTokenType());
      
      xPathLexer0.literal();
      Token token3 = xPathLexer0.nextToken();
      assertEquals((-1), token3.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.relationalOperator();
      xPathLexer0.star();
      xPathLexer0.nextToken();
      xPathLexer0.dots();
      Token token4 = xPathLexer0.slashes();
      assertEquals(11, token4.getTokenType());
      
      xPathLexer0.leftParen();
      xPathLexer0.nextToken();
      Token token5 = xPathLexer0.star();
      assertEquals(20, token5.getTokenType());
      
      Token token6 = xPathLexer0.plus();
      assertEquals(5, token6.getTokenType());
      
      xPathLexer0.literal();
      Token token7 = xPathLexer0.dots();
      assertEquals(13, token7.getTokenType());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=3.375543897562411
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("m1");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertEquals("m1", token0.getTokenText());
      
      xPathLexer0.operatorName();
      xPathLexer0.operatorName();
      xPathLexer0.and();
      Token token1 = xPathLexer0.minus();
      assertEquals(6, token1.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.div();
      Token token2 = xPathLexer0.comma();
      assertEquals(32, token2.getTokenType());
      
      Token token3 = xPathLexer0.equals();
      assertEquals(21, token3.getTokenType());
      
      Token token4 = xPathLexer0.slashes();
      assertEquals(11, token4.getTokenType());
      
      Token token5 = xPathLexer0.at();
      assertEquals(16, token5.getTokenType());
      
      Token token6 = xPathLexer0.notEquals();
      assertEquals(22, token6.getTokenType());
      
      Token token7 = xPathLexer0.identifier();
      assertEquals(15, token7.getTokenType());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=3.32420692853645
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("m1");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertEquals("m1", token0.getTokenText());
      
      xPathLexer0.operatorName();
      xPathLexer0.or();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNotNull(token1);
      assertEquals(15, token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      xPathLexer0.div();
      xPathLexer0.mod();
      Token token2 = xPathLexer0.equals();
      assertEquals(21, token2.getTokenType());
      
      Token token3 = xPathLexer0.slashes();
      assertEquals(11, token3.getTokenType());
      
      Token token4 = xPathLexer0.at();
      assertEquals(16, token4.getTokenType());
      
      Token token5 = xPathLexer0.notEquals();
      assertEquals(22, token5.getTokenType());
  }
}
