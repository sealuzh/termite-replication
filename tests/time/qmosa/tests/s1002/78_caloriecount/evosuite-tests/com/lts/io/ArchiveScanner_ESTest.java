/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 15:23:30 GMT 2019
 */

package com.lts.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.lts.io.ArchiveScanner;
import com.lts.io.ImprovedFile;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.File;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PrintStream;
import java.net.URI;
import java.util.Comparator;
import java.util.Locale;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ArchiveScanner_ESTest extends ArchiveScanner_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("!");
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      ImprovedFile improvedFile0 = new ImprovedFile("!");
      MockFile mockFile0 = new MockFile("!");
      ImprovedFile improvedFile1 = new ImprovedFile(mockFile0);
      byte[] byteArray0 = new byte[2];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile1);
      Vector<Integer> vector0 = new Vector<Integer>();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ".3IP");
      archiveScanner0.basedir = (File) improvedFile0;
      mockFile0.getAbsoluteFile();
      improvedFile1.getAbsolutePath();
      vector0.clone();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "r?{EDwnfirN'_Dp";
      stringArray0[1] = "/home/ubuntu/termite/projects/78_caloriecount/!";
      stringArray0[2] = "r?{EDwnfirN'_Dp";
      archiveScanner0.setIncludes(stringArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      mockFile0.mkdirs();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "T60.");
      archiveScanner0.setExcludes(stringArray0);
      archiveScanner0.setIncludes(stringArray0);
      System.setCurrentTimeMillis(2);
      // Undeclared exception!
      try { 
        archiveScanner0.processFile("r?{EDwnfirN'_Dp");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.4558487091517962
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("!");
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      ImprovedFile improvedFile0 = new ImprovedFile("!");
      File file0 = ImprovedFile.buildName("!", (-2059L), "!", improvedFile0);
      ImprovedFile improvedFile1 = new ImprovedFile(file0);
      byte[] byteArray0 = new byte[2];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile1);
      Vector<Integer> vector0 = new Vector<Integer>();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ".3IP");
      archiveScanner0.dirsNotIncluded = vector0;
      archiveScanner0.basedir = (File) improvedFile0;
      file0.getAbsoluteFile();
      improvedFile1.getAbsolutePath();
      vector0.clone();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "r?{EDwnfirN'_Dp";
      stringArray0[1] = "/home/ubuntu/termite/projects/78_caloriecount/!/!-2059.!";
      stringArray0[2] = "r?{EDwnfirN'_Dp";
      archiveScanner0.setIncludes(stringArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      String[] stringArray1 = new String[4];
      file0.mkdirs();
      stringArray1[0] = "!";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "T60.");
      archiveScanner0.scandir(file0, "yfK3", false);
      archiveScanner0.haveSlowResults = true;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "/home/ubuntu/termite/projects/78_caloriecount/!/!-2059.!");
      archiveScanner0.processDirectory(file0, "T60.", false);
      assertTrue(file0.canRead());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.3842713196839629
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("!");
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      ImprovedFile improvedFile0 = new ImprovedFile("!");
      File file0 = ImprovedFile.buildName("!", (-2057L), "!", improvedFile0);
      ImprovedFile improvedFile1 = new ImprovedFile(file0);
      byte[] byteArray0 = new byte[2];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile1);
      archiveScanner0.setBasedir(file0);
      Vector<Integer> vector0 = new Vector<Integer>();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ".3IP");
      archiveScanner0.dirsNotIncluded = vector0;
      archiveScanner0.basedir = (File) improvedFile0;
      file0.getAbsoluteFile();
      improvedFile1.getAbsolutePath();
      vector0.clone();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "r?{EDwnfirN'_Dp";
      stringArray0[1] = "/home/ubuntu/termite/projects/78_caloriecount/!/!-2057.!";
      stringArray0[2] = "r?{EDwnfirN'_Dp";
      archiveScanner0.setIncludes(stringArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      String[] stringArray1 = new String[4];
      file0.mkdirs();
      stringArray1[0] = "!";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "T60.");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "/home/ubuntu/termite/projects/78_caloriecount/!/!-2057.!");
      archiveScanner0.processDirectory(file0, "", true);
      assertTrue(file0.canExecute());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)99;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)99, (byte)99);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      Locale locale0 = Locale.KOREA;
      Object object0 = new Object();
      byteArrayInputStream0.markSupported();
      Object[] objectArray0 = new Object[10];
      Object object1 = new Object();
      objectArray0[1] = (Object) "q&*r qRAF.";
      byteArrayInputStream0.mark(47);
      Integer integer0 = new Integer(2959);
      objectArray0[2] = (Object) (byte)99;
      Object object2 = new Object();
      objectArray0[3] = object2;
      objectArray0[4] = (Object) "p)wwbB/7'^DLzh>N";
      objectArray0[5] = (Object) byteArrayInputStream0;
      ImprovedFile improvedFile0 = new ImprovedFile("q&*r qRAF.", "q&*r qRAF.");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "p)wwbB/7'^DLzh>N";
      stringArray0[1] = "p)wwbB/7'^DLzh>N";
      stringArray0[2] = "p)wwbB/7'^DLzh>N";
      stringArray0[3] = "p)wwbB/7'^DLzh>N";
      archiveScanner0.setExcludes(stringArray0);
      archiveScanner0.setIncludes(stringArray0);
      System.setCurrentTimeMillis((-1763L));
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive(improvedFile0, "p)wwbB/7'^DLzh>N");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.scandir(improvedFile0, "8Y,i:r=R:r._AgIG", true);
      Vector<DataInputStream> vector0 = new Vector<DataInputStream>();
      archiveScanner0.dirsIncluded = vector0;
      String[] stringArray0 = new String[2];
      vector0.containsAll(archiveScanner0.dirsIncluded);
      stringArray0[0] = "8Y,i:r=R:r._AgIG";
      stringArray0[1] = "";
      archiveScanner0.setIncludes(stringArray0);
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive(improvedFile0, "N6-p(qN!");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.9909065731902369
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String string0 = "C^";
      ImprovedFile improvedFile0 = new ImprovedFile("C^");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      ImprovedFile improvedFile1 = new ImprovedFile("C^");
      archiveScanner0.addDefaultExcludes();
      Vector<Integer> vector0 = new Vector<Integer>();
      archiveScanner0.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      ArchiveScanner archiveScanner1 = new ArchiveScanner(improvedFile0);
      archiveScanner1.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive(improvedFile0, ".ZIP");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("!");
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "!");
      ImprovedFile improvedFile0 = new ImprovedFile("!");
      File file0 = ImprovedFile.buildName("!", (-2057L), "!", improvedFile0);
      ImprovedFile improvedFile1 = new ImprovedFile(file0);
      byte[] byteArray0 = new byte[2];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byteArray0[1] = (byte) (-61);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile1);
      archiveScanner0.setBasedir(file0);
      Vector<Integer> vector0 = new Vector<Integer>();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ".3IP");
      archiveScanner0.dirsNotIncluded = vector0;
      archiveScanner0.basedir = (File) improvedFile0;
      file0.getAbsoluteFile();
      vector0.add((Integer) 1);
      improvedFile1.getAbsolutePath();
      vector0.clone();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "r?{EDwnfirN'_Dp";
      stringArray0[1] = "/home/ubuntu/termite/projects/78_caloriecount/!/!-2057.!";
      stringArray0[2] = "r?{EDwnfirN'_Dp";
      archiveScanner0.setIncludes(stringArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      archiveScanner0.setIncludes(stringArray0);
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive(improvedFile1, "Error trying to remove archive staging directory, ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("-ob~}B?&2.RQ.jar");
      byte[] byteArray0 = new byte[7];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, (byte)0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.filesIncluded = vector0;
      ImprovedFile.createTempFileName("Zw6jy^dq)X-u60Ez", "Zw6jy^dq)X-u60Ez", improvedFile0);
      vector0.containsAll(archiveScanner0.filesIncluded);
      archiveScanner0.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      // Undeclared exception!
      try { 
        archiveScanner0.processFile("-ob~}B?&2.RQ.jar");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("C^");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      ImprovedFile improvedFile1 = improvedFile0.createTempDir();
      archiveScanner0.addDefaultExcludes();
      Vector<Integer> vector0 = new Vector<Integer>();
      improvedFile1.getAbsolutePath();
      archiveScanner0.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      improvedFile0.setReadOnly();
      Vector<InputStream> vector1 = new Vector<InputStream>();
      archiveScanner0.filesIncluded = vector1;
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory(improvedFile1, ".ZIP", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("!");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("!");
      FileSystemHandling.appendStringToFile(evoSuiteFile1, "criticlal.com.lts.application.errors.properties.saving");
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      ImprovedFile improvedFile0 = new ImprovedFile("!");
      MockFile mockFile0 = new MockFile("!");
      ImprovedFile improvedFile1 = new ImprovedFile(mockFile0);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      byte[] byteArray0 = new byte[2];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile1);
      Vector<Integer> vector0 = new Vector<Integer>();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ".3IP");
      archiveScanner0.dirsNotIncluded = vector0;
      archiveScanner0.basedir = (File) improvedFile0;
      mockFile0.getAbsoluteFile();
      improvedFile1.getAbsolutePath();
      vector0.clone();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "r?{EDwnfirN'_Dp";
      stringArray0[1] = "/home/ubuntu/termite/projects/78_caloriecount/!";
      stringArray0[2] = "r?{EDwnfirN'_Dp";
      archiveScanner0.setIncludes(stringArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      mockFile0.mkdirs();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "T60.");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "/home/ubuntu/termite/projects/78_caloriecount/!");
      try { 
        archiveScanner0.processDirectory(mockFile0, "T60.", false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // IO error scanning directory /home/ubuntu/termite/projects/78_caloriecount/!
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("!");
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      ImprovedFile improvedFile0 = new ImprovedFile("!");
      MockFile mockFile0 = new MockFile("!");
      ImprovedFile improvedFile1 = new ImprovedFile(mockFile0);
      byte[] byteArray0 = new byte[2];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile1);
      Vector<Integer> vector0 = new Vector<Integer>();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ".3IP");
      archiveScanner0.dirsNotIncluded = vector0;
      archiveScanner0.basedir = (File) improvedFile0;
      mockFile0.getAbsoluteFile();
      improvedFile1.getAbsolutePath();
      vector0.clone();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "r?{EDwnfirN'_Dp";
      stringArray0[1] = "/home/ubuntu/termite/projects/78_caloriecount/!";
      stringArray0[2] = "r?{EDwnfirN'_Dp";
      archiveScanner0.setIncludes(stringArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      mockFile0.mkdirs();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "T60.");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "/home/ubuntu/termite/projects/78_caloriecount/!");
      // Undeclared exception!
      try { 
        archiveScanner0.processFile(".zip");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[1] = "";
      Vector<Object> vector0 = new Vector<Object>();
      stringArray0[2] = "app.files.lastFile";
      String[] stringArray1 = new String[1];
      vector0.trimToSize();
      vector0.sort((Comparator<? super Object>) null);
      Object object0 = new Object();
      vector0.add(object0);
      stringArray1[0] = "K8G>e}";
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      // Undeclared exception!
      try { 
        archiveScanner0.isArchive((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("!");
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "!");
      ImprovedFile improvedFile0 = new ImprovedFile("!");
      File file0 = ImprovedFile.buildName("!", (-2057L), "!", improvedFile0);
      ImprovedFile improvedFile1 = new ImprovedFile(file0);
      byte[] byteArray0 = new byte[2];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byteArray0[1] = (byte) (-61);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile1);
      archiveScanner0.setBasedir(file0);
      Vector<Integer> vector0 = new Vector<Integer>();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ".3IP");
      archiveScanner0.dirsNotIncluded = vector0;
      File file1 = file0.getAbsoluteFile();
      improvedFile1.getAbsolutePath();
      vector0.clone();
      String[] stringArray0 = new String[3];
      stringArray0[0] = ".3IP";
      stringArray0[1] = "/home/ubuntu/termite/projects/78_caloriecount/!/!-2057.!";
      stringArray0[2] = ".3IP";
      archiveScanner0.setIncludes(stringArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      String[] stringArray1 = new String[1];
      stringArray1[0] = "!";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "T60.");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "/home/ubuntu/termite/projects/78_caloriecount/!/!-2057.!");
      archiveScanner0.processDirectory(file0, "T60.", true);
      assertTrue(file0.equals((Object)file1));
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)99, (byte)0);
      byteArrayInputStream0.skip(0L);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      byteArrayInputStream0.markSupported();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (-1111603502), 2);
      byteArrayInputStream1.markSupported();
      byteArrayInputStream1.markSupported();
      PipedInputStream pipedInputStream1 = new PipedInputStream();
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream(pipedInputStream1);
      pipedOutputStream0.close();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream1);
      PipedOutputStream pipedOutputStream2 = new PipedOutputStream();
      pipedOutputStream0.flush();
      byte[] byteArray1 = new byte[0];
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray1, (byte)99, 395);
      MockPrintStream mockPrintStream0 = new MockPrintStream(pipedOutputStream1);
      ByteArrayInputStream byteArrayInputStream3 = new ByteArrayInputStream(byteArray0, (-231), 1);
      PipedOutputStream pipedOutputStream3 = new PipedOutputStream();
      ByteArrayInputStream byteArrayInputStream4 = new ByteArrayInputStream(byteArray0, 1, 4);
      byteArrayInputStream4.skip(395);
      Object object0 = new Object();
      ImprovedFile improvedFile0 = new ImprovedFile("u~?T>zJ?", "o1i5c^OHh6i,ohB");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      boolean boolean0 = archiveScanner0.isArchive(improvedFile0);
      //  // Unstable assertion: assertTrue(boolean0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.8548720307766426
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MockFile mockFile0 = new MockFile((String) null, "h(}- ;4d3K&oW;D");
      File file0 = MockFile.createTempFile("h(}- ;4d3K&oW;D", "h(}- ;4d3K&oW;D", (File) mockFile0);
      URI uRI0 = MockURI.aFTPURI;
      mockFile0.toURI();
      MockURI.toURL(uRI0);
      File file1 = file0.getCanonicalFile();
      mockFile0.setExecutable(false);
      file1.getAbsolutePath();
      File file2 = ImprovedFile.buildName("h(}- ;4d3K&oW;D", 1L, "h(}- ;4d3K&oW;D", file0);
      mockFile0.getCanonicalFile();
      file0.createNewFile();
      file0.toPath();
      ImprovedFile improvedFile0 = new ImprovedFile(file2);
      ImprovedFile.copyFromToDir(file1, improvedFile0);
      file0.setExecutable(false);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(mockFile0, "h(}- ;4d3K&oW;D", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)99;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)99, (byte)99);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      byteArrayInputStream0.markSupported();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream(pipedInputStream0);
      pipedOutputStream1.close();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      pipedOutputStream0.flush();
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, 395, 395);
      MockPrintStream mockPrintStream0 = new MockPrintStream(pipedOutputStream0);
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0, 1024, 2);
      PipedOutputStream pipedOutputStream2 = new PipedOutputStream();
      ByteArrayInputStream byteArrayInputStream3 = new ByteArrayInputStream(byteArray0, 2147483645, (-2917));
      PipedOutputStream pipedOutputStream3 = new PipedOutputStream();
      ByteArrayInputStream byteArrayInputStream4 = new ByteArrayInputStream(byteArray0, 2, (-288933950));
      PipedOutputStream pipedOutputStream4 = new PipedOutputStream();
      ByteArrayInputStream byteArrayInputStream5 = new ByteArrayInputStream(byteArray0, 395, (byte)99);
      PipedOutputStream pipedOutputStream5 = new PipedOutputStream();
      ImprovedFile improvedFile0 = new ImprovedFile(" P.jar", ".zip");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      // Undeclared exception!
      try { 
        archiveScanner0.scanArchive((File) null, " P.jar");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ImprovedFile", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)99;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)99, (byte)99);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, 395, (byte)99);
      byteArrayInputStream1.markSupported();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream(pipedInputStream0);
      pipedOutputStream1.close();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0, (-571), 2249);
      MockPrintStream mockPrintStream0 = new MockPrintStream(pipedOutputStream1);
      Locale locale0 = Locale.FRANCE;
      Object object0 = new Object();
      Object object1 = new Object();
      ByteArrayInputStream byteArrayInputStream3 = new ByteArrayInputStream(byteArray0, (byte)99, (byte)99);
      PipedOutputStream pipedOutputStream2 = new PipedOutputStream();
      ByteArrayInputStream byteArrayInputStream4 = new ByteArrayInputStream(byteArray0, 372, (-2804));
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      PipedOutputStream pipedOutputStream3 = new PipedOutputStream();
      ImprovedFile improvedFile0 = new ImprovedFile(".zip", ".zip");
      improvedFile0.makeDirectories();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.toFileType(improvedFile0);
      // Undeclared exception!
      try { 
        ImprovedFile.createTempDirectory(".zip", "PSmFy2yL}<e");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ImprovedFile", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.432813901625505
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)99, (byte)0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      byteArrayInputStream0.markSupported();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream(pipedInputStream0);
      pipedOutputStream1.close();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      pipedOutputStream0.flush();
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, 395, 395);
      MockPrintStream mockPrintStream0 = new MockPrintStream(pipedOutputStream0);
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0, 1024, 2);
      PipedOutputStream pipedOutputStream2 = new PipedOutputStream();
      ByteArrayInputStream byteArrayInputStream3 = new ByteArrayInputStream(byteArray0, 2147483645, (byte)99);
      PipedOutputStream pipedOutputStream3 = new PipedOutputStream();
      ByteArrayInputStream byteArrayInputStream4 = new ByteArrayInputStream(byteArray0, 2, (-288933950));
      PipedOutputStream pipedOutputStream4 = new PipedOutputStream();
      ByteArrayInputStream byteArrayInputStream5 = new ByteArrayInputStream(byteArray0, 395, (byte)0);
      PipedOutputStream pipedOutputStream5 = new PipedOutputStream();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      PipedOutputStream pipedOutputStream6 = new PipedOutputStream();
      ImprovedFile improvedFile0 = new ImprovedFile("6/", "?ht%+a*V");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.toFileType(improvedFile0);
      // Undeclared exception!
      try { 
        ImprovedFile.createTempDirectory("4Wzr$ol$`pWy", "4Wzr$ol$`pWy");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ImprovedFile", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.8323649625844873
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      MockFile mockFile0 = new MockFile((String) null, "n}h_}- <;4d3K&oW;D");
      File file0 = MockFile.createTempFile("n}h_}- <;4d3K&oW;D", "z9itmw&SAqYzo", (File) mockFile0);
      mockFile0.setExecutable(false);
      File file1 = ImprovedFile.buildName("n}h_}- <;4d3K&oW;D", 1L, "n}h_}- <;4d3K&oW;D", file0);
      file0.createNewFile();
      ImprovedFile improvedFile0 = new ImprovedFile(file1);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(mockFile0, "z9itmw&SAqYzo", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)99;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)99, (byte)99);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      byteArrayInputStream0.markSupported();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream(pipedInputStream0);
      pipedOutputStream1.close();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      pipedOutputStream0.flush();
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, 395, 395);
      MockPrintStream mockPrintStream0 = new MockPrintStream(pipedOutputStream0);
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0, 1024, 2);
      PipedOutputStream pipedOutputStream2 = new PipedOutputStream();
      ByteArrayInputStream byteArrayInputStream3 = new ByteArrayInputStream(byteArray0, 2147483645, (-2917));
      PipedOutputStream pipedOutputStream3 = new PipedOutputStream();
      ByteArrayInputStream byteArrayInputStream4 = new ByteArrayInputStream(byteArray0, 2, (-288933950));
      PipedOutputStream pipedOutputStream4 = new PipedOutputStream();
      ByteArrayInputStream byteArrayInputStream5 = new ByteArrayInputStream(byteArray0, 395, (byte)99);
      PipedOutputStream pipedOutputStream5 = new PipedOutputStream();
      ImprovedFile improvedFile0 = new ImprovedFile(" P.jar", ".zip");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      try { 
        archiveScanner0.scanArchive(improvedFile0, ".WAR");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error trying to list archive, /home/ubuntu/termite/projects/78_caloriecount/ P.jar/.zip
         //
         verifyException("com.lts.io.archive.AbstractNestedArchive", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)99, (byte)0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      byteArrayInputStream0.markSupported();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream(pipedInputStream0);
      pipedOutputStream1.close();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      pipedOutputStream0.flush();
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, 395, 395);
      MockPrintStream mockPrintStream0 = new MockPrintStream(pipedOutputStream0);
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0, 1024, 2);
      PipedOutputStream pipedOutputStream2 = new PipedOutputStream();
      ByteArrayInputStream byteArrayInputStream3 = new ByteArrayInputStream(byteArray0, 2147483645, (-2917));
      PipedOutputStream pipedOutputStream3 = new PipedOutputStream();
      ByteArrayInputStream byteArrayInputStream4 = new ByteArrayInputStream(byteArray0, 2, (-288933950));
      PipedOutputStream pipedOutputStream4 = new PipedOutputStream();
      ByteArrayInputStream byteArrayInputStream5 = new ByteArrayInputStream(byteArray0, 395, (byte)0);
      PipedOutputStream pipedOutputStream5 = new PipedOutputStream();
      ImprovedFile improvedFile0 = new ImprovedFile("`m+j_(@dgM\"jW", ".zip");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      try { 
        archiveScanner0.scandir(improvedFile0, (String) null, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // IO error scanning directory /home/ubuntu/termite/projects/78_caloriecount/`m+j_(@dgM\"jW/.zip
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-63), (byte)0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      byteArrayInputStream0.markSupported();
      byteArrayInputStream0.markSupported();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream(pipedInputStream0);
      pipedOutputStream1.close();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      PipedOutputStream pipedOutputStream2 = new PipedOutputStream();
      pipedOutputStream2.flush();
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, 395, (-2739));
      MockPrintStream mockPrintStream0 = new MockPrintStream(pipedOutputStream2);
      Locale locale0 = Locale.FRANCE;
      Object object0 = new Object();
      Object object1 = new Object();
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0, (byte) (-63), (-304509629));
      PipedOutputStream pipedOutputStream3 = new PipedOutputStream();
      ByteArrayInputStream byteArrayInputStream3 = new ByteArrayInputStream(byteArray0, (-6353), 3);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      PipedOutputStream pipedOutputStream4 = new PipedOutputStream();
      String string0 = "Y,s";
      ImprovedFile improvedFile0 = new ImprovedFile("Y,s", "ve#");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      // Undeclared exception!
      try { 
        archiveScanner0.toFileType((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.550438436883685
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("C^");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      ImprovedFile improvedFile1 = improvedFile0.createTempDir();
      archiveScanner0.addDefaultExcludes();
      Vector<Integer> vector0 = new Vector<Integer>();
      archiveScanner0.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      ArchiveScanner archiveScanner1 = new ArchiveScanner(improvedFile1);
      archiveScanner1.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      ArchiveScanner archiveScanner2 = new ArchiveScanner(improvedFile1);
      // Undeclared exception!
      try { 
        archiveScanner1.scandir(improvedFile0, "com.lts.pest.tree.IdTreeNode", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.4399756932787802
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)99, (byte)0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      byteArrayInputStream0.markSupported();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream(pipedInputStream0);
      pipedOutputStream1.close();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      pipedOutputStream0.flush();
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, 395, 395);
      MockPrintStream mockPrintStream0 = new MockPrintStream(pipedOutputStream0);
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0, 1024, 2);
      PipedOutputStream pipedOutputStream2 = new PipedOutputStream();
      ByteArrayInputStream byteArrayInputStream3 = new ByteArrayInputStream(byteArray0, 2147483645, (-2917));
      PipedOutputStream pipedOutputStream3 = new PipedOutputStream();
      ByteArrayInputStream byteArrayInputStream4 = new ByteArrayInputStream(byteArray0, 2, (-288933950));
      PipedOutputStream pipedOutputStream4 = new PipedOutputStream();
      ByteArrayInputStream byteArrayInputStream5 = new ByteArrayInputStream(byteArray0, 395, (byte)0);
      PipedOutputStream pipedOutputStream5 = new PipedOutputStream();
      ByteArrayInputStream byteArrayInputStream6 = new ByteArrayInputStream(byteArray0, 92, 395);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      PipedOutputStream pipedOutputStream6 = new PipedOutputStream();
      ImprovedFile improvedFile0 = new ImprovedFile("dir0", " P.jar");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.toFileType(improvedFile0);
      // Undeclared exception!
      try { 
        ImprovedFile.createTempDirectory(" P.jar", ".war");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ImprovedFile", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)52;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-2787), (byte)52);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (byte)52, 465);
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0, (byte)52, 465);
      MockPrintStream mockPrintStream0 = new MockPrintStream(pipedOutputStream1);
      Locale locale0 = new Locale("q&*r qRAF.", "q&*r qRAF.", "78_caloriecount.jar");
      Object[] objectArray0 = new Object[5];
      Object object0 = new Object();
      objectArray0[0] = object0;
      objectArray0[1] = (Object) "q&*r qRAF.";
      objectArray0[2] = (Object) byteArrayInputStream2;
      objectArray0[3] = (Object) byteArrayInputStream2;
      objectArray0[4] = (Object) mockPrintStream0;
      PrintStream printStream0 = mockPrintStream0.format(locale0, "p)wwbB/7'^DLzh>N", objectArray0);
      ImprovedFile.copy(byteArrayInputStream2, printStream0);
      ImprovedFile improvedFile0 = new ImprovedFile(".ear", ".ear");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      boolean boolean0 = archiveScanner0.isArchive(improvedFile0);
      //  // Unstable assertion: assertFalse(boolean0);
  }
}
