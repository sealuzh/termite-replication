/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 15:36:49 GMT 2019
 */

package client.network;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import client.BomberClient;
import client.gui.StartFrame;
import client.network.ClientMsgReceiver;
import java.awt.HeadlessException;
import java.net.Socket;
import java.net.SocketAddress;
import java.sql.ClientInfoStatus;
import java.sql.SQLClientInfoException;
import java.sql.SQLException;
import java.sql.SQLIntegrityConstraintViolationException;
import java.sql.SQLInvalidAuthorizationSpecException;
import java.sql.SQLNonTransientConnectionException;
import java.sql.SQLNonTransientException;
import java.sql.SQLSyntaxErrorException;
import java.sql.SQLTransactionRollbackException;
import java.sql.SQLTransientConnectionException;
import java.util.Hashtable;
import java.util.Vector;
import messages.Message;
import messages.global.GlobalChatMsg;
import messages.global.GlobalStateMsg;
import messages.global.MapInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.lang.MockException;
import org.evosuite.runtime.mock.java.lang.MockThread;
import org.evosuite.runtime.mock.java.net.MockSocket;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ClientMsgReceiver_ESTest extends ClientMsgReceiver_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-3);
      SQLTransactionRollbackException sQLTransactionRollbackException0 = new SQLTransactionRollbackException("client.network.ClientMsgReceiver", "client.network.ClientMsgReceiver");
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      mockSocket0.getRemoteSocketAddress();
      mockSocket0.bind((SocketAddress) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      MockThread mockThread0 = new MockThread("CONNECTION LOST");
      MockThread.interrupted();
      Thread[] threadArray0 = new Thread[8];
      threadArray0[0] = (Thread) mockThread0;
      MockThread mockThread1 = new MockThread(mockThread0, "");
      threadArray0[1] = (Thread) mockThread1;
      threadArray0[2] = (Thread) mockThread0;
      threadArray0[3] = (Thread) mockThread0;
      threadArray0[4] = (Thread) mockThread0;
      threadArray0[5] = (Thread) mockThread0;
      threadArray0[6] = (Thread) mockThread0;
      threadArray0[7] = (Thread) mockThread0;
      MockThread.enumerate(threadArray0);
      GlobalStateMsg globalStateMsg0 = new GlobalStateMsg((-910));
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.processMsg(globalStateMsg0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      byte[] byteArray0 = new byte[5];
      byteArray0[1] = (byte)0;
      byteArray0[3] = (byte)0;
      mockSocket0.getRemoteSocketAddress();
      mockSocket0.bind((SocketAddress) null);
      byteArray0[4] = (byte)43;
      MockSocket mockSocket1 = new MockSocket();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      Vector<MapInfo> vector0 = new Vector<MapInfo>();
      System.setCurrentTimeMillis((-2878L));
      mockSocket0.getLocalSocketAddress();
      // Undeclared exception!
      try { 
        clientMsgReceiver0.closeConnection();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("client.network.ClientMsgReceiver", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      GlobalChatMsg globalChatMsg0 = new GlobalChatMsg("O7(w#[bRt2NK q]d.", "Exit");
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      Message message0 = null;
      Thread[] threadArray0 = new Thread[8];
      threadArray0[0] = (Thread) clientMsgReceiver0;
      Thread.UncaughtExceptionHandler thread_UncaughtExceptionHandler0 = clientMsgReceiver0.getUncaughtExceptionHandler();
      clientMsgReceiver0.setUncaughtExceptionHandler(thread_UncaughtExceptionHandler0);
      threadArray0[1] = (Thread) clientMsgReceiver0;
      threadArray0[2] = (Thread) clientMsgReceiver0;
      threadArray0[3] = (Thread) clientMsgReceiver0;
      threadArray0[4] = (Thread) clientMsgReceiver0;
      threadArray0[3] = (Thread) clientMsgReceiver0;
      threadArray0[6] = (Thread) clientMsgReceiver0;
      threadArray0[7] = (Thread) clientMsgReceiver0;
      MockThread.enumerate(threadArray0);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.processMsg((Message) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("client.network.ClientMsgReceiver", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-3);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byteArray0[2] = (byte) (-3);
      byteArray0[3] = (byte) (-3);
      mockSocket0.getRemoteSocketAddress();
      byteArray0[4] = (byte)43;
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      SQLInvalidAuthorizationSpecException sQLInvalidAuthorizationSpecException0 = new SQLInvalidAuthorizationSpecException("messages.session.PlayerInfo");
      SQLException sQLException0 = new SQLException("M", "&t=tGT/RYy", (byte) (-3), sQLInvalidAuthorizationSpecException0);
      SQLInvalidAuthorizationSpecException sQLInvalidAuthorizationSpecException1 = new SQLInvalidAuthorizationSpecException("Z", sQLInvalidAuthorizationSpecException0);
      sQLInvalidAuthorizationSpecException1.getSuppressed();
      sQLInvalidAuthorizationSpecException0.getLocalizedMessage();
      SQLNonTransientException sQLNonTransientException0 = new SQLNonTransientException("MRT>{atk", "", sQLInvalidAuthorizationSpecException1);
      SQLTransientConnectionException sQLTransientConnectionException0 = new SQLTransientConnectionException();
      sQLInvalidAuthorizationSpecException0.getSuppressed();
      sQLTransientConnectionException0.fillInStackTrace();
      SQLSyntaxErrorException sQLSyntaxErrorException0 = new SQLSyntaxErrorException(sQLTransientConnectionException0);
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.handleConnectionLoss(sQLInvalidAuthorizationSpecException0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Vector<MapInfo> vector0 = new Vector<MapInfo>();
      ClientMsgReceiver clientMsgReceiver0 = null;
      try {
        clientMsgReceiver0 = new ClientMsgReceiver((Socket) null, (BomberClient) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("common.network.MsgReceiver", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      mockSocket0.getKeepAlive();
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      Hashtable<String, ClientInfoStatus> hashtable0 = new Hashtable<String, ClientInfoStatus>();
      SQLTransactionRollbackException sQLTransactionRollbackException0 = new SQLTransactionRollbackException("_-Nl$#RH- {C6", "");
      SQLClientInfoException sQLClientInfoException0 = new SQLClientInfoException("Couldn't close input stream", hashtable0, sQLTransactionRollbackException0);
      sQLClientInfoException0.getFailedProperties();
      SQLTransactionRollbackException sQLTransactionRollbackException1 = new SQLTransactionRollbackException("", "SHUTDOWN");
      MockException mockException0 = new MockException("");
      SQLNonTransientConnectionException sQLNonTransientConnectionException0 = new SQLNonTransientConnectionException();
      SQLIntegrityConstraintViolationException sQLIntegrityConstraintViolationException0 = new SQLIntegrityConstraintViolationException(sQLNonTransientConnectionException0);
      Hashtable<String, ClientInfoStatus> hashtable1 = new Hashtable<String, ClientInfoStatus>();
      sQLTransactionRollbackException1.getLocalizedMessage();
      SQLClientInfoException sQLClientInfoException1 = new SQLClientInfoException("?jU}u6}eX_", hashtable1, sQLNonTransientConnectionException0);
      SQLTransactionRollbackException sQLTransactionRollbackException2 = new SQLTransactionRollbackException(sQLTransactionRollbackException1);
      SQLIntegrityConstraintViolationException sQLIntegrityConstraintViolationException1 = new SQLIntegrityConstraintViolationException(sQLTransactionRollbackException2);
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.displayErrorMessage();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      GlobalChatMsg globalChatMsg0 = new GlobalChatMsg("1mKOq", "<V^");
      mockSocket0.getInetAddress();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      StartFrame startFrame0 = StartFrame.startFrame;
      StartFrame.startFrame = null;
      // Undeclared exception!
      try { 
        clientMsgReceiver0.processMsg(globalChatMsg0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("messages.global.GlobalChatMsg", e);
      }
  }
}
