/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 15:24:02 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import com.soops.CEN4010.JMCA.JParser.JavaParser;
import com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager;
import com.soops.CEN4010.JMCA.JParser.Node;
import com.soops.CEN4010.JMCA.JParser.SimpleNode;
import java.io.FileDescriptor;
import java.io.InputStream;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.io.StringWriter;
import java.nio.CharBuffer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimpleNode_ESTest extends SimpleNode_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.375269713872619
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int int0 = 0;
      SimpleNode simpleNode0 = new SimpleNode(0);
      SimpleNode simpleNode1 = new SimpleNode(0);
      simpleNode0.jjtSetParent(simpleNode1);
      simpleNode1.jjtClose();
      simpleNode1.setIdentifier("CompilationUnit");
      String string0 = ")M";
      simpleNode0.setIdentifier((String) null);
      StringWriter stringWriter0 = new StringWriter(0);
      simpleNode0.jjtSetParent(simpleNode1);
      simpleNode1.jjtGetParent();
      String string1 = "~Lx";
      simpleNode0.setIdentifier("d`H;VxQ*0{rqwes|F");
      simpleNode1.jjtGetParent();
      simpleNode1.jjtAddChild((Node) null, 24);
      simpleNode1.jjtGetNumChildren();
      // Undeclared exception!
      try { 
        simpleNode0.dump("CompilationUnit", stringWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.608862352295065
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      int int0 = 0;
      SimpleNode simpleNode0 = new SimpleNode(0);
      SimpleNode simpleNode1 = new SimpleNode(0);
      simpleNode1.id = 0;
      simpleNode0.jjtSetParent(simpleNode1);
      simpleNode1.setIdentifier("CompilationUnit");
      simpleNode0.setIdentifier("I");
      StringWriter stringWriter0 = new StringWriter(0);
      char[] charArray0 = new char[9];
      simpleNode1.jjtSetParent(simpleNode0);
      charArray0[0] = 'P';
      charArray0[1] = '{';
      charArray0[2] = ';';
      SimpleNode simpleNode2 = (SimpleNode)simpleNode1.jjtGetParent();
      simpleNode2.toString();
      simpleNode2.setIdentifier("~Lx");
      SimpleNode simpleNode3 = (SimpleNode)simpleNode1.jjtGetParent();
      simpleNode1.jjtAddChild(simpleNode3, 24);
      simpleNode1.jjtGetNumChildren();
      simpleNode3.setIdentifier(">=");
      simpleNode1.dump("I", stringWriter0);
      simpleNode3.jjtSetParent(simpleNode0);
      StringReader stringReader0 = new StringReader("$");
      simpleNode3.toString();
      stringReader0.ready();
      JavaParser javaParser0 = new JavaParser(stringReader0);
      // Undeclared exception!
      try { 
        simpleNode1.jjtAddChild(simpleNode0, (-1445817826));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1445817826
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.0984042115957973
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      SimpleNode simpleNode1 = new SimpleNode(0);
      simpleNode1.id = 0;
      simpleNode0.jjtSetParent(simpleNode1);
      simpleNode1.jjtClose();
      simpleNode1.id = 25;
      StringWriter stringWriter0 = new StringWriter(0);
      char[] charArray0 = new char[9];
      simpleNode1.jjtSetParent(simpleNode0);
      charArray0[0] = 'P';
      charArray0[2] = 'C';
      Node node0 = simpleNode1.jjtGetParent();
      node0.setIdentifier("~Lx");
      simpleNode1.jjtAddChild(simpleNode1, 24);
      simpleNode1.jjtGetNumChildren();
      String string0 = "$";
      // Undeclared exception!
      simpleNode1.dump("w", stringWriter0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.8860524184638023
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      SimpleNode simpleNode1 = new SimpleNode(0);
      simpleNode1.id = 0;
      simpleNode0.jjtSetParent(simpleNode1);
      simpleNode1.jjtClose();
      simpleNode1.setIdentifier("CompilationUnit");
      simpleNode0.setIdentifier("");
      StringWriter stringWriter0 = new StringWriter(0);
      char[] charArray0 = new char[9];
      simpleNode1.jjtSetParent(simpleNode0);
      charArray0[0] = 'P';
      charArray0[1] = '{';
      charArray0[2] = 'C';
      simpleNode1.jjtGetParent();
      Node node0 = simpleNode1.jjtGetParent();
      simpleNode1.jjtAddChild(node0, 24);
      simpleNode1.jjtGetNumChildren();
      simpleNode1.dump("", stringWriter0);
      simpleNode0.jjtClose();
      simpleNode0.jjtSetParent(node0);
      simpleNode0.jjtAddChild(node0, 25);
      simpleNode0.toString("$");
      simpleNode0.jjtAddChild(simpleNode1, 25);
      simpleNode1.toString("&&");
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      simpleNode1.jjtGetChild(0);
      Node node1 = node0.jjtGetParent();
      assertEquals(25, simpleNode1.jjtGetNumChildren());
      assertEquals(26, node1.jjtGetNumChildren());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.6568644401814485
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      SimpleNode simpleNode1 = new SimpleNode(0);
      simpleNode0.jjtSetParent(simpleNode1);
      simpleNode0.setIdentifier("I");
      StringWriter stringWriter0 = new StringWriter(0);
      char[] charArray0 = new char[9];
      simpleNode1.jjtSetParent(simpleNode0);
      charArray0[0] = 'P';
      charArray0[1] = '{';
      charArray0[2] = 'C';
      SimpleNode simpleNode2 = (SimpleNode)simpleNode1.jjtGetParent();
      simpleNode2.toString();
      simpleNode2.setIdentifier("");
      SimpleNode simpleNode3 = (SimpleNode)simpleNode1.jjtGetParent();
      simpleNode1.jjtAddChild(simpleNode3, 24);
      simpleNode2.jjtGetParent();
      simpleNode1.jjtAddChild(simpleNode3, 1995);
      simpleNode3.dump("^3|", stringWriter0);
      simpleNode0.jjtAddChild(simpleNode2, 572);
      simpleNode0.jjtAddChild(simpleNode1, 572);
      assertEquals(1996, simpleNode1.jjtGetNumChildren());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.5786000152695845
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.jjtClose();
      SystemInUtil.addInputLine("CompilationUnit");
      simpleNode0.setIdentifier("CompilationUnit");
      simpleNode0.setIdentifier("");
      char[] charArray0 = new char[9];
      simpleNode0.jjtSetParent(simpleNode0);
      charArray0[0] = 'P';
      charArray0[1] = '{';
      charArray0[2] = 'C';
      Node node0 = simpleNode0.jjtGetParent();
      node0.setIdentifier("~Lx");
      Node node1 = simpleNode0.jjtGetParent();
      simpleNode0.jjtAddChild(node1, 24);
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtClose();
      simpleNode0.jjtSetParent(node1);
      simpleNode0.toString("$");
      simpleNode0.jjtAddChild(simpleNode0, 25);
      assertEquals(26, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.6105981585090816
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.setIdentifier("CompilCtionUnit");
      StringWriter stringWriter0 = new StringWriter(0);
      simpleNode0.toString();
      StringWriter stringWriter1 = new StringWriter();
      StringWriter stringWriter2 = stringWriter0.append('4');
      simpleNode0.setIdentifier("I- ");
      StringReader stringReader0 = new StringReader("CompilationUnit : CompilCtionUnit");
      SimpleNode simpleNode1 = new SimpleNode((-2293));
      simpleNode1.dump("}", stringWriter1);
      // Undeclared exception!
      try { 
        stringWriter2.append((CharSequence) "}", (-1326), 0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.3137063051745135
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)6;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      SystemInUtil.addInputLine("*ge");
      StringReader stringReader0 = new StringReader("\"%\"");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      stringReader0.read();
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 10);
      StringWriter stringWriter0 = new StringWriter();
      char[] charArray0 = new char[0];
      stringWriter0.write(charArray0);
      char[] charArray1 = new char[5];
      simpleNode0.toString("\"%\"");
      simpleNode0.setIdentifier("\"%\"");
      charArray1[0] = 'H';
      charArray1[1] = 'H';
      charArray1[2] = '=';
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "\"%\"");
      stringWriter1.write((-2399));
      simpleNode0.dump("\"%\"", stringWriter1);
      StringWriter stringWriter2 = new StringWriter('=');
      simpleNode0.dump("&", stringWriter1);
      assertEquals("\"%\"\uF6A1<EnumConstant>\n  <identifier>\"%\"</identifier>\n</EnumConstant>\n<EnumConstant>\n  <identifier>\"%\"</identifier>\n</EnumConstant>\n", stringWriter0.toString());
      assertEquals("\"%\"\uF6A1<EnumConstant>\n  <identifier>\"%\"</identifier>\n</EnumConstant>\n<EnumConstant>\n  <identifier>\"%\"</identifier>\n</EnumConstant>\n", stringWriter1.toString());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)6;
      byteArray0[1] = (byte)29;
      byteArray0[2] = (byte) (-25);
      byteArray0[3] = (byte)88;
      byteArray0[4] = (byte) (-75);
      byteArray0[5] = (byte)19;
      byteArray0[6] = (byte) (-108);
      byteArray0[7] = (byte) (-28);
      byteArray0[8] = (byte) (-51);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      StringReader stringReader0 = new StringReader("\"%\"");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, (byte) (-25));
      StringWriter stringWriter0 = new StringWriter();
      Node[] nodeArray0 = new Node[8];
      nodeArray0[0] = (Node) simpleNode0;
      stringReader0.close();
      nodeArray0[1] = (Node) simpleNode0;
      nodeArray0[2] = (Node) simpleNode0;
      nodeArray0[3] = (Node) simpleNode0;
      nodeArray0[4] = (Node) simpleNode0;
      nodeArray0[5] = (Node) simpleNode0;
      nodeArray0[6] = (Node) simpleNode0;
      nodeArray0[7] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      StringWriter stringWriter1 = stringWriter0.append('X');
      // Undeclared exception!
      try { 
        simpleNode0.dump("\"%\"", stringWriter1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-1051));
      simpleNode0.id = 0;
      SimpleNode simpleNode1 = new SimpleNode(0);
      simpleNode0.jjtSetParent(simpleNode1);
      simpleNode0.id = 0;
      simpleNode0.jjtGetParent();
      simpleNode0.jjtSetParent(simpleNode1);
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtGetParent();
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.5421123099033152
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      SimpleNode simpleNode1 = new SimpleNode(0);
      simpleNode1.id = 0;
      simpleNode0.jjtSetParent(simpleNode1);
      simpleNode0.setIdentifier("");
      StringWriter stringWriter0 = new StringWriter(0);
      char[] charArray0 = new char[9];
      charArray0[0] = 'P';
      charArray0[1] = '{';
      charArray0[2] = 'C';
      charArray0[8] = 'C';
      charArray0[4] = '#';
      charArray0[5] = '7';
      charArray0[6] = '(';
      charArray0[8] = 'f';
      stringWriter0.write(charArray0);
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "", 0, 0);
      char[] charArray1 = new char[0];
      stringWriter1.flush();
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray1);
      CharBuffer.wrap(charArray0, 0, 0);
      charBuffer0.put(charArray1);
      StringWriter stringWriter2 = stringWriter1.append((CharSequence) charBuffer0);
      simpleNode0.dump("", stringWriter2);
      assertEquals("P{C\u0000#7(\u0000f<CompilationUnit>\n</CompilationUnit>\n", stringWriter2.toString());
      
      String string0 = simpleNode0.toString();
      assertEquals("CompilationUnit : ", string0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.2272082109560913
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)6;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      SystemInUtil.addInputLine("*ge");
      StringReader stringReader0 = new StringReader("\"%\"");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      stringReader0.read();
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 10);
      StringWriter stringWriter0 = new StringWriter();
      char[] charArray0 = new char[0];
      stringWriter0.write(charArray0);
      char[] charArray1 = new char[5];
      simpleNode0.toString("\"%\"");
      simpleNode0.setIdentifier("\"%\"");
      charArray1[0] = 'H';
      charArray1[1] = 'H';
      charArray1[2] = '=';
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "\"%\"");
      stringWriter1.write((-2399));
      simpleNode0.dump("\"%\"", stringWriter1);
      SimpleNode simpleNode1 = new SimpleNode((byte)6);
      StringWriter stringWriter2 = new StringWriter('=');
      simpleNode1.dump("&", stringWriter1);
      assertEquals("\"%\"\uF6A1<EnumConstant>\n  <identifier>\"%\"</identifier>\n</EnumConstant>\n", stringWriter0.toString());
      assertEquals("\"%\"\uF6A1<EnumConstant>\n  <identifier>\"%\"</identifier>\n</EnumConstant>\n", stringWriter1.toString());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.214534764133424
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-1553));
      simpleNode0.jjtGetNumChildren();
      Node node0 = simpleNode0.parent;
      Node[] nodeArray0 = new Node[9];
      nodeArray0[0] = null;
      nodeArray0[1] = null;
      nodeArray0[2] = null;
      nodeArray0[3] = null;
      nodeArray0[4] = null;
      nodeArray0[5] = null;
      nodeArray0[6] = (Node) simpleNode0;
      nodeArray0[7] = (Node) simpleNode0;
      nodeArray0[8] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      simpleNode0.parent = null;
      simpleNode0.jjtAddChild((Node) null, 74);
      simpleNode0.jjtGetParent();
      simpleNode0.jjtClose();
      simpleNode0.jjtClose();
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild((-329));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -329
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)6;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      StringReader stringReader0 = new StringReader("\"%\"");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      stringReader0.read();
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 10);
      StringWriter stringWriter0 = new StringWriter();
      char[] charArray0 = new char[5];
      charArray0[0] = 'S';
      charArray0[1] = 'S';
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)6;
      byteArray0[1] = (byte)29;
      byteArray0[2] = (byte) (-25);
      byteArray0[3] = (byte)88;
      byteArray0[4] = (byte) (-75);
      byteArray0[5] = (byte)19;
      byteArray0[6] = (byte) (-108);
      byteArray0[7] = (byte) (-28);
      byteArray0[8] = (byte) (-51);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      SimpleNode simpleNode0 = null;
      try {
        simpleNode0 = new SimpleNode((JavaParser) null, (-5867));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.jjtOpen();
      simpleNode0.jjtOpen();
      assertEquals(0, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-2217));
      Node[] nodeArray0 = new Node[7];
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[1] = (Node) simpleNode0;
      nodeArray0[2] = (Node) simpleNode0;
      nodeArray0[3] = (Node) simpleNode0;
      nodeArray0[4] = (Node) simpleNode0;
      nodeArray0[5] = (Node) simpleNode0;
      nodeArray0[6] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      String string0 = "79i5sxu:Z";
      // Undeclared exception!
      try { 
        simpleNode0.toString("79i5sxu:Z");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2217
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.022248870579868
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(mockFileInputStream0, (InputStream) null);
      JavaParser javaParser0 = new JavaParser(sequenceInputStream0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 0);
      simpleNode0.setIdentifier("E[,RrTurN_ ");
      simpleNode0.toString("E[,RrTurN_ ");
      simpleNode0.setIdentifier("");
      assertEquals(0, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.131379725639433
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null, 0);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 0);
      javaParserTokenManager0.defaultLexState = 0;
      javaParserTokenManager0.jjnewStateCnt = (-1);
      simpleNode0.jjtOpen();
      String string0 = "*lt";
      simpleNode0.toString();
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.append('4');
      simpleNode0.dump("*lt", stringWriter0);
      javaParserTokenManager0.defaultLexState = 0;
      javaParserTokenManager0.jjmatchedKind = (-565);
      simpleNode0.jjtGetParent();
      simpleNode0.jjtAddChild((Node) null, 0);
      simpleNode0.dump("$", stringWriter0);
      simpleNode0.jjtClose();
      simpleNode0.jjtSetParent(simpleNode0);
      simpleNode0.jjtGetNumChildren();
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild(simpleNode0, (-2184));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2184
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)6;
      byteArray0[1] = (byte)6;
      byteArray0[2] = (byte) (-25);
      byteArray0[3] = (byte)88;
      byteArray0[4] = (byte) (-75);
      byteArray0[5] = (byte)19;
      byteArray0[6] = (byte) (-108);
      byteArray0[7] = (byte) (-28);
      byteArray0[8] = (byte) (-51);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      SimpleNode simpleNode0 = new SimpleNode(55);
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild(simpleNode0, (byte) (-51));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.2311729392114588
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      SimpleNode simpleNode1 = new SimpleNode(0);
      simpleNode1.id = 0;
      simpleNode0.jjtSetParent(simpleNode1);
      simpleNode1.jjtClose();
      StringWriter stringWriter0 = new StringWriter(0);
      char[] charArray0 = new char[9];
      charArray0[0] = 'P';
      charArray0[1] = '{';
      charArray0[2] = 'C';
      simpleNode1.jjtGetParent();
      simpleNode1.jjtGetParent();
      simpleNode1.jjtAddChild((Node) null, 24);
      simpleNode1.jjtGetNumChildren();
      simpleNode0.jjtClose();
      simpleNode0.jjtSetParent((Node) null);
      simpleNode0.jjtAddChild((Node) null, 25);
      simpleNode0.toString("$");
      simpleNode0.jjtAddChild(simpleNode1, 25);
      simpleNode1.toString("&&");
      simpleNode1.jjtGetParent();
      simpleNode0.dump("&&CompilationUnit", stringWriter0);
      simpleNode0.jjtGetChild(25);
      simpleNode1.jjtGetParent();
      simpleNode1.jjtGetParent();
      assertEquals(25, simpleNode1.jjtGetNumChildren());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.2248830687452414
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(533);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "");
      stringWriter1.flush();
      char[] charArray0 = new char[7];
      charArray0[0] = 'E';
      charArray0[1] = '&';
      charArray0[2] = 'q';
      charArray0[3] = '/';
      charArray0[4] = '0';
      charArray0[5] = 'i';
      charArray0[6] = '?';
      stringWriter0.write(charArray0);
      stringWriter0.append((CharSequence) "");
      simpleNode0.dump("", stringWriter1);
      // Undeclared exception!
      try { 
        simpleNode0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 533
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.5696376201112083
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)6;
      SystemInUtil.addInputLine("*ge");
      StringReader stringReader0 = new StringReader("*ge");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      stringReader0.read();
      javaParser0.TypeArgument();
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "\"%\"");
      stringWriter1.close();
      stringWriter1.flush();
      StringReader stringReader1 = new StringReader("!=");
      SimpleNode simpleNode0 = new SimpleNode((byte)6);
      simpleNode0.toString();
      stringReader1.ready();
      StringReader stringReader2 = new StringReader("4zkrjm`");
      JavaParser javaParser1 = new JavaParser(stringReader2);
      try { 
        javaParser0.MethodDeclaration(2837);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 2.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }
}
