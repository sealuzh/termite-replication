/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 15:56:16 GMT 2019
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.ConcurrentModificationException;
import java.util.LinkedList;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.businessLayer.VariableSummary;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.747864135916147
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.cloneAttributes(derivedVariable1);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDescription("\"oC]n");
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable1.setQuestionNumber("O2WB~@Ups");
      derivedVariable0.setIsNewRecord(false);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.setColumnEnd("q");
      User user0 = new User("*+;M8", "lD#klCpI5`4");
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      ontologyTerm0.setTerm("*+;M8");
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.iterator();
      arrayList0.trimToSize();
      arrayList0.add((Variable) derivedVariable0);
      arrayList0.ensureCapacity(321);
      derivedVariable0.removeSourceVariables(arrayList0);
      derivedVariable0.getColumnStart();
      derivedVariable1.getQuestionNumber();
      derivedVariable0.setNotes("lD#klCpI5`4");
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.getOntologyTerms();
      assertEquals("q", derivedVariable0.getColumnEnd());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = "R6ank";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      User user0 = new User();
      rawVariable0.createVariableSummary();
      try { 
        User.checkValidEmail("ql");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // The email value \"ql\" is not valid.
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.816631340892365
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeSupportingDocuments(arrayList0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setYear("variable.codeBookNumber.label");
      rawVariable0.removeSupportingDocuments(arrayList0);
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.setYear("tMeQ+,fxKh");
      rawVariable2.setLabel("variable.codeBookNumber.label");
      RawVariable rawVariable3 = new RawVariable();
      rawVariable3.setAlternativeVariable(rawVariable1);
      User user0 = new User("d!M", "USER");
      RawVariable.detectFieldChanges(user0, rawVariable2, rawVariable1);
      rawVariable0.cloneAttributes(rawVariable3);
      User.detectFieldChanges(user0, user0, user0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList1 = rawVariable1.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList1.add(ontologyTerm0);
      derivedVariable0.setOntologyTerms(arrayList1);
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, rawVariable2);
      System.setCurrentTimeMillis((-3252L));
      try { 
        RawVariable.validateFields(rawVariable3);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.9431598145315694
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      ValueLabel valueLabel0 = new ValueLabel();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setYear((String) null);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      rawVariable0.setSupportingDocuments(arrayList0);
      arrayList0.stream();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      arrayList1.trimToSize();
      derivedVariable0.getNotes();
      derivedVariable0.removeOntologyTerms(arrayList1);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setSupportingDocuments(arrayList0);
      derivedVariable1.setAlternativeVariable(derivedVariable0);
      supportingDocument0.setDescription("Y_kfXQh&:P$FX");
      derivedVariable0.addSupportingDocument(supportingDocument0);
      derivedVariable1.setCleaningDescription("variable.codeBookNumber.label");
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.updateOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.925700669149943
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = "blank";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.cloneAttributes(derivedVariable0);
      Variable.validateFields(rawVariable0);
      rawVariable0.getDisplayName();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      rawVariable0.removeSupportingDocuments(arrayList0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setYear("UNABLE_TO_CLEAR_TABLE");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList0.add(supportingDocument1);
      rawVariable1.setSupportingDocuments(arrayList0);
      arrayList0.stream();
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      arrayList1.trimToSize();
      derivedVariable0.getNotes();
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms(arrayList1);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.964763373583426
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = "blank";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm0.setOntologyName("blank");
      RawVariable rawVariable1 = new RawVariable();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm2.setTerm("supportingDocument.documentCode.saveChanges");
      ontologyTerm2.clone();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      boolean boolean0 = rawVariable1.containsOntologyTerm(ontologyTerm5);
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      boolean boolean1 = rawVariable0.containsOntologyTerm(ontologyTerm5);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(boolean1 == boolean0);
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertTrue(boolean1);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.783849851432783
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = "blank";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.cloneAttributes(derivedVariable0);
      Variable.validateFields(rawVariable0);
      rawVariable0.getDisplayName();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      rawVariable0.removeSupportingDocuments(arrayList0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setYear("UNABLE_TO_CLEAR_TABLE");
      rawVariable0.setLabel("tMeQ+,fxKh");
      rawVariable0.setAlternativeVariable(derivedVariable0);
      User user0 = new User("d!M", "d!M");
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      rawVariable0.cloneAttributes(rawVariable1);
      // Undeclared exception!
      try { 
        rawVariable0.containsOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.7542454494884048
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.cloneAttributes(rawVariable0);
      derivedVariable0.getValueLabels();
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.cloneAttributes(derivedVariable0);
      rawVariable1.setLabel("tXK{VeNkk3");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable1.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.getOntologyTerms();
      derivedVariable0.setAlias("qj~iO>yd");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      rawVariable0.setSupportingDocuments(arrayList0);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      arrayList1.stream();
      derivedVariable0.getOntologyTerms();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.getNotes();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable3.removeOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.720905729214054
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.validateFields(derivedVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.addOntologyTerm((OntologyTerm) null);
      rawVariable0.setQuestionNumber("");
      rawVariable0.setCodeBookNumber("UNABLE_TO_GET_VARIABLE_IDENTIFIER");
      User user0 = null;
      // Undeclared exception!
      try { 
        rawVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      // Undeclared exception!
      try { 
        rawVariable0.removeSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.932975877655299
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.validateFields(valueLabel0);
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      rawVariable0.addSupportingDocuments(arrayList0);
      rawVariable0.removeValueLabel(valueLabel0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.addValueLabel(valueLabel0);
      rawVariable0.cloneAttributes(rawVariable1);
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      
      rawVariable1.setCleaningStatus("nXx\"SI009");
      rawVariable1.clone();
      rawVariable0.setColumnStart("");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable1.addOntologyTerm(ontologyTerm0);
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      Variable.validateFields(rawVariable0);
      rawVariable0.getForm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getSourceVariables();
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.6970084761145108
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeSupportingDocuments(arrayList0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setYear("d!M");
      rawVariable0.setLabel("");
      rawVariable1.setAlternativeVariable(derivedVariable0);
      User user0 = new User("d!M", "d!M");
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable1);
      rawVariable1.cloneAttributes(derivedVariable0);
      RawVariable rawVariable2 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable3 = new RawVariable();
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      RawVariable rawVariable4 = new RawVariable();
      rawVariable3.getOntologyTerms();
      derivedVariable0.setSourceVariables(arrayList1);
      derivedVariable0.getLabel();
      assertEquals("d!M", derivedVariable0.getYear());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.9163010988823297
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setForm("");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.removeOntologyTerms(arrayList0);
      ArrayList<SupportingDocument> arrayList1 = derivedVariable0.getSupportingDocuments();
      arrayList0.parallelStream();
      derivedVariable0.removeSupportingDocuments(arrayList1);
      derivedVariable0.setOntologyTerms(arrayList0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.columnStart = "BSAjn;c\"1";
      derivedVariable1.setAlternativeVariable(derivedVariable0);
      derivedVariable0.containsSourceVariable(derivedVariable1);
      derivedVariable0.getName();
      derivedVariable0.setColumnStart("BSAjn;c\"1");
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.getDisplayName();
      ValueLabel.validateFields(valueLabel0);
      derivedVariable1.removeValueLabel(valueLabel0);
      derivedVariable1.setLabel("");
      derivedVariable1.getOntologyTerms();
      derivedVariable1.removeOntologyTerm(ontologyTerm0);
      derivedVariable0.addSourceVariable(derivedVariable1);
      ArrayList<Variable> arrayList2 = new ArrayList<Variable>();
      derivedVariable0.addSourceVariables(arrayList2);
      derivedVariable0.createVariableSummary();
      derivedVariable0.setLabel("");
      derivedVariable1.setAlias("Ltt`");
      derivedVariable0.removeSupportingDocuments(arrayList1);
      derivedVariable0.getIdentifier();
      derivedVariable0.clone();
      assertEquals("BSAjn;c\"1", derivedVariable0.getColumnStart());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.750523356764439
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.form = "Pkovh";
      derivedVariable0.clone();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(true);
      ontologyTerm0.setDescription("k2_");
      ontologyTerm0.setNameSpace("Pkovh");
      derivedVariable0.setCleaningStatus("Pkovh");
      derivedVariable0.setCategory("Pkovh");
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.getFilePath();
      derivedVariable0.getSupportingDocuments();
      derivedVariable0.isCoded();
      derivedVariable0.getLabel();
      derivedVariable0.clone();
      assertEquals("Pkovh", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.6747188342011805
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.form = "e^w;x-G_U";
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      derivedVariable0.containsSourceVariable(rawVariable0);
      derivedVariable0.setIsNewRecord(false);
      RawVariable rawVariable1 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      arrayList0.add(ontologyTerm3);
      derivedVariable0.addOntologyTerms(arrayList0);
      derivedVariable0.setNotes("?");
      derivedVariable0.createVariableSummary();
      derivedVariable0.clone();
      assertEquals("?", derivedVariable0.getNotes());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.725438184602819
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.cloneAttributes(rawVariable0);
      derivedVariable0.columnEnd = "tXK{VeNkk3";
      derivedVariable0.getValueLabels();
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.cloneAttributes(derivedVariable1);
      rawVariable0.setLabel("tXK{VeNkk3");
      ArrayList<OntologyTerm> arrayList0 = derivedVariable1.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      derivedVariable1.addOntologyTerms(arrayList0);
      derivedVariable0.setNotes("tXK{VeNkk3");
      derivedVariable0.createVariableSummary();
      derivedVariable0.clone();
      assertEquals("tXK{VeNkk3", derivedVariable0.getColumnEnd());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.775156983693691
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setAlias("$Y_ ");
      derivedVariable0.containsSourceVariable(derivedVariable1);
      derivedVariable0.clone();
      derivedVariable0.setName("$Y_ ");
      derivedVariable0.createVariableSummary();
      derivedVariable1.getFilePath();
      derivedVariable1.getColumnStart();
      derivedVariable0.getAvailability();
      assertEquals("$Y_ ", derivedVariable0.getDisplayName());
      
      derivedVariable1.createVariableSummary();
      User user0 = new User("variable.alternativeVariable.label", "variable.alternativeVariable.label");
      RawVariable rawVariable0 = new RawVariable();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, derivedVariable1);
      assertEquals(0, derivedVariable1.getIdentifier());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.7048489620387994
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      rawVariable0.setCleaningDescription("&2ZcKJ1$m;uH(");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.createVariableSummary();
      rawVariable1.setQuestionNumber("&2ZcKJ1$m;uH(");
      derivedVariable0.containsSourceVariable(rawVariable0);
      rawVariable0.cloneAttributes(derivedVariable0);
      rawVariable1.isCoded();
      rawVariable0.isCoded();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.setSourceVariables(arrayList0);
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.0216445991350285
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.hasSameDisplayName(derivedVariable0);
      rawVariable0.getIdentifier();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.setForm("");
      supportingDocument0.setIdentifier(0);
      derivedVariable0.setColumnEnd("ql");
      rawVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.setColumnStart("");
      User user0 = new User(" f", "O2WB~@Ups");
      user0.setUserID((String) null);
      user0.setCounty("He@y;3");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable1.removeSupportingDocuments(arrayList0);
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      derivedVariable0.getLabel();
      derivedVariable0.getDisplayName();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      ArrayList<Variable> arrayList1 = derivedVariable2.getSourceVariables();
      derivedVariable0.setSourceVariables(arrayList1);
      assertEquals("ql", derivedVariable0.getColumnEnd());
      
      derivedVariable2.getForm();
      assertEquals("Unknown", derivedVariable2.getCleaningStatus());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.6820748660026672
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      String string0 = "UNABLE_TO_FILTER_SUMMARIES";
      user0.setAffiliation("UNABLE_TO_FILTER_SUMMARIES");
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, rawVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm1);
      boolean boolean1 = derivedVariable0.isCleaned();
      assertFalse(derivedVariable0.isCoded());
      assertTrue(boolean1 == boolean0);
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(boolean1);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.819151107739617
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.form = "e^w;x-G_U";
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      derivedVariable0.containsSourceVariable(rawVariable0);
      rawVariable0.setLabel("e^w;x-G_U");
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.setAlternativeVariable(rawVariable1);
      User user1 = new User("tXK{VeNkk3", "n;-j{K:ifFY ]s;LkX");
      RawVariable rawVariable3 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable3);
      rawVariable2.cloneAttributes(rawVariable1);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable1.containsOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      RawVariable rawVariable4 = new RawVariable();
      rawVariable4.removeOntologyTerm(ontologyTerm0);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      RawVariable rawVariable5 = new RawVariable();
      RawVariable rawVariable6 = new RawVariable();
      rawVariable6.getOntologyTerms();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.getLabel();
      assertEquals("e^w;x-G_U", derivedVariable0.getForm());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.297687147780183
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeSupportingDocuments(arrayList0);
      rawVariable0.createVariableSummary();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      arrayList0.add("O2WB~@Ups");
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add("ontologyTerm.nameSpace.label");
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      arrayList2.add(supportingDocument0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setSupportingDocuments(arrayList2);
      arrayList2.containsAll(arrayList0);
      // Undeclared exception!
      try { 
        rawVariable0.removeSupportingDocuments(arrayList2);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.8281635269413345
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      LinkedList<SupportingDocument> linkedList0 = new LinkedList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      linkedList0.add(supportingDocument0);
      arrayList0.retainAll(linkedList0);
      derivedVariable0.addSupportingDocuments(arrayList0);
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.form = "";
      rawVariable0.setCodeBookNumber("variable.notes.label");
      rawVariable0.setCodeBookNumber("O2WB~@Ups");
      rawVariable0.setAlternativeVariable(derivedVariable0);
      derivedVariable0.addSourceVariable(rawVariable0);
      System.setCurrentTimeMillis(0L);
      rawVariable0.getName();
      derivedVariable0.hasSameDisplayName(rawVariable0);
      User user0 = new User("UNABLE_TO_GET_CATEGORIES_FOR_VARIABLE", "3");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.getSourceVariables();
      rawVariable0.getCategory();
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      rawVariable0.getForm();
      assertEquals("O2WB~@Ups", rawVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.9597590167950316
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setFilePath((String) null);
      rawVariable0.setForm((String) null);
      String string0 = "s8k=Ldo]\\R`QuEaG";
      User user0 = new User();
      rawVariable0.setCleaningDescription("1hs/sAH{\"No!dKvdj");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.listIterator();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("y");
      User.detectFieldChanges(user0, user0, user0);
      arrayList0.add(ontologyTerm0);
      derivedVariable0.removeOntologyTerms(arrayList0);
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.7637589680700945
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setNotes("UNABLE_TO_GET_CATEGORY_NAME");
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.cloneAttributes(rawVariable0);
      derivedVariable0.columnEnd = "tXK{VeNkk3";
      derivedVariable0.getValueLabels();
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.cloneAttributes(derivedVariable1);
      rawVariable0.setLabel("tXK{VeNkk3");
      derivedVariable1.getOntologyTerms();
      derivedVariable1.setAlias("B$");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      rawVariable0.setSupportingDocuments(arrayList0);
      arrayList0.stream();
      ArrayList<OntologyTerm> arrayList1 = derivedVariable1.getOntologyTerms();
      derivedVariable0.getNotes();
      derivedVariable0.removeOntologyTerms(arrayList1);
      derivedVariable1.setSupportingDocuments(arrayList0);
      derivedVariable0.setCleaningDescription("valueLabel.value.saveChanges");
      rawVariable0.setAlternativeVariable(derivedVariable1);
      RawVariable rawVariable1 = new RawVariable();
      try { 
        RawVariable.validateFields(rawVariable1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.6669919055686817
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      ValueLabel valueLabel0 = new ValueLabel();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.cloneAttributes(rawVariable0);
      derivedVariable0.addValueLabel((ValueLabel) null);
      derivedVariable0.getFilePath();
      rawVariable0.getValueLabels();
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.NEW;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      derivedVariable0.addValueLabel(valueLabel0);
      derivedVariable0.setIdentifier((-1214));
      derivedVariable0.getSourceVariables();
      derivedVariable0.setAlias("");
      assertEquals("-1214", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.673415053526696
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnStart("variable.codeBookNumber.label");
      derivedVariable0.setIdentifier((-484));
      derivedVariable0.getSourceVariables();
      derivedVariable0.getColumnStart();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      arrayList0.add(ontologyTerm0);
      derivedVariable0.setOntologyTerms(arrayList0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = "cd''W7r";
      derivedVariable0.containsSourceVariable(rawVariable0);
      derivedVariable0.setCategory(",[;NE.ViK`%RQI;");
      derivedVariable0.setAvailability(",[;NE.ViK`%RQI;");
      derivedVariable0.getSourceVariables();
      assertEquals("-484", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      rawVariable0.setValueLabels(arrayList0);
      rawVariable0.setCodeBookNumber("eCRMQ-llp=Q#JW}");
      assertEquals("eCRMQ-llp=Q#JW}", rawVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getCleaningStatus();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.clone();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.setColumnEnd("U/*mpgH");
      rawVariable0.getFilePath();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.addValueLabel(valueLabel0);
      rawVariable0.getValueLabels();
      assertEquals("U/*mpgH", rawVariable0.getColumnEnd());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.1290003949677563
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      ValueLabel valueLabel0 = new ValueLabel();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setFilePath("tXK{VeNkk3");
      Variable.validateFields(derivedVariable0);
      assertEquals("tXK{VeNkk3", derivedVariable0.getFilePath());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.727825797928735
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = "blank";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.cloneAttributes(derivedVariable0);
      Variable.validateFields(rawVariable0);
      rawVariable0.getDisplayName();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      rawVariable0.setLabel("7_");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setAlternativeVariable(rawVariable0);
      User user0 = new User("De@30.Kx", "blank");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.cloneAttributes(derivedVariable0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      // Undeclared exception!
      try { 
        rawVariable1.containsOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.6669919055686817
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.removeValueLabel(valueLabel0);
      derivedVariable0.isCoded();
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertFalse(derivedVariable1.isNewRecord());
      
      derivedVariable0.getForm();
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.218456332760875
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setTerm("Ceqceh>y#B");
      ontologyTerm2.clone();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm1);
      rawVariable1.removeOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm1);
      assertTrue(boolean0);
      
      rawVariable0.getOntologyTerms();
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.7463568973953323
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      arrayList0.add("O2WB~@Ups");
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      ArrayList<Variable> arrayList2 = new ArrayList<Variable>();
      derivedVariable0.columnStart = "O2WB~@Ups";
      User user0 = new User("O2WB~@Ups", "general.error.blankField");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertEquals("O2WB~@Ups", derivedVariable0.getColumnStart());
      
      derivedVariable1.getColumnStart();
      assertEquals("Unknown", derivedVariable1.getAvailability());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.776159191192323
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAvailability("variable.saveChanges.valueChanged");
      User user0 = new User("variable.saveChanges.valueChanged", "fV=M");
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable(user0, (Variable) null, (Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.5848560396897087
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.cloneAttributes(rawVariable0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList0.add(ontologyTerm2);
      derivedVariable0.addOntologyTerms(arrayList0);
      derivedVariable0.setNotes("tXK{VeNkk3");
      derivedVariable0.createVariableSummary();
      derivedVariable0.clone();
      assertEquals("tXK{VeNkk3", derivedVariable0.getNotes());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=3.849624739044644
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = "blank";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.cloneAttributes(derivedVariable0);
      Variable.validateFields(rawVariable0);
      rawVariable0.getDisplayName();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      rawVariable0.removeSupportingDocuments(arrayList0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setYear("UNABLE_TO_CLEAR_TABLE");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm0.setTerm("M/VIuP~0ZI<.");
      ontologyTerm0.clone();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm3);
      rawVariable1.removeOntologyTerm(ontologyTerm1);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      rawVariable1.containsOntologyTerm(ontologyTerm1);
      assertEquals("UNABLE_TO_CLEAR_TABLE", rawVariable1.getYear());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      ValueLabel valueLabel0 = new ValueLabel();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setQuestionNumber("P04<eh7:");
      derivedVariable0.getFilePath();
      assertEquals("P04<eh7:", derivedVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.746066410830336
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      User user0 = new User();
      user0.setUserID((String) null);
      RawVariable rawVariable0 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      RawVariable rawVariable1 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable1.containsOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      derivedVariable0.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm2);
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      assertTrue(arrayList1.equals((Object)arrayList0));
      
      String string0 = rawVariable0.getDisplayItemIdentifier();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", string0);
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=3.5856055546841588
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      rawVariable0.setYear("vs4bXSVc1^*|pnp");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.questionNumber = "var}able.columnStrtrlabel";
      rawVariable1.cloneAttributes(rawVariable0);
      assertEquals("", rawVariable0.getYear());
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.hasSameDisplayName(rawVariable1);
      RawVariable rawVariable2 = (RawVariable)rawVariable1.clone();
      assertEquals("var}able.columnStrtrlabel", rawVariable2.getQuestionNumber());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=3.7449610246174903
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User("?qe(a2vk1n:GXq}=c_!", "?qe(a2vk1n:GXq}=c_!");
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument0);
      supportingDocument0.setDocumentCode("ql");
      arrayList0.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList0.add(supportingDocument1);
      derivedVariable0.addSupportingDocuments(arrayList0);
      derivedVariable0.getAlias();
      derivedVariable0.getSupportingDocuments();
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertFalse(derivedVariable1.isNewRecord());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertFalse(derivedVariable1.isCoded());
      assertEquals(0, derivedVariable1.getIdentifier());
      
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      rawVariable0.addOntologyTerms(arrayList1);
      derivedVariable0.hasSameDisplayName(rawVariable0);
      rawVariable0.getColumnStart();
      derivedVariable0.removeSourceVariable(rawVariable0);
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=3.764010092245748
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable1);
      rawVariable0.cloneAttributes(rawVariable1);
      rawVariable0.isNewRecord();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable1.setAlias((String) null);
      rawVariable1.columnStart = " type=";
      rawVariable0.createVariableSummary();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=3.746635936456555
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.removeValueLabel(valueLabel0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setTerm("macaw.businessLayer.ValueLabel$EditingOperationType");
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm1);
      assertFalse(boolean0);
      
      rawVariable0.removeOntologyTerm(ontologyTerm2);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      rawVariable0.cloneAttributes(derivedVariable0);
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      
      rawVariable0.getAlias();
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      arrayList0.add("O2WB~@Ups");
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add("ontologyTerm.nameSpace.label");
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      arrayList2.spliterator();
      arrayList2.add(supportingDocument0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setSupportingDocuments(arrayList2);
      arrayList2.containsAll(arrayList0);
      rawVariable0.setColumnStart("tXK{VeNkk3");
      ArrayList<SupportingDocument> arrayList3 = rawVariable0.getSupportingDocuments();
      arrayList3.stream();
      ArrayList<SupportingDocument> arrayList4 = new ArrayList<SupportingDocument>();
      rawVariable0.getFilePath();
      rawVariable0.getQuestionNumber();
      assertEquals("tXK{VeNkk3", rawVariable0.getColumnStart());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm1);
      arrayList0.add((Variable) derivedVariable0);
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.removeValueLabel(valueLabel0);
      // Undeclared exception!
      try { 
        arrayList0.add(108, (Variable) derivedVariable0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 108, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.726634037681537
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.setForm("&2ZcKJ1$m;uH(");
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.containsSupportingDocument((SupportingDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      User user0 = new User("tXK{VeNkk3", "tXK{VeNkk3");
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable0, (Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.form = "";
      derivedVariable0.getCodeBookNumber();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=3.701619409963828
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = "6hn$";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setTerm("6hn$");
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.getIdentifier();
      rawVariable0.cloneAttributes(rawVariable1);
      assertEquals("6hn$", rawVariable1.getQuestionNumber());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.755739480438498
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setYear("UNABLE_TO_CLEAR_TABLE");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList0.add(supportingDocument1);
      rawVariable0.setSupportingDocuments(arrayList0);
      arrayList0.stream();
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      arrayList1.trimToSize();
      derivedVariable0.getNotes();
      derivedVariable0.removeOntologyTerms(arrayList1);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setSupportingDocuments(arrayList0);
      derivedVariable1.addSupportingDocument(supportingDocument1);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      supportingDocument2.setDescription("xOJ3l:+");
      derivedVariable1.containsSupportingDocument(supportingDocument2);
      DerivedVariable derivedVariable3 = new DerivedVariable();
      derivedVariable2.updateOntologyTerm(ontologyTerm0);
      ArrayList<Variable> arrayList2 = new ArrayList<Variable>();
      assertEquals(0, arrayList2.size());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDocumentCode("9O_0mnV[");
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm2);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getOntologyTerms();
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.getFilePath();
      rawVariable0.getOntologyTerms();
      rawVariable0.getAlternativeVariable();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.getCleaningDescription();
      derivedVariable0.getCleaningDescription();
      derivedVariable0.setColumnEnd("(DW$wzea|");
      derivedVariable0.setCleaningDescription("");
      assertEquals("(DW$wzea|", derivedVariable0.getColumnEnd());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.questionNumber = "var}able.columnStrtrlabel";
      // Undeclared exception!
      try { 
        rawVariable1.cloneAttributes((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlias("OBDN<S)K4YEq9");
      derivedVariable0.setAlias("");
      derivedVariable0.setCoded(false);
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.DELETE;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      derivedVariable0.addValueLabel(valueLabel0);
      derivedVariable0.setLabel("a.++-KL");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertEquals("a.++-KL", derivedVariable0.getLabel());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      ValueLabel valueLabel0 = new ValueLabel();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAvailability("{C");
      derivedVariable0.setCleaned(false);
      derivedVariable0.getFilePath();
      derivedVariable0.getQuestionNumber();
      assertEquals("{C", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.getFilePath();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.addOntologyTerms(arrayList0);
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=3.7471740047912334
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      derivedVariable1.addSupportingDocuments(arrayList0);
      derivedVariable1.setCategory("%");
      ArrayList<Variable> arrayList1 = derivedVariable1.getSourceVariables();
      derivedVariable1.removeSourceVariables(arrayList1);
      derivedVariable0.cloneAttributes(derivedVariable1);
      derivedVariable0.getFilePath();
      derivedVariable0.getSupportingDocuments();
      derivedVariable0.getColumnEnd();
      derivedVariable1.getCategory();
      assertEquals("Unknown", derivedVariable1.getCategory());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.4728278948924696
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.form = "e^w;x-G_U";
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertNotNull(macawChangeEvent0);
      assertEquals(0, macawChangeEvent0.getChangedObjectIdentifier());
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      
      derivedVariable0.containsSourceVariable(rawVariable0);
      derivedVariable0.setIsNewRecord(false);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setAlternativeVariable(derivedVariable0);
      User user1 = new User();
      String string0 = derivedVariable0.getFilePath();
      assertEquals("", derivedVariable0.getName());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", string0);
      
      VariableSummary variableSummary0 = rawVariable1.createVariableSummary();
      assertFalse(rawVariable1.isCleaned());
      assertEquals(0, variableSummary0.getIdentifier());
      assertFalse(rawVariable1.isCoded());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=3.7826811784273566
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.cloneAttributes(rawVariable0);
      derivedVariable0.columnEnd = "tXK{VeNkk3";
      derivedVariable0.getValueLabels();
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.cloneAttributes(derivedVariable1);
      rawVariable0.setLabel("tXK{VeNkk3");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable1.updateOntologyTerm(ontologyTerm0);
      derivedVariable1.getOntologyTerms();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setTerm("B$");
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm1);
      rawVariable0.removeOntologyTerm(ontologyTerm2);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      rawVariable0.getOntologyTerms();
      assertEquals("tXK{VeNkk3", rawVariable0.getLabel());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.7808459625592628
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      rawVariable0.getCleaningStatus();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel0.hasSameDisplayName(valueLabel1);
      rawVariable0.setCodeBookNumber("Unknown");
      rawVariable0.addValueLabel(valueLabel0);
      rawVariable0.getAvailability();
      rawVariable0.getForm();
      rawVariable0.getAvailability();
      rawVariable0.isCleaned();
      rawVariable0.getSupportingDocuments();
      rawVariable0.getName();
      assertEquals("Unknown", rawVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=3.799327657390731
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getValueLabels();
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable1.cloneAttributes(derivedVariable0);
      rawVariable0.setLabel("3* _T:}A*?^");
      ArrayList<OntologyTerm> arrayList0 = derivedVariable1.getOntologyTerms();
      String string0 = "B$";
      DerivedVariable derivedVariable3 = new DerivedVariable();
      derivedVariable3.setName("3* _T:}A*?^");
      derivedVariable3.setAlias("3* _T:}A*?^");
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList1.add(supportingDocument0);
      rawVariable0.setSupportingDocuments(arrayList1);
      arrayList1.stream();
      arrayList1.add(supportingDocument0);
      derivedVariable1.getOntologyTerms();
      derivedVariable3.getNotes();
      derivedVariable0.removeOntologyTerms(arrayList0);
      derivedVariable1.setSupportingDocuments(arrayList1);
      supportingDocument0.setDescription("");
      derivedVariable0.addSupportingDocument(supportingDocument0);
      derivedVariable2.setCleaningDescription("blank");
      derivedVariable1.containsSupportingDocument(supportingDocument0);
      try { 
        DerivedVariable.validateFields(derivedVariable2);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=3.663313071194722
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = "tXK{VeNkk3";
      derivedVariable0.getValueLabels();
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.cloneAttributes(derivedVariable0);
      derivedVariable0.getOntologyTerms();
      derivedVariable0.setAlias("B$");
      assertEquals("B$", derivedVariable0.getAlias());
      
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      assertEquals(0, derivedVariable1.getIdentifier());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      user0.setUserID("&|_.U%NBWEbTxi~");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setMissingValue(true);
      rawVariable0.getYear();
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
  }
}
