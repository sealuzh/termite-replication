/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 15:30:36 GMT 2019
 */

package org.dom4j.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.dom4j.io.OutputFormat;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class OutputFormat_ESTest extends OutputFormat_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.94402561539737
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-expandEmpty:hta");
      outputFormat0.setNewLineAfterNTags(1520);
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      OutputFormat.createCompactFormat();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-expandEmpty:hta";
      stringArray0[1] = "-expandEmpty:hta";
      stringArray0[2] = "-expandEmpty:hta";
      stringArray0[3] = "-expandEmpty:hta";
      stringArray0[4] = "-xhtml:hta";
      stringArray0[5] = "-expandEmpty:hta";
      outputFormat1.parseOptions(stringArray0, 1275);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.getLineSeparator();
      outputFormat0.isNewLineAfterDeclaration();
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('m');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (m)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.3102544315704416
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.setPadText(false);
      outputFormat0.setNewLineAfterNTags(1);
      outputFormat0.setPadText(false);
      String string0 = "";
      outputFormat0.setLineSeparator("");
      outputFormat0.getAttributeQuoteCharacter();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat0.setXHTML(false);
      outputFormat1.setIndentSize(1);
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      outputFormat2.setLineSeparator("");
      outputFormat0.setSuppressDeclaration(false);
      outputFormat1.setIndentSize(2122);
      OutputFormat outputFormat3 = OutputFormat.createCompactFormat();
      outputFormat2.setNewlines(false);
      outputFormat3.setXHTML(false);
      outputFormat3.setSuppressDeclaration(false);
      outputFormat1.getEncoding();
      outputFormat2.setEncoding("ctN3K1b?}'N1 XXw?");
      outputFormat2.getLineSeparator();
      outputFormat3.setAttributeQuoteCharacter('\"');
      outputFormat2.setAttributeQuoteCharacter('\"');
      outputFormat2.getAttributeQuoteCharacter();
      outputFormat3.setIndent("1nN@^p@FlE:?jx+");
      OutputFormat.createCompactFormat();
      // Undeclared exception!
      try { 
        outputFormat1.setAttributeQuoteCharacter('c');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (c)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.1766493221860674
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("?jOTe}:EF", true, "?jOTe}:EF");
      outputFormat0.setTrimText(false);
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat0.setPadText(true);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-padText";
      stringArray0[1] = "?jOTe}:EF";
      stringArray0[2] = "";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat1.isSuppressDeclaration();
      OutputFormat outputFormat2 = new OutputFormat("?jOTe}:EF");
      outputFormat2.setPadText(true);
      OutputFormat outputFormat3 = new OutputFormat("-padText", true, "po)u");
      OutputFormat.createCompactFormat();
      outputFormat1.setSuppressDeclaration(true);
      OutputFormat outputFormat4 = OutputFormat.createCompactFormat();
      String[] stringArray1 = new String[8];
      stringArray1[0] = "po)u";
      stringArray1[1] = "-lineSeparat";
      stringArray1[2] = "?jOTe}:EF";
      stringArray1[3] = "";
      stringArray1[4] = "-padText";
      stringArray1[5] = "?jOTe}:EF";
      stringArray1[6] = "-padText";
      stringArray1[7] = "po)u";
      outputFormat4.parseOptions(stringArray1, 0);
      // Undeclared exception!
      try { 
        outputFormat4.parseOptions(stringArray0, (-117));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -117
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.1984738455075936
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("ctN3K1b?}'N1 XXw?", true, "Xh%Q");
      outputFormat0.setTrimText(false);
      outputFormat0.setPadText(false);
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setIndent("");
      String[] stringArray0 = new String[8];
      stringArray0[1] = "Xh%Q";
      String[] stringArray1 = new String[7];
      stringArray1[0] = "`D8t^bb3^s#pByfQ:>Q";
      stringArray1[1] = "|{FyUHE:'M8I1qw";
      stringArray1[2] = "Xh%Q";
      stringArray1[3] = "Xh%Q";
      stringArray1[4] = "";
      stringArray1[5] = "";
      stringArray1[6] = "";
      outputFormat0.parseOptions(stringArray1, 1);
      outputFormat1.setAttributeQuoteCharacter('\'');
      assertEquals('\'', outputFormat1.getAttributeQuoteCharacter());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.924886245768638
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat0 = new OutputFormat("`D8t^bb3^s#pByfQ:>Q");
      outputFormat0.setIndent(" a|oy63{");
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setNewLineAfterNTags(1403);
      int int0 = outputFormat1.getNewLineAfterNTags();
      assertEquals(1403, int0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.501516696960544
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String string0 = "Xh%Q";
      OutputFormat outputFormat0 = new OutputFormat("ctN3K1b?}'N1 XXw?", true, "Xh%Q");
      outputFormat0.setTrimText(false);
      outputFormat0.setPadText(false);
      OutputFormat.createPrettyPrint();
      String string1 = "-expandEmptyXh%Q";
      String string2 = "|{FyUHE:'M8I1qw";
      String[] stringArray0 = new String[4];
      stringArray0[0] = "Xh%Q";
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('!');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (!)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.864366838339269
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "Xh%Q";
      stringArray0[1] = "Xh%Q";
      stringArray0[2] = "-expandEmpty-expandEmpty";
      stringArray0[3] = "Xh%Q";
      stringArray0[4] = "RgS/RwPy(PzTG";
      stringArray0[5] = "Xh%Q";
      stringArray0[5] = "Xh%Q";
      stringArray0[7] = "[u&ERN<";
      stringArray0[8] = "Xh%Q";
      outputFormat0.parseOptions(stringArray0, 0);
      assertFalse(outputFormat0.isExpandEmptyElements());
      
      int int0 = outputFormat0.parseOptions(stringArray0, 2);
      assertTrue(outputFormat0.isExpandEmptyElements());
      assertEquals(3, int0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.0563590705022143
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-lineSeparator", false);
      outputFormat0.setIndent("-indentSize");
      outputFormat0.setIndent(false);
      outputFormat0.setIndent(false);
      OutputFormat outputFormat1 = new OutputFormat("-lineSeparator", false, "Xhg%Q");
      outputFormat1.setIndent("");
      outputFormat0.setIndentSize(1);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-lineSeparator";
      stringArray0[1] = "-indentSize";
      stringArray0[2] = "-lineSeparator";
      stringArray0[3] = "-indentSize";
      stringArray0[4] = "-indentSize";
      stringArray0[5] = "-lineSeparator";
      stringArray0[6] = "";
      // Undeclared exception!
      try { 
        outputFormat1.parseOptions(stringArray0, 1);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"-lineSeparator\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.9164252258950758
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String string0 = "Xh%Q";
      OutputFormat outputFormat0 = new OutputFormat("Xh%Q", false);
      String string1 = null;
      outputFormat0.setIndent((String) null);
      outputFormat0.setIndent(false);
      outputFormat0.setIndent("-newlines");
      outputFormat0.setIndent(false);
      outputFormat0.setIndent((String) null);
      outputFormat0.setIndentSize(470);
      String string2 = "";
      int int0 = 0;
      OutputFormat outputFormat1 = new OutputFormat("Xh%Q", false);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-newlines";
      // Undeclared exception!
      try { 
        outputFormat1.parseOptions(stringArray0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.8689434973781704
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("Xh%Q", false);
      outputFormat0.setIndent("Xh%Q");
      outputFormat0.setIndent(false);
      outputFormat0.setIndent(false);
      outputFormat0.setIndent("Xh%Q");
      outputFormat0.setIndentSize(0);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "Xh%Q";
      stringArray0[1] = "-encoding";
      outputFormat0.setExpandEmptyElements(false);
      stringArray0[2] = "";
      stringArray0[4] = "Xh%Q";
      stringArray0[5] = "Xh%Q";
      stringArray0[2] = "Xh%Q";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.isXHTML();
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.085788413586281
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      String[] stringArray0 = new String[0];
      outputFormat0.setOmitEncoding(true);
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.setIndent(true);
      outputFormat0.isXHTML();
      outputFormat0.setXHTML(false);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setTrimText(true);
      outputFormat0.setIndent("Xh%Q");
      outputFormat0.isSuppressDeclaration();
      outputFormat0.setPadText(false);
      outputFormat0.isXHTML();
      boolean boolean0 = outputFormat0.isNewlines();
      assertEquals("Xh%Q", outputFormat0.getIndent());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.9410699503727393
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setNewLineAfterNTags((-1));
      outputFormat0.isExpandEmptyElements();
      outputFormat0.setIndent("(}V");
      outputFormat0.getEncoding();
      outputFormat0.setXHTML(false);
      outputFormat0.setXHTML(true);
      outputFormat0.isPadText();
      outputFormat0.isXHTML();
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat0.setIndent(false);
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat0.setNewlines(false);
      assertTrue(outputFormat0.isXHTML());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.2220533368193522
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      outputFormat0.setXHTML(false);
      outputFormat0.setIndent(false);
      outputFormat0.setEncoding("");
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.isTrimText();
      outputFormat0.setIndent(" ");
      String[] stringArray0 = new String[8];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "wDe(i2QX(q,7c";
      stringArray0[5] = "";
      stringArray0[6] = "";
      stringArray0[7] = "";
      outputFormat1.parseOptions(stringArray0, 1306);
      outputFormat1.setOmitEncoding(true);
      outputFormat0.isSuppressDeclaration();
      outputFormat1.setPadText(true);
      boolean boolean0 = outputFormat0.isXHTML();
      assertEquals(" ", outputFormat0.getIndent());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.375949918079805
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true, "");
      String[] stringArray0 = new String[6];
      outputFormat0.setIndent("");
      stringArray0[0] = "";
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setIndent("R");
      stringArray0[1] = "";
      outputFormat0.setSuppressDeclaration(false);
      stringArray0[2] = "";
      stringArray0[3] = "";
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      stringArray0[4] = "";
      stringArray0[5] = "";
      outputFormat0.parseOptions(stringArray0, 3740);
      outputFormat0.setXHTML(false);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.isExpandEmptyElements();
      outputFormat0.isOmitEncoding();
      outputFormat0.isXHTML();
      outputFormat0.setPadText(true);
      outputFormat0.setNewlines(false);
      outputFormat0.getEncoding();
      assertEquals("R", outputFormat0.getIndent());
      
      outputFormat1.getNewLineAfterNTags();
      String string0 = outputFormat1.getLineSeparator();
      assertEquals("\n", string0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.053778405293998
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("V");
      outputFormat0.setEncoding("noR]%xod");
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.setNewlines(false);
      outputFormat0.setNewlines(true);
      outputFormat0.setTrimText(true);
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setIndent("S^U2UNc^uaN");
      outputFormat0.isPadText();
      outputFormat0.setIndent("S^U2UNc^uaN");
      outputFormat0.setIndent(true);
      outputFormat0.setIndent("");
      outputFormat0.isExpandEmptyElements();
      outputFormat0.setNewlines(false);
      outputFormat0.isOmitEncoding();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "S^U2UNc^uaN";
      stringArray0[3] = "noR]%xod";
      stringArray0[4] = "V";
      stringArray0[5] = "S^U2UNc^uaN";
      stringArray0[6] = "aH,u/&{j";
      stringArray0[7] = "";
      stringArray0[8] = "U}Ar\"$SX~;?";
      outputFormat0.parseOptions(stringArray0, 196);
      outputFormat0.setNewLineAfterDeclaration(false);
      int int0 = outputFormat0.getNewLineAfterNTags();
      assertFalse(outputFormat0.isNewLineAfterDeclaration());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.628600373284409
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "`D8t^bb3^+#pEyZfQ:NQ";
      outputFormat0.setTrimText(true);
      assertFalse(outputFormat0.isPadText());
      
      outputFormat0.setPadText(true);
      OutputFormat.createPrettyPrint();
      outputFormat0.setIndent("");
      assertTrue(outputFormat0.isPadText());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.041041881042495
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("Xh%Q", false);
      outputFormat0.setIndent("Xh%Q");
      outputFormat0.setIndent(false);
      outputFormat0.setIndent(false);
      outputFormat0.setIndent("Xh%Q");
      outputFormat0.setTrimText(false);
      outputFormat0.setIndentSize(490);
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.setNewlines(false);
      outputFormat0.setIndent(",7U=W!+4r$o");
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.isSuppressDeclaration();
      assertEquals(",7U=W!+4r$o", outputFormat0.getIndent());
      
      outputFormat0.setIndent("");
      outputFormat0.setPadText(true);
      outputFormat0.isTrimText();
      OutputFormat outputFormat1 = new OutputFormat("");
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat1.setAttributeQuoteCharacter('\"');
      outputFormat0.setSuppressDeclaration(true);
      outputFormat1.setAttributeQuoteCharacter('\"');
      assertFalse(outputFormat1.isOmitEncoding());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.0400432449870047
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "Xh%a";
      stringArray0[2] = "`D8t^bb3^s#pByfQ:>Q";
      stringArray0[4] = "|{FyUHE:'M8I1qw";
      stringArray0[5] = "!30@exjePLsE ";
      stringArray0[6] = "?jO2e}7::EF";
      stringArray0[7] = "?jO2e}7::EF";
      stringArray0[8] = "ctN3K1b?}'N1 XXw?";
      outputFormat0.parseOptions(stringArray0, 0);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.0876740201230506
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setEncoding("");
      outputFormat0.getEncoding();
      outputFormat0.setTrimText(false);
      outputFormat0.setIndent("");
      outputFormat0.setIndentSize((-133));
      outputFormat0.setEncoding("");
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.setNewlines(false);
      outputFormat0.setIndentSize(1);
      outputFormat0.isTrimText();
      outputFormat0.isTrimText();
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat0.isTrimText();
      outputFormat0.getEncoding();
      outputFormat0.setPadText(true);
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.getEncoding();
      outputFormat0.setNewlines(true);
      boolean boolean0 = outputFormat0.isPadText();
      assertEquals(" ", outputFormat0.getIndent());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.627323234076236
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "?jOpe}A::EF";
      outputFormat0.parseOptions(stringArray0, 8);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.336276304502213
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setPadText(true);
      outputFormat0.setLineSeparator("Xh%Q");
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setIndent(true);
      outputFormat0.setIndentSize(39);
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.setNewLineAfterNTags(180);
      outputFormat0.setNewlines(false);
      outputFormat0.setIndent("Xh%Q");
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.isSuppressDeclaration();
      outputFormat0.setIndent("Xh%Q");
      outputFormat0.setPadText(true);
      outputFormat0.isTrimText();
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat0.setAttributeQuoteCharacter('\"');
      outputFormat0.setSuppressDeclaration(false);
      assertEquals("Xh%Q", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[0] = "!30@exjePLsE ";
      stringArray0[1] = "!30@exjePLsE ";
      OutputFormat outputFormat0 = new OutputFormat("!30@exjePLsE ", true);
      int int0 = outputFormat0.getNewLineAfterNTags();
      assertTrue(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isPadText());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertFalse(outputFormat0.isTrimText());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isXHTML());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertEquals(0, int0);
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isOmitEncoding());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.9410699503727398
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setLineSeparator("");
      outputFormat0.setIndentSize(0);
      outputFormat0.setXHTML(true);
      assertTrue(outputFormat0.isNewlines());
      
      outputFormat0.setNewlines(false);
      outputFormat0.isExpandEmptyElements();
      outputFormat0.getIndent();
      outputFormat0.isXHTML();
      outputFormat0.setExpandEmptyElements(false);
      assertTrue(outputFormat0.isXHTML());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-lineSeparator", true, "-lineSeparator");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "-lineSeparator";
      int int0 = outputFormat0.parseOptions(stringArray0, 2);
      assertEquals(2, int0);
      assertFalse(outputFormat0.isOmitEncoding());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertEquals("-lineSeparator", outputFormat0.getIndent());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isPadText());
      assertFalse(outputFormat0.isTrimText());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isXHTML());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertEquals("-lineSeparator", outputFormat0.getEncoding());
      assertTrue(outputFormat0.isNewlines());
      assertEquals("\n", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("Invalid attribute quote character (", true);
      String string0 = outputFormat0.getLineSeparator();
      assertEquals("\n", string0);
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("Invalid attribute quote character (", outputFormat0.getIndent());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertTrue(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isPadText());
      assertFalse(outputFormat0.isTrimText());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isXHTML());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.8299341714698483
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.setIndent("C_3JXG{;'6?{!Q?4'0");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "C_3JXG{;'6?{!Q?4'0";
      stringArray0[1] = "C_3JXG{;'6?{!Q?4'0";
      stringArray0[2] = "C_3JXG{;'6?{!Q?4'0";
      stringArray0[3] = "C_3JXG{;'6?{!Q?4'0";
      stringArray0[4] = "C_3JXG{;'6?{!Q?4'0";
      stringArray0[5] = "C_3JXG{;'6?{!Q?4'0";
      stringArray0[6] = "C_3JXG{;'6?{!Q?4'0";
      outputFormat0.parseOptions(stringArray0, 3919);
      outputFormat0.isXHTML();
      outputFormat0.getIndent();
      assertEquals("C_3JXG{;'6?{!Q?4'0", outputFormat0.getIndent());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("cNQ~&d@wdv/0L");
      outputFormat0.setLineSeparator("Z(u6;!D=|'yPlZX");
      outputFormat0.isPadText();
      outputFormat0.setTrimText(false);
      assertEquals("Z(u6;!D=|'yPlZX", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "`D8t^bb3^+#pEyZfQ:NQ";
      OutputFormat outputFormat0 = new OutputFormat("`D8t^bb3^+#pEyZfQ:NQ", false, "_&Qx%l ~IKJidD*:;4@");
      String string0 = outputFormat0.getEncoding();
      assertEquals("`D8t^bb3^+#pEyZfQ:NQ", outputFormat0.getIndent());
      assertFalse(outputFormat0.isXHTML());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertEquals("_&Qx%l ~IKJidD*:;4@", string0);
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isPadText());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[0] = "-encoding";
      stringArray0[1] = "-encoding";
      stringArray0[4] = "-encoding";
      stringArray0[5] = "Xh%Q";
      stringArray0[7] = "Xh%Q";
      OutputFormat outputFormat0 = new OutputFormat("Q9uWVa~L)/.U");
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('-');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (-)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null, false, (String) null);
      outputFormat0.setTrimText(true);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setEncoding((String) null);
      outputFormat0.setIndent(true);
      outputFormat0.setSuppressDeclaration(true);
      assertTrue(outputFormat0.isSuppressDeclaration());
      assertTrue(outputFormat0.isTrimText());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[6];
      stringArray0[0] = " ";
      stringArray0[1] = " ";
      stringArray0[2] = " ";
      stringArray0[3] = " ";
      stringArray0[4] = " ";
      stringArray0[5] = " ";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1879048189));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1879048189
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.240082774649327
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("Xh%Q", false);
      outputFormat0.setIndent((String) null);
      outputFormat0.setIndent(false);
      outputFormat0.setIndent("-newlines");
      outputFormat0.setIndentSize(470);
      outputFormat0.setExpandEmptyElements(false);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "-encoding";
      stringArray0[1] = "-encoding";
      stringArray0[2] = "";
      stringArray0[3] = "-newlines";
      stringArray0[4] = "-encoding";
      stringArray0[2] = "Xh%Q";
      stringArray0[6] = "Xh%Q";
      stringArray0[7] = "Xh%Q";
      outputFormat0.parseOptions(stringArray0, 470);
      outputFormat0.isXHTML();
      outputFormat0.parseOptions(stringArray0, 1);
      OutputFormat outputFormat1 = new OutputFormat("Q9uWVa~L)/.U");
      boolean boolean0 = outputFormat0.isSuppressDeclaration();
      assertEquals("                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      ", outputFormat0.getIndent());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.6401461330725327
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("Xh%Q", true);
      outputFormat0.setIndent("TxU(%|{rLnSS");
      outputFormat0.setIndent(false);
      outputFormat0.setIndent("\n");
      assertEquals("\n", outputFormat0.getIndent());
      
      outputFormat0.setIndentSize((-687));
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setExpandEmptyElements(true);
      OutputFormat outputFormat1 = new OutputFormat("Q9uWVa~L)/.U");
      outputFormat0.setNewLineAfterDeclaration(true);
      boolean boolean0 = outputFormat1.isSuppressDeclaration();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.1531782505128936
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("Xh%Q", false);
      outputFormat0.setIndent((String) null);
      outputFormat0.setIndent(false);
      outputFormat0.setIndent("-newlines");
      outputFormat0.setIndent(false);
      outputFormat0.setIndent((String) null);
      outputFormat0.setIndentSize(470);
      OutputFormat outputFormat1 = new OutputFormat("Xh%Q", false);
      String[] stringArray0 = new String[6];
      outputFormat1.setNewlines(true);
      // Undeclared exception!
      try { 
        outputFormat1.parseOptions(stringArray0, (-3400));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3400
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", false, "");
      boolean boolean0 = outputFormat0.isNewlines();
      assertFalse(outputFormat0.isOmitEncoding());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertFalse(boolean0);
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isTrimText());
      assertEquals("", outputFormat0.getEncoding());
      assertEquals("", outputFormat0.getIndent());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isXHTML());
      assertFalse(outputFormat0.isPadText());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.2566064904824548
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-lineSeparator";
      stringArray0[1] = "-lineSeparator";
      stringArray0[2] = "4fNCD(jy3|f4u/M<\u0005s";
      stringArray0[3] = "-lineSeparator";
      outputFormat0.parseOptions(stringArray0, 924);
      String[] stringArray1 = new String[5];
      stringArray1[0] = "-lineSeparator";
      outputFormat0.setXHTML(false);
      stringArray1[1] = "-lineSeparator";
      stringArray1[2] = "-lineSeparator";
      stringArray1[3] = "-lineSeparator";
      stringArray1[4] = "-lineSeparator";
      outputFormat0.parseOptions(stringArray1, 924);
      outputFormat0.isXHTML();
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray1, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.9678593488156242
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("Xh%Q", false);
      outputFormat0.setIndent((String) null);
      outputFormat0.setIndent(false);
      outputFormat0.setPadText(false);
      outputFormat0.setIndent("-newlines");
      outputFormat0.setIndent(false);
      outputFormat0.setIndent((String) null);
      outputFormat0.setIndentSize(470);
      assertEquals("                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      ", outputFormat0.getIndent());
      
      OutputFormat outputFormat1 = new OutputFormat("Xh%Q", false);
      assertEquals("\n", outputFormat1.getLineSeparator());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.6537515752494034
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "`D8t^bb3^+#pYyZHQ:NQ";
      outputFormat0.setTrimText(true);
      OutputFormat outputFormat1 = new OutputFormat("`D8t^bb3^+#pYyZHQ:NQ", true, "`D8t^bb3^+#pYyZHQ:NQ");
      assertFalse(outputFormat1.isXHTML());
      assertEquals("`D8t^bb3^+#pYyZHQ:NQ", outputFormat1.getIndent());
      assertFalse(outputFormat1.isOmitEncoding());
      assertFalse(outputFormat1.isTrimText());
      assertFalse(outputFormat1.isExpandEmptyElements());
      assertFalse(outputFormat1.isSuppressDeclaration());
      assertEquals("`D8t^bb3^+#pYyZHQ:NQ", outputFormat1.getEncoding());
      assertEquals("\n", outputFormat1.getLineSeparator());
      assertEquals(0, outputFormat1.getNewLineAfterNTags());
      assertEquals('\"', outputFormat1.getAttributeQuoteCharacter());
      assertFalse(outputFormat1.isPadText());
      assertTrue(outputFormat1.isNewlines());
      assertTrue(outputFormat1.isNewLineAfterDeclaration());
      
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      assertFalse(outputFormat2.isPadText());
      assertFalse(outputFormat2.isNewlines());
      assertTrue(outputFormat2.isTrimText());
      
      String[] stringArray1 = new String[3];
      stringArray1[0] = "`D8t^bb3^+#pYyZHQ:NQ";
      stringArray1[1] = "`D8t^bb3^+#pYyZHQ:NQ";
      stringArray1[2] = "`D8t^bb3^+#pYyZHQ:NQ";
      OutputFormat outputFormat3 = OutputFormat.createPrettyPrint();
      assertEquals("  ", outputFormat3.getIndent());
      assertEquals("\n", outputFormat3.getLineSeparator());
      assertTrue(outputFormat3.isNewlines());
      assertEquals('\"', outputFormat3.getAttributeQuoteCharacter());
      assertTrue(outputFormat3.isTrimText());
      assertFalse(outputFormat3.isSuppressDeclaration());
      assertFalse(outputFormat3.isOmitEncoding());
      assertFalse(outputFormat3.isXHTML());
      assertFalse(outputFormat3.isExpandEmptyElements());
      assertTrue(outputFormat3.isNewLineAfterDeclaration());
      assertTrue(outputFormat3.isPadText());
      assertEquals(0, outputFormat3.getNewLineAfterNTags());
      assertEquals("UTF-8", outputFormat3.getEncoding());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.1771733948452265
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("Xh%Q", false);
      outputFormat0.setIndent("Xh%Q");
      outputFormat0.setIndent(false);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setIndent(false);
      outputFormat0.setIndent("Xh%Q");
      outputFormat0.setTrimText(false);
      outputFormat0.setIndentSize(0);
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setPadText(false);
      outputFormat1.setTrimText(false);
      outputFormat0.setLineSeparator("Xh%Q");
      outputFormat0.setIndent(false);
      outputFormat0.setIndentSize(0);
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat1.setNewLineAfterNTags(1074);
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      outputFormat2.setIndent("Xh%Q");
      outputFormat1.isXHTML();
      outputFormat0.getIndent();
      assertEquals("Xh%Q", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.1531782505128936
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("Xh%Q", false);
      outputFormat0.setIndent((String) null);
      OutputFormat outputFormat1 = new OutputFormat();
      outputFormat1.setIndent(false);
      outputFormat0.setIndent("TL_|Q!Lz");
      outputFormat0.setIndent(true);
      outputFormat0.setIndent((String) null);
      outputFormat0.setIndentSize((-1128));
      OutputFormat outputFormat2 = new OutputFormat("-newlines");
      // Undeclared exception!
      try { 
        outputFormat2.parseOptions((String[]) null, 452);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.840827283190615
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("Xh%Q", false);
      outputFormat0.setIndent((String) null);
      outputFormat0.setIndent(false);
      outputFormat0.setIndent("-newlines");
      outputFormat0.setIndent(false);
      outputFormat0.setIndent((String) null);
      outputFormat0.setIndentSize(470);
      OutputFormat outputFormat1 = new OutputFormat("-newlines");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-newlines";
      stringArray0[1] = "TxU(%|{rLnSSt";
      stringArray0[2] = "-xhtml!30@exjePLsE ";
      stringArray0[3] = "";
      stringArray0[4] = null;
      outputFormat1.parseOptions(stringArray0, 2);
      outputFormat0.parseOptions(stringArray0, 1);
      assertEquals("                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      ", outputFormat0.getIndent());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.9703656144797845
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("Xh%Q", true);
      outputFormat0.setIndent((String) null);
      outputFormat0.setIndent(true);
      outputFormat0.setIndent("-newlines");
      outputFormat0.setIndent(true);
      outputFormat0.setIndent((String) null);
      outputFormat0.setIndentSize(470);
      OutputFormat outputFormat1 = new OutputFormat("Xh%Q", true);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-newlines";
      stringArray0[1] = "TxU(%|{rLnSSt";
      stringArray0[2] = "-xhtml!30@exjePLsE ";
      stringArray0[3] = "";
      stringArray0[5] = "Xh%Q";
      outputFormat0.parseOptions(stringArray0, 470);
      assertEquals("                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      ", outputFormat0.getIndent());
      
      int int0 = outputFormat1.parseOptions(stringArray0, 470);
      assertEquals(470, int0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("Xh%Q", true, "Xh%Q");
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isTrimText());
      assertEquals("Xh%Q", outputFormat0.getEncoding());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isXHTML());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertTrue(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isPadText());
      assertFalse(outputFormat0.isOmitEncoding());
      assertEquals("Xh%Q", outputFormat0.getIndent());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isSuppressDeclaration());
      
      OutputFormat outputFormat1 = new OutputFormat();
      outputFormat1.setIndent("-xhtmlvN%a");
      assertEquals("\n", outputFormat1.getLineSeparator());
      assertFalse(outputFormat1.isOmitEncoding());
      assertEquals("-xhtmlvN%a", outputFormat1.getIndent());
      assertFalse(outputFormat1.isTrimText());
      assertFalse(outputFormat1.isSuppressDeclaration());
      assertEquals('\"', outputFormat1.getAttributeQuoteCharacter());
      assertFalse(outputFormat1.isXHTML());
      assertEquals("UTF-8", outputFormat1.getEncoding());
      assertFalse(outputFormat1.isExpandEmptyElements());
      assertTrue(outputFormat1.isNewLineAfterDeclaration());
      assertFalse(outputFormat1.isNewlines());
      assertEquals(0, outputFormat1.getNewLineAfterNTags());
      assertFalse(outputFormat1.isPadText());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "Xh%Q";
      stringArray0[1] = "-encoding";
      stringArray0[2] = "";
      stringArray0[4] = "Xh%Q";
      stringArray0[5] = "Xh%Q";
      stringArray0[2] = "Xh%Q";
      OutputFormat outputFormat0 = new OutputFormat("ss[Ck;VP@");
      boolean boolean0 = outputFormat0.isNewLineAfterDeclaration();
      assertTrue(boolean0);
      
      int int0 = outputFormat0.getNewLineAfterNTags();
      assertEquals("ss[Ck;VP@", outputFormat0.getIndent());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isPadText());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isXHTML());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals(0, int0);
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-lineSeparator");
      OutputFormat outputFormat1 = new OutputFormat();
      char char0 = outputFormat1.getAttributeQuoteCharacter();
      assertEquals('\"', char0);
      
      outputFormat0.setAttributeQuoteCharacter('\"');
      assertFalse(outputFormat0.isPadText());
      assertFalse(outputFormat0.isOmitEncoding());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("-lineSeparator", outputFormat0.getIndent());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isNewlines());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertFalse(outputFormat0.isXHTML());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      
      outputFormat1.setSuppressDeclaration(false);
      assertFalse(outputFormat1.isExpandEmptyElements());
      assertFalse(outputFormat1.isXHTML());
      assertTrue(outputFormat1.isNewLineAfterDeclaration());
      assertEquals("UTF-8", outputFormat1.getEncoding());
      assertFalse(outputFormat1.isTrimText());
      assertFalse(outputFormat1.isOmitEncoding());
      assertFalse(outputFormat1.isSuppressDeclaration());
      assertEquals("\n", outputFormat1.getLineSeparator());
      assertFalse(outputFormat1.isNewlines());
      assertFalse(outputFormat1.isPadText());
      assertEquals(0, outputFormat1.getNewLineAfterNTags());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.147576009616535
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("Xh%Q", false);
      outputFormat0.setIndent((String) null);
      outputFormat0.setIndent("-newlines");
      outputFormat0.setIndentSize(470);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setExpandEmptyElements(false);
      String[] stringArray0 = new String[11];
      stringArray0[0] = "Tencoding";
      stringArray0[1] = "Tencoding";
      stringArray0[2] = "";
      outputFormat0.parseOptions(stringArray0, 959);
      int int0 = outputFormat0.parseOptions(stringArray0, 1187);
      assertEquals("                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      ", outputFormat0.getIndent());
      assertEquals(1187, int0);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=3.339234009323272
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true);
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat0.isOmitEncoding();
      outputFormat0.setIndent(true);
      outputFormat0.setIndentSize((-3785));
      outputFormat0.setSuppressDeclaration(true);
      outputFormat1.setIndent("lHgmt@Qi");
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setIndent("Hoq]Lj");
      assertEquals("Hoq]Lj", outputFormat0.getIndent());
      
      outputFormat0.setIndentSize((-3785));
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.setIndent(true);
      outputFormat0.setPadText(true);
      outputFormat1.setIndent(false);
      outputFormat0.setLineSeparator("");
      outputFormat1.setXHTML(false);
      outputFormat1.isNewLineAfterDeclaration();
      outputFormat1.setXHTML(true);
      outputFormat1.setIndentSize((-3785));
      outputFormat1.getIndent();
      outputFormat1.setTrimText(true);
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      outputFormat1.setOmitEncoding(false);
      outputFormat2.getIndent();
      outputFormat1.setNewLineAfterNTags((-3785));
      assertTrue(outputFormat1.isNewlines());
  }
}
