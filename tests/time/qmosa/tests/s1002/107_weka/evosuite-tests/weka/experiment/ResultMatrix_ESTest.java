/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 29 16:46:32 GMT 2020
 */

package weka.experiment;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import weka.experiment.ResultMatrix;
import weka.experiment.ResultMatrixCSV;
import weka.experiment.ResultMatrixGnuPlot;
import weka.experiment.ResultMatrixHTML;
import weka.experiment.ResultMatrixLatex;
import weka.experiment.ResultMatrixPlainText;
import weka.experiment.ResultMatrixSignificance;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ResultMatrix_ESTest extends ResultMatrix_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.743535678836661
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(1, 1);
      int[] intArray0 = new int[3];
      intArray0[0] = 0;
      intArray0[1] = 1;
      intArray0[2] = 2;
      resultMatrixGnuPlot0.setColOrder(intArray0);
      resultMatrixGnuPlot0.getDefaultColNameWidth();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      // Undeclared exception!
      try { 
        resultMatrixCSV0.setRanking((int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.7326404161964666
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixSignificance0);
      resultMatrixGnuPlot0.getDefaultColNameWidth();
      int[] intArray0 = new int[2];
      intArray0[0] = 2;
      intArray0[1] = 47;
      resultMatrixGnuPlot0.setRowOrder(intArray0);
      resultMatrixGnuPlot0.setSignificance(0, (-356), 1);
      resultMatrixGnuPlot0.setStdDev(46, (-3802), 1);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.539616597877227
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "v";
      stringArray0[1] = "v";
      ResultMatrixSignificance.main(stringArray0);
      int[] intArray0 = new int[0];
      resultMatrixSignificance0.m_ShowStdDev = true;
      String[] stringArray1 = new String[21];
      stringArray1[0] = ")";
      stringArray1[1] = "(";
      stringArray1[2] = " ";
      stringArray1[4] = ")";
      stringArray1[5] = ")";
      stringArray1[6] = "(";
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(17, 1);
      resultMatrixGnuPlot0.setRowOrder(intArray0);
      resultMatrixGnuPlot0.setSignificance(95, 45, 2705);
      resultMatrixGnuPlot0.setStdDev(1, (-1461), 17);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(2, 27);
      resultMatrixHTML0.addHeader(")", "(");
      resultMatrixHTML0.getDefaultPrintColNames();
      resultMatrixSignificance0.globalInfo();
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.548903315801943
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "v";
      stringArray0[1] = "v";
      ResultMatrixSignificance.main(stringArray0);
      int[] intArray0 = new int[0];
      resultMatrixSignificance0.m_ColOrder = intArray0;
      resultMatrixSignificance0.m_ShowStdDev = true;
      String[] stringArray1 = new String[9];
      stringArray1[0] = ")";
      stringArray1[1] = "(";
      stringArray1[2] = " ";
      stringArray1[3] = " ";
      stringArray1[4] = ")";
      stringArray1[5] = ")";
      stringArray1[6] = "(";
      stringArray1[7] = ")";
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.meanPrecTipText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(123, 1);
      ResultMatrixPlainText.main(stringArray0);
      resultMatrixSignificance0.getColOrder();
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.365385305122271
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(97, 18);
      resultMatrixGnuPlot0.getDefaultRowNameWidth();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixGnuPlot0.setMeanWidth((-2753));
      resultMatrixPlainText0.toStringKey();
      String[] stringArray0 = new String[6];
      stringArray0[0] = " ";
      stringArray0[1] = "";
      stringArray0[2] = "*";
      stringArray0[3] = "(";
      stringArray0[4] = "";
      stringArray0[5] = "";
      resultMatrixPlainText0.setOptions(stringArray0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixPlainText0);
      int[][] intArray0 = new int[1][0];
      int[] intArray1 = new int[5];
      intArray1[0] = 0;
      intArray1[1] = 18;
      intArray1[2] = 1;
      intArray1[3] = (-1);
      intArray1[4] = 0;
      intArray0[0] = intArray1;
      resultMatrixHTML0.setSummary(intArray0, intArray0);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot1);
      resultMatrixCSV0.getRevision();
      resultMatrixPlainText0.isStdDev(0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.225275296722886
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.clear();
      resultMatrixLatex0.getOptions();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      String string0 = ",=|UnIm2";
      int[][] intArray0 = new int[5][6];
      int[] intArray1 = new int[0];
      intArray0[0] = intArray1;
      int[] intArray2 = new int[9];
      intArray2[0] = 1;
      intArray2[1] = 1;
      intArray2[2] = 34;
      intArray2[3] = 2;
      intArray2[4] = 2;
      intArray2[5] = 0;
      intArray2[6] = 0;
      intArray2[7] = 1;
      intArray2[8] = 0;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[7];
      intArray3[0] = 2;
      intArray3[1] = 1;
      intArray3[2] = 34;
      intArray3[3] = 1;
      intArray3[4] = 1;
      intArray3[5] = 1;
      intArray3[6] = 34;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[4];
      intArray4[0] = 1347;
      intArray4[1] = 0;
      intArray4[2] = 1;
      intArray4[3] = 0;
      intArray0[3] = intArray4;
      int[] intArray5 = new int[5];
      intArray5[0] = 0;
      intArray5[1] = 2;
      intArray5[2] = 2;
      intArray5[3] = 0;
      intArray5[4] = 1;
      intArray0[4] = intArray5;
      // Undeclared exception!
      try { 
        resultMatrixLatex0.setRanking(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.562570499925068
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixSignificance0);
      resultMatrixHTML0.getOptions();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      resultMatrixPlainText0.toString();
      resultMatrixLatex0.toArray();
      resultMatrixPlainText0.m_EnumerateRowNames = false;
      resultMatrixLatex0.toStringSummary();
      resultMatrixPlainText0.setMeanPrec(2);
      resultMatrixLatex0.clearRanking();
      resultMatrixHTML0.getShowAverage();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2, 0);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(2, 10);
      int[] intArray0 = new int[2];
      intArray0[0] = 1;
      intArray0[1] = 26;
      resultMatrixGnuPlot1.setColOrder(intArray0);
      resultMatrixGnuPlot1.getDefaultColNameWidth();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[][] intArray1 = new int[5][5];
      Vector<Integer> vector0 = new Vector<Integer>();
      resultMatrixCSV0.m_HeaderValues = vector0;
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      intArray1[4] = intArray0;
      resultMatrixCSV0.setRanking(intArray1);
      resultMatrixCSV0.getDefaultRowNameWidth();
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.9274829883654565
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setCountWidth(1223);
      resultMatrixPlainText0.getDefaultRowNameWidth();
      resultMatrixPlainText0.padString("", (-836));
      resultMatrixPlainText0.getDisplayName();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      int[] intArray0 = new int[9];
      intArray0[0] = 2;
      intArray0[1] = 1;
      intArray0[2] = 2;
      intArray0[3] = 1223;
      intArray0[4] = 1;
      intArray0[5] = 2;
      intArray0[6] = 0;
      intArray0[7] = 0;
      intArray0[8] = 97;
      resultMatrixSignificance0.toStringSummary();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      resultMatrixGnuPlot0.toStringKey();
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.getHeader("7Z6;W}9");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.49859104771569
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      resultMatrixLatex0.setPrintRowNames(false);
      resultMatrixPlainText0.toString();
      resultMatrixLatex0.toArray();
      resultMatrixLatex0.toStringSummary();
      resultMatrixPlainText0.setMeanPrec(2);
      resultMatrixLatex0.clearRanking();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2, 0);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(2, 10);
      int[] intArray0 = new int[2];
      intArray0[0] = 1;
      intArray0[1] = 26;
      resultMatrixGnuPlot1.setColOrder(intArray0);
      resultMatrixGnuPlot1.getDefaultColNameWidth();
      resultMatrixSignificance0.toStringSummary();
      resultMatrixSignificance0.setMean(2268, 2, 1);
      // Undeclared exception!
      try { 
        resultMatrixLatex0.doubleToString(50, (-2026));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.8526379562735795
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.isMean(0);
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.getHeader((String) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.873986707618567
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(7, 7);
      resultMatrixPlainText0.isMean(23);
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.getHeader((String) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.550677325817047
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixSignificance0);
      resultMatrixHTML0.getOptions();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      String string0 = resultMatrixPlainText0.toString();
      assertEquals("Dataset                   (1) col0 \n-----------------------------------\nrow0                       (0)    |\n-----------------------------------\n(v/ /*)                           |\n", string0);
      
      resultMatrixLatex0.toArray();
      resultMatrixLatex0.globalInfo();
      resultMatrixPlainText0.setMeanPrec(2);
      resultMatrixLatex0.clearRanking();
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      
      resultMatrixHTML0.getShowAverage();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(12, 1);
      int[] intArray0 = new int[4];
      intArray0[0] = 2;
      intArray0[1] = 2;
      intArray0[2] = 42;
      intArray0[3] = 0;
      resultMatrixGnuPlot0.setColOrder(intArray0);
      resultMatrixGnuPlot0.getDefaultColNameWidth();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance();
      ResultMatrixSignificance resultMatrixSignificance2 = new ResultMatrixSignificance(resultMatrixSignificance1);
      resultMatrixSignificance2.toStringSummary();
      ResultMatrixSignificance resultMatrixSignificance3 = new ResultMatrixSignificance(2, 97);
      resultMatrixSignificance3.setMean(316, 0, (-2447.7057));
      ResultMatrixSignificance resultMatrixSignificance4 = new ResultMatrixSignificance();
      ResultMatrixSignificance resultMatrixSignificance5 = new ResultMatrixSignificance(resultMatrixSignificance4);
      resultMatrixSignificance5.toStringRanking();
      assertEquals(2, resultMatrixSignificance4.getMeanPrec());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.661100477220633
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 0);
      Vector<Object> vector0 = new Vector<Object>();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      resultMatrixPlainText0.getMean(2, 0);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText1);
      resultMatrixGnuPlot0.setMeanWidth(355);
      ResultMatrixPlainText resultMatrixPlainText2 = new ResultMatrixPlainText(resultMatrixPlainText0);
      resultMatrixPlainText2.toStringKey();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "\tThe width of the standard deviation (0 = optimal).\n\t(default: ";
      stringArray0[1] = "\tThe width of the standard deviation (0 = optimal).\n\t(default: ";
      stringArray0[2] = "v";
      stringArray0[3] = "Key:\n";
      stringArray0[4] = "\"*Bw/";
      stringArray0[5] = "*";
      stringArray0[6] = ")";
      stringArray0[7] = "v";
      stringArray0[8] = "{";
      resultMatrixPlainText2.setOptions(stringArray0);
      resultMatrixPlainText2.getDefaultRemoveFilterName();
      resultMatrixGnuPlot0.setMean(0, 78, 0.0);
      ResultMatrixSignificance.main(stringArray0);
      assertEquals(9, stringArray0.length);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.4107064715342506
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Vector<Object> vector0 = new Vector<Object>();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.toStringKey();
      resultMatrixPlainText0.m_ColNameWidth = 25;
      resultMatrixPlainText0.setOptions((String[]) null);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(2, 25);
      Vector<String> vector1 = new Vector<String>();
      vector1.add("MM/.-A`mhXx[%<s0A-G");
      resultMatrixPlainText1.m_HeaderValues = vector1;
      resultMatrixPlainText1.getDefaultRemoveFilterName();
      // Undeclared exception!
      try { 
        resultMatrixPlainText1.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.5625704999250676
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixSignificance0);
      String[] stringArray0 = resultMatrixHTML0.getOptions();
      assertEquals(18, stringArray0.length);
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
      
      String string0 = resultMatrixPlainText0.toString();
      assertEquals("Dataset                   (1) col0 \n-----------------------------------\nrow0                       (0)    |\n-----------------------------------\n(v/ /*)                           |\n", string0);
      
      resultMatrixLatex0.toArray();
      resultMatrixLatex0.toStringSummary();
      resultMatrixPlainText0.setMeanPrec(2);
      resultMatrixLatex0.clearRanking();
      resultMatrixHTML0.getShowAverage();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2, 0);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(2, 10);
      int[] intArray0 = new int[2];
      intArray0[0] = 1;
      intArray0[1] = 26;
      resultMatrixGnuPlot1.setColOrder(intArray0);
      resultMatrixGnuPlot1.getDefaultColNameWidth();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixHTML0);
      resultMatrixSignificance1.toStringSummary();
      resultMatrixSignificance0.setMean(0, 34, 6.7);
      ResultMatrixSignificance resultMatrixSignificance2 = new ResultMatrixSignificance(48, 0);
      resultMatrixSignificance2.removeFilterName(")");
      resultMatrixSignificance2.toStringRanking();
      resultMatrixLatex0.getDefaultEnumerateColNames();
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      assertEquals(5, resultMatrixLatex0.getCountWidth());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.9652780485597328
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setCountWidth(1223);
      resultMatrixPlainText0.getDefaultRowNameWidth();
      resultMatrixPlainText0.padString("", 5);
      resultMatrixPlainText0.getDisplayName();
      resultMatrixPlainText0.TIE_STRING = "(";
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      int[] intArray0 = new int[1];
      intArray0[0] = 1;
      resultMatrixSignificance0.setRowOrder(intArray0);
      resultMatrixSignificance0.toStringKey();
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.getHeader("Get option -o: ");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.5026691522126177
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "v";
      stringArray0[1] = "v";
      ResultMatrixSignificance.main(stringArray0);
      int[] intArray0 = new int[0];
      resultMatrixSignificance0.m_ColOrder = intArray0;
      resultMatrixSignificance0.m_ShowStdDev = true;
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      resultMatrixPlainText0.setMeanPrec(0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      resultMatrixLatex0.clearRanking();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getShowAverage();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(1319, 3419);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.548903315801943
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "v";
      stringArray0[1] = "v";
      ResultMatrixSignificance.main(stringArray0);
      int[] intArray0 = new int[0];
      resultMatrixSignificance0.m_ColOrder = intArray0;
      resultMatrixSignificance0.m_ShowStdDev = true;
      String[] stringArray1 = new String[9];
      stringArray1[0] = ")";
      stringArray1[1] = "(";
      stringArray1[2] = " ";
      stringArray1[3] = " ";
      stringArray1[4] = ")";
      stringArray1[5] = ")";
      stringArray1[6] = "(";
      stringArray1[7] = "-count-width <int>";
      stringArray1[8] = "v";
      ResultMatrixSignificance.main(stringArray1);
      resultMatrixSignificance0.m_ShowAverage = true;
      resultMatrixSignificance0.getRevision();
      ResultMatrixPlainText.main(stringArray0);
      resultMatrixSignificance0.getColOrder();
      boolean boolean0 = resultMatrixSignificance0.getEnumerateRowNames();
      assertFalse(boolean0);
      
      resultMatrixSignificance0.toStringSummary();
      resultMatrixSignificance0.enumerateColNamesTipText();
      assertFalse(resultMatrixSignificance0.getRemoveFilterName());
      assertEquals(0, resultMatrixSignificance0.getCountWidth());
      assertFalse(resultMatrixSignificance0.getPrintColNames());
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.4795352974558122
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixSignificance0);
      resultMatrixHTML0.getOptions();
      Vector<Object> vector0 = new Vector<Object>();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      resultMatrixPlainText0.getMean(3444, 2);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixHTML0);
      int int0 = 13;
      resultMatrixPlainText1.getSignificance(3444, 13);
      resultMatrixPlainText1.getVisibleColCount();
      ResultMatrixPlainText resultMatrixPlainText2 = new ResultMatrixPlainText();
      resultMatrixPlainText1.setCount(1, 1);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixPlainText0);
      int[] intArray0 = new int[2];
      intArray0[0] = 1;
      intArray0[1] = 1;
      resultMatrixSignificance1.setEnumerateColNames(true);
      resultMatrixSignificance0.setRowOrder(intArray0);
      resultMatrixSignificance1.toStringSummary();
      // Undeclared exception!
      try { 
        resultMatrixPlainText2.getHeader("*");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.16121366854369
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 0);
      Vector<Object> vector0 = new Vector<Object>();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      resultMatrixPlainText0.getMean(2, 0);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixPlainText0);
      int[] intArray0 = new int[3];
      intArray0[0] = 0;
      intArray0[1] = 25;
      intArray0[2] = 2;
      resultMatrixHTML0.m_RowOrder = intArray0;
      resultMatrixPlainText0.m_EnumerateRowNames = false;
      resultMatrixPlainText1.getSignificance(496, 25);
      resultMatrixPlainText1.getVisibleColCount();
      resultMatrixPlainText0.setCount(0, 10.0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      int[] intArray1 = new int[4];
      intArray1[0] = 2;
      intArray1[2] = 496;
      intArray1[3] = 2;
      resultMatrixSignificance0.setRowOrder(intArray1);
      resultMatrixSignificance0.toStringSummary();
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.getHeader("rD3CPm>L7");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.5566663620753056
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      assertEquals(1, resultMatrixSignificance0.getVisibleColCount());
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "v";
      stringArray0[1] = "v";
      ResultMatrixSignificance.main(stringArray0);
      int[] intArray0 = new int[1];
      resultMatrixSignificance0.m_ColOrder = intArray0;
      String[] stringArray1 = new String[8];
      stringArray1[0] = ")";
      stringArray1[2] = " ";
      stringArray1[3] = " ";
      stringArray1[4] = ")";
      stringArray1[5] = ")";
      stringArray1[6] = "(";
      stringArray1[7] = "-count-width <int>";
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(1, 2);
      resultMatrixPlainText0.globalInfo();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.toStringRanking();
      resultMatrixLatex0.significanceWidthTipText();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(0, 1);
      resultMatrixLatex0.m_RowNames = stringArray1;
      resultMatrixLatex1.setColNameWidth((-1));
      resultMatrixLatex0.clear();
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.5366790822462386
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "v";
      stringArray0[1] = "v";
      ResultMatrixSignificance.main(stringArray0);
      int[] intArray0 = new int[0];
      resultMatrixSignificance0.m_ShowStdDev = true;
      String[] stringArray1 = new String[21];
      stringArray1[0] = ")";
      stringArray1[1] = "(";
      stringArray1[2] = " ";
      stringArray1[4] = ")";
      stringArray1[5] = ")";
      stringArray1[6] = "(";
      stringArray1[7] = "-count-width <int>";
      stringArray1[8] = "v";
      ResultMatrixSignificance.main(stringArray1);
      resultMatrixSignificance0.m_ShowAverage = true;
      resultMatrixSignificance0.getRevision();
      ResultMatrixPlainText.main(stringArray0);
      resultMatrixSignificance0.getColOrder();
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
      assertFalse(resultMatrixSignificance0.getEnumerateRowNames());
      assertEquals(0, resultMatrixSignificance0.getColNameWidth());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.613507403008473
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(97, 18);
      resultMatrixGnuPlot0.getDefaultRowNameWidth();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixGnuPlot0.setMeanWidth((-2753));
      resultMatrixPlainText0.toStringKey();
      String[] stringArray0 = new String[6];
      stringArray0[0] = " ";
      stringArray0[1] = "";
      stringArray0[2] = "*";
      stringArray0[3] = "(";
      stringArray0[4] = "";
      resultMatrixPlainText0.toString();
      stringArray0[5] = "";
      resultMatrixPlainText0.setOptions(stringArray0);
      resultMatrixPlainText0.getDefaultRemoveFilterName();
      assertEquals(5, resultMatrixPlainText0.getStdDevPrec());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.8526379562735795
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getDefaultMeanPrec();
      resultMatrixHTML0.getRowName(2);
      resultMatrixHTML0.setSize(6, 2);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "(";
      int[][] intArray0 = new int[4][7];
      intArray0[0] = null;
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 1;
      doubleArray0[2] = 1.0;
      doubleArray0[3] = (double) 0;
      doubleArray0[4] = (double) 2;
      doubleArray0[5] = (double) 0;
      doubleArray0[6] = (-522.9387);
      doubleArray0[7] = (double) 2;
      resultMatrixHTML0.m_Counts = doubleArray0;
      intArray0[1] = null;
      int[] intArray1 = new int[0];
      intArray0[2] = intArray1;
      intArray0[3] = null;
      // Undeclared exception!
      try { 
        resultMatrixHTML0.setSummary(intArray0, intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.950391601025311
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setColNameWidth(496);
      resultMatrixPlainText0.getMean(496, 25);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      // Undeclared exception!
      try { 
        resultMatrixHTML0.setSummary((int[][]) null, (int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.0019617953892244
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getDefaultMeanPrec();
      resultMatrixHTML0.getRowName(2);
      resultMatrixHTML0.setSize(6, 2);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "(";
      stringArray0[1] = "v";
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(20, 59);
      resultMatrixPlainText0.getSignificance(59, 12);
      resultMatrixPlainText0.getVisibleColCount();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      resultMatrixPlainText1.setCount(23, 59);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      resultMatrixSignificance0.setRowOrder((int[]) null);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(0, 0);
      resultMatrixSignificance1.toStringSummary();
      // Undeclared exception!
      try { 
        resultMatrixPlainText1.getHeader("");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.0271671474095863
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      Vector<Object> vector0 = new Vector<Object>();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      resultMatrixPlainText0.getMean((-407), 32);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixLatex0);
      resultMatrixPlainText1.getSignificance(911, 1);
      resultMatrixPlainText1.getVisibleColCount();
      ResultMatrixPlainText resultMatrixPlainText2 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setCount(496, 1);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText1);
      resultMatrixSignificance0.setRowOrder((int[]) null);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixPlainText0);
      resultMatrixSignificance1.toStringSummary();
      // Undeclared exception!
      try { 
        resultMatrixPlainText1.getHeader("(");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.6720550116955444
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getVisibleColCount();
      resultMatrixLatex0.clearHeader();
      String[] stringArray0 = new String[6];
      stringArray0[0] = " ";
      stringArray0[1] = ")";
      stringArray0[2] = " ";
      stringArray0[3] = "$\bullet$";
      stringArray0[4] = "(";
      stringArray0[5] = ")";
      ResultMatrixHTML.main(stringArray0);
      resultMatrixLatex0.setMeanWidth(0);
      resultMatrixLatex0.setOptions(stringArray0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(1, 0);
      resultMatrixPlainText0.addHeader("$\bullet$", "(");
      resultMatrixPlainText0.padString("$\bullet$", 2, true);
      resultMatrixPlainText0.globalInfo();
      resultMatrixLatex0.toStringRanking();
      resultMatrixLatex0.significanceWidthTipText();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      resultMatrixLatex1.setColNameWidth(0);
      resultMatrixLatex1.clear();
      resultMatrixLatex0.isStdDev(97);
      assertFalse(resultMatrixLatex0.getEnumerateColNames());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.8027646048348562
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 0);
      Vector<Object> vector0 = new Vector<Object>();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      double double0 = resultMatrixPlainText0.getMean(2, 0);
      assertEquals(0.0, double0, 0.01);
      
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixPlainText0);
      resultMatrixPlainText0.m_EnumerateRowNames = false;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(25, 0);
      int[] intArray0 = new int[0];
      resultMatrixGnuPlot0.setColOrder(intArray0);
      resultMatrixGnuPlot0.getDefaultColNameWidth();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      assertEquals(0, resultMatrixSignificance0.getCountWidth());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertTrue(resultMatrixSignificance0.getEnumerateColNames());
      assertEquals(0, resultMatrixSignificance0.getSignificanceWidth());
      assertEquals(0, resultMatrixSignificance0.getRowCount());
      assertEquals(0, resultMatrixSignificance0.getMeanWidth());
      assertEquals(25, resultMatrixSignificance0.getRowNameWidth());
      assertTrue(resultMatrixSignificance0.getPrintRowNames());
      assertEquals(0, resultMatrixSignificance0.getStdDevWidth());
      
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance();
      resultMatrixSignificance1.toStringSummary();
      resultMatrixSignificance1.setMean((-1678), 1, 100.0);
      assertEquals(1, resultMatrixSignificance1.getRowCount());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.743535678836661
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getDefaultRowNameWidth();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(6, 37);
      int[] intArray0 = new int[9];
      intArray0[0] = 0;
      intArray0[1] = 37;
      intArray0[2] = 2;
      intArray0[3] = 2;
      intArray0[4] = 37;
      intArray0[5] = 25;
      intArray0[6] = 131;
      intArray0[7] = 2;
      intArray0[8] = 1;
      resultMatrixHTML0.m_RankingLosses = intArray0;
      resultMatrixHTML0.setSize(37, 1);
      assertEquals(37, resultMatrixHTML0.getVisibleColCount());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setColOrder((int[]) null);
      resultMatrixGnuPlot0.getDefaultColNameWidth();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      resultMatrixSignificance0.toStringSummary();
      resultMatrixSignificance0.setMean(50, (-1520), 2165.713);
      assertEquals(2, resultMatrixSignificance0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.833840363822971
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      int int0 = resultMatrixLatex0.getVisibleColCount();
      assertEquals(1, int0);
      
      resultMatrixLatex0.clearHeader();
      String[] stringArray0 = new String[6];
      stringArray0[0] = " ";
      stringArray0[1] = ")";
      stringArray0[2] = " ";
      stringArray0[3] = "$\bullet$";
      stringArray0[4] = "(";
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixLatex0);
      int[] intArray0 = new int[3];
      intArray0[0] = 2;
      intArray0[1] = 812;
      intArray0[2] = 1;
      resultMatrixGnuPlot0.setColOrder(intArray0);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixLatex0);
      resultMatrixGnuPlot1.getDefaultColNameWidth();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot1);
      resultMatrixSignificance0.toStringSummary();
      resultMatrixSignificance0.setMean(1, 1300, (-1600.858647));
      assertEquals(2, resultMatrixGnuPlot1.getMeanPrec());
      assertTrue(resultMatrixGnuPlot1.getEnumerateColNames());
      assertTrue(resultMatrixGnuPlot1.getPrintRowNames());
      assertEquals(0, resultMatrixGnuPlot1.getCountWidth());
      assertEquals(0, resultMatrixGnuPlot1.getStdDevWidth());
      assertEquals(0, resultMatrixSignificance0.getDefaultColNameWidth());
      assertFalse(resultMatrixGnuPlot1.getEnumerateRowNames());
      assertEquals(0, resultMatrixGnuPlot1.getRowNameWidth());
      assertEquals(1, resultMatrixGnuPlot1.getRowCount());
      assertFalse(resultMatrixGnuPlot1.getDefaultShowStdDev());
      assertEquals(2, resultMatrixGnuPlot1.getStdDevPrec());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=3.377199384723431
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 97);
      resultMatrixGnuPlot0.getDefaultRowNameWidth();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixGnuPlot0.setMeanWidth(31);
      resultMatrixPlainText0.m_StdDevWidth = 0;
      resultMatrixPlainText0.toStringKey();
      String[] stringArray0 = new String[0];
      resultMatrixPlainText0.setOptions(stringArray0);
      resultMatrixPlainText0.getDefaultRemoveFilterName();
      assertEquals(5, resultMatrixPlainText0.getStdDevPrec());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.8197811796996506
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 97);
      resultMatrixGnuPlot0.getDefaultRowNameWidth();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(50, 82);
      int[] intArray0 = new int[6];
      intArray0[0] = 1;
      intArray0[2] = 0;
      intArray0[3] = 2;
      intArray0[0] = 1;
      intArray0[5] = 2;
      resultMatrixGnuPlot1.setColOrder(intArray0);
      resultMatrixGnuPlot1.getDefaultColNameWidth();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getDisplayName();
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertEquals(0, resultMatrixSignificance0.getSignificanceWidth());
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertTrue(resultMatrixSignificance0.getPrintRowNames());
      assertEquals(97, resultMatrixSignificance0.getVisibleRowCount());
      assertEquals(0, resultMatrixSignificance0.getMeanWidth());
      assertEquals(0, resultMatrixSignificance0.getStdDevWidth());
      assertTrue(resultMatrixSignificance0.getPrintColNames());
      assertEquals(50, resultMatrixPlainText0.getRowNameWidth());
      
      resultMatrixSignificance1.setMean(280, 2, 0.0);
      assertEquals(1, resultMatrixSignificance1.getVisibleColCount());
      assertFalse(resultMatrixSignificance1.getDefaultShowAverage());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.8804181726230462
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getDefaultMeanPrec();
      resultMatrixHTML0.getRowName(2);
      resultMatrixHTML0.setSize(6, 2);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "(";
      stringArray0[1] = "v";
      boolean[] booleanArray0 = new boolean[4];
      booleanArray0[0] = true;
      booleanArray0[1] = false;
      booleanArray0[2] = false;
      booleanArray0[3] = false;
      resultMatrixGnuPlot0.m_RowHidden = booleanArray0;
      stringArray0[2] = "_wtc*U 5xHpOjqrOP";
      stringArray0[3] = "";
      stringArray0[4] = "(";
      resultMatrixHTML0.RIGHT_PARENTHESES = " ";
      stringArray0[7] = "*";
      resultMatrixGnuPlot0.m_ColNames = stringArray0;
      resultMatrixGnuPlot0.setColOrder((int[]) null);
      resultMatrixGnuPlot0.getDefaultColNameWidth();
      ResultMatrixSignificance resultMatrixSignificance0 = null;
      try {
        resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.7283523700922605
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      resultMatrixGnuPlot0.getDefaultColNameWidth();
      int[] intArray0 = new int[7];
      intArray0[0] = 2;
      intArray0[1] = (-1798);
      intArray0[2] = 1;
      intArray0[3] = 47;
      intArray0[4] = 50;
      intArray0[5] = 1;
      intArray0[6] = 50;
      resultMatrixGnuPlot0.setRowOrder(intArray0);
      resultMatrixGnuPlot0.setSignificance(1, 1, 2);
      resultMatrixGnuPlot0.setStdDev(2, (-226), 1);
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
      assertEquals(25, resultMatrixGnuPlot0.getRowNameWidth());
      assertEquals(0, resultMatrixCSV0.getColNameWidth());
      assertTrue(resultMatrixGnuPlot0.getEnumerateColNames());
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      assertFalse(resultMatrixGnuPlot0.getDefaultShowAverage());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=3.5127506921018603
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "v";
      stringArray0[1] = "v";
      ResultMatrixSignificance.main(stringArray0);
      int[] intArray0 = new int[0];
      resultMatrixSignificance0.m_ShowStdDev = true;
      String[] stringArray1 = new String[21];
      stringArray1[0] = ")";
      stringArray1[1] = "(";
      stringArray1[2] = " ";
      stringArray1[4] = ")";
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixSignificance0);
      resultMatrixGnuPlot0.setRowOrder(intArray0);
      resultMatrixGnuPlot0.setSignificance(1, (-3853), (-2533));
      resultMatrixGnuPlot0.setStdDev((-2533), 365, 0.0);
      assertTrue(resultMatrixSignificance0.getShowStdDev());
      assertEquals(1, resultMatrixSignificance0.getRowCount());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.0404387273591684
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(97, 18);
      resultMatrixGnuPlot0.getDefaultRowNameWidth();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixGnuPlot0.setMeanWidth((-2753));
      resultMatrixPlainText0.toStringKey();
      String[] stringArray0 = new String[6];
      stringArray0[0] = " ";
      stringArray0[1] = "";
      stringArray0[2] = "*";
      stringArray0[3] = "(";
      stringArray0[4] = "";
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.getHeader("x8(%-97bg");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.426891207793031
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setColNameWidth(496);
      resultMatrixPlainText0.getMean(496, 25);
      resultMatrixPlainText0.getSignificance(0, 496);
      resultMatrixPlainText0.getVisibleColCount();
      resultMatrixPlainText0.setCount(0, 1);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      resultMatrixSignificance0.getOptions();
      resultMatrixSignificance0.getColName(25);
      resultMatrixSignificance0.toStringSummary();
      assertEquals(496, resultMatrixPlainText0.getColNameWidth());
      assertFalse(resultMatrixSignificance0.getEnumerateRowNames());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.4948600313770077
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getDefaultRowNameWidth();
      resultMatrixPlainText0.getColName(25);
      String string0 = resultMatrixPlainText0.padString("", 0);
      assertEquals("", string0);
      
      resultMatrixPlainText0.getDisplayName();
      String[] stringArray0 = new String[4];
      resultMatrixPlainText0.TIE_STRING = "(";
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
      
      stringArray0[2] = "Plain Text";
      ResultMatrixPlainText.main(stringArray0);
      resultMatrixPlainText0.printColNamesTipText();
      resultMatrixPlainText0.colNameWidthTipText();
      assertEquals(0, resultMatrixPlainText0.getColNameWidth());
      assertTrue(resultMatrixPlainText0.getPrintRowNames());
      assertTrue(resultMatrixPlainText0.getEnumerateColNames());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.7728883715234987
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getDefaultRowNameWidth();
      resultMatrixPlainText0.padString("", 0);
      resultMatrixPlainText0.getDisplayName();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(0, 1907);
      resultMatrixPlainText1.padString("", 2, true);
      resultMatrixPlainText0.globalInfo();
      ResultMatrixLatex resultMatrixLatex0 = null;
      try {
        resultMatrixLatex0 = new ResultMatrixLatex(0, (-4187));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.9555334347432667
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setColNameWidth(496);
      resultMatrixPlainText0.getMean(496, 25);
      String[][] stringArray0 = new String[0][0];
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.getColSize(stringArray0, 26);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.963667592079108
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getVisibleColCount();
      resultMatrixLatex0.clearHeader();
      String[] stringArray0 = new String[6];
      stringArray0[0] = " ";
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      int int0 = 6;
      resultMatrixPlainText0.getMean(2, 6);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixLatex0);
      resultMatrixPlainText0.getSignificance(0, 0);
      resultMatrixPlainText0.getVisibleColCount();
      ResultMatrixPlainText resultMatrixPlainText2 = new ResultMatrixPlainText();
      resultMatrixPlainText1.setCount(2, (-3589.4330766527164));
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText1);
      int int1 = 2650;
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(110, 2650);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.9025538185947704
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.padString("@(V~c$Ao93;bH", 0);
      resultMatrixPlainText0.setShowStdDev(false);
      int int0 = ResultMatrix.SIGNIFICANCE_WIN;
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.setSize(1, (-513));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.6316121865953988
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 0);
      resultMatrixHTML0.m_Wins = null;
      assertEquals(0, resultMatrixHTML0.getVisibleRowCount());
      assertEquals(0, resultMatrixHTML0.getColNameWidth());
      
      Vector<Object> vector0 = new Vector<Object>();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2, 2);
      resultMatrixGnuPlot0.toStringSummary();
      resultMatrixGnuPlot0.getDefaultRowNameWidth();
      resultMatrixGnuPlot0.getRemoveFilterName();
      assertEquals(2, resultMatrixGnuPlot0.getDefaultStdDevPrec());
      assertEquals(2, resultMatrixGnuPlot0.getVisibleRowCount());
      assertTrue(resultMatrixGnuPlot0.getPrintColNames());
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=3.660649398716264
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getVisibleColCount();
      String[] stringArray0 = new String[6];
      stringArray0[0] = " ";
      stringArray0[1] = ")";
      stringArray0[2] = " ";
      stringArray0[3] = "$\bullet$";
      stringArray0[4] = "(";
      stringArray0[5] = ")";
      ResultMatrixHTML.main(stringArray0);
      resultMatrixLatex0.setMeanWidth(0);
      resultMatrixLatex0.setOptions(stringArray0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.padString(" ", 0);
      resultMatrixPlainText0.setShowStdDev(true);
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.setSize((-2272), 2);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=3.467871741869501
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setColNameWidth(496);
      assertEquals(1, resultMatrixPlainText0.getRowCount());
      
      String[] stringArray0 = new String[9];
      stringArray0[0] = " ";
      stringArray0[1] = "v";
      stringArray0[2] = " ";
      stringArray0[3] = " ";
      stringArray0[4] = ")";
      stringArray0[5] = "GN1vDnztyvBT'";
      stringArray0[6] = "/x";
      stringArray0[7] = "v";
      stringArray0[8] = "*";
      ResultMatrixGnuPlot.main(stringArray0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.toStringRanking();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(11, 46);
      resultMatrixGnuPlot0.getDisplayName();
      resultMatrixGnuPlot0.getDisplayName();
      resultMatrixSignificance0.getPrintColNames();
      resultMatrixGnuPlot0.printRowNamesTipText();
      resultMatrixGnuPlot0.getMean(46, 25);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      resultMatrixLatex0.toStringKey();
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      assertEquals(40, resultMatrixLatex0.getRowNameWidth());
      
      resultMatrixSignificance0.getDefaultShowStdDev();
      assertTrue(resultMatrixSignificance0.getPrintRowNames());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.9649946680202284
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      resultMatrixPlainText0.toStringRanking();
      resultMatrixGnuPlot0.setPrintRowNames(true);
      Vector<Integer> vector0 = new Vector<Integer>();
      double double0 = resultMatrixPlainText0.getMean(5510, 5510);
      assertEquals(0.0, double0, 0.01);
      
      resultMatrixPlainText0.getSignificance(1, 2);
      int int0 = resultMatrixPlainText0.getVisibleColCount();
      assertEquals(1, int0);
      
      resultMatrixPlainText0.setCount(13, 0.0);
      assertFalse(resultMatrixGnuPlot0.getEnumerateRowNames());
      assertTrue(resultMatrixPlainText0.getPrintColNames());
      
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance();
      ResultMatrixSignificance resultMatrixSignificance2 = new ResultMatrixSignificance(resultMatrixSignificance1);
      assertEquals(0, resultMatrixSignificance2.getStdDevWidth());
      assertEquals(40, resultMatrixSignificance2.getRowNameWidth());
      assertEquals(0, resultMatrixSignificance2.getMeanWidth());
      assertEquals(2, resultMatrixSignificance2.getMeanPrec());
      assertEquals(0, resultMatrixSignificance2.getSignificanceWidth());
      
      resultMatrixSignificance1.toStringSummary();
      assertEquals(0, resultMatrixSignificance1.getColNameWidth());
      assertEquals(1, resultMatrixSignificance1.getRowCount());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=3.3522979721506507
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getDefaultPrintColNames();
      resultMatrixHTML0.getOptions();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 1);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      // Undeclared exception!
      try { 
        resultMatrixLatex0.toArray();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.9906667858187452
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.m_MeanPrec = 0;
      Object object0 = new Object();
      Vector<Object> vector0 = new Vector<Object>();
      vector0.add((Object) vector0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      resultMatrixHTML0.getVisibleColCount();
      resultMatrixHTML0.setEnumerateRowNames(true);
      resultMatrixHTML0.setColName(0, "vAO!e0AI/6");
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      resultMatrixLatex1.toStringRanking();
      resultMatrixLatex0.getRevision();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.992400521059247
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Vector<Object> vector0 = new Vector<Object>();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 59);
      resultMatrixLatex0.toStringSummary();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setMeanPrec((-1427));
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      resultMatrixLatex1.clearRanking();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getShowAverage();
      int[][] intArray0 = new int[0][7];
      // Undeclared exception!
      try { 
        resultMatrixHTML0.setSummary(intArray0, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.9034007581809202
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setColNameWidth(496);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      resultMatrixSignificance0.setShowAverage(false);
      resultMatrixSignificance0.setStdDevPrec(3606);
      resultMatrixSignificance0.setCountWidth(6);
      String[][] stringArray0 = new String[2][4];
      String[] stringArray1 = new String[4];
      stringArray1[0] = "*";
      stringArray1[1] = ")";
      stringArray1[2] = " ";
      stringArray1[3] = "(";
      stringArray0[0] = stringArray1;
      String[] stringArray2 = new String[7];
      stringArray2[0] = " ";
      stringArray2[1] = " ";
      stringArray2[2] = "v";
      stringArray2[3] = " ";
      stringArray2[4] = ")";
      stringArray2[5] = "v";
      stringArray2[6] = "*";
      stringArray0[1] = stringArray2;
      resultMatrixSignificance0.getColSize(stringArray0, (-2501));
      resultMatrixSignificance0.clear();
      assertEquals(496, resultMatrixPlainText0.getColNameWidth());
      assertEquals(1, resultMatrixPlainText0.getVisibleColCount());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.897357129212931
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 97);
      resultMatrixGnuPlot0.getDefaultRowNameWidth();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixGnuPlot0.setMeanWidth(31);
      assertEquals(31, resultMatrixGnuPlot0.getMeanWidth());
      
      resultMatrixPlainText0.m_StdDevWidth = 0;
      resultMatrixPlainText0.setCount((-3244), 0.0);
      assertEquals(0, resultMatrixPlainText0.getDefaultMeanWidth());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.7936567840058286
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Vector<Object> vector0 = new Vector<Object>();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setCount((-3069), 357.99231605);
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(1, resultMatrixPlainText0.getVisibleColCount());
      assertFalse(resultMatrixPlainText0.getRemoveFilterName());
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.845638493134258
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setColNameWidth(496);
      resultMatrixPlainText0.getMean(496, 25);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      // Undeclared exception!
      try { 
        resultMatrixHTML0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=3.5343679803921066
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixSignificance0);
      String[] stringArray0 = resultMatrixHTML0.getOptions();
      assertEquals(18, stringArray0.length);
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      String string0 = resultMatrixPlainText0.toString();
      assertEquals("Dataset                   (1) col0 \n-----------------------------------\nrow0                       (0)    |\n-----------------------------------\n(v/ /*)                           |\n", string0);
      
      resultMatrixHTML0.WIN_STRING = "*";
      resultMatrixLatex0.toArray();
      resultMatrixLatex0.toStringSummary();
      resultMatrixPlainText0.setMeanPrec(2);
      resultMatrixLatex0.clearRanking();
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      assertTrue(resultMatrixLatex0.getPrintColNames());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      
      resultMatrixHTML0.getShowAverage();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2, 0);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(2, 10);
      int[] intArray0 = new int[2];
      intArray0[0] = 1;
      intArray0[1] = 26;
      resultMatrixGnuPlot1.setColOrder(intArray0);
      resultMatrixGnuPlot1.getDefaultColNameWidth();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixHTML0);
      resultMatrixSignificance1.toStringSummary();
      resultMatrixGnuPlot1.getDefaultStdDevWidth();
      assertEquals(0, resultMatrixGnuPlot1.getSignificanceWidth());
      
      resultMatrixHTML0.getDefaultRowNameWidth();
      assertEquals(40, resultMatrixHTML0.getRowNameWidth());
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.936158557953129
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 0);
      resultMatrixGnuPlot0.clearSummary();
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.7284075400342926
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixLatex0);
      resultMatrixGnuPlot0.setRowNameWidth((-1116));
      resultMatrixGnuPlot0.clearSummary();
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(0, resultMatrixGnuPlot0.getRowNameWidth());
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 26);
      resultMatrixPlainText0.toStringSummary();
      assertEquals(26, resultMatrixPlainText0.getVisibleRowCount());
      assertTrue(resultMatrixPlainText0.getDefaultPrintColNames());
      assertEquals(0, resultMatrixPlainText0.getColNameWidth());
      assertFalse(resultMatrixPlainText0.getEnumerateRowNames());
      assertEquals(0, resultMatrixPlainText0.getVisibleColCount());
      assertFalse(resultMatrixPlainText0.getShowStdDev());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=3.302793952794256
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(7, 7);
      resultMatrixCSV0.toStringKey();
      resultMatrixCSV0.m_RankingDiff = null;
      resultMatrixCSV0.toStringRanking();
      resultMatrixCSV0.getDefaultRowNameWidth();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      resultMatrixLatex0.setEnumerateRowNames(false);
      resultMatrixLatex0.padString("", 110, false);
      resultMatrixLatex0.m_StdDevPrec = 27;
      resultMatrixCSV0.setPrintColNames(false);
      resultMatrixLatex0.toStringMatrix();
      // Undeclared exception!
      try { 
        resultMatrixLatex0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.8871876276384962
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 0);
      resultMatrixHTML0.m_Wins = null;
      Vector<Object> vector0 = new Vector<Object>();
      resultMatrixHTML0.m_Wins = resultMatrixHTML0.m_Wins;
      resultMatrixHTML0.m_HeaderValues = vector0;
      Object object0 = new Object();
      vector0.add(object0);
      resultMatrixHTML0.m_StdDevPrec = 0;
      resultMatrixHTML0.getVisibleColCount();
      resultMatrixHTML0.setEnumerateRowNames(false);
      resultMatrixHTML0.setColName(0, "");
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.toStringRanking();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=3.421281317635949
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      resultMatrixPlainText0.toStringRanking();
      resultMatrixGnuPlot0.setPrintRowNames(true);
      String[] stringArray0 = new String[3];
      Vector<Integer> vector0 = new Vector<Integer>();
      resultMatrixPlainText0.m_HeaderValues = vector0;
      assertEquals(1, resultMatrixPlainText0.getVisibleColCount());
      
      stringArray0[0] = " ";
      stringArray0[1] = "";
      stringArray0[2] = "";
      ResultMatrixGnuPlot.main(stringArray0);
      resultMatrixSignificance0.toStringRanking();
      resultMatrixGnuPlot0.getDisplayName();
      resultMatrixGnuPlot0.getDisplayName();
      resultMatrixSignificance0.getPrintColNames();
      resultMatrixGnuPlot0.printRowNamesTipText();
      resultMatrixGnuPlot0.getMean(1, 2);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      resultMatrixLatex0.toStringKey();
      assertEquals(50, resultMatrixLatex0.getRowNameWidth());
      assertEquals(0, resultMatrixLatex0.getColNameWidth());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertFalse(resultMatrixLatex0.getShowAverage());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertFalse(resultMatrixLatex0.getEnumerateColNames());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=3.279577038125185
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(97, 18);
      resultMatrixGnuPlot0.getDefaultRowNameWidth();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixGnuPlot0.setMeanWidth((-2753));
      resultMatrixPlainText0.toStringKey();
      String[] stringArray0 = new String[6];
      stringArray0[0] = " ";
      double[][] doubleArray0 = new double[8][8];
      double[] doubleArray1 = new double[8];
      doubleArray1[0] = (-4.57826535);
      doubleArray1[1] = (double) 97;
      doubleArray1[2] = Double.NaN;
      doubleArray1[3] = 276.9103126;
      doubleArray1[4] = (double) 18;
      doubleArray1[5] = (double) 0;
      doubleArray1[6] = (double) 50;
      doubleArray1[7] = (double) 2;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[0];
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[7];
      doubleArray3[0] = (double) 97;
      doubleArray3[1] = (double) 50;
      doubleArray3[2] = (double) 2;
      doubleArray3[3] = (double) 0;
      doubleArray3[4] = (double) 1;
      doubleArray3[5] = (double) 2;
      doubleArray3[6] = (-4.57826535);
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[5];
      doubleArray4[0] = (double) 2;
      doubleArray4[1] = (double) 97;
      doubleArray4[2] = (double) 50;
      doubleArray4[3] = 1650.46491191;
      doubleArray4[4] = 276.9103126;
      doubleArray0[3] = doubleArray4;
      double[] doubleArray5 = new double[5];
      doubleArray5[0] = (double) 0;
      doubleArray5[1] = (double) 50;
      doubleArray5[2] = Double.NaN;
      doubleArray5[3] = (double) 2;
      doubleArray5[4] = (double) 0;
      doubleArray0[4] = doubleArray5;
      double[] doubleArray6 = new double[4];
      doubleArray6[0] = (double) 97;
      doubleArray6[1] = 276.9103126;
      doubleArray6[2] = (-3228.3656);
      doubleArray6[3] = (double) 0;
      doubleArray0[5] = doubleArray6;
      double[] doubleArray7 = new double[7];
      doubleArray7[0] = (-4.57826535);
      doubleArray7[1] = (-2866.84413);
      doubleArray7[2] = 1650.46491191;
      doubleArray7[3] = (double) 0;
      doubleArray7[4] = 0.0;
      doubleArray7[5] = (double) 18;
      doubleArray7[6] = Double.NaN;
      doubleArray0[6] = doubleArray7;
      double[] doubleArray8 = new double[3];
      doubleArray8[0] = (-2866.84413);
      doubleArray8[1] = (double) (-2753);
      doubleArray8[2] = (-3228.3656);
      doubleArray0[7] = doubleArray8;
      resultMatrixPlainText0.m_Mean = doubleArray0;
      stringArray0[1] = "";
      stringArray0[2] = "*";
      stringArray0[3] = "(";
      stringArray0[4] = "";
      stringArray0[5] = "";
      resultMatrixPlainText0.setOptions(stringArray0);
      resultMatrixPlainText0.getDefaultRemoveFilterName();
      assertFalse(resultMatrixPlainText0.getEnumerateColNames());
      
      resultMatrixGnuPlot0.toStringSummary();
      assertEquals(18, resultMatrixGnuPlot0.getVisibleRowCount());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=3.516329201889268
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "v";
      stringArray0[1] = "v";
      ResultMatrixSignificance.main(stringArray0);
      int[] intArray0 = new int[0];
      resultMatrixSignificance0.m_ColOrder = intArray0;
      resultMatrixSignificance0.m_ShowStdDev = true;
      double[][] doubleArray0 = new double[0][7];
      resultMatrixSignificance0.m_StdDev = doubleArray0;
      String[] stringArray1 = new String[9];
      stringArray1[0] = ")";
      stringArray1[1] = "(";
      stringArray1[2] = " ";
      stringArray1[3] = " ";
      stringArray1[4] = ")";
      stringArray1[5] = ")";
      stringArray1[6] = "(";
      stringArray1[7] = "-count-width <int>";
      stringArray1[8] = "v";
      ResultMatrixSignificance.main(stringArray1);
      resultMatrixSignificance0.m_ShowAverage = true;
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixSignificance0.assign(resultMatrixLatex0);
      assertFalse(resultMatrixSignificance0.getShowStdDev());
      assertEquals(0, resultMatrixSignificance0.getColNameWidth());
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getDefaultPrintColNames();
      assertEquals(25, resultMatrixHTML0.getRowNameWidth());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=3.2387482657199897
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(2, 2);
      resultMatrixSignificance0.toArray();
      resultMatrixSignificance0.setStdDevPrec((-1));
      resultMatrixCSV0.assign(resultMatrixSignificance0);
      resultMatrixCSV0.m_RemoveFilterName = true;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      resultMatrixGnuPlot0.getSummaryTitle((-1));
      resultMatrixGnuPlot0.isRowName((-1181));
      resultMatrixSignificance0.getColNameWidth();
      resultMatrixCSV0.setMeanPrec((-553));
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      // Undeclared exception!
      try { 
        resultMatrixLatex0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=3.3874519428257295
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getDefaultPrintColNames();
      resultMatrixHTML0.getOptions();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      resultMatrixPlainText0.setColNameWidth(1);
      resultMatrixPlainText0.getMean(1, 18);
      resultMatrixPlainText0.getSignificance(0, 1382);
      resultMatrixPlainText0.getVisibleColCount();
      resultMatrixPlainText0.setCount((-510), 0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      resultMatrixSignificance0.setRemoveFilterName(false);
      resultMatrixSignificance0.toStringSummary();
      assertEquals(1, resultMatrixPlainText0.getColNameWidth());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.9154793492940043
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixCSV0);
      resultMatrixCSV0.setRemoveFilterName(true);
      resultMatrixCSV0.m_ShowAverage = false;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setShowAverage(false);
      resultMatrixSignificance0.setStdDevPrec(32);
      resultMatrixSignificance0.setCountWidth(0);
      String[][] stringArray0 = new String[2][9];
      String[] stringArray1 = new String[0];
      stringArray0[0] = stringArray1;
      String[] stringArray2 = new String[0];
      stringArray0[1] = stringArray2;
      resultMatrixSignificance0.getColSize(stringArray0, 2);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixPlainText0);
      resultMatrixSignificance1.clear();
      assertTrue(resultMatrixCSV0.getRemoveFilterName());
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.globalInfo();
      assertEquals(1, resultMatrixLatex0.getRowCount());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=3.0271671474095863
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setColNameWidth(496);
      Object object0 = new Object();
      Vector<Object> vector0 = new Vector<Object>();
      Object object1 = new Object();
      vector0.add(object1);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getVisibleColCount();
      resultMatrixHTML0.setEnumerateRowNames(false);
      resultMatrixHTML0.setColName(3756, "(");
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.toStringRanking();
      resultMatrixLatex0.getRevision();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=3.5546555745617767
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixCSV0);
      resultMatrixCSV0.setRemoveFilterName(true);
      resultMatrixCSV0.m_ShowAverage = false;
      String[] stringArray0 = new String[1];
      stringArray0[0] = "v";
      resultMatrixPlainText0.setMeanWidth(0);
      ResultMatrixPlainText.main(stringArray0);
      resultMatrixPlainText0.globalInfo();
      resultMatrixPlainText0.setColName((-919), "Generates the output as plain text (for fixed width fonts).");
      resultMatrixCSV0.getDefaultStdDevWidth();
      resultMatrixPlainText0.clearHeader();
      assertTrue(resultMatrixCSV0.getRemoveFilterName());
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.toStringKey();
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=3.377199384723431
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getDefaultRowNameWidth();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixPlainText0.setShowAverage(true);
      resultMatrixGnuPlot0.m_MeanPrec = 97;
      resultMatrixGnuPlot0.setMeanWidth(0);
      resultMatrixPlainText0.toStringKey();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      String[] stringArray0 = new String[0];
      resultMatrixPlainText1.setOptions(stringArray0);
      boolean boolean0 = resultMatrixPlainText1.getDefaultRemoveFilterName();
      assertFalse(resultMatrixPlainText1.getEnumerateColNames());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 68
  /*Coverage entropy=3.529881130591447
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "v";
      stringArray0[1] = "v";
      ResultMatrixSignificance.main(stringArray0);
      int[] intArray0 = new int[0];
      resultMatrixSignificance0.m_ColOrder = intArray0;
      resultMatrixSignificance0.m_ShowStdDev = true;
      String[] stringArray1 = new String[9];
      stringArray1[0] = ")";
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      int[][] intArray1 = new int[0][0];
      resultMatrixLatex0.clear();
      try { 
        resultMatrixSignificance0.setOptions(stringArray1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=3.600306801702817
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixSignificance0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.clear();
      String[] stringArray0 = resultMatrixLatex0.getOptions();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      assertEquals(0, resultMatrixLatex1.getRowNameWidth());
      
      resultMatrixLatex1.clear();
      assertEquals(1, resultMatrixLatex1.getVisibleRowCount());
      assertEquals(1, resultMatrixLatex1.getVisibleColCount());
      
      ResultMatrixHTML.main(stringArray0);
      assertEquals(18, stringArray0.length);
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertFalse(resultMatrixLatex0.getPrintColNames());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=3.684753552347336
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 97);
      resultMatrixGnuPlot0.getDefaultRowNameWidth();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "v";
      stringArray0[1] = "*";
      stringArray0[2] = " ";
      stringArray0[3] = "";
      ResultMatrixHTML.main(stringArray0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setMeanWidth(2);
      resultMatrixLatex0.setOptions(stringArray0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(2, 0);
      resultMatrixPlainText0.padString("*", 4048, false);
      resultMatrixPlainText0.globalInfo();
      resultMatrixLatex0.toStringRanking();
      resultMatrixLatex0.significanceWidthTipText();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixGnuPlot0);
      resultMatrixLatex1.setColNameWidth(84);
      resultMatrixLatex0.clear();
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      
      resultMatrixLatex1.headerKeys();
      assertEquals(2, resultMatrixLatex1.getStdDevPrec());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.7380783554095367
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(97, 50);
      resultMatrixSignificance0.m_MeanWidth = 0;
      int int0 = resultMatrixSignificance0.getDefaultStdDevPrec();
      assertEquals(2, int0);
      
      resultMatrixSignificance0.getRevision();
      resultMatrixSignificance0.setColNameWidth(0);
      assertEquals(0, resultMatrixSignificance0.getColNameWidth());
      assertEquals(50, resultMatrixSignificance0.getRowCount());
      assertEquals(2, resultMatrixSignificance0.getDefaultMeanPrec());
      assertTrue(resultMatrixSignificance0.getDefaultEnumerateColNames());
      assertEquals(97, resultMatrixSignificance0.getColCount());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=3.542743482329333
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getDefaultMeanPrec();
      resultMatrixHTML0.getRowName(2);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.padString("v", 2);
      resultMatrixPlainText0.getDisplayName();
      String[] stringArray0 = new String[5];
      stringArray0[0] = ")";
      stringArray0[1] = "v ";
      resultMatrixHTML0.setSize(1, 1780);
      assertEquals(1780, resultMatrixHTML0.getVisibleRowCount());
      
      stringArray0[2] = "v ";
      stringArray0[3] = "v";
      stringArray0[4] = " ";
      ResultMatrixPlainText.main(stringArray0);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixPlainText0);
      resultMatrixPlainText1.printColNamesTipText();
      resultMatrixPlainText0.colNameWidthTipText();
      resultMatrixPlainText1.getDefaultRowNameWidth();
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=3.1763310545883385
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixSignificance0);
      resultMatrixSignificance1.getSignificanceCount(0, 0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixSignificance1.getRowName((-1059));
      String[] stringArray0 = new String[2];
      resultMatrixSignificance1.toArray();
      resultMatrixSignificance1.m_StdDevWidth = 0;
      stringArray0[0] = "(";
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.padString((String) null, 0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=3.1536297451645066
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.m_PrintColNames = false;
      String[] stringArray0 = new String[4];
      resultMatrixSignificance0.toArray();
      stringArray0[0] = ")";
      stringArray0[1] = " ";
      stringArray0[2] = "";
      stringArray0[3] = "*";
      resultMatrixSignificance0.m_PrintColNames = false;
      resultMatrixSignificance0.m_RowNames = stringArray0;
      boolean boolean0 = true;
      resultMatrixSignificance0.setPrintRowNames(true);
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.toStringRanking();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.8112935365130762
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 1);
      boolean[] booleanArray0 = new boolean[3];
      resultMatrixCSV0.m_PrintColNames = true;
      booleanArray0[0] = true;
      booleanArray0[1] = true;
      resultMatrixCSV0.clearHeader();
      booleanArray0[2] = true;
      resultMatrixCSV0.m_ColHidden = booleanArray0;
      resultMatrixCSV0.toStringSummary();
      resultMatrixCSV0.showAverageTipText();
      resultMatrixCSV0.getRevision();
      resultMatrixCSV0.getStdDevPrec();
      resultMatrixCSV0.setPrintRowNames(false);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      resultMatrixSignificance0.setRowNameWidth(3757);
      resultMatrixSignificance0.globalInfo();
      String[][] stringArray0 = new String[2][7];
      String[] stringArray1 = new String[4];
      stringArray1[0] = "-summary data not set-";
      stringArray1[1] = "*";
      stringArray1[2] = "[";
      stringArray1[3] = "[";
      stringArray0[0] = stringArray1;
      String[] stringArray2 = new String[4];
      stringArray2[0] = "*";
      stringArray2[1] = " ";
      stringArray2[2] = "ae!^E_";
      stringArray2[3] = " ";
      stringArray0[1] = stringArray2;
      int int0 = resultMatrixSignificance0.getColSize(stringArray0, 0);
      assertTrue(resultMatrixCSV0.getEnumerateRowNames());
      assertEquals(22, int0);
  }

  /**
  //Test case number: 76
  /*Coverage entropy=3.060287092608695
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(2, 0);
      Vector<Object> vector0 = new Vector<Object>();
      resultMatrixSignificance0.m_HeaderKeys = vector0;
      resultMatrixSignificance0.m_StdDevWidth = 2;
      resultMatrixSignificance0.setColNameWidth(2);
      resultMatrixSignificance0.getVisibleColCount();
      resultMatrixSignificance0.enumerateRowNamesTipText();
      ResultMatrixHTML resultMatrixHTML0 = null;
      try {
        resultMatrixHTML0 = new ResultMatrixHTML((-1475), 2);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.7936567840058286
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setMeanPrec((-885));
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertFalse(resultMatrixPlainText0.getShowAverage());
      assertEquals(1, resultMatrixPlainText0.getColCount());
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
      assertTrue(resultMatrixPlainText0.getDefaultEnumerateColNames());
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      assertFalse(resultMatrixPlainText0.getRemoveFilterName());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.8466796372141983
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(10, 10);
      resultMatrixSignificance0.m_PrintRowNames = false;
      resultMatrixSignificance0.LEFT_PARENTHESES = "EGq|!b7EUN%;V:n\"W4";
      resultMatrixSignificance0.setMeanPrec(10);
      assertEquals(10, resultMatrixSignificance0.getMeanPrec());
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.toStringSummary();
      resultMatrixLatex0.getDefaultShowStdDev();
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=3.38338082074222
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[] intArray0 = new int[6];
      intArray0[0] = 0;
      intArray0[1] = 3;
      resultMatrixHTML0.addHeader("\tWhether to enumerate the column names (prefixing them with \n\t'(x)', with 'x' being the index).\n\t(default: no)", "\tWhether to enumerate the column names (prefixing them with \n\t'(x)', with 'x' being the index).\n\t(default: no)");
      intArray0[2] = 0;
      intArray0[3] = 3;
      intArray0[4] = 1;
      intArray0[5] = 2;
      resultMatrixHTML0.m_ColOrder = intArray0;
      resultMatrixHTML0.m_StdDevWidth = 941;
      resultMatrixHTML0.toArray();
      resultMatrixHTML0.setStdDevWidth(3);
      resultMatrixHTML0.toStringSummary();
      resultMatrixHTML0.toStringSummary();
      resultMatrixHTML0.setMeanPrec(3);
      resultMatrixHTML0.getRowOrder();
      resultMatrixHTML0.toStringSummary();
      resultMatrixHTML0.getSummaryTitle(2);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDefaultPrintColNames();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "\tWhether to enumerate the column names (prefixing them with \n\t'(x)', with 'x' being the index).\n\t(default: no)";
      stringArray0[1] = "";
      stringArray0[2] = "-summary data not set-";
      ResultMatrixCSV.main(stringArray0);
      assertEquals(3, stringArray0.length);
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.950391601025311
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.padString("@(V~c$Ao93;bH", 0);
      resultMatrixPlainText0.setShowStdDev(true);
      resultMatrixPlainText0.getMeanPrec();
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.setSize(2, (-513));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.8322602295395347
  */
  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setColNameWidth(496);
      resultMatrixPlainText0.getMean(496, 25);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      boolean[] booleanArray0 = new boolean[8];
      booleanArray0[0] = true;
      booleanArray0[1] = true;
      booleanArray0[2] = true;
      booleanArray0[3] = true;
      booleanArray0[4] = true;
      booleanArray0[5] = true;
      booleanArray0[6] = true;
      booleanArray0[7] = true;
      resultMatrixLatex0.m_RowHidden = booleanArray0;
      resultMatrixLatex0.setShowStdDev(true);
      resultMatrixLatex0.clear();
      assertEquals(496, resultMatrixPlainText0.getColNameWidth());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=3.092497115437581
  */
  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setColNameWidth(496);
      resultMatrixPlainText0.getMean(496, 25);
      resultMatrixPlainText0.getSignificance(3, 496);
      resultMatrixPlainText0.getVisibleColCount();
      assertEquals(496, resultMatrixPlainText0.getColNameWidth());
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.padString("8jl!>YQSrHp(nV", 25, false);
      resultMatrixLatex0.clear();
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=3.5710687278047746
  */
  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 0);
      Vector<Object> vector0 = new Vector<Object>();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      resultMatrixPlainText0.getMean(2, 0);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixPlainText0);
      int[] intArray0 = new int[3];
      intArray0[0] = 0;
      intArray0[1] = 25;
      intArray0[2] = 2;
      resultMatrixHTML0.m_RowOrder = intArray0;
      resultMatrixPlainText0.m_EnumerateRowNames = false;
      resultMatrixPlainText1.getSignificance(496, 25);
      resultMatrixPlainText1.getVisibleColCount();
      ResultMatrixPlainText resultMatrixPlainText2 = new ResultMatrixPlainText();
      resultMatrixPlainText2.setCount(0, 10.0);
      assertEquals(1, resultMatrixPlainText2.getVisibleColCount());
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = ")";
      resultMatrixPlainText0.LOSS_STRING = " ";
      stringArray0[2] = "*";
      stringArray0[3] = "v";
      stringArray0[4] = "-remove-filter";
      ResultMatrixPlainText.main(stringArray0);
      resultMatrixPlainText2.printColNamesTipText();
      resultMatrixPlainText0.colNameWidthTipText();
      assertTrue(resultMatrixPlainText0.getEnumerateColNames());
      assertEquals(25, resultMatrixPlainText0.getRowNameWidth());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=3.123841515493994
  */
  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setStdDevPrec(9);
      Vector<String> vector0 = new Vector<String>();
      resultMatrixLatex0.m_HeaderValues = vector0;
      resultMatrixLatex0.m_SignificanceWidth = (-1860);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.clearHeader();
      resultMatrixCSV0.setStdDevWidth(0);
      int[] intArray0 = new int[7];
      intArray0[0] = 1;
      intArray0[1] = 0;
      intArray0[2] = (-1860);
      intArray0[3] = 0;
      intArray0[4] = 26;
      intArray0[5] = 0;
      intArray0[6] = 2;
      resultMatrixCSV0.setColOrder(intArray0);
      resultMatrixLatex0.toStringSummary();
      resultMatrixLatex0.setColNameWidth(30);
      resultMatrixCSV0.clear();
      resultMatrixLatex0.printColNamesTipText();
      resultMatrixCSV0.listOptions();
      resultMatrixCSV0.getDefaultSignificanceWidth();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(14, 1);
      vector0.add("isNewer? ");
      resultMatrixGnuPlot0.m_RowNameWidth = 46;
      resultMatrixGnuPlot0.getRevision();
      resultMatrixGnuPlot0.getDefaultRowNameWidth();
      resultMatrixLatex0.getEnumerateColNames();
      assertEquals(30, resultMatrixLatex0.getColNameWidth());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=3.584168859945149
  */
  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.clear();
      String[] stringArray0 = resultMatrixLatex0.getOptions();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      int[][] intArray0 = new int[5][6];
      int[] intArray1 = new int[0];
      intArray0[0] = intArray1;
      int[] intArray2 = new int[9];
      intArray2[0] = 1;
      intArray2[1] = 1;
      intArray2[2] = 34;
      intArray2[3] = 2;
      intArray2[4] = 2;
      intArray2[5] = 0;
      intArray2[6] = 0;
      intArray2[7] = 1;
      intArray2[8] = 0;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[7];
      intArray3[0] = 2;
      intArray3[1] = 1;
      intArray3[2] = 34;
      intArray3[3] = 1;
      intArray3[4] = 1;
      intArray3[5] = 1;
      intArray3[6] = 34;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[4];
      intArray4[0] = 1347;
      intArray4[1] = 0;
      intArray4[2] = 1;
      ResultMatrixLatex resultMatrixLatex2 = new ResultMatrixLatex(resultMatrixLatex0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex2);
      resultMatrixPlainText0.setOptions(stringArray0);
      resultMatrixPlainText0.getDefaultRemoveFilterName();
      assertEquals(0, resultMatrixPlainText0.getStdDevPrec());
      
      resultMatrixLatex1.stdDevWidthTipText();
      assertEquals(2, resultMatrixLatex1.getStdDevPrec());
      
      resultMatrixLatex0.removeFilterNameTipText();
      assertEquals(1, resultMatrixLatex0.getRowCount());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=2.7011014009503405
  */
  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setCountWidth(1223);
      resultMatrixPlainText0.getDefaultRowNameWidth();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      resultMatrixPlainText0.m_EnumerateRowNames = false;
      int[][] intArray0 = new int[2][5];
      int[] intArray1 = new int[8];
      intArray1[0] = 1;
      intArray1[1] = 34;
      intArray1[2] = 0;
      intArray1[3] = 1223;
      intArray1[4] = 25;
      intArray1[5] = 1;
      intArray1[6] = 0;
      intArray1[7] = 0;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[2];
      intArray2[0] = 2;
      intArray2[1] = 0;
      intArray0[1] = intArray2;
      // Undeclared exception!
      try { 
        resultMatrixLatex0.setRanking(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=2.950391601025311
  */
  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.m_MeanPrec = 0;
      resultMatrixSignificance0.clearRanking();
      int[] intArray0 = new int[5];
      intArray0[0] = 1;
      intArray0[1] = 0;
      intArray0[2] = 1;
      intArray0[3] = 2;
      intArray0[4] = 0;
      resultMatrixSignificance0.m_RankingDiff = intArray0;
      resultMatrixSignificance0.setShowAverage(false);
      resultMatrixSignificance0.setStdDevPrec(0);
      resultMatrixSignificance0.setCountWidth((-244));
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.getColSize((String[][]) null, 26);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=3.2501444518297604
  */
  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.clear();
      String[] stringArray0 = resultMatrixLatex0.getOptions();
      assertEquals(18, stringArray0.length);
      
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      resultMatrixLatex0.setShowAverage(false);
      resultMatrixLatex0.listOptions();
      resultMatrixLatex1.getRevision();
      assertEquals(2, resultMatrixLatex1.getMeanPrec());
      assertFalse(resultMatrixLatex0.getShowAverage());
      assertEquals(0, resultMatrixLatex1.getColNameWidth());
      assertEquals(0, resultMatrixLatex1.getStdDevWidth());
      assertEquals(1, resultMatrixLatex1.getColCount());
      assertEquals(1, resultMatrixLatex1.getVisibleRowCount());
      assertEquals(0, resultMatrixLatex1.getRowNameWidth());
      assertEquals(2, resultMatrixLatex1.getStdDevPrec());
      assertTrue(resultMatrixLatex1.getEnumerateColNames());
      assertEquals(0, resultMatrixLatex1.getSignificanceWidth());
      assertEquals(0, resultMatrixLatex1.getCountWidth());
      assertEquals(0, resultMatrixLatex1.getMeanWidth());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=3.034764843439823
  */
  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      double[][] doubleArray0 = new double[4][6];
      double[] doubleArray1 = new double[3];
      doubleArray1[0] = (double) 0;
      doubleArray1[1] = (double) 2;
      doubleArray1[2] = (double) 0;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[3];
      doubleArray2[0] = (double) 0;
      doubleArray2[1] = (double) 2;
      doubleArray2[2] = (double) 0;
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[0];
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[6];
      doubleArray4[0] = (double) 1;
      doubleArray4[1] = (double) 0;
      doubleArray4[2] = (-2153.2);
      doubleArray4[3] = (double) 1;
      doubleArray4[4] = (double) 2;
      doubleArray4[5] = (double) 0;
      doubleArray0[3] = doubleArray4;
      resultMatrixCSV0.m_Mean = doubleArray0;
      resultMatrixCSV0.setEnumerateRowNames(true);
      resultMatrixCSV0.toStringKey();
      resultMatrixCSV0.doubleToString(2738.5057788397, 95);
      resultMatrixCSV0.setPrintColNames(true);
      resultMatrixCSV0.headerKeys();
      assertTrue(resultMatrixCSV0.getPrintColNames());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=3.340271883519082
  */
  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixSignificance0);
      String[] stringArray0 = resultMatrixHTML0.getOptions();
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
      assertEquals(18, stringArray0.length);
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(1, 48);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
      
      String[][] stringArray1 = resultMatrixLatex0.toArray();
      assertEquals(5, resultMatrixLatex0.getCountWidth());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertEquals(50, stringArray1.length);
      assertTrue(resultMatrixLatex0.getPrintColNames());
      
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      resultMatrixPlainText1.setCount(54, 1);
      assertEquals(25, resultMatrixPlainText1.getRowNameWidth());
      assertEquals(2, resultMatrixPlainText1.getMeanPrec());
      assertEquals(0, resultMatrixPlainText1.getColNameWidth());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=2.6486255461118287
  */
  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixPlainText0);
      resultMatrixPlainText1.setRowHidden(60, false);
      assertEquals(2, resultMatrixPlainText1.getStdDevPrec());
      assertEquals(5, resultMatrixPlainText1.getCountWidth());
      assertFalse(resultMatrixPlainText1.getEnumerateRowNames());
      assertEquals(0, resultMatrixPlainText1.getSignificanceWidth());
      assertTrue(resultMatrixPlainText1.getPrintRowNames());
      assertEquals(25, resultMatrixPlainText1.getRowNameWidth());
      assertEquals(0, resultMatrixPlainText1.getStdDevWidth());
      assertFalse(resultMatrixPlainText1.getDefaultRemoveFilterName());
      assertEquals(0, resultMatrixPlainText1.getMeanWidth());
      assertEquals(1, resultMatrixPlainText1.getColCount());
  }
}
