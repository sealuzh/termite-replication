/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 15:45:22 GMT 2019
 */

package weka.experiment;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import weka.experiment.ResultMatrixCSV;
import weka.experiment.ResultMatrixGnuPlot;
import weka.experiment.ResultMatrixHTML;
import weka.experiment.ResultMatrixLatex;
import weka.experiment.ResultMatrixPlainText;
import weka.experiment.ResultMatrixSignificance;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ResultMatrix_ESTest extends ResultMatrix_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.7849238574846904
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixHTML0);
      resultMatrixHTML1.m_PrintColNames = false;
      resultMatrixHTML0.setSignificanceWidth(1668);
      resultMatrixHTML1.setStdDevWidth(1774);
      resultMatrixHTML1.padString("v", 2238, true);
      resultMatrixHTML0.toStringKey();
      resultMatrixHTML0.toStringMatrix();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixLatex0.clear();
      resultMatrixLatex0.m_StdDevPrec = (-2033);
      resultMatrixLatex0.getRowName(1);
      resultMatrixLatex0.toArray();
      resultMatrixLatex0.setSize(26, 0);
      resultMatrixLatex0.padString("EgVp?#MJ+^D#L {L", 1, false);
      resultMatrixLatex0.getDisplayName();
      resultMatrixLatex0.assign(resultMatrixHTML0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.6747830669722394
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixSignificance0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixSignificance1.getRowName(7);
      String[] stringArray0 = new String[2];
      resultMatrixSignificance1.toArray();
      resultMatrixSignificance1.m_StdDevWidth = 2;
      resultMatrixPlainText0.RIGHT_PARENTHESES = "(";
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.padString((String) null, 2, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.967568504610563
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(17, 97);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      // Undeclared exception!
      resultMatrixGnuPlot0.assign(resultMatrixHTML0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.258589941610365
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(1, 1);
      int[] intArray0 = new int[8];
      intArray0[0] = 0;
      intArray0[1] = 97;
      intArray0[2] = 1;
      intArray0[3] = 2;
      intArray0[4] = 0;
      intArray0[5] = 202;
      intArray0[6] = 1;
      intArray0[7] = 2;
      resultMatrixLatex1.setRowOrder(intArray0);
      resultMatrixLatex1.padString("$circ$", 1, true);
      resultMatrixLatex0.assign(resultMatrixLatex1);
      resultMatrixLatex0.m_StdDevPrec = 202;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      resultMatrixSignificance0.getRevision();
      resultMatrixSignificance0.setColNameWidth(116);
      resultMatrixSignificance0.getDefaultShowStdDev();
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.487400797488989
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(2, 2);
      resultMatrixPlainText0.globalInfo();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.toStringRanking();
      resultMatrixLatex0.significanceWidthTipText();
      resultMatrixPlainText0.getAverage((-1115));
      String[][] stringArray0 = new String[0][5];
      resultMatrixPlainText0.getColSize(stringArray0, (-1115));
      resultMatrixPlainText0.getDefaultPrintColNames();
      resultMatrixPlainText0.setSignificance(1, 65, 0);
      resultMatrixPlainText0.getDefaultRowNameWidth();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      resultMatrixSignificance0.getEnumerateRowNames();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      resultMatrixLatex0.getRevision();
      resultMatrixLatex1.setEnumerateColNames(true);
      resultMatrixSignificance0.getEnumerateRowNames();
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.192313694045538
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(17, 97);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      resultMatrixSignificance0.setSignificanceWidth(1);
      int[] intArray0 = new int[0];
      resultMatrixHTML0.setColOrder(intArray0);
      resultMatrixSignificance0.getDefaultStdDevPrec();
      resultMatrixHTML0.m_ShowStdDev = false;
      resultMatrixSignificance0.getRevision();
      resultMatrixSignificance0.setColNameWidth(102);
      resultMatrixSignificance0.getDefaultShowStdDev();
      resultMatrixHTML0.setCountWidth(0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.4115423414199886
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setSignificanceWidth(1098);
      resultMatrixGnuPlot0.m_CountWidth = 32;
      resultMatrixGnuPlot0.stdDevPrecTipText();
      resultMatrixGnuPlot0.setSignificanceWidth(32);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(32, 13);
      int[] intArray0 = new int[8];
      intArray0[0] = 32;
      intArray0[1] = 1098;
      intArray0[2] = 1;
      intArray0[3] = 1;
      intArray0[4] = 32;
      intArray0[5] = 32;
      intArray0[6] = 32;
      intArray0[7] = 32;
      resultMatrixLatex0.setPrintColNames(false);
      resultMatrixLatex0.m_RankingLosses = intArray0;
      // Undeclared exception!
      try { 
        resultMatrixLatex0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=4.063457515086423
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      int[] intArray0 = new int[1];
      resultMatrixPlainText0.setColOrder(intArray0);
      resultMatrixPlainText0.setCount(0, 0);
      ResultMatrixSignificance.main((String[]) null);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getColNameWidth();
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.975227101669818
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(97, 50);
      resultMatrixSignificance0.m_MeanWidth = 0;
      resultMatrixSignificance0.getDefaultStdDevPrec();
      resultMatrixSignificance0.getRevision();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(97, 0);
      int[] intArray0 = new int[3];
      intArray0[0] = 2;
      intArray0[1] = 2;
      resultMatrixSignificance0.getDefaultStdDevPrec();
      resultMatrixSignificance0.getRevision();
      resultMatrixSignificance0.setColNameWidth(69);
      resultMatrixSignificance0.getDefaultShowStdDev();
      String[] stringArray0 = new String[6];
      stringArray0[0] = " ";
      stringArray0[1] = "(";
      stringArray0[2] = "(";
      stringArray0[3] = "*";
      stringArray0[4] = "8034";
      stringArray0[5] = "8034";
      ResultMatrixLatex.main(stringArray0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=4.185438887131329
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      String[] stringArray0 = new String[0];
      ResultMatrixHTML.main(stringArray0);
      resultMatrixLatex0.setMeanWidth(3);
      resultMatrixLatex0.setOptions(stringArray0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 55);
      resultMatrixPlainText0.globalInfo();
      resultMatrixLatex0.toStringRanking();
      resultMatrixLatex0.significanceWidthTipText();
      resultMatrixPlainText0.getAverage(3);
      String[][] stringArray1 = new String[6][4];
      stringArray1[0] = stringArray0;
      stringArray1[1] = stringArray0;
      stringArray1[2] = stringArray0;
      stringArray1[3] = stringArray0;
      stringArray1[4] = stringArray0;
      stringArray1[5] = stringArray0;
      resultMatrixPlainText0.getColSize(stringArray1, 1138);
      resultMatrixPlainText0.getDefaultPrintColNames();
      resultMatrixPlainText0.setSignificance((-1177), 3, 0);
      resultMatrixPlainText0.getDefaultRowNameWidth();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getEnumerateRowNames();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      resultMatrixLatex0.getRevision();
      assertEquals(0, resultMatrixLatex0.getStdDevPrec());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.2252228266584964
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getDefaultRowNameWidth();
      Vector<Object> vector0 = new Vector<Object>();
      Object object0 = new Object();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setStdDevWidth(1);
      Object object1 = new Object();
      vector0.add(object1);
      vector0.add(object1);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixLatex0.clear();
      assertEquals(0, resultMatrixLatex0.getDefaultStdDevWidth());
      assertEquals(1, resultMatrixHTML0.getStdDevWidth());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=4.070147720790143
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setColNameWidth(496);
      resultMatrixPlainText0.getMean(496, 25);
      resultMatrixPlainText0.getSignificance(0, 496);
      int int0 = resultMatrixPlainText0.getVisibleColCount();
      assertEquals(1, int0);
      
      resultMatrixPlainText0.setCount(0, 1);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      resultMatrixSignificance0.setColNameWidth(0);
      resultMatrixPlainText0.getRowHidden((-2461));
      String[] stringArray0 = new String[6];
      stringArray0[0] = "v";
      stringArray0[1] = "*";
      stringArray0[2] = "*";
      stringArray0[3] = "*";
      stringArray0[4] = "(";
      stringArray0[5] = "*";
      ResultMatrixSignificance.main(stringArray0);
      resultMatrixSignificance0.isAverage(0);
      assertTrue(resultMatrixSignificance0.getPrintRowNames());
      assertEquals(0, resultMatrixSignificance0.getStdDevWidth());
      assertEquals(0, resultMatrixSignificance0.getMeanWidth());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=4.051949140378199
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setColNameWidth(496);
      resultMatrixPlainText0.getMean(496, 25);
      resultMatrixPlainText0.getSignificance(7, 496);
      resultMatrixPlainText0.getVisibleColCount();
      resultMatrixPlainText0.setCount(7, 1);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setColNameWidth(0);
      resultMatrixPlainText0.getRowHidden((-2422));
      assertEquals(496, resultMatrixPlainText0.getColNameWidth());
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setColName(2, "");
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(1, 182);
      resultMatrixLatex1.toStringRanking();
      resultMatrixHTML0.getShowStdDev();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.toStringRanking();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "v";
      stringArray0[1] = ")";
      ResultMatrixPlainText.main(stringArray0);
      resultMatrixSignificance0.getSignificanceCount(8, 2);
      assertEquals(40, resultMatrixSignificance0.getRowNameWidth());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.4905025822062656
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      Vector<Object> vector0 = new Vector<Object>();
      Object object0 = new Object();
      vector0.add((Object) null);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(470, 2);
      resultMatrixHTML0.getVisibleColCount();
      resultMatrixHTML0.setEnumerateRowNames(false);
      resultMatrixHTML0.setColName(86, ")");
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.toStringRanking();
      resultMatrixLatex0.getRevision();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=4.208281901809378
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getVisibleColCount();
      resultMatrixLatex0.clearHeader();
      String[] stringArray0 = new String[6];
      stringArray0[0] = " ";
      stringArray0[1] = ")";
      stringArray0[2] = " ";
      stringArray0[3] = "$\bullet$";
      stringArray0[4] = "(";
      stringArray0[5] = ")";
      ResultMatrixHTML.main(stringArray0);
      resultMatrixLatex0.setMeanWidth(0);
      resultMatrixLatex0.setOptions(stringArray0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(1, 0);
      resultMatrixPlainText0.globalInfo();
      resultMatrixLatex0.toStringRanking();
      resultMatrixLatex0.significanceWidthTipText();
      String[][] stringArray1 = new String[6][3];
      stringArray1[0] = stringArray0;
      stringArray1[1] = stringArray0;
      String[] stringArray2 = new String[9];
      stringArray2[0] = "(";
      resultMatrixPlainText0.getAverage(1);
      resultMatrixPlainText0.getColSize(stringArray1, (-3352));
      resultMatrixPlainText0.getDefaultPrintColNames();
      resultMatrixPlainText0.setSignificance(0, 1, 3224);
      resultMatrixPlainText0.getDefaultRowNameWidth();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      resultMatrixSignificance0.getEnumerateRowNames();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      resultMatrixLatex0.getRevision();
      resultMatrixLatex0.setEnumerateColNames(false);
      resultMatrixSignificance0.getEnumerateRowNames();
      int[][] intArray0 = new int[8][3];
      int[] intArray1 = new int[4];
      intArray1[0] = 0;
      intArray1[1] = 0;
      intArray1[2] = 0;
      intArray1[3] = 1432;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[3];
      intArray2[0] = 25;
      intArray2[1] = 2;
      intArray2[2] = 0;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[8];
      intArray3[0] = 85;
      intArray3[1] = (-3352);
      intArray3[2] = 1;
      intArray3[3] = 0;
      intArray3[4] = 1;
      intArray3[5] = 2;
      intArray3[6] = 1;
      intArray3[7] = 2;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[6];
      intArray4[0] = 3224;
      intArray4[1] = 3224;
      intArray4[2] = 0;
      intArray4[3] = 2;
      intArray4[4] = 1;
      intArray4[5] = 0;
      intArray0[3] = intArray4;
      int[] intArray5 = new int[2];
      intArray5[0] = 0;
      intArray5[1] = 1432;
      intArray0[4] = intArray5;
      int[] intArray6 = new int[6];
      intArray6[0] = 1;
      intArray6[1] = 0;
      intArray6[2] = 3;
      intArray6[3] = (-3352);
      intArray6[4] = 0;
      intArray6[5] = 1;
      intArray0[5] = intArray6;
      int[] intArray7 = new int[9];
      intArray7[0] = 3;
      intArray7[1] = 2;
      intArray7[2] = 1;
      intArray7[3] = 3224;
      intArray7[4] = 0;
      intArray7[5] = 0;
      intArray7[6] = 0;
      intArray7[7] = (-3352);
      intArray7[8] = 2;
      intArray0[6] = intArray7;
      int[] intArray8 = new int[7];
      intArray8[0] = 0;
      intArray8[1] = 1;
      intArray8[2] = 1;
      intArray8[3] = 1;
      intArray8[4] = 0;
      intArray8[5] = 2;
      intArray8[6] = 0;
      intArray0[7] = intArray8;
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.setSummary(intArray0, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=4.065998629857592
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setColNameWidth(496);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      resultMatrixPlainText0.getMean(648, 1273);
      resultMatrixPlainText0.getSignificance(1273, 3170);
      int int0 = resultMatrixPlainText0.getVisibleColCount();
      assertEquals(1, int0);
      
      resultMatrixPlainText0.setCount(54, 648);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixSignificance0);
      ResultMatrixSignificance resultMatrixSignificance2 = new ResultMatrixSignificance();
      resultMatrixSignificance2.setColNameWidth(1273);
      resultMatrixSignificance1.getDefaultShowStdDev();
      String[] stringArray0 = new String[4];
      stringArray0[0] = ")";
      stringArray0[1] = "*";
      stringArray0[2] = "*";
      stringArray0[3] = ")";
      ResultMatrixSignificance.main(stringArray0);
      resultMatrixSignificance0.isAverage(63);
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertEquals(0, resultMatrixSignificance0.getMeanWidth());
      assertFalse(resultMatrixSignificance0.getEnumerateRowNames());
      assertFalse(resultMatrixSignificance0.getShowAverage());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.2364195679099574
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getDefaultEnumerateRowNames();
      int int0 = resultMatrixGnuPlot0.getMeanWidth();
      assertEquals(0, int0);
      
      resultMatrixGnuPlot0.setColHidden(97, true);
      assertFalse(resultMatrixGnuPlot0.getRemoveFilterName());
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleRowCount());
      assertTrue(resultMatrixGnuPlot0.getDefaultPrintColNames());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertFalse(resultMatrixGnuPlot0.getDefaultShowAverage());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=4.035453663651276
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getVisibleColCount();
      resultMatrixLatex0.clearHeader();
      String[] stringArray0 = new String[6];
      stringArray0[0] = " ";
      stringArray0[2] = " ";
      stringArray0[3] = "$\bullet$";
      stringArray0[4] = "(";
      stringArray0[5] = ")";
      ResultMatrixHTML.main(stringArray0);
      resultMatrixLatex0.setMeanWidth(0);
      try { 
        resultMatrixLatex0.setOptions(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.core.Utils", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.3946833324214873
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(97, 50);
      resultMatrixSignificance0.getDefaultStdDevPrec();
      resultMatrixSignificance0.getRevision();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.printRowNamesTipText();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.clear();
      resultMatrixHTML0.getDefaultRemoveFilterName();
      // Undeclared exception!
      try { 
        resultMatrixHTML0.getHeader("");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.985126620638753
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      assertEquals(1, resultMatrixPlainText0.getColCount());
      
      String[] stringArray0 = new String[2];
      stringArray0[1] = "*";
      ResultMatrixPlainText.main(stringArray0);
      resultMatrixPlainText0.getDefaultCountWidth();
      String string0 = resultMatrixPlainText0.toStringMatrix();
      assertEquals("Dataset                   (1) col0 \n-----------------------------------\nrow0                       (0)    |\n-----------------------------------\n(v/ /*)                           |\n", string0);
      
      resultMatrixPlainText0.getAverage(3129);
      resultMatrixPlainText0.getDefaultPrintColNames();
      resultMatrixPlainText0.getDefaultRowNameWidth();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getRevision();
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.9677824518451272
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getDefaultRowNameWidth();
      resultMatrixPlainText0.padString("", 0);
      resultMatrixPlainText0.getDisplayName();
      String[] stringArray0 = new String[4];
      resultMatrixPlainText0.TIE_STRING = "(";
      stringArray0[2] = "Plain Text";
      ResultMatrixPlainText.main(stringArray0);
      resultMatrixPlainText0.getVisibleColCount();
      resultMatrixPlainText0.addHeader("L!}gV", "");
      assertFalse(resultMatrixPlainText0.getRemoveFilterName());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
      assertEquals(0, resultMatrixPlainText0.getColNameWidth());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.9326918684097842
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      resultMatrixPlainText0.toStringRanking();
      resultMatrixGnuPlot0.setPrintRowNames(true);
      String[] stringArray0 = new String[3];
      Vector<Integer> vector0 = new Vector<Integer>();
      resultMatrixPlainText0.m_HeaderValues = vector0;
      stringArray0[0] = " ";
      stringArray0[1] = "";
      stringArray0[2] = "";
      ResultMatrixGnuPlot.main(stringArray0);
      resultMatrixSignificance0.toStringRanking();
      resultMatrixGnuPlot0.getDisplayName();
      resultMatrixGnuPlot0.getDisplayName();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      // Undeclared exception!
      try { 
        resultMatrixHTML0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.7312515759969003
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(347, 1);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.toArray();
      resultMatrixLatex0.toStringSummary();
      resultMatrixPlainText0.setMeanPrec(123);
      resultMatrixLatex0.clearRanking();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getShowAverage();
      // Undeclared exception!
      try { 
        resultMatrixHTML0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.224275308629334
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixLatex0);
      resultMatrixGnuPlot0.setRowNameWidth((-1116));
      resultMatrixGnuPlot0.clearSummary();
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
      assertEquals(0, resultMatrixGnuPlot0.getRowNameWidth());
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertFalse(resultMatrixGnuPlot0.getEnumerateRowNames());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 26);
      resultMatrixPlainText0.toStringSummary();
      assertFalse(resultMatrixPlainText0.getRemoveFilterName());
      assertTrue(resultMatrixPlainText0.getDefaultPrintColNames());
      assertEquals(0, resultMatrixPlainText0.getColCount());
      assertEquals(26, resultMatrixPlainText0.getRowCount());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=4.050524690030051
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      resultMatrixPlainText0.setColNameWidth(0);
      resultMatrixPlainText0.getMean(1048, 1);
      resultMatrixPlainText0.getSignificance(0, 2);
      resultMatrixPlainText0.getVisibleColCount();
      resultMatrixPlainText0.setCount(96, 0.0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      resultMatrixSignificance0.setColNameWidth((-1619));
      resultMatrixPlainText0.getRowHidden(2579);
      String[] stringArray0 = new String[0];
      ResultMatrixSignificance.main(stringArray0);
      assertEquals(0, stringArray0.length);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.7553055529430734
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getDefaultPrintColNames();
      resultMatrixHTML0.getOptions();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      resultMatrixPlainText0.setColNameWidth(1);
      resultMatrixPlainText0.getMean(1, 18);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixLatex0.clear();
      int int0 = resultMatrixPlainText0.getStdDevPrec();
      assertEquals(1, resultMatrixPlainText0.getColNameWidth());
      assertEquals(1, resultMatrixHTML0.getColCount());
      assertEquals(2, int0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.919098955225318
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 97);
      assertEquals(97, resultMatrixGnuPlot0.getVisibleRowCount());
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      stringArray0[1] = "*";
      ResultMatrixGnuPlot.main(stringArray0);
      resultMatrixGnuPlot0.setPrintColNames(true);
      resultMatrixGnuPlot0.getMeanWidth();
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(50, resultMatrixGnuPlot0.getRowNameWidth());
      assertFalse(resultMatrixGnuPlot0.getShowAverage());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.9212144637784814
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      resultMatrixPlainText0.toStringRanking();
      resultMatrixGnuPlot0.setPrintRowNames(true);
      String[] stringArray0 = new String[3];
      Vector<Integer> vector0 = new Vector<Integer>();
      resultMatrixPlainText0.m_HeaderValues = vector0;
      assertEquals(1, resultMatrixPlainText0.getVisibleColCount());
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
      
      stringArray0[0] = " ";
      stringArray0[1] = "";
      stringArray0[2] = "";
      ResultMatrixGnuPlot.main(stringArray0);
      resultMatrixSignificance0.toStringRanking();
      vector0.clone();
      resultMatrixGnuPlot0.getDisplayName();
      resultMatrixGnuPlot0.getDisplayName();
      resultMatrixSignificance0.getPrintColNames();
      resultMatrixGnuPlot0.printRowNamesTipText();
      resultMatrixGnuPlot0.getMean(1, 2);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixGnuPlot0);
      resultMatrixLatex0.toStringKey();
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(50, resultMatrixGnuPlot0.getColNameWidth());
      assertEquals(0, resultMatrixLatex0.getDefaultCountWidth());
      assertEquals(50, resultMatrixLatex0.getRowNameWidth());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=4.00260055569732
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      assertEquals(1, resultMatrixSignificance0.getVisibleColCount());
      assertTrue(resultMatrixSignificance0.getEnumerateColNames());
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "v";
      stringArray0[1] = "v";
      ResultMatrixSignificance.main(stringArray0);
      resultMatrixSignificance0.m_ShowStdDev = true;
      assertFalse(resultMatrixSignificance0.getShowAverage());
      
      resultMatrixSignificance0.m_ShowAverage = true;
      resultMatrixSignificance0.getRevision();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      String[] stringArray1 = new String[0];
      resultMatrixCSV0.m_ColNames = stringArray1;
      resultMatrixCSV0.getDisplayName();
      resultMatrixCSV0.clear();
      resultMatrixCSV0.toStringSummary();
      assertFalse(resultMatrixCSV0.getShowAverage());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=4.1598520994032
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getDefaultPrintColNames();
      String[] stringArray0 = resultMatrixHTML0.getOptions();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      resultMatrixPlainText0.setColNameWidth(1);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      resultMatrixSignificance0.getRevision();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(91, 7);
      int[] intArray0 = new int[4];
      intArray0[0] = 1;
      intArray0[2] = 0;
      intArray0[3] = 2;
      resultMatrixPlainText1.setColOrder(intArray0);
      resultMatrixPlainText0.setCount(1, 0.0);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixSignificance0);
      ResultMatrixSignificance.main(stringArray0);
      resultMatrixSignificance1.getColNameWidth();
      resultMatrixSignificance1.setColNameWidth(0);
      assertEquals(1, resultMatrixPlainText0.getColNameWidth());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=3.7379918360679474
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(2, 2);
      resultMatrixSignificance0.toArray();
      resultMatrixSignificance0.setStdDevPrec((-1));
      resultMatrixCSV0.assign(resultMatrixSignificance0);
      resultMatrixCSV0.m_RemoveFilterName = true;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      resultMatrixGnuPlot0.getSummaryTitle((-1));
      resultMatrixGnuPlot0.isRowName((-1181));
      resultMatrixSignificance0.getColNameWidth();
      resultMatrixCSV0.setMeanPrec((-553));
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      // Undeclared exception!
      try { 
        resultMatrixLatex0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=3.8842261363741164
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getDefaultPrintColNames();
      resultMatrixHTML0.getOptions();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      resultMatrixPlainText0.setColNameWidth(1);
      resultMatrixPlainText0.getMean(1, 18);
      resultMatrixPlainText0.getSignificance(0, 1382);
      resultMatrixPlainText0.getVisibleColCount();
      resultMatrixPlainText0.setCount((-510), 0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      resultMatrixSignificance0.setRemoveFilterName(false);
      resultMatrixSignificance0.toStringSummary();
      assertEquals(1, resultMatrixPlainText0.getColNameWidth());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.439005740945991
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getVisibleColCount();
      resultMatrixHTML0.setEnumerateRowNames(false);
      resultMatrixHTML0.setColName((-3353), "-enum-row-names");
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      resultMatrixLatex0.toStringRanking();
      resultMatrixLatex1.getRevision();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.445966822264249
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 0);
      resultMatrixHTML0.m_Wins = null;
      Vector<Object> vector0 = new Vector<Object>();
      int[][] intArray0 = new int[0][7];
      resultMatrixHTML0.m_Wins = intArray0;
      resultMatrixHTML0.m_HeaderValues = vector0;
      Object object0 = new Object();
      vector0.add(object0);
      resultMatrixHTML0.m_StdDevPrec = 0;
      int int0 = resultMatrixHTML0.getVisibleColCount();
      assertEquals(0, int0);
      
      resultMatrixHTML0.setEnumerateRowNames(false);
      resultMatrixHTML0.setColName(0, "1O");
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.toStringRanking();
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
      
      resultMatrixHTML0.toStringKey();
      resultMatrixHTML0.getShowStdDev();
      assertEquals(0, resultMatrixHTML0.getDefaultColNameWidth());
      assertFalse(resultMatrixHTML0.getDefaultRemoveFilterName());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertTrue(resultMatrixHTML0.getDefaultPrintRowNames());
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.377373743423896
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 0);
      resultMatrixGnuPlot0.getDefaultStdDevWidth();
      assertEquals(0, resultMatrixGnuPlot0.getRowCount());
      assertEquals(0, resultMatrixGnuPlot0.getColCount());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertFalse(resultMatrixGnuPlot0.getRemoveFilterName());
      assertFalse(resultMatrixGnuPlot0.getDefaultShowStdDev());
      assertTrue(resultMatrixGnuPlot0.getDefaultPrintRowNames());
      assertFalse(resultMatrixGnuPlot0.getDefaultShowAverage());
      assertEquals(0, resultMatrixGnuPlot0.getDefaultCountWidth());
      assertEquals(0, resultMatrixGnuPlot0.getDefaultMeanWidth());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=4.186754463688499
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ResultMatrixHTML.main((String[]) null);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 0);
      resultMatrixLatex0.setMeanWidth(0);
      resultMatrixLatex0.setOptions((String[]) null);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 26);
      resultMatrixLatex0.RIGHT_PARENTHESES = "*";
      resultMatrixPlainText0.globalInfo();
      resultMatrixLatex0.toStringRanking();
      resultMatrixLatex0.significanceWidthTipText();
      resultMatrixPlainText0.getAverage(2);
      String[][] stringArray0 = new String[0][3];
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.getColSize(stringArray0, 97);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.476204833696219
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 0);
      resultMatrixHTML0.m_Wins = null;
      Vector<Object> vector0 = new Vector<Object>();
      int[][] intArray0 = new int[0][7];
      resultMatrixHTML0.m_Wins = intArray0;
      resultMatrixHTML0.m_HeaderValues = vector0;
      Object object0 = new Object();
      resultMatrixHTML0.setStdDevWidth(0);
      vector0.add((Object) resultMatrixHTML0.m_HeaderValues);
      vector0.add(object0);
      resultMatrixHTML0.m_StdDevPrec = 0;
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixLatex0.clear();
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.338482915902723
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(50, 97);
      resultMatrixSignificance0.getRowName((-724));
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixSignificance0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.0925810816117645
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.globalInfo();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=4.1466243928424635
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.m_PrintRowNames = true;
      resultMatrixLatex0.getVisibleColCount();
      resultMatrixLatex0.clearHeader();
      String[] stringArray0 = new String[6];
      stringArray0[0] = " ";
      stringArray0[1] = ")";
      stringArray0[2] = " ";
      stringArray0[3] = "$\bullet$";
      stringArray0[4] = "(";
      stringArray0[5] = ")";
      ResultMatrixHTML.main(stringArray0);
      resultMatrixLatex0.setMeanWidth(0);
      resultMatrixLatex0.setOptions(stringArray0);
      assertFalse(resultMatrixLatex0.getEnumerateColNames());
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getDefaultStdDevPrec();
      resultMatrixSignificance0.getRevision();
      resultMatrixSignificance0.setColNameWidth(15);
      assertEquals(40, resultMatrixSignificance0.getRowNameWidth());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.651771009105027
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.m_PrintColNames = false;
      String[] stringArray0 = new String[4];
      resultMatrixSignificance0.toArray();
      stringArray0[0] = ")";
      stringArray0[1] = " ";
      stringArray0[2] = "";
      stringArray0[3] = "*";
      resultMatrixSignificance0.m_PrintColNames = false;
      resultMatrixSignificance0.m_RowNames = stringArray0;
      boolean boolean0 = true;
      resultMatrixSignificance0.setPrintRowNames(true);
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.toStringRanking();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.8453316241360445
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getDefaultPrintColNames();
      String[] stringArray0 = resultMatrixHTML0.getOptions();
      assertEquals(1, resultMatrixHTML0.getRowCount());
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      assertEquals(0, resultMatrixPlainText0.getColNameWidth());
      
      resultMatrixPlainText0.setColNameWidth(1);
      resultMatrixPlainText0.getMean(1, 18);
      resultMatrixPlainText0.getSignificance(0, 1382);
      resultMatrixPlainText0.getVisibleColCount();
      resultMatrixPlainText0.setCount((-510), 0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      String[][] stringArray1 = new String[8][0];
      stringArray1[0] = stringArray0;
      stringArray1[1] = stringArray0;
      stringArray1[2] = stringArray0;
      stringArray1[3] = stringArray0;
      stringArray1[4] = stringArray0;
      stringArray1[5] = stringArray0;
      resultMatrixSignificance0.m_MeanWidth = 2;
      stringArray1[6] = stringArray0;
      stringArray1[7] = stringArray0;
      resultMatrixSignificance0.getColSize(stringArray1, 1);
      resultMatrixSignificance0.clear();
      resultMatrixHTML0.getDefaultEnumerateRowNames();
      assertEquals(0, resultMatrixHTML0.getColNameWidth());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=3.5249133401835993
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 0);
      resultMatrixHTML0.m_Wins = null;
      Vector<Object> vector0 = new Vector<Object>();
      int[][] intArray0 = new int[0][7];
      resultMatrixHTML0.m_Wins = intArray0;
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      resultMatrixPlainText0.getMean(18, 1);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      assertEquals(25, resultMatrixLatex0.getRowNameWidth());
      
      resultMatrixLatex0.clear();
      int int0 = resultMatrixPlainText0.getStdDevPrec();
      assertEquals(2, int0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=3.3049644225890256
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 1);
      boolean[] booleanArray0 = new boolean[3];
      resultMatrixCSV0.m_PrintColNames = true;
      booleanArray0[0] = true;
      booleanArray0[1] = true;
      booleanArray0[2] = true;
      resultMatrixCSV0.m_ColHidden = booleanArray0;
      resultMatrixCSV0.toStringSummary();
      resultMatrixCSV0.showAverageTipText();
      resultMatrixCSV0.getRevision();
      resultMatrixCSV0.getStdDevPrec();
      resultMatrixCSV0.setPrintRowNames(false);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      resultMatrixSignificance0.setRowNameWidth(3757);
      resultMatrixSignificance0.globalInfo();
      String[][] stringArray0 = new String[2][7];
      String[] stringArray1 = new String[4];
      stringArray1[0] = "-summary data not set-";
      stringArray1[1] = "*";
      stringArray1[2] = "[";
      stringArray1[3] = "[";
      stringArray0[0] = stringArray1;
      String[] stringArray2 = new String[4];
      stringArray2[0] = "*";
      stringArray2[1] = " ";
      stringArray2[2] = "ae!^E_";
      stringArray2[3] = " ";
      stringArray0[1] = stringArray2;
      int int0 = resultMatrixSignificance0.getColSize(stringArray0, 0);
      assertTrue(resultMatrixCSV0.getEnumerateRowNames());
      assertEquals(22, int0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=3.41341677509456
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(97, 50);
      resultMatrixSignificance0.getRowName(46);
      resultMatrixSignificance0.setRowNameWidth(4235);
      resultMatrixSignificance0.getRevision();
      resultMatrixSignificance0.setColNameWidth(97);
      assertEquals(4235, resultMatrixSignificance0.getRowNameWidth());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=3.553437777540202
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(2, 0);
      Vector<Object> vector0 = new Vector<Object>();
      resultMatrixSignificance0.m_HeaderKeys = vector0;
      resultMatrixSignificance0.m_StdDevWidth = 2;
      resultMatrixSignificance0.setColNameWidth(2);
      resultMatrixSignificance0.getVisibleColCount();
      resultMatrixSignificance0.enumerateRowNamesTipText();
      ResultMatrixHTML resultMatrixHTML0 = null;
      try {
        resultMatrixHTML0 = new ResultMatrixHTML((-1475), 2);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=3.341825268282159
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(10, 10);
      resultMatrixSignificance0.m_PrintRowNames = false;
      resultMatrixSignificance0.LEFT_PARENTHESES = "EGq|!b7EUN%;V:n\"W4";
      resultMatrixSignificance0.setMeanPrec(10);
      assertEquals(10, resultMatrixSignificance0.getMeanPrec());
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.toStringSummary();
      resultMatrixLatex0.getDefaultShowStdDev();
      assertEquals(0, resultMatrixLatex0.getDefaultSignificanceWidth());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=3.2842228217416776
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setMeanPrec((-885));
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(0, resultMatrixPlainText0.getDefaultColNameWidth());
      assertEquals(1, resultMatrixPlainText0.getRowCount());
      assertFalse(resultMatrixPlainText0.getShowStdDev());
      assertEquals(1, resultMatrixPlainText0.getColCount());
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=3.2845658749149194
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(97, 50);
      resultMatrixSignificance0.setSignificanceWidth(50);
      resultMatrixSignificance0.m_MeanWidth = 0;
      resultMatrixSignificance0.getDefaultStdDevPrec();
      resultMatrixSignificance0.getRevision();
      resultMatrixSignificance0.setColNameWidth(0);
      resultMatrixSignificance0.getDefaultShowStdDev();
      assertEquals(50, resultMatrixSignificance0.getSignificanceWidth());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=3.4421948797138358
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.padString("@(V~c$Ao93;bH", 0);
      resultMatrixPlainText0.setShowStdDev(true);
      resultMatrixPlainText0.getMeanPrec();
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.setSize(2, (-513));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=4.070148023435347
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setColNameWidth(496);
      resultMatrixPlainText0.getMean(496, 25);
      resultMatrixPlainText0.getSignificance(0, 496);
      resultMatrixPlainText0.getVisibleColCount();
      resultMatrixPlainText0.setCount(0, 1);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(25, 0);
      resultMatrixSignificance0.setColNameWidth(0);
      resultMatrixSignificance0.WIN_STRING = "pYfIbB$`Z*0gperq";
      resultMatrixPlainText0.getRowHidden((-2461));
      assertEquals(496, resultMatrixPlainText0.getColNameWidth());
      
      String[] stringArray0 = new String[6];
      resultMatrixSignificance0.RIGHT_PARENTHESES = "v";
      stringArray0[1] = "*";
      stringArray0[2] = "*";
      stringArray0[3] = "*";
      stringArray0[4] = "(";
      stringArray0[5] = "*";
      ResultMatrixSignificance.main(stringArray0);
      resultMatrixSignificance0.isAverage(0);
      assertTrue(resultMatrixSignificance0.getPrintRowNames());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=3.4421948797138358
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.m_MeanPrec = 1;
      resultMatrixSignificance0.clearRanking();
      resultMatrixSignificance0.setShowAverage(false);
      resultMatrixSignificance0.setStdDevPrec(0);
      resultMatrixSignificance0.setCountWidth((-244));
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.getColSize((String[][]) null, 26);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=3.399127253907416
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setColNameWidth(496);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      resultMatrixSignificance0.setShowAverage(false);
      resultMatrixSignificance0.setStdDevPrec(3606);
      resultMatrixSignificance0.setCountWidth(5);
      String[][] stringArray0 = new String[2][4];
      String[] stringArray1 = new String[4];
      stringArray1[0] = "*";
      stringArray1[1] = ")";
      stringArray1[2] = " ";
      stringArray1[3] = "(";
      stringArray0[0] = stringArray1;
      String[] stringArray2 = new String[7];
      stringArray2[0] = " ";
      stringArray2[1] = " ";
      stringArray2[2] = "v";
      stringArray2[3] = " ";
      stringArray2[4] = ")";
      stringArray2[5] = "v";
      resultMatrixPlainText0.WIN_STRING = "*";
      stringArray0[1] = stringArray1;
      resultMatrixSignificance0.getColSize(stringArray0, (-2490));
      resultMatrixSignificance0.clear();
      resultMatrixPlainText0.getDefaultCountWidth();
      assertEquals(496, resultMatrixPlainText0.getColNameWidth());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=3.5275184666282287
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      double[][] doubleArray0 = new double[4][6];
      double[] doubleArray1 = new double[3];
      doubleArray1[0] = (double) 0;
      doubleArray1[1] = (double) 2;
      doubleArray1[2] = (double) 0;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[3];
      doubleArray2[0] = (double) 0;
      doubleArray2[1] = (double) 2;
      doubleArray2[2] = (double) 0;
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[0];
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[6];
      doubleArray4[0] = (double) 1;
      doubleArray4[1] = (double) 0;
      doubleArray4[2] = (-2153.2);
      doubleArray4[3] = (double) 1;
      doubleArray4[4] = (double) 2;
      doubleArray4[5] = (double) 0;
      doubleArray0[3] = doubleArray4;
      resultMatrixCSV0.m_Mean = doubleArray0;
      resultMatrixCSV0.setEnumerateRowNames(true);
      resultMatrixCSV0.toStringKey();
      resultMatrixCSV0.doubleToString(2738.5057788397, 95);
      resultMatrixCSV0.setPrintColNames(true);
      resultMatrixCSV0.headerKeys();
      assertTrue(resultMatrixCSV0.getPrintColNames());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=3.674856128334651
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixSignificance0);
      resultMatrixSignificance1.getSignificanceCount(0, 0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixSignificance1.getRowName((-1059));
      String[] stringArray0 = new String[2];
      resultMatrixSignificance1.toArray();
      resultMatrixSignificance1.m_StdDevWidth = 2;
      stringArray0[0] = "(";
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.padString((String) null, 2, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=3.3368898972035774
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 97);
      resultMatrixGnuPlot0.getDefaultRowNameWidth();
      resultMatrixGnuPlot0.getRowHidden(58);
      int int0 = resultMatrixGnuPlot0.getMeanWidth();
      assertEquals(0, int0);
      assertEquals(97, resultMatrixGnuPlot0.getRowCount());
      assertFalse(resultMatrixGnuPlot0.getDefaultRemoveFilterName());
      assertFalse(resultMatrixGnuPlot0.getShowAverage());
      assertFalse(resultMatrixGnuPlot0.getShowStdDev());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultStdDevPrec());
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=3.74699979774171
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getDefaultPrintColNames();
      resultMatrixHTML0.getOptions();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      resultMatrixPlainText0.setColNameWidth(1);
      Object object0 = new Object();
      resultMatrixHTML0.setStdDevWidth(2);
      Vector<Object> vector0 = new Vector<Object>();
      Vector<Integer> vector1 = new Vector<Integer>();
      vector0.add((Object) vector1);
      Object object1 = new Object();
      vector0.add(object1);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      resultMatrixLatex0.clear();
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      
      int int0 = resultMatrixHTML0.getSignificanceWidth();
      assertEquals(2, resultMatrixHTML0.getStdDevWidth());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=4.029842383392944
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getDefaultRowNameWidth();
      resultMatrixPlainText0.padString("", 0);
      resultMatrixPlainText0.getDisplayName();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      resultMatrixLatex0.clear();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "(";
      stringArray0[1] = "$circ$";
      stringArray0[2] = "Plain Text";
      stringArray0[3] = "";
      ResultMatrixPlainText.main(stringArray0);
      assertEquals(4, stringArray0.length);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=4.030116809125753
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.m_EnumerateRowNames = false;
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(1, 1);
      resultMatrixLatex0.assign(resultMatrixLatex1);
      resultMatrixLatex0.m_StdDevPrec = 0;
      ResultMatrixLatex resultMatrixLatex2 = new ResultMatrixLatex(resultMatrixLatex0);
      resultMatrixLatex2.clear();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "(";
      stringArray0[1] = "(";
      stringArray0[2] = "1Qf#@+.ym";
      ResultMatrixPlainText.main(stringArray0);
      assertEquals(3, stringArray0.length);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=4.010248159576114
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      String[] stringArray0 = new String[6];
      ResultMatrixHTML.main(stringArray0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 3953);
      // Undeclared exception!
      try { 
        resultMatrixHTML0.getHeader("\tThe width of the counts (0 = optimal).\n\t(default: ");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
