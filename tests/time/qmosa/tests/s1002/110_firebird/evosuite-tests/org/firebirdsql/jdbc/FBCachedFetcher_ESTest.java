/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 15:24:02 GMT 2019
 */

package org.firebirdsql.jdbc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PipedReader;
import java.util.Comparator;
import java.util.LinkedList;
import java.util.List;
import java.util.concurrent.DelayQueue;
import java.util.concurrent.Delayed;
import java.util.function.Function;
import java.util.function.UnaryOperator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.firebirdsql.gds.XSQLVAR;
import org.firebirdsql.gds.impl.GDSHelper;
import org.firebirdsql.gds.impl.GDSType;
import org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp;
import org.firebirdsql.gds.impl.jni.EmbeddedGDSImpl;
import org.firebirdsql.gds.impl.jni.LocalGDSImpl;
import org.firebirdsql.gds.impl.jni.NativeGDSImpl;
import org.firebirdsql.gds.impl.jni.isc_db_handle_impl;
import org.firebirdsql.gds.impl.jni.isc_tr_handle_impl;
import org.firebirdsql.gds.impl.wire.JavaGDSImpl;
import org.firebirdsql.gds.impl.wire.isc_stmt_handle_impl;
import org.firebirdsql.jca.FBManagedConnectionFactory;
import org.firebirdsql.jdbc.FBCachedFetcher;
import org.firebirdsql.jdbc.FBObjectListener;
import org.firebirdsql.jdbc.FBResultSet;
import org.firebirdsql.jdbc.FBSQLException;
import org.firebirdsql.jdbc.field.FBBlobField;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FBCachedFetcher_ESTest extends FBCachedFetcher_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.7754337976947767
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.iterator();
      byte[][] byteArray0 = new byte[9][6];
      linkedList0.offerFirst(byteArray0);
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      delayQueue0.poll();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      linkedList0.sort(comparator0);
      linkedList0.add(byteArray0);
      linkedList0.add(byteArray0);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.previous();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.604850821076105
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      byte[] byteArray0 = new byte[7];
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byteArray0[0] = (byte)0;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[][] byteArray1 = new byte[2][9];
      byteArray1[0] = byteArray0;
      byteArray1[1] = byteArray0;
      linkedList0.add(byteArray1);
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      linkedList0.add(byteArray1);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.first();
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.next();
      FileSystemHandling.shouldAllThrowIOExceptions();
      UnaryOperator<byte[][]> unaryOperator0 = UnaryOperator.identity();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      linkedList1.replaceAll(unaryOperator0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      fBCachedFetcher0.insertRow(byteArray1);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "I~2GGX\"/-GRC;0xa");
      FBResultSet fBResultSet1 = new FBResultSet(fBResultSet0.xsqlvars, linkedList1);
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.relative((byte)0);
      fBCachedFetcher0.deleteRow();
      assertEquals(2, fBCachedFetcher0.getRowNum());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[] byteArray0 = new byte[7];
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byteArray0[0] = (byte)0;
      byte[][] byteArray1 = new byte[9][5];
      byteArray1[0] = byteArray0;
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      FBObjectListener.FetcherListener fBObjectListener_FetcherListener0 = null;
      FBCachedFetcher fBCachedFetcher0 = null;
      try {
        fBCachedFetcher0 = new FBCachedFetcher((List<byte[][]>) null, (FBObjectListener.FetcherListener) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.1589935598243857
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      byte[] byteArray0 = new byte[7];
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byteArray0[0] = (byte) (-8);
      byte[][] byteArray1 = new byte[9][5];
      byteArray1[0] = byteArray0;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "e2");
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow(byteArray1);
      fBCachedFetcher0.insertRow(fBResultSet0.row);
      fBCachedFetcher0.updateRow(byteArray1);
      assertEquals(1, fBCachedFetcher0.getRowNum());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.537469000913952
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)0;
      byte[][] byteArray1 = new byte[9][5];
      byteArray1[0] = byteArray0;
      byteArray1[1] = byteArray0;
      byteArray1[2] = byteArray0;
      byteArray1[3] = byteArray0;
      byteArray1[4] = byteArray0;
      byteArray1[5] = byteArray0;
      byteArray1[6] = byteArray0;
      byteArray1[7] = byteArray0;
      byteArray1[8] = byteArray0;
      linkedList0.add(byteArray1);
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.previous();
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher1.last();
      fBCachedFetcher1.isLast();
      fBCachedFetcher0.getRowNum();
      fBCachedFetcher1.first();
      assertFalse(fBCachedFetcher1.isBeforeFirst());
      
      fBCachedFetcher1.previous();
      fBCachedFetcher1.isBeforeFirst();
      int int0 = fBCachedFetcher1.getRowNum();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.9935433028254361
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      byte[] byteArray0 = new byte[7];
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "e2");
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      assertFalse(fBCachedFetcher0.isFirst());
      
      fBCachedFetcher0.insertRow((byte[][]) null);
      boolean boolean0 = fBCachedFetcher0.isBeforeFirst();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.474638610887995
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[][] byteArray0 = new byte[9][6];
      byte[][] byteArray1 = new byte[5][5];
      byte[] byteArray2 = new byte[4];
      byteArray2[0] = (byte)52;
      byteArray2[1] = (byte) (-81);
      byteArray2[2] = (byte)0;
      byteArray2[3] = (byte)62;
      byteArray1[0] = byteArray2;
      byte[] byteArray3 = new byte[9];
      byteArray3[0] = (byte)62;
      byteArray3[1] = (byte)52;
      byteArray3[2] = (byte)1;
      byteArray3[3] = (byte)0;
      byteArray3[4] = (byte)52;
      byteArray3[5] = (byte)0;
      byteArray3[6] = (byte)0;
      byteArray3[7] = (byte)52;
      byteArray3[8] = (byte)0;
      byteArray1[1] = byteArray3;
      byte[] byteArray4 = new byte[9];
      byteArray4[0] = (byte)62;
      byteArray4[1] = (byte)1;
      byteArray4[2] = (byte)1;
      byteArray4[3] = (byte) (-81);
      byteArray4[4] = (byte)62;
      byteArray4[5] = (byte)62;
      byteArray4[6] = (byte)1;
      byteArray4[7] = (byte)52;
      byteArray4[8] = (byte)99;
      byteArray1[2] = byteArray4;
      byte[] byteArray5 = new byte[5];
      byteArray5[0] = (byte)0;
      byteArray5[1] = (byte) (-81);
      byteArray5[2] = (byte)1;
      byteArray5[3] = (byte)0;
      byteArray5[4] = (byte)52;
      byteArray1[3] = byteArray5;
      byte[] byteArray6 = new byte[7];
      byteArray6[0] = (byte)62;
      byteArray6[1] = (byte) (-81);
      byteArray6[2] = (byte) (-81);
      byteArray6[3] = (byte)0;
      byteArray6[4] = (byte)0;
      byteArray6[5] = (byte)99;
      byteArray6[6] = (byte)99;
      byteArray1[4] = byteArray6;
      linkedList0.add(byteArray1);
      linkedList0.offerFirst(byteArray0);
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      int int0 = 4263;
      fBCachedFetcher0.relative(4263);
      fBCachedFetcher0.previous();
      int int1 = 151;
      fBCachedFetcher0.next();
      fBCachedFetcher0.absolute(151);
      LocalGDSImpl localGDSImpl0 = null;
      try {
        localGDSImpl0 = new LocalGDSImpl();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.2186555838402073
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[] byteArray0 = new byte[7];
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      delayQueue0.poll();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      Comparator<byte[][]> comparator0 = (Comparator<byte[][]>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      linkedList1.sort(comparator0);
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      LinkedList<byte[][]> linkedList3 = new LinkedList<byte[][]>();
      byte[][] byteArray1 = new byte[1][4];
      byteArray1[0] = byteArray0;
      linkedList3.add(byteArray1);
      LinkedList<byte[][]> linkedList4 = new LinkedList<byte[][]>();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "7VVzg'?");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "qDfR0/q)Zo3U6?m-v");
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList3, (FBObjectListener.FetcherListener) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ";h.\"");
      fBCachedFetcher0.updateRow(byteArray1);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.next();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.4045475597590933
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[][] byteArray0 = new byte[9][6];
      linkedList0.offerFirst(byteArray0);
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.previous();
      fBCachedFetcher0.next();
      fBCachedFetcher0.absolute(151);
      NativeGDSImpl nativeGDSImpl0 = null;
      try {
        nativeGDSImpl0 = new NativeGDSImpl();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.6923460046452914
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[][] byteArray0 = new byte[9][6];
      linkedList0.offerFirst(byteArray0);
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.relative(4263);
      fBCachedFetcher0.previous();
      linkedList0.add(byteArray0);
      fBResultSet0.last();
      fBCachedFetcher0.absolute(2223);
      fBCachedFetcher0.isLast();
      fBCachedFetcher0.getRowNum();
      fBCachedFetcher0.first();
      fBCachedFetcher0.previous();
      boolean boolean0 = fBCachedFetcher0.last();
      assertTrue(fBCachedFetcher0.isFirst());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.5171799770166974
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[][] byteArray0 = new byte[9][6];
      linkedList0.offerFirst(byteArray0);
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.relative(4263);
      fBCachedFetcher0.previous();
      fBResultSet0.last();
      fBCachedFetcher0.next();
      fBCachedFetcher0.isAfterLast();
      int int0 = fBCachedFetcher0.getRowNum();
      assertEquals(2, int0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.5755627899638944
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)0;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      linkedList1.offerFirst((byte[][]) null);
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      delayQueue0.poll();
      delayQueue0.peek();
      linkedList0.remove((Object) null);
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList1, fBResultSet0);
      fBCachedFetcher0.afterLast();
      FBResultSet fBResultSet1 = new FBResultSet(fBResultSet0.xsqlvars, linkedList1);
      fBCachedFetcher0.absolute((-1));
      fBCachedFetcher0.close();
      boolean boolean0 = fBCachedFetcher0.next();
      assertTrue(fBCachedFetcher0.isEmpty());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[9][6];
      linkedList0.offerFirst(byteArray0);
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      delayQueue0.poll();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      linkedList1.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      boolean boolean0 = fBCachedFetcher0.isLast();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[][] byteArray0 = new byte[6][6];
      FileSystemHandling.shouldAllThrowIOExceptions();
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      DelayQueue<Delayed> delayQueue1 = new DelayQueue<Delayed>();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      linkedList0.add(byteArray0);
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "qDfR0/q)Zo3U6?m-v");
      linkedList1.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.setFetchSize(335544811);
      assertEquals(335544811, fBCachedFetcher0.getFetchSize());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.iterator();
      byte[][] byteArray0 = new byte[9][6];
      linkedList0.offerFirst(byteArray0);
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      delayQueue0.poll();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      linkedList1.sort(comparator0);
      linkedList0.add(byteArray0);
      linkedList1.add(byteArray0);
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.isEmpty();
      assertTrue(fBCachedFetcher0.isBeforeFirst());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.149308838833727
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byte[][] byteArray1 = new byte[9][5];
      byteArray1[0] = byteArray0;
      byteArray1[1] = byteArray0;
      byteArray1[2] = byteArray0;
      byteArray1[3] = byteArray0;
      byteArray1[4] = byteArray0;
      byteArray1[5] = byteArray0;
      byteArray1[6] = byteArray0;
      byteArray1[7] = byteArray0;
      byteArray1[8] = byteArray0;
      linkedList0.add(byteArray1);
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.last();
      linkedList0.add(byteArray1);
      fBCachedFetcher0.isAfterLast();
      fBCachedFetcher0.isFirst();
      try { 
        fBResultSet0.wasNull();
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Look at a column before testing null.
         //
         verifyException("org.firebirdsql.jdbc.AbstractResultSet", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.7118240956278306
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[][] byteArray0 = new byte[9][5];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byteArray0[2] = byteArray0[1];
      byteArray0[5] = byteArray0[1];
      linkedList0.add(byteArray0);
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.first();
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.next();
      FileSystemHandling.shouldAllThrowIOExceptions();
      UnaryOperator<byte[][]> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator<Object> unaryOperator1 = UnaryOperator.identity();
      Function<Object, byte[][]> function0 = (Function<Object, byte[][]>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<Object, byte[][]> function1 = unaryOperator1.andThen((Function<? super Object, ? extends byte[][]>) function0);
      unaryOperator0.compose((Function<? super FBBlobField, ? extends byte[][]>) function1);
      linkedList0.replaceAll(unaryOperator0);
      fBCachedFetcher0.previous();
      fBCachedFetcher0.insertRow(byteArray0);
      assertTrue(fBCachedFetcher0.isFirst());
      
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0[2]);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "I~2GGX\"/-GRC;0xa");
      FBResultSet fBResultSet1 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, fBResultSet0);
      boolean boolean0 = fBCachedFetcher1.relative((-1));
      assertTrue(boolean0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.189928083384605
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.getRowNum();
      fBCachedFetcher0.absolute(3398);
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte) (-112);
      fBCachedFetcher0.absolute(3398);
      byte[][] byteArray1 = new byte[8][4];
      byteArray1[0] = byteArray0;
      byteArray1[1] = byteArray0;
      byteArray1[2] = byteArray0;
      byteArray1[3] = byteArray0;
      byteArray1[4] = byteArray0;
      byteArray1[5] = byteArray0;
      byteArray1[6] = byteArray0;
      byteArray1[7] = byteArray0;
      linkedList0.add(byteArray1);
      byte[][] byteArray2 = new byte[6][3];
      byte[] byteArray3 = new byte[1];
      byteArray3[0] = (byte) (-112);
      byteArray2[1] = byteArray0;
      byteArray2[2] = byteArray0;
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher1.last();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl1 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl1.setDeleteCount(3668);
      isc_stmt_handle_impl isc_stmt_handle_impl2 = new isc_stmt_handle_impl();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      boolean boolean0 = fBCachedFetcher0.isEmpty();
      assertTrue(boolean0);
      assertEquals(0, fBCachedFetcher0.getRowNum());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.4841652152843623
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      byte[] byteArray0 = new byte[7];
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "e2");
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.isLast();
      // Undeclared exception!
      try { 
        fBCachedFetcher0.deleteRow();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      byte[] byteArray0 = new byte[7];
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byteArray0[0] = (byte)0;
      byte[][] byteArray1 = new byte[9][5];
      byteArray1[0] = byteArray0;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byteArray1[1] = byteArray0;
      byteArray1[2] = byteArray0;
      byteArray1[3] = byteArray0;
      byteArray1[4] = byteArray0;
      byteArray1[5] = byteArray0;
      byteArray1[6] = byteArray0;
      byteArray1[7] = byteArray0;
      byteArray1[8] = byteArray0;
      linkedList0.add(byteArray1);
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.deleteRow();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.5958019632012976
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.getRowNum();
      fBCachedFetcher0.absolute(3398);
      byte[][] byteArray0 = new byte[4][7];
      byte[] byteArray1 = new byte[4];
      linkedList0.add(byteArray0);
      byteArray1[1] = (byte) (-112);
      fBCachedFetcher0.beforeFirst();
      byteArray1[2] = (byte) (-112);
      byteArray1[3] = (byte)126;
      byteArray0[0] = byteArray1;
      linkedList0.add(byteArray0);
      fBCachedFetcher0.previous();
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.next();
      // Undeclared exception!
      try { 
        fBCachedFetcher1.absolute(336330973);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.87581752666317
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[5][7];
      byte[] byteArray1 = new byte[6];
      byteArray1[0] = (byte)2;
      byteArray1[1] = (byte) (-82);
      byteArray1[2] = (byte)93;
      byteArray1[3] = (byte) (-66);
      byteArray1[4] = (byte) (-18);
      byteArray1[5] = (byte)66;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[2];
      byteArray2[0] = (byte) (-82);
      byteArray2[1] = (byte) (-82);
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[6];
      byteArray3[0] = (byte)66;
      byteArray3[1] = (byte)93;
      byteArray3[2] = (byte) (-66);
      byteArray3[3] = (byte) (-82);
      byteArray3[4] = (byte) (-66);
      byteArray3[5] = (byte) (-18);
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[8];
      byteArray4[0] = (byte)2;
      byteArray4[1] = (byte)93;
      byteArray4[2] = (byte) (-18);
      byteArray4[3] = (byte) (-82);
      byteArray4[4] = (byte) (-66);
      byteArray4[5] = (byte) (-82);
      byteArray4[6] = (byte) (-66);
      byteArray4[7] = (byte)116;
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[3];
      byteArray5[0] = (byte) (-18);
      byteArray5[1] = (byte) (-82);
      byteArray5[2] = (byte)66;
      byteArray0[4] = byteArray5;
      linkedList0.add(byteArray0);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      fBResultSet0.absolute((-2337));
      PipedReader pipedReader0 = null;
      try {
        pipedReader0 = new PipedReader((-2337));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe size <= 0
         //
         verifyException("java.io.PipedReader", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.9913740596968101
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      delayQueue0.poll();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[7][0];
      byte[] byteArray1 = new byte[9];
      byteArray1[0] = (byte)77;
      byteArray1[1] = (byte) (-32);
      byteArray1[2] = (byte) (-2);
      byteArray1[3] = (byte)0;
      byteArray1[4] = (byte)39;
      byteArray1[5] = (byte)68;
      byteArray1[6] = (byte) (-81);
      byteArray1[7] = (byte) (-92);
      byteArray1[8] = (byte) (-57);
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[1];
      byteArray2[0] = (byte)39;
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[8];
      byteArray3[0] = (byte) (-92);
      byteArray3[1] = (byte) (-2);
      byteArray3[2] = (byte)0;
      byteArray3[3] = (byte) (-42);
      byteArray3[4] = (byte)0;
      byteArray3[5] = (byte)0;
      byteArray3[6] = (byte)22;
      byteArray3[7] = (byte)0;
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[6];
      byteArray4[0] = (byte) (-32);
      byteArray4[1] = (byte) (-90);
      byteArray4[2] = (byte) (-32);
      byteArray4[3] = (byte) (-2);
      byteArray4[4] = (byte)22;
      byteArray4[5] = (byte) (-81);
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[2];
      byteArray5[0] = (byte) (-57);
      byteArray5[1] = (byte) (-90);
      byteArray0[4] = byteArray5;
      byte[] byteArray6 = new byte[1];
      byteArray6[0] = (byte)77;
      byteArray0[5] = byteArray6;
      byte[] byteArray7 = new byte[9];
      byteArray7[0] = (byte) (-90);
      byteArray7[1] = (byte) (-92);
      byteArray7[2] = (byte)22;
      byteArray7[3] = (byte)39;
      byteArray7[4] = (byte) (-2);
      byteArray7[5] = (byte) (-32);
      byteArray7[6] = (byte) (-81);
      byteArray7[7] = (byte) (-92);
      byteArray7[8] = (byte) (-32);
      byteArray0[6] = byteArray7;
      linkedList1.add(byteArray0);
      linkedList1.listIterator();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList1, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.relative(15);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.4680117181025363
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBObjectListener.FetcherListener fBObjectListener_FetcherListener0 = null;
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.afterLast();
      byte byte0 = (byte) (-54);
      byte[][] byteArray0 = new byte[0][2];
      GDSType.getType("org.firebirdsql.jdbc.FBCachedFetcher");
      fBCachedFetcher0.isBeforeFirst();
      // Undeclared exception!
      try { 
        fBCachedFetcher0.insertRow(byteArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.474638610887995
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[][] byteArray0 = new byte[9][6];
      linkedList0.offerFirst(byteArray0);
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.relative(4263);
      fBCachedFetcher0.previous();
      fBCachedFetcher0.next();
      fBCachedFetcher0.absolute(151);
      LocalGDSImpl localGDSImpl0 = null;
      try {
        localGDSImpl0 = new LocalGDSImpl();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.881101792408956
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBObjectListener.FetcherListener fBObjectListener_FetcherListener0 = null;
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.getRowNum();
      fBCachedFetcher0.last();
      fBCachedFetcher0.absolute(3398);
      byte[][] byteArray0 = new byte[4][7];
      linkedList0.add(byteArray0);
      GDSType.getType("");
      FBManagedConnectionFactory fBManagedConnectionFactory0 = null;
      try {
        fBManagedConnectionFactory0 = new FBManagedConnectionFactory((GDSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jca.FBManagedConnectionFactory", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.6861175000420947
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.first();
      fBCachedFetcher0.getRowNum();
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.ensureCapacity(1);
      isc_stmt_handle_impl0.ensureCapacity(3);
      isc_stmt_handle_impl0.registerTransaction(isc_tr_handle_impl0);
      isc_tr_handle_impl isc_tr_handle_impl1 = new isc_tr_handle_impl();
      isc_tr_handle_impl1.forgetResultSets();
      isc_tr_handle_impl1.unregisterStatementFromTransaction(isc_stmt_handle_impl0);
      isc_tr_handle_impl0.getDbHandle();
      fBCachedFetcher0.absolute(2);
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher1.isAfterLast();
      fBCachedFetcher0.isFirst();
      fBCachedFetcher0.isAfterLast();
      byte[][] byteArray0 = new byte[2][1];
      byte[] byteArray1 = new byte[2];
      byteArray1[0] = (byte)122;
      byteArray1[1] = (byte)0;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[9];
      byteArray2[0] = (byte)122;
      byteArray2[1] = (byte)0;
      byteArray2[2] = (byte)122;
      fBCachedFetcher1.next();
      fBCachedFetcher1.isAfterLast();
      FileSystemHandling.shouldAllThrowIOExceptions();
      fBCachedFetcher0.previous();
      fBCachedFetcher0.relative((-1162));
      fBCachedFetcher0.first();
      EmbeddedGDSImpl embeddedGDSImpl0 = null;
      try {
        embeddedGDSImpl0 = new EmbeddedGDSImpl();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.795442997257431
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      byte[] byteArray0 = new byte[7];
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byteArray0[0] = (byte)0;
      byte[][] byteArray1 = new byte[9][5];
      byteArray1[0] = byteArray0;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byteArray1[1] = byteArray0;
      byteArray1[2] = byteArray0;
      byteArray1[0] = byteArray0;
      byteArray1[4] = byteArray0;
      byteArray1[5] = byteArray0;
      byteArray1[6] = byteArray0;
      byteArray1[7] = byteArray0;
      byteArray1[8] = byteArray0;
      linkedList0.add(byteArray1);
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.first();
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.next();
      FileSystemHandling.shouldAllThrowIOExceptions();
      UnaryOperator<byte[][]> unaryOperator0 = UnaryOperator.identity();
      Function.identity();
      linkedList0.replaceAll(unaryOperator0);
      fBCachedFetcher0.previous();
      fBCachedFetcher0.insertRow(byteArray1);
      fBCachedFetcher0.relative((byte)0);
      fBCachedFetcher0.first();
      fBCachedFetcher0.getFetchSize();
      EmbeddedGDSImpl embeddedGDSImpl0 = null;
      try {
        embeddedGDSImpl0 = new EmbeddedGDSImpl();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.2623477045221727
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)0;
      byte[][] byteArray1 = new byte[9][5];
      byteArray1[0] = byteArray0;
      byteArray1[1] = byteArray0;
      byteArray1[2] = byteArray0;
      byteArray1[3] = byteArray0;
      byteArray1[4] = byteArray0;
      byteArray1[5] = byteArray0;
      byteArray1[6] = byteArray0;
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.previous();
      fBCachedFetcher0.absolute(151);
      fBCachedFetcher0.close();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl1 = new isc_stmt_handle_impl();
      FBCachedFetcher fBCachedFetcher1 = null;
      try {
        fBCachedFetcher1 = new FBCachedFetcher((GDSHelper) null, (-2996), 1068, isc_stmt_handle_impl1, (FBObjectListener.FetcherListener) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.0650455770932648
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)0;
      byte[][] byteArray1 = new byte[9][5];
      byteArray1[0] = byteArray0;
      byteArray1[1] = byteArray0;
      byteArray1[2] = byteArray0;
      byteArray1[3] = byteArray0;
      byteArray1[4] = byteArray0;
      byteArray1[5] = byteArray0;
      byteArray1[6] = byteArray0;
      byteArray1[7] = byteArray0;
      byteArray1[8] = byteArray0;
      linkedList0.add(byteArray1);
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      boolean boolean0 = fBCachedFetcher0.previous();
      boolean boolean1 = fBCachedFetcher0.relative((byte)0);
      assertTrue(boolean1 == boolean0);
      assertTrue(fBCachedFetcher0.isBeforeFirst());
      assertFalse(boolean1);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.5958019632012976
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.getRowNum();
      fBCachedFetcher0.absolute(3398);
      byte[][] byteArray0 = new byte[4][7];
      byte[] byteArray1 = new byte[4];
      linkedList0.add(byteArray0);
      byteArray1[1] = (byte) (-112);
      fBCachedFetcher0.beforeFirst();
      byteArray1[2] = (byte) (-112);
      byteArray1[3] = (byte) (-69);
      byteArray0[0] = byteArray1;
      linkedList0.add(byteArray0);
      fBCachedFetcher0.previous();
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.next();
      // Undeclared exception!
      try { 
        fBCachedFetcher1.absolute(336330973);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.25362086991901
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBObjectListener.FetcherListener fBObjectListener_FetcherListener0 = null;
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.first();
      fBCachedFetcher0.getRowNum();
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.ensureCapacity(1);
      isc_stmt_handle_impl0.ensureCapacity(3);
      isc_stmt_handle_impl0.registerTransaction(isc_tr_handle_impl0);
      isc_tr_handle_impl isc_tr_handle_impl1 = new isc_tr_handle_impl();
      isc_tr_handle_impl1.forgetResultSets();
      isc_tr_handle_impl1.unregisterStatementFromTransaction(isc_stmt_handle_impl0);
      isc_tr_handle_impl0.getDbHandle();
      fBCachedFetcher0.absolute(2);
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher1.isAfterLast();
      fBCachedFetcher0.isFirst();
      byte[][] byteArray0 = new byte[2][1];
      byte[] byteArray1 = new byte[2];
      byteArray1[1] = (byte)0;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[9];
      byteArray2[1] = (byte)0;
      byteArray2[3] = (byte)0;
      try { 
        fBCachedFetcher1.absolute((byte)0);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // You cannot position to the row 0 with absolute() method.
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.9557135998277697
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      byte[] byteArray0 = new byte[7];
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byteArray0[0] = (byte)0;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[][] byteArray1 = new byte[9][5];
      byteArray1[0] = byteArray0;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "e2");
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.updateRow((byte[][]) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }
}
