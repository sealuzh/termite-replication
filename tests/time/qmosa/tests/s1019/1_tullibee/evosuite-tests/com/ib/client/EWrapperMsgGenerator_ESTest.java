/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 04:33:38 GMT 2019
 */

package com.ib.client;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ib.client.Contract;
import com.ib.client.ContractDetails;
import com.ib.client.EWrapperMsgGenerator;
import com.ib.client.Execution;
import com.ib.client.Order;
import com.ib.client.OrderState;
import com.ib.client.TagValue;
import com.ib.client.UnderComp;
import java.util.Vector;
import java.util.function.Predicate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class EWrapperMsgGenerator_ESTest extends EWrapperMsgGenerator_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.7536544019628768
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      EWrapperMsgGenerator.fundamentalData(0, "MYN.N+qM@)<f7");
      EWrapperMsgGenerator.tickOptionComputation((-2), 13, 0.0, 2735.5137046018053, (-2), 0.0);
      EWrapperMsgGenerator.tickOptionComputation(1, 253, 0, 1, 0.0, 0);
      Vector<Object> vector0 = new Vector<Object>();
      Order order0 = new Order();
      OrderState orderState0 = new OrderState("", "  It does not support secIdType and secId parameters.", "OptionPutOpenInterest", "?SS*!]\"l{", 1864.33, Integer.MAX_VALUE, (-482.229), ",", (String) null);
      orderState0.m_minCommission = (double) 3;
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.6396601391061796
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Vector<Object> vector0 = new Vector<Object>();
      String string0 = EWrapperMsgGenerator.nextValidId(13);
      assertEquals("Next Valid Order ID: 13", string0);
      
      String string1 = EWrapperMsgGenerator.tickOptionComputation(13, 13, 1.7976931348623157E308, 924.8858, 13, 265.04);
      assertEquals("id=13  modelOptComp: vol = N/A delta = N/A: modelPrice = 13.0: pvDividend = 265.04", string1);
      
      Order order0 = new Order();
      String string2 = EWrapperMsgGenerator.tickOptionComputation(0, 13, 1.7976931348623157E308, 'n', (-1370.52978341), 1.7976931348623157E308);
      assertEquals("id=0  modelOptComp: vol = N/A delta = N/A: modelPrice = N/A: pvDividend = N/A", string2);
      
      String string3 = EWrapperMsgGenerator.tickString(2, 2139411615, "{g{azlMj9=l;");
      assertEquals("id=2  unknown={g{azlMj9=l;", string3);
      
      String string4 = EWrapperMsgGenerator.tickGeneric(388, 13, 1648.63475876);
      assertEquals("id=388  modelOptComp=1648.63475876", string4);
      
      String string5 = EWrapperMsgGenerator.tickSnapshotEnd(0);
      assertEquals("id=0 =============== end ===============", string5);
      
      String string6 = EWrapperMsgGenerator.updateMktDepth(0, 388, 3625, 2139411615, (-1790.28007), 0);
      assertEquals("updateMktDepth: 0 388 3625 2139411615 -1790.28007 0", string6);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int int0 = 1728;
      int int1 = 5594;
      EWrapperMsgGenerator.updateMktDepth(1417, (-2753), 1728, 1445, (-2753), 5594);
      double double0 = 1.7976931348623157E308;
      EWrapperMsgGenerator.tickEFP(0, (-2753), 873.2133, "updateMktDepth: 1417 -2753 1728 1445 -2753.0 5594", 1.7976931348623157E308, 37, "updateMktDepth: 1417 -2753 1728 1445 -2753.0 5594", 5594, 1445);
      Contract contract0 = null;
      Execution execution0 = new Execution();
      execution0.m_price = (-1109.3676662594617);
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.execDetails((-2753), (Contract) null, execution0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.964532803443662
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      EWrapperMsgGenerator.realtimeBar(0, (-1L), 0.0, 655.649, 0.0, (-1L), 0L, 1.7976931348623157E308, 0);
      EWrapperMsgGenerator.updateMktDepthL2((-1261), (-1261), ";oJbe", 63, 0, (-1261), 0);
      EWrapperMsgGenerator.updateAccountValue("Error - ", "id=0 time = -1 open=0.0 high=655.649 low=0.0 close=-1.0 volume=0 count=0 WAP=1.7976931348623157E308", "updateMktDepth: -1261 -1261 ;oJbe 63 0 -1261.0 0", (String) null);
      EWrapperMsgGenerator.tickEFP(0, 0, 0.0, "updateAccountValue: Error -  id=0 time = -1 open=0.0 high=655.649 low=0.0 close=-1.0 volume=0 count=0 WAP=1.7976931348623157E308 updateMktDepth: -1261 -1261 ;oJbe 63 0 -1261.0 0 null", 1.7976931348623157E308, 7, (String) null, 0.0, 1.0);
      EWrapperMsgGenerator.tickOptionComputation(0, 63, 0.0, (-1.0), (-1.0), (-1L));
      EWrapperMsgGenerator.tickOptionComputation((-2916), 0, 1035.7637622637, 3555.77389573, (-690.35907585), 1396.2375);
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.contractDetails(0, (ContractDetails) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Vector<Object> vector0 = new Vector<Object>();
      OrderState orderState0 = new OrderState(" maintMargin=", "BAG", "RTVolume", "BAG", 13, 13, 0.0, " maintMargin=", " expiry=");
      Order order0 = new Order();
      Contract contract0 = null;
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.contractMsg((Contract) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Order order0 = new Order();
      OrderState orderState0 = new OrderState(" initMargin=", "{LQD[dH3RuL;N", "ot9H", "minTick = ", 0, Integer.MAX_VALUE, Integer.MAX_VALUE, "minTick = ", (String) null);
      Contract contract0 = new Contract();
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.openOrder(0, contract0, (Order) null, orderState0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Vector<Object> vector0 = new Vector<Object>();
      Vector<Object> vector1 = new Vector<Object>();
      Contract contract0 = new Contract(13, "", "updateAccountTime: Zp;Wv", "updateAccountTime: Zp;Wv", 1214.705, "", (String) null, "", "open order: orderId=", "jbiQ~wMlC^8 *F;!=R", vector0, (String) null, true, " (", " faMethod=");
      Order order0 = new Order();
      String string0 = EWrapperMsgGenerator.tickOptionComputation((-1), 0, Integer.MAX_VALUE, 0, 3075.289, 0);
      assertEquals("id=-1  bidSize: vol = 2.147483647E9 delta = 0.0", string0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Vector<Integer> vector0 = new Vector<Integer>();
      Contract contract0 = new Contract((-355), "H:<C^@f!<a", "H:<C^@f!<a", ">Pz*0Xq.iD`^KyAgW", 1181, "$hnW", "=: ANR", ">Pz*0Xq.iD`^KyAgW", ">Pz*0Xq.iD`^KyAgW", ">Pz*0Xq.iD`^KyAgW", vector0, "=: ANR", true, ">Pz*0Xq.iD`^KyAgW", "%Zd.,5UDo%C+L7bl");
      Order order0 = new Order();
      String string0 = EWrapperMsgGenerator.tickOptionComputation((-1703), 0, 1464.0180495494, 1, Integer.MAX_VALUE, (-919));
      assertEquals("id=-1703  bidSize: vol = 1464.0180495494 delta = 1.0", string0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Vector<Object> vector0 = new Vector<Object>();
      Vector<Object> vector1 = new Vector<Object>();
      Contract contract0 = new Contract();
      ContractDetails contractDetails0 = new ContractDetails(contract0, "lTKB^T_Xm.n", "ND  UL+2hTa.TL3e>mG", (-882.4094159), "j)uGL*(Rt_", "01z", (-1865), " whatIf=", (String) null, (String) null, " maintMargin=", (String) null, "f*7SL1W$, _", "~y[+#q|Y7/&8rB", "S!\b");
      String string0 = EWrapperMsgGenerator.scannerData((-1507), 2570, contractDetails0, "MYN.N+qM@)<f7", (String) null, "&)[^5?)(2H/nD", " discretionaryAmt=");
      assertEquals("id = -1507 rank=2570 symbol=null secType=null expiry=null strike=0.0 right=null exchange=null currency=null localSymbol=null marketName=lTKB^T_Xm.n tradingClass=ND  UL+2hTa.TL3e>mG distance=MYN.N+qM@)<f7 benchmark=null projection=&)[^5?)(2H/nD legsStr= discretionaryAmt=", string0);
      
      String string1 = EWrapperMsgGenerator.contractDetailsEnd(1163);
      assertEquals("reqId = 1163 =============== end ===============", string1);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.fundamentalData(0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      EWrapperMsgGenerator.updateAccountTime("lUR >kW^L");
      EWrapperMsgGenerator.tickGeneric((-3182), (-3182), (-3182));
      EWrapperMsgGenerator.tickEFP((-754), Integer.MAX_VALUE, Integer.MAX_VALUE, ",3\"/AaV", Integer.MAX_VALUE, (-754), "nNRg#Q", (-79.2699074138), (-79.2699074138));
      EWrapperMsgGenerator.updateNewsBulletin(2426, Integer.MAX_VALUE, "updateAccountTime: lUR >kW^L", "id=-3182  unknown=-3182.0");
      EWrapperMsgGenerator.openOrderEnd();
      EWrapperMsgGenerator.updateAccountTime((String) null);
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.updatePortfolio((Contract) null, (-4712), (-433.04168235631), 1.0, (-754), (-1.0), (-1.0), "(F");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.updateNewsBulletin((-1), (-3169), "", "");
      assertEquals("MsgId=-1 :: MsgType=-3169 :: Origin= :: Message=", string0);
      
      Vector<Object> vector0 = new Vector<Object>();
      vector0.clear();
      Contract contract0 = new Contract(3, "com.ib.client.Execution", "com.ib.client.Execution", "MsgId=-1 :: MsgType=-3169 :: Origin= :: Message=", 0, "Q?$", "com.ib.client.Execution", "", "Q?$", "", vector0, "Q?$", true, (String) null, "");
      Execution execution0 = new Execution();
      String string1 = EWrapperMsgGenerator.execDetails(0, contract0, execution0);
      assertEquals(" ---- Execution Details begin ----\nreqId = 0\norderId = 0\nclientId = 0\nsymbol = com.ib.client.Execution\nsecType = com.ib.client.Execution\nexpiry = MsgId=-1 :: MsgType=-3169 :: Origin= :: Message=\nstrike = 0.0\nright = Q?$\ncontractExchange = \ncurrency = Q?$\nlocalSymbol = \nexecId = null\ntime = null\nacctNumber = null\nexecutionExchange = null\nside = null\nshares = 0\nprice = 0.0\npermId = 0\nliquidation = 0\ncumQty = 0\navgPrice = 0.0\n ---- Execution Details end ----\n", string1);
      
      EWrapperMsgGenerator.tickSize(0, 3, 0);
      String string2 = EWrapperMsgGenerator.tickSize(0, 13, (-912));
      assertEquals("id=0  modelOptComp=-912", string2);
      
      ContractDetails contractDetails0 = new ContractDetails(contract0, "com.ib.client.Execution", "com.ib.client.Execution", 0.0, "", "couponType = ", (-1203), "R!\"", "O", "TuJds1t ", (String) null, "", (String) null, "R4ZFeR)@$;Z8q9+/SOY", "");
      String string3 = EWrapperMsgGenerator.scannerData((-1), 0, contractDetails0, "I", "kjASLJWq", " kpO;t[k", "com.ib.client.Execution");
      assertEquals("id = -1 rank=0 symbol=com.ib.client.Execution secType=com.ib.client.Execution expiry=MsgId=-1 :: MsgType=-3169 :: Origin= :: Message= strike=0.0 right=Q?$ exchange= currency=Q?$ localSymbol= marketName=com.ib.client.Execution tradingClass=com.ib.client.Execution distance=I benchmark=kjASLJWq projection= kpO;t[k legsStr=com.ib.client.Execution", string3);
      
      String string4 = EWrapperMsgGenerator.tickGeneric((-1), 799, 0);
      assertEquals("id=-1  unknown=0.0", string4);
      
      String string5 = EWrapperMsgGenerator.scannerData(0, 3, contractDetails0, "", (String) null, "BAG", "\"^sjVVF");
      assertEquals("id = 0 rank=3 symbol=com.ib.client.Execution secType=com.ib.client.Execution expiry=MsgId=-1 :: MsgType=-3169 :: Origin= :: Message= strike=0.0 right=Q?$ exchange= currency=Q?$ localSymbol= marketName=com.ib.client.Execution tradingClass=com.ib.client.Execution distance= benchmark=null projection=BAG legsStr=\"^sjVVF", string5);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Vector<Object> vector0 = new Vector<Object>();
      Contract contract0 = new Contract((-1340), "lUR >kW^L", " (", "open order: orderId=", (-882.4094159), (String) null, "", "lUR >kW^L", "", " (", vector0, (String) null, false, "nNRg#Q", " maintMargin=");
      Order order0 = new Order();
      OrderState orderState0 = new OrderState((String) null, " (", "com.ib.client.AnyWrapperMsgGenerator", "O", 0, 0.0, 0, "", " initMargin=");
      String string0 = EWrapperMsgGenerator.managedAccounts("BAG");
      assertEquals("Connected : The list of managed accounts are : [BAG]", string0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.7787755691845217
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickSize(0, 4223, 1298);
      assertEquals("id=0  unknown=1298", string0);
      
      String string1 = EWrapperMsgGenerator.scannerDataEnd(2812);
      assertEquals("id = 2812 =============== end ===============", string1);
      
      String string2 = EWrapperMsgGenerator.tickPrice((-1203), (-1304), 0.0, 1523);
      assertEquals("id=-1203  unknown=0.0  canAutoExecute", string2);
      
      EWrapperMsgGenerator.openOrderEnd();
      String string3 = EWrapperMsgGenerator.tickString(1298, 1339, "");
      assertEquals("id=1298  unknown=", string3);
      
      Contract contract0 = new Contract();
      Execution execution0 = new Execution();
      String string4 = EWrapperMsgGenerator.execDetails(1298, contract0, execution0);
      assertEquals(" ---- Execution Details begin ----\nreqId = 1298\norderId = 0\nclientId = 0\nsymbol = null\nsecType = null\nexpiry = null\nstrike = 0.0\nright = null\ncontractExchange = null\ncurrency = null\nlocalSymbol = null\nexecId = null\ntime = null\nacctNumber = null\nexecutionExchange = null\nside = null\nshares = 0\nprice = 0.0\npermId = 0\nliquidation = 0\ncumQty = 0\navgPrice = 0.0\n ---- Execution Details end ----\n", string4);
      
      String string5 = EWrapperMsgGenerator.updateMktDepth(490, 340, (-5663), 0, (-5663), 0);
      assertEquals("updateMktDepth: 490 340 -5663 0 -5663.0 0", string5);
      
      execution0.m_execId = "id=1298  unknown=";
      execution0.m_liquidation = (-1072);
      String string6 = EWrapperMsgGenerator.realtimeBar((-1), 0, 0.0, 0, (-2572.9), (-1), 1L, 2812, (-627));
      assertEquals("id=-1 time = 0 open=0.0 high=0.0 low=-2572.9 close=-1.0 volume=1 count=-627 WAP=2812.0", string6);
      
      String string7 = EWrapperMsgGenerator.tickGeneric(0, 3, (-1061.49873));
      assertEquals("id=0  askSize=-1061.49873", string7);
      
      String string8 = EWrapperMsgGenerator.tickEFP(0, 1886, 0, (String) null, 0.0, 0, (String) null, 1523, 0.0);
      assertEquals("id=0  unknown: basisPoints = 0.0/null impliedFuture = 0.0 holdDays = 0 futureExpiry = null dividendImpact = 1523.0 dividends to expiry = 0.0", string8);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickPrice((-1573), (-1573), (-1573), (-1573));
      assertEquals("id=-1573  unknown=-1573.0  canAutoExecute", string0);
      
      String string1 = EWrapperMsgGenerator.updateAccountValue("id=-1573  unknown=-1573.0  canAutoExecute", "id=-1573  unknown=-1573.0  canAutoExecute", "id=-1573  unknown=-1573.0  canAutoExecute", "id=-1573  unknown=-1573.0  canAutoExecute");
      assertEquals("updateAccountValue: id=-1573  unknown=-1573.0  canAutoExecute id=-1573  unknown=-1573.0  canAutoExecute id=-1573  unknown=-1573.0  canAutoExecute id=-1573  unknown=-1573.0  canAutoExecute", string1);
      
      String string2 = EWrapperMsgGenerator.tickPrice((-756), (-2485), (-756), 1);
      assertEquals("id=-756  unknown=-756.0  canAutoExecute", string2);
      
      String string3 = EWrapperMsgGenerator.tickString(35, (-2485), " hasGaps=");
      assertEquals("id=35  unknown= hasGaps=", string3);
      
      String string4 = EWrapperMsgGenerator.tickEFP((-1573), (-339), 35, "  It does not support realtime bar data query cancellation.", 13, 2473, " action=", (-339), (-339));
      assertEquals("id=-1573  unknown: basisPoints = 35.0/  It does not support realtime bar data query cancellation. impliedFuture = 13.0 holdDays = 2473 futureExpiry =  action= dividendImpact = -339.0 dividends to expiry = -339.0", string4);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.402886181440778
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Vector<Object> vector0 = new Vector<Object>();
      Contract contract0 = new Contract(1571, "|3PiE1T&X1F{w9?I!z", "4Fk", "4Fk", 1181, "-'@kube8", "k]sWm", (String) null, "cmU", "gSMr", vector0, "k]sWm", true, "EO", "EO");
      Order order0 = new Order();
      OrderState orderState0 = new OrderState((String) null, "SzJ7pwQ,kJVD5IH", "f*7SL1W$, _", (String) null, 1, 1.0, 659.4, "MTx[&Tv+Q$Kl", (String) null);
      Order order1 = new Order();
      order0.m_minQty = 0;
      orderState0.m_minCommission = (-1330.8842385825);
      orderState0.m_status = null;
      vector0.add((Object) "cmU");
      EWrapperMsgGenerator.openOrder(2143922347, contract0, order1, orderState0);
      Order order2 = new Order();
      order2.m_firmQuoteOnly = false;
      EWrapperMsgGenerator.tickOptionComputation(0, (-2259), 1464.0180495494, 1.7976931348623157E308, 0, (-3409.1121981354063));
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.deltaNeutralValidation(0, (UnderComp) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Vector<Object> vector0 = new Vector<Object>();
      Vector<Object> vector1 = new Vector<Object>();
      Contract contract0 = new Contract(2145509857, " (", " (", " (", (-1340), "lUR >kW^L", "r[c,-1ype:", "", "bidExch", " KYw", vector1, " (", false, " (", "primaryExch = ");
      Order order0 = new Order();
      String string0 = EWrapperMsgGenerator.tickOptionComputation(0, 0, (-1.0), (-1.0), 3, 2613.0);
      assertEquals("id=0  bidSize: vol = N/A delta = -1.0", string0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.833377718721871
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.updateAccountTime("Zp;Wv");
      assertEquals("updateAccountTime: Zp;Wv", string0);
      
      String string1 = EWrapperMsgGenerator.tickOptionComputation(0, 0, (-3122.4964740103), (-3122.4964740103), 0.0, (-3122.4964740103));
      assertEquals("id=0  bidSize: vol = N/A delta = N/A", string1);
      
      String string2 = EWrapperMsgGenerator.tickGeneric(3514, 1343, 509.4216311226511);
      assertEquals("id=3514  unknown=509.4216311226511", string2);
      
      EWrapperMsgGenerator.tickPrice(1343, 3514, (-481.84274147129), 0);
      Contract contract0 = new Contract();
      Order order0 = new Order();
      order0.m_ocaType = 3514;
      order0.m_volatilityType = 0;
      UnderComp underComp0 = new UnderComp();
      contract0.m_underComp = underComp0;
      underComp0.m_delta = 1398.67516;
      OrderState orderState0 = new OrderState("Ph$4Lcj%P]hJQs}jR", (String) null, (String) null, (String) null, 1.7976931348623157E308, 0, 1865.7, "", (String) null);
      orderState0.m_status = null;
      EWrapperMsgGenerator.openOrder((-3690), contract0, order0, orderState0);
      String string3 = EWrapperMsgGenerator.tickPrice((-462), (-106), 0.0, 0);
      assertEquals("id=-462  unknown=0.0  noAutoExecute", string3);
      
      String string4 = EWrapperMsgGenerator.tickOptionComputation(0, (-1852), 0.0, (-1246.8), 0.0, (-1.0));
      assertEquals("id=0  unknown: vol = 0.0 delta = N/A", string4);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Vector<Object> vector0 = new Vector<Object>();
      Vector<Object> vector1 = new Vector<Object>();
      OrderState orderState0 = new OrderState();
      Order order0 = new Order();
      Order order1 = new Order();
      order0.equals((Object) null);
      Order order2 = new Order();
      String string0 = EWrapperMsgGenerator.updateNewsBulletin(Integer.MAX_VALUE, 0, (String) null, "f*7SL1W$, _");
      assertEquals("MsgId=2147483647 :: MsgType=0 :: Origin=f*7SL1W$, _ :: Message=null", string0);
      
      String string1 = EWrapperMsgGenerator.scannerDataEnd(Integer.MAX_VALUE);
      assertEquals("id = 2147483647 =============== end ===============", string1);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.9909065731902369
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Vector<Object> vector0 = new Vector<Object>();
      Contract contract0 = new Contract(1571, "|3PiE1T&X1F{w9?I!z", (String) null, (String) null, 1181, "-'@kube8", (String) null, (String) null, "0mU", "z{9", vector0, (String) null, true, "EO", "EO");
      Order order0 = new Order();
      OrderState orderState0 = new OrderState((String) null, (String) null, "f*7SL1W$, _", (String) null, 1, 1.0, 659.4, "MTx[&Tv+Q$Kl", (String) null);
      Order order1 = new Order();
      order0.m_minQty = 0;
      orderState0.m_minCommission = (-1330.8842385825);
      orderState0.m_status = null;
      vector0.add((Object) "0mU");
      EWrapperMsgGenerator.openOrder(2143922315, contract0, order1, orderState0);
      Order order2 = new Order();
      EWrapperMsgGenerator.openOrder((-1299), contract0, order2, orderState0);
      String string0 = EWrapperMsgGenerator.nextValidId(0);
      assertEquals("Next Valid Order ID: 0", string0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.4572637190629707
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      EWrapperMsgGenerator.tickPrice((-1573), (-1573), (-1573), (-1573));
      String string0 = EWrapperMsgGenerator.tickOptionComputation(13, 13, (-1.0), 1214.705, 0.0, (-1573));
      assertEquals("id=13  modelOptComp: vol = N/A delta = N/A: modelPrice = 0.0: pvDividend = N/A", string0);
      
      String string1 = EWrapperMsgGenerator.tickPrice((-756), (-2485), (-756), 1);
      assertEquals("id=-756  unknown=-756.0  canAutoExecute", string1);
      
      String string2 = EWrapperMsgGenerator.tickString(35, (-2485), " hasGaps=");
      assertEquals("id=35  unknown= hasGaps=", string2);
      
      String string3 = EWrapperMsgGenerator.orderStatus((-756), "high", (-886), 35, (-790.312), 5, (-191), 5, (-1483), "F8Bp$fo/tK$ *m|S$5");
      assertEquals("order status: orderId=-756 clientId=-1483 permId=5 status=high filled=-886 remaining=35 avgFillPrice=-790.312 lastFillPrice=5.0 parent Id=-191 whyHeld=F8Bp$fo/tK$ *m|S$5", string3);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Vector<TagValue> vector0 = new Vector<TagValue>();
      Contract contract0 = new Contract(99, "ie$6,T $3TxR+`N@", (String) null, "ie$6,T $3TxR+`N@", 1, (String) null, "g0xzNn@C", (String) null, (String) null, "SW%M3+/ (:F+T:vd$", vector0, "ie$6,T $3TxR+`N@", false, "&Km[IRsRP", (String) null);
      TagValue tagValue0 = new TagValue();
      contract0.m_conId = 99;
      vector0.add(tagValue0);
      ContractDetails contractDetails0 = new ContractDetails(contract0, "l4ssRw", "?>Hdc=AXk5C'.+zR[", 0.0, "ie$6,T $3TxR+`N@", (String) null, 1, "g0xzNn@C", (String) null, (String) null, "&Km[IRsRP", "", "\n", "ie$6,T $3TxR+`N@", "");
      EWrapperMsgGenerator.contractDetails(1, contractDetails0);
      EWrapperMsgGenerator eWrapperMsgGenerator0 = new EWrapperMsgGenerator();
      assertEquals(" =============== end ===============", eWrapperMsgGenerator0.openOrderEnd());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.orderStatus((-2144012125), "BAG", (-1681), (-2144012125), (-1681), 0, 270, 1.0, 0, ":{Q*");
      assertEquals("order status: orderId=-2144012125 clientId=0 permId=0 status=BAG filled=-1681 remaining=-2144012125 avgFillPrice=-1681.0 lastFillPrice=1.0 parent Id=270 whyHeld=:{Q*", string0);
      
      String string1 = EWrapperMsgGenerator.updateMktDepthL2((-1124), 1062, "OptionImpliedVolatility", (-2144012125), 270, 1648.63475876, 10);
      assertEquals("updateMktDepth: -1124 1062 OptionImpliedVolatility -2144012125 270 1648.63475876 10", string1);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Vector<Object> vector0 = new Vector<Object>();
      Vector<Object> vector1 = new Vector<Object>();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) "");
      Predicate<Object> predicate1 = predicate0.or(predicate0);
      Predicate<Object> predicate2 = predicate1.negate();
      Predicate<Object> predicate3 = predicate2.and(predicate0);
      vector1.removeIf(predicate3);
      Vector<Object> vector2 = new Vector<Object>();
      vector2.add((Object) " (");
      vector1.add((Object) vector2);
      Contract contract0 = new Contract(2145161757, "H:<C^@f!<a", " maintMargin=", "f*7SL1W$, _", 2145161757, "", (String) null, "9 a}e['z%h%M}?A8b!b", (String) null, " (", vector1, "accountDownloadEnd: Zp;Wv", false, "H:<C^@f!<a", " maintMargin=");
      Order order0 = new Order();
      String string0 = EWrapperMsgGenerator.tickOptionComputation(1693, 10, 1.7976931348623157E308, 1.7976931348623157E308, (-4119.38888789376), 2145161757);
      assertEquals("id=1693  bidOptComp: vol = N/A delta = N/A", string0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      UnderComp underComp0 = new UnderComp();
      underComp0.m_price = 1.0038573256;
      String string0 = EWrapperMsgGenerator.deltaNeutralValidation((-4744), underComp0);
      assertEquals("id = -4744 underComp.conId =0 underComp.delta =0.0 underComp.price =1.0038573256", string0);
      
      String string1 = EWrapperMsgGenerator.updateAccountTime("id = -4744 underComp.conId =0 underComp.delta =0.0 underComp.price =1.0038573256");
      assertEquals("updateAccountTime: id = -4744 underComp.conId =0 underComp.delta =0.0 underComp.price =1.0038573256", string1);
      
      String string2 = EWrapperMsgGenerator.tickEFP((-4744), 0, 0.0, "id = -4744 underComp.conId =0 underComp.delta =0.0 underComp.price =1.0038573256", 1382.9851405655706, 0, "updateAccountTime: id = -4744 underComp.conId =0 underComp.delta =0.0 underComp.price =1.0038573256", 0, 0);
      assertEquals("id=-4744  bidSize: basisPoints = 0.0/id = -4744 underComp.conId =0 underComp.delta =0.0 underComp.price =1.0038573256 impliedFuture = 1382.9851405655706 holdDays = 0 futureExpiry = updateAccountTime: id = -4744 underComp.conId =0 underComp.delta =0.0 underComp.price =1.0038573256 dividendImpact = 0.0 dividends to expiry = 0.0", string2);
      
      String string3 = EWrapperMsgGenerator.fundamentalData(0, "id=-4744  bidSize: basisPoints = 0.0/id = -4744 underComp.conId =0 underComp.delta =0.0 underComp.price =1.0038573256 impliedFuture = 1382.9851405655706 holdDays = 0 futureExpiry = updateAccountTime: id = -4744 underComp.conId =0 underComp.delta =0.0 underComp.price =1.0038573256 dividendImpact = 0.0 dividends to expiry = 0.0");
      assertEquals("id  = 0 len = 327\nid=-4744  bidSize: basisPoints = 0.0/id = -4744 underComp.conId =0 underComp.delta =0.0 underComp.price =1.0038573256 impliedFuture = 1382.9851405655706 holdDays = 0 futureExpiry = updateAccountTime: id = -4744 underComp.conId =0 underComp.delta =0.0 underComp.price =1.0038573256 dividendImpact = 0.0 dividends to expiry = 0.0", string3);
      
      String string4 = EWrapperMsgGenerator.tickPrice(0, 0, 0.0, 0);
      assertEquals("id=0  bidSize=0.0  noAutoExecute", string4);
      
      String string5 = EWrapperMsgGenerator.scannerDataEnd(0);
      assertEquals("id = 0 =============== end ===============", string5);
      
      String string6 = EWrapperMsgGenerator.tickEFP(0, (-4744), 0.0, "id  = 0 len = 327\nid=-4744  bidSize: basisPoints = 0.0/id = -4744 underComp.conId =0 underComp.delta =0.0 underComp.price =1.0038573256 impliedFuture = 1382.9851405655706 holdDays = 0 futureExpiry = updateAccountTime: id = -4744 underComp.conId =0 underComp.delta =0.0 underComp.price =1.0038573256 dividendImpact = 0.0 dividends to expiry = 0.0", 0.0, 110, "4TGxS aX<CY", 0.0, 0.0);
      assertEquals("id=0  unknown: basisPoints = 0.0/id  = 0 len = 327\nid=-4744  bidSize: basisPoints = 0.0/id = -4744 underComp.conId =0 underComp.delta =0.0 underComp.price =1.0038573256 impliedFuture = 1382.9851405655706 holdDays = 0 futureExpiry = updateAccountTime: id = -4744 underComp.conId =0 underComp.delta =0.0 underComp.price =1.0038573256 dividendImpact = 0.0 dividends to expiry = 0.0 impliedFuture = 0.0 holdDays = 110 futureExpiry = 4TGxS aX<CY dividendImpact = 0.0 dividends to expiry = 0.0", string6);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.394993443200781
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickPrice((-1573), (-1573), (-1573), (-1573));
      assertEquals("id=-1573  unknown=-1573.0  canAutoExecute", string0);
      
      String string1 = EWrapperMsgGenerator.tickOptionComputation(13, 13, 13, 1214.705, 0.0, (-1573));
      assertEquals("id=13  modelOptComp: vol = 13.0 delta = N/A: modelPrice = 0.0: pvDividend = N/A", string1);
      
      String string2 = EWrapperMsgGenerator.tickPrice((-756), (-2485), (-756), 1);
      assertEquals("id=-756  unknown=-756.0  canAutoExecute", string2);
      
      String string3 = EWrapperMsgGenerator.tickString(35, (-2485), " hasGaps=");
      assertEquals("id=35  unknown= hasGaps=", string3);
      
      String string4 = EWrapperMsgGenerator.currentTime(2857L);
      assertEquals("current time = 2857 (Jan 1, 1970 12:47:37 AM)", string4);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.nextValidId(1606);
      assertEquals("Next Valid Order ID: 1606", string0);
      
      String string1 = EWrapperMsgGenerator.scannerDataEnd(0);
      assertEquals("id = 0 =============== end ===============", string1);
      
      String string2 = EWrapperMsgGenerator.orderStatus(2198, (String) null, 1606, (-324), (-324), (-324), 2146704113, 0, 1606, "lastSize");
      assertEquals("order status: orderId=2198 clientId=1606 permId=-324 status=null filled=1606 remaining=-324 avgFillPrice=-324.0 lastFillPrice=0.0 parent Id=2146704113 whyHeld=lastSize", string2);
      
      String string3 = EWrapperMsgGenerator.accountDownloadEnd("BAG");
      assertEquals("accountDownloadEnd: BAG", string3);
      
      String string4 = EWrapperMsgGenerator.scannerParameters("BAG");
      assertEquals("SCANNER PARAMETERS:\nBAG", string4);
      
      String string5 = EWrapperMsgGenerator.contractDetailsEnd(2198);
      assertEquals("reqId = 2198 =============== end ===============", string5);
      
      String string6 = EWrapperMsgGenerator.fundamentalData((-3516), " hasGaps=");
      assertEquals("id  = -3516 len = 9\n hasGaps=", string6);
      
      String string7 = EWrapperMsgGenerator.execDetailsEnd(0);
      assertEquals("reqId = 0 =============== end ===============", string7);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Vector<Object> vector0 = new Vector<Object>();
      Vector<Object> vector1 = new Vector<Object>();
      Vector<String> vector2 = new Vector<String>();
      Vector<TagValue> vector3 = new Vector<TagValue>();
      String string0 = EWrapperMsgGenerator.historicalData(354, "", (-2388.28152481), 1073741824, 2866.375826088, 2145715742, 2145715742, 33, 1727.3040417394238, false);
      assertEquals("id=354 date =  open=-2388.28152481 high=1.073741824E9 low=2866.375826088 close=2.145715742E9 volume=2145715742 count=33 WAP=1727.3040417394238 hasGaps=false", string0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.scannerDataEnd(0);
      assertEquals("id = 0 =============== end ===============", string0);
      
      String string1 = EWrapperMsgGenerator.fundamentalData(333, "id = 0 =============== end ===============");
      assertEquals("id  = 333 len = 42\nid = 0 =============== end ===============", string1);
      
      String string2 = EWrapperMsgGenerator.tickSize((-1598), (-1598), (-2336));
      assertEquals("id=-1598  unknown=-2336", string2);
      
      String string3 = EWrapperMsgGenerator.tickSnapshotEnd((-1598));
      assertEquals("id=-1598 =============== end ===============", string3);
      
      String string4 = EWrapperMsgGenerator.scannerParameters(":7BL;GiXci:.*(DiSH");
      assertEquals("SCANNER PARAMETERS:\n:7BL;GiXci:.*(DiSH", string4);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Vector<TagValue> vector0 = new Vector<TagValue>();
      Contract contract0 = new Contract(0, "", "BOND", "`N;o/'Dm'[e`!r", 949.33491312947, "BOND", "OR b5[-?", "OR b5[-?", "BOND", "", vector0, " filled=", false, "\"t|ads/}9HhKG:", "p");
      String string0 = EWrapperMsgGenerator.contractMsg(contract0);
      assertEquals("conid = 0\nsymbol = \nsecType = BOND\nexpiry = `N;o/'Dm'[e`!r\nstrike = 949.33491312947\nright = BOND\nmultiplier = OR b5[-?\nexchange = OR b5[-?\nprimaryExch =  filled=\ncurrency = BOND\nlocalSymbol = \n", string0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.5981863871455346
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Vector<Object> vector0 = new Vector<Object>();
      Order order0 = new Order();
      String string0 = EWrapperMsgGenerator.tickOptionComputation('b', 0, 1.7976931348623157E308, 1.7976931348623157E308, 595.9853707546197, Integer.MAX_VALUE);
      assertEquals("id=98  bidSize: vol = N/A delta = N/A", string0);
      
      String string1 = EWrapperMsgGenerator.updateNewsBulletin(1, (-1726031376), "(!z(O+Xp^", "+Fd6)<K6\"WI");
      assertEquals("MsgId=1 :: MsgType=-1726031376 :: Origin=+Fd6)<K6\"WI :: Message=(!z(O+Xp^", string1);
      
      Contract contract0 = new Contract(2940, (String) null, (String) null, "com.ib.client.ContractDetails", 1.7976931348623157E308, "aKi8xAM9k?`2Ev", "{+*L8.cf6R-v/_9mQp", (String) null, "YGZ8+`$dao6F0|P}", (String) null, (Vector) null, "", false, " symbol=", "tradingHours = ");
      String string2 = EWrapperMsgGenerator.updatePortfolio(contract0, (-516), Integer.MAX_VALUE, 574.79032144, 0.0, (-1557.1), 10.0, (String) null);
      assertEquals("updatePortfolio: conid = 2940\nsymbol = null\nsecType = null\nexpiry = com.ib.client.ContractDetails\nstrike = 1.7976931348623157E308\nright = aKi8xAM9k?`2Ev\nmultiplier = {+*L8.cf6R-v/_9mQp\nexchange = null\nprimaryExch = \ncurrency = YGZ8+`$dao6F0|P}\nlocalSymbol = null\n-516 2.147483647E9 574.79032144 0.0 -1557.1 10.0 null", string2);
      assertNotNull(string2);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.7519596907867663
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      EWrapperMsgGenerator.tickPrice((-1573), (-1573), (-1573), (-1573));
      String string0 = EWrapperMsgGenerator.tickOptionComputation((-170), 13, 2182.0, 0.0, 2182.0, 1.7976931348623157E308);
      assertEquals("id=-170  modelOptComp: vol = 2182.0 delta = 0.0: modelPrice = 2182.0: pvDividend = N/A", string0);
      
      String string1 = EWrapperMsgGenerator.tickPrice(36, (-1573), (-1206.5), 13);
      assertEquals("id=36  unknown=-1206.5  canAutoExecute", string1);
      
      String string2 = EWrapperMsgGenerator.tickString((-121), 36, "sJLqST");
      assertEquals("id=-121  auctionImbalance=sJLqST", string2);
      
      String string3 = EWrapperMsgGenerator.tickGeneric(36, (-121), 36);
      assertEquals("id=36  unknown=36.0", string3);
      
      String string4 = EWrapperMsgGenerator.tickSnapshotEnd((-121));
      assertEquals("id=-121 =============== end ===============", string4);
      
      String string5 = EWrapperMsgGenerator.updateMktDepth((-1573), 1734, (-1883), (-121), (-1573), 13);
      assertEquals("updateMktDepth: -1573 1734 -1883 -121 -1573.0 13", string5);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Vector<Integer> vector0 = new Vector<Integer>();
      Contract contract0 = new Contract((-355), "H:<C^@f!<a", "H:<C^@f!<a", ">Pz*0Xq.iD`^KyAgW", 1181, "$hnW", "=: ANR", ">Pz*0Xq.iD`^KyAgW", ">Pz*0Xq.iD`^KyAgW", ">Pz*0Xq.iD`^KyAgW", vector0, "=: ANR", true, ">Pz*0Xq.iD`^KyAgW", "%Zd.,5UDo%C+L7bl");
      Contract contract1 = new Contract((-919), ">z #G_y+eX/c", " algoParams={", "%Zd.,5UDo%C+L7bl", (-1.0), "H:<C^@f!<a", "P|VWguah.s5*", ">Pz*0Xq.iD`^KyAgW", "Next Valid Order ID: 300", "Next Valid Order ID: 300", contract0.m_comboLegs, "`i 3%HuEC/", false, "", "=: ANR");
      OrderState orderState0 = new OrderState();
      Order order0 = new Order();
      order0.m_parentId = 1181;
      String string0 = EWrapperMsgGenerator.realtimeBar(0, 0L, 1.7976931348623157E308, (-3162.42262), 1.0, 0, 1, 1181, 69);
      assertEquals("id=0 time = 0 open=1.7976931348623157E308 high=-3162.42262 low=1.0 close=0.0 volume=1 count=69 WAP=1181.0", string0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.receiveFA((-1120), ".|W@~Tv.M:67_'h24");
      assertEquals("FA: null .|W@~Tv.M:67_'h24", string0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Vector<Object> vector0 = new Vector<Object>();
      Vector<String> vector1 = new Vector<String>();
      Contract contract0 = new Contract((-1231), "7=V(ZW1r", "y1lp|aV1/<|y0o[M2lz", (String) null, (-1350.8300366422), (String) null, " (", "-H-Qv}6ic", "wE.Sr!1wvF.+mb6", " maintMargin=", vector0, "Y\"", true, "-H-Qv}6ic", "f*7SL1W$, _");
      Execution execution0 = new Execution();
      String string0 = EWrapperMsgGenerator.execDetails((-1798), contract0, execution0);
      assertEquals(" ---- Execution Details begin ----\nreqId = -1798\norderId = 0\nclientId = 0\nsymbol = 7=V(ZW1r\nsecType = y1lp|aV1/<|y0o[M2lz\nexpiry = null\nstrike = -1350.8300366422\nright = null\ncontractExchange = -H-Qv}6ic\ncurrency = wE.Sr!1wvF.+mb6\nlocalSymbol =  maintMargin=\nexecId = null\ntime = null\nacctNumber = null\nexecutionExchange = null\nside = null\nshares = 0\nprice = 0.0\npermId = 0\nliquidation = 0\ncumQty = 0\navgPrice = 0.0\n ---- Execution Details end ----\n", string0);
      
      contract0.m_primaryExch = "F<\rDmbdGV;b#Yp";
      ContractDetails contractDetails0 = new ContractDetails(contract0, "Ls", (String) null, (-1350.8300366422), "com.ib.client.TagValue", "7=V(ZW1r", 0, "-H-Qv}6ic", "  It does not support current time requests.", (String) null, (String) null, "updateAccountTime: Z;Wv", "01z", "j4EE5p)", "F<\rDmbdGV;b#Yp");
      String string1 = EWrapperMsgGenerator.bondContractDetails(0, contractDetails0);
      assertEquals("reqId = 0 ===================================\n ---- Bond Contract Details begin ----\nsymbol = 7=V(ZW1r\nsecType = y1lp|aV1/<|y0o[M2lz\ncusip = null\ncoupon = 0.0\nmaturity = null\nissueDate = null\nratings = null\nbondType = null\ncouponType = null\nconvertible = false\ncallable = false\nputable = false\ndescAppend = null\nexchange = -H-Qv}6ic\ncurrency = wE.Sr!1wvF.+mb6\nmarketName = Ls\ntradingClass = null\nconid = -1231\nminTick = -1350.8300366422\norderTypes = com.ib.client.TagValue\nvalidExchanges = 7=V(ZW1r\nnextOptionDate = null\nnextOptionType = null\nnextOptionPartial = false\nnotes = null\nlongName = -H-Qv}6ic\n ---- Bond Contract Details End ----\n", string1);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.5719579500515657
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickSize((-1), (-1), (-1));
      assertEquals("id=-1  unknown=-1", string0);
      
      System.setCurrentTimeMillis(4191L);
      String string1 = EWrapperMsgGenerator.fundamentalData(8, "id=-1  unknown=-1");
      assertEquals("id  = 8 len = 17\nid=-1  unknown=-1", string1);
      
      String string2 = EWrapperMsgGenerator.updateAccountValue("id=-603  bidSize: vol = 0.0 delta = N/A", "id=-603  bidSize: vol = 0.0 delta = N/A", "F\"W", "F");
      assertEquals("updateAccountValue: id=-603  bidSize: vol = 0.0 delta = N/A id=-603  bidSize: vol = 0.0 delta = N/A F\"W F", string2);
      
      String string3 = EWrapperMsgGenerator.updateAccountTime("updateAccountValue: id=-603  bidSize: vol = 0.0 delta = N/A id=-603  bidSize: vol = 0.0 delta = N/A F\"W F");
      assertEquals("updateAccountTime: updateAccountValue: id=-603  bidSize: vol = 0.0 delta = N/A id=-603  bidSize: vol = 0.0 delta = N/A F\"W F", string3);
      
      System.setCurrentTimeMillis((-631L));
      String string4 = EWrapperMsgGenerator.tickSnapshotEnd(10);
      assertEquals("id=10 =============== end ===============", string4);
      
      String string5 = EWrapperMsgGenerator.scannerDataEnd(3351);
      assertEquals("id = 3351 =============== end ===============", string5);
      
      String string6 = EWrapperMsgGenerator.tickOptionComputation((-1), (-1235), (-1), (-2428.8470125442864), 10, 4191L);
      assertEquals("id=-1  unknown: vol = N/A delta = N/A", string6);
      
      String string7 = EWrapperMsgGenerator.tickString((-1235), 1823, ",");
      assertEquals("id=-1235  unknown=,", string7);
      
      String string8 = EWrapperMsgGenerator.updateMktDepthL2(10, (-1073741824), "Y\"", (-1235), 3351, (-1573.0), 1544);
      assertEquals("updateMktDepth: 10 -1073741824 Y\" -1235 3351 -1573.0 1544", string8);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.updateAccountTime("Zp;Wv");
      assertEquals("updateAccountTime: Zp;Wv", string0);
      
      String string1 = EWrapperMsgGenerator.fundamentalData(0, "updateAccountTime: Zp;Wv");
      assertEquals("id  = 0 len = 24\nupdateAccountTime: Zp;Wv", string1);
      
      String string2 = EWrapperMsgGenerator.currentTime((-3002L));
      assertEquals("current time = -3002 (Dec 31, 1969 11:09:58 PM)", string2);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.updateAccountValue("nHii Ku", "4TGxS aX<CY", "nHii Ku", "4TGxS aX<CY");
      assertEquals("updateAccountValue: nHii Ku 4TGxS aX<CY nHii Ku 4TGxS aX<CY", string0);
      
      String string1 = EWrapperMsgGenerator.tickGeneric(110, 2146912964, 110);
      assertEquals("id=110  unknown=110.0", string1);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Vector<Object> vector0 = new Vector<Object>();
      Vector<Object> vector1 = new Vector<Object>();
      Vector<Object> vector2 = new Vector<Object>();
      vector2.add((Object) " (");
      vector2.add((Object) " (");
      vector1.add((Object) vector2);
      Contract contract0 = new Contract();
      Order order0 = new Order();
      order0.m_origin = 2145161757;
      OrderState orderState0 = new OrderState();
      orderState0.m_status = "updateAccountTime: Z;Wv";
      EWrapperMsgGenerator.openOrder((-1), contract0, order0, orderState0);
      String string0 = EWrapperMsgGenerator.openOrderEnd();
      assertEquals(" =============== end ===============", string0);
  }
}
