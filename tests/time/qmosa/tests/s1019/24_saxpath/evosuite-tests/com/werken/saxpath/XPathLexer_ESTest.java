/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 03:59:04 GMT 2019
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.8863509623899937
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lra^#");
      xPathLexer0.identifier();
      xPathLexer0.dots();
      xPathLexer0.dots();
      xPathLexer0.div();
      xPathLexer0.consume((-2161));
      xPathLexer0.setXPath("com.werken.saxpath.Token");
      xPathLexer0.comma();
      xPathLexer0.setXPath("lra^#");
      xPathLexer0.plus();
      xPathLexer0.leftBracket();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.equals();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.colon();
      xPathLexer2.mod();
      xPathLexer0.div();
      XPathLexer xPathLexer3 = new XPathLexer("lra^#");
      xPathLexer3.leftParen();
      xPathLexer1.leftBracket();
      xPathLexer1.star();
      xPathLexer2.leftParen();
      xPathLexer2.not();
      xPathLexer3.nextToken();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.1859962466939296
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.comma();
      assertEquals(32, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      
      Token token3 = xPathLexer0.literal();
      assertNotNull(token3);
      assertEquals("werken", token3.getTokenText());
      assertEquals(27, token3.getTokenType());
      
      xPathLexer0.consume();
      Token token4 = xPathLexer0.not();
      assertEquals("a", token4.getTokenText());
      assertEquals(23, token4.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.setXPath("wJ");
      Token token5 = xPathLexer1.colon();
      assertEquals("w", token5.getTokenText());
      
      xPathLexer1.or();
      Token token6 = xPathLexer0.number();
      assertEquals(30, token6.getTokenType());
      assertEquals("", token6.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("$UX");
      Token token7 = xPathLexer2.nextToken();
      assertEquals("$", token7.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.rightParen();
      Token token8 = xPathLexer3.dollar();
      assertEquals(26, token8.getTokenType());
      
      Token token9 = xPathLexer0.identifier();
      assertEquals(15, token9.getTokenType());
      assertEquals("xpath.XPathLexer", token9.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer("wJ");
      xPathLexer4.doubleColon();
      Token token10 = xPathLexer4.colon();
      assertEquals(18, token10.getTokenType());
      
      Token token11 = xPathLexer0.notEquals();
      assertEquals(22, token11.getTokenType());
      
      Token token12 = xPathLexer2.doubleColon();
      assertEquals("UX", token12.getTokenText());
      
      xPathLexer2.doubleColon();
      Token token13 = xPathLexer0.doubleColon();
      assertEquals(19, token13.getTokenType());
      
      Token token14 = xPathLexer4.rightParen();
      assertEquals(2, token14.getTokenType());
      
      xPathLexer0.operatorName();
      Token token15 = xPathLexer3.dots();
      assertEquals(13, token15.getTokenType());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.7882743747895253
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lra^#");
      xPathLexer0.identifier();
      xPathLexer0.dots();
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("#", token0.getTokenText());
      
      xPathLexer0.div();
      xPathLexer0.consume((-2161));
      xPathLexer0.setXPath("com.werken.saxpath.Token");
      Token token1 = xPathLexer0.comma();
      assertEquals("c", token1.getTokenText());
      assertEquals(32, token1.getTokenType());
      
      Token token2 = xPathLexer0.plus();
      assertEquals(5, token2.getTokenType());
      assertEquals("o", token2.getTokenText());
      
      Token token3 = xPathLexer0.whitespace();
      assertEquals((-2), token3.getTokenType());
      assertEquals("", token3.getTokenText());
      
      Token token4 = xPathLexer0.leftBracket();
      assertEquals(3, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("werken.saxpath.Token", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
      
      xPathLexer0.slashes();
      Token token6 = xPathLexer0.minus();
      assertEquals(6, token6.getTokenType());
      
      Token token7 = xPathLexer0.slashes();
      assertEquals(11, token7.getTokenType());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.5209814755497724
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.at();
      assertEquals("c", token0.getTokenText());
      assertEquals(16, token0.getTokenType());
      
      Token token1 = xPathLexer0.pipe();
      assertEquals("o", token1.getTokenText());
      assertEquals(17, token1.getTokenType());
      
      Token token2 = xPathLexer0.dots();
      assertEquals("m.", token2.getTokenText());
      assertEquals(14, token2.getTokenType());
      
      Token token3 = xPathLexer0.dots();
      assertEquals(13, token3.getTokenType());
      
      xPathLexer0.div();
      xPathLexer0.setXPath("=]l1XG4z}r;1");
      Token token4 = xPathLexer0.comma();
      assertEquals(32, token4.getTokenType());
      assertEquals("=", token4.getTokenText());
      
      xPathLexer0.setXPath("com.werken.saxpath.Token");
      Token token5 = xPathLexer0.plus();
      assertEquals(5, token5.getTokenType());
      assertEquals("c", token5.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.Token");
      Token token6 = xPathLexer1.leftBracket();
      assertEquals("c", token6.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.equals();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token7 = xPathLexer3.colon();
      assertEquals(18, token7.getTokenType());
      
      xPathLexer1.mod();
      xPathLexer0.div();
      XPathLexer xPathLexer4 = new XPathLexer("com.werken.saxpath.Token");
      Token token8 = xPathLexer3.literal();
      assertNull(token8);
      
      Token token9 = xPathLexer4.equals();
      assertEquals(21, token9.getTokenType());
      assertEquals("c", token9.getTokenText());
      
      xPathLexer3.leftParen();
      Token token10 = xPathLexer3.leftBracket();
      assertEquals(3, token10.getTokenType());
      
      xPathLexer4.whitespace();
      xPathLexer4.star();
      Token token11 = xPathLexer0.identifier();
      assertEquals(15, token11.getTokenType());
      assertEquals("m.werken.saxpath.Token", token11.getTokenText());
      
      Token token12 = xPathLexer4.leftParen();
      assertEquals(1, token12.getTokenType());
      assertEquals(".", token12.getTokenText());
      
      Token token13 = xPathLexer2.not();
      assertEquals(23, token13.getTokenType());
      
      Token token14 = xPathLexer1.star();
      assertEquals(20, token14.getTokenType());
      assertEquals("o", token14.getTokenText());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.8815881007905801
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dH3RuL;N#zC");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      assertEquals("d", token0.getTokenText());
      
      xPathLexer0.leftBracket();
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
      
      Token token3 = xPathLexer0.pipe();
      assertEquals(17, token3.getTokenType());
      assertEquals("u", token3.getTokenText());
      
      xPathLexer0.identifier();
      xPathLexer0.consume((-2161));
      Token token4 = xPathLexer0.comma();
      assertEquals(32, token4.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.setXPath("dH3RuL;N#zC");
      Token token5 = xPathLexer1.plus();
      assertEquals("d", token5.getTokenText());
      
      xPathLexer0.leftParen();
      Token token6 = xPathLexer1.nextToken();
      assertEquals("H3RuL", token6.getTokenText());
      assertEquals(15, token6.getTokenType());
      
      xPathLexer1.literal();
      xPathLexer0.consume((-2161));
      Token token7 = xPathLexer0.doubleColon();
      assertEquals(19, token7.getTokenType());
      
      Token token8 = xPathLexer1.literal();
      assertNull(token8);
      
      Token token9 = xPathLexer0.equals();
      assertEquals(21, token9.getTokenType());
      
      xPathLexer1.or();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token10 = xPathLexer1.star();
      assertEquals(20, token10.getTokenType());
      
      Token token11 = xPathLexer2.dollar();
      assertEquals(26, token11.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token12 = xPathLexer1.plus();
      assertEquals(5, token12.getTokenType());
      
      Token token13 = xPathLexer3.minus();
      assertEquals(6, token13.getTokenType());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.162126186127177
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lra^#");
      xPathLexer0.identifier();
      xPathLexer0.dots();
      xPathLexer0.dots();
      xPathLexer0.div();
      int int0 = (-2161);
      xPathLexer0.consume((-2161));
      xPathLexer0.plus();
      xPathLexer0.leftParen();
      // Undeclared exception!
      try { 
        xPathLexer0.nextToken();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.2074328675631363
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dH3RuL;N#zC");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("d", token0.getTokenText());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals("H", token1.getTokenText());
      
      Token token2 = xPathLexer0.at();
      assertEquals("3", token2.getTokenText());
      assertEquals(16, token2.getTokenType());
      
      Token token3 = xPathLexer0.pipe();
      assertEquals(17, token3.getTokenType());
      assertEquals("R", token3.getTokenText());
      
      xPathLexer0.identifier();
      xPathLexer0.or();
      Token token4 = xPathLexer0.comma();
      assertEquals(";", token4.getTokenText());
      assertEquals(32, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("N", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
      
      xPathLexer0.literal();
      xPathLexer0.identifier();
      Token token6 = xPathLexer0.star();
      assertEquals(20, token6.getTokenType());
      
      Token token7 = xPathLexer0.rightBracket();
      assertEquals(4, token7.getTokenType());
      
      xPathLexer0.leftBracket();
      xPathLexer0.minus();
      xPathLexer0.consume();
      xPathLexer0.div();
      xPathLexer0.setXPath("com.werken.saxpath.XPathLexer");
      xPathLexer0.plus();
      Token token8 = xPathLexer0.leftParen();
      assertEquals("o", token8.getTokenText());
      
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("dH3RuL;N#zC");
      Token token9 = xPathLexer1.plus();
      assertEquals("d", token9.getTokenText());
      assertEquals(5, token9.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token10 = xPathLexer2.whitespace();
      assertEquals((-2), token10.getTokenType());
      
      Token token11 = xPathLexer2.leftBracket();
      assertEquals(3, token11.getTokenType());
      
      xPathLexer0.nextToken();
      xPathLexer2.slashes();
      Token token12 = xPathLexer1.minus();
      assertEquals("H", token12.getTokenText());
      assertEquals(6, token12.getTokenType());
      
      Token token13 = xPathLexer2.slashes();
      assertEquals(11, token13.getTokenType());
      
      Token token14 = xPathLexer0.not();
      assertEquals(23, token14.getTokenType());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.7823402134122026
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.mod();
      xPathLexer0.rightParen();
      xPathLexer0.operatorName();
      xPathLexer0.literal();
      xPathLexer0.nextToken();
      xPathLexer0.at();
      xPathLexer0.consume();
      xPathLexer0.leftParen();
      xPathLexer0.consume(30);
      xPathLexer0.setXPath("com.werken.saxpath.XPathLexer");
      xPathLexer0.comma();
      xPathLexer0.whitespace();
      xPathLexer0.setXPath("w`dNg");
      xPathLexer0.operatorName();
      xPathLexer0.colon();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.consume((-27));
      xPathLexer1.notEquals();
      // Undeclared exception!
      try { 
        xPathLexer1.identifierOrOperatorName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.7429664662479365
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dH3RuL;N#zC");
      xPathLexer0.leftBracket();
      xPathLexer0.leftBracket();
      xPathLexer0.at();
      xPathLexer0.pipe();
      xPathLexer0.identifier();
      xPathLexer0.or();
      xPathLexer0.comma();
      xPathLexer0.nextToken();
      xPathLexer0.literal();
      xPathLexer0.leftParen();
      xPathLexer0.consume(89);
      xPathLexer0.setXPath("~:iF*>!O]Qv,k}vD");
      xPathLexer0.comma();
      xPathLexer0.setXPath("~:iF*>!O]Qv,k}vD");
      xPathLexer0.plus();
      xPathLexer0.leftParen();
      xPathLexer0.nextToken();
      xPathLexer0.literal();
      XPathLexer xPathLexer1 = new XPathLexer(" np7U#a%.y");
      xPathLexer1.consume((-585));
      xPathLexer1.doubleColon();
      xPathLexer0.literal();
      XPathLexer xPathLexer2 = new XPathLexer("dH3RuL;N#zC");
      // Undeclared exception!
      try { 
        xPathLexer1.mod();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.0003576981442257
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.mod();
      xPathLexer0.comma();
      xPathLexer0.operatorName();
      xPathLexer0.literal();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      
      xPathLexer0.consume();
      xPathLexer0.leftParen();
      xPathLexer0.consume(30);
      xPathLexer0.setXPath("com.werken.saxpath.XPathLexer");
      Token token2 = xPathLexer0.comma();
      assertEquals(32, token2.getTokenType());
      assertEquals("c", token2.getTokenText());
      
      xPathLexer0.setXPath(" np7U#a%.y");
      Token token3 = xPathLexer0.plus();
      assertEquals(5, token3.getTokenType());
      assertEquals(" ", token3.getTokenText());
      
      xPathLexer0.or();
      xPathLexer0.nextToken();
      xPathLexer0.literal();
      xPathLexer0.consume(30);
      Token token4 = xPathLexer0.doubleColon();
      assertEquals(19, token4.getTokenType());
      
      xPathLexer0.literal();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer0.mod();
      Token token5 = xPathLexer1.equals();
      assertEquals(21, token5.getTokenType());
      
      xPathLexer0.or();
      Token token6 = xPathLexer0.star();
      assertEquals(20, token6.getTokenType());
      
      Token token7 = xPathLexer0.minus();
      assertEquals(6, token7.getTokenType());
      
      boolean boolean0 = xPathLexer1.hasMoreChars();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.658774581573982
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lra^#");
      xPathLexer0.identifier();
      xPathLexer0.dots();
      xPathLexer0.dots();
      xPathLexer0.div();
      xPathLexer0.consume((-2161));
      xPathLexer0.comma();
      xPathLexer0.setXPath(" ^BZJt=cyO8v6");
      xPathLexer0.plus();
      xPathLexer0.leftParen();
      xPathLexer0.nextToken();
      xPathLexer0.literal();
      xPathLexer0.consume((-2161));
      xPathLexer0.doubleColon();
      // Undeclared exception!
      try { 
        xPathLexer0.literal();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.7351730196530308
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lra^#");
      xPathLexer0.identifier();
      xPathLexer0.dots();
      Token token0 = xPathLexer0.dots();
      assertEquals("#", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      xPathLexer0.div();
      xPathLexer0.consume((-2161));
      xPathLexer0.setXPath("com.werken.saxpath.Token");
      Token token1 = xPathLexer0.comma();
      assertEquals("c", token1.getTokenText());
      assertEquals(32, token1.getTokenType());
      
      xPathLexer0.setXPath("lra^#");
      Token token2 = xPathLexer0.plus();
      assertEquals(5, token2.getTokenType());
      
      Token token3 = xPathLexer0.leftBracket();
      assertEquals("r", token3.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token4 = xPathLexer1.equals();
      assertEquals(21, token4.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("lra^#");
      Token token5 = xPathLexer2.colon();
      assertEquals("l", token5.getTokenText());
      assertEquals(18, token5.getTokenType());
      
      xPathLexer2.mod();
      xPathLexer0.div();
      XPathLexer xPathLexer3 = new XPathLexer("lra^#");
      Token token6 = xPathLexer3.leftParen();
      assertEquals("l", token6.getTokenText());
      
      Token token7 = xPathLexer1.leftBracket();
      assertEquals(3, token7.getTokenType());
      
      Token token8 = xPathLexer1.star();
      assertEquals(20, token8.getTokenType());
      
      Token token9 = xPathLexer2.leftParen();
      assertEquals(1, token9.getTokenType());
      
      Token token10 = xPathLexer2.not();
      assertEquals(23, token10.getTokenType());
      
      Token token11 = xPathLexer3.nextToken();
      assertEquals("ra", token11.getTokenText());
      assertEquals(15, token11.getTokenType());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.4866322396915352
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lra^#");
      XPathLexer xPathLexer1 = new XPathLexer("");
      XPathLexer xPathLexer2 = new XPathLexer(") (");
      XPathLexer xPathLexer3 = new XPathLexer("e!}uQ`;xTqMwJQZ");
      Token token0 = xPathLexer1.slashes();
      assertEquals(11, token0.getTokenType());
      
      Token token1 = xPathLexer1.literal();
      assertNull(token1);
      
      Token token2 = xPathLexer1.whitespace();
      assertEquals((-2), token2.getTokenType());
      
      Token token3 = xPathLexer2.leftBracket();
      assertEquals(3, token3.getTokenType());
      assertEquals(")", token3.getTokenText());
      
      Token token4 = xPathLexer3.nextToken();
      assertEquals("e", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.6916452680234766
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.identifier();
      xPathLexer0.dots();
      xPathLexer1.dots();
      XPathLexer xPathLexer2 = new XPathLexer("7ubXSQXv");
      xPathLexer2.div();
      xPathLexer1.consume((-2161));
      xPathLexer1.setXPath("ye`xP;R B");
      xPathLexer0.comma();
      xPathLexer2.setXPath("");
      xPathLexer0.plus();
      xPathLexer2.leftParen();
      xPathLexer0.nextToken();
      xPathLexer2.literal();
      xPathLexer2.consume((-2161));
      xPathLexer1.doubleColon();
      xPathLexer1.literal();
      xPathLexer0.equals();
      // Undeclared exception!
      try { 
        xPathLexer2.or();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.8479629401537758
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ykw{L1aqh?}#P9;l");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.comma();
      assertEquals("Y", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.operatorName();
      xPathLexer1.literal();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.at();
      assertEquals("{", token2.getTokenText());
      assertEquals(16, token2.getTokenType());
      
      xPathLexer1.consume();
      xPathLexer1.leftParen();
      xPathLexer0.consume(62);
      xPathLexer0.setXPath("Ykw{L1aqh?}#P9;l");
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token3 = xPathLexer2.comma();
      assertEquals(32, token3.getTokenType());
      
      xPathLexer0.setXPath("5");
      Token token4 = xPathLexer0.plus();
      assertEquals(5, token4.getTokenType());
      assertEquals("5", token4.getTokenText());
      
      xPathLexer1.leftParen();
      Token token5 = xPathLexer2.nextToken();
      assertEquals((-1), token5.getTokenType());
      
      xPathLexer2.literal();
      XPathLexer xPathLexer3 = new XPathLexer("]t25");
      xPathLexer3.consume(110);
      Token token6 = xPathLexer1.doubleColon();
      assertEquals(19, token6.getTokenType());
      
      Token token7 = xPathLexer2.literal();
      assertNull(token7);
      
      XPathLexer xPathLexer4 = new XPathLexer("");
      xPathLexer4.mod();
      Token token8 = xPathLexer3.equals();
      assertEquals(21, token8.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.or();
      Token token9 = xPathLexer1.star();
      assertEquals(20, token9.getTokenType());
      
      Token token10 = xPathLexer4.minus();
      assertEquals(6, token10.getTokenType());
      
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.1529364579418435
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dH3RuL;N#zC");
      xPathLexer0.leftBracket();
      xPathLexer0.leftBracket();
      xPathLexer0.at();
      xPathLexer0.pipe();
      xPathLexer0.identifier();
      xPathLexer0.or();
      xPathLexer0.comma();
      xPathLexer0.nextToken();
      xPathLexer0.literal();
      xPathLexer0.identifier();
      xPathLexer0.rightBracket();
      xPathLexer0.star();
      xPathLexer0.rightBracket();
      xPathLexer0.leftBracket();
      xPathLexer0.minus();
      xPathLexer0.consume();
      xPathLexer0.div();
      xPathLexer0.whitespace();
      xPathLexer0.setXPath("dH3RuL;N#zC");
      xPathLexer0.operatorName();
      xPathLexer0.colon();
      xPathLexer0.consume((-2982));
      xPathLexer0.notEquals();
      // Undeclared exception!
      try { 
        xPathLexer0.identifierOrOperatorName();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.355965423340695
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lra^#");
      xPathLexer0.identifier();
      xPathLexer0.dots();
      xPathLexer0.dots();
      xPathLexer0.div();
      xPathLexer0.leftBracket();
      xPathLexer0.consume((-2161));
      xPathLexer0.setXPath("com.werken.saxpath.Token");
      xPathLexer0.comma();
      xPathLexer0.setXPath("lra^#");
      xPathLexer0.plus();
      xPathLexer0.leftParen();
      xPathLexer0.dots();
      xPathLexer0.literal();
      xPathLexer0.consume((-2161));
      xPathLexer0.doubleColon();
      // Undeclared exception!
      try { 
        xPathLexer0.slashes();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.6237488917781322
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lra^#");
      Token token0 = xPathLexer0.identifier();
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.dots();
      assertEquals("^", token1.getTokenText());
      
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      
      xPathLexer0.div();
      xPathLexer0.consume((-2161));
      xPathLexer0.setXPath("com.werken.saxpath.Token");
      Token token3 = xPathLexer0.comma();
      assertEquals("c", token3.getTokenText());
      
      xPathLexer0.setXPath("lra^#");
      Token token4 = xPathLexer0.plus();
      assertEquals(5, token4.getTokenType());
      assertEquals("l", token4.getTokenText());
      
      Token token5 = xPathLexer0.whitespace();
      assertEquals((-2), token5.getTokenType());
      
      Token token6 = xPathLexer0.leftBracket();
      assertEquals("a", token6.getTokenText());
      
      Token token7 = xPathLexer0.nextToken();
      assertEquals("^#", token7.getTokenText());
      
      Token token8 = xPathLexer0.slashes();
      assertEquals(11, token8.getTokenType());
      assertEquals("^", token8.getTokenText());
      
      char char0 = xPathLexer0.LA(755);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.3762253463732415
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      XPathLexer xPathLexer1 = new XPathLexer(") (");
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token0 = xPathLexer2.slashes();
      assertEquals(11, token0.getTokenType());
      
      Token token1 = xPathLexer0.literal();
      assertNull(token1);
      
      xPathLexer2.whitespace();
      Token token2 = xPathLexer1.leftBracket();
      assertEquals(3, token2.getTokenType());
      assertEquals(")", token2.getTokenText());
      
      Token token3 = xPathLexer1.nextToken();
      assertEquals(1, token3.getTokenType());
      assertEquals("(", token3.getTokenText());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.113664304538534
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s,#$X7taZVO/'i");
      Token token0 = xPathLexer0.equals();
      assertEquals(21, token0.getTokenType());
      assertEquals("s", token0.getTokenText());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.literal();
      assertNull(token1);
      
      xPathLexer0.dollar();
      xPathLexer0.setXPath("H[i_dD/9)#4j}gr");
      xPathLexer0.setXPath("s,#$X7taZVO/'i");
      Token token2 = xPathLexer0.minus();
      assertEquals(6, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(",", token3.getTokenText());
      assertEquals(32, token3.getTokenType());
      
      xPathLexer0.setXPath("");
      xPathLexer0.star();
      Token token4 = xPathLexer0.nextToken();
      assertEquals((-1), token4.getTokenType());
      
      xPathLexer0.setXPath("");
      xPathLexer0.colon();
      xPathLexer0.or();
      Token token5 = xPathLexer0.number();
      assertEquals(30, token5.getTokenType());
      
      xPathLexer0.nextToken();
      Token token6 = xPathLexer0.rightParen();
      assertEquals(2, token6.getTokenType());
      
      Token token7 = xPathLexer0.dollar();
      assertEquals(26, token7.getTokenType());
      
      Token token8 = xPathLexer0.identifier();
      assertEquals(15, token8.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.relationalOperator();
      xPathLexer1.colon();
      Token token9 = xPathLexer1.notEquals();
      assertEquals(22, token9.getTokenType());
      
      xPathLexer1.doubleColon();
      xPathLexer0.doubleColon();
      Token token10 = xPathLexer0.doubleColon();
      assertEquals(19, token10.getTokenType());
      
      Token token11 = xPathLexer1.star();
      assertEquals(20, token11.getTokenType());
      
      xPathLexer1.relationalOperator();
      xPathLexer0.operatorName();
      Token token12 = xPathLexer0.dots();
      assertEquals(13, token12.getTokenType());
      
      Token token13 = xPathLexer1.colon();
      assertEquals(18, token13.getTokenType());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.0415473317579007
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.dots();
      assertEquals("c", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.literal();
      Token token1 = xPathLexer0.nextToken();
      assertEquals((-1), token1.getTokenType());
      
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
      
      xPathLexer0.consume();
      xPathLexer0.leftParen();
      xPathLexer0.consume(116);
      xPathLexer0.setXPath("com.werken.saxpath.XPathLexer");
      Token token3 = xPathLexer0.comma();
      assertEquals("c", token3.getTokenText());
      assertEquals(32, token3.getTokenType());
      
      xPathLexer0.setXPath(" np7U#a%.y");
      Token token4 = xPathLexer0.plus();
      assertEquals(5, token4.getTokenType());
      assertEquals(" ", token4.getTokenText());
      
      Token token5 = xPathLexer0.leftParen();
      assertEquals("n", token5.getTokenText());
      assertEquals(1, token5.getTokenType());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals("p7U#a%.y", token6.getTokenText());
      
      Token token7 = new Token(116, "com.werken.saxpath.XPathLexer", 116, 116);
      xPathLexer0.consume(116);
      Token token8 = xPathLexer0.doubleColon();
      assertEquals(19, token8.getTokenType());
      
      xPathLexer0.literal();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer0.mod();
      Token token9 = xPathLexer1.equals();
      assertEquals(21, token9.getTokenType());
      
      xPathLexer0.or();
      Token token10 = xPathLexer0.star();
      assertEquals(20, token10.getTokenType());
      
      Token token11 = xPathLexer0.minus();
      assertEquals(6, token11.getTokenType());
      
      boolean boolean0 = xPathLexer1.hasMoreChars();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.246993719735255
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.whitespace();
      xPathLexer0.plus();
      xPathLexer0.whitespace();
      xPathLexer0.pipe();
      xPathLexer0.and();
      xPathLexer0.leftBracket();
      xPathLexer0.equals();
      xPathLexer0.equals();
      xPathLexer0.doubleColon();
      xPathLexer0.consume((-297));
      // Undeclared exception!
      try { 
        xPathLexer0.relationalOperator();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.503228189415947
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.identifier();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      Token token1 = xPathLexer0.identifier();
      assertEquals(15, token1.getTokenType());
      
      xPathLexer0.div();
      xPathLexer0.nextToken();
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      
      xPathLexer0.consume(0);
      xPathLexer0.consume((-1));
      xPathLexer0.setXPath("y:[n=VM0Yx");
      Token token3 = xPathLexer0.number();
      assertEquals(30, token3.getTokenType());
      
      xPathLexer0.currentPosition();
      Token token4 = xPathLexer0.leftParen();
      assertEquals(1, token4.getTokenType());
      assertEquals("y", token4.getTokenText());
      
      Token token5 = xPathLexer0.leftBracket();
      assertEquals(":", token5.getTokenText());
      assertEquals(3, token5.getTokenType());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.3547252911284193
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ykw{L1aqh?}#P9;l");
      xPathLexer0.number();
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      
      xPathLexer0.rightBracket();
      xPathLexer0.comma();
      xPathLexer0.setXPath("Ykw{L1aqh?}#P9;l");
      xPathLexer0.and();
      xPathLexer0.mod();
      Token token1 = xPathLexer0.minus();
      assertEquals("Y", token1.getTokenText());
      assertEquals(6, token1.getTokenType());
      
      Token token2 = xPathLexer0.leftParen();
      assertEquals("k", token2.getTokenText());
      assertEquals(1, token2.getTokenType());
      
      Token token3 = xPathLexer0.comma();
      assertEquals("w", token3.getTokenText());
      assertEquals(32, token3.getTokenType());
      
      xPathLexer0.and();
      Token token4 = xPathLexer0.nextToken();
      assertEquals((-1), token4.getTokenType());
      
      xPathLexer0.rightParen();
      Token token5 = xPathLexer0.whitespace();
      assertEquals((-2), token5.getTokenType());
      
      Token token6 = xPathLexer0.number();
      assertEquals(30, token6.getTokenType());
      
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token7 = xPathLexer0.rightParen();
      assertEquals("a", token7.getTokenText());
      assertEquals(2, token7.getTokenType());
      
      Token token8 = xPathLexer0.dollar();
      assertEquals(26, token8.getTokenType());
      assertEquals("q", token8.getTokenText());
      
      Token token9 = xPathLexer0.identifier();
      assertEquals(15, token9.getTokenType());
      
      xPathLexer1.doubleColon();
      Token token10 = xPathLexer1.colon();
      assertEquals(18, token10.getTokenType());
      
      Token token11 = xPathLexer1.notEquals();
      assertEquals(22, token11.getTokenType());
      
      xPathLexer0.doubleColon();
      xPathLexer0.doubleColon();
      Token token12 = xPathLexer0.doubleColon();
      assertEquals(19, token12.getTokenType());
      assertEquals("9;", token12.getTokenText());
      
      Token token13 = xPathLexer1.star();
      assertEquals(20, token13.getTokenType());
      
      xPathLexer1.operatorName();
      Token token14 = xPathLexer0.dots();
      assertEquals("l", token14.getTokenText());
      assertEquals(13, token14.getTokenType());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.3852171187209072
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.comma();
      xPathLexer0.colon();
      xPathLexer0.star();
      xPathLexer0.or();
      xPathLexer0.doubleColon();
      xPathLexer0.getPreviousToken();
      xPathLexer0.div();
      xPathLexer0.hasMoreChars();
      xPathLexer0.consume((-2589));
      xPathLexer0.not();
      // Undeclared exception!
      try { 
        xPathLexer0.relationalOperator();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.2641594508078065
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.dollar();
      assertEquals(26, token0.getTokenType());
      
      Token token1 = xPathLexer0.minus();
      assertEquals(6, token1.getTokenType());
      
      Token token2 = xPathLexer0.doubleColon();
      assertEquals(19, token2.getTokenType());
      
      Token token3 = xPathLexer0.at();
      assertEquals(16, token3.getTokenType());
      
      Token token4 = xPathLexer0.rightParen();
      assertEquals(2, token4.getTokenType());
      
      Token token5 = xPathLexer0.dots();
      assertEquals(13, token5.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.div();
      Token token6 = xPathLexer0.star();
      assertEquals(20, token6.getTokenType());
      
      Token token7 = xPathLexer0.colon();
      assertEquals(18, token7.getTokenType());
      
      Token token8 = xPathLexer0.plus();
      assertEquals(5, token8.getTokenType());
      
      xPathLexer0.getPreviousToken();
      boolean boolean0 = xPathLexer0.isIdentifierChar('{');
      assertFalse(boolean0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.389956602770413
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.mod();
      xPathLexer0.comma();
      xPathLexer0.operatorName();
      xPathLexer0.literal();
      xPathLexer0.nextToken();
      xPathLexer0.at();
      xPathLexer0.consume();
      xPathLexer0.whitespace();
      xPathLexer0.not();
      xPathLexer0.not();
      xPathLexer0.setXPath("");
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.star();
      xPathLexer1.nextToken();
      xPathLexer0.setXPath("com.werken.saxpath.XPathLexer");
      xPathLexer1.colon();
      xPathLexer1.or();
      xPathLexer1.number();
      xPathLexer0.nextToken();
      xPathLexer1.rightParen();
      xPathLexer0.dollar();
      xPathLexer0.identifier();
      xPathLexer0.relationalOperator();
      xPathLexer0.dollar();
      xPathLexer1.colon();
      xPathLexer1.notEquals();
      xPathLexer0.doubleColon();
      xPathLexer1.not();
      xPathLexer1.doubleColon();
      xPathLexer1.doubleColon();
      xPathLexer1.star();
      xPathLexer0.operatorName();
      xPathLexer1.dots();
      boolean boolean0 = xPathLexer1.isIdentifierChar('D');
      assertTrue(boolean0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.4892166646242595
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s,#$X7taZVO/'i");
      Token token0 = xPathLexer0.equals();
      assertEquals(21, token0.getTokenType());
      assertEquals("s", token0.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals("", token1.getTokenText());
      assertNotNull(token1);
      
      Token token2 = xPathLexer0.literal();
      assertNull(token2);
      
      Token token3 = xPathLexer0.doubleColon();
      assertEquals(19, token3.getTokenType());
      
      Token token4 = xPathLexer0.whitespace();
      assertEquals((-2), token4.getTokenType());
      assertEquals("", token4.getTokenText());
      
      boolean boolean0 = xPathLexer0.isIdentifierChar('4');
      Token token5 = xPathLexer0.colon();
      assertEquals(18, token5.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.consume(1314);
      xPathLexer0.pipe();
      Token token6 = xPathLexer0.pipe();
      assertEquals(17, token6.getTokenType());
      
      Token token7 = xPathLexer0.comma();
      assertEquals(32, token7.getTokenType());
      
      xPathLexer0.identifier();
      xPathLexer0.setXPath("");
      Token token8 = xPathLexer0.notEquals();
      assertEquals(22, token8.getTokenType());
      
      Token token9 = xPathLexer0.identifier();
      assertEquals(15, token9.getTokenType());
      
      boolean boolean1 = xPathLexer0.hasMoreChars();
      assertFalse(boolean1 == boolean0);
      
      xPathLexer0.getXPath();
      Token token10 = xPathLexer0.rightBracket();
      assertEquals(4, token10.getTokenType());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.0612997224250416
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      assertEquals(") ", token0.getTokenText());
      
      xPathLexer0.or();
      xPathLexer0.mod();
      Token token1 = xPathLexer0.pipe();
      assertEquals(17, token1.getTokenType());
      assertEquals("(", token1.getTokenText());
      
      Token token2 = xPathLexer0.doubleColon();
      assertEquals(19, token2.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.setXPath("");
      Token token3 = xPathLexer0.at();
      assertEquals(16, token3.getTokenType());
      
      xPathLexer0.endPosition();
      Token token4 = xPathLexer0.star();
      assertEquals(20, token4.getTokenType());
      
      xPathLexer0.setXPath(") (");
      Token token5 = xPathLexer0.whitespace();
      assertEquals((-2), token5.getTokenType());
      
      Token token6 = xPathLexer0.equals();
      assertEquals("(", token6.getTokenText());
      assertEquals(21, token6.getTokenType());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ur");
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=3.1756340700274026
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(",phg0Of/&Yzm_NI(A");
      Token token0 = xPathLexer0.pipe();
      assertEquals(",", token0.getTokenText());
      
      xPathLexer0.literal();
      xPathLexer0.star();
      xPathLexer0.identifier();
      xPathLexer0.or();
      Token token1 = xPathLexer0.plus();
      assertEquals(5, token1.getTokenType());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      
      Token token3 = xPathLexer0.notEquals();
      assertEquals(22, token3.getTokenType());
      
      Token token4 = xPathLexer0.identifier();
      assertEquals(15, token4.getTokenType());
      
      Token token5 = xPathLexer0.number();
      assertEquals(30, token5.getTokenType());
      
      xPathLexer0.equals();
      Token token6 = xPathLexer0.at();
      assertEquals(16, token6.getTokenType());
      
      Token token7 = xPathLexer0.pipe();
      assertEquals(17, token7.getTokenType());
      
      Token token8 = xPathLexer0.leftParen();
      assertEquals(1, token8.getTokenType());
      
      Token token9 = xPathLexer0.leftBracket();
      assertEquals(3, token9.getTokenType());
      
      xPathLexer0.mod();
      Token token10 = xPathLexer0.comma();
      assertEquals(32, token10.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer(",phg0Of/&Yzm_NI(A");
      xPathLexer1.literal();
      Token token11 = xPathLexer0.equals();
      assertEquals(21, token11.getTokenType());
      
      xPathLexer0.or();
      Token token12 = xPathLexer1.star();
      assertEquals(20, token12.getTokenType());
      
      Token token13 = xPathLexer0.minus();
      assertEquals(6, token13.getTokenType());
      
      boolean boolean0 = xPathLexer1.hasMoreChars();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=3.574703309469329
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")");
      xPathLexer0.leftBracket();
      xPathLexer0.star();
      Token token0 = xPathLexer0.colon();
      assertEquals(18, token0.getTokenType());
      
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      
      Token token2 = xPathLexer0.star();
      assertEquals(20, token2.getTokenType());
      
      xPathLexer0.or();
      Token token3 = xPathLexer0.leftParen();
      assertEquals(1, token3.getTokenType());
      
      xPathLexer0.getPreviousToken();
      xPathLexer0.rightBracket();
      Token token4 = xPathLexer0.rightBracket();
      assertEquals(4, token4.getTokenType());
      
      xPathLexer0.div();
      Token token5 = xPathLexer0.leftBracket();
      assertEquals(3, token5.getTokenType());
      
      boolean boolean0 = xPathLexer0.isIdentifierStartChar(' ');
      assertFalse(boolean0);
      
      xPathLexer0.and();
      xPathLexer0.consume(1);
      xPathLexer0.consume();
      Token token6 = xPathLexer0.not();
      assertEquals(23, token6.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.relationalOperator();
      Token token7 = xPathLexer0.doubleColon();
      assertEquals(19, token7.getTokenType());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.3889646289010218
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      Token token0 = xPathLexer0.notEquals();
      assertEquals(") ", token0.getTokenText());
      assertEquals(22, token0.getTokenType());
      
      xPathLexer0.or();
      XPathLexer xPathLexer1 = new XPathLexer(") (");
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals("(", token1.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token2 = xPathLexer2.literal();
      assertNull(token2);
      
      Token token3 = xPathLexer2.whitespace();
      assertEquals((-2), token3.getTokenType());
      
      Token token4 = xPathLexer2.leftBracket();
      assertEquals(3, token4.getTokenType());
      
      Token token5 = xPathLexer2.nextToken();
      assertEquals((-1), token5.getTokenType());
      
      boolean boolean0 = xPathLexer2.isIdentifierStartChar('X');
      assertTrue(boolean0);
      
      Token token6 = xPathLexer1.leftParen();
      assertEquals(")", token6.getTokenText());
      assertEquals(1, token6.getTokenType());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      XPathLexer xPathLexer0 = null;
      try {
        xPathLexer0 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.293018751448788
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("O4D");
      Token token0 = xPathLexer0.leftParen();
      token0.toString();
      Token token1 = xPathLexer0.dots();
      assertEquals("4", token1.getTokenText());
      assertEquals(13, token1.getTokenType());
      
      Token token2 = xPathLexer0.equals();
      assertEquals(21, token2.getTokenType());
      assertEquals("D", token2.getTokenText());
      
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (1) (O)", string0);
      
      xPathLexer0.setPreviousToken(token0);
      Token token3 = xPathLexer0.colon();
      assertEquals(18, token3.getTokenType());
      
      Token token4 = xPathLexer0.notEquals();
      assertEquals(22, token4.getTokenType());
      
      Token token5 = xPathLexer0.rightParen();
      assertEquals(2, token5.getTokenType());
      
      xPathLexer0.div();
      xPathLexer0.mod();
      Token token6 = xPathLexer0.getPreviousToken();
      assertEquals("O", token6.getTokenText());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=3.1939459791937073
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.rightParen();
      xPathLexer0.minus();
      xPathLexer0.dollar();
      xPathLexer0.relationalOperator();
      xPathLexer0.consume();
      xPathLexer0.and();
      xPathLexer0.dollar();
      xPathLexer0.not();
      xPathLexer0.equals();
      xPathLexer0.consume((-1501));
      xPathLexer0.rightParen();
      xPathLexer0.notEquals();
      xPathLexer0.doubleColon();
      // Undeclared exception!
      try { 
        xPathLexer0.and();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.683711063822706
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ht?6[1;q+58Q@:x0+t");
      Token token0 = xPathLexer0.star();
      assertEquals(20, token0.getTokenType());
      assertEquals("h", token0.getTokenText());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals(22, token1.getTokenType());
      assertEquals("t?", token1.getTokenText());
      
      xPathLexer0.consume();
      char char0 = xPathLexer0.LA(0);
      assertEquals('6', char0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.518673812395613
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s,#$X7taZVO/'i");
      xPathLexer0.equals();
      xPathLexer0.relationalOperator();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.literal();
      xPathLexer0.whitespace();
      xPathLexer0.setXPath("s,#$X7taZVO/'i");
      xPathLexer0.star();
      xPathLexer0.nextToken();
      // Undeclared exception!
      try { 
        xPathLexer0.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.8177653295060012
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.dots();
      xPathLexer0.or();
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      
      Token token2 = xPathLexer0.equals();
      assertEquals(21, token2.getTokenType());
      
      xPathLexer0.rightParen();
      xPathLexer0.plus();
      Token token3 = xPathLexer0.whitespace();
      assertEquals((-2), token3.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token4 = xPathLexer0.plus();
      assertEquals(5, token4.getTokenType());
      
      xPathLexer0.dots();
      Token token5 = xPathLexer0.doubleColon();
      assertEquals(19, token5.getTokenType());
      
      Token token6 = xPathLexer0.identifierOrOperatorName();
      assertNotNull(token6);
      assertEquals(15, token6.getTokenType());
      
      Token token7 = xPathLexer0.at();
      assertEquals(16, token7.getTokenType());
      
      xPathLexer0.literal();
      Token token8 = xPathLexer0.minus();
      assertEquals(6, token8.getTokenType());
      
      Token token9 = xPathLexer0.slashes();
      assertEquals(11, token9.getTokenType());
      
      Token token10 = xPathLexer0.nextToken();
      assertEquals((-1), token10.getTokenType());
      
      Token token11 = xPathLexer0.dots();
      assertEquals(13, token11.getTokenType());
      
      xPathLexer0.colon();
      Token token12 = xPathLexer0.rightParen();
      assertEquals(2, token12.getTokenType());
      
      Token token13 = xPathLexer0.colon();
      assertEquals(18, token13.getTokenType());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.733529456966893
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.div();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
      
      Token token1 = xPathLexer0.minus();
      assertEquals(6, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.Token");
      Token token2 = xPathLexer2.not();
      assertEquals(23, token2.getTokenType());
      assertEquals("c", token2.getTokenText());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(24, int0);
      
      Token token3 = xPathLexer1.number();
      assertEquals(30, token3.getTokenType());
      
      Token token4 = xPathLexer0.comma();
      assertEquals(32, token4.getTokenType());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.3919129516229876
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(",phg0Of/&Yzm_NI(A");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.leftParen();
      assertEquals(",", token0.getTokenText());
      assertEquals(1, token0.getTokenType());
      
      xPathLexer0.identifier();
      xPathLexer0.or();
      Token token1 = xPathLexer0.plus();
      assertEquals(5, token1.getTokenType());
      assertEquals("/", token1.getTokenText());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals("&", token2.getTokenText());
      
      Token token3 = xPathLexer0.notEquals();
      assertEquals(22, token3.getTokenType());
      assertEquals("Yz", token3.getTokenText());
      
      Token token4 = xPathLexer0.identifier();
      assertEquals("m_NI", token4.getTokenText());
      
      Token token5 = xPathLexer0.number();
      assertEquals(30, token5.getTokenType());
      
      Token token6 = xPathLexer0.equals();
      assertEquals("(", token6.getTokenText());
      assertEquals(21, token6.getTokenType());
      
      Token token7 = xPathLexer0.at();
      assertEquals(16, token7.getTokenType());
      assertEquals("A", token7.getTokenText());
      
      Token token8 = xPathLexer0.pipe();
      assertEquals(17, token8.getTokenType());
      
      xPathLexer0.identifier();
      Token token9 = xPathLexer0.not();
      assertEquals(23, token9.getTokenType());
      
      Token token10 = xPathLexer0.leftBracket();
      assertEquals(3, token10.getTokenType());
      
      xPathLexer0.mod();
      Token token11 = xPathLexer0.comma();
      assertEquals(32, token11.getTokenType());
      
      xPathLexer0.slashes();
      Token token12 = xPathLexer0.identifierOrOperatorName();
      assertNotNull(token12);
      
      Token token13 = xPathLexer0.slashes();
      assertEquals(11, token13.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.relationalOperator();
      xPathLexer0.consume();
      xPathLexer0.getXPath();
      Token token14 = xPathLexer0.minus();
      assertEquals(6, token14.getTokenType());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("( (");
      XPathLexer xPathLexer1 = new XPathLexer("( (");
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.8449148734922691
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.comma();
      assertEquals(32, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      xPathLexer0.operatorName();
      xPathLexer0.whitespace();
      Token token1 = xPathLexer0.slashes();
      assertEquals("m", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer2 = new XPathLexer("5+h4~KG[eP<LHbRi qU");
      Token token2 = xPathLexer2.slashes();
      assertEquals(11, token2.getTokenType());
      assertEquals("5", token2.getTokenText());
      
      Token token3 = xPathLexer2.literal();
      assertNull(token3);
      
      Token token4 = xPathLexer0.whitespace();
      assertEquals((-2), token4.getTokenType());
      assertEquals("", token4.getTokenText());
      
      Token token5 = xPathLexer2.leftBracket();
      assertEquals(3, token5.getTokenType());
      
      Token token6 = xPathLexer1.nextToken();
      assertEquals(15, token6.getTokenType());
      assertEquals("com.werken.saxpath.XPathLexer", token6.getTokenText());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.5570829737000937
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.comma();
      xPathLexer0.not();
      int int0 = (-954);
      xPathLexer0.colon();
      xPathLexer0.literal();
      xPathLexer0.number();
      xPathLexer0.consume((-954));
      char char0 = 'g';
      // Undeclared exception!
      try { 
        xPathLexer0.div();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.3182948739821936
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.comma();
      assertEquals("c", token0.getTokenText());
      assertEquals(32, token0.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.whitespace();
      Token token1 = xPathLexer0.slashes();
      assertEquals("m", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
      
      Token token2 = xPathLexer0.literal();
      assertEquals(27, token2.getTokenType());
      assertNotNull(token2);
      assertEquals("werken", token2.getTokenText());
      
      xPathLexer0.consume();
      Token token3 = xPathLexer0.whitespace();
      assertEquals("", token3.getTokenText());
      
      xPathLexer0.not();
      Token token4 = xPathLexer0.not();
      assertEquals("p", token4.getTokenText());
      assertEquals(23, token4.getTokenType());
      
      xPathLexer0.setXPath("VQj2}t");
      Token token5 = xPathLexer0.star();
      assertEquals("V", token5.getTokenText());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals(15, token6.getTokenType());
      assertEquals("Qj2", token6.getTokenText());
      
      xPathLexer0.setXPath("");
      xPathLexer0.colon();
      xPathLexer0.or();
      Token token7 = xPathLexer0.number();
      assertEquals(30, token7.getTokenType());
      
      xPathLexer0.nextToken();
      Token token8 = xPathLexer0.rightParen();
      assertEquals(2, token8.getTokenType());
      
      Token token9 = xPathLexer0.dollar();
      assertEquals(26, token9.getTokenType());
      
      xPathLexer0.identifier();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.relationalOperator();
      Token token10 = xPathLexer0.colon();
      assertEquals(18, token10.getTokenType());
      
      Token token11 = xPathLexer0.notEquals();
      assertEquals(22, token11.getTokenType());
      
      xPathLexer1.doubleColon();
      xPathLexer0.doubleColon();
      Token token12 = xPathLexer1.doubleColon();
      assertEquals(19, token12.getTokenType());
      
      xPathLexer0.star();
      xPathLexer0.operatorName();
      Token token13 = xPathLexer1.dots();
      assertEquals(13, token13.getTokenType());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.7217581279349194
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lra^#");
      xPathLexer0.identifier();
      xPathLexer0.dots();
      xPathLexer0.dots();
      xPathLexer0.div();
      xPathLexer0.literal();
      xPathLexer0.consume((-2161));
      xPathLexer0.comma();
      xPathLexer0.setXPath(" ^BZJt=cyO8v6");
      xPathLexer0.plus();
      xPathLexer0.star();
      xPathLexer0.leftParen();
      xPathLexer0.nextToken();
      xPathLexer0.literal();
      xPathLexer0.consume((-2161));
      xPathLexer0.doubleColon();
      xPathLexer0.notEquals();
      // Undeclared exception!
      try { 
        xPathLexer0.literal();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=3.293562761893789
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.not();
      xPathLexer0.colon();
      xPathLexer0.at();
      xPathLexer0.dollar();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.leftParen();
      xPathLexer1.literal();
      xPathLexer1.consume((-3275));
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer2.doubleColon();
      // Undeclared exception!
      try { 
        xPathLexer1.literal();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=3.608869791738031
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.identifier();
      xPathLexer0.mod();
      xPathLexer0.relationalOperator();
      xPathLexer0.at();
      xPathLexer0.operatorName();
      xPathLexer0.notEquals();
      xPathLexer0.relationalOperator();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.notEquals();
      xPathLexer0.pipe();
      xPathLexer0.consume();
      xPathLexer0.dots();
      xPathLexer0.rightBracket();
      xPathLexer0.dollar();
      xPathLexer0.colon();
      xPathLexer0.comma();
      xPathLexer0.leftBracket();
      xPathLexer0.operatorName();
      xPathLexer0.setXPath("(O;@qzp^?6+{SB~'");
      xPathLexer0.star();
      xPathLexer0.minus();
      xPathLexer0.or();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-1038));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.748348754907009
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lra^#");
      xPathLexer0.identifier();
      xPathLexer0.identifier();
      xPathLexer0.dots();
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("#", token0.getTokenText());
      
      xPathLexer0.div();
      xPathLexer0.setXPath("com.werken.saxpath.Token");
      Token token1 = xPathLexer0.comma();
      assertEquals("c", token1.getTokenText());
      assertEquals(32, token1.getTokenType());
      
      xPathLexer0.setXPath("lra^#");
      Token token2 = xPathLexer0.plus();
      assertEquals("l", token2.getTokenText());
      
      Token token3 = xPathLexer0.leftParen();
      assertEquals("r", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(15, token4.getTokenType());
      assertEquals("a", token4.getTokenText());
      
      Token token5 = xPathLexer0.not();
      assertEquals(23, token5.getTokenType());
      assertEquals("^", token5.getTokenText());
      
      xPathLexer0.literal();
      xPathLexer0.doubleColon();
      Token token6 = xPathLexer0.literal();
      assertNull(token6);
      
      Token token7 = xPathLexer0.equals();
      assertEquals(21, token7.getTokenType());
      
      xPathLexer0.or();
      Token token8 = xPathLexer0.star();
      assertEquals(20, token8.getTokenType());
      
      xPathLexer0.minus();
      Token token9 = xPathLexer0.plus();
      assertEquals(5, token9.getTokenType());
      
      Token token10 = xPathLexer0.minus();
      assertEquals(6, token10.getTokenType());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=3.568896956622492
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.or();
      xPathLexer0.equals();
      xPathLexer0.plus();
      xPathLexer0.consume((-1));
      Token token0 = xPathLexer0.comma();
      assertEquals(32, token0.getTokenType());
      
      xPathLexer0.whitespace();
      xPathLexer0.dots();
      xPathLexer0.div();
      xPathLexer0.div();
      xPathLexer0.mod();
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      
      xPathLexer0.consume(30);
      Token token2 = xPathLexer0.equals();
      assertEquals(21, token2.getTokenType());
      
      xPathLexer0.consume();
      Token token3 = xPathLexer0.leftBracket();
      assertEquals(3, token3.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.literal();
      xPathLexer0.consume(30);
      Token token4 = xPathLexer0.plus();
      assertEquals(5, token4.getTokenType());
      
      xPathLexer0.consume();
      Token token5 = xPathLexer0.not();
      assertEquals(23, token5.getTokenType());
      
      Token token6 = xPathLexer0.literal();
      assertNull(token6);
      
      Token token7 = xPathLexer0.star();
      assertEquals(20, token7.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token8 = xPathLexer0.dots();
      assertEquals(13, token8.getTokenType());
      
      char char0 = xPathLexer0.LA(164);
      assertEquals('\uFFFF', char0);
      
      Token token9 = xPathLexer0.whitespace();
      assertEquals((-2), token9.getTokenType());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.8869307833665043
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dH3RuL;N#zC");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("d", token0.getTokenText());
      
      xPathLexer0.leftBracket();
      Token token1 = xPathLexer0.leftBracket();
      assertEquals("3", token1.getTokenText());
      
      Token token2 = xPathLexer0.at();
      assertEquals("R", token2.getTokenText());
      assertEquals(16, token2.getTokenType());
      
      Token token3 = xPathLexer0.pipe();
      assertEquals("u", token3.getTokenText());
      
      xPathLexer0.identifier();
      xPathLexer0.or();
      Token token4 = xPathLexer0.comma();
      assertEquals(32, token4.getTokenType());
      assertEquals(";", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(15, token5.getTokenType());
      assertEquals("N", token5.getTokenText());
      
      xPathLexer0.literal();
      Token token6 = xPathLexer0.identifier();
      assertEquals("", token6.getTokenText());
      
      xPathLexer0.star();
      Token token7 = xPathLexer0.rightBracket();
      assertEquals(4, token7.getTokenType());
      
      Token token8 = xPathLexer0.leftBracket();
      assertEquals(3, token8.getTokenType());
      
      xPathLexer0.minus();
      xPathLexer0.consume();
      xPathLexer0.div();
      xPathLexer0.nextToken();
      xPathLexer0.literal();
      xPathLexer0.consume(30);
      Token token9 = xPathLexer0.doubleColon();
      assertEquals(19, token9.getTokenType());
      
      xPathLexer0.literal();
      XPathLexer xPathLexer1 = new XPathLexer("dH3RuL;N#zC");
      Token token10 = xPathLexer1.equals();
      assertEquals(21, token10.getTokenType());
      
      xPathLexer1.or();
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer("dH3RuL;N#zC");
      Token token11 = xPathLexer3.star();
      assertEquals(20, token11.getTokenType());
      assertEquals("d", token11.getTokenText());
      
      Token token12 = xPathLexer2.dollar();
      assertEquals(26, token12.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token13 = xPathLexer0.plus();
      assertEquals(5, token13.getTokenType());
      
      Token token14 = xPathLexer3.minus();
      assertEquals("H", token14.getTokenText());
      assertEquals(6, token14.getTokenType());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.9470800530337826
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")");
      Token token0 = xPathLexer0.plus();
      Token token1 = xPathLexer0.star();
      assertEquals(20, token1.getTokenType());
      
      token0.toString();
      token0.toString();
      Token token2 = xPathLexer0.pipe();
      assertEquals(17, token2.getTokenType());
      
      xPathLexer0.div();
      token0.toString();
      xPathLexer0.number();
      xPathLexer0.doubleColon();
      token0.toString();
      xPathLexer0.consume();
      xPathLexer0.mod();
      Token token3 = xPathLexer0.nextToken();
      assertEquals((-1), token3.getTokenType());
      
      xPathLexer0.nextToken();
      Token token4 = xPathLexer0.number();
      assertEquals(30, token4.getTokenType());
      
      Token token5 = xPathLexer0.identifierOrOperatorName();
      assertNull(token5);
      
      String string0 = token0.toString();
      assertEquals("[ (5) ())", string0);
      
      xPathLexer0.setPreviousToken(token0);
      int int0 = xPathLexer0.currentPosition();
      assertEquals(6, int0);
      
      xPathLexer0.equals();
      xPathLexer0.setPreviousToken(token0);
      Token token6 = xPathLexer0.doubleColon();
      assertEquals(19, token6.getTokenType());
      
      Token token7 = xPathLexer0.minus();
      assertEquals(6, token7.getTokenType());
      
      xPathLexer0.plus();
      Token token8 = xPathLexer0.comma();
      assertEquals(32, token8.getTokenType());
      
      Token token9 = xPathLexer0.equals();
      assertEquals(21, token9.getTokenType());
      
      Token token10 = xPathLexer0.rightParen();
      assertEquals(2, token10.getTokenType());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=3.4231917490463832
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dH3RuL;N#zC");
      xPathLexer0.leftBracket();
      xPathLexer0.leftBracket();
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      assertEquals("3", token0.getTokenText());
      
      xPathLexer0.colon();
      Token token1 = xPathLexer0.at();
      assertEquals("u", token1.getTokenText());
      assertEquals(16, token1.getTokenType());
      
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
      assertEquals("L", token2.getTokenText());
      
      Token token3 = xPathLexer0.dollar();
      assertEquals(";", token3.getTokenText());
      assertEquals(26, token3.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.leftBracket();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token4 = xPathLexer2.equals();
      assertEquals(21, token4.getTokenType());
      
      Token token5 = xPathLexer0.colon();
      assertEquals(18, token5.getTokenType());
      assertEquals("N", token5.getTokenText());
      
      xPathLexer2.mod();
      xPathLexer0.div();
      xPathLexer2.leftParen();
      Token token6 = xPathLexer0.leftBracket();
      assertEquals(3, token6.getTokenType());
      
      Token token7 = xPathLexer1.star();
      assertEquals(20, token7.getTokenType());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=3.0579071039404107
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(3, token0.getTokenType());
      
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      
      Token token2 = xPathLexer0.pipe();
      assertEquals(17, token2.getTokenType());
      
      Token token3 = xPathLexer0.plus();
      assertEquals(5, token3.getTokenType());
      
      xPathLexer0.or();
      Token token4 = xPathLexer0.notEquals();
      assertEquals(22, token4.getTokenType());
      
      Token token5 = xPathLexer0.minus();
      assertEquals(6, token5.getTokenType());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=3.2696349443336445
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.at();
      assertEquals(16, token0.getTokenType());
      
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      
      Token token2 = xPathLexer0.minus();
      assertEquals(6, token2.getTokenType());
      
      xPathLexer0.doubleColon();
      Token token3 = xPathLexer0.plus();
      assertEquals(5, token3.getTokenType());
      
      Token token4 = xPathLexer0.leftBracket();
      assertEquals(3, token4.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.doubleColon();
      Token token5 = xPathLexer0.rightBracket();
      assertEquals(4, token5.getTokenType());
      
      xPathLexer0.operatorName();
      Token token6 = xPathLexer0.doubleColon();
      assertEquals(19, token6.getTokenType());
      
      Token token7 = xPathLexer0.literal();
      assertNull(token7);
      
      xPathLexer0.div();
      Token token8 = xPathLexer0.slashes();
      assertEquals(11, token8.getTokenType());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.1549027099972147
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.setXPath("com.werken.saxpath.Token");
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.star();
      Token token0 = xPathLexer1.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      xPathLexer1.setXPath("com.werken.saxpath.Token");
      Token token1 = xPathLexer1.colon();
      assertEquals("c", token1.getTokenText());
      
      xPathLexer0.or();
      Token token2 = xPathLexer1.number();
      assertEquals(30, token2.getTokenType());
      
      xPathLexer1.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token3 = xPathLexer2.rightParen();
      assertEquals(2, token3.getTokenType());
      
      Token token4 = xPathLexer0.dollar();
      assertEquals("c", token4.getTokenText());
      
      Token token5 = xPathLexer2.identifier();
      assertEquals(15, token5.getTokenType());
      
      Token token6 = xPathLexer2.at();
      assertEquals(16, token6.getTokenType());
      
      xPathLexer1.relationalOperator();
      Token token7 = xPathLexer2.dollar();
      assertEquals(26, token7.getTokenType());
      
      Token token8 = xPathLexer2.colon();
      assertEquals(18, token8.getTokenType());
      
      Token token9 = xPathLexer1.notEquals();
      assertEquals("om", token9.getTokenText());
      assertEquals(22, token9.getTokenType());
      
      xPathLexer0.doubleColon();
      Token token10 = xPathLexer1.not();
      assertEquals(23, token10.getTokenType());
      assertEquals(".", token10.getTokenText());
      
      xPathLexer1.doubleColon();
      Token token11 = xPathLexer1.doubleColon();
      assertEquals(19, token11.getTokenType());
      assertEquals("rk", token11.getTokenText());
      
      Token token12 = xPathLexer1.star();
      assertEquals("e", token12.getTokenText());
      assertEquals(20, token12.getTokenType());
      
      xPathLexer0.operatorName();
      Token token13 = xPathLexer0.dots();
      assertEquals(13, token13.getTokenType());
      assertEquals(".", token13.getTokenText());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.8587139545695304
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.equals();
      token0.toString();
      token0.toString();
      token0.toString();
      xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.dollar();
      xPathLexer0.relationalOperator();
      xPathLexer0.plus();
      xPathLexer0.dots();
      token0.toString();
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token1 = xPathLexer0.and();
      assertNull(token1);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.8476047786816538
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      XPathLexer xPathLexer1 = new XPathLexer(") (");
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer1.colon();
      xPathLexer2.or();
      xPathLexer1.number();
      xPathLexer0.nextToken();
      xPathLexer0.rightParen();
      xPathLexer1.dollar();
      xPathLexer2.identifier();
      xPathLexer0.relationalOperator();
      xPathLexer0.dollar();
      xPathLexer2.colon();
      xPathLexer0.notEquals();
      xPathLexer0.doubleColon();
      xPathLexer2.not();
      xPathLexer2.doubleColon();
      xPathLexer1.doubleColon();
      xPathLexer1.minus();
      xPathLexer0.star();
      xPathLexer1.operatorName();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.dots();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=3.392458834306594
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.not();
      assertEquals("c", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      xPathLexer0.colon();
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      assertEquals("m", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
      assertEquals(".", token2.getTokenText());
      
      Token token3 = xPathLexer0.dollar();
      assertEquals(26, token3.getTokenType());
      assertEquals("w", token3.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token4 = xPathLexer1.leftBracket();
      assertEquals(3, token4.getTokenType());
      
      Token token5 = xPathLexer0.equals();
      assertEquals(21, token5.getTokenType());
      assertEquals("e", token5.getTokenText());
      
      xPathLexer0.colon();
      xPathLexer0.mod();
      Token token6 = xPathLexer0.colon();
      assertEquals(18, token6.getTokenType());
      
      Token token7 = xPathLexer0.notEquals();
      assertEquals(22, token7.getTokenType());
      assertEquals("en", token7.getTokenText());
      
      xPathLexer1.doubleColon();
      Token token8 = xPathLexer0.doubleColon();
      assertEquals(".s", token8.getTokenText());
      
      Token token9 = xPathLexer1.doubleColon();
      assertEquals(19, token9.getTokenType());
      
      Token token10 = xPathLexer1.star();
      assertEquals(20, token10.getTokenType());
      
      xPathLexer1.operatorName();
      Token token11 = xPathLexer0.dots();
      assertEquals("a", token11.getTokenText());
      assertEquals(13, token11.getTokenType());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.915152626177418
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dH3RuL;N#zC");
      xPathLexer0.leftBracket();
      Token token0 = xPathLexer0.leftBracket();
      assertEquals("H", token0.getTokenText());
      assertEquals(3, token0.getTokenType());
      
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      assertEquals("3", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("RuL", token2.getTokenText());
      
      Token token3 = xPathLexer0.rightParen();
      assertEquals(";", token3.getTokenText());
      
      Token token4 = xPathLexer0.dollar();
      assertEquals(26, token4.getTokenType());
      assertEquals("N", token4.getTokenText());
      
      Token token5 = xPathLexer0.identifier();
      assertEquals(15, token5.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("dH3RuL;N#zC");
      xPathLexer1.relationalOperator();
      Token token6 = xPathLexer0.colon();
      assertEquals(18, token6.getTokenType());
      
      Token token7 = xPathLexer0.comma();
      assertEquals("z", token7.getTokenText());
      assertEquals(32, token7.getTokenType());
      
      Token token8 = xPathLexer1.doubleColon();
      assertEquals("dH", token8.getTokenText());
      
      xPathLexer1.doubleColon();
      Token token9 = xPathLexer0.doubleColon();
      assertEquals(19, token9.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.dots();
      Token token10 = xPathLexer0.star();
      assertEquals(20, token10.getTokenType());
      
      xPathLexer1.operatorName();
      Token token11 = xPathLexer0.dots();
      assertEquals(13, token11.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token12 = xPathLexer3.slashes();
      assertEquals(11, token12.getTokenType());
      
      Token token13 = xPathLexer2.whitespace();
      assertEquals((-2), token13.getTokenType());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.436957903103765
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.colon();
      Token token0 = xPathLexer0.equals();
      assertEquals(21, token0.getTokenType());
      assertEquals("o", token0.getTokenText());
      
      Token token1 = xPathLexer0.colon();
      assertEquals("m", token1.getTokenText());
      assertEquals(18, token1.getTokenType());
      
      Token token2 = xPathLexer0.at();
      assertEquals(".", token2.getTokenText());
      assertEquals(16, token2.getTokenType());
      
      Token token3 = xPathLexer0.star();
      assertEquals("w", token3.getTokenText());
      assertEquals(20, token3.getTokenType());
      
      Token token4 = xPathLexer0.slashes();
      assertEquals("e", token4.getTokenText());
      assertEquals(11, token4.getTokenType());
      
      Token token5 = xPathLexer0.literal();
      assertNull(token5);
      
      Token token6 = xPathLexer0.whitespace();
      assertEquals((-2), token6.getTokenType());
      
      Token token7 = xPathLexer0.leftBracket();
      assertEquals(3, token7.getTokenType());
      
      Token token8 = xPathLexer0.nextToken();
      assertEquals((-1), token8.getTokenType());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.9813827227771563
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("t)0o\"T>");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.rightParen();
      assertEquals(2, token1.getTokenType());
      assertEquals(")", token1.getTokenText());
      
      Token token2 = xPathLexer0.dollar();
      assertEquals("0", token2.getTokenText());
      assertEquals(26, token2.getTokenType());
      
      Token token3 = xPathLexer0.identifier();
      assertEquals(15, token3.getTokenType());
      assertEquals("o", token3.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("t)0o\"T>");
      xPathLexer0.relationalOperator();
      Token token4 = xPathLexer0.colon();
      assertEquals("\"", token4.getTokenText());
      assertEquals(18, token4.getTokenType());
      
      Token token5 = xPathLexer0.comma();
      assertEquals(32, token5.getTokenType());
      assertEquals("T", token5.getTokenText());
      
      Token token6 = xPathLexer1.doubleColon();
      assertEquals("t)", token6.getTokenText());
      
      xPathLexer0.doubleColon();
      Token token7 = xPathLexer1.doubleColon();
      assertEquals(19, token7.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token8 = xPathLexer1.star();
      assertEquals("\"", token8.getTokenText());
      assertEquals(20, token8.getTokenType());
      
      xPathLexer1.operatorName();
      Token token9 = xPathLexer1.dots();
      assertEquals("T", token9.getTokenText());
      assertEquals(13, token9.getTokenType());
      
      Token token10 = xPathLexer1.slashes();
      assertEquals(">", token10.getTokenText());
      assertEquals(11, token10.getTokenType());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }
}
