/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 03:59:38 GMT 2019
 */

package net.sourceforge.squirrel_sql.plugins.dbcopy.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.gargoylesoftware.base.resource.jdbc.ConnectionWrapper;
import java.awt.AWTEventMulticaster;
import java.awt.event.MouseWheelListener;
import java.io.File;
import java.sql.Connection;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Stack;
import java.util.Vector;
import javax.swing.DefaultListCellRenderer;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.plaf.metal.MetalTreeUI;
import javax.swing.tree.DefaultTreeCellRenderer;
import net.sourceforge.squirrel_sql.client.IApplication;
import net.sourceforge.squirrel_sql.client.gui.db.SQLAlias;
import net.sourceforge.squirrel_sql.client.session.ISession;
import net.sourceforge.squirrel_sql.client.session.schemainfo.SchemaInfo;
import net.sourceforge.squirrel_sql.client.util.ApplicationFiles;
import net.sourceforge.squirrel_sql.fw.dialects.DialectFactory;
import net.sourceforge.squirrel_sql.fw.id.UidIdentifier;
import net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo;
import net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectType;
import net.sourceforge.squirrel_sql.fw.sql.ForeignKeyInfo;
import net.sourceforge.squirrel_sql.fw.sql.IDatabaseObjectInfo;
import net.sourceforge.squirrel_sql.fw.sql.ISQLConnection;
import net.sourceforge.squirrel_sql.fw.sql.ITableInfo;
import net.sourceforge.squirrel_sql.fw.sql.ProcedureInfo;
import net.sourceforge.squirrel_sql.fw.sql.SQLDatabaseMetaData;
import net.sourceforge.squirrel_sql.fw.sql.SQLDriver;
import net.sourceforge.squirrel_sql.fw.sql.SQLDriverPropertyCollection;
import net.sourceforge.squirrel_sql.fw.sql.TableColumnInfo;
import net.sourceforge.squirrel_sql.fw.util.FileWrapperFactoryImpl;
import net.sourceforge.squirrel_sql.fw.util.FileWrapperImpl;
import net.sourceforge.squirrel_sql.plugins.dbcopy.DBCopyPlugin;
import net.sourceforge.squirrel_sql.plugins.dbcopy.prefs.DBCopyPreferenceBean;
import net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.javax.swing.MockJFileChooser;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DBUtil_ESTest extends DBUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)14;
      byteArray0[1] = (byte)66;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte)14;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, (String) null, "No type mapping for java.sql.Types code: ", "03(H", (-7), "5h^)wBttr Xp]", 415, 37, (byte) (-1), 715, "rbiKoc3!]Y9-/g&Zd", "Skipping FK (", (-771), (-771), (String) null);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.BEST_ROW_ID;
      boolean boolean0 = DBUtil.typesAreEquivalent(3, 3);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      File file0 = applicationFiles0.getLibraryDirectory();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      File file1 = applicationFiles0.getDatabaseDriversFile();
      file0.getAbsoluteFile();
      file0.renameTo(file1);
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      FileWrapperImpl fileWrapperImpl0 = new FileWrapperImpl("sqrt");
      fileWrapperFactoryImpl0.create(file0);
      fileWrapperFactoryImpl0.createTempFile("getTimeDateFunctions", "getTimeDateFunctions");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.setFileWrapperFactory(fileWrapperFactoryImpl0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "sqrt");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "Max function is null for dialect=");
      dBCopyPlugin0.getSourceSession();
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.BEST_ROW_ID;
      boolean boolean0 = DBUtil.typesAreEquivalent(3, (-2474));
      assertFalse(boolean0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.unload();
      dBCopyPlugin1.getPluginUserSettingsFolder();
      // Undeclared exception!
      try { 
        DBUtil.executeUpdate((ISQLConnection) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("+&", "org.jfree.data.xy.XYDataItem", "8DM`");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.createNewDatabaseObjectType("Cxif!.=I_ecSz?3~r");
      ImageIcon imageIcon0 = new ImageIcon();
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.createNewDatabaseObjectType("Null 'id' argument.", (Icon) imageIcon0);
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.createNewDatabaseObjectType("I;m");
      DatabaseObjectType.createNewDatabaseObjectType("VqT|Ce<HVE", (Icon) imageIcon0);
      DatabaseObjectType.createNewDatabaseObjectType("4Db8&bwK'GjOTrBY-");
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      DatabaseObjectType databaseObjectType3 = DatabaseObjectType.CATALOG;
      ISQLConnection iSQLConnection0 = null;
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "W'|8::", "#4kAil-`\"");
      // Undeclared exception!
      try { 
        DBUtil.getColumnCount((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-2);
      byteArray0[1] = (byte)66;
      byteArray0[2] = (byte)7;
      byteArray0[3] = (byte) (-56);
      int int0 = DBUtil.getColumnType((ISQLConnection) null, (ITableInfo) null, "select count(*) from ");
      assertEquals((-1), int0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      TableColumnInfo tableColumnInfo0 = null;
      // Undeclared exception!
      try { 
        DBUtil.isBinaryType((TableColumnInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, " to 128.");
      File file0 = applicationFiles0.getLibraryDirectory();
      File file1 = applicationFiles0.getDatabaseDriversFile();
      file0.getAbsoluteFile();
      file0.renameTo(file1);
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("Null 'id' argument.", ";!", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", ";!", (-2), ";!", (-793), (-3), 2, (-793), "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (String) null, (-793), (-3), ";!");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.BEST_ROW_ID;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DBUtil.isBinaryType(tableColumnInfo0);
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      // Undeclared exception!
      try { 
        DBUtil.getSchemaFromDbObject(tableColumnInfo0, schemaInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // SQLDatabaseMetaData == null
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[2];
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("Op9/?^6w0:r@U1Ao8*", "Op9/?^6w0:r@U1Ao8*", "#x_9", "1PZKN*gw[@", 104, "1PZKN*gw[@", 104, 104, (-4), 104, (String) null, ",yjAmA+,0wst", 60, 60, "B|:)0z9Q>B+e(jpo9");
      tableColumnInfoArray0[0] = tableColumnInfo0;
      TableColumnInfo tableColumnInfo1 = new TableColumnInfo((String) null, "xZ'![DZ", (String) null, "", (-4), "iZ5_Bv", 2038, 23503, (-1836), (-4), "b#`kw)2'[7M$v", "_?A(iG&Tt4!", 16, 1061, "_?A(iG&Tt4!");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.BEST_ROW_ID;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo1);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.8505612088663046
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      applicationFiles0.getSQuirrelJarFile();
      applicationFiles0.getChangeLogFile();
      DBUtil.typesAreEquivalent((-816), (-816));
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("getJdbcTypeName: unexpected exception: ", "getJdbcTypeName: unexpected exception: ", "DBUtil.info.bindblobfile", "accessMethod", (-1269), "com.bigfoot.colbell.squirrel", (-1269), 87, 2429, 900, "accessMethod", "HCwrs;NEYEoLV1)", 7, (-703), "com.bigfoot.colbell.squirrel");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      DBUtil.replaceDistinctDataType(2266, tableColumnInfo0, (ISession) null);
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      schemaInfo0.getSQLDatabaseMetaData();
      ProcedureInfo procedureInfo0 = null;
      try {
        procedureInfo0 = new ProcedureInfo("vM'tLL'XvY;", "n7^G!/[*I>HW_2", (String) null, "Y5s.K2TrG@", 0, (SQLDatabaseMetaData) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // SQLDatabaseMetaData == null
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo((String) null, (String) null, (String) null);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.BEST_ROW_ID;
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      Icon icon0 = defaultTreeCellRenderer0.getOpenIcon();
      DatabaseObjectType.createNewDatabaseObjectType((String) null, icon0);
      DatabaseObjectType.createNewDatabaseObjectType("");
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DBUtil.getSchemaNameFromDbObject(databaseObjectInfo0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getApplication();
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      SQLDriver sQLDriver0 = new SQLDriver(uidIdentifier0);
      assertEquals("b92ae49:16ecf0cb843:-7fa1", uidIdentifier0.toString());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      applicationFiles0.getSQuirrelJarFile();
      applicationFiles0.getChangeLogFile();
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      Icon icon0 = defaultTreeCellRenderer0.getOpenIcon();
      DatabaseObjectType.createNewDatabaseObjectType("E/k8!o/}wchW", icon0);
      DatabaseObjectType.createNewDatabaseObjectType("Length function is null for dialect=");
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("", "CREATE TABLE ", "", "", 3741, " to 128.", 1756, 36, 3741, 3741, "Length function is null for dialect=", "bin width", 2001, 2429, "k;)wC/4Rdoa");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      DBUtil.replaceDistinctDataType((-5), tableColumnInfo0, (ISession) null);
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      schemaInfo0.getSQLDatabaseMetaData();
      ProcedureInfo procedureInfo0 = null;
      try {
        procedureInfo0 = new ProcedureInfo("6}4Gt!4/A[]8#EG", "e).W%0FpS", "6WJN", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (-2), (SQLDatabaseMetaData) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // SQLDatabaseMetaData == null
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      FileWrapperImpl fileWrapperImpl0 = new FileWrapperImpl("clob");
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      fileWrapperFactoryImpl0.create("_zb;7UXr~[k#`a");
      MockFile mockFile0 = new MockFile("Dawc/a~,oJ{`N6!", "Dawc/a~,oJ{`N6!");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-104);
      byteArray0[1] = (byte)22;
      byteArray0[2] = (byte)45;
      byteArray0[3] = (byte) (-72);
      byteArray0[4] = (byte) (-46);
      byteArray0[5] = (byte) (-5);
      byteArray0[6] = (byte) (-38);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      applicationFiles0.getLibraryDirectory();
      FileWrapperFactoryImpl fileWrapperFactoryImpl1 = new FileWrapperFactoryImpl();
      FileWrapperFactoryImpl fileWrapperFactoryImpl2 = new FileWrapperFactoryImpl();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("CREATE SEQUENCE $sequenceName$ START WITH $startValue$ INCREMENT BY $incrementValue$ $cache$ $cacheValue$", "Dawc/a~,oJ{`N6!", "o>z8cOh+vw", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 1874, "CREATE SEQUENCE $sequenceName$ START WITH $startValue$ INCREMENT BY $incrementValue$ $cache$ $cacheValue$", 1874, 1874, 1853, 15, "W\"pry>dw~w1IjQ", "clob", 1874, (-7), ",EGv@{)1FA+Z}\":}j!");
      DBUtil.replaceDistinctDataType(1874, tableColumnInfo0, (ISession) null);
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      schemaInfo0.getSQLDatabaseMetaData();
      ProcedureInfo procedureInfo0 = null;
      try {
        procedureInfo0 = new ProcedureInfo("CREATE SEQUENCE $sequenceName$ START WITH $startValue$ INCREMENT BY $incrementValue$ $cache$ $cacheValue$", "CREATE SEQUENCE $sequenceName$ START WITH $startValue$ INCREMENT BY $incrementValue$ $cache$ $cacheValue$", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "DROP TABLE ", 1874, (SQLDatabaseMetaData) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // SQLDatabaseMetaData == null
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.810116318288409
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      applicationFiles0.getChangeLogFile();
      DBUtil.typesAreEquivalent(16, 16);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)68;
      byteArray0[1] = (byte) (-5);
      byteArray0[2] = (byte)4;
      byteArray0[3] = (byte) (-104);
      byteArray0[4] = (byte) (-56);
      byteArray0[5] = (byte) (-97);
      byteArray0[6] = (byte) (-5);
      byteArray0[7] = (byte) (-56);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "(");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      String string0 = "";
      // Undeclared exception!
      try { 
        DBUtil.getSelectQuery(dBCopyPlugin0, "", (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Connection connection0 = null;
      SQLAlias sQLAlias0 = new SQLAlias();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.getCreateTableSql(dBCopyPlugin0, (ITableInfo) null, " NULL", "TimePeriodValue[", "TimePeriodValue[");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      Icon icon0 = defaultTreeCellRenderer0.getOpenIcon();
      MetalTreeUI metalTreeUI0 = new MetalTreeUI();
      metalTreeUI0.setCollapsedIcon(icon0);
      Icon icon1 = metalTreeUI0.getCollapsedIcon();
      DefaultTreeCellRenderer defaultTreeCellRenderer1 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer1.setToolTipText(".");
      DatabaseObjectType.createNewDatabaseObjectType("4971DL1@&vc'A)Y", icon1);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo(".", "org.jfree.data.xy.DefaultXYZDataset", "<&64l&jdQ^@", ",P", 43, "+&", 4000, (-573), 36, 1, "org.jfree.data.xy.DefaultXYZDataset", ",]4pqI", 3, 2131, "org.jfree.data.xy.DefaultXYZDataset");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.BEST_ROW_ID;
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      MockJFileChooser mockJFileChooser0 = new MockJFileChooser("^/");
      MouseWheelListener mouseWheelListener0 = mock(MouseWheelListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(mouseWheelListener0, mouseWheelListener0);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      mockJFileChooser0.addMouseWheelListener((MouseWheelListener) null);
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      applicationFiles0.getDTPropertiesFile();
      applicationFiles0.getUpdateDirectory();
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.DATATYPE;
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.SYNONYM;
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.DATABASE_TYPE_DBO;
      MetalTreeUI metalTreeUI0 = new MetalTreeUI();
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      Icon icon0 = defaultTreeCellRenderer0.getOpenIcon();
      metalTreeUI0.setCollapsedIcon(icon0);
      Icon icon1 = metalTreeUI0.getCollapsedIcon();
      DatabaseObjectType.createNewDatabaseObjectType("^/", icon1);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("Encountered unexpected exception when attempting to call schemaInfo.getTables with catalog = ", "L97o_Ygs#G?[x&.:a|", "Y", "Encountered unexpected exception when attempting to call schemaInfo.getTables with catalog = ", (-1753), (String) null, 2, (-1291), (-1291), (-6), "Encountered unexpected exception when attempting to call schemaInfo.getTables with catalog = ", "b)Xq.2vg@@6kq>]?", 8, (-1753), "TRUNCATE TABLE ");
      DatabaseObjectType databaseObjectType3 = DatabaseObjectType.BEST_ROW_ID;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      applicationFiles0.getSQuirrelJarFile();
      applicationFiles0.getSQuirrelJarFile();
      applicationFiles0.getLicenceFile();
      applicationFiles0.getCellImportExportSelectionsFile();
      ApplicationFiles applicationFiles1 = new ApplicationFiles();
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      Icon icon0 = defaultTreeCellRenderer0.getOpenIcon();
      MetalTreeUI metalTreeUI0 = new MetalTreeUI();
      metalTreeUI0.setCollapsedIcon(icon0);
      metalTreeUI0.getCollapsedIcon();
      DatabaseObjectType.createNewDatabaseObjectType("hE67ZtB\"", icon0);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("_?A(iG&Tt4!", (String) null, "YaMHoS!<ft[$2Dv-", "sqrt", 2005, (String) null, (-2282), 5, (-1487), 43, "hE67ZtB\"", "SEQSCHEMA = upper('", 1894, 2005, "q2Hz?ZZJo)2.4");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.BEST_ROW_ID;
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      dBCopyPlugin0.getDestSession();
      dBCopyPlugin0.getDestSession();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "49UA#fS};b,y>ZL]w'X", "j-4Cv3kkGlvx[o5<;", "j-4Cv3kkGlvx[o5<;", 2004, (String) null, (-630), 1194, 2004, 90, "Null 'id' argument.", "DROP TABLE ", 1558, (-667), "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      TableColumnInfo tableColumnInfo1 = new TableColumnInfo("j-4Cv3kkGlvx[o5<;", "MY}>qf*IM4^M", "^yMCS>+pjO\"<5;7~#", "a[B,uoH Pnj;a}>-Zd[", 2004, "", 1194, 4, 4, 1558, "^yMCS>+pjO\"<5;7~#", "49UA#fS};b,y>ZL]w'X", 2159, 1389, "MY}>qf*IM4^M");
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[0];
      DBUtil.getColumnList(tableColumnInfoArray0);
      ArrayList<IDatabaseObjectInfo> arrayList0 = new ArrayList<IDatabaseObjectInfo>();
      List<ITableInfo> list0 = DBUtil.convertObjectToTableList(arrayList0);
      List<IDatabaseObjectInfo> list1 = DBUtil.convertTableToObjectList(list0);
      assertTrue(list1.isEmpty());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("+&", "org.jfree.data.xy.XYDataItem", "8DM`");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.createNewDatabaseObjectType("Cxif!.=I_ecSz?3~r");
      ImageIcon imageIcon0 = new ImageIcon();
      DatabaseObjectType.createNewDatabaseObjectType("da5'U8b4`W1[.c");
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.createNewDatabaseObjectType("Null 'id' argument.", (Icon) imageIcon0);
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.createNewDatabaseObjectType("I;m");
      DatabaseObjectType.createNewDatabaseObjectType("4Db8&bwK'GjOTrBY-");
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      DatabaseObjectType databaseObjectType3 = DatabaseObjectType.CATALOG;
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "W'|8::", "#4kAil-`\"");
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.getColumnNames((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("KMRu)qjc)nL30=i", "KMRu)qjc)nL30=i", "#1m", "#R%#\"mF", 1474, "(e\"", 1474, (-4270), (-1275), (-976), "#1m", (String) null, (-1291), (-3295), "V}q");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getApplication();
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SCHEMA;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      SchemaInfo schemaInfo1 = new SchemaInfo((IApplication) null);
      TableColumnInfo tableColumnInfo1 = (TableColumnInfo)DBUtil.getSchemaFromDbObject(tableColumnInfo0, schemaInfo1);
      assertEquals((-976), tableColumnInfo1.isNullAllowed());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      ApplicationFiles applicationFiles1 = new ApplicationFiles();
      ApplicationFiles applicationFiles2 = new ApplicationFiles();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      ApplicationFiles applicationFiles3 = new ApplicationFiles();
      applicationFiles3.getChangeLogFile();
      boolean boolean0 = DBUtil.typesAreEquivalent(16, (-474));
      assertFalse(boolean0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SYNONYM;
      DatabaseObjectType.createNewDatabaseObjectType("u,hu?`/F~");
      FileSystemHandling.shouldAllThrowIOExceptions();
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[8];
      DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
      Stack<IDatabaseObjectInfo> stack0 = new Stack<IDatabaseObjectInfo>();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      ConnectionWrapper connectionWrapper0 = null;
      try {
        connectionWrapper0 = new ConnectionWrapper((Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.ConnectionWrapper", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer0.getOpenIcon();
      ImageIcon imageIcon0 = new ImageIcon(byteArray0, "");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.createNewDatabaseObjectType("sqrt", (Icon) imageIcon0);
      DatabaseObjectType.createNewDatabaseObjectType("sqrt");
      DatabaseObjectType.createNewDatabaseObjectType((String) null);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("", "", "(e\"", "sqrt", 93, "(e\"", 93, (-461), 2066, (-1297), "(e\"", "sqrt", 416, (-3069), "|");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DBUtil.getSchemaNameFromDbObject(tableColumnInfo0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      // Undeclared exception!
      try { 
        DBUtil.getSchemaFromDbObject(tableColumnInfo0, schemaInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // SQLDatabaseMetaData == null
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, "The 'data' is null.", "w", (String) null, (-3681), "!`0R{7IqfHDOb2S%M0", (-3681), (-3681), 0, (-1629), "@EM,sTsThoN=ISHJZ", (String) null, 2159, 3383, "w");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM((DatabaseObjectType) null);
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("sqrt", "@EM,sTsThoN=ISHJZ", "+&");
      TableColumnInfo tableColumnInfo1 = new TableColumnInfo((String) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "q2Hz?ZZJo)2.4", "w", 0, ") REFERENCES ", (-1629), (-1696), (-248), 0, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", " MODIFY ", 2000, 446, "+&");
      tableColumnInfo1.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM((DatabaseObjectType) null);
      // Undeclared exception!
      try { 
        DBUtil.getSchemaNameFromDbObject(tableColumnInfo1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.getPluginUserSettingsFolder();
      dBCopyPlugin1.getDestSession();
      String string0 = DBUtil.getLastStatementValues();
      assertNull(string0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      FileWrapperImpl fileWrapperImpl0 = new FileWrapperImpl("e-Xz(g1pWef+", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      File file0 = applicationFiles0.getLibraryDirectory();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu");
      FileSystemHandling.createFolder(evoSuiteFile0);
      fileWrapperFactoryImpl0.create(file0);
      dBCopyPlugin0.setFileWrapperFactory(fileWrapperFactoryImpl0);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql/logs");
      FileSystemHandling.createFolder(evoSuiteFile1);
      // Undeclared exception!
      try { 
        DBUtil.convertTableToObjectList((List<ITableInfo>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      String string0 = DBUtil.fixCase((ISession) null, (String) null);
      assertNull(string0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.getPluginUserSettingsFolder();
      dBCopyPlugin1.getSourceSession();
      String string0 = DBUtil.fixCase((ISession) null, "");
      assertEquals("", string0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPluginAppSettingsFolder();
      dBCopyPlugin0.getWebSite();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.isKeyword((ISession) null, "(e\"");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      String string0 = "1P_^V$Q0wr2^WBE";
      ForeignKeyInfo foreignKeyInfo0 = mock(ForeignKeyInfo.class, new ViolatedAssumptionAnswer());
      doReturn((DatabaseObjectType) null).when(foreignKeyInfo0).getDatabaseObjectType();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      Connection connection0 = null;
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      // Undeclared exception!
      try { 
        DBUtil.getSchemaFromDbObject(foreignKeyInfo0, schemaInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      boolean boolean0 = DBUtil.typesAreEquivalent(550, 128);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      LinkedList<ITableInfo> linkedList0 = new LinkedList<ITableInfo>();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPluginUserSettingsFolder();
      dBCopyPlugin0.getSourceDatabaseObjects();
      // Undeclared exception!
      try { 
        DBUtil.convertObjectToTableList((List<IDatabaseObjectInfo>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, "The 'data' is null.", "w", (String) null, (-3681), "", (-3681), (-3681), 0, (-1629), "@EM,sTsThoN=ISHJZ", (String) null, 2159, 3383, "w");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.FUNCTION;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM((DatabaseObjectType) null);
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo((String) null, "sqrt", " CASCADE");
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.createNewDatabaseObjectType("Cxif!.=I_ecSz?3~r");
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.createNewDatabaseObjectType("sqrt");
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM((DatabaseObjectType) null);
      DatabaseObjectType databaseObjectType3 = DatabaseObjectType.PROCEDURE;
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      // Undeclared exception!
      try { 
        DBUtil.convertObjectArrayToTableList((IDatabaseObjectInfo[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      System.setCurrentTimeMillis(1000L);
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[2];
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("1PZKN*gw[@", "B|:)0z9Q>B+e(jpo9", "", "The 'month' argument must be in the range 1 to 12.", 104, "", 104, (-3), (-3), (-4860), "", "Encountered unexpected exception while attempting to determine if catalogs are used in table definitions", (-3), (-5091), " from ");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.DATATYPE;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      tableColumnInfoArray0[1] = tableColumnInfo0;
      // Undeclared exception!
      try { 
        DBUtil.getColumnList(tableColumnInfoArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, "The 'data' is null.", "w", (String) null, (-3681), "", (-3681), (-3681), 0, (-1629), "@EM,sTsThoN=ISHJZ", (String) null, 2159, 3383, "w");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM((DatabaseObjectType) null);
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo((String) null, "sqrt", " CASCADE");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.createNewDatabaseObjectType("Cxif!.=I_ecSz?3~r");
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.createNewDatabaseObjectType("sqrt");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM((DatabaseObjectType) null);
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.PROCEDURE;
      DatabaseObjectType.createNewDatabaseObjectType("setApplicationFiles");
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      // Undeclared exception!
      try { 
        DBUtil.getColumnSql(dBCopyPlugin0, tableColumnInfo0, "select sequence_name from information_schema.system_sequences", "@EM,sTsThoN=ISHJZ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.replaceOtherDataType((TableColumnInfo) null, (ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-2);
      byteArray0[1] = (byte)7;
      byteArray0[2] = (byte)7;
      byteArray0[3] = (byte) (-56);
      byteArray0[4] = (byte)4;
      byteArray0[5] = (byte) (-98);
      byteArray0[6] = (byte) (-5);
      byteArray0[7] = (byte)68;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[0];
      DBUtil.getColumnList(tableColumnInfoArray0);
      ArrayList<IDatabaseObjectInfo> arrayList0 = new ArrayList<IDatabaseObjectInfo>();
      Stack<IDatabaseObjectInfo> stack0 = new Stack<IDatabaseObjectInfo>();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestDatabaseObject();
      stack0.add((IDatabaseObjectInfo) null);
      List<ITableInfo> list0 = DBUtil.convertObjectToTableList(stack0);
      List<IDatabaseObjectInfo> list1 = DBUtil.convertTableToObjectList(list0);
      assertEquals(1, list1.size());
      
      List<ITableInfo> list2 = DBUtil.convertObjectArrayToTableList(tableColumnInfoArray0);
      assertFalse(list2.equals((Object)list0));
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.3743147528693496
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-49);
      byteArray0[2] = (byte)62;
      byteArray0[3] = (byte)104;
      byteArray0[4] = (byte) (-59);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("'POc+|'aM%b#`d&t", "LJQ6c4{:", "49UA#fS};b,y>ZL]w'X", "<;,perX3M5*'", (byte)62, "null JInternalFrame passed", (byte)62, (-3300), (-1618), 1805, "'POc+|'aM%b#`d&t", (String) null, 4416, (-1618), "LJQ6c4{:");
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[9];
      tableColumnInfoArray0[0] = tableColumnInfo0;
      tableColumnInfoArray0[1] = tableColumnInfo0;
      tableColumnInfoArray0[2] = tableColumnInfo0;
      tableColumnInfoArray0[3] = tableColumnInfo0;
      tableColumnInfoArray0[4] = tableColumnInfo0;
      tableColumnInfoArray0[5] = tableColumnInfo0;
      tableColumnInfoArray0[6] = tableColumnInfo0;
      tableColumnInfoArray0[7] = tableColumnInfo0;
      tableColumnInfoArray0[8] = tableColumnInfo0;
      DBUtil.getColumnList(tableColumnInfoArray0);
      ArrayList<IDatabaseObjectInfo> arrayList0 = new ArrayList<IDatabaseObjectInfo>();
      Stack<IDatabaseObjectInfo> stack0 = new Stack<IDatabaseObjectInfo>();
      stack0.add((IDatabaseObjectInfo) tableColumnInfo0);
      // Undeclared exception!
      try { 
        DBUtil.convertObjectToTableList(stack0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // net.sourceforge.squirrel_sql.fw.sql.TableColumnInfo cannot be cast to net.sourceforge.squirrel_sql.fw.sql.ITableInfo
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.fixCase((ISession) null, "(e\"");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.checkKeyword((ISession) null, "4\tLa\">x!l?t<PA23Q", "O$9G^~W");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      DBCopyPreferenceBean dBCopyPreferenceBean0 = new DBCopyPreferenceBean();
      DBUtil.setPreferences(dBCopyPreferenceBean0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      dBCopyPlugin0.setFileWrapperFactory(fileWrapperFactoryImpl0);
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.executeQuery((ISession) null, "4'qmhsdc+*^z1o");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      File file0 = applicationFiles0.getLibraryDirectory();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      File file1 = applicationFiles0.getDatabaseDriversFile();
      file0.getAbsoluteFile();
      file0.renameTo(file1);
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      FileWrapperImpl fileWrapperImpl0 = new FileWrapperImpl("sqrt");
      fileWrapperFactoryImpl0.create(file0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.setFileWrapperFactory(fileWrapperFactoryImpl0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "Max function is null for dialect=");
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.getTableInfo((ISession) null, "Max function is null for dialect=", "^mHPHn/IB%t>");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("NzGMW K02s", "NzGMW K02s", " and catalog ", "NzGMW K02s", (-1894), "NzGMW K02s", (-1894), (-1894), 1351, 3397, (String) null, "dlAuTvj{wU5})A", 7, (-1894), "4c*k");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      int int0 = DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      assertEquals((-1894), int0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("9E*", "9E*", (String) null, "9E*", 829, "O$9G^~W", 70, (-573), 829, (-573), "9E*", "#x_9", 5, 890, "9E*");
      DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      TableColumnInfo tableColumnInfo1 = new TableColumnInfo("", "^yMCS>+pjO\"<5;7~#", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (String) null, 70, "KMRu)qjc)nL30=i", 1334, (-3136), 1491, 1800, "^yMCS>+pjO\"<5;7~#", "on commit delete rows", 1800, (-1289), "MY}>qf*IM4^M");
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[5];
      tableColumnInfoArray0[0] = tableColumnInfo1;
      System.setCurrentTimeMillis(829);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("]Lfgeh_j", "]Lfgeh_j", ",\n\tPRIMARY K^Y ");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.BEST_ROW_ID;
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource0 = new DefaultListCellRenderer.UIResource();
      defaultListCellRenderer_UIResource0.getIcon();
      DatabaseObjectType.createNewDatabaseObjectType("]Lfgeh_j", (Icon) null);
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      DatabaseObjectType.createNewDatabaseObjectType("+Ij@FfDF:<1e}R");
      Icon icon0 = defaultTreeCellRenderer0.getOpenIcon();
      DatabaseObjectType.createNewDatabaseObjectType("+Ij@FfDF:<1e}R", icon0);
      DatabaseObjectType.createNewDatabaseObjectType("");
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      String string0 = DBUtil.getSchemaNameFromDbObject(databaseObjectInfo0);
      //  // Unstable assertion: assertEquals("]Lfgeh_j", string0);
      
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getApplication();
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      SQLDriver sQLDriver0 = new SQLDriver(uidIdentifier0);
      //  // Unstable assertion: assertEquals("b92ae49:16ecf0cb843:-7fa3", uidIdentifier0.toString());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin0.getWebSite();
      dBCopyPlugin0.setPasteMenuEnabled(false);
      dBCopyPlugin0.unload();
      // Undeclared exception!
      try { 
        DBUtil.getInsertSQL(dBCopyPlugin0, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (ITableInfo) null, (-2004318069));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      DBUtil.setLastStatement("short");
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, "The 'data' is null.", "w", (String) null, (-3681), "", (-3681), (-3681), 0, (-1629), "@EM,sTsThoN=ISHJZ", (String) null, 2159, 3383, "w");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM((DatabaseObjectType) null);
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("sqrt", "@EM,sTsThoN=ISHJZ", "+&");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.createNewDatabaseObjectType(" CASCADE");
      DatabaseObjectType.createNewDatabaseObjectType("N5_");
      ImageIcon imageIcon0 = new ImageIcon();
      DatabaseObjectType.createNewDatabaseObjectType("mBHsE3");
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.createNewDatabaseObjectType("anK;", (Icon) imageIcon0);
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DatabaseObjectType.createNewDatabaseObjectType("anK;", (Icon) imageIcon0);
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.DATATYPE;
      DatabaseObjectType.createNewDatabaseObjectType("+&", (Icon) imageIcon0);
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      DatabaseObjectType databaseObjectType3 = DatabaseObjectType.PROCEDURE;
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.getMaxColumnLengthSQL((ISession) null, tableColumnInfo0, "\"Yh", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      String string0 = DBUtil.getLastStatement();
      assertNull(string0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.sanityCheckPreferences((ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      applicationFiles0.getSQuirrelJarFile();
      applicationFiles0.getSQuirrelJarFile();
      applicationFiles0.getLicenceFile();
      applicationFiles0.getCellImportExportSelectionsFile();
      ApplicationFiles applicationFiles1 = new ApplicationFiles();
      applicationFiles1.getSQuirrelJarFile();
      applicationFiles1.getEditWhereColsFile();
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      applicationFiles0.getChangeLogFile();
      // Undeclared exception!
      try { 
        DBUtil.getTableCount((ISession) null, "$LT+&", "$LT+&", "HD&P+:e", (-2105376123));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("DEETE FROM ", (String) null, "sqrt");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SYNONYM;
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      Vector<IDatabaseObjectInfo> vector0 = new Vector<IDatabaseObjectInfo>();
      dBCopyPlugin0.setSourceDatabaseObjects(vector0);
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[8];
      iDatabaseObjectInfoArray0[0] = (IDatabaseObjectInfo) databaseObjectInfo0;
      iDatabaseObjectInfoArray0[1] = (IDatabaseObjectInfo) databaseObjectInfo0;
      iDatabaseObjectInfoArray0[2] = (IDatabaseObjectInfo) databaseObjectInfo0;
      iDatabaseObjectInfoArray0[3] = (IDatabaseObjectInfo) databaseObjectInfo0;
      iDatabaseObjectInfoArray0[4] = (IDatabaseObjectInfo) databaseObjectInfo0;
      iDatabaseObjectInfoArray0[5] = (IDatabaseObjectInfo) databaseObjectInfo0;
      iDatabaseObjectInfoArray0[6] = (IDatabaseObjectInfo) databaseObjectInfo0;
      iDatabaseObjectInfoArray0[7] = (IDatabaseObjectInfo) databaseObjectInfo0;
      // Undeclared exception!
      try { 
        DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo cannot be cast to net.sourceforge.squirrel_sql.fw.sql.ITableInfo
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      dBCopyPlugin0.getDestSession();
      String string0 = "s";
      // Undeclared exception!
      try { 
        DBUtil.deleteDataInExistingTable((ISession) null, "s", "s", "f;yH'* {R~-w");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.getTables((ISession) null, "i#3Kk9DV@5fJ_'z", "i#3Kk9DV@5fJ_'z", "A]-}N");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, " ) as row_", "B");
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[9];
      iDatabaseObjectInfoArray0[0] = (IDatabaseObjectInfo) null;
      iDatabaseObjectInfoArray0[1] = (IDatabaseObjectInfo) null;
      iDatabaseObjectInfoArray0[2] = (IDatabaseObjectInfo) null;
      iDatabaseObjectInfoArray0[3] = (IDatabaseObjectInfo) null;
      iDatabaseObjectInfoArray0[5] = (IDatabaseObjectInfo) null;
      iDatabaseObjectInfoArray0[7] = (IDatabaseObjectInfo) null;
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo((String) null, "", "z");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.VIEW;
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.TRIGGER;
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.PROCEDURE;
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "z";
      stringArray0[1] = "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy";
      // Undeclared exception!
      try { 
        DBUtil.getColumnTypes((ISQLConnection) null, (ITableInfo) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      ApplicationFiles applicationFiles1 = new ApplicationFiles();
      ApplicationFiles applicationFiles2 = new ApplicationFiles();
      applicationFiles0.getUserSettingsDirectory();
      applicationFiles2.getCellImportExportSelectionsFile();
      ApplicationFiles applicationFiles3 = new ApplicationFiles();
      applicationFiles2.getCellImportExportSelectionsFile();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      applicationFiles0.getJDBCDebugLogFile();
      applicationFiles2.getEditWhereColsFile();
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      applicationFiles0.getChangeLogFile();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      boolean boolean0 = DBUtil.typesAreEquivalent((-474), (-474));
      assertTrue(boolean0);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      boolean boolean0 = DBUtil.typesAreEquivalent((-798), 2);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      DBUtil dBUtil0 = new DBUtil();
      DialectFactory.isPromptForDialect = true;
      String string0 = "*4D)s{8^)X";
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      int int0 = 0;
      dBCopyPlugin0.setPasteToTableName("");
      dBCopyPlugin0.setCopyMenuEnabled(true);
      // Undeclared exception!
      try { 
        DBUtil.dropTable("*4D)s{8^)X", "*4D)s{8^)X", "*4D)s{8^)X", (ISession) null, true, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      DBUtil.setLastStatementValues("");
      ForeignKeyInfo foreignKeyInfo0 = mock(ForeignKeyInfo.class, new ViolatedAssumptionAnswer());
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPluginUserSettingsFolder();
      // Undeclared exception!
      try { 
        DBUtil.tableHasForeignKey("", "", "", foreignKeyInfo0, dBCopyPlugin0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      System.setCurrentTimeMillis((-666L));
      // Undeclared exception!
      try { 
        DBUtil.getCatSep((ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      System.setCurrentTimeMillis(1000L);
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      applicationFiles0.getLibraryDirectory();
      applicationFiles0.getSQuirrelJarFile();
      ApplicationFiles applicationFiles1 = new ApplicationFiles();
      applicationFiles1.getExecutionLogFile();
      applicationFiles1.getSQuirrelJarFile();
      applicationFiles0.getPluginsUserSettingsDirectory();
      applicationFiles1.getUserPreferencesFile();
      applicationFiles0.getLicenceFile();
      applicationFiles0.getUserSettingsDirectory();
      applicationFiles1.getCellImportExportSelectionsFile();
      ApplicationFiles applicationFiles2 = new ApplicationFiles();
      applicationFiles1.getUserPreferencesFile();
      ApplicationFiles applicationFiles3 = new ApplicationFiles();
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      ApplicationFiles applicationFiles4 = new ApplicationFiles();
      applicationFiles3.getChangeLogFile();
      // Undeclared exception!
      try { 
        DBUtil.sameDatabaseType((ISession) null, (ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.getQualifiedObjectName((ISession) null, "a[B,uoH Pnj;a}>-Zd[", "bin width", "md5", 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }
}
