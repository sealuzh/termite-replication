/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 04:03:45 GMT 2019
 */


import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Services_ESTest extends Services_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.5012592323783793
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-108);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-102);
      byteArray0[3] = (byte)1;
      byteArray0[4] = (byte)92;
      byteArray0[2] = (byte)0;
      byteArray0[6] = (byte)121;
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, (byte[]) null);
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://:486");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, ";");
      EvoSuiteURL evoSuiteURL1 = new EvoSuiteURL("http://k7Y], FGLI6(WOupjL;:0");
      NetworkHandling.createRemoteTextFile(evoSuiteURL1, ";");
      EvoSuiteLocalAddress evoSuiteLocalAddress0 = new EvoSuiteLocalAddress("192.168.1.42", 40001);
      NetworkHandling.sendMessageOnTcp(evoSuiteLocalAddress0, "$LZis<T0*>)$5Pp4b\"");
      Services.HTTP_Result services_HTTP_Result0 = new Services.HTTP_Result();
      assertEquals(0, services_HTTP_Result0.code);
      assertEquals(0L, services_HTTP_Result0.time);
      assertFalse(services_HTTP_Result0.works);
      assertEquals(0, services_HTTP_Result0.page_weight);
      
      Services.SIMPLE_Result services_SIMPLE_Result0 = new Services.SIMPLE_Result();
      assertEquals(0L, services_SIMPLE_Result0.time);
      assertFalse(services_SIMPLE_Result0.works);
      
      Services.HTTP_Result services_HTTP_Result1 = Services.testHTTP("", 486);
      assertTrue(services_HTTP_Result1.works);
      
      Services.HTTP_Result services_HTTP_Result2 = Services.testHTTP("k7Y], FGLI6(WOupjL;", (byte)0);
      assertEquals(2, services_HTTP_Result2.page_weight);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("200.42.42.0", 2786);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testPOP3("** Err(ur g\u00E9n\u00E9r\u00E9e : ", 2786);
      assertEquals(0L, services_SIMPLE_Result0.time);
      assertFalse(services_SIMPLE_Result0.works);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("200.42.42.0", 27);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      System.setCurrentTimeMillis(1051L);
      System.setCurrentTimeMillis(1051L);
      System.setCurrentTimeMillis(1051L);
      System.setCurrentTimeMillis(1051L);
      System.setCurrentTimeMillis(1051L);
      System.setCurrentTimeMillis(1051L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(1051L);
      Services.testSMTP("Aa(7sc6", 27);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(1789L);
      System.setCurrentTimeMillis(1051L);
      System.setCurrentTimeMillis(1789L);
      System.setCurrentTimeMillis(37L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-3340L));
      System.setCurrentTimeMillis(1789L);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.6545216946179053
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testSMTP("<8\"<bpfTOQE^|3", 0);
      String string0 = services_SIMPLE_Result0.toString();
      Services.SIMPLE_Result services_SIMPLE_Result1 = Services.testSMTP("^3C+AI[n]|!oqj]O", 0);
      Services.HTTP_Result services_HTTP_Result0 = new Services.HTTP_Result();
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("https://:0");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "**** Resultat : \n** Fonctionnement : false\n** Temps : 0 ms\n** Erreur g\u00E9n\u00E9r\u00E9e : **Erreur d'E/S** (java.io.IOException: Remote address/port is not opened: org.evosuite.runtime.vnet.EndPointInfo@4a1646b7) **.\n****");
      services_SIMPLE_Result0.reset();
      services_HTTP_Result0.reset();
      assertEquals(0L, services_HTTP_Result0.time);
      assertFalse(services_HTTP_Result0.works);
      assertEquals(0, services_HTTP_Result0.code);
      assertEquals(0, services_HTTP_Result0.page_weight);
      
      EvoSuiteLocalAddress evoSuiteLocalAddress0 = new EvoSuiteLocalAddress("192.168.1.42", 40001);
      NetworkHandling.sendMessageOnTcp(evoSuiteLocalAddress0, "");
      String string1 = services_SIMPLE_Result1.toString();
      assertFalse(string1.equals((Object)string0));
      
      Services.HTTP_Result services_HTTP_Result1 = Services.testHTTPS("", 0);
      assertTrue(services_HTTP_Result1.works);
      assertEquals(211, services_HTTP_Result1.page_weight);
      
      Services.HTTP_Result services_HTTP_Result2 = new Services.HTTP_Result();
      Services.SIMPLE_Result services_SIMPLE_Result2 = new Services.SIMPLE_Result();
      assertFalse(services_SIMPLE_Result2.works);
      assertEquals(0L, services_SIMPLE_Result2.time);
      
      Services services0 = new Services();
      Services.testHTTPS("ew/ml/]<yTJ{", (-1));
      Services.HTTP_Result services_HTTP_Result3 = new Services.HTTP_Result();
      Services.testHTTP("**Erreur d'E/S** (java.io.IOException: Remote address/port is not opened: org.evosuite.runtime.vnet.EndPointInfo@4a164a78) **", 0);
      Services.SIMPLE_Result services_SIMPLE_Result3 = Services.testSMTP("", (-1));
      assertFalse(services_SIMPLE_Result3.works);
      assertEquals(0L, services_SIMPLE_Result3.time);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.370640645235503
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, (byte[]) null);
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://:486");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, ";");
      Services.HTTP_Result services_HTTP_Result0 = new Services.HTTP_Result();
      EvoSuiteURL evoSuiteURL1 = new EvoSuiteURL("https://:0");
      NetworkHandling.createRemoteTextFile(evoSuiteURL1, "(N;~k");
      services_HTTP_Result0.reset();
      assertEquals(0, services_HTTP_Result0.code);
      assertFalse(services_HTTP_Result0.works);
      assertEquals(0L, services_HTTP_Result0.time);
      assertEquals(0, services_HTTP_Result0.page_weight);
      
      EvoSuiteLocalAddress evoSuiteLocalAddress0 = new EvoSuiteLocalAddress("192.168.1.42", 40001);
      NetworkHandling.sendMessageOnTcp(evoSuiteLocalAddress0, "Cht");
      Services.HTTP_Result services_HTTP_Result1 = new Services.HTTP_Result();
      Services.SIMPLE_Result services_SIMPLE_Result0 = new Services.SIMPLE_Result();
      services_SIMPLE_Result0.reset();
      assertFalse(services_SIMPLE_Result0.works);
      assertEquals(0L, services_SIMPLE_Result0.time);
      
      Services services0 = new Services();
      Services.HTTP_Result services_HTTP_Result2 = Services.testHTTPS("", 0);
      assertTrue(services_HTTP_Result2.works);
      assertEquals(6, services_HTTP_Result2.page_weight);
      
      Services.HTTP_Result services_HTTP_Result3 = Services.testHTTP("", 486);
      assertTrue(services_HTTP_Result3.works);
      assertEquals(2, services_HTTP_Result3.page_weight);
      
      Services.HTTP_Result services_HTTP_Result4 = Services.testHTTPS("LZKGlesE;+38N`jl?", (-6073));
      assertEquals(0, services_HTTP_Result4.code);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      System.setCurrentTimeMillis(1019L);
      System.setCurrentTimeMillis(1019L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(1019L);
      System.setCurrentTimeMillis(65L);
      System.setCurrentTimeMillis(241L);
      System.setCurrentTimeMillis(1019L);
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTPS((String) null, 0);
      assertEquals(0, services_HTTP_Result0.code);
      assertFalse(services_HTTP_Result0.works);
      assertEquals(0, services_HTTP_Result0.page_weight);
      assertEquals(0L, services_HTTP_Result0.time);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      System.setCurrentTimeMillis(1051L);
      System.setCurrentTimeMillis(1051L);
      System.setCurrentTimeMillis(1051L);
      System.setCurrentTimeMillis(1051L);
      System.setCurrentTimeMillis(1051L);
      System.setCurrentTimeMillis(1051L);
      System.setCurrentTimeMillis(2769L);
      System.setCurrentTimeMillis(0L);
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTP((String) null, 0);
      assertFalse(services_HTTP_Result0.works);
      assertEquals(0, services_HTTP_Result0.page_weight);
      assertEquals(0L, services_HTTP_Result0.time);
      assertEquals(0, services_HTTP_Result0.code);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.8624848373103666
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = new Services.HTTP_Result();
      services_HTTP_Result0.works = false;
      services_HTTP_Result0.page_weight = 97;
      services_HTTP_Result0.toString();
      services_HTTP_Result0.toString();
      services_HTTP_Result0.reset();
      assertEquals(0, services_HTTP_Result0.page_weight);
      
      Services.testHTTP("**** Resultat : \n** Fonctionnement : false\n** Temps : 0 ms\n** Poid de la page : 97 octets\n** Code de page : 0\n** Erreur g\u00E9n\u00E9r\u00E9e : .\n****", 97);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0);
      System.setCurrentTimeMillis(1L);
      Services.HTTP_Result services_HTTP_Result1 = Services.testHTTP("**** Resultat : \n** Fonctionnement : false\n** Temps : 0 ms\n** Poid de la page : 97 octets\n** Code de page : 0\n** Erreur g\u00E9n\u00E9r\u00E9e : .\n****", 0);
      assertEquals(0L, services_HTTP_Result1.time);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, (String) null);
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTP("", (-1846));
      assertEquals(0, services_HTTP_Result0.page_weight);
      assertEquals(0, services_HTTP_Result0.code);
      assertEquals(0L, services_HTTP_Result0.time);
      assertFalse(services_HTTP_Result0.works);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      System.setCurrentTimeMillis(1051L);
      System.setCurrentTimeMillis(1051L);
      System.setCurrentTimeMillis(1051L);
      System.setCurrentTimeMillis(1051L);
      System.setCurrentTimeMillis(1051L);
      System.setCurrentTimeMillis(1051L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(1051L);
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis(23L);
      System.setCurrentTimeMillis((-5L));
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testPOP3("b#IXf{D0~/e|zQ=O!", (-24));
      System.setCurrentTimeMillis(2199L);
      services_SIMPLE_Result0.reset();
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis(23L);
      services_SIMPLE_Result0.time = 0L;
      System.setCurrentTimeMillis((-1140L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-497L));
      System.setCurrentTimeMillis(23L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(23L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis((-1L));
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      System.setCurrentTimeMillis(1051L);
      System.setCurrentTimeMillis(1051L);
      System.setCurrentTimeMillis(1051L);
      System.setCurrentTimeMillis(1051L);
      System.setCurrentTimeMillis(1051L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(1051L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-20L));
      System.setCurrentTimeMillis((-110L));
      System.setCurrentTimeMillis(2332L);
      System.setCurrentTimeMillis((-20L));
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-5L));
      System.setCurrentTimeMillis((-5L));
      System.setCurrentTimeMillis(2199L);
      Services.SIMPLE_Result services_SIMPLE_Result0 = new Services.SIMPLE_Result();
      System.setCurrentTimeMillis(0L);
      Services.testPOP3("", 0);
      System.setCurrentTimeMillis(1L);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTP("", 2202);
      String string0 = services_HTTP_Result0.toString();
      assertEquals("**** Resultat : \n** Fonctionnement : false\n** Temps : 0 ms\n** Poid de la page : 0 octets\n** Code de page : 0\n** Erreur g\u00E9n\u00E9r\u00E9e : **Erreur d'E/S** (org.evosuite.runtime.mock.java.lang.MockThrowable: Could not find: ) **.\n****", string0);
      
      Services.SIMPLE_Result services_SIMPLE_Result0 = new Services.SIMPLE_Result();
      String string1 = services_SIMPLE_Result0.toString();
      assertEquals("**** Resultat : \n** Fonctionnement : false\n** Temps : 0 ms\n** Erreur g\u00E9n\u00E9r\u00E9e : .\n****", string1);
      
      Services.SIMPLE_Result services_SIMPLE_Result1 = new Services.SIMPLE_Result();
      assertEquals(0L, services_SIMPLE_Result1.time);
  }
}
