/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 04:19:23 GMT 2019
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.ConcurrentModificationException;
import java.util.LinkedList;
import java.util.function.Consumer;
import java.util.function.UnaryOperator;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.7240832147670284
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.cloneAttributes(rawVariable0);
      User user1 = new User();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      rawVariable0.addSupportingDocuments(arrayList0);
      rawVariable0.setLabel("j!W|*3yZl692&");
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.validateFields(valueLabel0);
      User user2 = new User("", "'`");
      User user3 = new User("variable.codeBookNumber.label", "^hLr!MrSX!.}]C1!*s");
      User user4 = new User();
      Variable.detectFieldChanges(user2, derivedVariable0, rawVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      assertEquals("j!W|*3yZl692&", rawVariable0.getLabel());
      
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.getCategory();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.codeBookNumber = "zh]t";
      String string0 = rawVariable2.getLabel();
      assertEquals("", string0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.7033397414189606
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      User user1 = new User();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable derivedVariable2 = (DerivedVariable)derivedVariable1.clone();
      assertFalse(derivedVariable2.isCleaned());
      assertFalse(derivedVariable2.isCoded());
      assertEquals("Unknown", derivedVariable2.getCleaningStatus());
      assertEquals("Unknown", derivedVariable2.getCategory());
      assertEquals("0", derivedVariable2.getDisplayItemIdentifier());
      assertEquals("Unknown", derivedVariable2.getAvailability());
      
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      linkedList0.add((Object) user0);
      arrayList0.add((SupportingDocument) null);
      linkedList0.clone();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      arrayList0.retainAll(linkedList0);
      rawVariable0.addSupportingDocuments(arrayList0);
      rawVariable0.setLabel("");
      rawVariable0.addSupportingDocument(supportingDocument0);
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.validateFields(valueLabel0);
      User user2 = new User("", "DUPLICATE_SOURCE_VARIABLE_EXISTS");
      User user3 = new User("DUPLICATE_SOURCE_VARIABLE_EXISTS", ")@)Vp|a&hg1dX]N?t");
      User user4 = new User();
      Variable.detectFieldChanges(user3, derivedVariable1, derivedVariable0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument1);
      assertTrue(boolean0);
      
      rawVariable0.getCategory();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.getLabel();
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.795705399097318
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      user0.setUserID("cza&<");
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      UnaryOperator<ValueLabel> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator.identity();
      ArrayList<ValueLabel> arrayList1 = derivedVariable0.getValueLabels();
      arrayList1.replaceAll(unaryOperator0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setIdentifier((-132));
      derivedVariable1.getValueLabels();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setValueLabels(arrayList0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable1.createVariableSummary();
      rawVariable0.cloneAttributes(derivedVariable2);
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.991399057996719
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnStart = "xLv@f1e493+iXf";
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      RawVariable rawVariable1 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable2 = new RawVariable();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertTrue(boolean0);
      
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      assertEquals(1, arrayList0.size());
      
      rawVariable0.getOntologyTerms();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      arrayList1.spliterator();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      rawVariable2.containsOntologyTerm(ontologyTerm3);
      ArrayList<Variable> arrayList2 = new ArrayList<Variable>();
      derivedVariable0.setSourceVariables(arrayList2);
      derivedVariable0.updateOntologyTerm(ontologyTerm2);
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.2825204398945615
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.setQuestionNumber("9imF?uUu");
      User.detectFieldChanges(user0, user0, user0);
      user0.setFirstName("q!>ehM(WjQL!+u");
      rawVariable0.setCoded(true);
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      ontologyTerm0.setIdentifier((-980));
      rawVariable0.setCategory("9imF?uUu");
      ontologyTerm0.setNameSpace("]AYV~,P+6c^N)Cb");
      rawVariable0.setColumnStart("]AYV~,P+6c^N)Cb");
      rawVariable0.form = "`o79Vy<9nfZx(&";
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      System.setCurrentTimeMillis((-980));
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm1);
      rawVariable0.getFilePath();
      rawVariable0.getForm();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.3628433742803376
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable1.addSupportingDocument(supportingDocument0);
      derivedVariable0.removeOntologyTerms(arrayList0);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      user0.setLastName("variable.codeBookNumber.label");
      RawVariable rawVariable0 = new RawVariable();
      User user1 = new User();
      user0.setUserID("?e$j7@6g2<yl");
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      UnaryOperator<ValueLabel> unaryOperator0 = UnaryOperator.identity();
      arrayList0.replaceAll(unaryOperator0);
      derivedVariable0.setFilePath("?e$j7@6g2<yl");
      ArrayList<ValueLabel> arrayList1 = derivedVariable0.getValueLabels();
      rawVariable0.setValueLabels(arrayList1);
      derivedVariable0.getFilePath();
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.6309814450048234
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.clone();
      derivedVariable0.cloneAttributes(rawVariable0);
      User user1 = new User();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.addValueLabel(valueLabel0);
      rawVariable0.clone();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setNotes("lyjw@|Cwl=O-hLh{");
      rawVariable0.clone();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable0.setCleaningStatus((String) null);
      assertEquals("lyjw@|Cwl=O-hLh{", rawVariable0.getNotes());
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      rawVariable1.codeBookNumber = null;
      derivedVariable0.addSourceVariable(derivedVariable1);
      derivedVariable0.clone();
      rawVariable1.getCodeBookNumber();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      boolean boolean0 = rawVariable2.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.3511604142318068
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      User user1 = new User();
      user0.setPostCode((String) null);
      user0.setUserID("?e$j7@6g2<yl");
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      UnaryOperator<ValueLabel> unaryOperator0 = UnaryOperator.identity();
      arrayList0.replaceAll(unaryOperator0);
      derivedVariable0.getValueLabels();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setValueLabels(arrayList0);
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user1, derivedVariable0, derivedVariable0);
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      
      derivedVariable0.setCleaningDescription("?e$j7@6g2<yl");
      rawVariable1.getAlternativeVariable();
      assertFalse(rawVariable1.isCleaned());
      assertFalse(rawVariable1.isNewRecord());
      assertFalse(rawVariable1.isCoded());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      ArrayList<Variable> arrayList2 = derivedVariable0.getSourceVariables();
      arrayList2.spliterator();
      derivedVariable0.setSourceVariables(arrayList2);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.getColumnEnd();
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.805383313963734
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getSourceVariables();
      ArrayList<ValueLabel> arrayList0 = derivedVariable0.getValueLabels();
      arrayList0.clear();
      derivedVariable0.setValueLabels(arrayList0);
      arrayList0.clear();
      derivedVariable0.setValueLabels(arrayList0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User(",8rKY/>8w2'Fow3,Fk", "KR}!6'R<AWSce");
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.clear();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      rawVariable0.removeOntologyTerms(arrayList1);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User.checkValidUserIDField("");
      User user0 = new User("-(Z0=&Z'b", "-(Z0=&Z'b");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      // Undeclared exception!
      try { 
        rawVariable0.updateOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = ")9]\"wR;*dG)X&j9z-b";
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = "j!W|*3yZl692&";
      derivedVariable0.hasSameDisplayName(rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getName());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.781763783828019
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getFilePath();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.setOntologyTerms(arrayList0);
      arrayList0.add(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<ValueLabel> arrayList1 = rawVariable0.getValueLabels();
      rawVariable0.setValueLabels(arrayList1);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.getSupportingDocuments();
      derivedVariable1.setNotes("cza&<");
      User user0 = new User("UNABLE_TO_CHECK_CATEGORY_DUPLICATE", "bIS -6T'pLyxLzaZ");
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable1);
      derivedVariable0.getDisplayItemIdentifier();
      derivedVariable1.createVariableSummary();
      assertEquals("cza&<", derivedVariable1.getNotes());
      
      rawVariable0.cloneAttributes(derivedVariable0);
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.784066574475527
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getSourceVariables();
      ArrayList<ValueLabel> arrayList0 = derivedVariable0.getValueLabels();
      arrayList0.clear();
      derivedVariable0.setValueLabels(arrayList0);
      arrayList0.clear();
      derivedVariable0.setValueLabels(arrayList0);
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument0);
      Integer integer0 = new Integer((-1505));
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      Integer[] integerArray0 = new Integer[3];
      integerArray0[0] = integer0;
      integerArray0[1] = integer0;
      integerArray0[2] = integer0;
      arrayList1.toArray(integerArray0);
      rawVariable0.containsSupportingDocument(supportingDocument0);
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      rawVariable0.removeOntologyTerms(arrayList2);
      rawVariable0.getOntologyTerms();
      ArrayList<SupportingDocument> arrayList3 = rawVariable0.getSupportingDocuments();
      arrayList3.spliterator();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.createVariableSummary();
      // Undeclared exception!
      try { 
        rawVariable0.cloneAttributes((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.7015046708135313
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User("'fH4km)fMy~C%a", "T$t;a}>THn8Kn2");
      User.checkValidUserIDField("");
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.cloneAttributes(rawVariable1);
      rawVariable1.setIdentifier(137);
      user0.setPostCode("{pQYb3");
      rawVariable1.getIdentifier();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable1, rawVariable0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.addSourceVariables((ArrayList<Variable>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.753213615499029
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getSourceVariables();
      ArrayList<ValueLabel> arrayList0 = derivedVariable0.getValueLabels();
      arrayList0.clear();
      derivedVariable0.setValueLabels(arrayList0);
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.cloneAttributes(rawVariable0);
      User user0 = new User();
      user0.setUserID("EDIT");
      ArrayList<ValueLabel> arrayList1 = new ArrayList<ValueLabel>();
      UnaryOperator<ValueLabel> unaryOperator0 = UnaryOperator.identity();
      arrayList1.replaceAll(unaryOperator0);
      rawVariable0.setValueLabels(arrayList1);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.getSupportingDocuments();
      derivedVariable0.setNotes("EDIT");
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable1);
      derivedVariable1.getDisplayItemIdentifier();
      rawVariable0.setCleaningDescription("6!RmC[t[y471");
      assertEquals("6!RmC[t[y471", rawVariable0.getCleaningDescription());
      
      boolean boolean0 = derivedVariable1.isNewRecord();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.6829388630505053
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      Integer integer0 = new Integer(2147483645);
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      Integer integer1 = new Integer(52);
      Integer[] integerArray0 = new Integer[7];
      integerArray0[0] = integer0;
      integerArray0[1] = integer1;
      integerArray0[2] = integer1;
      integerArray0[3] = integer1;
      integerArray0[4] = integer1;
      integerArray0[5] = integer1;
      integerArray0[6] = integer1;
      arrayList0.toArray(integerArray0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      RawVariable rawVariable3 = new RawVariable();
      rawVariable3.removeOntologyTerms(arrayList0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      ArrayList<SupportingDocument> arrayList2 = rawVariable1.getSupportingDocuments();
      ArrayList<SupportingDocument> arrayList3 = new ArrayList<SupportingDocument>();
      arrayList2.spliterator();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      RawVariable rawVariable4 = new RawVariable();
      boolean boolean1 = rawVariable4.containsOntologyTerm(ontologyTerm0);
      assertTrue(boolean1 == boolean0);
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      rawVariable2.removeOntologyTerm(ontologyTerm0);
      rawVariable4.removeOntologyTerm(ontologyTerm0);
      rawVariable3.getForm();
      assertFalse(rawVariable3.isCoded());
      assertEquals("0", rawVariable3.getDisplayItemIdentifier());
      assertFalse(rawVariable3.isCleaned());
      assertFalse(rawVariable3.isNewRecord());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      derivedVariable0.getLabel();
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable0.hasSameDisplayName(rawVariable1);
      assertFalse(rawVariable1.isCleaned());
      assertFalse(rawVariable1.isCoded());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.7297569640770534
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getFilePath();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.setOntologyTerms(arrayList0);
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setOntologyName("macaw.util.ValidationUtility");
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      arrayList0.add(ontologyTerm3);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.addSupportingDocument((SupportingDocument) null);
      derivedVariable0.removeOntologyTerms(arrayList0);
      // Undeclared exception!
      try { 
        derivedVariable1.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.setOntologyTerms(arrayList0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.form = "EDIT";
      String string0 = rawVariable0.getAlias();
      assertEquals("", string0);
      
      String string1 = rawVariable0.getCodeBookNumber();
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", string1);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.3597473990481395
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.add(ontologyTerm0);
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList0.sort(comparator0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addSupportingDocument((SupportingDocument) null);
      derivedVariable0.removeOntologyTerms(arrayList0);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      arrayList1.add((SupportingDocument) null);
      derivedVariable0.removeSupportingDocuments(arrayList1);
      derivedVariable0.getCodeBookNumber();
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.701058739932818
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.cloneAttributes(rawVariable0);
      User user1 = new User();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      UnaryOperator<ValueLabel> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator.identity();
      arrayList0.replaceAll(unaryOperator0);
      ArrayList<ValueLabel> arrayList1 = derivedVariable0.getValueLabels();
      rawVariable0.setValueLabels(arrayList1);
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, derivedVariable0);
      derivedVariable0.setCleaningDescription("Yy+@k4=DH<3{hE");
      assertEquals("Yy+@k4=DH<3{hE", derivedVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.833550309699238
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getSourceVariables();
      ArrayList<ValueLabel> arrayList0 = derivedVariable0.getValueLabels();
      arrayList0.clear();
      derivedVariable0.setValueLabels(arrayList0);
      arrayList0.clear();
      derivedVariable0.setValueLabels(arrayList0);
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.removeValueLabel(valueLabel0);
      arrayList0.ensureCapacity(3919);
      derivedVariable0.cloneAttributes(rawVariable0);
      User user0 = new User();
      user0.setUserID("EDIT");
      ArrayList<ValueLabel> arrayList1 = new ArrayList<ValueLabel>();
      UnaryOperator<ValueLabel> unaryOperator0 = UnaryOperator.identity();
      derivedVariable0.setCleaned(true);
      arrayList0.replaceAll(unaryOperator0);
      rawVariable0.setValueLabels(arrayList0);
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, rawVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user1 = new User();
      Variable.detectChangesInAlternativeVariable(user1, derivedVariable0, rawVariable0);
      derivedVariable1.setCleaningDescription("");
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      User user1 = new User();
      user0.setUserID("?e$j7@6g2<yl");
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      UnaryOperator<ValueLabel> unaryOperator0 = UnaryOperator.identity();
      arrayList0.replaceAll(unaryOperator0);
      ArrayList<ValueLabel> arrayList1 = derivedVariable0.getValueLabels();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.differencesExist(user0, derivedVariable0, valueLabel0, valueLabel0);
      arrayList1.add(valueLabel0);
      rawVariable0.setValueLabels(arrayList1);
      rawVariable0.setIsNewRecord(false);
      assertFalse(rawVariable0.isNewRecord());
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.removeSourceVariable(derivedVariable0);
      derivedVariable0.getFilePath();
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.206552161926179
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.getSourceVariables();
      ontologyTerm0.setTerm("Th");
      ArrayList<Variable> arrayList2 = new ArrayList<Variable>();
      derivedVariable0.setSourceVariables(arrayList2);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.getDisplayName();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getFilePath();
      derivedVariable0.getColumnEnd();
      derivedVariable0.getColumnStart();
      // Undeclared exception!
      try { 
        derivedVariable0.containsSupportingDocument((SupportingDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.880653893488026
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.addValueLabel(valueLabel0);
      arrayList0.clear();
      rawVariable0.removeOntologyTerms(arrayList0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      Integer[] integerArray0 = new Integer[3];
      Integer integer0 = new Integer(103);
      integerArray0[0] = integer0;
      Integer integer1 = new Integer(2147483645);
      integerArray0[1] = integer1;
      Integer integer2 = new Integer((-1776));
      integerArray0[2] = integer2;
      arrayList0.toArray(integerArray0);
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.removeOntologyTerms(arrayList0);
      rawVariable0.getOntologyTerms();
      ArrayList<SupportingDocument> arrayList1 = rawVariable0.getSupportingDocuments();
      arrayList1.spliterator();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.createVariableSummary();
      rawVariable0.setCleaningDescription("UNABLE_TO_GET_VARIABLE_NAMES");
      assertEquals("UNABLE_TO_GET_VARIABLE_NAMES", rawVariable0.getCleaningDescription());
      
      derivedVariable0.getCategory();
      derivedVariable0.getCleaningDescription();
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.addValueLabel(valueLabel0);
      arrayList0.clear();
      rawVariable0.removeOntologyTerms(arrayList0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User.checkValidUserIDField("");
      Integer[] integerArray0 = new Integer[3];
      Integer integer0 = new Integer(103);
      integerArray0[0] = integer0;
      Integer integer1 = new Integer(2147483645);
      integerArray0[1] = integer1;
      Integer integer2 = new Integer((-1776));
      integerArray0[2] = integer2;
      arrayList0.toArray(integerArray0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeValueLabel(valueLabel0);
      derivedVariable0.getFilePath();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.714538987716672
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.createVariableSummary();
      User user1 = new User("KR}!6'R<AWSce", "FD,^>oO(");
      User user2 = new User(".u}(", "KR}!6'R<AWSce");
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user2, derivedVariable0, derivedVariable0);
      assertTrue(arrayList0.isEmpty());
      
      User user3 = new User("", "");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user3, derivedVariable0, derivedVariable1);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertNotNull(macawChangeEvent0);
      
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals(0, rawVariable1.getIdentifier());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertFalse(rawVariable1.isCoded());
      
      derivedVariable1.isCoded();
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("Unknown", derivedVariable1.getCategory());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=3.8216225662622425
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getName();
      derivedVariable0.getYear();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.createVariableSummary();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      derivedVariable0.addSupportingDocuments(arrayList1);
      derivedVariable0.addSourceVariables(arrayList0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setYear("variable.columnEnd.label");
      assertEquals("variable.columnEnd.label", rawVariable0.getYear());
      
      derivedVariable0.cloneAttributes(rawVariable0);
      derivedVariable0.setForm("");
      derivedVariable0.getCategory();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.addValueLabel(valueLabel0);
      derivedVariable0.getCategory();
      derivedVariable0.setQuestionNumber("");
      rawVariable0.getAvailability();
      rawVariable0.setCoded(false);
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=3.7031725825623267
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnStart = "xLv@f1e493+iXf";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      Object object0 = rawVariable0.clone();
      linkedList0.add(object0);
      linkedList0.clone();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      arrayList0.retainAll(linkedList0);
      rawVariable0.addSupportingDocuments(arrayList0);
      rawVariable0.setLabel("UNABLE_TO_GET_CATEGORIES_FOR_VARIABLE");
      rawVariable0.addSupportingDocument(supportingDocument0);
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.validateFields(valueLabel0);
      User user0 = new User("xLv@f1e493+iXf", "EDIT");
      User user1 = new User();
      Variable.detectFieldChanges(user1, rawVariable0, rawVariable0);
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.getCategory();
      rawVariable0.getName();
      assertEquals("UNABLE_TO_GET_CATEGORIES_FOR_VARIABLE", rawVariable0.getLabel());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.5806789212792607
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      user0.setUserID("?e$j7@6g2<yl");
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      UnaryOperator<ValueLabel> unaryOperator0 = UnaryOperator.identity();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.removeValueLabel(valueLabel0);
      arrayList0.replaceAll(unaryOperator0);
      derivedVariable0.getValueLabels();
      rawVariable0.setValueLabels(arrayList0);
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      derivedVariable0.setCleaningDescription("CNE?(r\"$n3&Au");
      assertEquals("CNE?(r\"$n3&Au", derivedVariable0.getCleaningDescription());
      
      String string0 = rawVariable0.getAvailability();
      assertEquals("Unknown", string0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.5168760810714366
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.addValueLabel(valueLabel0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList0.add(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      derivedVariable0.removeOntologyTerms(arrayList0);
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      // Undeclared exception!
      try { 
        derivedVariable0.removeSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.744313326343785
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.addValueLabel(valueLabel0);
      arrayList0.clear();
      rawVariable0.removeOntologyTerms(arrayList0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      Integer[] integerArray0 = new Integer[1];
      Integer integer0 = new Integer(0);
      integerArray0[0] = integer0;
      arrayList0.toArray(integerArray0);
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.removeOntologyTerms(arrayList0);
      rawVariable0.getOntologyTerms();
      ArrayList<SupportingDocument> arrayList1 = rawVariable0.getSupportingDocuments();
      arrayList1.spliterator();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      arrayList1.add(supportingDocument0);
      arrayList1.retainAll(linkedList0);
      rawVariable0.addSupportingDocuments(arrayList1);
      rawVariable0.setLabel("^#L>ylnEd}cyms");
      rawVariable0.addSupportingDocument(supportingDocument0);
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel.validateFields(valueLabel1);
      rawVariable0.addValueLabel(valueLabel1);
      rawVariable0.clone();
      rawVariable0.clone();
      rawVariable0.setCleaningStatus("^#L>ylnEd}cyms");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addSourceVariable(rawVariable0);
      assertEquals("^#L>ylnEd}cyms", rawVariable0.getCleaningStatus());
      assertEquals("^#L>ylnEd}cyms", rawVariable0.getLabel());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=3.660775753389135
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.setOntologyTerms(arrayList0);
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      derivedVariable0.removeOntologyTerms(arrayList0);
      assertFalse(arrayList0.contains(ontologyTerm0));
      
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.cloneAttributes(rawVariable0);
      assertEquals("Unknown", rawVariable0.getCategory());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.4221006252457893
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.addValueLabel(valueLabel0);
      arrayList0.clear();
      rawVariable0.removeOntologyTerms(arrayList0);
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.hasSameDisplayName(rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable1.removeOntologyTerm(ontologyTerm0);
      assertFalse(rawVariable1.isNewRecord());
      assertFalse(rawVariable1.isCleaned());
      assertFalse(rawVariable1.isCoded());
      assertEquals(0, rawVariable1.getIdentifier());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.885368478385633
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList0.add(supportingDocument1);
      rawVariable0.addSupportingDocuments(arrayList0);
      rawVariable0.setLabel("UNABLE_TO_GET_CATEGORIES_FOR_VARIABLE");
      rawVariable0.addSupportingDocument(supportingDocument0);
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.validateFields(valueLabel0);
      User user1 = new User("UNABLE_TO_GET_CATEGORIES_FOR_VARIABLE", "j!W|*3yZl692&");
      User user2 = new User("xLv@f1e493+iXf", "valueLabel.value.saveChanges");
      User user3 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      rawVariable0.containsSupportingDocument(supportingDocument1);
      rawVariable0.getCategory();
      assertEquals("UNABLE_TO_GET_CATEGORIES_FOR_VARIABLE", rawVariable0.getLabel());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.206552161926179
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      derivedVariable0.getSourceVariables();
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      arrayList2.spliterator();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm1);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ontologyTerm1.setDescription("EDIT");
      boolean boolean1 = derivedVariable1.isCleaned();
      assertTrue(boolean1 == boolean0);
      
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.372821413206516
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.setOntologyTerms(arrayList0);
      arrayList0.add((OntologyTerm) null);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add((OntologyTerm) null);
      derivedVariable0.addSupportingDocument((SupportingDocument) null);
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms(arrayList1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.704805524613353
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable0.addSupportingDocuments(arrayList0);
      derivedVariable0.setCleaningStatus("89J<UCq5ck");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier((-1));
      ontologyTerm0.setNewRecord(true);
      ontologyTerm0.setNewRecord(true);
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      derivedVariable0.setOntologyTerms(arrayList1);
      arrayList1.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList1.add(ontologyTerm1);
      derivedVariable0.addSupportingDocument((SupportingDocument) null);
      derivedVariable0.removeOntologyTerms(arrayList1);
      // Undeclared exception!
      try { 
        derivedVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getOntologyTerms();
      Integer[] integerArray0 = new Integer[5];
      Integer integer0 = new Integer(3845);
      integerArray0[0] = integer0;
      Integer integer1 = new Integer((int) integerArray0[0]);
      integerArray0[1] = integer1;
      Integer integer2 = new Integer(1);
      integerArray0[2] = integer2;
      Integer integer3 = new Integer((int) integerArray0[0]);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable1.addOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = ")9]\"wR;*dG)X&j9z-b";
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = "j!W|*3yZl692&";
      derivedVariable0.hasSameDisplayName(rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      String string0 = derivedVariable0.getDisplayItemIdentifier();
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("0", string0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.containsOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.620795178839221
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = ")9]\"wR;*dG)X&j9z-b";
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = "j!W|*3yZl692&";
      User user0 = new User("KR}!6'R<AWSce", "j!W|*3yZl692&");
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      derivedVariable0.getDisplayItemIdentifier();
      assertEquals(")9]\"wR;*dG)X&j9z-b", derivedVariable0.getColumnEnd());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.3473508904222826
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      UnaryOperator<ValueLabel> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator.identity();
      arrayList0.replaceAll(unaryOperator0);
      derivedVariable0.getValueLabels();
      rawVariable0.setValueLabels(arrayList0);
      User user0 = new User("RN)C-^81n\"Lp<", "RN)C-^81n\"Lp<");
      derivedVariable0.notes = null;
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.setCleaningDescription("RN)C-^81n\"Lp<");
      assertEquals("RN)C-^81n\"Lp<", derivedVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = "";
      rawVariable0.setSupportingDocuments((ArrayList<SupportingDocument>) null);
      rawVariable0.setIsNewRecord(false);
      int int0 = rawVariable0.getIdentifier();
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, int0);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User("Unknown", "Unknown");
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable(user0, (Variable) null, (Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.8875113783568844
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.addValueLabel(valueLabel0);
      arrayList0.clear();
      rawVariable0.removeOntologyTerms(arrayList0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User.checkValidUserIDField("");
      Integer[] integerArray0 = new Integer[3];
      Integer integer0 = new Integer(103);
      integerArray0[0] = integer0;
      Integer integer1 = new Integer(2147483645);
      integerArray0[1] = integer1;
      Integer integer2 = new Integer((-1776));
      integerArray0[2] = integer2;
      arrayList0.toArray(integerArray0);
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.removeOntologyTerms(arrayList0);
      rawVariable0.getOntologyTerms();
      ArrayList<SupportingDocument> arrayList1 = rawVariable0.getSupportingDocuments();
      arrayList1.spliterator();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      ArrayList<String> arrayList2 = Variable.validateFields(rawVariable0);
      assertEquals(1, arrayList2.size());
      
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(boolean0);
      assertFalse(rawVariable0.isCoded());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.862218290000827
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      linkedList0.clone();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList0.add(supportingDocument1);
      ArrayList<SupportingDocument> arrayList1 = rawVariable0.getSupportingDocuments();
      arrayList1.retainAll(linkedList0);
      rawVariable0.addSupportingDocuments(arrayList0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setLabel("UNABLE_TO_GET_CATEGORIES_FOR_VARIABLE");
      rawVariable1.addSupportingDocument(supportingDocument0);
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.validateFields(valueLabel0);
      User user0 = new User("UNABLE_TO_GET_CATEGORIES_FOR_VARIABLE", "UNABLE_TO_GET_CATEGORIES_FOR_VARIABLE");
      User user1 = new User("-", "\"D");
      User user2 = new User();
      Variable.detectFieldChanges(user1, rawVariable1, rawVariable1);
      assertEquals("UNABLE_TO_GET_CATEGORIES_FOR_VARIABLE", rawVariable1.getLabel());
      
      SupportingDocument supportingDocument2 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument2);
      String string0 = rawVariable0.getCategory();
      assertEquals("Unknown", string0);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.0113645074166633
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      ArrayList<Variable> arrayList2 = derivedVariable0.getSourceVariables();
      arrayList2.spliterator();
      derivedVariable0.setSourceVariables(arrayList2);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges((User) null, derivedVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.19953461806653
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.setCategory("variable.alternativeVariable.label");
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.setLabel("variable.alternativeVariable.label");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.getSourceVariables();
      assertEquals("variable.alternativeVariable.label", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.560923023161317
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getSourceVariables();
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setIdentifier(2450);
      ArrayList<OntologyTerm> arrayList0 = derivedVariable1.getOntologyTerms();
      rawVariable1.removeOntologyTerms(arrayList0);
      assertEquals("2450", derivedVariable1.getDisplayItemIdentifier());
      
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      ArrayList<SupportingDocument> arrayList2 = rawVariable0.getSupportingDocuments();
      arrayList2.spliterator();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.containsOntologyTerm(ontologyTerm1);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      rawVariable1.removeOntologyTerm(ontologyTerm0);
      assertFalse(rawVariable1.isCoded());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=3.7554469346084263
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(true);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm0.setOntologyName("Wj#H:<C^");
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      arrayList0.add(ontologyTerm3);
      derivedVariable0.addSupportingDocument((SupportingDocument) null);
      derivedVariable0.removeOntologyTerms(arrayList0);
      assertFalse(arrayList0.contains(ontologyTerm1));
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable derivedVariable2 = (DerivedVariable)derivedVariable1.clone();
      assertEquals("Unknown", derivedVariable2.getCleaningStatus());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=3.6294895613903866
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setIdentifier((-736));
      derivedVariable0.columnStart = null;
      derivedVariable0.clone();
      derivedVariable0.getNotes();
      derivedVariable0.setAvailability("");
      derivedVariable0.clone();
      derivedVariable0.getIdentifier();
      derivedVariable0.getIdentifier();
      derivedVariable0.setCleaningDescription("y&:D");
      assertEquals("y&:D", derivedVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=3.0605440680174723
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.setColumnStart("");
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable1.getOntologyTerms();
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList1 = RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      assertTrue(arrayList1.isEmpty());
      
      rawVariable1.removeOntologyTerms(arrayList0);
      rawVariable1.getOntologyTerms();
      ArrayList<SupportingDocument> arrayList2 = rawVariable0.getSupportingDocuments();
      arrayList2.spliterator();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm2);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm3);
      derivedVariable0.isCleaned();
      rawVariable0.getNotes();
      boolean boolean0 = derivedVariable0.isCleaned();
      assertFalse(boolean0);
      
      rawVariable1.getOntologyTerms();
      assertEquals("Unknown", rawVariable1.getCategory());
      assertFalse(rawVariable1.isCoded());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertFalse(rawVariable1.isNewRecord());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=3.8304725210421715
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnStart = "xLv@f1e493+iXf";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      User user0 = new User();
      user0.setUserID("(=2Z24=Af");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      UnaryOperator.identity();
      UnaryOperator<ValueLabel> unaryOperator0 = UnaryOperator.identity();
      ArrayList<ValueLabel> arrayList1 = rawVariable0.getValueLabels();
      arrayList1.spliterator();
      arrayList1.replaceAll(unaryOperator0);
      ArrayList<ValueLabel> arrayList2 = rawVariable0.getValueLabels();
      rawVariable0.setValueLabels(arrayList2);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.createVariableSummary();
      rawVariable0.cloneAttributes(derivedVariable0);
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.554035648050529
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnStart = "xLv@f1e493+iXf";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      linkedList0.add((Object) ontologyTerm0);
      User user0 = new User(".u}(", "ND  UL+2hTa.TL3e>mG");
      User user1 = new User("ND  UL+2hTa.TL3e>mG", "j)uGL*(Rt_");
      ArrayList<MacawChangeEvent> arrayList1 = Variable.detectFieldChanges(user1, rawVariable0, rawVariable0);
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals(0, arrayList1.size());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.6439556568820564
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable1.getOntologyTerms();
      derivedVariable0.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      derivedVariable1.addSupportingDocument(supportingDocument1);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.removeOntologyTerms(arrayList0);
      derivedVariable1.setColumnEnd("UNABLE_TO_VALIDATE_USER");
      assertEquals("UNABLE_TO_VALIDATE_USER", derivedVariable1.getColumnEnd());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.3558258304206885
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      Integer[] integerArray0 = new Integer[4];
      Integer integer0 = new Integer(3845);
      integerArray0[0] = integer0;
      Integer integer1 = new Integer((int) integerArray0[0]);
      integerArray0[1] = integer1;
      Integer integer2 = new Integer(1);
      integerArray0[2] = integer2;
      Integer integer3 = new Integer((int) integerArray0[0]);
      integerArray0[3] = integer3;
      derivedVariable0.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=3.632073350304059
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.cloneAttributes(rawVariable0);
      assertEquals("Unknown", derivedVariable0.getAvailability());
      
      User user1 = new User();
      User user2 = new User("EDIT", "EDIT");
      user1.setIdentifier((-2821));
      derivedVariable0.setAvailability(".u}(");
      User user3 = new User(".u}(", "general.error.blankField");
      Variable.detectFieldChanges(user1, derivedVariable0, rawVariable0);
      assertEquals(".u}(", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=3.662536391204449
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getFilePath();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.setOntologyTerms(arrayList0);
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setTerm("UNABLE_TO_GET_STUDY_YEARS");
      arrayList1.add(ontologyTerm1);
      arrayList1.add(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      arrayList2.add(ontologyTerm0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      derivedVariable0.removeOntologyTerms(arrayList3);
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.cloneAttributes(rawVariable0);
      rawVariable0.getQuestionNumber();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      User user1 = new User();
      user0.setUserID("?e$j7@6g2<yl");
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      UnaryOperator<ValueLabel> unaryOperator0 = UnaryOperator.identity();
      arrayList0.replaceAll(unaryOperator0);
      ArrayList<ValueLabel> arrayList1 = derivedVariable0.getValueLabels();
      rawVariable0.setValueLabels(arrayList1);
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      derivedVariable0.setCleaningDescription("?e$j7@6g2<yl");
      String string0 = derivedVariable0.getCleaningStatus();
      assertNotNull(string0);
      assertEquals("Unknown", string0);
      
      rawVariable0.getLabel();
      rawVariable0.getColumnStart();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=3.6321363424300435
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.cloneAttributes(rawVariable0);
      User user1 = new User();
      rawVariable0.setNotes("EDIT");
      User user2 = new User("!*G3:*F#<~8[= ", "EDIT");
      User user3 = new User(",@x:h:LRIT$T", "EDIT");
      Variable.detectFieldChanges(user3, rawVariable0, derivedVariable0);
      rawVariable0.getQuestionNumber();
      assertEquals("EDIT", rawVariable0.getNotes());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.4675368896014644
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getSourceVariables();
      ArrayList<ValueLabel> arrayList0 = derivedVariable0.getValueLabels();
      arrayList0.clear();
      derivedVariable0.setAlias("r\"{y/u#S_q,n))^Fue");
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.setCleaningDescription("+VaX");
      derivedVariable0.getLabel();
      assertEquals("r\"{y/u#S_q,n))^Fue", derivedVariable0.getAlias());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=3.784986421092575
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      rawVariable0.addOntologyTerms(arrayList1);
      arrayList0.clear();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      rawVariable0.removeOntologyTerms(arrayList2);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User.checkValidUserIDField("");
      User user0 = new User("-(Z0=&Z'b", "-(Z0=&Z'b");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.setForm("EDIT");
      rawVariable0.getIdentifier();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.updateOntologyTerm(ontologyTerm0);
      rawVariable0.cloneAttributes(rawVariable1);
      assertEquals("EDIT", rawVariable0.getForm());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=3.75406995444614
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getSourceVariables();
      ArrayList<ValueLabel> arrayList0 = derivedVariable0.getValueLabels();
      arrayList0.clear();
      derivedVariable0.setValueLabels(arrayList0);
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.cloneAttributes(rawVariable0);
      User user0 = new User();
      user0.setUserID("EDIT");
      ArrayList<ValueLabel> arrayList1 = new ArrayList<ValueLabel>();
      UnaryOperator<ValueLabel> unaryOperator0 = UnaryOperator.identity();
      arrayList1.replaceAll(unaryOperator0);
      rawVariable0.setValueLabels(arrayList1);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.getSupportingDocuments();
      derivedVariable0.setNotes("EDIT");
      assertEquals("EDIT", derivedVariable0.getNotes());
      
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable1);
      derivedVariable1.getDisplayItemIdentifier();
      derivedVariable1.createVariableSummary();
      rawVariable0.cloneAttributes(derivedVariable0);
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=3.8183861061919866
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.addValueLabel(valueLabel0);
      arrayList0.clear();
      rawVariable0.removeOntologyTerms(arrayList0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User.checkValidUserIDField("");
      Integer[] integerArray0 = new Integer[3];
      Integer integer0 = new Integer(103);
      integerArray0[0] = integer0;
      Integer integer1 = new Integer(2147483645);
      integerArray0[1] = integer1;
      Integer integer2 = new Integer((-1776));
      integerArray0[2] = integer2;
      arrayList0.toArray(integerArray0);
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.removeOntologyTerms(arrayList0);
      rawVariable0.getOntologyTerms();
      ArrayList<SupportingDocument> arrayList1 = rawVariable0.getSupportingDocuments();
      arrayList1.spliterator();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.columnEnd = "%{<yN3wEgz<p]A";
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.createVariableSummary();
      rawVariable0.cloneAttributes(derivedVariable0);
      assertEquals("%{<yN3wEgz<p]A", derivedVariable0.getColumnEnd());
      
      String string0 = rawVariable0.getLabel();
      assertEquals("", string0);
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.9224350296110986
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.setColumnStart("");
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setQuestionNumber((String) null);
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      User user0 = new User();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.setName("EDIT");
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.673415053526696
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCategory("e-&,[[%~Br|1M(D1{=");
      rawVariable0.setFilePath("e-&,[[%~Br|1M(D1{=");
      rawVariable0.removeValueLabel((ValueLabel) null);
      rawVariable0.setCodeBookNumber("e-&,[[%~Br|1M(D1{=");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(true);
      ontologyTerm0.setTerm("e-&,[[%~Br|1M(D1{=");
      rawVariable0.setName("e-&,[[%~Br|1M(D1{=");
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.getDisplayName();
      rawVariable0.setCategory("e-&,[[%~Br|1M(D1{=");
      assertEquals("e-&,[[%~Br|1M(D1{=", rawVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=3.9266613729079496
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.addSupportingDocuments(arrayList0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setQuestionNumber("variable.label.label");
      ArrayList<OntologyTerm> arrayList1 = rawVariable1.getOntologyTerms();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList1.forEach(consumer0);
      rawVariable0.addOntologyTerms(arrayList1);
      rawVariable1.columnEnd = "";
      rawVariable0.setCodeBookNumber(")LCL|<%Cw7AR");
      rawVariable0.getYear();
      rawVariable0.createVariableSummary();
      rawVariable1.setNotes("ez");
      rawVariable1.getColumnStart();
      rawVariable1.clone();
      rawVariable1.setCleaningDescription("");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addSourceVariable(rawVariable0);
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.clone();
      valueLabel0.clone();
      valueLabel0.setLabel("ez");
      rawVariable1.removeValueLabel(valueLabel0);
      derivedVariable0.getCleaningDescription();
      rawVariable1.setFilePath(")LCL|<%Cw7AR");
      rawVariable0.getAlias();
      rawVariable1.getValueLabels();
      derivedVariable0.clone();
      derivedVariable0.clone();
      rawVariable1.getYear();
      assertEquals(")LCL|<%Cw7AR", rawVariable1.getFilePath());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User("'fH4km)fMy~C%a", "T$t;a}>THn8Kn2");
      User.checkValidUserIDField("");
      ArrayList<MacawChangeEvent> arrayList0 = new ArrayList<MacawChangeEvent>();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.setForm("ontologyTerm.na{epace.label");
      rawVariable0.getIdentifier();
      rawVariable0.setCleaningDescription("macaw.system.MacawException");
      rawVariable0.createVariableSummary();
      assertEquals("ontologyTerm.na{epace.label", rawVariable0.getForm());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.880653893488026
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.setName("sB=");
      rawVariable0.addSupportingDocuments(arrayList0);
      rawVariable0.setAvailability("sB=");
      rawVariable0.setAlias(">3$kt$!<Zb:{_U*L");
      rawVariable0.setAlias((String) null);
      rawVariable0.getCleaningStatus();
      rawVariable0.getQuestionNumber();
      rawVariable0.setName("L/&o+niI'nXQg");
      rawVariable0.createVariableSummary();
      rawVariable0.setNotes("variable.questionNumber.label");
      assertEquals("variable.questionNumber.label", rawVariable0.getNotes());
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>(1368);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      derivedVariable0.addSourceVariables(arrayList1);
      derivedVariable0.getFilePath();
      derivedVariable0.removeSourceVariables(arrayList1);
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=3.7471740047912334
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getSourceVariables();
      Integer integer0 = new Integer(3781);
      Integer integer1 = new Integer(3781);
      Integer integer2 = new Integer(3845);
      Integer integer3 = new Integer(3781);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      Integer[] integerArray0 = new Integer[8];
      integerArray0[0] = integer1;
      integerArray0[1] = integer3;
      integerArray0[2] = integer1;
      integerArray0[3] = integer2;
      integerArray0[4] = integer1;
      integerArray0[5] = integer2;
      integerArray0[6] = integer3;
      integerArray0[7] = integer0;
      arrayList0.toArray(integerArray0);
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.getOntologyTerms();
      ArrayList<SupportingDocument> arrayList1 = rawVariable0.getSupportingDocuments();
      arrayList1.spliterator();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      rawVariable1.cloneAttributes(rawVariable0);
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
      
      rawVariable1.removeOntologyTerm(ontologyTerm0);
      assertFalse(rawVariable1.isCoded());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=3.8653049132617787
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setForm("");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.removeSupportingDocument(supportingDocument0);
      Variable.validateFields(rawVariable0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setIsNewRecord(false);
      supportingDocument1.setFilePath("");
      rawVariable0.containsSupportingDocument(supportingDocument1);
      rawVariable0.getCategory();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.hasSameDisplayName(rawVariable0);
      derivedVariable0.cloneAttributes(rawVariable0);
      rawVariable0.setYear("a");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      assertEquals("a", rawVariable0.getYear());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.425910149055313
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      Integer[] integerArray0 = new Integer[4];
      Integer integer0 = new Integer(3845);
      integerArray0[0] = integer0;
      Integer integer1 = new Integer((int) integerArray0[0]);
      integerArray0[1] = integer1;
      Integer integer2 = new Integer(1);
      integerArray0[2] = integer2;
      Integer integer3 = new Integer((int) integerArray0[0]);
      integerArray0[3] = integer3;
      arrayList0.toArray(integerArray0);
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean0);
      
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.removeOntologyTerms(arrayList0);
      rawVariable0.getOntologyTerms();
      ArrayList<SupportingDocument> arrayList1 = rawVariable1.getSupportingDocuments();
      arrayList1.spliterator();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.removeOntologyTerms(arrayList0);
      derivedVariable0.containsSourceVariable(rawVariable0);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=2.4241710186205303
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      Integer[] integerArray0 = new Integer[4];
      Integer integer0 = new Integer(3845);
      integerArray0[0] = integer0;
      Integer integer1 = new Integer((int) integerArray0[0]);
      integerArray0[1] = integer1;
      Integer integer2 = new Integer(1);
      integerArray0[2] = integer2;
      Integer integer3 = new Integer((int) integerArray0[0]);
      integerArray0[3] = integer3;
      arrayList0.toArray(integerArray0);
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.removeOntologyTerms(arrayList0);
      rawVariable0.getOntologyTerms();
      ArrayList<SupportingDocument> arrayList1 = rawVariable1.getSupportingDocuments();
      arrayList1.spliterator();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      boolean boolean0 = rawVariable1.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.updateOntologyTerm(ontologyTerm0);
      assertFalse(derivedVariable1.isCleaned());
      assertFalse(derivedVariable1.isCoded());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
  }
}
