/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 04:19:02 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import com.soops.CEN4010.JMCA.JParser.JavaParser;
import com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager;
import com.soops.CEN4010.JMCA.JParser.Node;
import com.soops.CEN4010.JMCA.JParser.SimpleNode;
import java.io.BufferedInputStream;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.Reader;
import java.io.StringReader;
import java.io.StringWriter;
import java.util.ArrayList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimpleNode_ESTest extends SimpleNode_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.4728091026839158
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(6);
      String string0 = ">>";
      simpleNode0.setIdentifier(">>");
      SimpleNode simpleNode1 = new SimpleNode(6);
      simpleNode1.jjtAddChild((Node) null, 0);
      simpleNode1.jjtAddChild(simpleNode0, 0);
      simpleNode0.toString();
      simpleNode1.jjtGetParent();
      simpleNode0.jjtSetParent(simpleNode1);
      simpleNode1.jjtGetParent();
      simpleNode1.toString();
      simpleNode0.setIdentifier("");
      StringWriter stringWriter0 = new StringWriter(0);
      ArrayList<String> arrayList0 = simpleNode1.identifiers;
      StringWriter stringWriter1 = new StringWriter(0);
      StringWriter stringWriter2 = new StringWriter(6);
      SimpleNode simpleNode2 = new SimpleNode(1805);
      simpleNode2.dump("ExtendsList : >>", stringWriter0);
      StringWriter stringWriter3 = new StringWriter();
      simpleNode2.setIdentifier("&");
      simpleNode1.dump("", stringWriter2);
      simpleNode1.jjtGetNumChildren();
      SimpleNode simpleNode3 = new SimpleNode(1);
      // Undeclared exception!
      try { 
        simpleNode2.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1805
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.3157028389236913
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(6);
      SimpleNode simpleNode1 = new SimpleNode(6);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      simpleNode1.jjtAddChild((Node) null, 0);
      simpleNode1.jjtAddChild(simpleNode0, 0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      simpleNode0.toString();
      simpleNode0.jjtAddChild((Node) null, 0);
      simpleNode1.toString();
      simpleNode0.setIdentifier(" ");
      StringWriter stringWriter0 = new StringWriter(0);
      ArrayList<String> arrayList0 = simpleNode1.identifiers;
      simpleNode0.dump(" ", stringWriter0);
      stringWriter0.append('\"');
      StringWriter stringWriter1 = new StringWriter(579);
      StringWriter stringWriter2 = new StringWriter(579);
      simpleNode1.dump(" ", stringWriter2);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      StringWriter stringWriter3 = new StringWriter();
      simpleNode1.setIdentifier("&");
      simpleNode1.dump("<Ds/", stringWriter0);
      simpleNode0.jjtGetNumChildren();
      SimpleNode simpleNode2 = new SimpleNode(6);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      simpleNode1.toString();
      simpleNode0.toString();
      assertEquals(1, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.5954421158331002
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int int0 = 6;
      SimpleNode simpleNode0 = new SimpleNode(6);
      simpleNode0.setIdentifier(">>");
      SimpleNode simpleNode1 = new SimpleNode(6);
      int int1 = 0;
      simpleNode1.jjtAddChild((Node) null, 0);
      simpleNode1.jjtAddChild(simpleNode0, 0);
      simpleNode0.toString();
      simpleNode1.jjtGetParent();
      simpleNode0.jjtSetParent(simpleNode1);
      simpleNode1.jjtGetParent();
      simpleNode1.toString();
      simpleNode0.setIdentifier("&&");
      StringWriter stringWriter0 = new StringWriter(0);
      ArrayList<String> arrayList0 = simpleNode1.identifiers;
      simpleNode0.dump("&&", stringWriter0);
      int int2 = (-1810);
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild((Node) null, (-1810));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.5650179656763181
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(10);
      simpleNode0.setIdentifier("U>>");
      SimpleNode simpleNode1 = new SimpleNode(10);
      simpleNode1.jjtAddChild((Node) null, 0);
      simpleNode1.jjtAddChild(simpleNode0, 0);
      Node[] nodeArray0 = new Node[0];
      simpleNode1.children = nodeArray0;
      simpleNode0.toString("U>>");
      simpleNode1.jjtGetParent();
      simpleNode1.jjtGetParent();
      simpleNode1.toString("U>>EnumConstant : U>>");
      StringWriter stringWriter0 = new StringWriter(841);
      simpleNode0.dump("<token of kind 7>", stringWriter0);
      StringWriter stringWriter1 = new StringWriter();
      simpleNode1.dump("U>>EnumConstant : U>>EnumConstant", stringWriter1);
      StringReader stringReader0 = new StringReader(" ");
      stringReader0.markSupported();
      simpleNode1.jjtGetNumChildren();
      simpleNode1.toString();
      simpleNode0.jjtAddChild(simpleNode1, 3692);
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild(simpleNode1, (-1529));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1529
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.212352850218841
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(10);
      StringReader stringReader0 = new StringReader(">>");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      JavaParser javaParser1 = new JavaParser(javaParser0.token_source);
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 10);
      simpleNode0.setIdentifier(">>");
      simpleNode0.jjtAddChild(simpleNode1, 10);
      simpleNode0.jjtAddChild(simpleNode0, 282);
      StringWriter stringWriter0 = new StringWriter();
      // Undeclared exception!
      simpleNode0.dump("<<", stringWriter0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.5326746225191423
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(6);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      simpleNode0.setIdentifier(">>");
      SimpleNode simpleNode1 = new SimpleNode(6);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      simpleNode1.jjtAddChild((Node) null, 0);
      simpleNode1.jjtAddChild(simpleNode0, 0);
      simpleNode0.toString();
      simpleNode1.jjtGetParent();
      simpleNode0.jjtAddChild((Node) null, 0);
      simpleNode1.jjtGetParent();
      simpleNode0.toString();
      simpleNode0.toString();
      simpleNode0.jjtGetParent();
      simpleNode0.jjtGetParent();
      simpleNode1.toString();
      simpleNode1.setIdentifier(";");
      StringWriter stringWriter0 = new StringWriter(0);
      simpleNode0.dump("g P7o~U'h\"G6OGKzfW", stringWriter0);
      StringWriter stringWriter1 = new StringWriter();
      simpleNode1.dump("Literal", stringWriter1);
      simpleNode1.jjtGetNumChildren();
      simpleNode1.toString();
      simpleNode1.toString();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "AP");
      simpleNode1.toString();
      simpleNode0.jjtGetParent();
      assertEquals(1, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.4930336326154774
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(10);
      StringReader stringReader0 = new StringReader(">>");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 10);
      simpleNode1.parser = javaParser0;
      simpleNode0.jjtAddChild(simpleNode1, 10);
      simpleNode1.toString();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      SimpleNode simpleNode2 = (SimpleNode)simpleNode1.parser.currNode;
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.toString();
      SimpleNode simpleNode3 = (SimpleNode)simpleNode1.parser.currNode;
      StringWriter stringWriter1 = new StringWriter();
      simpleNode2.toString();
      simpleNode2.setIdentifier(";");
      int int0 = 3;
      StringWriter stringWriter2 = new StringWriter(3);
      SimpleNode simpleNode4 = new SimpleNode(3);
      ArrayList<String> arrayList0 = simpleNode4.identifiers;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "EnumConstant");
      StringWriter stringWriter3 = new StringWriter(43);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "0A+3]#|lh");
      simpleNode0.dump("EnumConstant", stringWriter3);
      simpleNode2.jjtAddChild(simpleNode0, 10);
      simpleNode4.jjtAddChild(simpleNode0, 43);
      // Undeclared exception!
      try { 
        simpleNode4.jjtGetChild((-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.1446508294779743
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(10);
      StringReader stringReader0 = new StringReader(">>");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      JavaParser javaParser1 = new JavaParser(javaParser0.token_source);
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 10);
      simpleNode0.setIdentifier("}");
      SimpleNode simpleNode2 = new SimpleNode(10);
      simpleNode2.jjtAddChild(simpleNode1, 10);
      simpleNode2.jjtAddChild(simpleNode0, 282);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("<<", stringWriter0);
      SimpleNode simpleNode3 = new SimpleNode(38);
      simpleNode2.jjtGetNumChildren();
      simpleNode2.toString();
      JavaParser javaParser2 = new JavaParser(stringReader0);
      SimpleNode simpleNode4 = new SimpleNode(javaParser0, (-1717));
      simpleNode4.children = null;
      simpleNode2.toString();
      // Undeclared exception!
      try { 
        simpleNode1.jjtGetChild(38);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.4106335906868774
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(10);
      String string0 = ">>";
      SimpleNode simpleNode1 = new SimpleNode(10);
      simpleNode1.jjtAddChild(simpleNode0, 0);
      simpleNode0.toString();
      simpleNode1.jjtGetParent();
      simpleNode1.jjtGetParent();
      simpleNode1.toString("EnumConstant");
      simpleNode1.setIdentifier("#7TH! 5''<=`,j+',");
      StringWriter stringWriter0 = new StringWriter(10);
      simpleNode0.jjtGetParent();
      simpleNode0.toString();
      simpleNode0.setIdentifier((String) null);
      StringWriter stringWriter1 = new StringWriter(0);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      // Undeclared exception!
      try { 
        simpleNode1.dump("(R}=/:z|o7%R.nuE", stringWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int int0 = (-1804);
      SimpleNode simpleNode0 = new SimpleNode((-1804));
      simpleNode0.setIdentifier("okxo");
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "okxo");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ">");
      stringWriter0.flush();
      StringWriter stringWriter2 = new StringWriter();
      char[] charArray0 = new char[7];
      charArray0[0] = '^';
      charArray0[1] = '^';
      charArray0[2] = '^';
      charArray0[3] = '^';
      charArray0[4] = '^';
      charArray0[5] = '^';
      char char0 = '!';
      charArray0[6] = '!';
      stringWriter2.write(charArray0);
      StringWriter stringWriter3 = stringWriter0.append('^');
      stringWriter3.close();
      stringWriter0.append((CharSequence) ">");
      // Undeclared exception!
      try { 
        simpleNode0.dump("c8\",", stringWriter1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.8662943611198906
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(6);
      SimpleNode simpleNode1 = new SimpleNode(6);
      int int0 = 0;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      simpleNode1.jjtAddChild((Node) null, 0);
      simpleNode1.jjtAddChild(simpleNode0, 0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      simpleNode0.toString();
      simpleNode1.jjtGetParent();
      simpleNode0.jjtAddChild((Node) null, 0);
      simpleNode1.jjtGetParent();
      simpleNode1.toString();
      simpleNode0.jjtAddChild((Node) null, 6);
      simpleNode0.jjtGetChild(0);
      // Undeclared exception!
      try { 
        simpleNode1.jjtGetChild(972);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 972
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.087302357535235
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(10);
      simpleNode0.setIdentifier("E");
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter(10);
      StringWriter stringWriter2 = new StringWriter(10);
      stringWriter0.close();
      StringWriter stringWriter3 = new StringWriter();
      StringWriter stringWriter4 = new StringWriter(833);
      StringWriter stringWriter5 = stringWriter3.append((CharSequence) "E");
      simpleNode0.dump("l5oX-c3' aP(p8", stringWriter5);
      assertEquals("E<EnumConstant>\n  <identifier>E</identifier>\n</EnumConstant>\n", stringWriter5.toString());
      
      StringWriter stringWriter6 = new StringWriter(38);
      String string0 = simpleNode0.toString();
      assertEquals("EnumConstant : E", string0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.8685728592006332
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(10);
      String string0 = "    ";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "    ");
      SimpleNode simpleNode1 = new SimpleNode(10);
      Node node0 = simpleNode1.parent;
      simpleNode0.parent = null;
      StringReader stringReader0 = new StringReader(">>");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode2 = new SimpleNode(javaParser0, 10);
      simpleNode2.parser = javaParser0;
      simpleNode2.jjtAddChild(simpleNode0, 10);
      simpleNode2.jjtAddChild(simpleNode0, 1001);
      simpleNode2.toString();
      stringReader0.reset();
      simpleNode0.jjtGetNumChildren();
      simpleNode0.toString("EnumConstant");
      StringWriter stringWriter0 = new StringWriter(980);
      StringWriter stringWriter1 = new StringWriter(0);
      simpleNode2.dump("EnumConstantEnumConstant", stringWriter1);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(2268);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.8090776470490244
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(10);
      simpleNode0.setIdentifier("=");
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter(10);
      StringWriter stringWriter2 = new StringWriter();
      stringWriter2.flush();
      StringWriter stringWriter3 = new StringWriter('W');
      StringWriter stringWriter4 = new StringWriter();
      stringWriter4.close();
      StringWriter stringWriter5 = new StringWriter();
      stringWriter5.append((CharSequence) "*B");
      simpleNode0.dump("*B", stringWriter2);
      stringWriter2.flush();
      int int0 = (-1791150397);
      StringWriter stringWriter6 = null;
      try {
        stringWriter6 = new StringWriter((-1791150397));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative buffer size
         //
         verifyException("java.io.StringWriter", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.8090776470490244
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(10);
      simpleNode0.setIdentifier(">>");
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.append((CharSequence) ">>");
      StringWriter stringWriter1 = stringWriter0.append('^');
      StringWriter stringWriter2 = new StringWriter();
      StringWriter stringWriter3 = stringWriter1.append((CharSequence) "2`");
      simpleNode0.dump("*B", stringWriter3);
      assertEquals(">>^2`<EnumConstant>\n  <identifier>*rshft</identifier>\n</EnumConstant>\n", stringWriter3.toString());
      assertEquals(">>^2`<EnumConstant>\n  <identifier>*rshft</identifier>\n</EnumConstant>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.968454372071113
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(10);
      StringReader stringReader0 = new StringReader(">>");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 10);
      simpleNode1.parser = javaParser0;
      simpleNode0.jjtAddChild(simpleNode1, 10);
      simpleNode1.toString();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      SimpleNode simpleNode2 = (SimpleNode)simpleNode1.parser.currNode;
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.toString();
      SimpleNode simpleNode3 = (SimpleNode)simpleNode1.parser.currNode;
      StringWriter stringWriter1 = new StringWriter();
      StringReader stringReader1 = new StringReader("m^?{UWVE)Q:P?");
      stringWriter1.append('k');
      StringWriter stringWriter2 = new StringWriter();
      StringWriter stringWriter3 = stringWriter2.append('b');
      stringWriter3.write("m^?{UWVE)Q:P?");
      StringWriter stringWriter4 = new StringWriter();
      simpleNode1.dump("qMp", stringWriter4);
      simpleNode0.jjtGetChild(10);
      assertEquals(11, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Literal");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, (-1520));
      // Undeclared exception!
      try { 
        simpleNode0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1520
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.1506719848487332
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(65);
      StringReader stringReader0 = new StringReader("|4f3");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 65, 65);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)74;
      byte byte0 = (byte)23;
      byteArray0[1] = (byte)23;
      byteArray0[2] = (byte) (-83);
      byteArray0[3] = (byte)33;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      int int0 = 3349;
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 3349);
      simpleNode0.parent = (Node) simpleNode1;
      simpleNode0.setIdentifier("|4f3");
      SimpleNode simpleNode2 = new SimpleNode(65);
      simpleNode0.jjtAddChild(simpleNode2, 65);
      simpleNode0.jjtAddChild(simpleNode2, 0);
      simpleNode0.toString();
      simpleNode0.jjtGetParent();
      MockFile mockFile0 = new MockFile(">", "wx]RhIRgm:E ]");
      File file0 = MockFile.createTempFile("|4f3", "|4f3", (File) mockFile0);
      MockFile mockFile1 = new MockFile(file0, "|4f3");
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream(mockFile1);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.7091199915606667
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(3657);
      simpleNode0.jjtAddChild((Node) null, 3657);
      simpleNode0.jjtAddChild((Node) null, 3657);
      simpleNode0.jjtGetChild(3657);
      simpleNode0.jjtGetChild(3657);
      simpleNode0.jjtGetParent();
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild((Node) null, (-2147483646));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2147483646
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1695);
      StringReader stringReader0 = new StringReader("");
      FileSystemHandling.shouldAllThrowIOExceptions();
      stringReader0.mark(1695);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1599), (-1599), 1695);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      simpleNode0.parser = javaParser0;
      simpleNode0.jjtAddChild((Node) null, 65);
      javaParserTokenManager0.curChar = '5';
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtGetParent();
      simpleNode0.jjtOpen();
      assertEquals(66, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.1552486438876346
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      int int0 = 6;
      SimpleNode simpleNode0 = new SimpleNode(6);
      simpleNode0.setIdentifier(">>");
      SimpleNode simpleNode1 = new SimpleNode(6);
      int int1 = 0;
      simpleNode1.jjtAddChild(simpleNode0, 0);
      simpleNode0.toString();
      simpleNode1.jjtGetParent();
      simpleNode0.jjtSetParent(simpleNode1);
      simpleNode1.jjtGetParent();
      simpleNode1.toString();
      simpleNode0.setIdentifier("4un$t_r");
      ArrayList<String> arrayList0 = simpleNode1.identifiers;
      int int2 = (-1810);
      // Undeclared exception!
      try { 
        simpleNode1.jjtAddChild((Node) null, (-1810));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1810
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      int int0 = (-452);
      SimpleNode simpleNode0 = new SimpleNode((-452));
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      pipedOutputStream0.flush();
      JavaParser javaParser0 = new JavaParser(pipedInputStream0);
      Node node0 = javaParser0.currNode;
      simpleNode0.jjtSetParent((Node) null);
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.append('%');
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild((-452));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte) (-95);
      byteArray0[2] = (byte)87;
      byteArray0[3] = (byte)109;
      byteArray0[4] = (byte)0;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JavaParser javaParser0 = new JavaParser((String) null);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, (-1075826758));
      // Undeclared exception!
      try { 
        simpleNode0.toString((String) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1075826758
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SimpleNode simpleNode0 = null;
      try {
        simpleNode0 = new SimpleNode((JavaParser) null, 69);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      pipedOutputStream0.flush();
      JavaParser javaParser0 = new JavaParser(pipedInputStream0);
      try { 
        javaParser0.MemberValueArrayInitializer();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JavaParser javaParser0 = new JavaParser((Reader) null);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, (-2013684814));
      JavaParser javaParser1 = new JavaParser("Mmy{*r.vt@$;B");
      Node node0 = javaParser1.currNode;
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild((Node) null, (-2013684814));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0, 1);
      JavaParser javaParser0 = new JavaParser(bufferedInputStream0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 1);
      StringWriter stringWriter0 = new StringWriter(1);
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "  <identifier>");
      stringWriter1.append((CharSequence) "  <identifier>", 1, 1);
      simpleNode0.jjtClose();
      assertEquals(0, simpleNode0.jjtGetNumChildren());
  }
}
