/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 04:33:22 GMT 2019
 */

package client.network;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import client.BomberClient;
import client.network.ClientMsgReceiver;
import java.awt.HeadlessException;
import java.net.Proxy;
import java.sql.BatchUpdateException;
import java.sql.ClientInfoStatus;
import java.sql.SQLClientInfoException;
import java.sql.SQLFeatureNotSupportedException;
import java.sql.SQLIntegrityConstraintViolationException;
import java.sql.SQLNonTransientConnectionException;
import java.sql.SQLTimeoutException;
import java.sql.SQLTransactionRollbackException;
import java.util.Hashtable;
import messages.global.GlobalChatMsg;
import messages.round.TileHitPlayerMsg;
import org.apache.log4j.helpers.LogLog;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.lang.MockThread;
import org.evosuite.runtime.mock.java.net.MockInetSocketAddress;
import org.evosuite.runtime.mock.java.net.MockSocket;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ClientMsgReceiver_ESTest extends ClientMsgReceiver_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      BomberClient bomberClient0 = BomberClient.getInstance();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, bomberClient0);
      boolean boolean0 = false;
      mockSocket0.setTcpNoDelay(boolean0);
      BomberClient bomberClient1 = BomberClient.getInstance();
      ClientMsgReceiver clientMsgReceiver1 = new ClientMsgReceiver(mockSocket0, bomberClient0);
      ClientMsgReceiver clientMsgReceiver2 = new ClientMsgReceiver(mockSocket0, bomberClient1);
      String string0 = null;
      GlobalChatMsg globalChatMsg0 = new GlobalChatMsg(string0, string0);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.processMsg(globalChatMsg0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[3] = (byte) (-50);
      MockSocket mockSocket0 = new MockSocket();
      MockThread.interrupted();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      MockThread mockThread0 = new MockThread("kJ\"/# 3s'2GrY");
      String string0 = "@f7o &K|![9^OvU";
      String string1 = "GZC\"3d{.^T";
      GlobalChatMsg globalChatMsg0 = new GlobalChatMsg("@f7o &K|![9^OvU");
      // Undeclared exception!
      try { 
        clientMsgReceiver0.processMsg(globalChatMsg0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("messages.global.GlobalChatMsg", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Proxy proxy0 = Proxy.NO_PROXY;
      MockInetSocketAddress mockInetSocketAddress0 = new MockInetSocketAddress(0);
      Proxy.Type proxy_Type0 = Proxy.Type.SOCKS;
      Proxy proxy1 = new Proxy(proxy_Type0, mockInetSocketAddress0);
      MockSocket mockSocket0 = new MockSocket(proxy1);
      mockSocket0.getOOBInline();
      mockInetSocketAddress0.getHostName();
      BomberClient bomberClient0 = BomberClient.getInstance();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, bomberClient0);
      boolean boolean0 = false;
      LogLog.setQuietMode(boolean0);
      int int0 = 1;
      TileHitPlayerMsg tileHitPlayerMsg0 = new TileHitPlayerMsg(int0);
      clientMsgReceiver0.processMsg(tileHitPlayerMsg0);
      SQLFeatureNotSupportedException sQLFeatureNotSupportedException0 = new SQLFeatureNotSupportedException();
      String string0 = "";
      String string1 = "YP6;Ayd2%Epkdnl";
      String string2 = "Couldn't close input stream";
      String string3 = null;
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream(string2, string3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // charsetName
         //
         verifyException("java.io.PrintStream", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MockInetSocketAddress mockInetSocketAddress0 = new MockInetSocketAddress(0);
      byte[] byteArray0 = new byte[4];
      byteArray0[2] = (byte)3;
      byteArray0[3] = (byte) (-50);
      MockSocket mockSocket0 = new MockSocket();
      FileSystemHandling.shouldAllThrowIOExceptions();
      mockInetSocketAddress0.getHostName();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      MockThread mockThread0 = new MockThread("192.168.1.42");
      ThreadGroup threadGroup0 = mock(ThreadGroup.class, new ViolatedAssumptionAnswer());
      MockThread mockThread1 = new MockThread(threadGroup0, "_$0");
      Thread[] threadArray0 = new Thread[5];
      ThreadGroup threadGroup1 = mock(ThreadGroup.class, new ViolatedAssumptionAnswer());
      long long0 = 0L;
      MockThread mockThread2 = new MockThread(threadGroup1, mockThread1, "Lost connection to server!", 0L);
      MockThread.reset();
      threadArray0[0] = (Thread) mockThread2;
      threadArray0[1] = (Thread) mockThread1;
      ThreadGroup threadGroup2 = mock(ThreadGroup.class, new ViolatedAssumptionAnswer());
      MockThread mockThread3 = new MockThread(threadGroup2, threadArray0[1]);
      Thread[] threadArray1 = new Thread[4];
      MockThread mockThread4 = new MockThread();
      threadArray1[1] = (Thread) mockThread4;
      threadArray1[2] = (Thread) mockThread3;
      threadArray1[3] = (Thread) mockThread0;
      MockThread.enumerate(threadArray1);
      mockThread3.getStackTrace();
      threadArray0[2] = (Thread) mockThread2;
      mockThread1.run();
      SQLNonTransientConnectionException sQLNonTransientConnectionException0 = new SQLNonTransientConnectionException("ERROR");
      // Undeclared exception!
      try { 
        clientMsgReceiver0.displayErrorMessage();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Proxy proxy0 = Proxy.NO_PROXY;
      BomberClient bomberClient0 = BomberClient.getInstance();
      boolean boolean0 = false;
      LogLog.setQuietMode(boolean0);
      int int0 = 1;
      TileHitPlayerMsg tileHitPlayerMsg0 = new TileHitPlayerMsg(int0);
      MockThread.interrupted();
      Throwable throwable0 = null;
      BatchUpdateException batchUpdateException0 = new BatchUpdateException(throwable0);
      ClientMsgReceiver clientMsgReceiver0 = null;
      try {
        clientMsgReceiver0 = new ClientMsgReceiver(bomberClient0.server, bomberClient0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("common.network.MsgReceiver", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      String string0 = "vRms.9fUx@&DRI)";
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, ";FFq!gCdp4sk");
      MockSocket mockSocket0 = new MockSocket();
      BomberClient bomberClient0 = BomberClient.getInstance();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, bomberClient0);
      String string1 = "w0aD=Ed6";
      Hashtable<String, ClientInfoStatus> hashtable0 = new Hashtable<String, ClientInfoStatus>();
      int int0 = (-703);
      SQLTimeoutException sQLTimeoutException0 = new SQLTimeoutException(string0, string1, int0);
      String string2 = "\"&w'8jAb}h`h7-k+~";
      int int1 = (-2404);
      String string3 = "W`";
      SQLIntegrityConstraintViolationException sQLIntegrityConstraintViolationException0 = new SQLIntegrityConstraintViolationException(string3, string0);
      SQLTransactionRollbackException sQLTransactionRollbackException0 = new SQLTransactionRollbackException(string1, string2, int1, sQLIntegrityConstraintViolationException0);
      SQLClientInfoException sQLClientInfoException0 = new SQLClientInfoException(hashtable0, sQLIntegrityConstraintViolationException0);
      String string4 = "";
      String string5 = "";
      String string6 = "Unknown message type: ";
      String string7 = "Y1\"im{!";
      SQLClientInfoException sQLClientInfoException1 = new SQLClientInfoException(string6, string7, hashtable0);
      SQLNonTransientConnectionException sQLNonTransientConnectionException0 = new SQLNonTransientConnectionException(string4, string5, sQLClientInfoException1);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.handleConnectionLoss(sQLClientInfoException1);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      MockInetSocketAddress mockInetSocketAddress0 = new MockInetSocketAddress(0);
      byte[] byteArray0 = new byte[4];
      byteArray0[2] = (byte)3;
      byteArray0[3] = (byte) (-50);
      MockSocket mockSocket0 = new MockSocket();
      mockSocket0.getOOBInline();
      mockInetSocketAddress0.getHostName();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      MockThread mockThread0 = new MockThread("192.168.1.42");
      ThreadGroup threadGroup0 = mock(ThreadGroup.class, new ViolatedAssumptionAnswer());
      MockThread mockThread1 = new MockThread(threadGroup0, "2U$#u0");
      Thread[] threadArray0 = new Thread[5];
      ThreadGroup threadGroup1 = mock(ThreadGroup.class, new ViolatedAssumptionAnswer());
      MockThread mockThread2 = new MockThread(threadGroup1, mockThread1, "Lost connection to server!", 0L);
      MockThread.reset();
      threadArray0[0] = (Thread) mockThread2;
      threadArray0[1] = (Thread) mockThread1;
      ThreadGroup threadGroup2 = mock(ThreadGroup.class, new ViolatedAssumptionAnswer());
      MockThread mockThread3 = new MockThread(threadGroup2, threadArray0[1]);
      mockThread3.getStackTrace();
      threadArray0[2] = (Thread) mockThread3;
      mockThread1.run();
      threadArray0[4] = (Thread) mockThread0;
      MockThread.enumerate(threadArray0);
      MockThread.dumpStack();
      System.setCurrentTimeMillis((-461L));
      // Undeclared exception!
      try { 
        clientMsgReceiver0.closeConnection();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("client.network.ClientMsgReceiver", e);
      }
  }
}
