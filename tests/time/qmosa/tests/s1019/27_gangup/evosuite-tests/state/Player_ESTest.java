/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 04:33:49 GMT 2019
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PrintStream;
import java.io.SequenceInputStream;
import java.util.Enumeration;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.557702411245053
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Player player0 = new Player((-6143), "]>E<({[0", "module.ModuleBrowserDialog$ModuleFilter", (-6143));
      MockFile mockFile0 = new MockFile("]>E<({[0", "state.Party");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      MockPrintStream mockPrintStream1 = new MockPrintStream(mockPrintStream0);
      Locale locale0 = Locale.PRC;
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream1);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-9);
      byteArray0[1] = (byte) (-97);
      byteArray0[2] = (byte)120;
      byteArray0[3] = (byte)1;
      byteArray0[4] = (byte)120;
      byteArray0[5] = (byte)17;
      player0.getStrength();
      Player player1 = new Player(1024, "]>E<({[0", (String) null, (byte) (-97), 1024);
      player1.getName();
      // Undeclared exception!
      try { 
        player1.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.488882958485498
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player(1333, "module.ModuleBrowserDialog$ModuleFilter", "module.ModuleBrowserDialog$ModuleFilter", 1333);
      player1.setX(0.0F);
      Player player2 = new Player();
      player2.setDead();
      Player player3 = new Player((short)4919, "^z:=C", "'ptsm}!0jWAwp", (-1149), (-1));
      player2.setConnected(true);
      player1.setJoinOK(player0, true);
      player1.pack();
      player2.getIP();
      player0.setX(0.0F);
      player3.setMoney(0.0F);
      player3.isJoinOK(player0, true);
      player0.getZ();
      player2.setDead();
      player0.getIP();
      player2.setConnected(false);
      player3.pack();
      player3.setDead((-1835L), true);
      player3.isJoinOK(player0, false);
      player2.type();
      assertFalse(player2.isConnected());
      
      float float0 = player0.getX();
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.6902535776209735
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Player player0 = new Player();
      player0.setX(2026);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      Player player1 = new Player(2026, "", 10);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "DoYg7m]z3*o");
      player1.setY(5);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      player1.getSubparty();
      player0.setZ(1650.428F);
      player0.setY((-1.0F));
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)17;
      byteArray0[1] = (byte)17;
      byteArray0[2] = (byte)17;
      byteArray0[3] = (byte)17;
      byteArray0[4] = (byte)17;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      player0.getY();
      player0.setJoinOK(player1, false);
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertEquals(1650.428F, player0.getZ(), 0.01F);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.3203928312357034
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Player player0 = new Player(2026);
      player0.setX(2026);
      player0.setDead();
      Player player1 = new Player(559, "^z:=C", "^z:=C", (short)4919, (short)4919);
      player1.next = (Party) player0;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      player0.setConnected(true);
      player0.setJoinOK(player1, true);
      byte[] byteArray0 = player0.pack();
      player1.getIP();
      MockPrintStream mockPrintStream0 = new MockPrintStream("^z:=C");
      Locale locale0 = Locale.GERMANY;
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) player1.next;
      objectArray0[1] = (Object) "^z:=C";
      objectArray0[2] = (Object) locale0;
      objectArray0[3] = (Object) "^z:=C";
      objectArray0[4] = (Object) null;
      Object object0 = new Object();
      objectArray0[5] = object0;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      player1.getY();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      pipedOutputStream0.write(byteArray0);
      DataInputStream dataInputStream1 = new DataInputStream(pipedInputStream0);
      boolean boolean0 = player1.unpack(dataInputStream1);
      assertEquals(0, pipedInputStream0.available());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.969755134636486
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "v+Q$KlD");
      Player player0 = new Player(1663, "", "", (-739), (-250));
      player0.setX((-739));
      Party party0 = player0.next;
      player0.prev = null;
      player0.setX(1663);
      player0.getZ();
      player0.setDead();
      player0.getStrength();
      player0.getX();
      player0.getZ();
      player0.getX();
      player0.toString();
      float float0 = player0.getZ();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player((-1));
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)4;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      byteArray0[1] = (byte)64;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte)4;
      byteArray0[4] = (byte)1;
      byteArray0[5] = (byte) (-70);
      byteArray0[6] = (byte) (-46);
      byteArray0[7] = (byte)39;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      float float0 = player0.getY();
      assertEquals(0.0F, float0, 0.01F);
      
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      pipedOutputStream0.write(byteArray0);
      pipedInputStream0.markSupported();
      DataInputStream dataInputStream1 = new DataInputStream(pipedInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream1);
      assertFalse(boolean0);
      
      float float1 = player0.getX();
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", player0.getIP());
      assertFalse(player0.isDead());
      assertEquals("Player-1", player0.toString());
      assertEquals(10.0F, float1, 0.01F);
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Player player0 = new Player(2147340491);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      MockPrintStream mockPrintStream0 = new MockPrintStream(pipedOutputStream0);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)50;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)5;
      byteArray0[3] = (byte) (-113);
      byteArray0[4] = (byte) (-53);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) player0;
      objectArray0[1] = (Object) pipedOutputStream0;
      Object object0 = new Object();
      objectArray0[2] = object0;
      objectArray0[3] = (Object) pipedOutputStream0;
      objectArray0[4] = (Object) "-.Jq*";
      objectArray0[5] = (Object) player0;
      objectArray0[6] = (Object) mockPrintStream0;
      PrintStream printStream0 = mockPrintStream0.format("-.Jq*", objectArray0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(printStream0);
      player0.pack(dataOutputStream0);
      player0.getY();
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.5594415416798357
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      int int0 = 4708;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      Player player0 = new Player(5, "", 4708);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      player0.getSubparty();
      player0.setZ(5);
      Player player1 = new Player((-155), (String) null, "", 4708, 2258);
      player1.setY(5);
      Player player2 = new Player(4708, (String) null, (short)4919);
      // Undeclared exception!
      try { 
        player2.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.7874335778425303
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Player player0 = new Player(544, "(D>*ye`x", "(D>*ye`x", 544);
      Player player1 = new Player(4919, (String) null, (String) null, 544);
      player0.prev = (Party) player1;
      player0.add(player1);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-88);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)127;
      player1.unpack(byteArray0);
      player0.getSubparty();
      player0.getIP();
      player0.pack();
      player0.isJoinOK(player1, false);
      float float0 = Player.MOVE_DISTANCE;
      boolean boolean0 = player1.isJoinOK(player0, true);
      assertFalse(boolean0);
      
      player0.pack();
      int int0 = player1.getPictureId();
      assertFalse(player1.isDead());
      assertEquals(1, player1.getStrength());
      assertTrue(player1.isConnected());
      assertEquals(544, int0);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(0.0F, player1.getY(), 0.01F);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.6772245773362195
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Player player0 = new Player();
      player0.setX(2026);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      Player player1 = new Player(2026, "", 10);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "DoYg7m]z3*o");
      player1.setY(5);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      player1.getSubparty();
      player0.setZ(1650.428F);
      player0.setY((-1.0F));
      player1.pack();
      player1.setY(0.1F);
      player0.getName();
      assertEquals(1650.428F, player0.getZ(), 0.01F);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      MockPrintStream mockPrintStream0 = new MockPrintStream(pipedOutputStream0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      Player player0 = new Player(31930);
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "'`)");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "'`)");
      String string0 = "";
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "~QZVk=e4[TV-?#7H");
      Player player0 = new Player((byte) (-1), "", (byte) (-1));
      Player player1 = new Player((byte) (-1), "j#D5#?qUp7B", "state.Party", (-17916), 692);
      player1.pack();
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream((-17916));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Player player0 = new Player(4, "dhm$@=%Yj^5T4", "dhm$@=%Yj^5T4", 4, 10);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("dhm$@=%Yj^5T4");
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
      player0.pack(dataOutputStream0);
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.325750657489052
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Player player0 = new Player((-1), "module.ModuleBrowserDialog$ModuleFilter", (-1));
      player0.setMoney((-1));
      player0.isConnected();
      player0.setY((-1));
      player0.getSubparty();
      player0.getMoney();
      player0.setMoney((-1.0F));
      player0.setY(0L);
      player0.setDead(0L);
      player0.pack();
      player0.setConnected(false);
      player0.setDead();
      player0.toString();
      player0.getX();
      Player player1 = new Player((-1), "module.ModuleBrowserDialog$ModuleFilter", (-4841));
      player1.setY((-1));
      player1.setX((-4841));
      player0.isJoinOK(player1, true);
      player0.getZ();
      player0.setY(0.0F);
      player0.setDead(0L, false);
      player0.setDead();
      player0.getX();
      player1.isConnected();
      player1.isJoinOK(player0, true);
      player1.setX(0.0F);
      assertEquals(0.0F, player1.getX(), 0.01F);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Player player0 = new Player((-1957), (String) null, (-1957));
      assertTrue(player0.isConnected());
      
      player0.setConnected(false);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      player0.unpack(dataInputStream0);
      player0.reset(true);
      int int0 = player0.getPictureId();
      assertFalse(player0.isConnected());
      assertEquals((-1957), int0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Player player0 = new Player((-1));
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)4;
      byteArray0[1] = (byte)64;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      byteArray0[3] = (byte)4;
      byteArray0[4] = (byte)1;
      byteArray0[5] = (byte) (-70);
      Player player1 = new Player((byte) (-70));
      player0.setJoinOK(player1, true);
      byteArray0[6] = (byte) (-46);
      byteArray0[7] = (byte)39;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      player0.getY();
      Player player2 = null;
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.4241710186205303
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Player player0 = new Player(2254, "K~H&<Zd", "", 2254);
      Player player1 = new Player((-636));
      player0.next = (Party) player1;
      player0.next = null;
      player0.setY(0.0F);
      player0.getSubparty();
      player0.setZ(651.1F);
      player0.setY(651.1F);
      player0.pack();
      player0.setY(0.0F);
      // Undeclared exception!
      try { 
        player0.pack((DataOutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.6376398674083723
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Player player0 = new Player();
      player0.setDead(2716L);
      player0.prev = null;
      player0.next = null;
      player0.toString();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)64;
      byteArray0[1] = (byte)5;
      byteArray0[2] = (byte) (-75);
      byteArray0[3] = (byte) (-109);
      byteArray0[4] = (byte) (-128);
      byteArray0[5] = (byte)24;
      byteArray0[6] = (byte) (-126);
      byteArray0[7] = (byte)39;
      byteArray0[8] = (byte) (-62);
      player0.unpack(byteArray0);
      player0.getName();
      int int0 = player0.gangStrength();
      assertEquals(2716L, player0.getTimeOfDeath());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.414789648521252
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Player player0 = new Player((-173), "w&atXmVx~fczFD", "]U.vG", 0, 0);
      player0.setConnected(false);
      player0.setZ(0.0F);
      player0.toString();
      Player player1 = new Player((short)4919);
      player0.isJoinOK(player1, true);
      player0.setJoinOK(player1, false);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-20);
      byteArray0[1] = (byte)0;
      player0.setDead(1L, false);
      byteArray0[2] = (byte)1;
      player1.head = (Party) player0;
      byteArray0[3] = (byte) (-1);
      player0.unpack(byteArray0);
      player1.gangStrength();
      player1.isDead();
      player1.setDead((long) (-173));
      player1.type();
      player1.getY();
      assertEquals((-173L), player1.getTimeOfDeath());
      
      boolean boolean0 = player0.isConnected();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.576534609090467
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Player player0 = new Player();
      player0.setX(2026);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      Player player1 = new Player(5);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "DoYg7m]z3*o");
      player1.setY(5);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      player1.getSubparty();
      player0.setZ(1650.428F);
      player0.setY((-1.0F));
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)17;
      byteArray0[1] = (byte)17;
      byteArray0[2] = (byte)17;
      byteArray0[3] = (byte)17;
      byteArray0[2] = (byte)17;
      byteArray0[5] = (byte)17;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      player1.getY();
      player1.setJoinOK(player0, false);
      boolean boolean0 = player1.isJoinOK(player0, true);
      assertEquals(5.0F, player1.getY(), 0.01F);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "ohem");
      Player player0 = new Player(1766, "", "ohem", 2253, (-804));
      int int0 = player0.gangStrength();
      assertEquals("", player0.getIP());
      assertEquals(2253, player0.getPictureId());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals((-804), int0);
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.258303007954067
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Player player0 = new Player(3, "", "", (-1));
      player0.reset(true);
      Party party0 = player0.gangBoss();
      player0.boss = party0;
      player0.setDead((long) (-1), true);
      player0.setY(610.1778F);
      party0.id = 582;
      player0.prev = party0;
      party0.remove((Party) null);
      player0.getZ();
      player0.prev = party0;
      player0.getMoney();
      player0.getStrength();
      byte[] byteArray0 = player0.pack();
      player0.setX(1899.3866F);
      player0.getName();
      player0.unpack(byteArray0);
      assertEquals((-1L), player0.getTimeOfDeath());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)4;
      byteArray0[1] = (byte)64;
      Player player0 = new Player((byte)64, "", (byte)4);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(sequenceInputStream0, sequenceInputStream0);
      SequenceInputStream sequenceInputStream2 = new SequenceInputStream(sequenceInputStream1, sequenceInputStream1);
      sequenceInputStream1.skip(0L);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertFalse(boolean0);
      
      player0.toString();
      player0.getName();
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(4, player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.7825850929940454
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "-&Cg[G vl@_)");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)39;
      byteArray0[1] = (byte) (-94);
      byteArray0[2] = (byte)2;
      byteArray0[3] = (byte) (-1);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Player player0 = new Player();
      float float0 = player0.getY();
      assertEquals(0.0F, float0, 0.01F);
      
      Player player1 = new Player((byte)2, "", "hy/!1QlY,\"", (byte) (-1));
      player1.boss = (Party) player0;
      player1.setJoinOK(player0, false);
      player0.isJoinOK(player1, false);
      float float1 = player1.getX();
      assertEquals(10.0F, float1, 0.01F);
      
      String string0 = player1.getIP();
      assertEquals("", string0);
      
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals((-1), player1.getPictureId());
      assertFalse(boolean0);
      assertTrue(player1.isConnected());
      assertEquals("Player-1", player0.toString());
      assertEquals(0, player0.getPictureId());
      assertFalse(player1.isDead());
      assertEquals(1, player1.getStrength());
      assertEquals(0L, player1.getTimeOfDeath());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.9663881312694826
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Player player0 = new Player((-173), "w&atXmVx~fczFD", "]U.vG", 0, 0);
      player0.setConnected(false);
      player0.setZ(0.0F);
      player0.toString();
      Player player1 = new Player((short)4919);
      player0.isJoinOK(player1, true);
      player0.setJoinOK(player1, false);
      byte[] byteArray0 = new byte[4];
      player0.getStrength();
      player0.setX(1571.0F);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
      try { 
        bufferedInputStream0.reset();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Resetting to invalid mark
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Player player0 = new Player(0, "module.ModuleBrowserDialog$ModuleFilter", 4919);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)26;
      byteArray0[3] = (byte)0;
      player0.unpack(byteArray0);
      assertFalse(player0.isDead());
      assertEquals(4919, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.792904926173455
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Player player0 = new Player();
      player0.setX(2026);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      Player player1 = new Player(2026, "", 10);
      player1.setDead((long) (short)4919, false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "DoYg7m]z3*o");
      player1.setY(5);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      player1.getSubparty();
      player0.setZ(1650.428F);
      player0.setY((-1.0F));
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)17;
      byteArray0[1] = (byte)17;
      byteArray0[2] = (byte)17;
      byteArray0[3] = (byte)17;
      byteArray0[2] = (byte)17;
      byteArray0[5] = (byte)17;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      player1.getY();
      player1.setJoinOK(player0, false);
      boolean boolean0 = player1.isJoinOK(player0, false);
      assertEquals(4919L, player1.getTimeOfDeath());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.7825850929940454
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Player player0 = new Player();
      player0.setX(2026);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      Player player1 = new Player(2026, "", 10);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "DoYg7m]z3*o");
      player1.setY(5);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      player1.getSubparty();
      player0.setZ(1650.428F);
      player1.setY(0.0F);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)17;
      byteArray0[1] = (byte)17;
      byteArray0[2] = (byte)17;
      byteArray0[3] = (byte)17;
      byteArray0[4] = (byte)17;
      byteArray0[5] = (byte)17;
      byteArray0[6] = (byte)17;
      byteArray0[7] = (byte)17;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      player0.getY();
      player0.setJoinOK(player1, true);
      boolean boolean0 = player1.isJoinOK(player0, false);
      assertEquals(2026.0F, player0.getX(), 0.01F);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Player player0 = new Player();
      int int0 = player0.getPictureId();
      assertEquals(0, int0);
      
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("Le+)?[&=G#='Cb");
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
      player0.pack(dataOutputStream0);
      player0.setZ(0.0F);
      float float0 = player0.getX();
      assertEquals(10.0F, float0, 0.01F);
      
      boolean boolean0 = player0.isDead();
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertFalse(boolean0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getZ(), 0.01F);
      assertEquals("Player-1", player0.getName());
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Player player0 = new Player((-5328), (String) null, 940);
      String string0 = player0.getIP();
      assertEquals(940, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("0.0.0.0", string0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Player player0 = new Player(4352, "InLJ][LOS!'CH`H%mRv", "InLJ][LOS!'CH`H%mRv", 4352);
      player0.setMoney(4352);
      player0.toString();
      player0.getStrength();
      player0.getMoney();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream((short)4919);
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(byteArrayOutputStream0);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)33;
      byteArray0[1] = (byte) (-7);
      byteArray0[2] = (byte)18;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte) (-1);
      byteArray0[5] = (byte)96;
      // Undeclared exception!
      try { 
        byteArrayOutputStream0.write(byteArray0, (int) (short)4919, (int) (byte) (-1));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayOutputStream", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "'`)");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "'`)");
      float float0 = Player.TOLERANCE;
      Player player0 = new Player((-2565), (String) null, (-2565));
      int int0 = player0.gangStrength();
      assertEquals(1, int0);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals((-2565), player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.4187252478056886
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Player player0 = new Player(0);
      player0.setZ(0);
      player0.setDead((long) 0);
      player0.setMoney((-3614.8574F));
      player0.setY(0.0F);
      player0.setZ(0.0F);
      player0.getSubparty();
      player0.setZ(0);
      player0.gangStrength();
      player0.getStrength();
      player0.getPictureId();
      player0.setX(0.0F);
      player0.setMoney(0);
      player0.setConnected(false);
      player0.setZ(0.0F);
      player0.setDead((long) 0);
      player0.setMoney((-1236.5001F));
      player0.getZ();
      player0.setMoney(0.2F);
      player0.setZ(0.0F);
      player0.getPictureId();
      player0.isConnected();
      Player player1 = new Player(1, " ", " ", 0, 0);
      player0.getTimeOfDeath();
      player0.getIP();
      player0.setDead((long) 0, false);
      player0.type();
      player0.type();
      System.setCurrentTimeMillis(5);
      System.setCurrentTimeMillis((-97L));
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.784066574475527
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Player player0 = new Player();
      player0.setDead(0L);
      Player player1 = new Player((short)4919, "gui.ModuleBrowserDialog$ModuleFilter", "]?NN>OYU8C,u:`3_q%e", (short)4919, (short)4919);
      player1.setDead();
      player0.remove(player1);
      assertEquals(1392409281320L, player1.getTimeOfDeath());
      
      player0.setConnected(true);
      boolean boolean0 = player0.isDead();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Player player0 = new Player();
      player0.setX(2026);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "DoYg7m]z3*o");
      player0.isDead();
      player0.setZ(1650.428F);
      player0.setY((-1.0F));
      assertEquals(1650.428F, player0.getZ(), 0.01F);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.9676652704776565
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Player player0 = new Player();
      player0.setX(2026);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      Player player1 = new Player(2026, "", 10);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "DoYg7m]z3*o");
      player1.setY(0.0F);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      player1.setDead((long) 10);
      player1.getSubparty();
      player0.setZ(1650.428F);
      player0.setY((-1.0F));
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)17;
      byteArray0[1] = (byte)17;
      byteArray0[2] = (byte)17;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      player0.getY();
      player0.setJoinOK(player1, false);
      boolean boolean0 = player1.isJoinOK(player0, false);
      assertEquals(10L, player1.getTimeOfDeath());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Player player0 = new Player(5, "dP9p9bi7;5", "state.Player", 5, (-2717));
      player0.toString();
      assertEquals((-2717), player0.getStrength());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(5, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals("dP9p9bi7;5", player0.getIP());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      System.setCurrentTimeMillis((-1L));
      Player player0 = new Player(168, "", 168);
      player0.toString();
      assertEquals(168, player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals(1, player0.getStrength());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.576534609090467
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Player player0 = new Player((-1));
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)4;
      Player player1 = new Player((byte)0, "", (byte)4);
      player0.setConnected(false);
      player1.setJoinOK(player0, true);
      player1.isJoinOK(player0, false);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      player1.unpack(dataInputStream0);
      player1.pack();
      player1.setY(0.0F);
      PipedInputStream pipedInputStream1 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream1);
      PipedInputStream pipedInputStream2 = null;
      try {
        pipedInputStream2 = new PipedInputStream(pipedOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Player player0 = new Player(5, "Player.unpack(): *** WARNING *** data is not of proper type!", "Player.unpack(): *** WARNING *** data is not of proper type!", 5);
      MockFile mockFile0 = new MockFile("state.Player", "Player.unpack(): *** WARNING *** data is not of proper type!");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      MockPrintStream mockPrintStream1 = new MockPrintStream(mockPrintStream0);
      Locale locale0 = Locale.PRC;
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) "state.Player";
      PrintStream printStream0 = mockPrintStream1.printf(locale0, "state.Player", objectArray0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(printStream0);
      player0.pack(dataOutputStream0);
      assertEquals(5, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.8884888954634342
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Player player0 = new Player((-1));
      player0.getY();
      Player player1 = new Player((-1), "3b7\"e-v<G", 10);
      player1.setConnected(true);
      player1.prev = (Party) player0;
      player0.setJoinOK(player1, true);
      player1.pack();
      player0.isJoinOK(player1, true);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      player0.setZ(10);
      player0.setY((-1));
      player1.reset(true);
      player0.pack();
      player1.setY(714.2913F);
      assertEquals(714.2913F, player1.getY(), 0.01F);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Player player0 = new Player(5, "ewN+2<I.V@", "ewN+2<I.V@", (-1), 4919);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)69;
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte)64;
      byteArray0[4] = (byte) (-53);
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte) (-38);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)69, 4919);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertFalse(boolean0);
      assertTrue(player0.isConnected());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals((-1), player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(4919, player0.getStrength());
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.8827437576468555
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Player player0 = new Player((-1));
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "+q}*>D;1YT-kg]z#s");
      Player player1 = new Player(5, "", (-1));
      player1.next = (Party) player0;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "!MmDuNM%a*B-@jB");
      player0.setY(0.0F);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      player1.getSubparty();
      player0.setZ((-1));
      player1.setY(5);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)17;
      byteArray0[1] = (byte)17;
      byteArray0[2] = (byte)17;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      player1.getY();
      Player player2 = new Player((-252));
      player1.setJoinOK(player2, false);
      assertEquals(5.0F, player1.getY(), 0.01F);
      
      Player player3 = new Player(19, "", "E", 10, 3252);
      player3.reset(false);
      boolean boolean0 = player2.isJoinOK(player3, false);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.6772245773362195
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Player player0 = new Player(2254, "K~H&<Zd", "", 2254);
      Player player1 = new Player((-636));
      player0.next = (Party) player1;
      player0.setX(0.1F);
      player0.next.next = (Party) player1;
      player0.next = null;
      player0.setY(0.0F);
      player0.getSubparty();
      player0.setZ(651.1F);
      player0.setY(651.1F);
      player0.pack();
      player0.setY(0.0F);
      assertEquals(0.1F, player0.getX(), 0.01F);
      
      float float0 = player1.getMoney();
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.9721987111105235
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Player player0 = new Player();
      player0.setX(2026);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      Player player1 = new Player(2026, "", 10);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "\"$Zq");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "DoYg7m]z3*o");
      player1.setY(5);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      player1.getSubparty();
      player0.setZ(1650.428F);
      player0.setY((-1.0F));
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)17;
      byteArray0[1] = (byte)17;
      byteArray0[2] = (byte)17;
      byteArray0[3] = (byte)17;
      byteArray0[2] = (byte)17;
      byteArray0[5] = (byte)17;
      player1.setDead();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      player1.getY();
      player1.setJoinOK(player0, false);
      boolean boolean0 = player1.isJoinOK(player0, false);
      assertEquals(1650.428F, player0.getZ(), 0.01F);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      Player player0 = new Player((-636));
      player0.setConnected(false);
      int int0 = 3;
      Player player1 = new Player(3, "", ".*[.]class$", (-29));
      SequenceInputStream sequenceInputStream0 = null;
      try {
        sequenceInputStream0 = new SequenceInputStream((Enumeration<? extends InputStream>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.SequenceInputStream", e);
      }
  }
}
