/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 04:18:49 GMT 2019
 */

package com.lts.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.lts.io.ArchiveScanner;
import com.lts.io.DirectoryScanner;
import com.lts.io.ImprovedFile;
import java.io.DataInputStream;
import java.io.File;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.SequenceInputStream;
import java.net.URI;
import java.util.Collection;
import java.util.Enumeration;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ArchiveScanner_ESTest extends ArchiveScanner_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      archiveScanner0.includes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      String[] stringArray0 = new String[3];
      archiveScanner0.addDefaultExcludes();
      Vector<InputStream> vector0 = new Vector<InputStream>();
      archiveScanner0.dirsIncluded = vector0;
      stringArray0[0] = "(m.:H02kT?\"O<";
      stringArray0[1] = "(m.:H02kT?\"O<";
      stringArray0[2] = "Aui7co";
      archiveScanner0.includes = stringArray0;
      archiveScanner0.addDefaultExcludes();
      archiveScanner0.addDefaultExcludes();
      archiveScanner0.couldHoldIncluded("(m.:H02kT?\"O<");
      archiveScanner0.addDefaultExcludes();
      archiveScanner0.addDefaultExcludes();
      archiveScanner0.isExcluded("3|");
      archiveScanner0.setExcludes(stringArray0);
      archiveScanner0.couldHoldIncluded("3|");
      archiveScanner0.isIncluded("(m.:H02kT?\"O<");
      // Undeclared exception!
      try { 
        archiveScanner0.processFile("Aui7co");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      String[] stringArray0 = new String[2];
      stringArray0[1] = ".war";
      archiveScanner0.includes = stringArray0;
      String[] stringArray1 = new String[3];
      archiveScanner0.addDefaultExcludes();
      Vector<InputStream> vector0 = new Vector<InputStream>();
      archiveScanner0.dirsIncluded = vector0;
      stringArray1[0] = "(m.:H02kT?\"O<";
      stringArray1[1] = "";
      stringArray1[2] = " !M1T gM3n0*P6s\"YL$";
      archiveScanner0.includes = stringArray1;
      archiveScanner0.addDefaultExcludes();
      archiveScanner0.addDefaultExcludes();
      archiveScanner0.couldHoldIncluded("");
      archiveScanner0.addDefaultExcludes();
      vector0.setSize(2);
      archiveScanner0.isExcluded("3|");
      archiveScanner0.couldHoldIncluded("(m.:H02kT?\"O<");
      String[] stringArray2 = new String[7];
      stringArray2[0] = " !M1T gM3n0*P6s\"YL$";
      stringArray2[1] = "o48L8T8~joe|+~";
      stringArray2[2] = "(m.:H02kT?\"O<";
      stringArray2[3] = " !M1T gM3n0*P6s\"YL$";
      stringArray2[4] = "(m.:H02kT?\"O<";
      stringArray2[5] = " !M1T gM3n0*P6s\"YL$";
      stringArray2[6] = "";
      archiveScanner0.setExcludes(stringArray2);
      archiveScanner0.isIncluded("");
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive((File) null, "(m.:H02kT?\"O<");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.2248830687452417
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "q8;Ng)-@*d";
      stringArray0[1] = ".war";
      archiveScanner0.includes = stringArray0;
      String[] stringArray1 = new String[2];
      Vector<InputStream> vector0 = new Vector<InputStream>();
      archiveScanner0.dirsIncluded = vector0;
      stringArray1[0] = "(m2:H02kT?\"#<";
      stringArray1[1] = "";
      archiveScanner0.addDefaultExcludes();
      archiveScanner0.addDefaultExcludes();
      DirectoryScanner.matchPath("u8Pq{", "(m2:H02kT?\"#<");
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory((File) null, "q8;Ng)-@*d", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.3842713196839629
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "q8;NgG)-:@*d";
      stringArray0[1] = ".war";
      archiveScanner0.includes = stringArray0;
      String[] stringArray1 = new String[2];
      Vector<InputStream> vector0 = new Vector<InputStream>();
      archiveScanner0.dirsIncluded = vector0;
      stringArray1[0] = "(m.:H02kT?\"O<";
      stringArray1[1] = "";
      archiveScanner0.addDefaultExcludes();
      archiveScanner0.addDefaultExcludes();
      DirectoryScanner.matchPath("u8Pq{", "(m.:H02kT?\"O<");
      archiveScanner0.setExcludes(stringArray1);
      ImprovedFile improvedFile0 = new ImprovedFile((File) null, "H");
      ImprovedFile improvedFile1 = improvedFile0.createTempDir();
      archiveScanner0.processDirectory(improvedFile1, "q8;NgG)-:@*d", true);
      assertEquals(0L, improvedFile1.getUsableSpace());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "q8;NgG)-:@*d";
      stringArray0[1] = ".war";
      archiveScanner0.includes = stringArray0;
      String[] stringArray1 = new String[2];
      Vector<InputStream> vector0 = new Vector<InputStream>();
      archiveScanner0.dirsIncluded = vector0;
      stringArray1[0] = "(m.:H02kT?\"O<";
      stringArray1[1] = "";
      archiveScanner0.addDefaultExcludes();
      archiveScanner0.addDefaultExcludes();
      DirectoryScanner.matchPath("u8Pq{", "(m.:H02kT?\"O<");
      DirectoryScanner.matchPath("#HpP6\"p#vN;#Y*Um", " !M1T gM3n0*P6s\"YL$");
      archiveScanner0.setExcludes(stringArray1);
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory((File) null, ".war", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "i'l{j}:\"zP2>+|^[PB";
      archiveScanner0.addDefaultExcludes();
      stringArray0[1] = "";
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.filesExcluded = vector0;
      stringArray0[2] = " !M1T gM3n0*P6s\"YL$";
      archiveScanner0.includes = stringArray0;
      archiveScanner0.addDefaultExcludes();
      archiveScanner0.addDefaultExcludes();
      archiveScanner0.couldHoldIncluded("");
      archiveScanner0.addDefaultExcludes();
      archiveScanner0.addDefaultExcludes();
      vector0.add((Object) "i'l{j}:\"zP2>+|^[PB");
      archiveScanner0.isIncluded("6:+yo6CXOb'd&");
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive((File) null, "i'l{j}:\"zP2>+|^[PB");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.dirsExcluded = vector0;
      DirectoryScanner.matchPath("Error trying to ascertain the existence of entry, ", ">d");
      archiveScanner0.includes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      archiveScanner0.addDefaultExcludes();
      archiveScanner0.addDefaultExcludes();
      DirectoryScanner.matchPath(" !M1T gM3n0*P6s\"YL$", " !M1T gM3n0*P6s\"YL$");
      DirectoryScanner.matchPath("", "n&!~-4w\"ta*C/cZ$eLe");
      archiveScanner0.setExcludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      archiveScanner0.processDirectory((File) null, ".EAR", true);
      assertEquals(1, ArchiveScanner.DIRECTORY);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      archiveScanner0.includes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      String[] stringArray0 = new String[3];
      archiveScanner0.addDefaultExcludes();
      Vector<InputStream> vector0 = new Vector<InputStream>();
      archiveScanner0.dirsIncluded = vector0;
      stringArray0[0] = "(m.:H02kT?\"O<";
      stringArray0[1] = "";
      stringArray0[2] = " !M1T gM3n0*P6s\"YL$";
      archiveScanner0.includes = stringArray0;
      archiveScanner0.addDefaultExcludes();
      archiveScanner0.addDefaultExcludes();
      DirectoryScanner.matchPath("", " !M1T gM3n0*P6s\"YL$");
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      Vector<InputStream> vector1 = new Vector<InputStream>();
      vector1.add((InputStream) pipedInputStream0);
      DirectoryScanner.matchPath("(m.:H02kT?\"O<", " /@4a3");
      archiveScanner0.isIncluded("s`t=Dnc9qHK,c2L@do");
      // Undeclared exception!
      try { 
        archiveScanner0.processFile(" !M1T gM3n0*P6s\"YL$");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ImprovedFile improvedFile0 = null;
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      Vector<Object> vector0 = new Vector<Object>();
      vector0.add((Object) archiveScanner0);
      archiveScanner0.dirsExcluded = vector0;
      DirectoryScanner.matchPath("Error trying to ascertain the existence of entry, ", ">d");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "The event type code, ";
      stringArray0[1] = "";
      stringArray0[2] = " !M1T gM3n0*P6s\"YL$";
      archiveScanner0.includes = stringArray0;
      archiveScanner0.addDefaultExcludes();
      archiveScanner0.addDefaultExcludes();
      DirectoryScanner.matchPath(" !M1T gM3n0*P6s\"YL$", " !M1T gM3n0*P6s\"YL$");
      archiveScanner0.couldHoldIncluded("");
      archiveScanner0.isIncluded("YIY[qL(");
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive((File) null, " !M1T gM3n0*P6s\"YL$");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "(m.:H02kT?\"O<";
      stringArray0[1] = "";
      stringArray0[2] = " !M1T gM3n0*P6s\"YL$";
      archiveScanner0.includes = stringArray0;
      Vector<Object> vector0 = new Vector<Object>();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      archiveScanner0.dirsNotIncluded = vector0;
      archiveScanner0.addDefaultExcludes();
      archiveScanner0.addDefaultExcludes();
      archiveScanner0.couldHoldIncluded("");
      archiveScanner0.addDefaultExcludes();
      archiveScanner0.addDefaultExcludes();
      archiveScanner0.couldHoldIncluded(".ear");
      archiveScanner0.isIncluded(".ar");
      // Undeclared exception!
      try { 
        archiveScanner0.processFile("(m.:H02kT?\"O<");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "(m.:H02kT?\"O<";
      stringArray0[1] = "";
      stringArray0[2] = "The event type code, .jar.jar";
      archiveScanner0.includes = stringArray0;
      archiveScanner0.addDefaultExcludes();
      archiveScanner0.addDefaultExcludes();
      archiveScanner0.addDefaultExcludes();
      archiveScanner0.isExcluded("!");
      Vector<Object> vector0 = new Vector<Object>();
      vector0.add((Object) archiveScanner0);
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      vector0.remove((Object) dataInputStream0);
      vector0.remove((Object) "(m.:H02kT?\"O<");
      archiveScanner0.couldHoldIncluded(".ear");
      Vector<Object> vector1 = new Vector<Object>();
      vector1.add((Object) "");
      archiveScanner0.filesExcluded = vector1;
      archiveScanner0.isIncluded("(m.:H02kT?\"O<");
      // Undeclared exception!
      try { 
        archiveScanner0.processFile("The event type code, .jar.jar");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ImprovedFile improvedFile0 = null;
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.dirsExcluded = vector0;
      DirectoryScanner.matchPath("Error trying to ascertain the existence of entry, ", ">d");
      archiveScanner0.includes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      archiveScanner0.addDefaultExcludes();
      archiveScanner0.addDefaultExcludes();
      DirectoryScanner.matchPath(" !M1T gM3n0*P6s\"YL$", " !M1T gM3n0*P6s\"YL$");
      Vector<InputStream> vector1 = new Vector<InputStream>();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null, 47);
      vector1.add((InputStream) pushbackInputStream0);
      vector1.add((InputStream) pushbackInputStream0);
      DirectoryScanner.matchPath("", "Error trying to read zipfile, ");
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory((File) null, "s`t=Dnc9qHK,c2L@do", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.dirsExcluded = vector0;
      DirectoryScanner.matchPath("Error trying to ascertain the existence of entry, ", ">d");
      vector0.addAll((Collection<?>) archiveScanner0.dirsExcluded);
      archiveScanner0.includes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      archiveScanner0.addDefaultExcludes();
      archiveScanner0.addDefaultExcludes();
      archiveScanner0.isExcluded("Error trying to ascertain the existence of entry, ");
      archiveScanner0.isIncluded("com.lts.io.ArchiveScanner");
      archiveScanner0.setExcludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory((File) null, ".EAR", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.dirsExcluded = vector0;
      DirectoryScanner.matchPath("Error trying to ascertain the existence of entry, ", ">d");
      vector0.addAll((Collection<?>) archiveScanner0.dirsExcluded);
      archiveScanner0.includes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      archiveScanner0.addDefaultExcludes();
      archiveScanner0.couldHoldIncluded(".jar");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "o48L8T8~joe|+~";
      archiveScanner0.setExcludes(stringArray0);
      archiveScanner0.isIncluded("IO error scanning directory ");
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive((File) null, "2qx");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ImprovedFile improvedFile0 = null;
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      Vector<Integer> vector0 = new Vector<Integer>();
      archiveScanner0.filesIncluded = vector0;
      String string0 = "";
      archiveScanner0.includes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      archiveScanner0.addDefaultExcludes();
      archiveScanner0.addDefaultExcludes();
      DirectoryScanner.matchPatternStart("", "eZ2w4g)#");
      archiveScanner0.addDefaultExcludes();
      Vector<Object> vector1 = new Vector<Object>();
      archiveScanner0.filesNotIncluded = vector1;
      archiveScanner0.setExcludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      archiveScanner0.isExcluded("");
      String string1 = "t<`%sw~ZS.ky";
      archiveScanner0.setBasedir("t<`%sw~ZS.ky");
      String string2 = "LodY";
      archiveScanner0.processArchive((File) null, "LodY");
      // Undeclared exception!
      try { 
        archiveScanner0.toFileType((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      archiveScanner0.includes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      archiveScanner0.addDefaultExcludes();
      Vector<InputStream> vector0 = new Vector<InputStream>();
      archiveScanner0.dirsIncluded = vector0;
      archiveScanner0.includes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      archiveScanner0.addDefaultExcludes();
      archiveScanner0.addDefaultExcludes();
      archiveScanner0.addDefaultExcludes();
      archiveScanner0.addDefaultExcludes();
      vector0.setSize(2);
      archiveScanner0.isExcluded("3|");
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive((File) null, "(m.:H02kT?\"O<");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      archiveScanner0.includes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      String[] stringArray0 = new String[3];
      archiveScanner0.addDefaultExcludes();
      Vector<InputStream> vector0 = new Vector<InputStream>();
      archiveScanner0.dirsIncluded = vector0;
      stringArray0[0] = "(m.:H02kT?\"O<";
      stringArray0[1] = "";
      archiveScanner0.addDefaultExcludes();
      archiveScanner0.addDefaultExcludes();
      Vector<Object> vector1 = new Vector<Object>();
      vector1.add((Object) "!");
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      Integer integer0 = new Integer(1);
      vector1.remove((Object) integer0);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      vector0.add((InputStream) dataInputStream0);
      vector0.removeAllElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      vector1.remove((Object) sequenceInputStream0);
      archiveScanner0.couldHoldIncluded("");
      archiveScanner0.isIncluded("(m.:H02kT?\"O<");
      // Undeclared exception!
      try { 
        archiveScanner0.processFile("(m.:H02kT?\"O<");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.dirsExcluded = vector0;
      DirectoryScanner.matchPath("Error trying to ascertain the existence of entry, ", ">d");
      archiveScanner0.includes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      archiveScanner0.addDefaultExcludes();
      archiveScanner0.addDefaultExcludes();
      DirectoryScanner.matchPath(" !M1T gM3n0*P6s\"YL$", " !M1T gM3n0*P6s\"YL$");
      DirectoryScanner.matchPath("", "n&!~-4w\"ta*C/cZ$eLe");
      archiveScanner0.setExcludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      // Undeclared exception!
      try { 
        archiveScanner0.processFile("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "i'l{j}:\"zP2>+|^[PB";
      archiveScanner0.addDefaultExcludes();
      stringArray0[1] = "";
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.filesExcluded = vector0;
      stringArray0[2] = " !M1T gM3n0*P6s\"YL$";
      archiveScanner0.includes = stringArray0;
      archiveScanner0.addDefaultExcludes();
      archiveScanner0.addDefaultExcludes();
      archiveScanner0.couldHoldIncluded("");
      archiveScanner0.addDefaultExcludes();
      archiveScanner0.addDefaultExcludes();
      vector0.remove((Object) ".ar");
      archiveScanner0.couldHoldIncluded(",p`+HLIX");
      archiveScanner0.isIncluded("");
      // Undeclared exception!
      try { 
        archiveScanner0.processFile("Ds_7f5(SJWD =");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      DirectoryScanner.matchPath("Error trying to ascertain the existence of entry, ", ">d");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "The event type code, ";
      stringArray0[1] = "";
      stringArray0[2] = " !M1T gM3n0*P6s\"YL$";
      Vector<String> vector0 = new Vector<String>();
      archiveScanner0.filesNotIncluded = vector0;
      archiveScanner0.includes = stringArray0;
      archiveScanner0.addDefaultExcludes();
      archiveScanner0.addDefaultExcludes();
      DirectoryScanner.matchPath(" !M1T gM3n0*P6s\"YL$", " !M1T gM3n0*P6s\"YL$");
      Vector<Object> vector1 = new Vector<Object>();
      archiveScanner0.dirsExcluded = vector1;
      DirectoryScanner.matchPath("", "n&!~-4w\"ta*C/cZ$eLe");
      archiveScanner0.setExcludes(stringArray0);
      archiveScanner0.processFile(".ZIP");
      assertEquals(2, ArchiveScanner.ARCHIVE);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "q8;NgG)-:@*d";
      stringArray0[1] = ".war";
      archiveScanner0.includes = stringArray0;
      String[] stringArray1 = new String[3];
      archiveScanner0.addDefaultExcludes();
      Vector<InputStream> vector0 = new Vector<InputStream>();
      archiveScanner0.dirsIncluded = vector0;
      stringArray1[0] = "(m.:H02kT?\"O<";
      stringArray1[1] = "";
      stringArray1[2] = " !M1T gM3n0*P6s\"YL$";
      archiveScanner0.includes = stringArray1;
      archiveScanner0.addDefaultExcludes();
      archiveScanner0.addDefaultExcludes();
      archiveScanner0.couldHoldIncluded("");
      archiveScanner0.addDefaultExcludes();
      archiveScanner0.addDefaultExcludes();
      vector0.setSize(2);
      archiveScanner0.isExcluded("3|");
      archiveScanner0.couldHoldIncluded("(m.:H02kT?\"O<");
      archiveScanner0.isIncluded("");
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive((File) null, "(m.:H02kT?\"O<");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "i'l{j}:\"zP2>+|^[PB";
      archiveScanner0.addDefaultExcludes();
      stringArray0[1] = "";
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.filesExcluded = vector0;
      stringArray0[2] = " !M1T gM3n0*P6s\"YL$";
      archiveScanner0.includes = stringArray0;
      archiveScanner0.addDefaultExcludes();
      archiveScanner0.addDefaultExcludes();
      archiveScanner0.couldHoldIncluded("");
      archiveScanner0.addDefaultExcludes();
      archiveScanner0.addDefaultExcludes();
      ImprovedFile improvedFile0 = new ImprovedFile("|", " !M1T gM3n0*P6s\"YL$");
      ImprovedFile improvedFile1 = new ImprovedFile(improvedFile0, "");
      ImprovedFile.copyFromToDir(improvedFile0, improvedFile1);
      improvedFile0.createTempDir();
      archiveScanner0.isIncluded("vD)N2b8BNZ6W&fZS5");
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive((File) null, "|");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "The event type code, ";
      stringArray0[1] = "";
      stringArray0[2] = " !M1T gM3n0*P6s\"YL$";
      archiveScanner0.includes = stringArray0;
      archiveScanner0.addDefaultExcludes();
      archiveScanner0.isExcluded("n-mTnf|iN=+vX=B*3!");
      archiveScanner0.couldHoldIncluded("The event type code, ");
      Vector<Integer> vector0 = new Vector<Integer>();
      archiveScanner0.filesNotIncluded = vector0;
      archiveScanner0.isIncluded("The event type code, ");
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive((File) null, "The event type code, ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.dirsExcluded = vector0;
      DirectoryScanner.matchPath("Error trying to ascertain the existence of entry, ", ">d");
      archiveScanner0.includes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      archiveScanner0.addDefaultExcludes();
      archiveScanner0.addDefaultExcludes();
      DirectoryScanner.matchPath(" !M1T gM3n0*P6s\"YL$", " !M1T gM3n0*P6s\"YL$");
      DirectoryScanner.matchPath("", "n&!~-4w\"ta*C/cZ$eLe");
      archiveScanner0.setExcludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory((File) null, ".EAR", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.8618650377696495
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      ImprovedFile improvedFile0 = new ImprovedFile((File) null, ".jar");
      improvedFile0.createTempDir(".jar", ".jar");
      ImprovedFile improvedFile1 = new ImprovedFile(".jar", ".jar");
      ImprovedFile improvedFile2 = improvedFile1.createTempDir(".jar", "arc");
      File file0 = ImprovedFile.buildName("QV?c-RXr53", (-194L), "app.files.lastDirectory", improvedFile2);
      ImprovedFile.createTempImprovedFile(".WAR", "s", file0);
      ImprovedFile improvedFile3 = new ImprovedFile(improvedFile1);
      ImprovedFile improvedFile4 = new ImprovedFile("arc");
      ImprovedFile improvedFile5 = new ImprovedFile(improvedFile0);
      ArchiveScanner archiveScanner1 = new ArchiveScanner(improvedFile2);
      ImprovedFile improvedFile6 = new ImprovedFile("Error trying to create output file, ", "com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
      improvedFile6.createTempDir("Error trying to list files in archive, ", "Error trying to list files in archive, ");
      improvedFile4.createTempDir();
      // Undeclared exception!
      try { 
        archiveScanner1.scandir(file0, "arc", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "i'l{j}:\"zP2>+|^[PB";
      archiveScanner0.addDefaultExcludes();
      stringArray0[1] = "";
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.filesExcluded = vector0;
      stringArray0[2] = " !M1T gM3n0*P6s\"YL$";
      archiveScanner0.includes = stringArray0;
      archiveScanner0.addDefaultExcludes();
      archiveScanner0.addDefaultExcludes();
      archiveScanner0.couldHoldIncluded("W0L>,v$W");
      archiveScanner0.addDefaultExcludes();
      archiveScanner0.addDefaultExcludes();
      vector0.add((Object) archiveScanner0.filesExcluded);
      vector0.remove((Object) "");
      archiveScanner0.couldHoldIncluded(" !M1T gM3n0*P6s\"YL$");
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory((File) null, ".zip", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("OOLodY");
      ImprovedFile improvedFile1 = new ImprovedFile(improvedFile0, "OOLodY");
      improvedFile0.deleteOnExit();
      ImprovedFile improvedFile2 = improvedFile0.createTempDir("0p5{TjAiO/ os", "8RAM");
      ImprovedFile improvedFile3 = improvedFile2.createTempDir("G%\"ZYq=wP'B4RI:3", "8RAM");
      improvedFile3.setExecutable(false, false);
      ImprovedFile.createTempImprovedFile("8RAM", ", to a directory, ", improvedFile2);
      File file0 = ImprovedFile.createTempFileName("X5gE@oJx!", "r{", improvedFile0);
      ImprovedFile improvedFile4 = new ImprovedFile(file0);
      ImprovedFile improvedFile5 = new ImprovedFile("0p5{TjAiO/ os");
      ImprovedFile improvedFile6 = new ImprovedFile(improvedFile3);
      ImprovedFile improvedFile7 = new ImprovedFile("!");
      ImprovedFile improvedFile8 = new ImprovedFile(improvedFile7);
      ImprovedFile improvedFile9 = improvedFile8.createTempDir(".bak", ", to a directory, ");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile9);
      improvedFile2.toURL();
      ImprovedFile improvedFile10 = new ImprovedFile(improvedFile7, "OOLodY");
      ImprovedFile.copyFromToDir(improvedFile4, improvedFile10);
      improvedFile3.setExecutable(true, false);
      improvedFile1.createTempDir();
      archiveScanner0.scandir(improvedFile6, "ePok", false);
      improvedFile1.setReadable(true, true);
      System.setCurrentTimeMillis((-2279L));
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.432813901625505
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("OOLodY");
      improvedFile0.deleteOnExit();
      improvedFile0.createTempDir("0p5{TjAiO/ os", "e, 0");
      MockFile mockFile0 = new MockFile("G%\"ZYq=wP'B4RI:3");
      mockFile0.toURL();
      ImprovedFile improvedFile1 = new ImprovedFile(mockFile0);
      ImprovedFile improvedFile2 = new ImprovedFile("0p5{TjAiO/ os");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("OOLodY/0p5{TjAiO/ os0e, 0");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "OOLodY");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "1app");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu/termite/projects/78_caloriecount");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      FileSystemHandling.appendStringToFile(evoSuiteFile0, ".WAR");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "|:}]xlM`sUPCzg>MNV0crititcal.com.lts.application.errors.properties.title.jar0OOLodY.jar");
      ImprovedFile improvedFile3 = new ImprovedFile(improvedFile0, "+t}`%xh+KpM=c'/7#V");
      MockFile mockFile1 = new MockFile("p/MN", "");
      FileSystemHandling.appendDataToFile(evoSuiteFile1, (byte[]) null);
      File file0 = MockFile.createTempFile("G%\"ZYq=wP'B4RI:3", "com.lts.swing.menu.MenuBuilder");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "G%\"ZYq=wP'B4RI:3");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "root should have null as its parent.");
      System.setCurrentTimeMillis(177L);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile3);
      archiveScanner0.toFileType(file0);
      System.setCurrentTimeMillis(0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("OOLodY");
      ImprovedFile improvedFile1 = new ImprovedFile(improvedFile0, "OOLodY");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("OOLodY/OOLodY/home/ubuntu/termite/projects/78_caloriecount/OOLodY/OOLodY");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      improvedFile0.deleteOnExit();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "OOLodY");
      improvedFile1.getCanonicalPath();
      improvedFile0.deleteOnExit();
      improvedFile1.getCanonicalPath();
      File file0 = MockFile.createTempFile("OOLodY", "nB-.R$>Mqgji]n_8L");
      ImprovedFile improvedFile2 = new ImprovedFile(file0);
      byte[] byteArray0 = new byte[3];
      file0.setWritable(false);
      byteArray0[0] = (byte)106;
      byteArray0[1] = (byte)57;
      byteArray0[2] = (byte)7;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      File file1 = MockFile.createTempFile("com.sun.java.swing.plaf.windows.WindowsLookAndFeel2s.jar", "/home/ubuntu/termite/projects/78_caloriecount/OOLodY/OOLodY");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "!");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile2);
      try { 
        archiveScanner0.scandir(file1, ".ear", true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // IO error scanning directory /tmp/com.sun.java.swing.plaf.windows.WindowsLookAndFeel2s.jar1/home/ubuntu/termite/projects/78_caloriecount/OOLodY/OOLodY
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("OOLodY");
      ImprovedFile improvedFile1 = new ImprovedFile(improvedFile0, "OOLodY");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("OOLodY/OOLodY/home/ubuntu/termite/projects/78_caloriecount/OOLodY/OOLodY");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      improvedFile0.deleteOnExit();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "OOLodY");
      improvedFile1.getCanonicalPath();
      improvedFile0.deleteOnExit();
      improvedFile1.getCanonicalPath();
      File file0 = MockFile.createTempFile("OOLodY", "nB-.R$>Mqgji]n_8L");
      ImprovedFile improvedFile2 = new ImprovedFile(file0);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)106;
      byteArray0[1] = (byte)57;
      byteArray0[2] = (byte)7;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      MockFile.createTempFile("/home/ubuntu/termite/projects/78_caloriecount/OOLodY/OOLodY", "!");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "nB-.R$>Mqgji]n_8L");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "/home/ubuntu/termite/projects/78_caloriecount/OOLodY/OOLodY");
      System.setCurrentTimeMillis((byte)7);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile1);
      int int0 = archiveScanner0.toFileType(improvedFile0);
      assertEquals(1, int0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.4471627089619605
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("OOLodY");
      ImprovedFile improvedFile1 = new ImprovedFile(improvedFile0, "OOLodY");
      improvedFile0.deleteOnExit();
      ImprovedFile improvedFile2 = improvedFile0.createTempDir("0p5{TjAiO/ os", "8RAM");
      ImprovedFile improvedFile3 = improvedFile2.createTempDir("G%\"ZYq=wP'B4RI:3", "8RAM");
      ImprovedFile.createTempImprovedFile("8RAM", "G%\"ZYq=wP'B4RI:3", improvedFile2);
      ImprovedFile improvedFile4 = new ImprovedFile(improvedFile1);
      ImprovedFile improvedFile5 = new ImprovedFile("0p5{TjAiO/ os");
      ImprovedFile improvedFile6 = new ImprovedFile(improvedFile3);
      ImprovedFile improvedFile7 = new ImprovedFile("0p5{TjAiO/ os");
      ImprovedFile improvedFile8 = new ImprovedFile(improvedFile7);
      ImprovedFile improvedFile9 = improvedFile8.createTempDir(".bak", "G%\"ZYq=wP'B4RI:3");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile9);
      improvedFile2.toURL();
      ImprovedFile improvedFile10 = new ImprovedFile(improvedFile7, "OOLodY");
      ImprovedFile.createTempDirectory("8RAM", "0p5{TjAiO/ os", (File) improvedFile9);
      ImprovedFile.copyFromToDir(improvedFile4, improvedFile10);
      improvedFile1.createTempDir();
      improvedFile7.toURL();
      improvedFile1.setReadable(true, true);
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(improvedFile1, "8RAM", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.455848709151796
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.dirsExcluded = vector0;
      DirectoryScanner.matchPath("Error trying to ascertain the existence of entry, ", ">d");
      archiveScanner0.includes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      archiveScanner0.addDefaultExcludes();
      archiveScanner0.addDefaultExcludes();
      DirectoryScanner.matchPath(" !M1T gM3n0*P6s\"YL$", " !M1T gM3n0*P6s\"YL$");
      DirectoryScanner.matchPath("", "n&!~-4w\"ta*C/cZ$eLe");
      archiveScanner0.setExcludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      System.setCurrentTimeMillis((-2581L));
      ArchiveScanner archiveScanner1 = new ArchiveScanner((ImprovedFile) null);
      MockFile mockFile0 = new MockFile("The event type code, .jar");
      int int0 = archiveScanner1.toFileType(mockFile0);
      assertEquals(2, int0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.432813901625505
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("OOLodY");
      improvedFile0.deleteOnExit();
      ImprovedFile improvedFile1 = improvedFile0.createTempDir("0p5{TjAiO/ os", "e, 0");
      improvedFile1.mkdirs();
      MockFile mockFile0 = new MockFile("G%\"ZYq=wP'B4RI:3");
      mockFile0.toURL();
      ImprovedFile improvedFile2 = new ImprovedFile(mockFile0);
      ImprovedFile improvedFile3 = new ImprovedFile("0p5{TjAiO/ os");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("OOLodY/0p5{TjAiO/ os0e, 0");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "OOLodY");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "1app");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu/termite/projects/78_caloriecount");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      FileSystemHandling.appendStringToFile(evoSuiteFile0, ".WAR");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "|:}]xlM`sUPCzg>MNV0crititcal.com.lts.application.errors.properties.title.jar0OOLodY.jar");
      ImprovedFile improvedFile4 = new ImprovedFile(improvedFile0, "+t}`%xh+KpM=c'/7#V");
      MockFile mockFile1 = new MockFile("p/MN", "");
      FileSystemHandling.appendDataToFile(evoSuiteFile1, (byte[]) null);
      File file0 = MockFile.createTempFile("G%\"ZYq=wP'B4RI:3", "com.lts.swing.menu.MenuBuilder");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "G%\"ZYq=wP'B4RI:3");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "root should have null as its parent.");
      System.setCurrentTimeMillis(177L);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile4);
      archiveScanner0.toFileType(file0);
      System.setCurrentTimeMillis(0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("OOLodY");
      ImprovedFile improvedFile1 = new ImprovedFile(improvedFile0, "OOLodY");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/com.sun.java.swing.plaf.windows.WindowsLookAndFeel2s.jar1Error trying to setup listeners");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("OOLodY/OOLodY/home/ubuntu/termite/projects/78_caloriecount/OOLodY/OOLodY");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      improvedFile0.deleteOnExit();
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "OOLodY");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "3{dXnm");
      FileSystemHandling.setPermissions(evoSuiteFile1, false, false, true);
      improvedFile0.deleteOnExit();
      improvedFile0.getCanonicalPath();
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("OOLodY");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile2);
      File file0 = improvedFile1.getAbsoluteFile();
      file0.createNewFile();
      ImprovedFile improvedFile2 = new ImprovedFile(file0);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      byte[] byteArray0 = new byte[18];
      byteArray0[0] = (byte)106;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile(evoSuiteFile1, byteArray0);
      MockFile.createTempFile("com.sun.java.swing.plaf.windows.WindowsLookAndFeel2s.jar", "Error trying to setup listeners");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Error trying to setup listeners");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile2);
      boolean boolean0 = archiveScanner0.isArchive(improvedFile1);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("OOLodY");
      ImprovedFile improvedFile1 = new ImprovedFile(improvedFile0, "OOLodY");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/com.sun.java.swing.plaf.windows.WindowsLookAndFeel2s.jar1Error trying to setup listeners");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("OOLodY/OOLodY/home/ubuntu/termite/projects/78_caloriecount/OOLodY/OOLodY");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      improvedFile0.deleteOnExit();
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "OOLodY");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "3{dXnm");
      FileSystemHandling.setPermissions(evoSuiteFile1, false, false, true);
      improvedFile0.deleteOnExit();
      improvedFile0.getCanonicalPath();
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("OOLodY");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile2);
      File file0 = MockFile.createTempFile("ng<twuSmO'", "i4G7U&ysHTe");
      File file1 = improvedFile1.getAbsoluteFile();
      file1.createNewFile();
      ImprovedFile improvedFile2 = new ImprovedFile(file1);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      byte[] byteArray0 = new byte[18];
      byteArray0[0] = (byte)106;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile(evoSuiteFile1, byteArray0);
      MockFile.createTempFile("com.sun.java.swing.plaf.windows.WindowsLookAndFeel2s.jar", "Error trying to setup listeners");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Error trying to setup listeners");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile2);
      boolean boolean0 = archiveScanner0.isArchive(file0);
      //  // Unstable assertion: assertTrue(boolean0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.dirsExcluded = vector0;
      DirectoryScanner.matchPath("Error trying to aacertain the existenceof entry, ", ">{");
      archiveScanner0.includes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      archiveScanner0.addDefaultExcludes();
      DirectoryScanner.matchPath(" !M1T gM3n0*P6s\"YL$", " !M1T gM3n0*P6s\"YL$");
      DirectoryScanner.matchPath("", "n&!~-4w\"ta*C/cZ$eLe");
      archiveScanner0.setBasedir("6z16w-lio:NU ");
      ArchiveScanner archiveScanner1 = new ArchiveScanner((ImprovedFile) null);
      archiveScanner1.setExcludes(archiveScanner0.includes);
      System.setCurrentTimeMillis(1);
      ArchiveScanner archiveScanner2 = new ArchiveScanner((ImprovedFile) null);
      archiveScanner2.setBasedir(".title.");
      // Undeclared exception!
      try { 
        archiveScanner0.isArchive((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      String[] stringArray0 = new String[3];
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.filesIncluded = vector0;
      stringArray0[0] = "(m.:H02kT?\"O<";
      stringArray0[1] = "";
      archiveScanner0.excludes = stringArray0;
      stringArray0[2] = " !M1qT gMfn0*P6s\"YL$";
      archiveScanner0.includes = stringArray0;
      archiveScanner0.addDefaultExcludes();
      archiveScanner0.addDefaultExcludes();
      DirectoryScanner.matchPath("IO error scanning directory ", "(m.:H02kT?\"O<");
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      Vector<InputStream> vector1 = new Vector<InputStream>();
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      PipedOutputStream pipedOutputStream2 = new PipedOutputStream();
      PipedInputStream pipedInputStream1 = new PipedInputStream(pipedOutputStream1);
      Vector<InputStream> vector2 = new Vector<InputStream>();
      vector1.add((InputStream) pipedInputStream0);
      DirectoryScanner.matchPath("Lookup failed for key = ", "s`t=Dnc9qHK,c2L@do");
      archiveScanner0.isIncluded("s`t=Dnc9qHK,c2L@do");
      // Undeclared exception!
      try { 
        archiveScanner0.processFile("ng<twuSmO'0i4G7U&ysHTe.jar");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      String[] stringArray0 = new String[2];
      stringArray0[1] = ".war";
      archiveScanner0.includes = stringArray0;
      String[] stringArray1 = new String[3];
      archiveScanner0.addDefaultExcludes();
      Vector<InputStream> vector0 = new Vector<InputStream>();
      archiveScanner0.dirsIncluded = vector0;
      stringArray1[0] = "(m.:H02kT?\"O<";
      stringArray1[1] = "";
      stringArray1[2] = " !M1T gM3n0*P6s\"YL$";
      archiveScanner0.includes = stringArray1;
      archiveScanner0.addDefaultExcludes();
      archiveScanner0.addDefaultExcludes();
      archiveScanner0.couldHoldIncluded("");
      DirectoryScanner.matchPath("(m.:H02kT?\"O<", "(m.:H02kT?\"O<");
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      pipedOutputStream0.close();
      PipedOutputStream pipedOutputStream2 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream2);
      Vector<InputStream> vector1 = new Vector<InputStream>();
      Vector<InputStream> vector2 = new Vector<InputStream>();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0);
      vector2.addElement(pushbackInputStream0);
      vector1.add((InputStream) pushbackInputStream0);
      DirectoryScanner.matchPath("com.lts.io.ArchiveScanner", ".war");
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory((File) null, ".war", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("OOLodY");
      ImprovedFile improvedFile1 = new ImprovedFile(improvedFile0, "OOLodY");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("OOLodY/OOLodY/home/ubuntu/termite/projects/78_caloriecount/OOLodY/OOLodY");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      improvedFile0.deleteOnExit();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "tempdxr0.3ar");
      improvedFile1.getCanonicalPath();
      improvedFile1.createTempDir();
      improvedFile1.makeDirectories();
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "/home/ubuntu/termite/projects/78_caloriecount/OOLodY/OOLodY");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      MockFile mockFile0 = new MockFile("/home/ubuntu/termite/projects/78_caloriecount/OOLodY/OOLodY");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-62);
      byteArray0[1] = (byte) (-64);
      byteArray0[2] = (byte) (-102);
      byteArray0[3] = (byte) (-64);
      byteArray0[4] = (byte)11;
      byteArray0[5] = (byte)5;
      byteArray0[6] = (byte) (-52);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      MockFile mockFile1 = new MockFile("OOLodY", "OOLodY");
      MockFile mockFile2 = new MockFile("OOLodY");
      MockFile mockFile3 = new MockFile("LodY", "061]Noyejd6wThI-");
      mockFile3.setReadable(true, true);
      mockFile3.setReadable(true);
      File file0 = ImprovedFile.buildName("061]Noyejd6wThI-", 0L, "OOLodY", mockFile3);
      URI uRI0 = MockURI.aFileURI;
      try { 
        archiveScanner0.scanArchive(file0, "/home/ubuntu/termite/projects/78_caloriecount/OOLodY/OOLodY");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error trying to list archive, /home/ubuntu/termite/projects/78_caloriecount/LodY/061]Noyejd6wThI-/061]Noyejd6wThI-0.OOLodY
         //
         verifyException("com.lts.io.archive.AbstractNestedArchive", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      DirectoryScanner.matchPath("Error trying to ascertain the existence of entry, ", ">d");
      archiveScanner0.includes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      archiveScanner0.addDefaultExcludes();
      archiveScanner0.addDefaultExcludes();
      archiveScanner0.isExcluded("Error trying to ascertain the existence of entry, ");
      DirectoryScanner.matchPath("", "com.lts.io.ArchiveScanner");
      archiveScanner0.setExcludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      URI uRI0 = MockURI.aFileURI;
      // Undeclared exception!
      try { 
        archiveScanner0.scanArchive((File) null, "A&R");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.archive.AbstractNestedArchive", e);
      }
  }
}
