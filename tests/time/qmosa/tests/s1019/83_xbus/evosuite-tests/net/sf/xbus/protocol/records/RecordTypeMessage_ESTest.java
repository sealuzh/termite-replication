/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 04:04:27 GMT 2019
 */

package net.sf.xbus.protocol.records;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.net.MalformedURLException;
import java.util.Date;
import javax.xml.namespace.QName;
import javax.xml.stream.util.EventReaderDelegate;
import net.sf.xbus.base.bytearraylist.ByteArrayList;
import net.sf.xbus.base.xbussystem.XBUSSystem;
import net.sf.xbus.protocol.records.RecordTypeMessage;
import org.apache.axis.AxisEngine;
import org.apache.axis.AxisFault;
import org.apache.axis.Message;
import org.apache.axis.MessageContext;
import org.apache.axis.deployment.wsdd.WSDDConstants;
import org.apache.axis.encoding.DeserializationContext;
import org.apache.axis.encoding.SerializationContext;
import org.apache.axis.message.SOAPEnvelope;
import org.apache.axis.message.SOAPFault;
import org.apache.axis.schema.SchemaVersion;
import org.apache.axis.soap.SOAP12Constants;
import org.apache.axis.soap.SOAPConstants;
import org.apache.html.dom.HTMLDocumentImpl;
import org.apache.wml.dom.WMLDocumentImpl;
import org.apache.xerces.dom.CoreDocumentImpl;
import org.apache.xerces.dom.DeferredDocumentImpl;
import org.apache.xerces.dom.DocumentFragmentImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.w3c.dom.Document;
import org.w3c.dom.DocumentType;
import org.w3c.dom.Element;
import org.w3c.dom.events.EventListener;
import org.xml.sax.InputSource;
import org.xml.sax.ext.DefaultHandler2;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RecordTypeMessage_ESTest extends RecordTypeMessage_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteArrayList.createByteArrayList(byteArray0, 1);
      FileSystemHandling.shouldAllThrowIOExceptions();
      CoreDocumentImpl coreDocumentImpl0 = new CoreDocumentImpl(true);
      coreDocumentImpl0.getDocumentURI();
      coreDocumentImpl0.item((-11));
      DocumentFragmentImpl documentFragmentImpl0 = new DocumentFragmentImpl(coreDocumentImpl0);
      coreDocumentImpl0.lookupPrefix((String) null);
      coreDocumentImpl0.getNodeName();
      FileSystemHandling.shouldAllThrowIOExceptions();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      EventListener eventListener0 = mock(EventListener.class, new ViolatedAssumptionAnswer());
      hTMLDocumentImpl0.isEqualNode(documentFragmentImpl0);
      hTMLDocumentImpl0.removeEventListener("O%:-WFj1+ )", eventListener0, false);
      hTMLDocumentImpl0.getDoctype();
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl((DocumentType) null);
      wMLDocumentImpl0.needsSyncChildren(false);
      wMLDocumentImpl0.getXmlVersion();
      hTMLDocumentImpl0.getFeature("02", "");
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("", (XBUSSystem) null, "ry6Yb>n-?5");
      recordTypeMessage0.setResponseDocument(hTMLDocumentImpl0, (XBUSSystem) null);
      recordTypeMessage0.getResponseObject();
      recordTypeMessage0.getResponseText();
      try { 
        MockURL.URL("");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // no protocol: 
         //
         verifyException("java.net.URL", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.7741057932992024
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Boolean boolean0 = new Boolean(false);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      ByteArrayList byteArrayList0 = new ByteArrayList();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-127);
      byteArray0[1] = (byte) (-50);
      byteArray0[2] = (byte)7;
      byteArray0[3] = (byte)68;
      byteArray0[4] = (byte)4;
      byteArray0[5] = (byte) (-1);
      byteArray0[6] = (byte) (-1);
      byteArrayList0.add(byteArray0);
      byteArrayList0.toByteArray();
      // Undeclared exception!
      try { 
        recordTypeMessage0.setResponseObject(byteArrayList0, (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.xbus.protocol.xml.XMLMessageAbstract", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      XBUSSystem xBUSSystem0 = null;
      byte[] byteArray0 = new byte[3];
      int int0 = 1;
      ByteArrayList byteArrayList0 = ByteArrayList.createByteArrayList(byteArray0, 1);
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      // Undeclared exception!
      try { 
        recordTypeMessage0.setRequestObject(byteArrayList0, (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.xbus.protocol.xml.XMLMessageAbstract", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteArrayList byteArrayList0 = ByteArrayList.createByteArrayList(byteArray0, 6);
      EventReaderDelegate eventReaderDelegate0 = new EventReaderDelegate();
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      recordTypeMessage0.setRequestObject(byteArrayList0, (XBUSSystem) null);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      PipedInputStream pipedInputStream1 = new PipedInputStream();
      PipedOutputStream pipedOutputStream2 = new PipedOutputStream();
      PipedInputStream pipedInputStream2 = null;
      try {
        pipedInputStream2 = new PipedInputStream((-1313));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteArrayList byteArrayList0 = ByteArrayList.createByteArrayList(byteArray0, 6);
      EventReaderDelegate eventReaderDelegate0 = new EventReaderDelegate();
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      recordTypeMessage0.setRequestObject(byteArrayList0, (XBUSSystem) null);
      PipedInputStream pipedInputStream0 = new PipedInputStream(6);
      try { 
        pipedInputStream0.reset();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // mark/reset not supported
         //
         verifyException("java.io.InputStream", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.3558258304206885
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((String) null, (XBUSSystem) null, (String) null);
      recordTypeMessage0.setRequestText((String) null, (XBUSSystem) null);
      recordTypeMessage0.getRequestTextAsXML((XBUSSystem) null);
      recordTypeMessage0.setShortname("8h~otujE4Ii&AlZJ");
      // Undeclared exception!
      try { 
        recordTypeMessage0.setResponseText("HMLuWj^o", (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.xbus.protocol.xml.XMLMessageAbstract", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.6488041417305412
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      XBUSSystem xBUSSystem0 = null;
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      Date date0 = recordTypeMessage0.getRequestTimestamp();
      recordTypeMessage0.setResponseTimestamp(date0);
      recordTypeMessage0.getResponseObject();
      recordTypeMessage0.getResponseText();
      recordTypeMessage0.synchronizeResponseFields((XBUSSystem) null);
      recordTypeMessage0.synchronizeRequestFields((XBUSSystem) null);
      recordTypeMessage0.synchronizeRequestFields((XBUSSystem) null);
      recordTypeMessage0.setRequestText((String) null, (XBUSSystem) null);
      recordTypeMessage0.getResponseText();
      recordTypeMessage0.setResponseObject((Object) null, (XBUSSystem) null);
      recordTypeMessage0.getResponseObject();
      recordTypeMessage0.setRequestObject((Object) null, (XBUSSystem) null);
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      defaultHandler2_0.getExternalSubset((String) null, (String) null);
      AxisEngine.getCurrentMessageContext();
      SOAP12Constants sOAP12Constants0 = new SOAP12Constants();
      SOAPEnvelope sOAPEnvelope0 = new SOAPEnvelope(false, sOAP12Constants0, (SchemaVersion) null);
      DeserializationContext deserializationContext0 = new DeserializationContext((InputSource) null, (MessageContext) null, "net.sf.xbus.protocol.records.RecordTypeMessage", sOAPEnvelope0);
      SOAPConstants sOAPConstants0 = deserializationContext0.getSOAPConstants();
      SOAPEnvelope sOAPEnvelope1 = new SOAPEnvelope(false, sOAPConstants0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0, true);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0, true);
      SerializationContext serializationContext0 = new SerializationContext(mockPrintWriter1, (MessageContext) null);
      Message message0 = new Message(mockPrintWriter0);
      Object object0 = new Object();
      try { 
        recordTypeMessage0.setResponseObject(date0, (XBUSSystem) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // I_02_003_0 org.evosuite.runtime.mock.java.util.MockDate cannot be cast to net.sf.xbus.base.bytearraylist.ByteArrayList
         //
         verifyException("net.sf.xbus.protocol.records.RecordTypeMessage", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Boolean boolean0 = new Boolean(false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      ByteArrayList byteArrayList0 = new ByteArrayList();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-127);
      byteArray0[1] = (byte) (-50);
      byteArray0[2] = (byte) (-127);
      byteArray0[3] = (byte)68;
      byteArray0[4] = (byte)4;
      byteArray0[5] = (byte) (-1);
      byteArray0[6] = (byte) (-1);
      byteArrayList0.add(byteArray0);
      byteArrayList0.toByteArray();
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("", (XBUSSystem) null, "5O`Q%tGC");
      recordTypeMessage0.getRequestObject((XBUSSystem) null);
      recordTypeMessage0.getRequestObject((XBUSSystem) null);
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-110);
      byteArray0[0] = (byte)24;
      ByteArrayList byteArrayList0 = new ByteArrayList();
      Boolean boolean0 = new Boolean("BASEFONT");
      EventReaderDelegate eventReaderDelegate0 = new EventReaderDelegate();
      CoreDocumentImpl coreDocumentImpl0 = new CoreDocumentImpl((boolean) boolean0);
      coreDocumentImpl0.getDocumentURI();
      coreDocumentImpl0.item((-19));
      DocumentFragmentImpl documentFragmentImpl0 = new DocumentFragmentImpl(coreDocumentImpl0);
      EventListener eventListener0 = mock(EventListener.class, new ViolatedAssumptionAnswer());
      documentFragmentImpl0.addEventListener("K", eventListener0, false);
      documentFragmentImpl0.setNodeValue((String) null);
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      EventListener eventListener1 = mock(EventListener.class, new ViolatedAssumptionAnswer());
      hTMLDocumentImpl0.getAnchors();
      hTMLDocumentImpl0.isEqualNode(documentFragmentImpl0);
      hTMLDocumentImpl0.getBaseURI();
      hTMLDocumentImpl0.removeEventListener("O%:-WFqj1+E)", eventListener1, true);
      hTMLDocumentImpl0.getDoctype();
      Boolean boolean1 = new Boolean((String) null);
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      ByteArrayList byteArrayList1 = new ByteArrayList();
      byteArrayList0.toByteArray();
      ByteArrayList byteArrayList2 = new ByteArrayList();
      byteArrayList2.addAll((ByteArrayList) null);
      byteArrayList2.addAll(byteArrayList0);
      recordTypeMessage0.setResponseObject(byteArrayList2, (XBUSSystem) null);
      assertEquals("RC_OK", recordTypeMessage0.getReturncode());
      assertEquals(0, recordTypeMessage0.getErrorcode());
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String string0 = "v!5SQeOqtd'EL5>a";
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      recordTypeMessage0.setResponseDocument((Document) null, (XBUSSystem) null);
      Element[] elementArray0 = null;
      AxisFault axisFault0 = null;
      try {
        axisFault0 = new AxisFault((String) null, "HMLuWGKj^o", "HMLuWGKj^o", (Element[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // local part cannot be \"null\" when creating a QName
         //
         verifyException("javax.xml.namespace.QName", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((String) null, (XBUSSystem) null, (String) null);
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(true);
      // Undeclared exception!
      try { 
        recordTypeMessage0.setResponseDocument(deferredDocumentImpl0, (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xerces.dom.DeferredDocumentImpl", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-110);
      ByteArrayList byteArrayList0 = new ByteArrayList();
      Boolean boolean0 = new Boolean("BASEFONT");
      EventReaderDelegate eventReaderDelegate0 = new EventReaderDelegate();
      CoreDocumentImpl coreDocumentImpl0 = new CoreDocumentImpl((boolean) boolean0);
      coreDocumentImpl0.getDocumentURI();
      coreDocumentImpl0.item((-19));
      DocumentFragmentImpl documentFragmentImpl0 = new DocumentFragmentImpl(coreDocumentImpl0);
      EventListener eventListener0 = mock(EventListener.class, new ViolatedAssumptionAnswer());
      documentFragmentImpl0.addEventListener((String) null, eventListener0, false);
      documentFragmentImpl0.setNodeValue((String) null);
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      EventListener eventListener1 = mock(EventListener.class, new ViolatedAssumptionAnswer());
      hTMLDocumentImpl0.getAnchors();
      hTMLDocumentImpl0.isEqualNode(documentFragmentImpl0);
      hTMLDocumentImpl0.getBaseURI();
      hTMLDocumentImpl0.removeEventListener("O%:-WFqj1+E)", eventListener1, true);
      hTMLDocumentImpl0.getDoctype();
      Boolean boolean1 = new Boolean((String) null);
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      ByteArrayList byteArrayList1 = new ByteArrayList();
      byteArrayList0.toByteArray();
      ByteArrayList byteArrayList2 = new ByteArrayList();
      byteArrayList2.addAll((ByteArrayList) null);
      byteArrayList2.addAll(byteArrayList0);
      recordTypeMessage0.setResponseObject(byteArrayList2, (XBUSSystem) null);
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
      assertEquals("RC_OK", recordTypeMessage0.getReturncode());
      assertEquals(0, recordTypeMessage0.getErrorcode());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      // Undeclared exception!
      try { 
        recordTypeMessage0.setRequestText("sl:Xce=+>qC_7", (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.xbus.protocol.xml.XMLMessageAbstract", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      Integer integer0 = new Integer(2357);
      ByteArrayList byteArrayList0 = ByteArrayList.createByteArrayList(byteArray0, 6);
      byteArrayList0.toString();
      Integer integer1 = new Integer(1099);
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("org.apache.axis.types.NonNegativeInteger", (XBUSSystem) null, "gVtc$cxc=d[4|O)2`h");
      recordTypeMessage0.getResponseText();
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      XBUSSystem xBUSSystem0 = null;
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      byte[] byteArray0 = new byte[1];
      ByteArrayList.createByteArrayList(byteArray0, 242);
      try { 
        recordTypeMessage0.setRequestObject("ry6Yb>n-?5", (XBUSSystem) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // I_02_003_0 java.lang.String cannot be cast to net.sf.xbus.base.bytearraylist.ByteArrayList
         //
         verifyException("net.sf.xbus.protocol.records.RecordTypeMessage", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      XBUSSystem xBUSSystem0 = null;
      String string0 = "HMLuWj^o";
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((String) null, (XBUSSystem) null, (String) null);
      recordTypeMessage0.synchronizeResponseFields((XBUSSystem) null);
      Integer integer0 = new Integer((-1911));
      try { 
        recordTypeMessage0.setResponseObject(integer0, (XBUSSystem) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // I_02_003_0 java.lang.Integer cannot be cast to net.sf.xbus.base.bytearraylist.ByteArrayList
         //
         verifyException("net.sf.xbus.protocol.records.RecordTypeMessage", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("", (XBUSSystem) null, "6D^q(W.OCSs`^Bh<C ");
      recordTypeMessage0.setResponseText((String) null, (XBUSSystem) null);
      Object object0 = new Object();
      int int0 = (-2050);
      PipedInputStream pipedInputStream0 = new PipedInputStream(1);
      pipedInputStream0.markSupported();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream1 = new PipedInputStream(pipedOutputStream0);
      PipedOutputStream pipedOutputStream1 = null;
      try {
        pipedOutputStream1 = new PipedOutputStream(pipedInputStream1);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      recordTypeMessage0.getRequestText((XBUSSystem) null);
      AxisFault axisFault0 = new AxisFault("", (String) null, "", (Element[]) null);
      QName qName0 = WSDDConstants.QNAME_HANDLER;
      QName[] qNameArray0 = new QName[7];
      qNameArray0[0] = qName0;
      qName0.getPrefix();
      axisFault0.setFaultCodeAsString("");
      QName qName1 = WSDDConstants.QNAME_NAMESPACE;
      qNameArray0[2] = qName1;
      qNameArray0[2] = qName0;
      QName qName2 = WSDDConstants.QNAME_WSDLFILE;
      qNameArray0[3] = qName0;
      qNameArray0[5] = qName0;
      qNameArray0[6] = qName0;
      AxisFault axisFault1 = new AxisFault(qName0, qNameArray0, "MmSRC[A,Fy=zh", "R3Hs#y'Se&$", "", (Element[]) null);
      SOAPFault sOAPFault0 = new SOAPFault(axisFault0);
      QName qName3 = WSDDConstants.QNAME_TYPEMAPPING;
      try { 
        MockURL.URL("L");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // no protocol: L
         //
         verifyException("java.net.URL", e);
      }
  }
}
