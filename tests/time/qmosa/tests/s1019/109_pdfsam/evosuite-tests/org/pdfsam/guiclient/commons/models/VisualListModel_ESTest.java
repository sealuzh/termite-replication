/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 04:04:51 GMT 2019
 */

package org.pdfsam.guiclient.commons.models;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.lowagie.text.pdf.PdfGraphics2D;
import java.awt.RenderingHints;
import java.awt.image.BufferedImage;
import java.awt.image.ColorModel;
import java.awt.image.renderable.ParameterBlock;
import java.time.Month;
import java.util.Collection;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Hashtable;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.Stack;
import java.util.TreeSet;
import java.util.Vector;
import java.util.function.BiFunction;
import java.util.function.Predicate;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JComponent;
import javax.swing.JLayeredPane;
import javax.swing.event.ListDataListener;
import javax.swing.plaf.basic.BasicComboBoxEditor;
import javax.swing.table.DefaultTableModel;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.pdfsam.guiclient.commons.models.VisualListModel;
import org.pdfsam.guiclient.dto.VisualPageListItem;
import sun.awt.SunHints;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class VisualListModel_ESTest extends VisualListModel_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.1397850293099174
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int[] intArray0 = new int[1];
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getListDataListeners();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.updateElementAt(1, (VisualPageListItem) null);
      visualListModel0.addElementAt((VisualPageListItem) null, 1);
      visualListModel0.reverseElements(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt((-1), false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.5935041414150646
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      int[] intArray0 = new int[1];
      visualListModel0.moveUpIndexes(intArray0);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) null);
      Predicate<Object> predicate1 = predicate0.and(predicate0);
      Predicate<Object> predicate2 = predicate0.or(predicate1);
      Predicate<Object> predicate3 = predicate2.negate();
      predicate3.negate();
      Predicate.isEqual((Object) null);
      Predicate<Object> predicate4 = predicate3.and(predicate1);
      Predicate<Object> predicate5 = predicate4.and(predicate3);
      Month month0 = Month.DECEMBER;
      Predicate.isEqual((Object) predicate3);
      Predicate<Object> predicate6 = predicate1.negate();
      predicate6.negate();
      Integer.remainderUnsigned((-593), (-868));
      predicate5.or(predicate4);
      predicate0.negate();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      stringArray0[1] = "R,|%:Y";
      JComboBox<String> jComboBox0 = new JComboBox<String>(stringArray0);
      jComboBox0.transferFocusDownCycle();
      JComboBox<String> jComboBox1 = new JComboBox<String>();
      visualListModel0.removeListDataListener(jComboBox1);
      // Undeclared exception!
      try { 
        visualListModel0.removeElements(intArray0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.3120076729259056
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.addElement((VisualPageListItem) null);
      int[] intArray0 = new int[1];
      intArray0[0] = 2;
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 2
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.138526235860879
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "VEfMeSbqAXVBSD_rq>");
      visualListModel0.updateElementAt((-1079), (VisualPageListItem) null);
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.removeListDataListener((ListDataListener) null);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)118;
      byteArray0[1] = (byte)63;
      byteArray0[2] = (byte) (-106);
      byteArray0[3] = (byte) (-39);
      byteArray0[4] = (byte) (-46);
      byteArray0[5] = (byte)1;
      byteArray0[6] = (byte)4;
      byteArray0[7] = (byte)7;
      byteArray0[8] = (byte)106;
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>(125);
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(linkedHashSet0);
      visualListModel0.elementChanged((VisualPageListItem) null);
      int[] intArray0 = new int[1];
      intArray0[0] = (int) (byte)1;
      visualListModel0.removeElements(intArray0, true);
      assertEquals(1, visualListModel0.getSize());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[4];
      visualListModel0.setData(visualPageListItemArray0);
      ColorModel colorModel0 = ColorModel.getRGBdefault();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) colorModel0);
      Predicate<Object> predicate1 = null;
      predicate0.negate();
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem(1171, "lafi(^z", "lafi(^z");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.5981863871455346
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.elementChanged((VisualPageListItem) null);
      Object object0 = new Object();
      visualListModel0.addElement((VisualPageListItem) null);
      int[] intArray0 = new int[1];
      intArray0[0] = (-573);
      try { 
        visualListModel0.removeElements(intArray0, true);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // fromIndex = -573
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.1290003949677563
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      visualListModel0.elementChanged((VisualPageListItem) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "i`Y~");
      Object object0 = new Object();
      visualListModel0.addElement((VisualPageListItem) null);
      int[] intArray0 = new int[1];
      visualListModel0.removeElements(intArray0, true);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[2];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem(12);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.214534764133424
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.elementChanged((VisualPageListItem) null);
      visualListModel0.updateElementAt((-1079), (VisualPageListItem) null);
      visualListModel0.getElementAt(7);
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.removeListDataListener((ListDataListener) null);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)118;
      byteArray0[1] = (byte)63;
      byteArray0[2] = (byte) (-106);
      byteArray0[3] = (byte) (-39);
      byteArray0[4] = (byte) (-46);
      byteArray0[5] = (byte)1;
      byteArray0[6] = (byte)4;
      byteArray0[7] = (byte)7;
      byteArray0[8] = (byte)106;
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>(125);
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(linkedHashSet0);
      visualListModel0.elementChanged((VisualPageListItem) null);
      int[] intArray0 = new int[0];
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.5709195237181253
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem visualPageListItem0 = null;
      visualListModel0.elementChanged((VisualPageListItem) null);
      int int0 = 7;
      visualListModel0.updateElementAt((-1079), (VisualPageListItem) null);
      visualListModel0.getElementAt(7);
      visualListModel0.addElement((VisualPageListItem) null);
      VisualPageListItem[] visualPageListItemArray0 = visualListModel0.getElements();
      visualListModel0.setData(visualPageListItemArray0);
      ColorModel.getRGBdefault();
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      JComboBox<VisualPageListItem> jComboBox0 = new JComboBox<VisualPageListItem>(visualPageListItemArray0);
      jComboBox0.getBaselineResizeBehavior();
      visualListModel0.removeListDataListener(jComboBox0);
      visualListModel0.moveUpIndex(1);
      visualListModel0.moveUpIndex(7);
      int int1 = (-743);
      VisualPageListItem visualPageListItem1 = null;
      try {
        visualPageListItem1 = new VisualPageListItem((-743));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = (-573);
      visualListModel0.addElement((VisualPageListItem) null);
      JComboBox<String> jComboBox0 = new JComboBox<String>();
      visualListModel0.addListDataListener(jComboBox0);
      visualListModel0.moveUpIndex((-573));
      visualListModel0.getSize();
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.0426322117102855
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem visualPageListItem0 = null;
      visualListModel0.elementChanged((VisualPageListItem) null);
      int int0 = 7;
      visualListModel0.updateElementAt((-1079), (VisualPageListItem) null);
      visualListModel0.getElementAt(7);
      visualListModel0.addElement((VisualPageListItem) null);
      ColorModel.getRGBdefault();
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) linkedList0);
      int[] intArray0 = new int[7];
      intArray0[0] = 7;
      intArray0[1] = 7;
      Integer.remainderUnsigned(7, 2509);
      VisualPageListItem visualPageListItem1 = null;
      try {
        visualPageListItem1 = new VisualPageListItem(1000);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      visualListModel0.setData(visualPageListItemArray0);
      ColorModel colorModel0 = ColorModel.getRGBdefault();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) colorModel0);
      Predicate<Object> predicate1 = null;
      // Undeclared exception!
      try { 
        predicate0.and((Predicate<? super Object>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.spliterator();
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      HashMap<RenderingHints.Key, VisualPageListItem> hashMap0 = new HashMap<RenderingHints.Key, VisualPageListItem>();
      Hashtable<RenderingHints.Key, Month> hashtable0 = new Hashtable<RenderingHints.Key, Month>();
      RenderingHints renderingHints0 = new RenderingHints(hashtable0);
      // Undeclared exception!
      try { 
        visualListModel0.moveUpIndexes((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.6574520104243486
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      int[] intArray0 = new int[1];
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getListDataListeners();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String string0 = "";
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.moveDownIndexes(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 90;
      int int1 = (-1);
      // Undeclared exception!
      try { 
        visualListModel0.subList(90, (-1), true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(90) > toIndex(-1)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.042632211710285
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      VisualPageListItem visualPageListItem0 = null;
      visualListModel0.elementChanged((VisualPageListItem) null);
      int int0 = (-566);
      Object object0 = new Object();
      visualListModel0.addElement((VisualPageListItem) null);
      int[] intArray0 = new int[1];
      intArray0[0] = (-566);
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.6066699893655365
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<Month> stack0 = new Stack<Month>();
      visualListModel0.getElements();
      JComboBox<Month> jComboBox0 = new JComboBox<Month>(stack0);
      visualListModel0.addListDataListener(jComboBox0);
      Stack<VisualPageListItem> stack1 = new Stack<VisualPageListItem>();
      stack1.stream();
      stack1.setSize(39);
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) stack1);
      visualListModel0.getListDataListeners();
      int[] intArray0 = new int[4];
      intArray0[0] = 39;
      intArray0[1] = 39;
      intArray0[2] = 0;
      intArray0[3] = 0;
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 39
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      JComboBox<String> jComboBox0 = new JComboBox<String>();
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.undeleteElements((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.setData((Vector<VisualPageListItem>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.873029116491111
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.elementsChanged();
      Collection<VisualPageListItem> collection0 = visualListModel0.subList(0, 0, false);
      visualListModel0.addAllElements(0, collection0);
      visualListModel0.moveUpIndex(0);
      Object object0 = new Object();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) visualListModel0);
      Month month0 = Month.MARCH;
      Predicate<Object> predicate1 = Predicate.isEqual((Object) month0);
      Predicate<Object> predicate2 = predicate0.and(predicate1);
      Predicate<Object> predicate3 = Predicate.isEqual((Object) month0);
      predicate2.negate();
      Predicate<Object> predicate4 = predicate2.and(predicate3);
      Predicate<Object> predicate5 = predicate2.negate();
      predicate5.or(predicate4);
      // Undeclared exception!
      try { 
        Integer.remainderUnsigned((-4075), 0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("java.lang.Integer", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.786724494755577
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.setSize(1);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      visualListModel0.addElement((VisualPageListItem) null);
      int[] intArray0 = new int[1];
      visualListModel0.clearData();
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.moveDownIndexes(intArray0);
      JComboBox<String> jComboBox0 = new JComboBox<String>();
      jComboBox0.getPrototypeDisplayValue();
      visualListModel0.removeListDataListener(jComboBox0);
      assertFalse(jComboBox0.isFocusTraversalPolicyProvider());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.0941693886928134
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = (-573);
      visualListModel0.addElement((VisualPageListItem) null);
      int[] intArray0 = new int[1];
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.subList(1, 1);
      // Undeclared exception!
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.0211196177983384
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      int[] intArray0 = new int[1];
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.reverseElements(intArray0);
      visualListModel0.undeleteElements(intArray0);
      HashMap<RenderingHints.Key, DefaultTableModel> hashMap0 = new HashMap<RenderingHints.Key, DefaultTableModel>();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_ANTIALIASING;
      DefaultTableModel defaultTableModel0 = new DefaultTableModel((Object[][]) null, (Object[]) null);
      hashMap0.put(sunHints_Key0, defaultTableModel0);
      Object object0 = new Object();
      DefaultTableModel defaultTableModel1 = new DefaultTableModel((Object[][]) null, (Object[]) null);
      hashMap0.put(sunHints_Key0, defaultTableModel1);
      BiFunction<Object, DefaultTableModel, DefaultTableModel> biFunction0 = (BiFunction<Object, DefaultTableModel, DefaultTableModel>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(biFunction0).apply(any() , any(javax.swing.table.DefaultTableModel.class));
      hashMap0.compute(sunHints_Key0, biFunction0);
      RenderingHints renderingHints0 = new RenderingHints(hashMap0);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      Object object1 = visualListModel0.getElementAt(0);
      assertNull(object1);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      DefaultComboBoxModel<String> defaultComboBoxModel0 = new DefaultComboBoxModel<String>();
      visualListModel0.removeListDataListener((ListDataListener) null);
      defaultComboBoxModel0.addListDataListener((ListDataListener) null);
      JComboBox<String> jComboBox0 = new JComboBox<String>(defaultComboBoxModel0);
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(3988, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 3988
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem visualPageListItem0 = null;
      int int0 = (-573);
      int int1 = 7;
      visualListModel0.addElement((VisualPageListItem) null);
      int[] intArray0 = new int[1];
      intArray0[0] = (-573);
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.subList((-1844), 745, false);
      int int0 = 7;
      visualListModel0.getElementAt(7);
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.getListDataListeners();
      // Undeclared exception!
      try { 
        visualListModel0.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.6969987794394545
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "org.apache.log4j.helpers.LogLog");
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveUpIndex((-164));
      visualListModel0.subList((-164), 516);
      visualListModel0.moveUpIndex(64);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex(1193);
      visualListModel0.updateElementAt(1193, (VisualPageListItem) null);
      visualListModel0.moveUpIndex((-1738));
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      HashMap<RenderingHints.Key, DefaultTableModel> hashMap0 = new HashMap<RenderingHints.Key, DefaultTableModel>();
      hashMap0.keySet();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      hashMap0.put(sunHints_Key0, (DefaultTableModel) null);
      RenderingHints renderingHints0 = new RenderingHints(hashMap0);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.moveDownIndex((-2019));
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getElementAt(7);
      // Undeclared exception!
      try { 
        visualListModel0.getElementAt((-573));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.ensureCapacity((-1186));
      stack0.spliterator();
      int[] intArray0 = new int[1];
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      HashMap<RenderingHints.Key, VisualPageListItem> hashMap0 = new HashMap<RenderingHints.Key, VisualPageListItem>();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_DITHERING;
      Hashtable<RenderingHints.Key, Month> hashtable0 = new Hashtable<RenderingHints.Key, Month>();
      RenderingHints renderingHints0 = new RenderingHints(hashtable0);
      visualListModel0.moveUpIndexes(intArray0);
      int[] intArray1 = new int[4];
      intArray1[0] = (-1186);
      intArray1[1] = (-1186);
      intArray1[2] = (-1994);
      intArray1[3] = 8;
      visualListModel0.moveDownIndexes(intArray1);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.moveDownIndexes((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.5981863871455344
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem visualPageListItem0 = null;
      visualListModel0.elementChanged((VisualPageListItem) null);
      visualListModel0.addElement((VisualPageListItem) null);
      int int0 = (-302);
      int int1 = 1000;
      // Undeclared exception!
      try { 
        visualListModel0.subList(1000, (-2627), false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(1000) > toIndex(-2627)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      int[] intArray0 = new int[0];
      visualListModel0.moveUpIndexes(intArray0);
      int[] intArray1 = new int[8];
      intArray1[3] = 0;
      intArray1[1] = 0;
      intArray1[2] = 0;
      intArray1[3] = 11;
      intArray1[4] = (-35);
      intArray1[5] = 0;
      intArray1[6] = 16;
      intArray1[7] = 960;
      Predicate<Object> predicate0 = Predicate.isEqual((Object) null);
      Predicate<Object> predicate1 = predicate0.or(predicate0);
      Predicate<Object> predicate2 = predicate1.negate();
      Predicate<Object> predicate3 = predicate2.and(predicate0);
      Predicate<Object> predicate4 = predicate3.negate();
      Predicate<Object> predicate5 = predicate0.and(predicate2);
      Predicate<Object> predicate6 = predicate2.or(predicate5);
      predicate5.and(predicate6);
      predicate5.negate();
      predicate2.or(predicate4);
      Integer.remainderUnsigned(0, 960);
      predicate0.and(predicate4);
      predicate1.and(predicate2);
      predicate0.negate();
      Predicate<Object> predicate7 = predicate1.negate();
      Predicate<Object> predicate8 = predicate6.negate();
      assertNotSame(predicate8, predicate7);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[6];
      intArray0[0] = (-2);
      intArray0[3] = 691;
      intArray0[2] = 1255;
      // Undeclared exception!
      try { 
        visualListModel0.subList(1255, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(1255) > toIndex(0)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.7962284387340903
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getListDataListeners();
      visualListModel0.removeListDataListener((ListDataListener) null);
      visualListModel0.subList(1771, 1771, true);
      visualListModel0.moveUpIndex(1771);
      visualListModel0.getListDataListeners();
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(4, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 4
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.9909065731902369
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.removeElements(0, 0, false);
      visualListModel0.removeElements((-5798), (-5798), true);
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.4993646124305886
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      DefaultComboBoxModel<String> defaultComboBoxModel0 = new DefaultComboBoxModel<String>();
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.removeListDataListener((ListDataListener) null);
      defaultComboBoxModel0.addListDataListener((ListDataListener) null);
      JComboBox<String> jComboBox0 = new JComboBox<String>(defaultComboBoxModel0);
      JComboBox<String> jComboBox1 = new JComboBox<String>();
      jComboBox1.transferFocusDownCycle();
      visualListModel0.removeListDataListener(jComboBox1);
      int[] intArray0 = new int[2];
      intArray0[0] = (-879);
      intArray0[1] = (-1803);
      visualListModel0.removeElements(intArray0, false);
      visualListModel1.removeElements(0, 117, false);
      assertEquals(0, visualListModel1.getSize());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Collection<VisualPageListItem> collection0 = visualListModel0.subList(0, 1087);
      assertNull(collection0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.8672900914093025
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 0;
      Collection<VisualPageListItem> collection0 = visualListModel0.subList(0, 0, true);
      visualListModel0.addAllElements(0, collection0);
      visualListModel0.moveUpIndex(0);
      Object object0 = new Object();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) visualListModel0);
      Month month0 = Month.DECEMBER;
      Month month1 = month0.minus(0L);
      Predicate<Object> predicate1 = predicate0.and(predicate0);
      Predicate<Object> predicate2 = Predicate.isEqual((Object) month1);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      predicate1.negate();
      Predicate<Object> predicate3 = predicate1.and(predicate2);
      Predicate<Object> predicate4 = predicate1.negate();
      predicate4.or(predicate3);
      int int1 = (-4075);
      predicate2.or(predicate0);
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(0, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      DefaultComboBoxModel<String> defaultComboBoxModel0 = new DefaultComboBoxModel<String>();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      defaultComboBoxModel0.removeElement(sunHints_Key0);
      visualListModel0.removeListDataListener((ListDataListener) null);
      defaultComboBoxModel0.addListDataListener((ListDataListener) null);
      JComboBox<String> jComboBox0 = new JComboBox<String>(defaultComboBoxModel0);
      visualListModel0.removeListDataListener(jComboBox0);
      visualListModel0.removeElements(2664, (-2443), true);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[2];
      visualListModel0.moveUpIndex(2765);
      intArray0[0] = (-3868);
      int int0 = (-76);
      // Undeclared exception!
      try { 
        visualListModel0.reverseElements((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      String[] stringArray0 = new String[0];
      DefaultComboBoxModel<String> defaultComboBoxModel0 = new DefaultComboBoxModel<String>(stringArray0);
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey1 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      defaultComboBoxModel0.setSelectedItem(pdfGraphics2D_HyperLinkKey1);
      VisualListModel visualListModel0 = new VisualListModel();
      JComboBox<String> jComboBox0 = new JComboBox<String>();
      jComboBox0.getTransferHandler();
      visualListModel0.removeListDataListener(jComboBox0);
      DefaultComboBoxModel<String> defaultComboBoxModel1 = new DefaultComboBoxModel<String>(stringArray0);
      JComboBox<String> jComboBox1 = new JComboBox<String>();
      visualListModel0.addListDataListener(jComboBox0);
      visualListModel0.getValidElements();
      // Undeclared exception!
      try { 
        visualListModel0.setData((VisualPageListItem[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[0];
      visualListModel0.setData(visualPageListItemArray0);
      ColorModel colorModel0 = ColorModel.getRGBdefault();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) colorModel0);
      Predicate<Object> predicate1 = null;
      // Undeclared exception!
      try { 
        predicate0.and((Predicate<? super Object>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getSize();
      visualListModel0.clearData();
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.spliterator();
      int[] intArray0 = new int[1];
      intArray0[0] = (-1658);
      Hashtable<String, BasicComboBoxEditor> hashtable0 = new Hashtable<String, BasicComboBoxEditor>();
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      visualListModel0.addAllElements((-409), (Collection<VisualPageListItem>) stack0);
      assertTrue(stack0.empty());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.prependAllElements((Collection<VisualPageListItem>) null);
      BufferedImage bufferedImage0 = null;
      try {
        bufferedImage0 = new BufferedImage((-1890), 3169, 3169);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown image type 3169
         //
         verifyException("java.awt.image.BufferedImage", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.0141266108053313
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      int[] intArray0 = new int[1];
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.reverseElements(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.undeleteElements(intArray0);
      HashMap<RenderingHints.Key, DefaultTableModel> hashMap0 = new HashMap<RenderingHints.Key, DefaultTableModel>();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_ANTIALIASING;
      DefaultTableModel defaultTableModel0 = new DefaultTableModel((Object[][]) null, (Object[]) null);
      hashMap0.put(sunHints_Key0, defaultTableModel0);
      hashMap0.put(sunHints_Key0, defaultTableModel0);
      ParameterBlock parameterBlock0 = new ParameterBlock();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) null);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addAllElements((-195), (Collection<VisualPageListItem>) null);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      Integer[] integerArray0 = new Integer[20];
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      integerArray0[0] = integer0;
      Integer integer1 = JLayeredPane.DRAG_LAYER;
      integerArray0[1] = integerArray0[0];
      Integer.max((int) integerArray0[0], (int) integerArray0[0]);
      integerArray0[2] = integer0;
      stack0.toArray(integerArray0);
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex((int) integerArray0[1]);
      int[] intArray0 = new int[7];
      intArray0[0] = (int) integerArray0[1];
      integerArray0[0] = integerArray0[1];
      Integer.min((-943), (-3265));
      Integer integer2 = Integer.valueOf((int) integerArray0[0]);
      Integer.sum((-4541), (-4541));
      Predicate<Object> predicate0 = Predicate.isEqual((Object) integer2);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate.isEqual((Object) "wVzks-");
      Predicate<Object> predicate2 = predicate0.and(predicate1);
      Month month0 = Month.DECEMBER;
      Predicate.isEqual((Object) month0);
      Predicate<Object> predicate3 = predicate2.or(predicate1);
      Predicate<Object> predicate4 = Predicate.isEqual((Object) integer2);
      Predicate<Object> predicate5 = predicate3.or(predicate4);
      assertNotSame(predicate3, predicate5);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.4841652152843623
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      DefaultComboBoxModel<String> defaultComboBoxModel0 = new DefaultComboBoxModel<String>();
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      defaultComboBoxModel0.setSelectedItem(pdfGraphics2D_HyperLinkKey0);
      visualListModel0.removeListDataListener((ListDataListener) null);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "XX?D'";
      stringArray0[1] = "XX?D'";
      stringArray0[2] = "XX?D'";
      stringArray0[3] = "XX?D'";
      stringArray0[4] = "XX?D'";
      DefaultComboBoxModel<String> defaultComboBoxModel1 = new DefaultComboBoxModel<String>(stringArray0);
      JComboBox<String> jComboBox0 = new JComboBox<String>(defaultComboBoxModel0);
      visualListModel0.addListDataListener((ListDataListener) null);
      visualListModel0.getValidElements();
      visualListModel0.getValidElements();
      VisualPageListItem[] visualPageListItemArray0 = visualListModel0.getElements();
      assertEquals(0, visualPageListItemArray0.length);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      ColorModel.getRGBdefault();
      Hashtable<String, BasicComboBoxEditor> hashtable0 = new Hashtable<String, BasicComboBoxEditor>();
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      visualListModel0.addAllElements(553, (Collection<VisualPageListItem>) hashSet0);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Vector<String> vector0 = new Vector<String>();
      DefaultComboBoxModel<String> defaultComboBoxModel0 = new DefaultComboBoxModel<String>(vector0);
      JComboBox<String> jComboBox0 = new JComboBox<String>(defaultComboBoxModel0);
      defaultComboBoxModel0.addListDataListener(jComboBox0);
      JComboBox<String> jComboBox1 = new JComboBox<String>(defaultComboBoxModel0);
      JComponent.isLightweightComponent(jComboBox0);
      JComboBox<String> jComboBox2 = new JComboBox<String>();
      jComboBox1.transferFocusDownCycle();
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.removeListDataListener(jComboBox1);
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      visualListModel0.prependAllElements(treeSet0);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      int[] intArray0 = new int[0];
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.appendAllElements(stack0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      assertEquals(1, visualListModel0.getSize());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      HashMap<RenderingHints.Key, DefaultTableModel> hashMap0 = new HashMap<RenderingHints.Key, DefaultTableModel>();
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      Vector<DefaultTableModel> vector0 = new Vector<DefaultTableModel>();
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(vector0, vector0);
      hashMap0.put(pdfGraphics2D_HyperLinkKey0, defaultTableModel0);
      hashMap0.keySet();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_DITHERING;
      DefaultTableModel defaultTableModel1 = new DefaultTableModel();
      hashMap0.put(sunHints_Key1, defaultTableModel1);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "R,|%:Y";
      stringArray0[1] = "R,|%:Y";
      stringArray0[2] = "aLSeN";
      stringArray0[3] = "R,|%:Y";
      stringArray0[4] = "R,|%:Y";
      stringArray0[5] = "R,|%:Y";
      stringArray0[6] = "R,|%:Y";
      stringArray0[7] = "R,|%:Y";
      stringArray0[8] = "R,|%:Y";
      JComboBox<String> jComboBox0 = new JComboBox<String>(stringArray0);
      jComboBox0.transferFocusDownCycle();
      JComboBox<String> jComboBox1 = new JComboBox<String>();
      visualListModel0.removeListDataListener(jComboBox1);
      visualListModel0.removeElements(intArray0, false);
      assertArrayEquals(new int[] {}, intArray0);
  }
}
