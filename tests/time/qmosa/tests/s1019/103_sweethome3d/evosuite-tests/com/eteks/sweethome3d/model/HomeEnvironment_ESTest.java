/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 04:23:55 GMT 2019
 */

package com.eteks.sweethome3d.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.eteks.sweethome3d.model.AspectRatio;
import com.eteks.sweethome3d.model.Camera;
import com.eteks.sweethome3d.model.CatalogTexture;
import com.eteks.sweethome3d.model.Content;
import com.eteks.sweethome3d.model.HomeEnvironment;
import com.eteks.sweethome3d.model.HomeTexture;
import com.eteks.sweethome3d.model.TextureImage;
import com.eteks.sweethome3d.model.TexturesCategory;
import com.eteks.sweethome3d.tools.ResourceURLContent;
import com.eteks.sweethome3d.tools.TemporaryURLContent;
import com.eteks.sweethome3d.tools.URLContent;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeListenerProxy;
import java.net.URL;
import java.net.URLStreamHandler;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HomeEnvironment_ESTest extends HomeEnvironment_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.521452740110338
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      homeEnvironment1.setGroundColor(13684944);
      homeEnvironment0.setSubpartSizeUnderLight((-4916));
      homeEnvironment1.setPhotoQuality((-4916));
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment1.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.clone();
      assertEquals((-4916.0F), homeEnvironment0.getSubpartSizeUnderLight(), 0.01F);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.7894678696691564
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MockURL.getFileExample();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-796), (HomeTexture) null, (-796), (HomeTexture) null, (-796), (-796));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setVideoFrameRate((-796));
      homeEnvironment1.setAllLevelsVisible(false);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      System.setCurrentTimeMillis((-876L));
      HomeEnvironment homeEnvironment2 = new HomeEnvironment();
      homeEnvironment2.getVideoQuality();
      HomeEnvironment.Property.values();
      HomeEnvironment homeEnvironment3 = new HomeEnvironment(0, (HomeTexture) null, (-796), (-796), 1107.0F);
      homeEnvironment3.getWallsAlpha();
      homeEnvironment2.setObserverCameraElevationAdjusted(false);
      homeEnvironment1.clone();
      homeEnvironment1.getLightColor();
      AspectRatio aspectRatio1 = AspectRatio.FREE_RATIO;
      // Undeclared exception!
      try { 
        homeEnvironment1.setVideoAspectRatio(aspectRatio1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unsupported aspect ratio FREE_RATIO
         //
         verifyException("com.eteks.sweethome3d.model.HomeEnvironment", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.7853437136837007
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Can't create temporary folder ");
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.getCeillingLightColor();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.ALL_LEVELS_VISIBLE;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      Camera camera0 = new Camera(13684944, 0.0F, 0.0F, 13684944, 0.0F, 0.0F);
      camera0.setYaw(0.0F);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(homeEnvironment0, "", "", camera0);
      homeEnvironment0.setVideoQuality(1);
      Camera.Lens camera_Lens0 = Camera.Lens.SPHERICAL;
      Camera camera1 = new Camera(0.0F, (-1815.836F), (-2035.1F), 0.0F, 13684944, 13684944, 4779L, camera_Lens0);
      propertyChangeEvent0.setPropagationId(camera1);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      HomeEnvironment homeEnvironment2 = new HomeEnvironment();
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      HomeEnvironment.Property homeEnvironment_Property1 = HomeEnvironment.Property.LIGHT_COLOR;
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("", (PropertyChangeListener) null);
      homeEnvironment1.addPropertyChangeListener(homeEnvironment_Property1, propertyChangeListenerProxy2);
      homeEnvironment1.setSkyColor(7);
      homeEnvironment1.setGroundColor(11);
      homeEnvironment0.getCeillingLightColor();
      HomeEnvironment.DrawingMode[] homeEnvironment_DrawingModeArray0 = HomeEnvironment.DrawingMode.values();
      assertEquals(3, homeEnvironment_DrawingModeArray0.length);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.687079840507875
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyColor(0);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.setAllLevelsVisible(true);
      HomeEnvironment homeEnvironment2 = new HomeEnvironment((-4295), (HomeTexture) null, 1452, (HomeTexture) null, 1, 0.0F);
      homeEnvironment0.setCeillingLightColor((-1717));
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      homeEnvironment1.setLightColor(2369);
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      HomeEnvironment homeEnvironment3 = homeEnvironment0.clone();
      homeEnvironment3.setVideoAspectRatio(aspectRatio0);
      assertTrue(homeEnvironment0.isAllLevelsVisible());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.673415053526696
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)95;
      byteArray0[1] = (byte)124;
      byteArray0[2] = (byte) (-4);
      byteArray0[3] = (byte)13;
      byteArray0[4] = (byte) (-100);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      CatalogTexture catalogTexture0 = new CatalogTexture("7.y@FcV$I=]huEgZ#", "", (Content) null, 1372, (-2712.0125F), "");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1372, homeTexture0, 1372, homeTexture0, 1372, (-3311.0F));
      homeEnvironment0.getSubpartSizeUnderLight();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.setVideoQuality(1372);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "7.y@FcV$I=]huEgZ#");
      CatalogTexture catalogTexture1 = new CatalogTexture("", (Content) null, 0.0F, 0.0F);
      catalogTexture0.compareTo(catalogTexture1);
      homeEnvironment1.setAllLevelsVisible(false);
      homeEnvironment1.setVideoQuality(2497);
      homeEnvironment0.getLightColor();
      homeEnvironment1.setGroundTexture(homeTexture0);
      homeEnvironment1.getSkyTexture();
      float float0 = homeEnvironment1.getWallsAlpha();
      assertEquals(2497, homeEnvironment1.getVideoQuality());
      assertEquals((-3311.0F), float0, 0.01F);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.847642989259894
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setVideoQuality(1083);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      homeEnvironment0.setLightColor(1083);
      homeEnvironment1.setSubpartSizeUnderLight(0);
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment1.setVideoCameraPath((List<Camera>) null);
      homeEnvironment1.setSkyColor((-576));
      homeEnvironment0.getGroundColor();
      Random.setNextRandom(152);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoQuality((-154));
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.clone();
      HomeEnvironment.Property.values();
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("+");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.+
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.847642989259894
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoQuality((-154));
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      homeEnvironment0.setAllLevelsVisible(true);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      URL uRL0 = MockURL.getHttpExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL1 = MockURL.URL(uRL0, "(~SxQ.86m6&(", uRLStreamHandler0);
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL1);
      CatalogTexture catalogTexture0 = new CatalogTexture("(~SxQ.86m6&(", "jk2mCT'^B9rp?No", temporaryURLContent0, (-154), (-154), "OBSERVER_CAMERA_ELEVATION_ADJUSTED", false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setGroundTexture(homeTexture0);
      homeEnvironment0.getWallsAlpha();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      homeEnvironment0.clone();
      homeEnvironment0.setPhotoWidth(2006);
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeEnvironment0.getPhotoWidth();
      int int0 = homeEnvironment0.getPhotoHeight();
      assertTrue(homeEnvironment0.isAllLevelsVisible());
      assertEquals(300, int0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.183220085050876
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyColor(0);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setAllLevelsVisible(true);
      homeEnvironment1.getWallsAlpha();
      homeEnvironment1.setCeillingLightColor(8);
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.getPhotoWidth();
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment1.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.isObserverCameraElevationAdjusted();
      homeEnvironment0.setPhotoQuality(400);
      homeEnvironment1.setCeillingLightColor((-908));
      homeEnvironment1.setVideoWidth(400);
      homeEnvironment1.setAllLevelsVisible(false);
      homeEnvironment0.setVideoFrameRate(2146443861);
      HomeEnvironment homeEnvironment2 = new HomeEnvironment();
      homeEnvironment2.setCeillingLightColor(400);
      HomeEnvironment homeEnvironment3 = homeEnvironment1.clone();
      homeEnvironment3.setPhotoQuality(4414);
      HomeEnvironment homeEnvironment4 = homeEnvironment3.clone();
      AspectRatio aspectRatio1 = AspectRatio.RATIO_4_3;
      homeEnvironment4.setVideoAspectRatio(aspectRatio1);
      homeEnvironment2.getDrawingMode();
      assertEquals(400, homeEnvironment2.getCeillingLightColor());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.753349994178044
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.setVideoFrameRate(300);
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setLightColor(0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.setSubpartSizeUnderLight(1.0F);
      HomeEnvironment homeEnvironment2 = homeEnvironment0.clone();
      homeEnvironment2.setVideoFrameRate(300);
      homeEnvironment1.setPhotoQuality(300);
      assertEquals(300, homeEnvironment0.getVideoFrameRate());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.878160607823009
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setSkyColor((-892));
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setCeillingLightColor(25);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_HEIGHT;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("J;q.2\"Hc{wUHC(vfT", propertyChangeListener0);
      homeEnvironment1.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      HomeEnvironment homeEnvironment2 = homeEnvironment0.clone();
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("FREE_RATIO", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("", (PropertyChangeListener) null);
      HomeEnvironment.Property homeEnvironment_Property1 = HomeEnvironment.Property.SUBPART_SIZE_UNDER_LIGHT;
      homeEnvironment2.addPropertyChangeListener(homeEnvironment_Property1, (PropertyChangeListener) null);
      homeEnvironment2.setSkyColor((-892));
      homeEnvironment2.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment1.setLightColor(0);
      homeEnvironment1.setGroundColor(5);
      assertEquals(25, homeEnvironment0.getCeillingLightColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.376742981833967
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      int int0 = (-891);
      homeEnvironment0.setVideoQuality((-891));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      homeEnvironment2.setPhotoQuality(1155);
      AspectRatio aspectRatio0 = AspectRatio.FREE_RATIO;
      // Undeclared exception!
      try { 
        homeEnvironment1.setVideoAspectRatio(aspectRatio0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unsupported aspect ratio FREE_RATIO
         //
         verifyException("com.eteks.sweethome3d.model.HomeEnvironment", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.1944064129383247
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      MockURL.getFileExample();
      AspectRatio aspectRatio0 = AspectRatio.VIEW_3D_RATIO;
      // Undeclared exception!
      try { 
        homeEnvironment0.setVideoAspectRatio(aspectRatio0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unsupported aspect ratio VIEW_3D_RATIO
         //
         verifyException("com.eteks.sweethome3d.model.HomeEnvironment", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      CatalogTexture catalogTexture0 = new CatalogTexture("W5sSrl4", resourceURLContent0, (-796), (-796), false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      CatalogTexture catalogTexture1 = new CatalogTexture("W5sSrl4", resourceURLContent0, 3149.2F, 4, true);
      catalogTexture1.getCategory();
      catalogTexture1.setCategory((TexturesCategory) null);
      catalogTexture0.compareTo(catalogTexture1);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-796), homeTexture0, (-3954), homeTexture0, 4, 4);
      int int0 = homeEnvironment0.getPhotoWidth();
      assertEquals(400, int0);
      
      homeEnvironment0.getVideoAspectRatio();
      int int1 = homeEnvironment0.getPhotoQuality();
      assertEquals(0, int1);
      
      int int2 = homeEnvironment0.getGroundColor();
      assertEquals((-796), int2);
      
      int int3 = homeEnvironment0.getCeillingLightColor();
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals((-3954), homeEnvironment0.getSkyColor());
      assertEquals(4, homeEnvironment0.getLightColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(4.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(13684944, int3);
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      int int0 = 1;
      String string0 = "";
      ResourceURLContent resourceURLContent0 = new ResourceURLContent((URL) null, false);
      CatalogTexture catalogTexture0 = new CatalogTexture("", resourceURLContent0, (-1.0F), 1);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      CatalogTexture catalogTexture1 = new CatalogTexture("", resourceURLContent0, 1.5F, (-1217), false);
      catalogTexture0.compareTo(catalogTexture1);
      CatalogTexture catalogTexture2 = new CatalogTexture("", resourceURLContent0, 0.0F, 0.0F, false);
      catalogTexture0.compareTo(catalogTexture2);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1, homeTexture0, 1, (-1217), 0.0F);
      homeEnvironment0.setVideoQuality(0);
      homeEnvironment0.getVideoFrameRate();
      // Undeclared exception!
      try { 
        resourceURLContent0.getJAREntryName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.8778952727983707
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Can't create temporary folder ");
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.getCeillingLightColor();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.ALL_LEVELS_VISIBLE;
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      Camera camera0 = new Camera(13684944, 0.0F, 0.0F, 13684944, 0.0F, 0.0F);
      camera0.setYaw(0.0F);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(homeEnvironment0, "", "", camera0);
      homeEnvironment1.setCeillingLightColor(1155);
      Camera camera1 = new Camera((-2035.1F), (-1L), (-2035.1F), (-1815.836F), (-1815.836F), 0.0F);
      propertyChangeEvent0.setPropagationId(camera1);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      HomeEnvironment.Property homeEnvironment_Property1 = HomeEnvironment.Property.PHOTO_ASPECT_RATIO;
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      homeEnvironment2.addPropertyChangeListener(homeEnvironment_Property1, propertyChangeListenerProxy2);
      homeEnvironment2.setSkyColor(7);
      homeEnvironment2.setGroundColor(11);
      assertEquals(11, homeEnvironment2.getGroundColor());
      
      homeEnvironment0.getDrawingMode();
      assertEquals(240, homeEnvironment0.getVideoHeight());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.196422294125466
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      homeEnvironment1.setVideoQuality(1083);
      homeEnvironment0.setLightColor(1083);
      homeEnvironment1.setSubpartSizeUnderLight(0);
      homeEnvironment1.setSkyTexture((HomeTexture) null);
      homeEnvironment1.setCeillingLightColor(1083);
      homeEnvironment0.getVideoQuality();
      homeEnvironment1.getPhotoAspectRatio();
      homeEnvironment0.setPhotoHeight(9);
      homeEnvironment1.getVideoWidth();
      homeEnvironment1.getVideoQuality();
      homeEnvironment1.isAllLevelsVisible();
      homeEnvironment1.setPhotoHeight(1083);
      homeEnvironment1.setVideoWidth(9);
      homeEnvironment1.setCeillingLightColor(9);
      homeEnvironment1.setLightColor(0);
      homeEnvironment0.getVideoQuality();
      homeEnvironment0.setCeillingLightColor(3);
      assertEquals(9, homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.8493821196946767
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      HomeEnvironment.DrawingMode.valueOf("OUTLINE");
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoFrameRate(0);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setLightColor(1107);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setSubpartSizeUnderLight(750.76F);
      homeEnvironment0.setVideoFrameRate(5);
      homeEnvironment0.setPhotoQuality((-1865));
      homeEnvironment1.setPhotoWidth(900);
      assertEquals(750.76F, homeEnvironment1.getSubpartSizeUnderLight(), 0.01F);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.673415053526696
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Can't create temporary folder ");
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.ALL_LEVELS_VISIBLE;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(homeEnvironment0, "Can't create temporary folder ", (Object) null, homeEnvironment_Property0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      homeEnvironment2.setWallsAlpha(0.0F);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      int int0 = homeEnvironment0.getVideoHeight();
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(240, int0);
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertNotSame(homeEnvironment0, homeEnvironment2);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      CatalogTexture catalogTexture0 = new CatalogTexture("", (Content) null, 4, 4, true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(4, homeTexture0, 805, 14, (-1592.9254F));
      float float0 = homeEnvironment0.getSubpartSizeUnderLight();
      assertEquals(14, homeEnvironment0.getLightColor());
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals((-1592.9254F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(4, homeEnvironment0.getGroundColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(805, homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.1034354550763315
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      homeEnvironment0.setVideoWidth((-1084));
      homeEnvironment0.setAllLevelsVisible(false);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setSkyTexture((HomeTexture) null);
      homeEnvironment0.setCeillingLightColor((-1084));
      homeEnvironment0.getVideoQuality();
      homeEnvironment1.getPhotoAspectRatio();
      homeEnvironment0.setPhotoHeight((-1084));
      homeEnvironment1.getVideoWidth();
      homeEnvironment0.getVideoQuality();
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment0.setPhotoHeight((-1084));
      homeEnvironment0.setVideoWidth(320);
      homeEnvironment1.setCeillingLightColor(300);
      homeEnvironment0.setLightColor(14);
      homeEnvironment0.getVideoQuality();
      homeEnvironment0.setCeillingLightColor(3);
      assertEquals((-1084), homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.7937175017485838
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, (HomeTexture) null, 0, (-1141.1F));
      HomeEnvironment homeEnvironment1 = new HomeEnvironment((-4048), (HomeTexture) null, (-3090), (-4048), (-1141.1F));
      homeEnvironment1.setCeillingLightColor((-5166));
      homeEnvironment1.setGroundColor((-4048));
      homeEnvironment0.setGroundColor(14);
      assertEquals(14, homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.4466856169199285
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setWallsAlpha(2946.79F);
      URL uRL0 = MockURL.getFtpExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("PHOTO_ASPECT_RATIO", "C/SDh$w`Z@xj.~2", temporaryURLContent0, 2946.79F, 2946.79F, "\"KP?", true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setGroundTexture(homeTexture0);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.getGroundTexture();
      homeEnvironment0.setAllLevelsVisible(true);
      assertTrue(homeEnvironment0.isAllLevelsVisible());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.1341286000959614
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, 1458, 0);
      URL uRL0 = MockURL.getFtpExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("", "\"KP?", temporaryURLContent0, (-439.66F), 0, "", true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setGroundTexture(homeTexture0);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.getGroundTexture();
      homeEnvironment0.setAllLevelsVisible(true);
      assertTrue(homeEnvironment0.isAllLevelsVisible());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.171659610384074
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent((URL) null);
      CatalogTexture catalogTexture0 = new CatalogTexture("", (String) null, temporaryURLContent0, 1, 3198.0F, "", true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, homeTexture0, (-5166), 14, 0);
      homeEnvironment0.setPhotoHeight(13);
      homeEnvironment0.setPhotoQuality(14);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_QUALITY;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("xZ28>UZQV9*^n2", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("17Cw5>jCG.z's4P2aIl", propertyChangeListenerProxy0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      homeEnvironment1.getLightColor();
      homeEnvironment1.setLightColor((-1967));
      homeEnvironment0.setCeillingLightColor(0);
      homeEnvironment0.setGroundTexture(homeTexture0);
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment0.getSkyColor();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment1.setVideoWidth((-5166));
      assertEquals((-1967), homeEnvironment1.getLightColor());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.2998418909871017
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.setPhotoHeight(0);
      homeEnvironment0.setPhotoQuality(0);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_QUALITY;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      homeEnvironment1.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.getLightColor();
      homeEnvironment0.setLightColor(0);
      homeEnvironment1.setCeillingLightColor(13684944);
      homeEnvironment0.setGroundTexture((HomeTexture) null);
      homeEnvironment0.clone();
      List<Camera> list0 = homeEnvironment1.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment0.getSkyColor();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setVideoWidth(0);
      assertEquals(0, homeEnvironment0.getVideoWidth());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, (HomeTexture) null, 0, (-1141.1F));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setCeillingLightColor((-5166));
      homeEnvironment1.setGroundColor((-4048));
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setWallsAlpha(2946.79F);
      homeEnvironment0.setLightColor((-5166));
      homeEnvironment0.setLightColor((-2550));
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("m67`]?:$?=>14J;A");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.m67`]?:$?=>14J;A
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.242387625000415
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setSkyColor(0);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setCeillingLightColor(0);
      homeEnvironment0.setPhotoQuality(0);
      homeEnvironment0.setVideoWidth(0);
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.setSkyTexture((HomeTexture) null);
      homeEnvironment0.setCeillingLightColor(320);
      homeEnvironment0.getVideoQuality();
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment0.setPhotoHeight(0);
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.getVideoQuality();
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment0.setPhotoHeight(0);
      homeEnvironment0.setVideoWidth(0);
      homeEnvironment0.setCeillingLightColor(0);
      homeEnvironment0.setLightColor(0);
      homeEnvironment0.getVideoQuality();
      homeEnvironment0.setCeillingLightColor(1009);
      assertEquals(0, homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.372821413206516
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoQuality((-154));
      homeEnvironment0.setWallsAlpha(2114.104F);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.clone();
      assertEquals(2114.104F, homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=3.125543816101745
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "os.version");
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoHeight(6);
      homeEnvironment0.setVideoFrameRate(1283);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.setSubpartSizeUnderLight(1283);
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_CAMERA_PATH;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      homeEnvironment1.setLightColor(6);
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("os.version", propertyChangeListener0);
      homeEnvironment1.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL_AND_OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment1.setVideoQuality(54);
      homeEnvironment0.setSkyColor((-2383));
      HomeEnvironment.Property homeEnvironment_Property1 = HomeEnvironment.Property.SUBPART_SIZE_UNDER_LIGHT;
      homeEnvironment2.removePropertyChangeListener(homeEnvironment_Property1, propertyChangeListenerProxy0);
      HomeEnvironment homeEnvironment3 = homeEnvironment1.clone();
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("os.version", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("os.version", (PropertyChangeListener) null);
      PropertyChangeListenerProxy propertyChangeListenerProxy3 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy2);
      homeEnvironment2.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy1);
      homeEnvironment3.setSkyColor((-892));
      homeEnvironment3.setGroundColor(6);
      assertEquals(1283.0F, homeEnvironment0.getSubpartSizeUnderLight(), 0.01F);
      assertEquals((-2383), homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.847642989259894
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoWidth(0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setObserverCameraElevationAdjusted(true);
      homeEnvironment1.getPhotoWidth();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment1.setVideoCameraPath(list0);
      homeEnvironment1.setSkyColor(8192);
      assertEquals(8192, homeEnvironment1.getSkyColor());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.7825850929940454
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.ALL_LEVELS_VISIBLE;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(homeEnvironment0, "Can't create temporary folder ", (Object) null, homeEnvironment_Property0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment1.clone();
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("u", propertyChangeListenerProxy0);
      HomeEnvironment.Property homeEnvironment_Property1 = HomeEnvironment.Property.LIGHT_COLOR;
      homeEnvironment1.addPropertyChangeListener(homeEnvironment_Property1, propertyChangeListenerProxy0);
      homeEnvironment1.setSkyColor(7);
      homeEnvironment1.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setLightColor((-1305));
      homeEnvironment1.setGroundColor(11);
      int int0 = homeEnvironment0.getPhotoHeight();
      assertEquals((-1305), homeEnvironment0.getLightColor());
      assertEquals(300, int0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.1794904813212725
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyColor(0);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setAllLevelsVisible(true);
      homeEnvironment1.getWallsAlpha();
      homeEnvironment1.setCeillingLightColor(8);
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.getPhotoWidth();
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment1.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.isObserverCameraElevationAdjusted();
      homeEnvironment0.setGroundColor(3);
      homeEnvironment1.setAllLevelsVisible(true);
      homeEnvironment1.getWallsAlpha();
      homeEnvironment1.setPhotoWidth(0);
      homeEnvironment0.getSkyColor();
      homeEnvironment0.setLightColor(0);
      assertEquals(0, homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.789071579480532
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.getVideoHeight();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.GROUND_TEXTURE;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("lF", propertyChangeListener0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setSubpartSizeUnderLight(0.0F);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent("&y\"z4Nq(-n`J9", "", object0, "");
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent(homeEnvironment_Property0, "CEILING_LIGHT_COLOR", "lF", "lF");
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      Object object1 = new Object();
      propertyChangeEvent1.setPropagationId(object1);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent1);
      homeEnvironment0.isObserverCameraElevationAdjusted();
      homeEnvironment0.isObserverCameraElevationAdjusted();
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      homeEnvironment1.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.getVideoHeight();
      homeEnvironment1.setSubpartSizeUnderLight(0.0F);
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("&y\"z4Nq(-n`J9");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.&y\"z4Nq(-n`J9
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=3.245745869095552
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setSkyColor((-892));
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setCeillingLightColor(291);
      homeEnvironment0.setPhotoQuality(291);
      homeEnvironment0.setVideoWidth(900);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setSkyTexture((HomeTexture) null);
      homeEnvironment0.setCeillingLightColor((-892));
      homeEnvironment0.getVideoQuality();
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment0.setPhotoHeight(2);
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.getVideoQuality();
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment0.setPhotoHeight(320);
      homeEnvironment0.setVideoWidth(0);
      homeEnvironment0.setCeillingLightColor(320);
      homeEnvironment0.setLightColor(0);
      homeEnvironment0.getVideoQuality();
      homeEnvironment0.setCeillingLightColor(0);
      HomeEnvironment.DrawingMode[] homeEnvironment_DrawingModeArray0 = HomeEnvironment.DrawingMode.values();
      assertEquals(3, homeEnvironment_DrawingModeArray0.length);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      int int0 = homeEnvironment0.getPhotoQuality();
      assertEquals(0, int0);
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("WALLS_ALPHA", ".`E4", (Content) null, 0, 0.0F, "", false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, homeTexture0, 1, homeTexture0, 1, 1);
      int int0 = homeEnvironment0.getGroundColor();
      assertEquals(1.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(1, homeEnvironment0.getSkyColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(1, homeEnvironment0.getLightColor());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.5168760810714366
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ResourceURLContent resourceURLContent0 = new ResourceURLContent((URL) null, true);
      CatalogTexture catalogTexture0 = new CatalogTexture("", resourceURLContent0, (-1.0F), 1);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      CatalogTexture catalogTexture1 = new CatalogTexture("", resourceURLContent0, 1.5F, (-1217), false);
      catalogTexture0.compareTo(catalogTexture1);
      CatalogTexture catalogTexture2 = new CatalogTexture("", resourceURLContent0, 0.0F, 0.0F, true);
      catalogTexture0.compareTo(catalogTexture2);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1, homeTexture0, 1, (-1217), 0.0F);
      homeEnvironment0.setSubpartSizeUnderLight((-1.0F));
      homeEnvironment0.setLightColor((-1217));
      homeEnvironment0.setSubpartSizeUnderLight(750.76F);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      List<Camera> list0 = homeEnvironment1.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment0.setSkyColor(1);
      assertEquals(750.76F, homeEnvironment0.getSubpartSizeUnderLight(), 0.01F);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.8778952727983707
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyColor(11);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setVideoFrameRate(151);
      homeEnvironment0.setLightColor((-1712));
      homeEnvironment0.setWallsAlpha((-1759.438F));
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_QUALITY;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("J~o<~", propertyChangeListener0);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setCeillingLightColor((-1712));
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.getSkyTexture();
      System.setCurrentTimeMillis(151);
      HomeEnvironment.Property[] homeEnvironment_PropertyArray0 = HomeEnvironment.Property.values();
      assertEquals(20, homeEnvironment_PropertyArray0.length);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSubpartSizeUnderLight((-129.16919F));
      homeEnvironment0.setPhotoQuality((-154));
      boolean boolean1 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      MockURL.getFileExample();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.getGroundTexture();
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.7808459625592628
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Can't create temporary folder ");
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("u", propertyChangeListenerProxy0);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.LIGHT_COLOR;
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("", (PropertyChangeListener) null);
      homeEnvironment1.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy2);
      homeEnvironment1.setSkyColor(7);
      homeEnvironment0.setLightColor((-1305));
      homeEnvironment1.setGroundColor(11);
      homeEnvironment2.getVideoAspectRatio();
      System.setCurrentTimeMillis(7);
      homeEnvironment2.getPhotoAspectRatio();
      assertEquals(11, homeEnvironment1.getGroundColor());
      assertEquals((-1305), homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=3.242387625000415
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setSkyColor((-892));
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setCeillingLightColor(0);
      homeEnvironment0.setPhotoQuality(0);
      homeEnvironment0.setVideoWidth((-892));
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.setSkyTexture((HomeTexture) null);
      homeEnvironment0.setCeillingLightColor(320);
      homeEnvironment0.getVideoQuality();
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment0.setPhotoHeight(0);
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.getVideoQuality();
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment0.setPhotoHeight(0);
      homeEnvironment0.setVideoWidth((-892));
      homeEnvironment0.setCeillingLightColor(0);
      homeEnvironment0.setLightColor(0);
      homeEnvironment0.getVideoQuality();
      homeEnvironment0.setCeillingLightColor(1009);
      assertEquals(AspectRatio.RATIO_2_1, homeEnvironment0.getVideoAspectRatio());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=3.3929114041146935
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.setSkyColor((-892));
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setCeillingLightColor(0);
      homeEnvironment0.setPhotoQuality(0);
      homeEnvironment0.setVideoWidth((-892));
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.setSkyTexture((HomeTexture) null);
      homeEnvironment0.setCeillingLightColor(320);
      homeEnvironment0.getVideoQuality();
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment0.setPhotoHeight(0);
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.getVideoQuality();
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment0.setPhotoHeight(0);
      homeEnvironment0.setVideoWidth((-892));
      homeEnvironment0.setCeillingLightColor(0);
      homeEnvironment0.setLightColor(0);
      homeEnvironment0.getVideoQuality();
      homeEnvironment0.setCeillingLightColor(1009);
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.getSkyTexture();
      int int0 = homeEnvironment0.getVideoQuality();
      assertEquals(0, homeEnvironment0.getPhotoHeight());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("", (Content) null, 1.0F, 0.0F, true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, homeTexture0, 3, homeTexture0, 0, 0);
      HomeTexture homeTexture1 = new HomeTexture(catalogTexture0);
      // Undeclared exception!
      try { 
        homeEnvironment0.setSkyTexture(homeTexture1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.model.HomeTexture", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.495914456064185
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment0.setVideoFrameRate(4733);
      System.setCurrentTimeMillis(1L);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.getVideoAspectRatio();
      assertEquals(AspectRatio.RATIO_3_2, homeEnvironment0.getVideoAspectRatio());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.9456645463488123
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, (-319), (HomeTexture) null, (-319), 0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.setSkyColor(0);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "k'");
      homeEnvironment0.setLightColor((-892));
      AspectRatio aspectRatio1 = AspectRatio.SQUARE_RATIO;
      homeEnvironment1.setVideoAspectRatio(aspectRatio1);
      homeEnvironment0.clone();
      AspectRatio aspectRatio2 = AspectRatio.SQUARE_RATIO;
      homeEnvironment1.setVideoAspectRatio(aspectRatio2);
      assertEquals(AspectRatio.SQUARE_RATIO, homeEnvironment1.getVideoAspectRatio());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.355825830420688
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      System.setCurrentTimeMillis(1L);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      float float0 = homeEnvironment0.getWallsAlpha();
      assertEquals(AspectRatio.RATIO_3_2, homeEnvironment0.getVideoAspectRatio());
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, 1458, 0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      homeEnvironment0.setWallsAlpha(1458);
      AspectRatio aspectRatio0 = AspectRatio.VIEW_3D_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setSkyColor(5);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("W9e%l47PvcNp &]v<", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("Invalid URL base for JAR entry", propertyChangeListenerProxy0);
      Camera camera0 = new Camera((-131.605F), 0.0F, 0, 0.0F, 0.0F, (-1070.6F));
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(propertyChangeListenerProxy1, (String) null, homeEnvironment0, (Object) null);
      homeEnvironment0.setPhotoQuality(5);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment(1458, (HomeTexture) null, 0, (HomeTexture) null, (-364), 0.0F);
      homeEnvironment1.setPhotoWidth(6);
      assertEquals(6, homeEnvironment1.getPhotoWidth());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(850, (HomeTexture) null, 20, (HomeTexture) null, (-3090), (-1141.1F));
      homeEnvironment0.setCeillingLightColor((-4048));
      homeEnvironment0.setGroundColor((-3090));
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("com.eteks.sweethome3d.model.AspectRatio");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.com.eteks.sweethome3d.model.AspectRatio
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.691735059102455
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setSkyColor((-892));
      homeEnvironment0.setPhotoQuality(3);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.CEILING_LIGHT_COLOR;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy((String) null, propertyChangeListener0);
      homeEnvironment1.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      HomeEnvironment homeEnvironment2 = homeEnvironment0.clone();
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy((String) null, propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy((String) null, (PropertyChangeListener) null);
      HomeEnvironment.Property homeEnvironment_Property1 = HomeEnvironment.Property.CEILING_LIGHT_COLOR;
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property1, propertyChangeListenerProxy0);
      homeEnvironment1.setSkyColor(13);
      homeEnvironment2.setGroundColor((-516));
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Name is null
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.8778952727983707
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoWidth(0);
      homeEnvironment0.setVideoWidth(2);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setObserverCameraElevationAdjusted(true);
      homeEnvironment1.getPhotoWidth();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.setVideoFrameRate(2);
      homeEnvironment0.setPhotoQuality(2);
      homeEnvironment1.setPhotoWidth(400);
      assertEquals(2, homeEnvironment0.getVideoHeight());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.876156142363588
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.getVideoHeight();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.GROUND_TEXTURE;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("lF", propertyChangeListener0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setSubpartSizeUnderLight(0.0F);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent("{=e\"K", "", object0, "");
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent(homeEnvironment_Property0, "CEILING_LIGHT_COLOR", "lF", "lF");
      Object object1 = new Object();
      propertyChangeEvent1.setPropagationId(object1);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent1);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setSkyColor((-212));
      homeEnvironment0.setGroundColor((-212));
      assertEquals((-212), homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoQuality(12);
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      assertEquals(12, homeEnvironment0.getVideoQuality());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      CatalogTexture catalogTexture0 = new CatalogTexture(".Y-", "pH=/xLT{ZvS", (Content) null, 1.0F, 0.0F, (String) null, true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(6, homeTexture0, 0, homeTexture0, 2453, (-1481.0121F));
      homeEnvironment0.setPhotoWidth(14);
      Camera camera0 = new Camera(0.0F, 6, (-576.536F), 1224.778F, 6, (-576.536F));
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Camera.Lens camera_Lens0 = Camera.Lens.PINHOLE;
      Camera camera1 = new Camera(2601.145F, (-261.0F), 1.0F, 1309.5447F, 1.0F, 240.0F, 3265L, camera_Lens0);
      Object object3 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(camera1, "pH=/xLT{ZvS", object3, homeEnvironment0);
      homeEnvironment0.setPhotoQuality(6);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      homeEnvironment1.setPhotoWidth(14);
      assertEquals(14, homeEnvironment1.getPhotoWidth());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.909350676174655
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setSkyColor((-892));
      AspectRatio aspectRatio0 = AspectRatio.RATIO_16_9;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setCeillingLightColor(0);
      homeEnvironment0.setPhotoQuality((-4));
      homeEnvironment0.setVideoWidth((-892));
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.setVideoFrameRate(5);
      homeEnvironment0.setGroundColor(8);
      homeEnvironment0.setLightColor(2025);
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      assertEquals(5, homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.getCeillingLightColor();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.ALL_LEVELS_VISIBLE;
      homeEnvironment0.clone();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      Camera camera0 = new Camera(13684944, 0.0F, 0.0F, 13684944, 0.0F, 0.0F);
      camera0.setYaw(0.0F);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(homeEnvironment0, "", "", camera0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.clone();
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setPhotoHeight(0);
      homeEnvironment0.setSkyColor(13684944);
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=3.3040938155088355
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setSkyColor((-892));
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setCeillingLightColor(0);
      homeEnvironment0.setPhotoQuality(0);
      homeEnvironment0.setVideoWidth((-892));
      HomeEnvironment homeEnvironment1 = new HomeEnvironment((-1159), (HomeTexture) null, 0, 0, (-1159));
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment1.setVideoCameraPath(list0);
      homeEnvironment0.setGroundTexture((HomeTexture) null);
      HomeEnvironment homeEnvironment2 = new HomeEnvironment(1847, (HomeTexture) null, 16, (HomeTexture) null, 2, (-3.08F));
      homeEnvironment2.getWallsAlpha();
      homeEnvironment2.setPhotoWidth(0);
      homeEnvironment2.getSkyColor();
      homeEnvironment0.setLightColor(2);
      homeEnvironment0.setSkyTexture((HomeTexture) null);
      int int0 = homeEnvironment0.getLightColor();
      assertEquals(AspectRatio.RATIO_2_1, homeEnvironment0.getVideoAspectRatio());
      assertEquals(2, int0);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.7787755691845217
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setVideoQuality(1083);
      homeEnvironment0.setLightColor(1083);
      homeEnvironment1.setSubpartSizeUnderLight(0);
      homeEnvironment1.setVideoFrameRate(0);
      homeEnvironment1.setPhotoQuality(0);
      homeEnvironment0.setPhotoWidth(1083);
      assertEquals(1083, homeEnvironment0.getPhotoWidth());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.8493821196946767
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "os.version");
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setAllLevelsVisible(false);
      homeEnvironment1.getWallsAlpha();
      int int0 = 8;
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      int int1 = 13684944;
      homeEnvironment0.setCeillingLightColor(13684944);
      homeEnvironment1.getPhotoWidth();
      homeEnvironment0.getPhotoWidth();
      AspectRatio aspectRatio1 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setVideoAspectRatio(aspectRatio1);
      int int2 = 3;
      homeEnvironment1.setGroundColor(400);
      HomeTexture homeTexture0 = null;
      try {
        homeTexture0 = new HomeTexture((TextureImage) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.model.HomeTexture", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.372821413206516
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, 1458, 0);
      URL uRL0 = MockURL.getFtpExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment0.setSkyColor(4333);
      homeEnvironment0.setVideoWidth(1458);
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      assertEquals(4333, homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, 1458, 0);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_16_9;
      homeEnvironment0.setWallsAlpha(551.705F);
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("Invalid URL base for JAR entry", propertyChangeListener0);
      Camera camera0 = new Camera(4, (-131.605F), 0.0F, 0.0F, 0.0F, 551.705F);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(propertyChangeListenerProxy0, "7", camera0, object0);
      homeEnvironment0.setPhotoQuality((-364));
      homeEnvironment0.setPhotoWidth(1458);
      assertEquals(1458, homeEnvironment0.getPhotoWidth());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.7808459625592628
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Can't create temporary folder ");
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.getCeillingLightColor();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.ALL_LEVELS_VISIBLE;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("Can't create temporary folder ", propertyChangeListener0);
      homeEnvironment0.setPhotoHeight(13684944);
      Camera camera0 = new Camera(13684944, 0.0F, 0.0F, 13684944, 0.0F, 0.0F);
      camera0.setYaw(0.0F);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(homeEnvironment0, "", "", camera0);
      Camera.Lens camera_Lens0 = Camera.Lens.SPHERICAL;
      Camera camera1 = new Camera(0.0F, (-1815.836F), (-2035.1F), 0.0F, 13684944, 13684944, (-1L), camera_Lens0);
      propertyChangeEvent0.setPropagationId(camera1);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment1.clone();
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      HomeEnvironment.Property homeEnvironment_Property1 = HomeEnvironment.Property.LIGHT_COLOR;
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("Can't create temporary folder ", (PropertyChangeListener) null);
      homeEnvironment1.addPropertyChangeListener(homeEnvironment_Property1, propertyChangeListenerProxy2);
      homeEnvironment1.setSkyColor(7);
      homeEnvironment1.setGroundColor(11);
      HomeEnvironment.DrawingMode[] homeEnvironment_DrawingModeArray0 = HomeEnvironment.DrawingMode.values();
      assertEquals(3, homeEnvironment_DrawingModeArray0.length);
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      ResourceURLContent resourceURLContent0 = new ResourceURLContent((URL) null, true);
      CatalogTexture catalogTexture0 = new CatalogTexture("", resourceURLContent0, (-1.0F), 1);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      CatalogTexture catalogTexture1 = new CatalogTexture("", resourceURLContent0, 1.5F, (-1217), false);
      catalogTexture0.compareTo(catalogTexture1);
      CatalogTexture catalogTexture2 = new CatalogTexture("", resourceURLContent0, (-1802.0F), (-1802.0F), true);
      catalogTexture0.compareTo(catalogTexture2);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(11053224, homeTexture0, (-1217), (-1217), 551.705F);
      homeEnvironment0.setCeillingLightColor((-1217));
      homeEnvironment0.setGroundColor(11053224);
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.7825850929940454
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Can't create temporary folder ");
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.getCeillingLightColor();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.ALL_LEVELS_VISIBLE;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      Camera camera0 = new Camera(13684944, 0.0F, 0.0F, 13684944, 0.0F, 0.0F);
      camera0.setYaw(0.0F);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(homeEnvironment0, "", "", camera0);
      Camera.Lens camera_Lens0 = Camera.Lens.SPHERICAL;
      Camera camera1 = new Camera(0.0F, (-1815.836F), (-2035.1F), 0.0F, 13684944, 13684944, (-1L), camera_Lens0);
      propertyChangeEvent0.setPropagationId(camera1);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment1.clone();
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      HomeEnvironment.Property homeEnvironment_Property1 = HomeEnvironment.Property.LIGHT_COLOR;
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("", (PropertyChangeListener) null);
      homeEnvironment1.addPropertyChangeListener(homeEnvironment_Property1, propertyChangeListenerProxy2);
      homeEnvironment1.setSkyColor(7);
      homeEnvironment1.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy2);
      homeEnvironment0.setLightColor((-1305));
      homeEnvironment1.setGroundColor(11);
      assertEquals(11, homeEnvironment1.getGroundColor());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("$VALUES", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("$VALUES", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("v'2aN()", propertyChangeListenerProxy1);
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("W5sSrl4", "c6/\"FawU;%[&Gn4Z", uRLContent0, 0.0F, (-1.0F), "c6/\"FawU;%[&Gn4Z", true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-796), homeTexture0, (-892), homeTexture0, (-796), (-2620.9412F));
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.DRAWING_MODE;
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setSkyColor(54);
      homeEnvironment0.setLightColor((-796));
      homeEnvironment0.setGroundColor((-1305));
      assertEquals(54, homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(5606, (HomeTexture) null, 5606, 3, 1.7777778F);
      homeEnvironment0.setSubpartSizeUnderLight(0.0F);
      int int0 = homeEnvironment0.getLightColor();
      assertEquals(1.7777778F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(5606, homeEnvironment0.getGroundColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(3, int0);
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(5606, homeEnvironment0.getSkyColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.6439556568820564
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      int int0 = homeEnvironment0.getCeillingLightColor();
      assertEquals(13684944, int0);
      
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "]AaX n8d#V");
      HomeEnvironment homeEnvironment1 = new HomeEnvironment(11, (HomeTexture) null, 12, (HomeTexture) null, 1, 240.0F);
      HomeEnvironment homeEnvironment2 = new HomeEnvironment((-1646), (HomeTexture) null, 9, 11, 2888.125F);
      List<Camera> list0 = homeEnvironment1.getVideoCameraPath();
      homeEnvironment1.setVideoCameraPath(list0);
      homeEnvironment1.setSkyColor(12);
      assertEquals(12, homeEnvironment1.getSkyColor());
      
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      int int1 = homeEnvironment2.getSkyColor();
      assertTrue(homeEnvironment2.isObserverCameraElevationAdjusted());
      assertEquals(2888.125F, homeEnvironment2.getWallsAlpha(), 0.01F);
      assertEquals(300, homeEnvironment2.getPhotoHeight());
      assertEquals((-1646), homeEnvironment2.getGroundColor());
      assertEquals(25, homeEnvironment2.getVideoFrameRate());
      assertEquals(400, homeEnvironment2.getPhotoWidth());
      assertEquals(11, homeEnvironment2.getLightColor());
      assertEquals(320, homeEnvironment2.getVideoWidth());
      assertEquals(9, int1);
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.1341286000959614
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      ResourceURLContent resourceURLContent0 = new ResourceURLContent((URL) null, true);
      CatalogTexture catalogTexture0 = new CatalogTexture("", resourceURLContent0, (-1.0F), 1);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      CatalogTexture catalogTexture1 = new CatalogTexture("", resourceURLContent0, 1.5F, (-1217), false);
      catalogTexture0.compareTo(catalogTexture1);
      CatalogTexture catalogTexture2 = new CatalogTexture("", "", resourceURLContent0, 1, (-1784.3F), "", true);
      HomeTexture homeTexture1 = new HomeTexture(homeTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-3071), homeTexture1, (-3151), 1, (-625.26996F));
      homeEnvironment0.setGroundTexture((HomeTexture) null);
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.getGroundTexture();
      homeEnvironment0.setAllLevelsVisible(true);
      assertTrue(homeEnvironment0.isAllLevelsVisible());
  }
}
