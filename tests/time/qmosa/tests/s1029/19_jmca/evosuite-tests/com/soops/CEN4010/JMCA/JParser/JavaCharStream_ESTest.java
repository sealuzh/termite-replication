/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 11:53:13 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JavaCharStream_ESTest extends JavaCharStream_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StringReader stringReader0 = new StringReader("DUat~)");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 74, 3278, 1);
      StringReader stringReader1 = new StringReader("AC!XaK1#pLRl~{xA|3");
      StringReader stringReader2 = new StringReader("AC!XaK1#pLRl~{xA|3");
      javaCharStream0.ReInit((Reader) stringReader0, 0, (-329), 344);
      javaCharStream0.FillBuff();
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      try { 
        JavaCharStream.hexval('N');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.2961408970315507
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("DUat~)");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)115;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArray0[1] = (byte) (-25);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 4096, 4096);
      byteArrayInputStream0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      int int0 = javaCharStream0.getBeginColumn();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(1, int0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.6619395666756522
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String string0 = "DUat~";
      StringReader stringReader0 = new StringReader("DUat~");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 0, 1);
      StringReader stringReader1 = new StringReader("jq&KWiynber)L|GML");
      javaCharStream0.bufpos = 344;
      javaCharStream0.ReInit((Reader) stringReader1, 0, 3558, 0);
      try { 
        JavaCharStream.hexval('G');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.70157782862124
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StringReader stringReader0 = new StringReader("DUat~)");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 0, 1);
      StringReader stringReader1 = new StringReader("jq&KWiynber)L|GML");
      javaCharStream0.bufpos = 344;
      javaCharStream0.ReInit((Reader) stringReader1, 0, 3558, 0);
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      javaCharStream0.GetSuffix(10);
      try { 
        JavaCharStream.hexval('@');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0752415214617106
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String string0 = "jq&KWiynber)L|GML";
      StringReader stringReader0 = new StringReader("jq&KWiynber)L|GML");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      int int0 = (-2982);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0);
      javaCharStream0.adjustBeginLineColumn(2116, (-2982));
      int int1 = 2116;
      javaCharStream0.adjustBeginLineColumn(2116, 298);
      try { 
        JavaCharStream.hexval('O');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.2090584275903393
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String string0 = "DUat~)";
      StringReader stringReader0 = new StringReader("DUat~)");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 0, 1);
      int int0 = 2520;
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 4073, 1, 2520);
      javaCharStream0.ReadByte();
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1), 4073);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream2 = new JavaCharStream(bufferedInputStream0, (-1), (-1), 11);
      // Undeclared exception!
      try { 
        javaCharStream2.BeginToken();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.2649038699401722
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StringReader stringReader0 = new StringReader("DUat~)");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 74, 3278, 1);
      StringReader stringReader1 = new StringReader("AC!XaK1#pLRl~{xA|3");
      StringReader stringReader2 = new StringReader("AC!XaK1#pLRl~{xA|3");
      javaCharStream0.ReInit((Reader) stringReader0, 0, (-329), 344);
      javaCharStream0.BeginToken();
      javaCharStream0.ReadByte();
      int int0 = javaCharStream0.getEndLine();
      assertEquals((-329), javaCharStream0.getBeginColumn());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StringReader stringReader0 = new StringReader("DUat~)");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      int int0 = 1;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 1, 0);
      String string0 = "]";
      int int1 = (-142);
      // Undeclared exception!
      try { 
        javaCharStream0.adjustBeginLineColumn(0, 9);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.3342185879961668
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StringReader stringReader0 = new StringReader("jq&KWiynber)L|GML");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.inputStream = (Reader) stringReader0;
      javaCharStream0.BeginToken();
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((Reader) stringReader0, 1, 78, (-1));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.7901109064658933
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StringReader stringReader0 = new StringReader("DUat~)");
      int int0 = 1;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 0, 1);
      StringReader stringReader1 = new StringReader("jq&KWiynber)L|GML");
      int int1 = 344;
      javaCharStream0.inBuf = 344;
      javaCharStream0.adjustBeginLineColumn(73, 498);
      try { 
        JavaCharStream.hexval('P');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.1655539283246608
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StringReader stringReader0 = new StringReader("jq&KWiynber)L|GML");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0);
      javaCharStream0.adjustBeginLineColumn(2104, (-2958));
      JavaCharStream.hexval('A');
      StringReader stringReader1 = new StringReader("sUks`776aR[F\";,q%!");
      JavaCharStream javaCharStream1 = new JavaCharStream(pipedInputStream0, 10, 87, 61);
      JavaCharStream.hexval('f');
      javaCharStream0.ReInit((Reader) stringReader1, 15, 15, 89);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.047747430806016
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StringReader stringReader0 = new StringReader("jq&KWiynber)L|GML");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0);
      javaCharStream0.adjustBeginLineColumn(2104, (-2958));
      JavaCharStream.hexval('A');
      StringReader stringReader1 = new StringReader("sUks`776aR[F\";,q%!");
      JavaCharStream javaCharStream1 = new JavaCharStream(pipedInputStream0, 10, 87, 61);
      JavaCharStream.hexval('f');
      try { 
        JavaCharStream.hexval('H');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.2413474576902348
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StringReader stringReader0 = new StringReader("jq&KWiynber)L|GML");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0);
      javaCharStream0.adjustBeginLineColumn(2104, (-2958));
      JavaCharStream.hexval('A');
      StringReader stringReader1 = new StringReader("sUks`776aR[F\";,q%!");
      StringReader stringReader2 = new StringReader("'gA>5mm|]Q");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader3 = new StringReader(")7v/*d~,x@n6IVZ");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader3, 127, 127);
      StringReader stringReader4 = new StringReader("'gA>5mm|]Q");
      javaCharStream1.ReInit((Reader) stringReader3, (-2958), (-1), 127);
      assertFalse(stringReader3.equals((Object)stringReader2));
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.3121869244131958
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)117;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArray0[1] = (byte) (-25);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byteArray0[2] = (byte)31;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(bufferedInputStream0, bufferedInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte) (-25), 34);
      javaCharStream0.adjustBeginLineColumn(2057, 14);
      JavaCharStream.hexval('6');
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream1 = new JavaCharStream(bufferedInputStream0);
      javaCharStream1.adjustBeginLineColumn(34, (byte)117);
      StringReader stringReader1 = new StringReader("");
      javaCharStream1.ReInit((Reader) stringReader1, (int) (byte)117, (-1719), 1381);
      javaCharStream0.GetImage();
      assertEquals(2058, javaCharStream0.getBeginLine());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StringReader stringReader0 = new StringReader("%HsLR;Z,");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-3643), (-3643));
      // Undeclared exception!
      try { 
        javaCharStream0.getEndColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.688459044259246
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      String string0 = "DUat~)";
      StringReader stringReader0 = new StringReader("DUat~)");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 1689, 1689);
      javaCharStream0.ReadByte();
      javaCharStream0.BeginToken();
      javaCharStream0.ReInit((Reader) stringReader0, (-1), 3832, 101);
      javaCharStream0.adjustBeginLineColumn(3832, 101);
      try { 
        JavaCharStream.hexval('U');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.367996235259848
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      StringReader stringReader0 = new StringReader("DUat~)");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 0, 1);
      StringReader stringReader1 = new StringReader("jq&KWiynber)L|GML");
      javaCharStream0.inBuf = 344;
      javaCharStream0.readChar();
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.adjustBeginLineColumn(1, 344);
      javaCharStream0.backup(63);
      javaCharStream0.ReadByte();
      javaCharStream0.AdjustBuffSize();
      assertEquals(1986, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.469770230921831
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      StringReader stringReader0 = new StringReader("DUat~)");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 0, 1);
      StringReader stringReader1 = new StringReader("jq&KWiynber)L|GML");
      javaCharStream0.inBuf = 344;
      javaCharStream0.readChar();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pipedInputStream0, pipedInputStream0);
      sequenceInputStream0.available();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(sequenceInputStream0, sequenceInputStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(pipedInputStream0);
      javaCharStream0.GetImage();
      javaCharStream1.AdjustBuffSize();
      javaCharStream0.readChar();
      javaCharStream1.ReInit((Reader) stringReader0, 1, (-4068), 1025);
      // Undeclared exception!
      try { 
        javaCharStream1.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.5168760810714366
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      pipedInputStream0.skip((-1138L));
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)8;
      byteArray0[1] = (byte) (-104);
      byteArray0[2] = (byte) (-117);
      pipedOutputStream0.close();
      pipedInputStream0.read();
      pipedOutputStream0.flush();
      byteArray0[3] = (byte)30;
      byteArray0[4] = (byte)1;
      pipedOutputStream0.flush();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.read(byteArray0, (int) (byte)1, 1);
      StringReader stringReader0 = new StringReader("^zyRB");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 99, (byte)1);
      javaCharStream0.ReInit((InputStream) pipedInputStream0);
      javaCharStream0.Done();
      JavaCharStream javaCharStream1 = new JavaCharStream(pipedInputStream0, (-508), 61, 521);
      // Undeclared exception!
      try { 
        javaCharStream0.getEndLine();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.5259685919045611
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      String string0 = "DUat~)";
      StringReader stringReader0 = new StringReader("DUat~)");
      int int0 = 1;
      int int1 = 1;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 4073, 1);
      javaCharStream0.ReadByte();
      javaCharStream0.BeginToken();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      int int2 = 958;
      javaCharStream1.ReInit((Reader) stringReader0, 0, 958, 958);
      try { 
        JavaCharStream.hexval('P');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.5708505634534706
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.available();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(sequenceInputStream0, sequenceInputStream0);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)95;
      byteArray0[1] = (byte)95;
      byteArray0[2] = (byte)95;
      byteArray0[3] = (byte)95;
      byteArray0[4] = (byte)95;
      byteArray0[5] = (byte)95;
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0);
      SequenceInputStream sequenceInputStream2 = new SequenceInputStream(sequenceInputStream1, sequenceInputStream0);
      sequenceInputStream0.available();
      SequenceInputStream sequenceInputStream3 = new SequenceInputStream(sequenceInputStream1, sequenceInputStream2);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream2);
      String string0 = javaCharStream0.GetImage();
      javaCharStream0.AdjustBuffSize();
      StringReader stringReader0 = new StringReader(string0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-1860), (byte)95, 0);
      javaCharStream1.readChar();
      javaCharStream1.ReInit((Reader) stringReader0, 3100, (-1015), 100);
      assertEquals(0, javaCharStream1.getBeginLine());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.049821369905457
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      StringReader stringReader0 = new StringReader("DUat~)");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 0, 1);
      StringReader stringReader1 = new StringReader("jq&KWiynber)L|GML");
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)70;
      byteArray0[8] = (byte)7;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, 101);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(bufferedInputStream0, (-2464), (-3671));
      javaCharStream1.readChar();
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals((-3671), javaCharStream1.getBeginColumn());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.414111176622215
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      StringReader stringReader0 = new StringReader(";>R'3(S.g$9P[]/s,S");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 352, 0, 0);
      StringReader stringReader1 = new StringReader("h,");
      javaCharStream0.readChar();
      javaCharStream0.ExpandBuff(true);
      javaCharStream0.adjustBeginLineColumn(344, 1);
      javaCharStream0.backup(1127);
      char char0 = javaCharStream0.ReadByte();
      assertEquals(921, javaCharStream0.bufpos);
      assertEquals('>', char0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.3342185879961668
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      StringReader stringReader0 = new StringReader("DUat~)");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 1, 0);
      javaCharStream0.BeginToken();
      javaCharStream0.GetSuffix(0);
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream((-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.676983126598717
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      stringReader0.read();
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 1, 1);
      javaCharStream0.ReadByte();
      javaCharStream0.BeginToken();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      javaCharStream0.ReadByte();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      javaCharStream0.ReInit((Reader) stringReader0, (-1), 0, 1);
      javaCharStream0.adjustBeginLineColumn(2116, 'v');
      JavaCharStream.hexval('a');
      StringReader stringReader1 = new StringReader("");
      try { 
        JavaCharStream.hexval('l');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.1766453509367873
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      StringReader stringReader0 = new StringReader("2h,u");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      assertEquals(1, javaCharStream0.getBeginLine());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.6478320186811557
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      StringReader stringReader0 = new StringReader("DUat~)");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 0, 1);
      StringReader stringReader1 = new StringReader("jq&KWiynber)L|GML");
      javaCharStream0.bufpos = 344;
      javaCharStream0.ReInit((Reader) stringReader1, 0, 3558, 0);
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      try { 
        JavaCharStream.hexval('=');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.6176124258467435
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      StringReader stringReader0 = new StringReader("DUat~)");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 0, 1);
      StringReader stringReader1 = new StringReader("jq&KWiynber)L|GML");
      javaCharStream0.bufpos = 344;
      javaCharStream0.ReInit((Reader) stringReader1, 0, 3558, 0);
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      javaCharStream0.GetSuffix(10);
      javaCharStream0.adjustBeginLineColumn(2, 0);
      assertEquals(2, javaCharStream0.getBeginLine());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.7741057932992024
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      StringReader stringReader0 = new StringReader("DUat~)");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 0, 1);
      StringReader stringReader1 = new StringReader("jq&Kiynber)L|GML");
      javaCharStream0.bufpos = 344;
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 345
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte) (-22);
      byteArray0[2] = (byte) (-26);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-3304), 7);
      // Undeclared exception!
      try { 
        javaCharStream0.getEndLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.298647162695711
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      StringReader stringReader0 = new StringReader("jq&KWiynber)L|GML");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      javaCharStream0.UpdateLineColumn('v');
      int int0 = javaCharStream0.getLine();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(1, int0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.0676032882216056
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 765, (-1208));
      javaCharStream0.adjustBeginLineColumn((-1208), 786);
      stringReader0.mark(0);
      StringReader stringReader1 = null;
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream((PipedOutputStream) null, (-45));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.56038152877359
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      stringReader0.read();
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 1, 1);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      assertEquals(0, javaCharStream0.bufpos);
      
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      javaCharStream1.column = 1222;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      javaCharStream0.ReInit((Reader) stringReader0, (int) 'a', (-632), 3457);
      javaCharStream1.adjustBeginLineColumn(1222, 3457);
      assertEquals(3457, javaCharStream1.getBeginColumn());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.261807894707974
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      StringReader stringReader0 = new StringReader("DUat~)");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 0, 1);
      StringReader stringReader1 = new StringReader("jq&KWiynber)L|GML");
      javaCharStream0.ReInit((Reader) stringReader0, 1, 77, 1);
      javaCharStream0.BeginToken();
      // Undeclared exception!
      try { 
        javaCharStream0.GetSuffix(3558);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.2918393306539664
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      stringReader0.read();
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 1, 1);
      javaCharStream0.ReadByte();
      javaCharStream0.BeginToken();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      javaCharStream1.column = 1222;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      javaCharStream0.ReInit((Reader) stringReader0, (-1), 1222, 1);
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0);
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.123178458595985
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      StringReader stringReader0 = new StringReader("DUat~)");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 74, 3278, 1);
      StringReader stringReader1 = new StringReader("AC!XaK1#pLRl~{xA|3");
      StringReader stringReader2 = new StringReader("AC!XaK1#pLRl~{xA|3");
      javaCharStream0.ReInit((Reader) stringReader0, 0, (-329), 344);
      javaCharStream0.BeginToken();
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      StringReader stringReader0 = new StringReader("DUat~)");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 1, 1);
      StringReader stringReader1 = new StringReader("jq&KWiynber)L|GML");
      javaCharStream0.inBuf = 344;
      StringReader stringReader2 = new StringReader("DUat~)");
      javaCharStream0.ReInit((Reader) stringReader2, 0, 1, 0);
      // Undeclared exception!
      try { 
        javaCharStream0.getBeginLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.4434606788422255
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("DUat~)");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)115;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArray0[1] = (byte) (-25);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1567), (-1));
      javaCharStream0.BeginToken();
      javaCharStream0.GetSuffix(12);
      char char0 = '(';
      try { 
        JavaCharStream.hexval('(');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.1797413261689855
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      StringReader stringReader0 = new StringReader("DUat~)");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 0, 1);
      StringReader stringReader1 = new StringReader("jq&KWiynber)L|GML");
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)70;
      byteArray0[8] = (byte)7;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, 101);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(bufferedInputStream0, (-2464), (-3671));
      javaCharStream1.BeginToken();
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals((-2464), javaCharStream1.getBeginLine());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.0887237151002338
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      pipedInputStream0.skip((-1138L));
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)8;
      byteArray0[1] = (byte) (-104);
      byteArray0[2] = (byte) (-117);
      pipedOutputStream0.close();
      pipedInputStream0.read();
      pipedOutputStream0.flush();
      byteArray0[3] = (byte)30;
      byteArray0[4] = (byte)1;
      pipedOutputStream0.flush();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.read(byteArray0, (int) (byte)1, 1);
      StringReader stringReader0 = new StringReader("^zyRB");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 99, (byte)1);
      javaCharStream0.ReInit((InputStream) pipedInputStream0);
      javaCharStream0.Done();
      JavaCharStream javaCharStream1 = new JavaCharStream(pipedInputStream0, (-508), 61, 521);
      try { 
        JavaCharStream.hexval('L');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("DUat~)");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)115;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArray0[1] = (byte) (-25);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byteArray0[2] = (byte)31;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(bufferedInputStream0, bufferedInputStream0);
      sequenceInputStream0.available();
      try { 
        JavaCharStream.hexval('V');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-14);
      byteArray0[4] = (byte)7;
      byteArray0[5] = (byte) (-106);
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, 2048);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.ReadByte();
      assertEquals(0, byteArrayInputStream0.available());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.4060395717163217
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-110);
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte)66;
      byteArray0[4] = (byte)2;
      byteArray0[5] = (byte)51;
      byteArray0[6] = (byte)9;
      byteArray0[7] = (byte) (-12);
      byteArray0[8] = (byte)4;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      StringReader stringReader0 = new StringReader("jq&KWiynber)L|GML");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      javaCharStream0.getEndLine();
      javaCharStream0.GetSuffix((byte)66);
      assertEquals(1, javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.0287375017310743
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      int[] intArray0 = new int[4];
      intArray0[0] = (-1);
      intArray0[1] = (int) '7';
      intArray0[2] = (int) '7';
      intArray0[3] = (-1);
      javaCharStream0.bufcolumn = intArray0;
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('7');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      String string0 = "}1Ds>^~}Jjz";
      StringReader stringReader0 = new StringReader("}1Ds>^~}Jjz");
      FileSystemHandling.shouldAllThrowIOExceptions();
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 4087, 4087, 9);
      stringReader0.skip(4087);
      javaCharStream0.ReInit((Reader) stringReader0);
      stringReader0.read();
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      stringReader0.reset();
      char[] charArray0 = new char[1];
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "}1Ds>^~}Jjz");
      stringReader0.ready();
      charArray0[0] = 'Z';
      // Undeclared exception!
      try { 
        stringReader0.read(charArray0, 9, 9);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.6542933185645
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      StringReader stringReader0 = new StringReader("DUat~)");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 0, 1);
      StringReader stringReader1 = new StringReader("jq&KWiynber)L|GML");
      javaCharStream0.bufpos = 344;
      javaCharStream0.ReInit((Reader) stringReader1, 0, 3558, 0);
      javaCharStream0.BeginToken();
      javaCharStream0.GetSuffix(10);
      javaCharStream0.GetImage();
      int int0 = javaCharStream0.getLine();
      assertEquals(3558, javaCharStream0.getBeginColumn());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.9244892306102397
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("DUat~)");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)115;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArray0[1] = (byte) (-25);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byteArray0[2] = (byte)31;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(bufferedInputStream0, bufferedInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte) (-25), (-1));
      javaCharStream0.adjustBeginLineColumn(2057, 14);
      StringReader stringReader1 = new StringReader("");
      JavaCharStream javaCharStream1 = new JavaCharStream(bufferedInputStream0);
      StringReader stringReader2 = new StringReader("");
      javaCharStream1.getBeginColumn();
      // Undeclared exception!
      try { 
        javaCharStream1.getLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      int int0 = 5;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 5, 5);
      InputStream inputStream0 = null;
      int int1 = 11;
      javaCharStream0.inputStream = (Reader) stringReader0;
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((InputStream) null, 0, 11);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.2248830687452417
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.skip((-1887L));
      stringReader0.skip((-1887L));
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.adjustBeginLineColumn(0, 0);
      try { 
        stringReader0.mark(246);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.383461415329958
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      StringReader stringReader0 = new StringReader("DUat~)");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 0, 1);
      StringReader stringReader1 = new StringReader("jq&KWiynber)L|GML");
      javaCharStream0.inBuf = 344;
      StringReader stringReader2 = new StringReader("DUat~)");
      javaCharStream0.ReInit((Reader) stringReader2, 0, 0, 0);
      javaCharStream0.BeginToken();
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.157280995708096
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte) (-14);
      byteArray0[2] = (byte)21;
      byteArray0[3] = (byte) (-106);
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)70;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)7;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1323, (-2028));
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-2694), 3028);
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      stringReader0.read();
      StringReader stringReader1 = new StringReader("");
      char[] charArray0 = new char[9];
      charArray0[0] = 'C';
      charArray0[1] = 'm';
      charArray0[2] = '>';
      charArray0[3] = 'I';
      charArray0[4] = '2';
      charArray0[5] = 'y';
      charArray0[6] = 'c';
      charArray0[7] = '9';
      charArray0[8] = 'l';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1290, 1);
      assertEquals((-1), javaCharStream0.bufpos);
      
      char[] charArray1 = javaCharStream0.GetSuffix(63);
      assertEquals(63, charArray1.length);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      pipedInputStream0.skip((-1138L));
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)8;
      byteArray0[1] = (byte) (-104);
      byteArray0[2] = (byte) (-117);
      pipedOutputStream0.close();
      pipedInputStream0.read();
      pipedOutputStream0.flush();
      byteArray0[3] = (byte)30;
      byteArray0[4] = (byte)1;
      pipedOutputStream0.flush();
      pipedInputStream0.read(byteArray0);
      pipedInputStream0.mark(1489);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0);
      javaCharStream0.Done();
      javaCharStream0.ReInit((InputStream) pipedInputStream0, 1489, (int) (byte) (-117));
      // Undeclared exception!
      try { 
        javaCharStream0.GetSuffix((byte) (-117));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.1944064129383247
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.available();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(sequenceInputStream0, sequenceInputStream0);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)95;
      byteArray0[1] = (byte)95;
      byteArray0[2] = (byte)95;
      Reader reader0 = null;
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.6846624439597826
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      stringReader0.read();
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 1, 1);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.ReadByte();
      javaCharStream0.BeginToken();
      char[] charArray0 = new char[3];
      charArray0[0] = 'a';
      charArray0[1] = 'v';
      charArray0[2] = 'a';
      stringReader0.read(charArray0);
      javaCharStream0.ReInit((Reader) stringReader0, 0, 1, 1679);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)68;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.read(byteArray0, 0, 1);
      javaCharStream0.bufpos = 1679;
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0);
      javaCharStream0.Done();
      // Undeclared exception!
      try { 
        javaCharStream0.AdjustBuffSize();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.1797413261689855
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      StringReader stringReader0 = new StringReader("DUat~)");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 0, 1);
      StringReader stringReader1 = new StringReader("jq&KWiynber)L|GML");
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)0;
      byteArray0[0] = (byte)70;
      byteArray0[8] = (byte)7;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, 101);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(bufferedInputStream0, (byte)0, (-3671));
      char char0 = javaCharStream1.BeginToken();
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals('F', char0);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("DUat~)");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)115;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArray0[1] = (byte) (-25);
      byteArray0[2] = (byte)31;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (byte)115, (byte)31);
      byteArrayInputStream1.mark(0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      char char0 = javaCharStream0.ReadByte();
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals('s', char0);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.767591061536735
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("DUat~)");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)115;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 60, 851);
      javaCharStream0.readChar();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pipedInputStream0, pipedInputStream0);
      sequenceInputStream0.available();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(pipedInputStream0, sequenceInputStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(sequenceInputStream1);
      JavaCharStream javaCharStream2 = new JavaCharStream(pipedInputStream0);
      javaCharStream2.GetImage();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.readChar();
      assertEquals(851, javaCharStream0.getBeginColumn());
      
      JavaCharStream javaCharStream3 = new JavaCharStream(sequenceInputStream0, 76, (-1), (byte)115);
      javaCharStream3.ReInit((Reader) stringReader0, (int) (byte)115, (-1446), 2);
      javaCharStream2.ExpandBuff(false);
      javaCharStream2.getBeginLine();
      assertEquals((-1), javaCharStream2.bufpos);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.296140897031551
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      StringReader stringReader0 = new StringReader("DUat~)");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 74, 3278, 1);
      StringReader stringReader1 = new StringReader("AC!XaK1#pLRl~{xA|3");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)95;
      byteArray0[1] = (byte)95;
      byteArray0[2] = (byte)36;
      byteArray0[3] = (byte) (-95);
      byteArray0[4] = (byte)92;
      byteArray0[5] = (byte)95;
      byteArray0[6] = (byte)95;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 72, 1901);
      byteArrayInputStream0.read();
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      javaCharStream0.ExpandBuff(true);
      int int0 = javaCharStream0.getBeginColumn();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(3278, int0);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.5802615437584313
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.available();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(sequenceInputStream0, sequenceInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream1);
      javaCharStream0.GetImage();
      javaCharStream0.AdjustBuffSize();
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      StringReader stringReader0 = new StringReader("jq&KWiynber)L|GML");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 102, 1736);
      char[] charArray0 = new char[6];
      charArray0[0] = 'n';
      charArray0[1] = '(';
      charArray0[2] = ':';
      charArray0[3] = 'x';
      charArray0[4] = 'j';
      charArray0[5] = 'W';
      javaCharStream0.nextCharBuf = charArray0;
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.ReInit((Reader) stringReader0, 0, 0);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 520, 520);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      javaCharStream0.ReInit((InputStream) pipedInputStream0, 0, (-935), 0);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 64
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null, 2145, 13, 2145);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=0.42165311553335094
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      JavaCharStream.hexval('9');
      boolean boolean0 = JavaCharStream.staticFlag;
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      int int0 = JavaCharStream.hexval('F');
      assertEquals(15, int0);
      
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)95;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)70, (-1625));
      int int1 = byteArrayInputStream0.read();
      assertFalse(int1 == int0);
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)19;
      byteArray0[1] = (byte) (-72);
      byteArray0[2] = (byte)10;
      byteArray0[3] = (byte) (-18);
      byteArray0[4] = (byte)100;
      byteArray0[5] = (byte)94;
      byteArray0[6] = (byte)39;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      StringReader stringReader0 = new StringReader("UTej#?y=[#{d:m~A\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2653, 78, (byte)100);
      javaCharStream0.getBeginColumn();
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 68
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      StringReader stringReader0 = new StringReader("s4_;LygHN");
      StringReader stringReader1 = new StringReader("Invalid escape character at line ");
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte)93;
      byteArray0[4] = (byte)54;
      byteArray0[5] = (byte)110;
      byteArray0[6] = (byte) (-110);
      byteArray0[7] = (byte)96;
      byteArray0[8] = (byte)1;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream(stringReader1, (-1059), 1, (-921));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.786724494755577
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      StringReader stringReader0 = new StringReader("DUat~)");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 0, 1);
      javaCharStream0.bufpos = 344;
      JavaCharStream javaCharStream1 = new JavaCharStream((Reader) null, 344, 344);
      javaCharStream1.Done();
      StringReader stringReader1 = new StringReader("Y|&II");
      // Undeclared exception!
      try { 
        javaCharStream1.ReInit((Reader) stringReader1, 0, 0, (-1));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      File file0 = MockFile.createTempFile("x@A", "x@A", (File) mockFile0);
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream0, 0, 0);
      // Undeclared exception!
      try { 
        javaCharStream0.getColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.3128868859883
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      pipedInputStream0.skip((-1138L));
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)8;
      byteArray0[1] = (byte) (-104);
      byteArray0[2] = (byte) (-117);
      pipedOutputStream0.close();
      pipedInputStream0.read();
      pipedOutputStream0.flush();
      byteArray0[3] = (byte)30;
      byteArray0[4] = (byte)1;
      pipedOutputStream0.flush();
      byte[] byteArray1 = new byte[9];
      byteArray1[0] = (byte) (-117);
      byteArray1[1] = (byte)1;
      byteArray1[2] = (byte)8;
      byteArray1[3] = (byte)1;
      byteArray1[4] = (byte)70;
      byteArray1[5] = (byte)30;
      byteArray1[6] = (byte)1;
      byteArray1[7] = (byte)8;
      byteArray1[8] = (byte) (-117);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray1, (byte)30, 11);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedInputStream0, (-2580), (byte)86);
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 1);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 1241, 1241, (-738));
      javaCharStream0.backup(1241);
      assertEquals(2854, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      javaCharStream0.backup(1);
      assertEquals(4094, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.138526235860879
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.available();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(sequenceInputStream0, sequenceInputStream0);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)95;
      byteArray0[1] = (byte)95;
      byteArray0[2] = (byte)95;
      byteArray0[3] = (byte)95;
      byteArray0[4] = (byte)95;
      byteArray0[5] = (byte)95;
      byteArray0[6] = (byte)95;
      byteArray0[7] = (byte)95;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)95, (byte)95);
      byteArrayInputStream0.read();
      byteArrayInputStream0.mark((-1));
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      StringReader stringReader0 = new StringReader("DUat~)");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 0, 1);
      StringReader stringReader1 = new StringReader("jq&KWiynber)L|GML");
      javaCharStream0.inBuf = 344;
      javaCharStream0.ReInit((Reader) stringReader1, 1071, 2053, 4);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      char[] charArray0 = new char[9];
      charArray0[0] = 'Y';
      charArray0[1] = 'z';
      charArray0[2] = 'F';
      charArray0[3] = '+';
      charArray0[4] = 'n';
      charArray0[5] = '4';
      charArray0[6] = '7';
      charArray0[7] = 'a';
      charArray0[8] = '.';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.column = 10;
      javaCharStream0.Done();
      // Undeclared exception!
      try { 
        javaCharStream0.getBeginLine();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.6868977693384444
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader1 = new StringReader("^'vu\":Q6]HIKko");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 246);
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }
}
