/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 11:19:43 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import com.soops.CEN4010.JMCA.JParser.JavaParser;
import com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager;
import com.soops.CEN4010.JMCA.JParser.Node;
import com.soops.CEN4010.JMCA.JParser.SimpleNode;
import java.io.FileDescriptor;
import java.io.FileNotFoundException;
import java.io.InputStream;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.io.StringWriter;
import java.nio.CharBuffer;
import java.util.ArrayList;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimpleNode_ESTest extends SimpleNode_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0843488460674409
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(47);
      StringWriter stringWriter0 = new StringWriter(736);
      StringWriter stringWriter1 = new StringWriter();
      String string0 = "1";
      simpleNode0.setIdentifier("1");
      String string1 = "/'^";
      StringReader stringReader0 = new StringReader("/'^");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      String string2 = "";
      SimpleNode simpleNode1 = new SimpleNode(736);
      simpleNode1.dump("':7&Fe'K(qY89uE-0Ft", stringWriter0);
      simpleNode0.setIdentifier("&&");
      StringWriter stringWriter2 = stringWriter1.append((CharSequence) "&&");
      simpleNode0.dump("&&", stringWriter1);
      int int0 = 1;
      stringWriter0.write(736);
      simpleNode0.setIdentifier("<=");
      simpleNode1.dump("\"long\"", stringWriter2);
      // Undeclared exception!
      try { 
        simpleNode1.toString("/'^");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 736
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.1676399309492576
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(67);
      StringWriter stringWriter0 = new StringWriter(67);
      StringWriter stringWriter1 = new StringWriter();
      StringWriter stringWriter2 = stringWriter0.append((CharSequence) "TI");
      StringWriter stringWriter3 = stringWriter1.append((CharSequence) "TI");
      StringWriter stringWriter4 = new StringWriter();
      StringWriter stringWriter5 = stringWriter0.append((CharSequence) "TI");
      simpleNode0.dump("com.soops.CEN4010.JMCA.JParser.SimpleNode", stringWriter4);
      simpleNode0.setIdentifier("com.soops.CEN4010.JMCA.JParser.SimpleNode");
      stringWriter1.append((CharSequence) " : ");
      simpleNode0.dump(" : ", stringWriter3);
      stringWriter2.write(1);
      simpleNode0.setIdentifier("<=");
      simpleNode0.dump("TI", stringWriter3);
      simpleNode0.toString("TI");
      stringWriter1.write(57);
      simpleNode0.setIdentifier("com.soops.CEN4010.JMCA.JParser.SimpleNode");
      simpleNode0.dump("9 ]5", stringWriter3);
      CharBuffer.wrap((CharSequence) "ForInit", 1, 1);
      simpleNode0.dump(" : ", stringWriter5);
      assertEquals("TITI\u0001<ArgumentList>\n  <identifier>com.soops.CEN4010.JMCA.JParser.SimpleNode</identifier>\n  <identifier>*le</identifier>\n  <identifier>com.soops.CEN4010.JMCA.JParser.SimpleNode</identifier>\n</ArgumentList>\n", stringWriter5.toString());
      assertEquals("TITI\u0001<ArgumentList>\n  <identifier>com.soops.CEN4010.JMCA.JParser.SimpleNode</identifier>\n  <identifier>*le</identifier>\n  <identifier>com.soops.CEN4010.JMCA.JParser.SimpleNode</identifier>\n</ArgumentList>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.8249506629220404
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(57);
      StringWriter stringWriter0 = new StringWriter(2587);
      Node node0 = simpleNode0.parent;
      simpleNode0.setIdentifier("<");
      simpleNode0.dump("moLu", stringWriter0);
      SimpleNode simpleNode1 = new SimpleNode(2587);
      StringReader stringReader0 = new StringReader("\"int\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-570), (-1484857389), 1376);
      stringReader0.close();
      String string0 = null;
      MockFile mockFile0 = new MockFile((String) null, "\"int\"");
      mockFile0.setExecutable(false, false);
      mockFile0.toURL();
      stringReader0.close();
      MockFile mockFile1 = null;
      try {
        mockFile1 = new MockFile("synchronized", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFile", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.8120939218445867
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(47);
      StringWriter stringWriter0 = new StringWriter(717);
      StringWriter stringWriter1 = new StringWriter();
      simpleNode0.setIdentifier(">");
      StringReader stringReader0 = new StringReader("'^");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      String string0 = "";
      simpleNode0.setIdentifier("[");
      simpleNode0.dump("", stringWriter0);
      StringReader stringReader1 = new StringReader("");
      MockFile mockFile0 = new MockFile(">");
      stringReader0.read();
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream(mockFile0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.2438763484531088
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(57);
      int int0 = 2587;
      StringWriter stringWriter0 = new StringWriter(2587);
      Node node0 = simpleNode0.parent;
      simpleNode0.jjtGetNumChildren();
      StringWriter stringWriter1 = new StringWriter(0);
      simpleNode0.jjtAddChild((Node) null, 0);
      simpleNode0.setIdentifier("<<");
      simpleNode0.dump("\"int\"", stringWriter0);
      simpleNode0.jjtGetChild(0);
      int int1 = 21;
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(21);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 21
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.670955110805818
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(57);
      Node node0 = simpleNode0.parent;
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtGetNumChildren();
      StringWriter stringWriter0 = new StringWriter(57);
      StringWriter stringWriter1 = stringWriter0.append('0');
      JavaParser javaParser0 = new JavaParser(";");
      simpleNode0.jjtAddChild((Node) null, 220);
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 327);
      SimpleNode simpleNode2 = new SimpleNode(0);
      simpleNode1.jjtAddChild(simpleNode2, 57);
      simpleNode2.jjtGetNumChildren();
      StringWriter stringWriter2 = new StringWriter();
      simpleNode0.setIdentifier(";");
      stringWriter1.close();
      simpleNode0.dump("OE@GV2,*\"F22yJwpu:l", stringWriter0);
      simpleNode1.jjtGetChild(0);
      StringWriter stringWriter3 = new StringWriter();
      // Undeclared exception!
      try { 
        simpleNode1.dump("*gt", stringWriter3);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.9470906041077425
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(57);
      StringWriter stringWriter0 = new StringWriter(57);
      StringWriter stringWriter1 = new StringWriter();
      stringWriter1.append((CharSequence) "</");
      char[] charArray0 = new char[4];
      charArray0[1] = '@';
      StringWriter stringWriter2 = new StringWriter();
      StringWriter stringWriter3 = stringWriter2.append((CharSequence) "</");
      simpleNode0.dump(" : ", stringWriter1);
      simpleNode0.setIdentifier("</");
      simpleNode0.dump(" : ", stringWriter3);
      simpleNode0.setIdentifier("m.%-$Zu/~");
      simpleNode0.dump(">>", stringWriter1);
      simpleNode0.setIdentifier(">>");
      simpleNode0.dump(">>", stringWriter1);
      simpleNode0.dump("StatementExpressionList", stringWriter2);
      int int0 = 0;
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(2709);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.30835984793397
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = new StringBuffer("default");
      StringBuffer stringBuffer1 = new StringBuffer(stringBuffer0);
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) stringBuffer1);
      stringWriter1.write((String) null);
      JavaParser javaParser0 = new JavaParser((String) null);
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, (-2536));
      simpleNode0.jjtAddChild(simpleNode1, 2599);
      StringWriter stringWriter2 = stringWriter0.append('V');
      stringWriter2.close();
      simpleNode0.jjtGetChild(2599);
      simpleNode0.dump("default", stringWriter2);
      SimpleNode simpleNode2 = new SimpleNode(2593);
      assertFalse(simpleNode2.equals((Object)simpleNode0));
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.4520460854882322
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(57);
      StringWriter stringWriter0 = new StringWriter(2587);
      Node node0 = simpleNode0.parent;
      simpleNode0.jjtGetNumChildren();
      StringWriter stringWriter1 = new StringWriter(0);
      simpleNode0.jjtAddChild((Node) null, 0);
      simpleNode0.setIdentifier("<<");
      simpleNode0.id = 46;
      simpleNode0.dump("\"int\"", stringWriter0);
      simpleNode0.jjtGetChild(0);
      simpleNode0.jjtGetNumChildren();
      stringWriter0.append((CharSequence) "<<");
      simpleNode0.jjtAddChild((Node) null, 1);
      simpleNode0.dump((String) null, stringWriter0);
      assertEquals("<EqualityExpression>\n  <identifier>*lshft</identifier>\n</EqualityExpression>\n<<<EqualityExpression>\n  <identifier>*lshft</identifier>\n</EqualityExpression>\n", stringWriter0.toString());
      assertEquals(2, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.3841657008724464
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(57);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = (Node) simpleNode0;
      Node node0 = simpleNode0.parent;
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtGetNumChildren();
      StringWriter stringWriter0 = new StringWriter(43);
      StringWriter stringWriter1 = stringWriter0.append('(');
      simpleNode0.jjtAddChild(nodeArray0[0], 57);
      String string0 = ";";
      // Undeclared exception!
      simpleNode0.dump(";", stringWriter1);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.4826636703644378
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int int0 = 57;
      SimpleNode simpleNode0 = new SimpleNode(57);
      StringWriter stringWriter0 = new StringWriter(2587);
      Node node0 = simpleNode0.parent;
      simpleNode0.jjtGetNumChildren();
      Node[] nodeArray0 = new Node[8];
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[1] = null;
      nodeArray0[2] = (Node) simpleNode0;
      nodeArray0[3] = null;
      nodeArray0[4] = null;
      nodeArray0[5] = (Node) simpleNode0;
      nodeArray0[6] = null;
      nodeArray0[7] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      StringWriter stringWriter1 = new StringWriter(0);
      simpleNode0.jjtAddChild((Node) null, 0);
      simpleNode0.dump("<<", stringWriter0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(57);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      byte[] byteArray0 = new byte[4];
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = (Node) simpleNode0;
      StringReader stringReader0 = new StringReader("*lshft");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      nodeArray0[1] = (Node) simpleNode0;
      nodeArray0[2] = (Node) simpleNode0;
      nodeArray0[3] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      byteArray0[0] = (byte) (-22);
      byteArray0[1] = (byte) (-39);
      byteArray0[2] = (byte)54;
      byteArray0[3] = (byte)1;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node0 = simpleNode0.parent;
      simpleNode0.jjtAddChild((Node) null, 84);
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(85, int0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.786724494755577
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(57);
      assertEquals(0, simpleNode0.jjtGetNumChildren());
      
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = (Node) simpleNode0;
      StringReader stringReader0 = new StringReader("*lshft");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 57);
      nodeArray0[1] = (Node) simpleNode1;
      nodeArray0[2] = (Node) simpleNode0;
      nodeArray0[3] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      Node node0 = simpleNode0.parent;
      simpleNode0.jjtAddChild(nodeArray0[0], 1);
      int int0 = simpleNode1.jjtGetNumChildren();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = new StringBuffer("default");
      StringBuffer stringBuffer1 = new StringBuffer(stringBuffer0);
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) stringBuffer1);
      StringWriter stringWriter2 = stringWriter1.append('?');
      StringWriter stringWriter3 = stringWriter2.append((CharSequence) stringBuffer0);
      stringWriter1.write((String) null);
      stringWriter3.append((CharSequence) stringBuffer0);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte) (-11);
      byteArray0[2] = (byte)54;
      byteArray0[3] = (byte) (-39);
      byteArray0[4] = (byte)1;
      byteArray0[5] = (byte)54;
      byteArray0[6] = (byte) (-1);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node0 = simpleNode0.parent;
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild((Node) null, (byte) (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.1832999389553112
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(57);
      StringWriter stringWriter0 = new StringWriter(57);
      StringWriter stringWriter1 = new StringWriter();
      StringWriter stringWriter2 = stringWriter1.append((CharSequence) "TI");
      stringWriter2.append((CharSequence) "TI");
      char[] charArray0 = new char[4];
      charArray0[1] = '@';
      StringWriter stringWriter3 = new StringWriter();
      StringWriter stringWriter4 = stringWriter3.append((CharSequence) "TI");
      simpleNode0.dump(" : ", stringWriter1);
      simpleNode0.setIdentifier("TI");
      stringWriter2.append((CharSequence) " : ");
      simpleNode0.dump(" : ", stringWriter4);
      stringWriter4.write(57);
      simpleNode0.setIdentifier("TI");
      String string0 = null;
      simpleNode0.dump((String) null, stringWriter2);
      simpleNode0.toString("w*#\"snEC)deF^L\"M");
      stringWriter1.write(57);
      String string1 = "+=";
      simpleNode0.setIdentifier((String) null);
      // Undeclared exception!
      try { 
        simpleNode0.dump("TI", stringWriter2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(2005);
      Node[] nodeArray0 = new Node[7];
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[1] = (Node) simpleNode0;
      nodeArray0[2] = (Node) simpleNode0;
      nodeArray0[3] = (Node) simpleNode0;
      nodeArray0[4] = (Node) simpleNode0;
      Node node0 = simpleNode0.parent;
      nodeArray0[5] = null;
      nodeArray0[6] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      simpleNode0.jjtAddChild(nodeArray0[4], 2005);
      assertEquals(2006, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.5511620836589715
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(57);
      StringWriter stringWriter0 = new StringWriter(57);
      StringWriter stringWriter1 = new StringWriter(57);
      Node node0 = simpleNode0.parent;
      simpleNode0.jjtGetNumChildren();
      stringWriter1.close();
      simpleNode0.jjtGetNumChildren();
      StringWriter stringWriter2 = new StringWriter(1);
      StringWriter stringWriter3 = new StringWriter(57);
      simpleNode0.jjtAddChild((Node) null, 86);
      stringWriter1.close();
      StringWriter stringWriter4 = new StringWriter();
      simpleNode0.dump((String) null, stringWriter4);
      simpleNode0.jjtGetChild(86);
      simpleNode0.dump((String) null, stringWriter0);
      assertEquals("<PostfixExpression></PostfixExpression>\n", stringWriter0.toString());
      
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(87, int0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.4705441679528448
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      String string0 = "";
      StringReader stringReader0 = new StringReader("");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 9);
      String string1 = "";
      simpleNode0.setIdentifier("");
      simpleNode0.dump("", stringWriter0);
      StringReader stringReader1 = new StringReader("");
      stringReader1.mark(9);
      try { 
        javaParser0.PrimaryExpression();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.3884460209294542
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      int int0 = 9;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = new StringBuffer(9);
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) stringBuffer0);
      StringReader stringReader0 = new StringReader("");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 9);
      simpleNode0.dump("", stringWriter1);
      simpleNode0.setIdentifier("");
      simpleNode0.dump("", stringWriter0);
      simpleNode0.toString();
      StringReader stringReader1 = new StringReader("N@-m$6K");
      int int1 = (-1458);
      MockFile mockFile0 = new MockFile("");
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream(mockFile0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.1832999389553112
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(57);
      StringWriter stringWriter0 = new StringWriter(57);
      StringWriter stringWriter1 = new StringWriter();
      StringWriter stringWriter2 = stringWriter1.append((CharSequence) "TI");
      stringWriter2.append((CharSequence) "TI");
      char[] charArray0 = new char[4];
      charArray0[1] = '@';
      StringWriter stringWriter3 = new StringWriter();
      StringWriter stringWriter4 = stringWriter3.append((CharSequence) "TI");
      simpleNode0.dump(" : ", stringWriter1);
      simpleNode0.setIdentifier("TI");
      simpleNode0.dump(" : ", stringWriter4);
      stringWriter4.write(57);
      simpleNode0.setIdentifier("TI");
      simpleNode0.dump((String) null, stringWriter2);
      simpleNode0.toString("TI");
      stringWriter4.write((-1953142865));
      simpleNode0.setIdentifier("+=");
      simpleNode0.dump("ForInit", stringWriter1);
      // Undeclared exception!
      try { 
        CharBuffer.wrap((CharSequence) "TI", 57, 44);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.387188887795372
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter(9);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      String string0 = "";
      StringReader stringReader0 = new StringReader("");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 9);
      String string1 = "ScE%\\;c$D1x6";
      simpleNode0.setIdentifier("ScE%;c$D1x6");
      simpleNode0.dump("ScE%;c$D1x6", stringWriter0);
      StringReader stringReader1 = new StringReader("");
      stringReader1.mark(9);
      MockFile mockFile0 = new MockFile("", "");
      simpleNode0.toString("ScE%;c$D1x6");
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream(mockFile0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SystemInUtil.addInputLine((String) null);
      String string0 = "\"do\"";
      StringReader stringReader0 = new StringReader("\"do\"");
      JavaParser javaParser0 = new JavaParser("/@o$m/.S");
      SimpleNode simpleNode0 = null;
      try {
        simpleNode0 = new SimpleNode((JavaParser) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      StringReader stringReader0 = new StringReader("hWH:1}Ra'UOr0:n");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, (-382));
      // Undeclared exception!
      try { 
        simpleNode0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -382
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.5179872908529677
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      simpleNode0.jjtOpen();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      arrayList0.spliterator();
      StringWriter stringWriter0 = new StringWriter();
      CharBuffer charBuffer0 = CharBuffer.allocate(2595);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 190, 2595);
      stringWriter0.append((CharSequence) charBuffer1, 1133, 1150);
      simpleNode0.dump("c\"b$ktJ!j~M<dEFKo", stringWriter0);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(65);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      byte[] byteArray0 = new byte[1];
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "unjx2$J`-`1D!");
      byteArray0[0] = (byte)54;
      SimpleNode simpleNode0 = new SimpleNode((byte)54);
      byte[] byteArray1 = new byte[8];
      byteArray1[0] = (byte) (-39);
      byteArray1[1] = (byte)54;
      byteArray1[2] = (byte) (-39);
      byteArray1[3] = (byte) (-39);
      byteArray1[4] = (byte) (-39);
      byteArray1[5] = (byte) (-39);
      byteArray1[6] = (byte) (-39);
      byteArray1[7] = (byte) (-39);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      Node node0 = simpleNode0.parent;
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild((Node) null, (byte) (-39));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser((Reader) null);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, (-538));
      Node node0 = simpleNode0.jjtGetParent();
      assertNull(node0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(57);
      simpleNode0.toString();
      StringWriter stringWriter0 = new StringWriter(57);
      StringWriter stringWriter1 = new StringWriter();
      stringWriter1.append((CharSequence) "</");
      stringWriter1.append((CharSequence) "</");
      char[] charArray0 = new char[4];
      charArray0[1] = '@';
      JavaParser javaParser0 = new JavaParser("</");
      assertFalse(javaParser0.lookingAhead);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.577674757227539
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(57);
      StringWriter stringWriter0 = new StringWriter(2587);
      Node node0 = simpleNode0.parent;
      simpleNode0.jjtGetNumChildren();
      StringWriter stringWriter1 = new StringWriter(0);
      simpleNode0.jjtAddChild((Node) null, 0);
      String string0 = "q[+e{Cy<Y##+3#";
      StringReader stringReader0 = new StringReader("q[+e{Cy<Y##+3#");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      try { 
        javaParser0.PrimaryExpression();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 5.  Encountered: {
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      StringReader stringReader0 = new StringReader("KG)\u0004c");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 0);
      simpleNode0.jjtSetParent((Node) null);
      assertEquals(0, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("wwQ5o");
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, (-2999));
      simpleNode0.jjtClose();
      assertEquals(0, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      StringReader stringReader0 = new StringReader("p:");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, (-1364));
      // Undeclared exception!
      try { 
        simpleNode0.toString("EnumBody");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1364
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }
}
