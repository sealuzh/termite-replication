/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 11:24:52 GMT 2019
 */

package org.pdfsam.guiclient.commons.models;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.AWTEventMulticaster;
import java.awt.Point;
import java.awt.color.ICC_Profile;
import java.awt.event.MouseWheelListener;
import java.awt.geom.AffineTransform;
import java.awt.geom.Point2D;
import java.awt.image.AffineTransformOp;
import java.awt.image.BufferedImage;
import java.awt.image.IndexColorModel;
import java.awt.image.MultiPixelPackedSampleModel;
import java.awt.image.RasterFormatException;
import java.awt.image.renderable.ParameterBlock;
import java.io.ByteArrayInputStream;
import java.time.temporal.ChronoField;
import java.util.Collection;
import java.util.ConcurrentModificationException;
import java.util.Hashtable;
import java.util.LinkedHashSet;
import java.util.PriorityQueue;
import java.util.Stack;
import java.util.Vector;
import java.util.function.Consumer;
import java.util.function.Predicate;
import javax.media.jai.PlanarImage;
import javax.media.jai.SnapshotImage;
import javax.media.jai.operator.IIPResolutionDescriptor;
import javax.swing.Icon;
import javax.swing.JCheckBoxMenuItem;
import javax.swing.JComboBox;
import javax.swing.JLayeredPane;
import javax.swing.JList;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.JPopupMenu;
import javax.swing.JRadioButtonMenuItem;
import javax.swing.JTabbedPane;
import javax.swing.MenuElement;
import javax.swing.MenuSelectionManager;
import javax.swing.event.ListDataListener;
import javax.swing.event.MenuDragMouseEvent;
import javax.swing.plaf.basic.BasicTabbedPaneUI;
import javax.swing.plaf.multi.MultiListUI;
import javax.swing.table.DefaultTableModel;
import javax.swing.tree.DefaultTreeCellRenderer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.pdfsam.guiclient.commons.models.VisualListModel;
import org.pdfsam.guiclient.dto.VisualPageListItem;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class VisualListModel_ESTest extends VisualListModel_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.3847257578340364
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem visualPageListItem0 = null;
      visualListModel0.addElement((VisualPageListItem) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      int int0 = 2;
      stack0.setSize(2);
      visualListModel0.addElementAt((VisualPageListItem) null, 2);
      visualListModel0.data = (Vector<VisualPageListItem>) stack0;
      int int1 = 1;
      visualListModel0.removeElements(1, (-1), true);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.prependAllElements(stack0);
      int[] intArray0 = new int[1];
      intArray0[0] = 2;
      VisualListModel visualListModel2 = new VisualListModel();
      try { 
        visualListModel1.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 2
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.6745460275183657
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem visualPageListItem0 = null;
      visualListModel0.addElement((VisualPageListItem) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      boolean boolean0 = true;
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.prependAllElements(stack0);
      int[] intArray0 = new int[1];
      visualListModel1.undeleteElements(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.7214787039105834
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[9];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[5] = null;
      visualPageListItemArray0[6] = null;
      visualPageListItemArray0[7] = null;
      visualPageListItemArray0[8] = null;
      visualListModel0.setData(visualPageListItemArray0);
      vector0.add((VisualPageListItem) null);
      vector0.add((VisualPageListItem) null);
      vector0.spliterator();
      visualListModel0.moveDownIndex(0);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      vector0.forEach(consumer0);
      int[] intArray0 = new int[8];
      intArray0[0] = 3956;
      intArray0[2] = 3956;
      intArray0[3] = 874;
      intArray0[4] = 0;
      intArray0[4] = 0;
      intArray0[6] = 874;
      intArray0[7] = 3956;
      AffineTransform.getShearInstance(3100.3480586976657, 0);
      ByteArrayInputStream byteArrayInputStream0 = null;
      try {
        byteArrayInputStream0 = new ByteArrayInputStream((byte[]) null, 2442, 420);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.3867961512087774
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      stack0.setSize(2);
      visualListModel0.addElementAt((VisualPageListItem) null, 2);
      visualListModel0.removeElements(1, (-1), true);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.prependAllElements(stack0);
      int[] intArray0 = new int[1];
      intArray0[0] = 2;
      VisualListModel visualListModel2 = new VisualListModel();
      boolean boolean0 = true;
      int[] intArray1 = new int[2];
      intArray1[0] = 2;
      intArray1[1] = 2;
      visualListModel2.removeElements(intArray1, true);
      try { 
        visualListModel1.removeElements(intArray0, true);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // toIndex = 3
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.7746000829682944
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      stack0.setSize(2);
      visualListModel0.addElementAt((VisualPageListItem) null, 2);
      visualListModel0.removeElements(1, (-1), true);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.prependAllElements(stack0);
      visualListModel1.appendAllElements(stack0);
      int[] intArray0 = new int[1];
      visualListModel1.getListDataListeners();
      intArray0[0] = 2;
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.undeleteElements(intArray0);
      Stack<VisualPageListItem> stack1 = new Stack<VisualPageListItem>();
      // Undeclared exception!
      try { 
        visualListModel0.moveUpIndexes((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      vector0.add((VisualPageListItem) null);
      vector0.spliterator();
      visualListModel0.moveDownIndex(0);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      vector0.forEach(consumer0);
      int[] intArray0 = new int[8];
      intArray0[0] = 3956;
      intArray0[2] = 3956;
      intArray0[3] = 874;
      intArray0[4] = 0;
      intArray0[4] = 0;
      intArray0[6] = 874;
      intArray0[7] = 3956;
      AffineTransform.getShearInstance(3100.3480586976657, 0);
      ByteArrayInputStream byteArrayInputStream0 = null;
      try {
        byteArrayInputStream0 = new ByteArrayInputStream((byte[]) null, 2442, 420);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.7204704039393954
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      visualListModel0.moveDownIndex(1371);
      int[] intArray0 = new int[3];
      intArray0[0] = 1371;
      intArray0[1] = 1371;
      int int0 = 488;
      intArray0[2] = 488;
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.removeElements(1, 1371, false);
      visualListModel0.updateElementAt(255, (VisualPageListItem) null);
      visualListModel0.subList(1371, 1371);
      visualListModel0.getListDataListeners();
      visualListModel0.removeElements((-804), (-804), true);
      stack0.add((VisualPageListItem) null);
      visualListModel0.moveDownIndex((-2528));
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      visualListModel0.getElements();
      int[] intArray1 = new int[1];
      intArray1[0] = (-2528);
      try { 
        visualListModel0.removeElements(intArray1, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2528
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.337689684714446
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-61);
      byteArray0[2] = (byte) (-113);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte) (-48);
      byteArray0[5] = (byte) (-73);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem visualPageListItem0 = null;
      visualListModel0.addElement((VisualPageListItem) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      int int0 = 2;
      stack0.setSize(2);
      visualListModel0.addElementAt((VisualPageListItem) null, 2);
      visualListModel0.data = (Vector<VisualPageListItem>) stack0;
      visualListModel0.removeElements(1, (-1), true);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.prependAllElements(stack0);
      int[] intArray0 = new int[1];
      intArray0[0] = 2;
      VisualListModel visualListModel2 = new VisualListModel();
      boolean boolean0 = true;
      int[] intArray1 = new int[2];
      intArray1[1] = 2;
      visualListModel2.removeElements(intArray1, true);
      try { 
        visualListModel1.removeElements(intArray0, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 2
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.8291146517345536
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[7];
      visualListModel0.setData(visualPageListItemArray0);
      int[] intArray0 = new int[2];
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.reverseElements(intArray0);
      Class<Integer> class0 = Integer.class;
      // Undeclared exception!
      try { 
        visualListModel0.getListeners((Class) class0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Ljava.lang.Integer; cannot be cast to [Ljava.util.EventListener;
         //
         verifyException("javax.swing.event.EventListenerList", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.6999267696231979
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[7];
      visualListModel0.setData(visualPageListItemArray0);
      int[] intArray0 = new int[2];
      intArray0[0] = 11;
      intArray0[1] = 11;
      visualListModel0.moveDownIndexes(intArray0);
      JList<String> jList0 = new JList<String>();
      MultiListUI multiListUI0 = new MultiListUI();
      MouseWheelListener mouseWheelListener0 = mock(MouseWheelListener.class, new ViolatedAssumptionAnswer());
      MouseWheelListener mouseWheelListener1 = mock(MouseWheelListener.class, new ViolatedAssumptionAnswer());
      MouseWheelListener mouseWheelListener2 = AWTEventMulticaster.add(mouseWheelListener0, mouseWheelListener1);
      AWTEventMulticaster.remove(mouseWheelListener2, mouseWheelListener2);
      jList0.addMouseWheelListener((MouseWheelListener) null);
      multiListUI0.getUIs();
      // Undeclared exception!
      try { 
        multiListUI0.indexToLocation(jList0, 11);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.398805401317134
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      stack0.setSize(2);
      boolean boolean0 = true;
      visualListModel0.addElementAt((VisualPageListItem) null, 2);
      visualListModel0.removeElements(1, 1, true);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.prependAllElements(stack0);
      int[] intArray0 = new int[1];
      intArray0[0] = 2;
      try { 
        visualListModel1.undeleteElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 2
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.659334098393565
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      visualListModel0.setData(visualPageListItemArray0);
      // Undeclared exception!
      try { 
        visualListModel0.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 0;
      VisualPageListItem visualPageListItem0 = null;
      visualListModel0.elementChanged((VisualPageListItem) null);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      visualListModel0.removeElementAt(0, true);
      int int1 = (-1433);
      SnapshotImage snapshotImage0 = null;
      try {
        snapshotImage0 = new SnapshotImage((PlanarImage) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.media.jai.ImageLayout", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.2383497075834473
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem visualPageListItem0 = null;
      visualListModel0.getListDataListeners();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      LinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      linkedHashSet0.forEach(consumer0);
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      visualListModel0.addElement((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      Integer.divideUnsigned((-720), (-720));
      Integer.toUnsignedLong((-1881));
      visualListModel0.addAllElements((-2528), (Collection<VisualPageListItem>) stack0);
      linkedHashSet0.add(integer0);
      linkedHashSet0.clear();
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      stack0.listIterator();
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      Vector<Object> vector0 = new Vector<Object>();
      vector0.add((Object) linkedHashSet0);
      JComboBox<Object> jComboBox0 = new JComboBox<Object>(vector0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.moveDownIndex((-720));
      int[] intArray0 = new int[3];
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem visualPageListItem0 = null;
      visualListModel0.getListDataListeners();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      LinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      linkedHashSet0.forEach(consumer0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      stack0.spliterator();
      stack0.add((VisualPageListItem) null);
      Integer.divideUnsigned((-720), (-720));
      Integer.toUnsignedLong(85);
      FileSystemHandling.shouldAllThrowIOExceptions();
      linkedHashSet0.clear();
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      stack0.listIterator();
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      Vector<Object> vector0 = new Vector<Object>();
      vector0.add((Object) linkedHashSet0);
      JComboBox<Object> jComboBox0 = new JComboBox<Object>(vector0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.moveDownIndex((-720));
      int[] intArray0 = new int[2];
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.1380501687234124
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getListDataListeners();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      LinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      int int0 = (-1881);
      stack0.add((VisualPageListItem) null);
      Integer.divideUnsigned((-720), (-720));
      Integer.toUnsignedLong((-1881));
      linkedHashSet0.add(integer0);
      linkedHashSet0.clear();
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      stack0.listIterator();
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      int int1 = (-257);
      Vector<Object> vector0 = new Vector<Object>();
      vector0.add((Object) linkedHashSet0);
      JComboBox<Object> jComboBox0 = new JComboBox<Object>(vector0);
      int int2 = 9;
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.moveDownIndex((-720));
      visualListModel1.clearData();
      int[] intArray0 = new int[3];
      // Undeclared exception!
      try { 
        visualListModel0.appendAllElements(stack0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Vector$Itr", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.0499251260871434
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getListDataListeners();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      LinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      stack0.add((VisualPageListItem) null);
      Integer.divideUnsigned((-720), (-720));
      Integer.toUnsignedLong((-1881));
      linkedHashSet0.add(integer0);
      linkedHashSet0.clear();
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      stack0.listIterator();
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) stack0);
      visualListModel0.clearData();
      int[] intArray0 = new int[8];
      intArray0[0] = 0;
      intArray0[1] = (-1881);
      intArray0[2] = 270;
      intArray0[3] = (-1881);
      intArray0[4] = (-1881);
      intArray0[5] = (-1881);
      intArray0[6] = 0;
      intArray0[7] = 0;
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.elementChanged((VisualPageListItem) null);
      // Undeclared exception!
      try { 
        visualListModel0.setData((VisualPageListItem[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getListDataListeners();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      LinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      int[] intArray0 = new int[6];
      intArray0[0] = (-1881);
      intArray0[1] = (-720);
      intArray0[2] = 7;
      intArray0[3] = 2049;
      intArray0[4] = (-720);
      intArray0[5] = (-1881);
      visualListModel0.moveUpIndexes(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.rotateClockwiseElements((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.885150328612323
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem visualPageListItem0 = null;
      visualListModel0.addElement((VisualPageListItem) null);
      boolean boolean0 = true;
      visualListModel0.addElementAt((VisualPageListItem) null, 2);
      visualListModel0.removeElements(1, (-1), true);
      VisualListModel visualListModel1 = new VisualListModel();
      int[] intArray0 = new int[1];
      intArray0[0] = 2;
      visualListModel1.undeleteElements(intArray0);
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 2
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      int int0 = 2;
      int[] intArray0 = new int[1];
      intArray0[0] = 2;
      visualListModel0.moveDownIndexes(intArray0);
      JList<String> jList0 = new JList<String>();
      MultiListUI multiListUI0 = new MultiListUI();
      multiListUI0.getUIs();
      // Undeclared exception!
      try { 
        multiListUI0.indexToLocation(jList0, 2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.9226853935616632
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      visualListModel0.setData(visualPageListItemArray0);
      int[] intArray0 = new int[1];
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)4;
      byteArray0[2] = (byte) (-73);
      byteArray0[3] = (byte)81;
      byteArray0[4] = (byte)44;
      byteArray0[5] = (byte) (-80);
      byteArray0[6] = (byte)35;
      byteArray0[7] = (byte) (-2);
      byteArray0[8] = (byte) (-70);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      intArray0[0] = 11;
      visualListModel0.moveDownIndexes(intArray0);
      try { 
        visualListModel0.reverseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 11
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.311020481113516
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.moveDownIndexes(intArray0);
      visualListModel1.removeElements(intArray0, true);
      visualListModel0.removeElements(intArray0, true);
      visualListModel0.removeElements(931, (-720), true);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.38615474653985
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.moveDownIndexes(intArray0);
      visualListModel1.removeElements(intArray0, true);
      visualListModel0.removeElements(intArray0, true);
      visualListModel1.removeElements(931, 931, true);
      assertEquals(0, visualListModel1.getSize());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.054225941653773
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      stack0.setSize(2);
      visualListModel0.addElementAt((VisualPageListItem) null, 2);
      visualListModel0.removeElements(1, (-1), true);
      VisualListModel visualListModel1 = new VisualListModel();
      int[] intArray0 = new int[3];
      intArray0[0] = (-1);
      intArray0[1] = 1;
      intArray0[2] = 2;
      visualListModel0.reverseElements(intArray0);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.addAllElements((Collection<VisualPageListItem>) stack0);
      visualListModel1.undeleteElements(intArray0);
      visualListModel1.rotateAnticlockwiseElements(intArray0);
      Stack<VisualPageListItem> stack1 = new Stack<VisualPageListItem>();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      VisualListModel visualListModel3 = new VisualListModel();
      visualListModel2.moveDownIndexes(intArray0);
      visualListModel1.moveUpIndexes(intArray0);
      VisualListModel visualListModel4 = new VisualListModel();
      stack1.clone();
      visualListModel4.moveUpIndexes(intArray0);
      visualListModel3.removeElements(intArray0, false);
      visualListModel0.prependAllElements(stack1);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 0;
      visualListModel0.elementChanged((VisualPageListItem) null);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      VisualPageListItem visualPageListItem0 = null;
      visualListModel0.addElement((VisualPageListItem) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[6];
      intArray0[0] = 2591;
      intArray0[1] = 2591;
      intArray0[2] = 2591;
      intArray0[3] = 17;
      intArray0[4] = 2542;
      // Undeclared exception!
      try { 
        visualListModel0.removeElements((int[]) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem visualPageListItem0 = null;
      visualListModel0.elementChanged((VisualPageListItem) null);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      visualListModel0.addElement((VisualPageListItem) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      int[] intArray0 = null;
      // Undeclared exception!
      try { 
        visualListModel0.moveDownIndexes((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.3120076729259056
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getListDataListeners();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      LinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      stack0.spliterator();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      stack0.forEach(consumer0);
      Vector<VisualPageListItem> vector1 = visualListModel0.data;
      vector1.add((VisualPageListItem) null);
      visualListModel0.addAllElements(1, (Collection<VisualPageListItem>) stack0);
      VisualListModel visualListModel1 = new VisualListModel();
      int[] intArray0 = null;
      // Undeclared exception!
      try { 
        visualListModel1.reverseElements((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.157280995708096
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getElements();
      int[] intArray0 = new int[7];
      intArray0[0] = 65535;
      int[] intArray1 = new int[8];
      intArray1[0] = 0;
      intArray1[1] = 0;
      intArray1[2] = 65535;
      visualListModel0.removeElements(intArray0, true);
      visualListModel0.getListDataListeners();
      visualListModel0.moveUpIndex(1623);
      Collection<VisualPageListItem> collection0 = visualListModel0.subList(0, 0);
      assertNotNull(collection0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      vector0.trimToSize();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) vector0);
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      int[] intArray0 = null;
      // Undeclared exception!
      try { 
        visualListModel0.undeleteElements((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.6539193142021
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getListDataListeners();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      LinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      Integer.compare(1, 1);
      Integer.divideUnsigned((-720), (-720));
      Integer.toUnsignedLong((-1870));
      linkedHashSet0.add(integer0);
      linkedHashSet0.clear();
      stack0.removeAll(linkedHashSet0);
      stack0.add((VisualPageListItem) null);
      stack0.listIterator();
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      visualListModel0.elementsChanged();
      int[] intArray0 = new int[4];
      intArray0[0] = 1500;
      intArray0[1] = (-257);
      intArray0[3] = (-257);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.addElementAt((VisualPageListItem) null, (-257));
      linkedHashSet0.add((Integer) (-257));
      int[] intArray1 = new int[0];
      visualListModel0.moveUpIndexes(intArray1);
      visualListModel0.addElementAt((VisualPageListItem) null, (-257));
      visualListModel0.addElementAt((VisualPageListItem) null, (-1207));
      visualListModel0.rotateAnticlockwiseElements(intArray1);
      visualListModel0.elementChanged((VisualPageListItem) null);
      visualListModel0.reverseElements(intArray1);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.moveUpIndex(1);
      assertEquals(1, visualListModel0.getSize());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.6220322287852307
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getListDataListeners();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      LinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      stack0.add((VisualPageListItem) null);
      Integer.max((-720), (-720));
      Integer.divideUnsigned((-720), (-720));
      linkedHashSet0.add(integer0);
      linkedHashSet0.clear();
      stack0.removeAll(linkedHashSet0);
      stack0.add((VisualPageListItem) null);
      stack0.listIterator();
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      linkedHashSet0.clear();
      visualListModel0.elementsChanged();
      int[] intArray0 = new int[4];
      intArray0[0] = 1500;
      intArray0[1] = (-257);
      intArray0[2] = (-257);
      intArray0[3] = (-257);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.addElementAt((VisualPageListItem) null, (-257));
      linkedHashSet0.add((Integer) (-257));
      visualListModel0.addElementAt((VisualPageListItem) null, (-1207));
      visualListModel0.elementChanged((VisualPageListItem) null);
      visualListModel0.prependAllElements(stack0);
      int int0 = visualListModel0.getSize();
      assertEquals(4, int0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.861378820099868
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getListDataListeners();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      LinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      stack0.add((VisualPageListItem) null);
      Integer.divideUnsigned((-720), (-720));
      linkedHashSet0.add(integer0);
      linkedHashSet0.clear();
      stack0.removeAll(linkedHashSet0);
      stack0.add((VisualPageListItem) null);
      stack0.listIterator();
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      linkedHashSet0.clear();
      visualListModel0.elementsChanged();
      int[] intArray0 = new int[4];
      intArray0[0] = 1500;
      intArray0[1] = (-257);
      intArray0[2] = (-257);
      intArray0[3] = (-257);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.addElementAt((VisualPageListItem) null, (-257));
      linkedHashSet0.add((Integer) (-257));
      int[] intArray1 = new int[0];
      visualListModel0.addElementAt((VisualPageListItem) null, (-1207));
      visualListModel0.rotateAnticlockwiseElements(intArray1);
      visualListModel0.elementChanged((VisualPageListItem) null);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.moveUpIndex(1);
      visualListModel0.updateElementAt(1, (VisualPageListItem) null);
      // Undeclared exception!
      try { 
        visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Vector$Itr", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.7232961436913947
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.elementChanged((VisualPageListItem) null);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      stack0.setSize(0);
      visualListModel0.addElementAt((VisualPageListItem) null, 0);
      visualListModel0.removeElements(0, 0, true);
      visualListModel0.updateElementAt(0, (VisualPageListItem) null);
      visualListModel0.getElements();
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.clearData();
      visualListModel0.moveDownIndex(0);
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem((-1497), "8)GR[", "8)GR[");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.6709087878625355
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.elementChanged((VisualPageListItem) null);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      VisualPageListItem visualPageListItem0 = null;
      visualListModel0.addElement((VisualPageListItem) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      int int0 = (-1);
      visualListModel0.addElementAt((VisualPageListItem) null, (-1));
      visualListModel0.removeElements((-1), 0, true);
      visualListModel0.updateElementAt(0, (VisualPageListItem) null);
      visualListModel0.getElements();
      linkedHashSet0.add((VisualPageListItem) null);
      VisualPageListItem visualPageListItem1 = null;
      try {
        visualPageListItem1 = new VisualPageListItem((-1497), "8)GR[", "8)GR[");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[0];
      visualListModel0.setData(visualPageListItemArray0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      Consumer<VisualPageListItem> consumer0 = (Consumer<VisualPageListItem>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      stack0.forEach(consumer0);
      visualListModel0.addAllElements((-170), (Collection<VisualPageListItem>) stack0);
      ByteArrayInputStream byteArrayInputStream0 = null;
      try {
        byteArrayInputStream0 = new ByteArrayInputStream((byte[]) null, (-129), (-170));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getElements();
      int[] intArray0 = new int[7];
      intArray0[3] = 65535;
      int[] intArray1 = new int[8];
      intArray1[0] = 19;
      intArray1[1] = 19;
      intArray1[2] = 19;
      intArray1[3] = 65535;
      intArray1[4] = 19;
      intArray1[5] = 65535;
      intArray1[6] = 65535;
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      vector0.stream();
      vector0.spliterator();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      vector0.forEach(consumer0);
      visualListModel0.addAllElements(19, (Collection<VisualPageListItem>) vector0);
      intArray1[5] = 19;
      intArray0[2] = (-1496);
      intArray0[3] = 146;
      intArray0[4] = 0;
      ByteArrayInputStream byteArrayInputStream0 = null;
      try {
        byteArrayInputStream0 = new ByteArrayInputStream((byte[]) null, (-1216), (-2324));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.6709087878625355
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.elementChanged((VisualPageListItem) null);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      VisualPageListItem visualPageListItem0 = null;
      visualListModel0.addElement((VisualPageListItem) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      stack0.setSize(0);
      int int0 = (-1);
      visualListModel0.addElementAt((VisualPageListItem) null, (-1));
      visualListModel0.removeElements((-1), 0, true);
      visualListModel0.updateElementAt(0, (VisualPageListItem) null);
      visualListModel0.getElements();
      linkedHashSet0.add((VisualPageListItem) null);
      VisualPageListItem visualPageListItem1 = null;
      try {
        visualPageListItem1 = new VisualPageListItem((-1497), "8)GR[", "8)GR[");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualListModel visualListModel1 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      vector0.add((VisualPageListItem) null);
      vector0.spliterator();
      visualListModel1.moveDownIndex((-422));
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      vector0.forEach(consumer0);
      AffineTransform.getShearInstance(874, (-2300.0));
      ByteArrayInputStream byteArrayInputStream0 = null;
      try {
        byteArrayInputStream0 = new ByteArrayInputStream((byte[]) null, (-422), 420);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.4558487091517962
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getListDataListeners();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      LinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();
      Integer integer0 = IIPResolutionDescriptor.MAX_RESOLUTION;
      LinkedHashSet<VisualPageListItem> linkedHashSet1 = new LinkedHashSet<VisualPageListItem>();
      VisualListModel visualListModel1 = new VisualListModel();
      int[] intArray0 = new int[3];
      intArray0[0] = 0;
      intArray0[1] = 256;
      intArray0[2] = 2;
      visualListModel1.removeElements(intArray0, true);
      visualListModel1.removeElements(0, (-720), true);
      assertNotSame(visualListModel1, visualListModel0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.4841652152843623
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getListDataListeners();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      LinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      LinkedHashSet<VisualPageListItem> linkedHashSet1 = new LinkedHashSet<VisualPageListItem>();
      int[] intArray0 = new int[7];
      intArray0[0] = (-2903);
      intArray0[1] = (-1536);
      intArray0[2] = (-1587);
      intArray0[3] = (-4895);
      intArray0[4] = 8;
      intArray0[5] = (-2473);
      intArray0[6] = (-874);
      visualListModel0.removeElements(intArray0, true);
      visualListModel0.removeElements(intArray0, false);
      visualListModel0.removeElements((-1587), (-980), true);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex(0);
      int int0 = 4;
      // Undeclared exception!
      try { 
        visualListModel0.setData((Vector<VisualPageListItem>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex(0);
      int int0 = 4;
      int int1 = (-963);
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt((-963), true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -963
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      stack0.setSize(2);
      int int0 = (-1);
      visualListModel0.getValidElements();
      MultiListUI multiListUI0 = new MultiListUI();
      JList<Object> jList0 = new JList<Object>(visualListModel0);
      // Undeclared exception!
      try { 
        multiListUI0.indexToLocation(jList0, (-2447));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.9779802083659246
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      stack0.setSize(2);
      visualListModel0.addElementAt((VisualPageListItem) null, 2);
      visualListModel0.removeElements(1, (-1), true);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.prependAllElements(stack0);
      Object[][] objectArray0 = new Object[8][6];
      Object[] objectArray1 = new Object[6];
      objectArray1[0] = (Object) null;
      objectArray1[1] = (Object) visualListModel0;
      objectArray1[2] = (Object) null;
      objectArray1[3] = (Object) stack0;
      objectArray1[4] = (Object) visualListModel1;
      objectArray1[5] = (Object) visualListModel1;
      objectArray0[0] = objectArray1;
      Object[] objectArray2 = new Object[9];
      objectArray2[0] = (Object) stack0;
      objectArray2[1] = (Object) visualListModel1;
      objectArray2[2] = (Object) visualListModel0;
      objectArray2[3] = (Object) visualListModel0;
      objectArray2[4] = (Object) visualListModel0;
      objectArray2[5] = (Object) visualListModel1;
      objectArray2[6] = (Object) null;
      objectArray2[7] = (Object) null;
      objectArray2[8] = (Object) visualListModel0;
      objectArray0[1] = objectArray2;
      Object[] objectArray3 = new Object[0];
      objectArray0[2] = objectArray3;
      Object[] objectArray4 = new Object[2];
      objectArray4[0] = (Object) stack0;
      objectArray4[1] = (Object) stack0;
      objectArray0[3] = objectArray4;
      Object[] objectArray5 = new Object[6];
      objectArray5[0] = (Object) visualListModel1;
      objectArray5[1] = (Object) stack0;
      objectArray5[2] = (Object) visualListModel0;
      objectArray5[3] = (Object) visualListModel0;
      objectArray5[4] = (Object) stack0;
      objectArray5[5] = (Object) visualListModel1;
      objectArray0[4] = objectArray5;
      Object[] objectArray6 = new Object[4];
      objectArray6[0] = (Object) stack0;
      objectArray6[1] = (Object) null;
      Object object0 = new Object();
      objectArray6[2] = object0;
      Object object1 = new Object();
      objectArray6[3] = object1;
      objectArray0[5] = objectArray6;
      Object[] objectArray7 = new Object[6];
      objectArray7[0] = (Object) visualListModel1;
      objectArray7[1] = (Object) visualListModel1;
      objectArray7[2] = object1;
      objectArray7[3] = object0;
      objectArray7[4] = (Object) visualListModel0;
      visualListModel1.getElementAt(2);
      objectArray7[5] = null;
      objectArray0[6] = objectArray7;
      Object[] objectArray8 = new Object[0];
      objectArray0[7] = objectArray8;
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(objectArray0, objectArray6);
      stack0.removeElement(defaultTableModel0);
      int[] intArray0 = new int[1];
      intArray0[0] = 2;
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.moveDownIndexes(intArray0);
      int[] intArray1 = new int[2];
      intArray1[0] = 2;
      intArray1[1] = 2;
      visualListModel2.removeElements(intArray1, true);
      visualListModel0.elementChanged((VisualPageListItem) null);
      int[] intArray2 = new int[4];
      intArray2[0] = 2;
      intArray2[1] = (-1);
      intArray2[2] = 1;
      intArray2[3] = 1;
      visualListModel1.reverseElements(intArray2);
      visualListModel2.moveUpIndexes(intArray1);
      visualListModel1.setData((Vector<VisualPageListItem>) stack0);
      visualListModel0.getElementAt(1673);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.027377075708073
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) visualListModel0;
      objectArray0[2] = (Object) visualListModel0;
      objectArray0[3] = (Object) visualListModel0;
      objectArray0[4] = (Object) visualListModel0;
      objectArray0[5] = (Object) visualListModel0;
      objectArray0[6] = (Object) visualListModel0;
      JComboBox<Object> jComboBox0 = new JComboBox<Object>(objectArray0);
      visualListModel0.addListDataListener(jComboBox0);
      int[] intArray0 = new int[0];
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.reverseElements(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.getValidElements();
      visualListModel1.undeleteElements(intArray0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      VisualListModel visualListModel2 = new VisualListModel();
      AffineTransform.getShearInstance((-1474), 1263);
      BasicTabbedPaneUI basicTabbedPaneUI0 = new BasicTabbedPaneUI();
      JTabbedPane jTabbedPane0 = null;
      try {
        jTabbedPane0 = new JTabbedPane(0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // illegal tab placement: must be TOP, BOTTOM, LEFT, or RIGHT
         //
         verifyException("javax.swing.JTabbedPane", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.218456332760875
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      ChronoField[] chronoFieldArray0 = new ChronoField[27];
      ChronoField chronoField0 = ChronoField.MILLI_OF_DAY;
      chronoFieldArray0[0] = chronoField0;
      chronoFieldArray0[1] = chronoField0;
      ChronoField chronoField1 = ChronoField.SECOND_OF_MINUTE;
      chronoFieldArray0[2] = chronoField1;
      ChronoField chronoField2 = ChronoField.PROLEPTIC_MONTH;
      chronoFieldArray0[3] = chronoField2;
      ChronoField chronoField3 = ChronoField.SECOND_OF_MINUTE;
      chronoFieldArray0[4] = chronoField3;
      ChronoField chronoField4 = ChronoField.MINUTE_OF_DAY;
      chronoFieldArray0[5] = chronoField4;
      ChronoField chronoField5 = ChronoField.HOUR_OF_DAY;
      chronoFieldArray0[6] = chronoField5;
      ChronoField chronoField6 = ChronoField.SECOND_OF_MINUTE;
      chronoFieldArray0[7] = chronoField6;
      ChronoField chronoField7 = ChronoField.CLOCK_HOUR_OF_AMPM;
      chronoFieldArray0[8] = chronoField7;
      JList<ChronoField> jList0 = new JList<ChronoField>(chronoFieldArray0);
      Stack<ChronoField> stack0 = new Stack<ChronoField>();
      JList<ChronoField> jList1 = new JList<ChronoField>(stack0);
      jList1.indexToLocation(1);
      AffineTransform.getShearInstance(1, 265.55687030904);
      VisualListModel visualListModel1 = new VisualListModel();
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.moveUpIndex(1);
      int[] intArray1 = new int[0];
      visualListModel2.undeleteElements(intArray1);
      assertNotSame(intArray1, intArray0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.removeListDataListener((ListDataListener) null);
      int[] intArray0 = new int[3];
      intArray0[0] = (-800);
      intArray0[1] = 0;
      intArray0[2] = 2714;
      visualListModel0.undeleteElements(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.0141266108053313
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.subList((-1474), 1263, true);
      intArray0[0] = 11;
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.getValidElements();
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem((BufferedImage) null, 1263, false, "", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = (-410);
      int[] intArray0 = new int[7];
      intArray0[0] = (-410);
      intArray0[1] = (-410);
      intArray0[2] = (-410);
      intArray0[3] = (-410);
      intArray0[4] = (-410);
      int int1 = 0;
      intArray0[5] = 0;
      intArray0[6] = (-410);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.subList((-410), 476);
      visualListModel0.addAllElements(2593, (Collection<VisualPageListItem>) null);
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.2096058100845513
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      int int0 = 11;
      intArray0[0] = 11;
      JComboBox<Object> jComboBox0 = new JComboBox<Object>();
      visualListModel0.addListDataListener(jComboBox0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.getValidElements();
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      priorityQueue0.parallelStream();
      visualListModel0.subList(1, 1263);
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem((BufferedImage) null, 1263, false, "", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.8505612088663046
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      vector0.spliterator();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      vector0.forEach(consumer0);
      vector0.add((VisualPageListItem) null);
      // Undeclared exception!
      try { 
        visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) vector0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Vector$Itr", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.data = null;
      Class<DefaultTableModel> class0 = DefaultTableModel.class;
      // Undeclared exception!
      try { 
        visualListModel0.clearData();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 2880;
      visualListModel0.clearData();
      int int1 = (-2077);
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        visualListModel0.subList(2880, (-2077), true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(2880) > toIndex(-2077)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 7;
      int[] intArray0 = new int[1];
      intArray0[0] = 7;
      // Undeclared exception!
      try { 
        visualListModel0.subList(7, (-2641), false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(7) > toIndex(-2641)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<Object> vector0 = new Vector<Object>();
      JComboBox<Object> jComboBox0 = new JComboBox<Object>(vector0);
      int[] intArray0 = new int[1];
      visualListModel0.moveDownIndex(9);
      Vector<VisualPageListItem> vector1 = new Vector<VisualPageListItem>();
      vector1.iterator();
      JList<VisualPageListItem> jList0 = new JList<VisualPageListItem>(vector1);
      Hashtable<Integer, VisualPageListItem> hashtable0 = new Hashtable<Integer, VisualPageListItem>();
      assertEquals(0, hashtable0.size());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=0.8505612088663046
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-71);
      byteArray0[1] = (byte)102;
      byteArray0[2] = (byte)49;
      byteArray0[3] = (byte)108;
      byteArray0[4] = (byte)91;
      byteArray0[6] = (byte)96;
      byteArray0[7] = (byte)80;
      byteArray0[8] = (byte) (-1);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      vector0.add((VisualPageListItem) null);
      visualListModel0.subList(0, 0, true);
      MultiListUI multiListUI0 = new MultiListUI();
      JComboBox<VisualPageListItem> jComboBox0 = new JComboBox<VisualPageListItem>();
      MenuElement[] menuElementArray0 = new MenuElement[8];
      JPopupMenu jPopupMenu0 = new JPopupMenu("");
      JMenuItem jMenuItem0 = jPopupMenu0.add("=+;.}~2.e\")[#v");
      menuElementArray0[0] = (MenuElement) jMenuItem0;
      JMenuItem jMenuItem1 = new JMenuItem();
      menuElementArray0[1] = (MenuElement) jMenuItem1;
      JMenuBar jMenuBar0 = new JMenuBar();
      menuElementArray0[2] = (MenuElement) jMenuBar0;
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      Icon icon0 = defaultTreeCellRenderer0.getDefaultOpenIcon();
      JRadioButtonMenuItem jRadioButtonMenuItem0 = new JRadioButtonMenuItem("ov", icon0, true);
      menuElementArray0[1] = (MenuElement) jRadioButtonMenuItem0;
      JCheckBoxMenuItem jCheckBoxMenuItem0 = new JCheckBoxMenuItem("ov", icon0, false);
      menuElementArray0[4] = (MenuElement) jCheckBoxMenuItem0;
      JRadioButtonMenuItem jRadioButtonMenuItem1 = new JRadioButtonMenuItem("ov");
      menuElementArray0[5] = (MenuElement) jRadioButtonMenuItem1;
      JMenu jMenu0 = new JMenu();
      JMenuItem jMenuItem2 = jMenu0.insert((JMenuItem) jRadioButtonMenuItem0, 931);
      menuElementArray0[6] = (MenuElement) jMenuItem2;
      JMenuItem jMenuItem3 = new JMenuItem();
      menuElementArray0[7] = (MenuElement) jMenuItem1;
      MenuSelectionManager menuSelectionManager0 = MenuSelectionManager.defaultManager();
      MenuDragMouseEvent menuDragMouseEvent0 = new MenuDragMouseEvent(jComboBox0, (byte)12, 3124L, (byte)91, (-1223), (byte)91, (byte) (-71), (byte)108, (byte)108, true, menuElementArray0, menuSelectionManager0);
      jComboBox0.getToolTipLocation(menuDragMouseEvent0);
      // Undeclared exception!
      try { 
        multiListUI0.locationToIndex((JList) null, (Point) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.4993646124305886
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[2];
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.reverseElements(intArray0);
      visualListModel1.moveUpIndexes(intArray0);
      assertArrayEquals(new int[] {0, 0}, intArray0);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[6];
      intArray0[0] = 2591;
      intArray0[1] = 2591;
      intArray0[2] = 2591;
      intArray0[3] = 17;
      intArray0[4] = 2542;
      VisualListModel visualListModel1 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel1.removeElementAt(6, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 6
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getElements();
      int[] intArray0 = new int[7];
      intArray0[0] = 65535;
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) vector0);
      intArray0[1] = 0;
      intArray0[2] = 65535;
      intArray0[3] = 146;
      intArray0[4] = 0;
      int[] intArray1 = new int[9];
      intArray1[0] = (-1496);
      intArray1[1] = 0;
      intArray1[2] = (-2036);
      intArray1[3] = 0;
      intArray1[4] = 0;
      intArray1[5] = (-1496);
      int[] intArray2 = new int[5];
      intArray2[0] = 146;
      intArray2[1] = 146;
      intArray2[2] = (-2036);
      intArray2[3] = 0;
      intArray2[4] = 0;
      visualListModel0.moveDownIndexes(intArray2);
      intArray1[6] = 146;
      intArray1[7] = 0;
      intArray1[8] = (-1496);
      visualListModel0.rotateClockwiseElements(intArray1);
      intArray0[5] = 2755;
      intArray0[6] = 0;
      visualListModel0.reverseElements(intArray0);
      int[] intArray3 = new int[0];
      visualListModel0.moveUpIndexes(intArray3);
      visualListModel0.prependAllElements((Collection<VisualPageListItem>) null);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.reverseElements(intArray0);
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) visualListModel0);
      Predicate<Object> predicate1 = predicate0.and(predicate0);
      Predicate<Object> predicate2 = predicate1.or(predicate0);
      Predicate<Object> predicate3 = predicate2.negate();
      priorityQueue0.removeIf(predicate3);
      visualListModel0.appendAllElements(priorityQueue0);
      int int0 = 0;
      visualListModel0.moveUpIndex(0);
      int int1 = (-911);
      boolean boolean0 = false;
      int int2 = 1062;
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel((-911), 0, intArray0, (-911), false, 0, 1062);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Number of pixel bits must be > 0
         //
         verifyException("java.awt.image.ColorModel", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Nt`dz");
      int[] intArray0 = new int[2];
      int int0 = 0;
      int int1 = 93;
      // Undeclared exception!
      try { 
        visualListModel0.subList(93, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(93) > toIndex(0)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.022248870579868
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 2880;
      visualListModel0.clearData();
      boolean boolean0 = true;
      visualListModel0.subList(2880, 2880, true);
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      vector0.clear();
      visualListModel0.setData(vector0);
      visualListModel0.getSize();
      int[] intArray0 = new int[9];
      intArray0[0] = 489;
      intArray0[1] = 2880;
      intArray0[2] = 2880;
      intArray0[3] = 2880;
      intArray0[5] = 2880;
      intArray0[6] = 2880;
      intArray0[7] = 0;
      String string0 = null;
      // Undeclared exception!
      try { 
        ICC_Profile.getInstance((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.elementsChanged();
      boolean boolean0 = false;
      visualListModel0.subList(951, 951, false);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) null);
      visualListModel0.getElementAt(951);
      int int0 = 2230;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      byte byte0 = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-110);
      byte byte1 = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)99;
      byteArray0[5] = (byte) (-88);
      byteArray0[6] = (byte)32;
      byteArray0[7] = (byte)115;
      byteArray0[8] = (byte) (-1);
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel(951, 951, byteArray0, (byte)32, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Number of bits must be between 1 and 16.
         //
         verifyException("java.awt.image.IndexColorModel", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getValidElements();
      visualListModel0.getElementAt(1);
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (double) 1;
      doubleArray0[1] = (double) 1;
      doubleArray0[2] = (double) 1;
      doubleArray0[3] = (-2399.940385458591);
      AffineTransform affineTransform0 = new AffineTransform(doubleArray0);
      AffineTransformOp affineTransformOp0 = new AffineTransformOp(affineTransform0, 1);
      MultiPixelPackedSampleModel multiPixelPackedSampleModel0 = null;
      try {
        multiPixelPackedSampleModel0 = new MultiPixelPackedSampleModel(1, 1, 1, (-697));
        fail("Expecting exception: RasterFormatException");
      
      } catch(RasterFormatException e) {
         //
         // MultiPixelPackedSampleModel does not allow pixels to span data element boundaries
         //
         verifyException("java.awt.image.MultiPixelPackedSampleModel", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.getElementAt((-804));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<Object> vector0 = new Vector<Object>();
      vector0.spliterator();
      ParameterBlock parameterBlock0 = new ParameterBlock(vector0);
      parameterBlock0.getSources();
      MultiListUI multiListUI0 = new MultiListUI();
      JList<String> jList0 = new JList<String>();
      int[] intArray0 = new int[1];
      intArray0[0] = (-1549);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.7842068034002128
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.elementsChanged();
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      MultiListUI multiListUI0 = new MultiListUI();
      JList<String> jList0 = new JList<String>();
      multiListUI0.getUIs();
      jList0.clearSelection();
      int int0 = (-3303);
      // Undeclared exception!
      try { 
        multiListUI0.indexToLocation(jList0, (-3303));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.7937175017485838
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[0];
      visualListModel0.setData(visualPageListItemArray0);
      ChronoField chronoField0 = ChronoField.MINUTE_OF_HOUR;
      ChronoField chronoField1 = ChronoField.MICRO_OF_DAY;
      ChronoField[] chronoFieldArray0 = new ChronoField[9];
      chronoFieldArray0[0] = chronoField0;
      chronoFieldArray0[1] = chronoField0;
      chronoFieldArray0[2] = chronoField0;
      chronoFieldArray0[3] = chronoField1;
      chronoFieldArray0[4] = chronoField1;
      chronoFieldArray0[5] = chronoField0;
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
      chronoFieldArray0[7] = chronoField1;
      chronoFieldArray0[8] = chronoField0;
      JList<ChronoField> jList0 = new JList<ChronoField>(chronoFieldArray0);
      Stack<ChronoField> stack1 = new Stack<ChronoField>();
      JList<ChronoField> jList1 = new JList<ChronoField>(stack1);
      Point point0 = new Point((-170), (-170));
      AffineTransform affineTransform0 = AffineTransform.getShearInstance((-170), 2638.0);
      Point2D point2D0 = affineTransform0.transform((Point2D) point0, (Point2D) point0);
      point0.setLocation(point2D0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.clearData();
      int[] intArray0 = new int[5];
      intArray0[0] = 3909;
      intArray0[1] = 28730;
      intArray0[2] = (-448630);
      intArray0[3] = (-170);
      intArray0[4] = (-448630);
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem(931, "", "v*I53P'B]CDx;rAEH,");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=0.8505612088663046
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-71);
      byteArray0[1] = (byte)102;
      byteArray0[2] = (byte)49;
      byteArray0[3] = (byte)108;
      byteArray0[4] = (byte)91;
      byteArray0[5] = (byte)12;
      byteArray0[6] = (byte)96;
      byteArray0[7] = (byte)80;
      byteArray0[8] = (byte) (-1);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      vector0.add((VisualPageListItem) null);
      int int0 = 0;
      visualListModel0.subList(0, 0, true);
      MultiListUI multiListUI0 = new MultiListUI();
      JComboBox<VisualPageListItem> jComboBox0 = new JComboBox<VisualPageListItem>();
      MenuElement[] menuElementArray0 = new MenuElement[8];
      JPopupMenu jPopupMenu0 = new JPopupMenu("");
      JMenuItem jMenuItem0 = jPopupMenu0.add("=+;.}~2.e\")[#v");
      menuElementArray0[0] = (MenuElement) jMenuItem0;
      JMenuItem jMenuItem1 = new JMenuItem();
      menuElementArray0[1] = (MenuElement) jMenuItem1;
      JMenuBar jMenuBar0 = new JMenuBar();
      menuElementArray0[2] = (MenuElement) jMenuBar0;
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      Icon icon0 = defaultTreeCellRenderer0.getDefaultOpenIcon();
      JRadioButtonMenuItem jRadioButtonMenuItem0 = new JRadioButtonMenuItem("ov", icon0, true);
      menuElementArray0[3] = (MenuElement) jRadioButtonMenuItem0;
      JCheckBoxMenuItem jCheckBoxMenuItem0 = new JCheckBoxMenuItem("ov", icon0, false);
      menuElementArray0[4] = (MenuElement) jCheckBoxMenuItem0;
      JRadioButtonMenuItem jRadioButtonMenuItem1 = new JRadioButtonMenuItem("ov");
      menuElementArray0[5] = (MenuElement) jRadioButtonMenuItem1;
      JMenu jMenu0 = new JMenu();
      JMenuItem jMenuItem2 = jMenu0.insert((JMenuItem) jRadioButtonMenuItem0, 931);
      menuElementArray0[6] = (MenuElement) jMenuItem2;
      JMenuItem jMenuItem3 = new JMenuItem();
      menuElementArray0[7] = (MenuElement) jMenuItem3;
      MenuSelectionManager menuSelectionManager0 = MenuSelectionManager.defaultManager();
      MenuDragMouseEvent menuDragMouseEvent0 = new MenuDragMouseEvent(jComboBox0, (byte)12, 3124L, (byte)91, (-1223), (byte)91, (byte) (-71), (byte)108, (byte)108, true, menuElementArray0, menuSelectionManager0);
      jComboBox0.getToolTipLocation(menuDragMouseEvent0);
      // Undeclared exception!
      try { 
        multiListUI0.locationToIndex((JList) null, (Point) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }
}
