/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 11:47:55 GMT 2019
 */

package org.quickserver.net.server;

import org.junit.Test;
import static org.junit.Assert.*;
import java.net.Socket;
import java.nio.channels.SocketChannel;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.net.MockSocket;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;
import org.quickserver.net.qsadmin.CommandHandler;
import org.quickserver.net.qsadmin.Data;
import org.quickserver.net.server.Authenticator;
import org.quickserver.net.server.ClientAuthenticationHandler;
import org.quickserver.net.server.ClientBinaryHandler;
import org.quickserver.net.server.ClientCommandHandler;
import org.quickserver.net.server.ClientData;
import org.quickserver.net.server.ClientEvent;
import org.quickserver.net.server.ClientEventHandler;
import org.quickserver.net.server.ClientExtendedEventHandler;
import org.quickserver.net.server.ClientObjectHandler;
import org.quickserver.net.server.ClientWriteHandler;
import org.quickserver.net.server.QuickServer;
import org.quickserver.net.server.TheClient;
import org.quickserver.net.server.impl.BlockingClientHandler;
import org.quickserver.net.server.impl.DefaultClientEventHandler;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TheClient_ESTest extends TheClient_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.0497978423100225
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.setMaxAuthTryMsg("");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-20);
      byteArray0[1] = (byte)125;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-55);
      theClient0.getAuthenticator();
      theClient0.setAuthenticator((Authenticator) null);
      byteArray0[4] = (byte) (-45);
      TheClient theClient1 = new TheClient();
      theClient1.getClientObjectHandler();
      theClient0.setClientObjectHandler((ClientObjectHandler) null);
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)72;
      theClient1.setCommunicationLogging(false);
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      theClient0.setMaxAuthTry(0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "i)9=V$Be!'&NQn");
      theClient0.toString();
      theClient0.getSocket();
      theClient0.getClientObjectHandler();
      theClient0.getSocket();
      theClient0.getSocketChannel();
      theClient1.getServer();
      assertFalse(theClient1.getCommunicationLogging());
      
      theClient0.getMaxAuthTryMsg();
      assertTrue(theClient0.getCommunicationLogging());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.876156142363588
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getClientObjectHandler();
      theClient0.setClientObjectHandler((ClientObjectHandler) null);
      theClient0.setMaxAuthTry((-694));
      theClient0.getClientEventHandler();
      theClient0.setClientEventHandler((ClientEventHandler) null);
      theClient0.getMaxAuthTry();
      BlockingClientHandler blockingClientHandler0 = new BlockingClientHandler();
      blockingClientHandler0.getClientData();
      theClient0.setClientData((ClientData) null);
      QuickServer quickServer0 = new QuickServer("");
      quickServer0.getQSAdminServerPort();
      theClient0.setServer(quickServer0);
      theClient0.toString();
      theClient0.getClientExtendedEventHandler();
      assertEquals((-694), theClient0.getMaxAuthTry());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.126862207664039
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.setTimeout((-879));
      TheClient theClient1 = new TheClient();
      theClient1.getClientEventHandler();
      DefaultClientEventHandler defaultClientEventHandler0 = new DefaultClientEventHandler();
      theClient0.setClientEventHandler(defaultClientEventHandler0);
      theClient0.getClientCommandHandler();
      theClient0.setClientCommandHandler((ClientCommandHandler) null);
      theClient1.getClientExtendedEventHandler();
      theClient1.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient1.getClientWriteHandler();
      theClient1.toString();
      theClient0.getClientBinaryHandler();
      theClient0.getClientEventHandler();
      theClient0.getTimeoutMsg();
      theClient0.getClientWriteHandler();
      theClient0.getClientExtendedEventHandler();
      theClient0.getTimeout();
      theClient0.getClientObjectHandler();
      assertEquals((-879), theClient0.getTimeout());
      
      theClient1.getClientBinaryHandler();
      theClient1.getClientExtendedEventHandler();
      assertFalse(theClient1.getTrusted());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.876156142363588
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getClientWriteHandler();
      theClient0.setClientWriteHandler((ClientWriteHandler) null);
      theClient0.setTrusted(true);
      theClient0.toString();
      theClient0.getClientExtendedEventHandler();
      BlockingClientHandler blockingClientHandler0 = new BlockingClientHandler();
      BlockingClientHandler blockingClientHandler1 = new BlockingClientHandler();
      blockingClientHandler1.getSocket();
      //  // Unstable assertion: assertEquals("<ClientHandler-Pool#-1-ID:33>", blockingClientHandler1.getName());
      
      theClient0.setSocket((Socket) null);
      theClient0.getClientEventHandler();
      theClient0.getMaxConnectionMsg();
      theClient0.setCommunicationLogging(false);
      boolean boolean0 = theClient0.getTrusted();
      //  // Unstable assertion: assertTrue(boolean0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.678706058817701
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-1);
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      theClient0.setMaxAuthTry(488);
      theClient0.setCommunicationLogging(true);
      theClient0.getClientObjectHandler();
      theClient0.setClientObjectHandler((ClientObjectHandler) null);
      Data data0 = new Data();
      data0.setUsername("");
      data0.setPassword(byteArray0);
      theClient0.setClientData(data0);
      ClientData clientData0 = theClient0.getClientData();
      theClient0.setClientData(clientData0);
      theClient0.getClientObjectHandler();
      theClient0.getClientBinaryHandler();
      theClient0.getAuthenticator();
      theClient0.getAuthenticator();
      theClient0.getClientObjectHandler();
      assertEquals(488, theClient0.getMaxAuthTry());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.8778952727983707
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      ClientEvent clientEvent0 = ClientEvent.ACCEPT;
      TheClient theClient0 = new TheClient();
      theClient0.setClientEvent(clientEvent0);
      theClient0.setMaxConnectionMsg("");
      theClient0.getClientExtendedEventHandler();
      theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient0.getClientEvent();
      theClient0.getTimeoutMsg();
      theClient0.setTimeoutMsg("");
      theClient0.getClientBinaryHandler();
      theClient0.setClientBinaryHandler((ClientBinaryHandler) null);
      theClient0.getClientCommandHandler();
      theClient0.getTimeoutMsg();
      assertTrue(theClient0.getCommunicationLogging());
      assertFalse(theClient0.getTrusted());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.193764486816496
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.setTimeout(2550);
      theClient0.getClientBinaryHandler();
      theClient0.getClientObjectHandler();
      TheClient theClient1 = new TheClient();
      theClient0.getClientCommandHandler();
      theClient1.setClientCommandHandler((ClientCommandHandler) null);
      theClient1.setClientObjectHandler((ClientObjectHandler) null);
      theClient0.getClientEventHandler();
      theClient1.setMaxConnectionMsg("");
      theClient0.getClientExtendedEventHandler();
      theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient1.getMaxConnectionMsg();
      theClient1.getClientEvent();
      SocketChannel socketChannel0 = SocketChannel.open();
      theClient0.setSocketChannel(socketChannel0);
      theClient1.getClientCommandHandler();
      theClient0.toString();
      assertEquals(2550, theClient0.getTimeout());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.582845732046839
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getClientAuthenticationHandler();
      theClient0.setClientAuthenticationHandler((ClientAuthenticationHandler) null);
      theClient0.setTimeout(0);
      theClient0.getClientEventHandler();
      theClient0.setClientEventHandler((ClientEventHandler) null);
      theClient0.getClientCommandHandler();
      theClient0.setClientCommandHandler((ClientCommandHandler) null);
      theClient0.getClientExtendedEventHandler();
      theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient0.getServer();
      theClient0.getClientWriteHandler();
      theClient0.toString();
      theClient0.getClientBinaryHandler();
      theClient0.getClientEventHandler();
      theClient0.setClientEventHandler((ClientEventHandler) null);
      theClient0.getAuthenticator();
      theClient0.setClientEvent((ClientEvent) null);
      theClient0.getClientWriteHandler();
      theClient0.getClientExtendedEventHandler();
      BlockingClientHandler blockingClientHandler0 = new BlockingClientHandler();
      blockingClientHandler0.getSocket();
      //  // Unstable assertion: assertEquals("<ClientHandler-Pool#-1-ID:17>", blockingClientHandler0.getName());
      
      theClient0.setSocket((Socket) null);
      theClient0.setMaxConnectionMsg("STRING");
      theClient0.getClientEventHandler();
      theClient0.setAuthenticator((Authenticator) null);
      theClient0.getClientEvent();
      theClient0.getClientEvent();
      TheClient theClient1 = new TheClient();
      theClient1.getClientEvent();
      theClient0.getSocket();
      theClient1.getClientObjectHandler();
      //  // Unstable assertion: assertFalse(theClient1.getTrusted());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.3797334600238247
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getClientAuthenticationHandler();
      theClient0.setClientAuthenticationHandler((ClientAuthenticationHandler) null);
      theClient0.setClientAuthenticationHandler((ClientAuthenticationHandler) null);
      theClient0.setTimeout(0);
      CommandHandler commandHandler0 = new CommandHandler();
      CommandHandler commandHandler1 = new CommandHandler();
      theClient0.setClientEventHandler(commandHandler1);
      theClient0.getClientCommandHandler();
      theClient0.setClientCommandHandler((ClientCommandHandler) null);
      theClient0.getClientExtendedEventHandler();
      TheClient theClient1 = new TheClient();
      theClient1.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient1.getClientWriteHandler();
      theClient1.getServer();
      theClient1.getAuthenticator();
      ClientEvent clientEvent0 = ClientEvent.ACCEPT;
      ClientEvent clientEvent1 = ClientEvent.MAX_CON;
      theClient1.setClientEvent(clientEvent1);
      theClient1.setMaxConnectionMsg(" UF00\"");
      theClient1.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient0.getClientEvent();
      theClient1.getTimeoutMsg();
      theClient1.setTimeoutMsg(" UF00\"");
      theClient1.setClientBinaryHandler((ClientBinaryHandler) null);
      theClient0.getClientCommandHandler();
      assertEquals(0, theClient0.getTimeout());
      
      theClient1.getTimeoutMsg();
      assertFalse(theClient1.getTrusted());
      assertTrue(theClient1.getCommunicationLogging());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.199278271277649
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getClientAuthenticationHandler();
      theClient0.getClientWriteHandler();
      theClient0.toString();
      CommandHandler commandHandler0 = new CommandHandler();
      theClient0.setClientCommandHandler(commandHandler0);
      theClient0.setClientAuthenticationHandler((ClientAuthenticationHandler) null);
      theClient0.getAuthenticator();
      boolean boolean0 = theClient0.getTrusted();
      assertFalse(boolean0);
      
      theClient0.setClientEventHandler(commandHandler0);
      ClientCommandHandler clientCommandHandler0 = theClient0.getClientCommandHandler();
      theClient0.setClientCommandHandler(clientCommandHandler0);
      TheClient theClient1 = new TheClient();
      theClient1.getClientExtendedEventHandler();
      TheClient theClient2 = new TheClient();
      theClient2.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient0.getClientWriteHandler();
      theClient0.toString();
      theClient0.getClientBinaryHandler();
      theClient0.getClientEventHandler();
      theClient0.getMaxConnectionMsg();
      theClient1.getClientWriteHandler();
      TheClient theClient3 = new TheClient();
      theClient3.getClientExtendedEventHandler();
      Integer integer0 = new Integer(1241);
      theClient1.getClientBinaryHandler();
      theClient3.getClientExtendedEventHandler();
      theClient1.getClientBinaryHandler();
      String string0 = theClient2.toString();
      assertEquals("{TheClient no socket, Event: (ClientEvent-Run Blocking)}", string0);
      
      theClient1.getClientWriteHandler();
      assertTrue(theClient1.getCommunicationLogging());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.setMaxAuthTryMsg("lCY9$8");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      theClient0.getMaxAuthTryMsg();
      assertFalse(theClient0.getTrusted());
      assertTrue(theClient0.getCommunicationLogging());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.876156142363588
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getClientWriteHandler();
      theClient0.setClientWriteHandler((ClientWriteHandler) null);
      theClient0.toString();
      theClient0.getClientExtendedEventHandler();
      BlockingClientHandler blockingClientHandler0 = new BlockingClientHandler();
      BlockingClientHandler blockingClientHandler1 = new BlockingClientHandler(3389);
      blockingClientHandler1.getSocket();
      assertEquals("<ClientHandler-Pool#3389-ID:1>", blockingClientHandler1.getName());
      
      theClient0.setSocket((Socket) null);
      theClient0.setMaxConnectionMsg("org.quickserver.net.server.TheClient");
      theClient0.getClientEventHandler();
      theClient0.getMaxConnectionMsg();
      theClient0.setCommunicationLogging(false);
      boolean boolean0 = theClient0.getCommunicationLogging();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.673415053526696
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      org.quickserver.net.qsadmin.Authenticator authenticator0 = new org.quickserver.net.qsadmin.Authenticator();
      theClient0.getClientBinaryHandler();
      theClient0.setClientBinaryHandler((ClientBinaryHandler) null);
      theClient0.setClientAuthenticationHandler(authenticator0);
      theClient0.getClientExtendedEventHandler();
      theClient0.getMaxConnectionMsg();
      DefaultClientEventHandler defaultClientEventHandler0 = new DefaultClientEventHandler();
      theClient0.setClientEventHandler(defaultClientEventHandler0);
      boolean boolean0 = theClient0.getCommunicationLogging();
      assertTrue(boolean0);
      
      theClient0.getClientAuthenticationHandler();
      theClient0.getClientBinaryHandler();
      assertFalse(theClient0.getTrusted());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CommandHandler commandHandler0 = new CommandHandler();
      TheClient theClient0 = new TheClient();
      theClient0.getClientObjectHandler();
      theClient0.setClientObjectHandler((ClientObjectHandler) null);
      CommandHandler commandHandler1 = new CommandHandler();
      theClient0.setClientEventHandler(commandHandler1);
      theClient0.getClientEventHandler();
      assertTrue(theClient0.getCommunicationLogging());
      assertFalse(theClient0.getTrusted());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.setCommunicationLogging(true);
      boolean boolean0 = theClient0.getCommunicationLogging();
      assertFalse(theClient0.getTrusted());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.377551245075652
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getClientAuthenticationHandler();
      theClient0.setClientAuthenticationHandler((ClientAuthenticationHandler) null);
      theClient0.setTimeout(0);
      CommandHandler commandHandler0 = new CommandHandler();
      theClient0.getClientBinaryHandler();
      theClient0.setClientBinaryHandler((ClientBinaryHandler) null);
      theClient0.getClientObjectHandler();
      theClient0.getClientCommandHandler();
      theClient0.setClientCommandHandler((ClientCommandHandler) null);
      theClient0.setClientObjectHandler((ClientObjectHandler) null);
      TheClient theClient1 = new TheClient();
      theClient1.getClientEventHandler();
      theClient0.getClientExtendedEventHandler();
      theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient0.getMaxConnectionMsg();
      theClient0.getClientEvent();
      SocketChannel socketChannel0 = SocketChannel.open();
      theClient1.setSocketChannel(socketChannel0);
      theClient1.setCommunicationLogging(false);
      assertFalse(theClient1.getCommunicationLogging());
      
      theClient0.getClientWriteHandler();
      assertTrue(theClient0.getCommunicationLogging());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.1945366875886965
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.setTimeout(1);
      theClient0.getClientBinaryHandler();
      theClient0.setClientBinaryHandler((ClientBinaryHandler) null);
      theClient0.getClientCommandHandler();
      theClient0.setClientCommandHandler((ClientCommandHandler) null);
      theClient0.getClientObjectHandler();
      theClient0.setClientObjectHandler((ClientObjectHandler) null);
      theClient0.getTimeout();
      theClient0.getClientExtendedEventHandler();
      theClient0.setClientBinaryHandler((ClientBinaryHandler) null);
      theClient0.setTrusted(true);
      theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient0.getClientWriteHandler();
      theClient0.setClientCommandHandler((ClientCommandHandler) null);
      theClient0.setClientWriteHandler((ClientWriteHandler) null);
      theClient0.getClientCommandHandler();
      CommandHandler commandHandler0 = new CommandHandler();
      theClient0.getServer();
      assertEquals(1, theClient0.getTimeout());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.6709087878625355
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.setMaxAuthTry(60000);
      theClient0.getClientEventHandler();
      theClient0.setClientEventHandler((ClientEventHandler) null);
      theClient0.getMaxAuthTry();
      theClient0.getClientExtendedEventHandler();
      theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient0.getClientEvent();
      theClient0.setCommunicationLogging(false);
      assertEquals(60000, theClient0.getMaxAuthTry());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      TheClient theClient0 = new TheClient();
      QuickServer quickServer0 = new QuickServer();
      theClient0.setServer(quickServer0);
      QuickServer quickServer1 = theClient0.getServer();
      theClient0.setServer(quickServer1);
      assertTrue(theClient0.getCommunicationLogging());
      assertFalse(theClient0.getTrusted());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.1279462185041473
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.toString();
      theClient0.setClientBinaryHandler((ClientBinaryHandler) null);
      theClient0.getClientObjectHandler();
      theClient0.getClientCommandHandler();
      theClient0.setClientCommandHandler((ClientCommandHandler) null);
      theClient0.setClientObjectHandler((ClientObjectHandler) null);
      theClient0.getClientEventHandler();
      theClient0.setMaxConnectionMsg("{TheClient no socket, Event: (ClientEvent-Run Blocking)}");
      theClient0.getClientExtendedEventHandler();
      TheClient theClient1 = new TheClient();
      theClient1.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      TheClient theClient2 = new TheClient();
      theClient2.getClientWriteHandler();
      theClient2.toString();
      theClient2.getClientBinaryHandler();
      theClient1.getClientEventHandler();
      theClient0.getMaxConnectionMsg();
      TheClient theClient3 = new TheClient();
      theClient3.getClientWriteHandler();
      TheClient theClient4 = new TheClient();
      theClient3.getClientExtendedEventHandler();
      Integer integer0 = new Integer((-1596));
      assertEquals((-1596), (int)integer0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.675485446901437
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getClientAuthenticationHandler();
      theClient0.getClientWriteHandler();
      theClient0.setClientWriteHandler((ClientWriteHandler) null);
      theClient0.toString();
      CommandHandler commandHandler0 = new CommandHandler();
      theClient0.setClientCommandHandler(commandHandler0);
      theClient0.setClientAuthenticationHandler((ClientAuthenticationHandler) null);
      theClient0.getAuthenticator();
      boolean boolean0 = theClient0.getTrusted();
      assertFalse(boolean0);
      
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      TheClient theClient1 = new TheClient();
      String string0 = theClient0.toString();
      assertTrue(theClient0.getCommunicationLogging());
      assertEquals("{TheClient no socket, Event: (ClientEvent-Run Blocking)}", string0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      MockSocket mockSocket0 = new MockSocket();
      theClient0.setSocket(mockSocket0);
      String string0 = theClient0.toString();
      assertEquals("{TheClient Socket[unconnected], Event: (ClientEvent-Run Blocking)}", string0);
      assertFalse(theClient0.getTrusted());
      assertTrue(theClient0.getCommunicationLogging());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      int int0 = theClient0.getMaxAuthTry();
      assertFalse(theClient0.getTrusted());
      assertTrue(theClient0.getCommunicationLogging());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      TheClient theClient0 = new TheClient();
      theClient0.getMaxAuthTryMsg();
      assertTrue(theClient0.getCommunicationLogging());
      assertFalse(theClient0.getTrusted());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      TheClient theClient0 = new TheClient();
      int int0 = theClient0.getTimeout();
      assertEquals(0, int0);
      assertTrue(theClient0.getCommunicationLogging());
      assertFalse(theClient0.getTrusted());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.9687776175299367
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getClientAuthenticationHandler();
      theClient0.setClientAuthenticationHandler((ClientAuthenticationHandler) null);
      CommandHandler commandHandler0 = new CommandHandler();
      CommandHandler commandHandler1 = new CommandHandler();
      theClient0.setClientEventHandler(commandHandler1);
      theClient0.getClientCommandHandler();
      theClient0.setClientCommandHandler((ClientCommandHandler) null);
      theClient0.getClientExtendedEventHandler();
      TheClient theClient1 = new TheClient();
      theClient1.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient1.getClientWriteHandler();
      theClient0.getClientBinaryHandler();
      theClient1.getClientEventHandler();
      theClient0.getMaxConnectionMsg();
      theClient0.getClientWriteHandler();
      TheClient theClient2 = new TheClient();
      assertFalse(theClient2.getTrusted());
      assertTrue(theClient2.getCommunicationLogging());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.2603936002885616
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getClientAuthenticationHandler();
      theClient0.setClientAuthenticationHandler((ClientAuthenticationHandler) null);
      theClient0.setTimeoutMsg(", Event: ");
      theClient0.setTimeout(0);
      theClient0.getClientEventHandler();
      theClient0.setClientEventHandler((ClientEventHandler) null);
      theClient0.getClientCommandHandler();
      theClient0.setClientCommandHandler((ClientCommandHandler) null);
      theClient0.getClientExtendedEventHandler();
      theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient0.getServer();
      theClient0.getClientWriteHandler();
      theClient0.toString();
      theClient0.getClientBinaryHandler();
      theClient0.getClientEventHandler();
      theClient0.setClientEventHandler((ClientEventHandler) null);
      theClient0.getAuthenticator();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      String string0 = theClient0.toString();
      assertEquals("{TheClient no socket, Event: (ClientEvent-Run Blocking)}", string0);
      
      theClient0.getClientWriteHandler();
      assertEquals(0, theClient0.getTimeout());
      assertTrue(theClient0.getCommunicationLogging());
      assertFalse(theClient0.getTrusted());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getClientData();
      theClient0.setClientData((ClientData) null);
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      String string0 = theClient0.toString();
      assertTrue(theClient0.getCommunicationLogging());
      assertEquals("{TheClient no socket, Event: (ClientEvent-Run Blocking)}", string0);
      assertFalse(theClient0.getTrusted());
  }
}
