/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 11:24:27 GMT 2019
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.1188350833754788
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("u&/X{3X?-9lo");
      xPathLexer0.leftBracket();
      xPathLexer0.identifier();
      xPathLexer0.isIdentifierChar('V');
      xPathLexer0.dots();
      xPathLexer0.doubleColon();
      xPathLexer0.dots();
      xPathLexer0.pipe();
      xPathLexer0.whitespace();
      xPathLexer0.not();
      xPathLexer0.operatorName();
      xPathLexer0.equals();
      xPathLexer0.dots();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.number();
      xPathLexer0.isIdentifierStartChar('\'');
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer2.whitespace();
      XPathLexer xPathLexer3 = new XPathLexer("");
      xPathLexer2.mod();
      xPathLexer0.comma();
      xPathLexer2.getXPath();
      XPathLexer xPathLexer4 = new XPathLexer("");
      xPathLexer1.colon();
      xPathLexer4.operatorName();
      xPathLexer0.consume();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.consume(1);
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token0 = xPathLexer6.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.7168189337147846
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("AV|m,EEh8Ul0=,0E");
      Token token0 = xPathLexer0.at();
      assertEquals("A", token0.getTokenText());
      assertEquals(16, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifier();
      assertEquals("V", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.whitespace();
      assertEquals((-2), token2.getTokenType());
      
      Token token3 = xPathLexer0.plus();
      assertEquals(5, token3.getTokenType());
      assertEquals("m", token3.getTokenText());
      
      xPathLexer0.setXPath("com.werken.saxpath.Token");
      xPathLexer0.consume();
      xPathLexer0.operatorName();
      Token token4 = xPathLexer0.rightBracket();
      assertEquals(4, token4.getTokenType());
      assertEquals("o", token4.getTokenText());
      
      xPathLexer0.dollar();
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token5 = xPathLexer1.pipe();
      assertEquals(17, token5.getTokenType());
      
      int int0 = xPathLexer1.endPosition();
      assertEquals(0, int0);
      
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token6 = xPathLexer0.nextToken();
      assertEquals(".", token6.getTokenText());
      assertEquals(13, token6.getTokenType());
      
      Token token7 = xPathLexer2.dollar();
      assertEquals(26, token7.getTokenType());
      assertEquals("c", token7.getTokenText());
      
      xPathLexer0.consume(0);
      Token token8 = xPathLexer2.equals();
      assertEquals(21, token8.getTokenType());
      assertEquals("o", token8.getTokenText());
      
      int int1 = xPathLexer1.currentPosition();
      assertEquals(1, int1);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.8434675719024782
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("MLpv8bZQZr<g| 3");
      xPathLexer0.consume();
      xPathLexer0.operatorName();
      xPathLexer0.rightBracket();
      xPathLexer0.number();
      xPathLexer0.and();
      xPathLexer0.dollar();
      xPathLexer0.pipe();
      int int0 = xPathLexer0.endPosition();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.consume(1);
      xPathLexer0.notEquals();
      XPathLexer xPathLexer1 = new XPathLexer();
      int int1 = xPathLexer1.currentPosition();
      assertFalse(int1 == int0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.9017950404351742
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("AV|m,EEh8Ul0=,0E");
      Token token0 = xPathLexer0.at();
      assertEquals("A", token0.getTokenText());
      assertEquals(16, token0.getTokenType());
      
      xPathLexer0.identifier();
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.notEquals();
      assertEquals("m,", token2.getTokenText());
      assertEquals(22, token2.getTokenType());
      
      xPathLexer0.setXPath("com.werken.saxpath.Token");
      xPathLexer0.consume();
      xPathLexer0.operatorName();
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(4, token3.getTokenType());
      assertEquals("o", token3.getTokenText());
      
      xPathLexer0.dollar();
      xPathLexer0.and();
      xPathLexer0.dollar();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token4 = xPathLexer1.pipe();
      assertEquals(17, token4.getTokenType());
      
      xPathLexer1.endPosition();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token5 = xPathLexer0.nextToken();
      assertEquals("werken.saxpath.Token", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
      
      Token token6 = xPathLexer2.dollar();
      assertEquals(26, token6.getTokenType());
      assertEquals("c", token6.getTokenText());
      
      xPathLexer0.consume(11);
      Token token7 = xPathLexer2.equals();
      assertEquals("o", token7.getTokenText());
      assertEquals(21, token7.getTokenType());
      
      int int0 = xPathLexer1.currentPosition();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.4842025887767094
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("AV|m,EEh8Ul0=,0E");
      Token token0 = xPathLexer0.at();
      assertEquals(16, token0.getTokenType());
      assertEquals("A", token0.getTokenText());
      
      xPathLexer0.identifier();
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.notEquals();
      assertEquals("m,", token2.getTokenText());
      
      xPathLexer0.setXPath("com.werken.saxpath.Token");
      xPathLexer0.consume();
      xPathLexer0.operatorName();
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(4, token3.getTokenType());
      assertEquals("o", token3.getTokenText());
      
      xPathLexer0.dollar();
      xPathLexer0.and();
      Token token4 = xPathLexer0.dollar();
      assertEquals(26, token4.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token5 = xPathLexer1.pipe();
      assertEquals(17, token5.getTokenType());
      
      xPathLexer1.consume();
      xPathLexer1.leftParen();
      xPathLexer1.endPosition();
      Token token6 = xPathLexer0.identifierOrOperatorName();
      assertNotNull(token6);
      assertEquals("werken.saxpath.Token", token6.getTokenText());
      
      xPathLexer1.consume(0);
      Token token7 = xPathLexer0.equals();
      assertEquals(21, token7.getTokenType());
      
      Token token8 = xPathLexer0.notEquals();
      assertEquals(22, token8.getTokenType());
      
      Token token9 = xPathLexer0.comma();
      assertEquals(32, token9.getTokenType());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.8797039514343221
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("MLpv8bZQZr<g| 3");
      xPathLexer0.consume();
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.star();
      assertEquals("L", token0.getTokenText());
      assertEquals(20, token0.getTokenType());
      
      xPathLexer0.rightBracket();
      xPathLexer0.dollar();
      xPathLexer0.and();
      Token token1 = xPathLexer0.dollar();
      assertEquals("8", token1.getTokenText());
      assertEquals(26, token1.getTokenType());
      
      Token token2 = xPathLexer0.pipe();
      assertEquals("b", token2.getTokenText());
      assertEquals(17, token2.getTokenType());
      
      xPathLexer0.endPosition();
      Token token3 = xPathLexer0.rightBracket();
      assertEquals("Z", token3.getTokenText());
      assertEquals(4, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("QZr", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
      
      Token token5 = xPathLexer0.identifierOrOperatorName();
      assertNull(token5);
      
      xPathLexer0.consume();
      xPathLexer0.consume((-6057));
      Token token6 = xPathLexer0.equals();
      assertEquals(21, token6.getTokenType());
      
      Token token7 = xPathLexer0.at();
      assertEquals(16, token7.getTokenType());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.087574988133992
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" dxew0M9+o");
      xPathLexer0.slashes();
      xPathLexer0.leftBracket();
      xPathLexer0.getPreviousToken();
      xPathLexer0.rightParen();
      xPathLexer0.star();
      xPathLexer0.doubleColon();
      xPathLexer0.or();
      xPathLexer0.colon();
      xPathLexer0.or();
      xPathLexer0.not();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer(" dxew0M9+o");
      xPathLexer1.nextToken();
      xPathLexer0.div();
      xPathLexer0.dollar();
      xPathLexer1.not();
      xPathLexer1.mod();
      xPathLexer1.consume();
      xPathLexer1.consume();
      xPathLexer0.currentPosition();
      Token token0 = xPathLexer0.slashes();
      xPathLexer0.getPreviousToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.plus();
      xPathLexer2.dollar();
      xPathLexer1.rightBracket();
      XPathLexer xPathLexer3 = new XPathLexer("I*iv^$3>la%7");
      xPathLexer3.leftParen();
      xPathLexer0.at();
      xPathLexer2.getPreviousToken();
      xPathLexer2.isIdentifierChar('|');
      xPathLexer0.equals();
      xPathLexer0.notEquals();
      xPathLexer2.comma();
      xPathLexer2.leftParen();
      Token token1 = xPathLexer1.pipe();
      assertFalse(token1.equals((Object)token0));
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.4729872141345286
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.equals();
      token0.toString();
      xPathLexer0.number();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.plus();
      xPathLexer0.and();
      xPathLexer0.operatorName();
      int int0 = (-267);
      xPathLexer0.consume((-267));
      xPathLexer0.colon();
      xPathLexer0.leftParen();
      // Undeclared exception!
      try { 
        xPathLexer0.identifierOrOperatorName();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.3777041090522673
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" dxew0M9+o");
      xPathLexer0.slashes();
      xPathLexer0.leftBracket();
      xPathLexer0.getPreviousToken();
      xPathLexer0.rightParen();
      xPathLexer0.star();
      Token token0 = xPathLexer0.doubleColon();
      xPathLexer0.or();
      xPathLexer0.colon();
      xPathLexer0.or();
      token0.toString();
      xPathLexer0.setPreviousToken((Token) null);
      xPathLexer0.plus();
      xPathLexer0.and();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer(" dxew0M9+o");
      xPathLexer1.consume(171);
      xPathLexer1.colon();
      xPathLexer0.leftParen();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer1.identifier();
      xPathLexer1.rightBracket();
      xPathLexer0.minus();
      xPathLexer0.rightParen();
      xPathLexer0.doubleColon();
      xPathLexer1.and();
      XPathLexer xPathLexer2 = new XPathLexer("[ (19) (w0)");
      xPathLexer2.number();
      xPathLexer1.doubleColon();
      xPathLexer1.slashes();
      xPathLexer2.hasMoreChars();
      xPathLexer2.getXPath();
      xPathLexer2.consume((-1));
      // Undeclared exception!
      try { 
        xPathLexer2.identifier();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.922114186797124
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\"gg1>?N)*8,+Me&?n{");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token0.getTokenType());
      assertNotNull(token0);
      
      Token token1 = xPathLexer0.pipe();
      assertEquals("\"", token1.getTokenText());
      assertEquals(17, token1.getTokenType());
      
      xPathLexer0.getPreviousToken();
      Token token2 = xPathLexer0.rightParen();
      assertEquals("g", token2.getTokenText());
      assertEquals(2, token2.getTokenType());
      
      Token token3 = xPathLexer0.doubleColon();
      assertEquals(19, token3.getTokenType());
      assertEquals("g1", token3.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.or();
      Token token4 = xPathLexer1.colon();
      assertEquals(18, token4.getTokenType());
      
      xPathLexer0.or();
      xPathLexer1.not();
      Token token5 = xPathLexer0.relationalOperator();
      assertEquals(9, token5.getTokenType());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals("?N)*8,+Me&?n{", token6.getTokenText());
      
      xPathLexer1.div();
      xPathLexer0.dollar();
      xPathLexer1.not();
      xPathLexer0.mod();
      xPathLexer1.consume();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.consume();
      xPathLexer2.currentPosition();
      Token token7 = xPathLexer2.slashes();
      assertEquals(11, token7.getTokenType());
      
      xPathLexer2.getPreviousToken();
      Token token8 = xPathLexer1.plus();
      assertEquals(5, token8.getTokenType());
      
      xPathLexer2.dollar();
      xPathLexer0.rightBracket();
      xPathLexer1.leftParen();
      XPathLexer xPathLexer3 = new XPathLexer("\"gg1>?N)*8,+Me&?n{");
      Token token9 = xPathLexer3.at();
      assertEquals(16, token9.getTokenType());
      assertEquals("\"", token9.getTokenText());
      
      xPathLexer2.getPreviousToken();
      Token token10 = xPathLexer3.dollar();
      assertEquals(26, token10.getTokenType());
      
      xPathLexer1.consume(11);
      Token token11 = xPathLexer3.equals();
      assertEquals(21, token11.getTokenType());
      assertEquals("g", token11.getTokenText());
      
      xPathLexer0.currentPosition();
      Token token12 = xPathLexer1.not();
      assertEquals(23, token12.getTokenType());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.681095545078155
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.colon();
      xPathLexer0.div();
      xPathLexer0.colon();
      // Undeclared exception!
      try { 
        xPathLexer0.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.werken.saxpath.XPathLexer", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.0301680997463922
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.equals();
      token0.toString();
      Token token1 = xPathLexer0.number();
      assertEquals("", token1.getTokenText());
      assertEquals(30, token1.getTokenType());
      
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (21) (c)", string0);
      
      xPathLexer0.setPreviousToken(token0);
      Token token2 = xPathLexer0.plus();
      assertEquals("o", token2.getTokenText());
      assertEquals(5, token2.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.operatorName();
      xPathLexer0.consume(0);
      Token token3 = xPathLexer0.colon();
      assertEquals("m", token3.getTokenText());
      assertEquals(18, token3.getTokenType());
      
      xPathLexer0.leftParen();
      xPathLexer0.identifierOrOperatorName();
      Token token4 = xPathLexer0.identifier();
      assertEquals(15, token4.getTokenType());
      
      Token token5 = xPathLexer0.rightBracket();
      assertEquals(4, token5.getTokenType());
      
      xPathLexer0.minus();
      Token token6 = xPathLexer0.rightParen();
      assertEquals(2, token6.getTokenType());
      
      Token token7 = xPathLexer0.doubleColon();
      assertEquals(19, token7.getTokenType());
      
      xPathLexer0.and();
      Token token8 = xPathLexer0.not();
      assertEquals(23, token8.getTokenType());
      
      Token token9 = xPathLexer0.slashes();
      assertEquals(11, token9.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token10 = xPathLexer0.dots();
      assertEquals(13, token10.getTokenType());
      
      xPathLexer0.minus();
      xPathLexer1.equals();
      int int0 = xPathLexer0.currentPosition();
      assertEquals(38, int0);
      
      Token token11 = xPathLexer0.comma();
      assertEquals(32, token11.getTokenType());
      
      Token token12 = xPathLexer0.minus();
      assertEquals(6, token12.getTokenType());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.950076993735298
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\"gg1>?N)*8,+Me&?n{");
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.pipe();
      xPathLexer0.equals();
      xPathLexer0.getPreviousToken();
      Token token0 = xPathLexer0.rightParen();
      xPathLexer0.or();
      xPathLexer0.slashes();
      xPathLexer0.literal();
      xPathLexer0.rightBracket();
      xPathLexer0.and();
      xPathLexer0.or();
      xPathLexer0.colon();
      xPathLexer0.colon();
      xPathLexer0.notEquals();
      xPathLexer0.div();
      token0.toString();
      token0.toString();
      xPathLexer0.star();
      xPathLexer0.isIdentifierChar('^');
      xPathLexer0.equals();
      xPathLexer0.relationalOperator();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.pipe();
      xPathLexer0.literal();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.dots();
      xPathLexer0.dots();
      xPathLexer0.getPreviousToken();
      xPathLexer0.and();
      Token token1 = xPathLexer0.at();
      assertFalse(token1.equals((Object)token0));
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.7839983145524902
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.number();
      Token token0 = xPathLexer0.identifier();
      xPathLexer0.consume();
      xPathLexer0.mod();
      xPathLexer0.at();
      xPathLexer0.div();
      xPathLexer0.colon();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.mod();
      xPathLexer0.setXPath("k.8DNDvT>");
      Token token1 = xPathLexer0.whitespace();
      xPathLexer0.rightParen();
      xPathLexer0.getPreviousToken();
      Token token2 = xPathLexer0.star();
      xPathLexer0.hasMoreChars();
      xPathLexer0.getXPath();
      xPathLexer0.identifierOrOperatorName();
      token2.toString();
      xPathLexer0.literal();
      xPathLexer0.doubleColon();
      xPathLexer0.getXPath();
      xPathLexer0.consume((-1058));
      int int0 = 1;
      xPathLexer0.setPreviousToken(token2);
      xPathLexer0.setPreviousToken(token1);
      xPathLexer0.pipe();
      // Undeclared exception!
      try { 
        xPathLexer0.literal();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.0685073099185187
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("N2UlPkvdb5q<9xb7c]I");
      xPathLexer0.leftBracket();
      Token token0 = xPathLexer0.minus();
      assertEquals(6, token0.getTokenType());
      assertEquals("2", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("UlPkvdb5q", token1.getTokenText());
      
      Token token2 = xPathLexer0.comma();
      assertEquals("<", token2.getTokenText());
      assertEquals(32, token2.getTokenType());
      
      xPathLexer0.consume();
      Token token3 = xPathLexer0.doubleColon();
      assertEquals(19, token3.getTokenType());
      assertEquals("xb", token3.getTokenText());
      
      Token token4 = xPathLexer0.colon();
      assertEquals("7", token4.getTokenText());
      assertEquals(18, token4.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.identifierOrOperatorName();
      Token token5 = xPathLexer0.leftBracket();
      assertEquals("c", token5.getTokenText());
      
      Token token6 = xPathLexer0.dollar();
      assertEquals("]", token6.getTokenText());
      
      xPathLexer0.or();
      Token token7 = xPathLexer0.pipe();
      assertEquals("I", token7.getTokenText());
      assertEquals(17, token7.getTokenType());
      
      Token token8 = xPathLexer0.not();
      assertEquals(23, token8.getTokenType());
      
      xPathLexer0.equals();
      Token token9 = xPathLexer0.leftBracket();
      assertEquals(3, token9.getTokenType());
      
      xPathLexer0.dollar();
      Token token10 = xPathLexer0.identifier();
      assertEquals(15, token10.getTokenType());
      
      xPathLexer0.mod();
      int int0 = xPathLexer0.endPosition();
      assertEquals(19, int0);
      
      XPathLexer xPathLexer1 = new XPathLexer("*lkT'^ekQ-cB_n^");
      Token token11 = xPathLexer1.nextToken();
      assertEquals(20, token11.getTokenType());
      assertEquals("*", token11.getTokenText());
      
      Token token12 = xPathLexer1.dollar();
      assertEquals(26, token12.getTokenType());
      
      xPathLexer1.consume(11);
      Token token13 = xPathLexer1.equals();
      assertEquals(21, token13.getTokenType());
      assertEquals("_", token13.getTokenText());
      
      int int1 = xPathLexer1.currentPosition();
      assertEquals(14, int1);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.046893818853051
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.equals();
      token0.toString();
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (21) (c)", string0);
      
      Token token2 = xPathLexer0.not();
      assertEquals("o", token2.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("m.werken.saxpath.XPathLexer", token3.getTokenText());
      
      xPathLexer0.div();
      xPathLexer0.dollar();
      xPathLexer0.not();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.mod();
      xPathLexer0.consume();
      xPathLexer1.consume();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.currentPosition();
      xPathLexer0.slashes();
      xPathLexer1.getPreviousToken();
      Token token4 = xPathLexer2.plus();
      assertEquals(5, token4.getTokenType());
      
      Token token5 = xPathLexer0.dollar();
      assertEquals(26, token5.getTokenType());
      
      Token token6 = xPathLexer1.rightBracket();
      assertEquals(4, token6.getTokenType());
      
      xPathLexer2.leftParen();
      Token token7 = xPathLexer1.at();
      assertEquals(16, token7.getTokenType());
      
      xPathLexer1.getPreviousToken();
      xPathLexer2.isIdentifierChar('c');
      Token token8 = xPathLexer2.not();
      assertEquals(23, token8.getTokenType());
      
      Token token9 = xPathLexer0.slashes();
      assertEquals(11, token9.getTokenType());
      
      xPathLexer1.doubleColon();
      xPathLexer1.equals();
      Token token10 = xPathLexer2.doubleColon();
      assertEquals(19, token10.getTokenType());
      
      Token token11 = xPathLexer2.dots();
      assertEquals(13, token11.getTokenType());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.131302392869925
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.setPreviousToken((Token) null);
      Token token0 = xPathLexer0.star();
      assertEquals(20, token0.getTokenType());
      
      xPathLexer0.consume();
      xPathLexer0.div();
      xPathLexer0.or();
      xPathLexer0.doubleColon();
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      
      xPathLexer0.rightBracket();
      xPathLexer0.getXPath();
      xPathLexer0.leftBracket();
      xPathLexer0.doubleColon();
      xPathLexer0.operatorName();
      xPathLexer0.operatorName();
      xPathLexer0.consume();
      Token token2 = xPathLexer0.not();
      assertEquals(23, token2.getTokenType());
      
      xPathLexer0.number();
      Token token3 = xPathLexer0.leftBracket();
      assertEquals(3, token3.getTokenType());
      
      xPathLexer0.currentPosition();
      xPathLexer0.colon();
      Token token4 = xPathLexer0.number();
      assertEquals(30, token4.getTokenType());
      
      Token token5 = xPathLexer0.colon();
      assertEquals(18, token5.getTokenType());
      
      Token token6 = xPathLexer0.plus();
      assertEquals(5, token6.getTokenType());
      
      xPathLexer0.rightBracket();
      Token token7 = xPathLexer0.identifier();
      assertEquals(15, token7.getTokenType());
      
      Token token8 = xPathLexer0.comma();
      assertEquals(32, token8.getTokenType());
      
      xPathLexer0.literal();
      Token token9 = xPathLexer0.doubleColon();
      assertEquals(19, token9.getTokenType());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.1492789167585133
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("MLpv8bZQZr<g| 3");
      xPathLexer0.consume();
      xPathLexer0.operatorName();
      xPathLexer0.rightBracket();
      xPathLexer0.dollar();
      xPathLexer0.number();
      xPathLexer0.and();
      xPathLexer0.comma();
      xPathLexer0.pipe();
      xPathLexer0.endPosition();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.consume(15);
      xPathLexer0.slashes();
      xPathLexer0.doubleColon();
      xPathLexer0.equals();
      xPathLexer0.doubleColon();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.9775122468743223
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.div();
      xPathLexer0.LA(159);
      xPathLexer0.mod();
      xPathLexer0.isIdentifierStartChar('\uFFFF');
      xPathLexer0.plus();
      xPathLexer0.doubleColon();
      xPathLexer0.pipe();
      xPathLexer0.dollar();
      xPathLexer0.at();
      xPathLexer0.rightParen();
      xPathLexer0.at();
      xPathLexer0.consume(288);
      xPathLexer0.or();
      xPathLexer0.slashes();
      xPathLexer0.dots();
      xPathLexer0.identifier();
      xPathLexer0.and();
      xPathLexer0.notEquals();
      xPathLexer0.currentPosition();
      xPathLexer0.rightParen();
      xPathLexer0.pipe();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.rightBracket();
      xPathLexer0.hasMoreChars();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.hasMoreChars();
      xPathLexer0.slashes();
      xPathLexer0.consume();
      xPathLexer0.at();
      xPathLexer0.consume(1386);
      assertNull(xPathLexer0.getXPath());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.7209588242322775
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.number();
      xPathLexer0.consume();
      Token token0 = xPathLexer0.star();
      xPathLexer0.notEquals();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.number();
      xPathLexer0.literal();
      xPathLexer0.star();
      xPathLexer0.plus();
      xPathLexer0.slashes();
      xPathLexer0.consume();
      xPathLexer0.getXPath();
      xPathLexer0.notEquals();
      xPathLexer0.or();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      String string0 = "AV|m,EE\\h8Ul0=,0E";
      XPathLexer xPathLexer0 = null;
      try {
        xPathLexer0 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.werken.saxpath.XPathLexer", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.416606829619551
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      
      char char0 = xPathLexer0.LA(159);
      assertEquals('\uFFFF', char0);
      
      xPathLexer0.mod();
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('\uFFFF');
      assertFalse(boolean0);
      
      Token token1 = xPathLexer0.plus();
      assertEquals(5, token1.getTokenType());
      
      Token token2 = xPathLexer0.doubleColon();
      assertEquals(19, token2.getTokenType());
      
      xPathLexer0.pipe();
      Token token3 = xPathLexer0.dollar();
      assertEquals(26, token3.getTokenType());
      
      xPathLexer0.at();
      xPathLexer0.rightParen();
      Token token4 = xPathLexer0.at();
      assertEquals(16, token4.getTokenType());
      
      xPathLexer0.consume(288);
      Token token5 = xPathLexer0.minus();
      assertEquals(6, token5.getTokenType());
      
      xPathLexer0.isIdentifierStartChar('J');
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.pipe();
      xPathLexer0.operatorName();
      Token token6 = xPathLexer1.slashes();
      assertEquals(11, token6.getTokenType());
      
      Token token7 = xPathLexer0.comma();
      assertEquals(32, token7.getTokenType());
      
      xPathLexer1.div();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.or();
      xPathLexer2.div();
      Token token8 = xPathLexer2.literal();
      assertNull(token8);
      
      XPathLexer xPathLexer3 = new XPathLexer("");
      xPathLexer3.number();
      Token token9 = xPathLexer3.identifier();
      assertEquals(15, token9.getTokenType());
      
      Token token10 = xPathLexer0.number();
      assertEquals(30, token10.getTokenType());
      
      Token token11 = xPathLexer3.rightParen();
      assertEquals(2, token11.getTokenType());
      
      xPathLexer3.relationalOperator();
      Token token12 = xPathLexer3.pipe();
      assertEquals(17, token12.getTokenType());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.9593678362297926
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" dxew0M9+o");
      xPathLexer0.slashes();
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(3, token0.getTokenType());
      
      xPathLexer0.getPreviousToken();
      Token token1 = xPathLexer0.rightParen();
      assertEquals(2, token1.getTokenType());
      
      Token token2 = xPathLexer0.star();
      assertEquals(20, token2.getTokenType());
      assertEquals("e", token2.getTokenText());
      
      xPathLexer0.colon();
      Token token3 = xPathLexer0.doubleColon();
      assertEquals("0M", token3.getTokenText());
      
      xPathLexer0.or();
      Token token4 = xPathLexer0.colon();
      assertEquals("9", token4.getTokenText());
      assertEquals(18, token4.getTokenType());
      
      Token token5 = xPathLexer0.literal();
      assertNull(token5);
      
      Token token6 = xPathLexer0.whitespace();
      assertEquals((-2), token6.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.not();
      xPathLexer0.relationalOperator();
      xPathLexer0.nextToken();
      xPathLexer0.div();
      Token token7 = xPathLexer0.notEquals();
      assertEquals(22, token7.getTokenType());
      
      xPathLexer0.dollar();
      Token token8 = xPathLexer0.not();
      assertEquals(23, token8.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.consume();
      xPathLexer0.consume();
      xPathLexer0.currentPosition();
      xPathLexer0.slashes();
      xPathLexer0.getPreviousToken();
      xPathLexer0.plus();
      xPathLexer0.dollar();
      xPathLexer0.rightBracket();
      Token token9 = xPathLexer0.leftParen();
      assertEquals(1, token9.getTokenType());
      
      Token token10 = xPathLexer0.at();
      assertEquals(16, token10.getTokenType());
      
      Token token11 = xPathLexer0.getPreviousToken();
      assertEquals((-1), token11.getTokenType());
      
      xPathLexer0.isIdentifierChar('|');
      Token token12 = xPathLexer0.slashes();
      assertEquals(11, token12.getTokenType());
      
      xPathLexer0.doubleColon();
      Token token13 = xPathLexer0.equals();
      assertEquals(21, token13.getTokenType());
      
      Token token14 = xPathLexer0.doubleColon();
      assertEquals(19, token14.getTokenType());
      
      Token token15 = xPathLexer0.plus();
      assertEquals(5, token15.getTokenType());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.5412544638672125
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.colon();
      xPathLexer0.colon();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.plus();
      xPathLexer0.consume((-1829));
      xPathLexer0.rightParen();
      xPathLexer0.star();
      xPathLexer0.equals();
      xPathLexer0.leftBracket();
      xPathLexer0.equals();
      xPathLexer0.pipe();
      xPathLexer0.comma();
      xPathLexer0.dollar();
      xPathLexer0.leftBracket();
      // Undeclared exception!
      try { 
        xPathLexer0.div();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.8341394937719384
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" dxew0M9+o");
      Token token0 = xPathLexer0.leftParen();
      assertEquals(1, token0.getTokenType());
      assertEquals(" ", token0.getTokenText());
      
      xPathLexer0.getPreviousToken();
      Token token1 = xPathLexer0.rightParen();
      assertEquals(2, token1.getTokenType());
      
      Token token2 = xPathLexer0.star();
      assertEquals(20, token2.getTokenType());
      assertEquals("x", token2.getTokenText());
      
      Token token3 = xPathLexer0.doubleColon();
      assertEquals(19, token3.getTokenType());
      
      xPathLexer0.or();
      Token token4 = xPathLexer0.colon();
      assertEquals("0", token4.getTokenText());
      
      xPathLexer0.or();
      xPathLexer0.not();
      xPathLexer0.relationalOperator();
      Token token5 = xPathLexer0.nextToken();
      assertEquals(30, token5.getTokenType());
      
      xPathLexer0.div();
      Token token6 = xPathLexer0.dollar();
      assertEquals("+", token6.getTokenText());
      
      Token token7 = xPathLexer0.not();
      assertEquals("o", token7.getTokenText());
      assertEquals(23, token7.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.consume();
      xPathLexer0.and();
      xPathLexer0.consume();
      xPathLexer0.endPosition();
      XPathLexer xPathLexer1 = new XPathLexer("<~ Vp:}z");
      Token token8 = xPathLexer1.nextToken();
      assertEquals("<", token8.getTokenText());
      assertEquals(7, token8.getTokenType());
      
      Token token9 = xPathLexer1.nextToken();
      assertEquals((-1), token9.getTokenType());
      
      xPathLexer0.consume();
      Token token10 = xPathLexer0.dollar();
      assertEquals(26, token10.getTokenType());
      
      xPathLexer1.consume(10);
      Token token11 = xPathLexer0.equals();
      assertEquals(21, token11.getTokenType());
      
      Token token12 = xPathLexer1.comma();
      assertEquals(32, token12.getTokenType());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.374862601972864
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
      
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.mod();
      xPathLexer0.relationalOperator();
      xPathLexer0.relationalOperator();
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
      
      xPathLexer0.div();
      Token token3 = xPathLexer0.dollar();
      assertEquals(26, token3.getTokenType());
      
      Token token4 = xPathLexer0.leftBracket();
      assertEquals(3, token4.getTokenType());
      
      xPathLexer0.at();
      Token token5 = xPathLexer0.colon();
      assertEquals(18, token5.getTokenType());
      
      Token token6 = xPathLexer0.at();
      assertEquals(16, token6.getTokenType());
      
      Token token7 = xPathLexer0.leftParen();
      assertEquals(1, token7.getTokenType());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(0, int0);
      
      Token token8 = xPathLexer0.identifier();
      assertEquals(15, token8.getTokenType());
      
      char char0 = xPathLexer0.LA(61);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.5266329079175125
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\"gg1>?N)*8,+Me&?n{");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.pipe();
      assertEquals("\"", token0.getTokenText());
      
      xPathLexer0.div();
      Token token1 = xPathLexer0.plus();
      assertEquals(5, token1.getTokenType());
      
      Token token2 = xPathLexer0.rightParen();
      xPathLexer0.or();
      Token token3 = xPathLexer0.slashes();
      assertEquals("1", token3.getTokenText());
      
      Token token4 = xPathLexer0.comma();
      assertEquals(32, token4.getTokenType());
      assertEquals(">", token4.getTokenText());
      
      Token token5 = xPathLexer0.rightBracket();
      assertEquals("?", token5.getTokenText());
      
      xPathLexer0.and();
      xPathLexer0.mod();
      xPathLexer0.colon();
      Token token6 = xPathLexer0.colon();
      assertEquals(")", token6.getTokenText());
      assertEquals(18, token6.getTokenType());
      
      Token token7 = xPathLexer0.notEquals();
      assertEquals(22, token7.getTokenType());
      assertEquals("*8", token7.getTokenText());
      
      xPathLexer0.div();
      Token token8 = xPathLexer0.whitespace();
      assertEquals((-2), token8.getTokenType());
      
      token2.toString();
      token2.toString();
      Token token9 = xPathLexer0.star();
      assertEquals(20, token9.getTokenType());
      assertEquals("+", token9.getTokenText());
      
      String string0 = token2.toString();
      assertEquals("[ (2) (g)", string0);
      
      boolean boolean0 = xPathLexer0.isIdentifierChar('^');
      assertFalse(boolean0);
      
      Token token10 = xPathLexer0.equals();
      assertEquals("M", token10.getTokenText());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.setPreviousToken(token2);
      xPathLexer0.pipe();
      xPathLexer0.literal();
      Token token11 = xPathLexer0.leftBracket();
      assertEquals(3, token11.getTokenType());
      
      Token token12 = xPathLexer0.literal();
      assertNull(token12);
      
      Token token13 = xPathLexer0.number();
      assertEquals(30, token13.getTokenType());
      
      Token token14 = xPathLexer0.identifier();
      assertEquals(15, token14.getTokenType());
      
      Token token15 = xPathLexer0.not();
      assertEquals(23, token15.getTokenType());
      
      xPathLexer0.rightParen();
      xPathLexer0.relationalOperator();
      xPathLexer0.pipe();
      Token token16 = xPathLexer0.rightBracket();
      assertEquals(4, token16.getTokenType());
      
      Token token17 = xPathLexer0.at();
      assertEquals(16, token17.getTokenType());
      
      Token token18 = xPathLexer0.pipe();
      assertEquals(17, token18.getTokenType());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.798401185569139
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" dxew0M9+o");
      xPathLexer0.slashes();
      xPathLexer0.and();
      xPathLexer0.leftBracket();
      xPathLexer0.getPreviousToken();
      xPathLexer0.rightParen();
      xPathLexer0.star();
      xPathLexer0.doubleColon();
      xPathLexer0.or();
      xPathLexer0.colon();
      xPathLexer0.or();
      xPathLexer0.not();
      xPathLexer0.relationalOperator();
      xPathLexer0.nextToken();
      xPathLexer0.div();
      xPathLexer0.dollar();
      xPathLexer0.not();
      xPathLexer0.mod();
      xPathLexer0.consume();
      xPathLexer0.consume();
      xPathLexer0.currentPosition();
      xPathLexer0.slashes();
      xPathLexer0.getPreviousToken();
      xPathLexer0.plus();
      xPathLexer0.dollar();
      xPathLexer0.rightBracket();
      xPathLexer0.leftParen();
      xPathLexer0.nextToken();
      xPathLexer0.dots();
      xPathLexer0.LA(13);
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.5248844192193602
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.colon();
      xPathLexer0.div();
      xPathLexer0.colon();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.consume((-1829));
      xPathLexer0.rightParen();
      xPathLexer0.star();
      xPathLexer0.equals();
      xPathLexer0.leftBracket();
      xPathLexer0.equals();
      xPathLexer0.pipe();
      xPathLexer0.comma();
      xPathLexer0.dollar();
      xPathLexer0.leftBracket();
      xPathLexer0.dollar();
      // Undeclared exception!
      try { 
        xPathLexer0.relationalOperator();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.0927255947646022
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      Token token1 = xPathLexer0.comma();
      assertEquals(32, token1.getTokenType());
      
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
      
      Token token3 = xPathLexer0.star();
      assertEquals(20, token3.getTokenType());
      
      Token token4 = xPathLexer0.notEquals();
      assertEquals(22, token4.getTokenType());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.4220604250807662
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.and();
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      
      xPathLexer0.pipe();
      xPathLexer0.pipe();
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      
      Token token2 = xPathLexer0.pipe();
      assertEquals(17, token2.getTokenType());
      
      xPathLexer0.getPreviousToken();
      Token token3 = xPathLexer0.equals();
      assertEquals(21, token3.getTokenType());
      
      Token token4 = xPathLexer0.colon();
      assertEquals(18, token4.getTokenType());
      
      Token token5 = xPathLexer0.number();
      assertEquals(30, token5.getTokenType());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.9167117813628654
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      xPathLexer0.number();
      xPathLexer0.number();
      xPathLexer0.div();
      xPathLexer0.dollar();
      xPathLexer0.literal();
      xPathLexer0.setXPath("");
      xPathLexer0.pipe();
      xPathLexer0.minus();
      xPathLexer0.div();
      xPathLexer0.not();
      xPathLexer0.nextToken();
      xPathLexer0.comma();
      xPathLexer0.minus();
      xPathLexer0.isIdentifierStartChar('[');
      xPathLexer0.pipe();
      xPathLexer0.operatorName();
      xPathLexer0.slashes();
      xPathLexer0.number();
      xPathLexer0.comma();
      xPathLexer0.div();
      xPathLexer0.or();
      xPathLexer0.div();
      xPathLexer0.dots();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.nextToken();
      xPathLexer1.dots();
      xPathLexer0.getPreviousToken();
      xPathLexer0.and();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-2783));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.97933376401036
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.equals();
      token0.toString();
      xPathLexer0.number();
      token0.toString();
      token0.toString();
      xPathLexer0.minus();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.plus();
      xPathLexer0.and();
      xPathLexer0.operatorName();
      xPathLexer0.consume(0);
      xPathLexer0.colon();
      xPathLexer0.leftParen();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.identifier();
      xPathLexer0.rightBracket();
      xPathLexer0.dots();
      xPathLexer0.minus();
      xPathLexer0.rightParen();
      xPathLexer0.leftBracket();
      xPathLexer0.and();
      xPathLexer0.number();
      xPathLexer0.doubleColon();
      xPathLexer0.slashes();
      xPathLexer0.hasMoreChars();
      xPathLexer0.star();
      xPathLexer0.setPreviousToken(token1);
      Token token2 = xPathLexer0.div();
      assertNull(token2);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.9360532042516039
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\"gg1>?N)*8,+Me&?n{");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      xPathLexer0.pipe();
      xPathLexer0.getPreviousToken();
      xPathLexer0.rightParen();
      xPathLexer0.star();
      xPathLexer0.doubleColon();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.or();
      xPathLexer1.colon();
      xPathLexer0.or();
      xPathLexer1.not();
      xPathLexer0.relationalOperator();
      xPathLexer0.nextToken();
      xPathLexer1.div();
      xPathLexer0.dollar();
      xPathLexer1.not();
      xPathLexer0.mod();
      xPathLexer1.consume();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.consume();
      xPathLexer2.currentPosition();
      xPathLexer2.slashes();
      xPathLexer2.getPreviousToken();
      xPathLexer1.plus();
      xPathLexer2.dollar();
      xPathLexer0.rightBracket();
      xPathLexer1.leftParen();
      XPathLexer xPathLexer3 = new XPathLexer("\"gg1>?N)*8,+Me&?n{");
      xPathLexer3.at();
      xPathLexer2.getPreviousToken();
      xPathLexer3.dollar();
      xPathLexer1.consume(11);
      xPathLexer3.equals();
      xPathLexer0.currentPosition();
      Token token1 = xPathLexer1.not();
      assertFalse(token1.equals((Object)token0));
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.75048868246548
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" dxew0M9+o");
      xPathLexer0.slashes();
      xPathLexer0.leftBracket();
      xPathLexer0.getPreviousToken();
      xPathLexer0.rightParen();
      xPathLexer0.star();
      xPathLexer0.doubleColon();
      xPathLexer0.or();
      xPathLexer0.colon();
      xPathLexer0.or();
      xPathLexer0.not();
      xPathLexer0.relationalOperator();
      xPathLexer0.nextToken();
      xPathLexer0.div();
      xPathLexer0.dollar();
      xPathLexer0.not();
      xPathLexer0.mod();
      xPathLexer0.consume();
      xPathLexer0.consume();
      xPathLexer0.currentPosition();
      xPathLexer0.slashes();
      xPathLexer0.getPreviousToken();
      xPathLexer0.plus();
      xPathLexer0.dollar();
      xPathLexer0.rightBracket();
      xPathLexer0.leftParen();
      xPathLexer0.mod();
      xPathLexer0.getPreviousToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.getXPath();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.colon();
      xPathLexer2.operatorName();
      xPathLexer0.consume();
      xPathLexer2.consume(13);
      assertFalse(xPathLexer2.equals((Object)xPathLexer1));
  }

  /**
  //Test case number: 35
  /*Coverage entropy=3.6827618449254027
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("AV|m,EEh8Ul0=,0E");
      xPathLexer0.at();
      Token token0 = xPathLexer0.identifier();
      Token token1 = xPathLexer0.notEquals();
      token1.toString();
      xPathLexer0.currentPosition();
      token1.toString();
      token0.toString();
      xPathLexer0.leftParen();
      xPathLexer0.comma();
      xPathLexer0.leftBracket();
      xPathLexer0.dollar();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.identifier();
      xPathLexer0.mod();
      xPathLexer0.rightParen();
      xPathLexer1.leftParen();
      XPathLexer xPathLexer2 = new XPathLexer("[ (22) (|m)");
      xPathLexer0.equals();
      xPathLexer1.getPreviousToken();
      xPathLexer2.isIdentifierStartChar('I');
      XPathLexer xPathLexer3 = new XPathLexer("[ (15) (V)");
      xPathLexer3.hasMoreChars();
      xPathLexer3.slashes();
      xPathLexer1.not();
      XPathLexer xPathLexer4 = new XPathLexer("AV|m,EEh8Ul0=,0E");
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer4.dots();
      xPathLexer3.minus();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer6.equals();
      xPathLexer1.currentPosition();
      Token token2 = xPathLexer6.and();
      assertNull(token2);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.27169807473
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.div();
      xPathLexer0.identifier();
      xPathLexer0.setXPath("IB{h");
      xPathLexer0.and();
      Token token0 = xPathLexer0.comma();
      assertEquals(32, token0.getTokenType());
      assertEquals("I", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals("B", token1.getTokenText());
      
      Token token2 = xPathLexer0.doubleColon();
      assertEquals("{h", token2.getTokenText());
      
      xPathLexer0.setXPath("IB{h");
      xPathLexer0.operatorName();
      Token token3 = xPathLexer0.dots();
      assertEquals(13, token3.getTokenType());
      
      xPathLexer0.nextToken();
      Token token4 = xPathLexer0.pipe();
      assertEquals("{", token4.getTokenText());
      
      Token token5 = xPathLexer0.whitespace();
      assertEquals("", token5.getTokenText());
      assertEquals((-2), token5.getTokenType());
      
      Token token6 = xPathLexer0.not();
      assertEquals(23, token6.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.equals();
      xPathLexer0.number();
      xPathLexer0.identifierOrOperatorName();
      Token token7 = xPathLexer0.leftBracket();
      assertEquals(3, token7.getTokenType());
      
      Token token8 = xPathLexer0.rightBracket();
      assertEquals(4, token8.getTokenType());
      
      xPathLexer0.leftParen();
      xPathLexer0.at();
      xPathLexer0.slashes();
      Token token9 = xPathLexer0.getPreviousToken();
      assertEquals(15, token9.getTokenType());
      assertEquals("B", token9.getTokenText());
      
      Token token10 = xPathLexer0.slashes();
      assertEquals(11, token10.getTokenType());
      
      xPathLexer0.doubleColon();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token11 = xPathLexer1.equals();
      assertEquals(21, token11.getTokenType());
      
      Token token12 = xPathLexer1.doubleColon();
      assertEquals(19, token12.getTokenType());
      
      Token token13 = xPathLexer1.star();
      assertEquals(20, token13.getTokenType());
      
      Token token14 = xPathLexer1.pipe();
      assertEquals(17, token14.getTokenType());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.945470594129494
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.equals();
      token0.toString();
      xPathLexer0.number();
      token0.toString();
      token0.toString();
      xPathLexer0.minus();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.plus();
      xPathLexer0.and();
      xPathLexer0.operatorName();
      xPathLexer0.consume(0);
      xPathLexer0.colon();
      xPathLexer0.leftParen();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.identifier();
      xPathLexer0.rightBracket();
      xPathLexer0.dots();
      xPathLexer0.minus();
      xPathLexer0.rightParen();
      xPathLexer0.doubleColon();
      xPathLexer0.and();
      xPathLexer0.number();
      xPathLexer0.doubleColon();
      xPathLexer0.slashes();
      xPathLexer0.hasMoreChars();
      xPathLexer0.getXPath();
      xPathLexer0.star();
      xPathLexer0.setPreviousToken(token1);
      Token token2 = xPathLexer0.div();
      assertNull(token2);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.2065769311189203
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("N2UlPkvdb5q<9xb7c]I");
      xPathLexer0.leftBracket();
      xPathLexer0.minus();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("UlPkvdb5q", token0.getTokenText());
      
      Token token1 = xPathLexer0.comma();
      assertEquals("<", token1.getTokenText());
      
      xPathLexer0.consume();
      xPathLexer0.doubleColon();
      xPathLexer0.colon();
      xPathLexer0.and();
      xPathLexer0.identifierOrOperatorName();
      Token token2 = xPathLexer0.leftBracket();
      assertEquals(3, token2.getTokenType());
      assertEquals("c", token2.getTokenText());
      
      Token token3 = xPathLexer0.dollar();
      assertEquals(26, token3.getTokenType());
      assertEquals("]", token3.getTokenText());
      
      xPathLexer0.or();
      Token token4 = xPathLexer0.pipe();
      assertEquals(17, token4.getTokenType());
      
      xPathLexer0.not();
      xPathLexer0.equals();
      xPathLexer0.consume(118);
      XPathLexer xPathLexer1 = new XPathLexer("}CeghXgd7%_Tgrw");
      Token token5 = xPathLexer1.colon();
      assertEquals("}", token5.getTokenText());
      assertEquals(18, token5.getTokenType());
      
      xPathLexer0.leftParen();
      xPathLexer0.identifierOrOperatorName();
      Token token6 = xPathLexer0.identifier();
      assertEquals(15, token6.getTokenType());
      
      Token token7 = xPathLexer1.rightBracket();
      assertEquals(4, token7.getTokenType());
      
      xPathLexer1.minus();
      Token token8 = xPathLexer0.rightParen();
      assertEquals(2, token8.getTokenType());
      
      Token token9 = xPathLexer1.doubleColon();
      assertEquals("gh", token9.getTokenText());
      assertEquals(19, token9.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.not();
      Token token10 = xPathLexer0.slashes();
      assertEquals(11, token10.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token11 = xPathLexer1.dots();
      assertEquals("X", token11.getTokenText());
      assertEquals(13, token11.getTokenType());
      
      Token token12 = xPathLexer1.minus();
      assertEquals("g", token12.getTokenText());
      
      Token token13 = xPathLexer0.equals();
      assertEquals(21, token13.getTokenType());
      
      xPathLexer1.currentPosition();
      Token token14 = xPathLexer0.comma();
      assertEquals(32, token14.getTokenType());
      
      Token token15 = xPathLexer0.minus();
      assertEquals(6, token15.getTokenType());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=3.6916652346819494
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\"gg1>?N)*8,+Me&?n{");
      Token token0 = xPathLexer0.star();
      assertEquals("\"", token0.getTokenText());
      
      Token token1 = xPathLexer0.pipe();
      assertEquals("g", token1.getTokenText());
      
      xPathLexer0.div();
      Token token2 = xPathLexer0.plus();
      assertEquals("g", token2.getTokenText());
      assertEquals(5, token2.getTokenType());
      
      Token token3 = xPathLexer0.rightParen();
      xPathLexer0.or();
      Token token4 = xPathLexer0.slashes();
      assertEquals(11, token4.getTokenType());
      
      Token token5 = xPathLexer0.literal();
      assertEquals("N)*8,+Me&", token5.getTokenText());
      assertNotNull(token5);
      
      Token token6 = xPathLexer0.rightBracket();
      assertEquals(4, token6.getTokenType());
      assertEquals("n", token6.getTokenText());
      
      xPathLexer0.and();
      xPathLexer0.or();
      Token token7 = xPathLexer0.colon();
      assertEquals("{", token7.getTokenText());
      
      Token token8 = xPathLexer0.colon();
      assertEquals(18, token8.getTokenType());
      
      Token token9 = xPathLexer0.notEquals();
      assertEquals(22, token9.getTokenType());
      
      xPathLexer0.div();
      Token token10 = xPathLexer0.whitespace();
      assertEquals((-2), token10.getTokenType());
      
      token3.toString();
      token3.toString();
      Token token11 = xPathLexer0.star();
      assertEquals(20, token11.getTokenType());
      
      token3.toString();
      boolean boolean0 = xPathLexer0.isIdentifierChar('Z');
      assertTrue(boolean0);
      
      String string0 = token3.toString();
      assertEquals("[ (2) (1)", string0);
      
      xPathLexer0.equals();
      xPathLexer0.relationalOperator();
      xPathLexer0.setPreviousToken(token3);
      Token token12 = xPathLexer0.pipe();
      assertEquals(17, token12.getTokenType());
      
      xPathLexer0.literal();
      Token token13 = xPathLexer0.leftBracket();
      assertEquals(3, token13.getTokenType());
      
      Token token14 = xPathLexer0.equals();
      assertEquals(21, token14.getTokenType());
      
      Token token15 = xPathLexer0.dots();
      assertEquals(13, token15.getTokenType());
      
      xPathLexer0.getPreviousToken();
      xPathLexer0.and();
      xPathLexer0.LA(111);
      Token token16 = xPathLexer0.at();
      assertEquals(16, token16.getTokenType());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.916536247334834
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("jmyz4G([@h[Y");
      Token token0 = xPathLexer0.minus();
      assertEquals(6, token0.getTokenType());
      assertEquals("j", token0.getTokenText());
      
      Token token1 = xPathLexer0.colon();
      assertEquals("m", token1.getTokenText());
      assertEquals(18, token1.getTokenType());
      
      Token token2 = xPathLexer0.pipe();
      assertEquals("y", token2.getTokenText());
      
      xPathLexer0.consume((-1));
      Token token3 = xPathLexer0.literal();
      assertNull(token3);
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token4 = xPathLexer1.number();
      assertEquals(30, token4.getTokenType());
      
      Token token5 = xPathLexer1.identifier();
      assertEquals(15, token5.getTokenType());
      
      Token token6 = xPathLexer0.not();
      assertEquals(23, token6.getTokenType());
      
      Token token7 = xPathLexer0.rightParen();
      assertEquals(2, token7.getTokenType());
      
      xPathLexer1.relationalOperator();
      Token token8 = xPathLexer0.pipe();
      assertEquals(17, token8.getTokenType());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.2472418381704546
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.leftBracket();
      Token token0 = xPathLexer0.star();
      assertEquals(20, token0.getTokenType());
      
      xPathLexer0.literal();
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      
      Token token2 = xPathLexer0.leftParen();
      assertEquals(1, token2.getTokenType());
      
      int int0 = xPathLexer0.currentPosition();
      assertEquals(5, int0);
      
      Token token3 = xPathLexer0.leftBracket();
      assertEquals(3, token3.getTokenType());
      
      Token token4 = xPathLexer0.notEquals();
      assertEquals(22, token4.getTokenType());
      
      Token token5 = xPathLexer0.dollar();
      assertEquals(26, token5.getTokenType());
      
      Token token6 = xPathLexer0.colon();
      assertEquals(18, token6.getTokenType());
      
      Token token7 = xPathLexer0.not();
      assertEquals(23, token7.getTokenType());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=3.0584236707120644
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.dollar();
      assertEquals("c", token0.getTokenText());
      
      xPathLexer0.div();
      Token token1 = xPathLexer0.comma();
      assertEquals(32, token1.getTokenType());
      assertEquals("o", token1.getTokenText());
      
      xPathLexer0.plus();
      Token token2 = xPathLexer0.notEquals();
      assertEquals(".w", token2.getTokenText());
      
      Token token3 = xPathLexer0.leftBracket();
      assertEquals(3, token3.getTokenType());
      assertEquals("e", token3.getTokenText());
      
      Token token4 = xPathLexer0.colon();
      assertEquals(18, token4.getTokenType());
      assertEquals("r", token4.getTokenText());
      
      xPathLexer0.currentPosition();
      xPathLexer0.relationalOperator();
      Token token5 = xPathLexer0.at();
      assertEquals("k", token5.getTokenText());
      assertEquals(16, token5.getTokenType());
      
      xPathLexer0.pipe();
      Token token6 = xPathLexer0.pipe();
      assertEquals("n", token6.getTokenText());
      assertEquals(17, token6.getTokenType());
      
      xPathLexer0.equals();
      xPathLexer0.or();
      Token token7 = xPathLexer0.plus();
      assertEquals(5, token7.getTokenType());
      assertEquals("s", token7.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token8 = xPathLexer0.equals();
      assertEquals("a", token8.getTokenText());
      assertEquals(21, token8.getTokenType());
      
      char char0 = xPathLexer0.LA((-1));
      assertEquals('s', char0);
      
      Token token9 = xPathLexer0.dots();
      assertEquals("x", token9.getTokenText());
      assertEquals(13, token9.getTokenType());
      
      Token token10 = xPathLexer0.slashes();
      assertEquals(11, token10.getTokenType());
      
      Token token11 = xPathLexer0.number();
      assertEquals("", token11.getTokenText());
      assertEquals(30, token11.getTokenType());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=3.4104593844336333
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("AV|m,EEh8Ul0=,0E");
      Token token0 = xPathLexer0.at();
      assertEquals(16, token0.getTokenType());
      assertEquals("A", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifier();
      assertEquals("V", token1.getTokenText());
      
      Token token2 = xPathLexer0.whitespace();
      assertEquals((-2), token2.getTokenType());
      assertEquals("", token2.getTokenText());
      
      Token token3 = xPathLexer0.notEquals();
      String string0 = token3.toString();
      assertEquals("[ (22) (m,)", string0);
      
      xPathLexer0.currentPosition();
      Token token4 = xPathLexer0.identifierOrOperatorName();
      token4.toString();
      token4.toString();
      xPathLexer0.leftParen();
      Token token5 = xPathLexer0.comma();
      assertEquals(",", token5.getTokenText());
      
      xPathLexer0.mod();
      token4.toString();
      xPathLexer0.relationalOperator();
      String string1 = token4.toString();
      assertEquals("[ (15) (EEh8Ul0)", string1);
      
      xPathLexer0.operatorName();
      Token token6 = xPathLexer0.slashes();
      assertEquals(11, token6.getTokenType());
      assertEquals("0", token6.getTokenText());
      
      Token token7 = xPathLexer0.number();
      assertEquals("", token7.getTokenText());
      
      Token token8 = xPathLexer0.comma();
      assertEquals(32, token8.getTokenType());
      
      xPathLexer0.div();
      xPathLexer0.or();
      Token token9 = xPathLexer0.literal();
      assertNull(token9);
      
      Token token10 = xPathLexer0.number();
      assertEquals(30, token10.getTokenType());
      
      xPathLexer0.identifier();
      Token token11 = xPathLexer0.not();
      assertEquals(23, token11.getTokenType());
      
      Token token12 = xPathLexer0.rightParen();
      assertEquals(2, token12.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token13 = xPathLexer0.pipe();
      assertEquals(17, token13.getTokenType());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=3.1210346366130266
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("}:_4{Lp'`9~_9");
      Token token1 = xPathLexer1.not();
      assertEquals("}", token1.getTokenText());
      
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.operatorName();
      xPathLexer0.equals();
      Token token2 = xPathLexer1.number();
      assertEquals("", token2.getTokenText());
      assertEquals(30, token2.getTokenType());
      
      Token token3 = xPathLexer2.identifierOrOperatorName();
      assertEquals(15, token3.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("[ (");
      Token token4 = xPathLexer3.leftBracket();
      assertEquals(3, token4.getTokenType());
      assertEquals("[", token4.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.equals();
      Token token5 = xPathLexer4.leftParen();
      assertEquals(1, token5.getTokenType());
      
      Token token6 = xPathLexer2.at();
      assertEquals(16, token6.getTokenType());
      
      xPathLexer2.slashes();
      Token token7 = xPathLexer0.slashes();
      assertEquals(11, token7.getTokenType());
      
      Token token8 = xPathLexer2.doubleColon();
      assertEquals(19, token8.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token9 = xPathLexer3.equals();
      assertEquals(" ", token9.getTokenText());
      assertEquals(21, token9.getTokenType());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.6605311839223327
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("8W&T");
      Token token0 = xPathLexer0.identifier();
      assertEquals(15, token0.getTokenType());
      assertEquals("8W", token0.getTokenText());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=3.18079068549453
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      
      Token token2 = xPathLexer0.plus();
      assertEquals(5, token2.getTokenType());
      
      Token token3 = xPathLexer0.leftBracket();
      assertEquals(3, token3.getTokenType());
      
      Token token4 = xPathLexer0.dollar();
      assertEquals(26, token4.getTokenType());
      
      Token token5 = xPathLexer0.slashes();
      assertEquals(11, token5.getTokenType());
      
      Token token6 = xPathLexer0.minus();
      assertEquals(6, token6.getTokenType());
      
      Token token7 = xPathLexer0.rightParen();
      assertEquals(2, token7.getTokenType());
      
      Token token8 = xPathLexer0.pipe();
      assertEquals(17, token8.getTokenType());
  }
}
