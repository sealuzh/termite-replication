/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Wed Dec 04 11:21:06 GMT 2019
 */

package wheel.components;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

@EvoSuiteClassExclude
public class Component_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "wheel.components.Component"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("file.encoding", "UTF-8"); 
    java.lang.System.setProperty("java.awt.headless", "true"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
    java.lang.System.setProperty("user.country", "US"); 
    java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/80_wheelwebtool"); 
    java.lang.System.setProperty("user.home", "/home/ubuntu"); 
    java.lang.System.setProperty("user.language", "en"); 
    java.lang.System.setProperty("user.name", "ubuntu"); 
    java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Component_ESTest_scaffolding.class.getClassLoader() ,
      "wheel.components.Image",
      "wheel.components.ComponentCreator",
      "wheel.persistence.IObjectStore",
      "wheel.util.AbstractDateConversionHandler",
      "wheel.IMessagesSource",
      "org.xmlpull.v1.XmlSerializer",
      "org.xmlpull.v1.wrapper.classic.StaticXmlSerializerWrapper",
      "wheel.util.CalendarConversionHandler",
      "org.mvel.conversion.ByteCH$3",
      "org.mvel.conversion.BigIntegerCH",
      "wheel.components.StandaloneComponent",
      "wheel.components.ActionExpression",
      "wheel.util.DateConversionHandler",
      "wheel.components.RenderableComponent",
      "wheel.components.IContainer",
      "wheel.IEngine",
      "wheel.Asset",
      "org.mvel.conversion.StringCH",
      "org.xmlpull.v1.XmlPullParser",
      "wheel.components.Table",
      "org.xmlpull.v1.wrapper.XmlPullWrapperFactory",
      "wheel.components.Radio",
      "wheel.components.Text",
      "org.mvel.conversion.ShortCH$10",
      "org.mvel.conversion.ByteCH$2",
      "org.mvel.conversion.ByteCH$1",
      "org.mvel.conversion.StringArrayCH$1",
      "wheel.components.IBuildableComponent",
      "org.xmlpull.v1.XmlPullParserFactory",
      "wheel.components.CheckboxGroup",
      "wheel.components.TableRow",
      "org.mvel.conversion.IntegerCH",
      "org.mvel.conversion.ByteCH",
      "org.mvel.conversion.LongCH$7",
      "org.mvel.conversion.DoubleCH$10",
      "wheel.components.Any",
      "org.mvel.conversion.LongCH$8",
      "org.xmlpull.v1.wrapper.classic.XmlSerializerDelegate",
      "org.mvel.conversion.BooleanCH$10",
      "org.mvel.conversion.LongCH$3",
      "org.mvel.conversion.LongCH$4",
      "org.mvel.conversion.LongCH$5",
      "org.mvel.conversion.LongCH$6",
      "wheel.components.FileInput",
      "wheel.components.TableBlock",
      "org.xmlpull.mxp1_serializer.MXSerializer",
      "org.mvel.conversion.LongCH$1",
      "wheel.components.Form$Method",
      "org.mvel.conversion.LongCH$2",
      "org.mvel.conversion.FloatCH$10",
      "wheel.util.WrappedException",
      "wheel.IResourceManager",
      "wheel.Asset$AssetType",
      "org.mvel.conversion.LongCH",
      "org.mvel.ConversionHandler",
      "wheel.util.WheelURL",
      "org.mvel.conversion.ShortCH",
      "org.mvel.conversion.CharCH$5",
      "wheel.util.Entry",
      "org.mvel.conversion.BooleanCH$1",
      "org.mvel.conversion.FloatCH",
      "org.mvel.conversion.BooleanCH$2",
      "wheel.ErrorPage",
      "org.xmlpull.v1.wrapper.XmlSerializerWrapper",
      "org.mvel.conversion.BooleanCH$5",
      "org.xmlpull.v1.wrapper.XmlPullParserWrapper",
      "org.mvel.conversion.BooleanCH$6",
      "org.mvel.conversion.BooleanCH$3",
      "org.mvel.conversion.CharArrayCH$1",
      "org.mvel.conversion.BooleanCH$4",
      "org.mvel.conversion.BooleanCH$9",
      "org.mvel.conversion.BooleanCH$7",
      "org.mvel.conversion.BooleanCH$8",
      "org.mvel.conversion.Converter",
      "org.mvel.conversion.CharCH$3",
      "org.xmlpull.mxp1.MXParser",
      "org.mvel.conversion.CharCH$4",
      "org.mvel.conversion.CharCH$1",
      "org.mvel.conversion.CharCH$2",
      "org.mvel.conversion.IntegerCH$5",
      "org.mvel.conversion.IntegerCH$6",
      "org.mvel.conversion.IntegerCH$7",
      "org.mvel.conversion.CharArrayCH",
      "org.mvel.conversion.IntegerCH$8",
      "org.mvel.conversion.IntegerCH$9",
      "wheel.components.NumberInput",
      "wheel.components.ISelectModel",
      "wheel.util.DynamicSelectModel",
      "wheel.components.ElExpression",
      "wheel.components.Checkbox",
      "wheel.components.TextArea",
      "wheel.components.Form",
      "wheel.components.Label",
      "org.mvel.conversion.BigDecimalCH$10",
      "wheel.components.Hidden",
      "org.mvel.conversion.BigDecimalCH$11",
      "wheel.components.TextInput",
      "wheel.components.RenderableComponentConfiguration",
      "wheel.components.ValidationError",
      "wheel.util.AbstractDateConversionHandler$1",
      "org.mvel.conversion.IntegerCH$1",
      "org.mvel.conversion.IntegerCH$2",
      "wheel.util.StringSelectModel",
      "org.mvel.conversion.IntegerCH$3",
      "org.mvel.conversion.IntegerCH$4",
      "org.mvel.conversion.IntArrayCH",
      "wheel.components.XmlEntityRef",
      "wheel.Messages",
      "org.mvel.conversion.ObjectCH",
      "wheel.components.SelectModelFormElement",
      "org.mvel.PropertyAccessException",
      "wheel.components.FormElement",
      "wheel.components.Expression",
      "org.xmlpull.v1.XmlPullParserException",
      "wheel.util.ComponentStore",
      "wheel.components.DateInput",
      "wheel.components.StandaloneComponentConfiguration",
      "org.mvel.conversion.BigDecimalCH",
      "org.mvel.conversion.BigDecimalCH$9",
      "org.mvel.conversion.BigDecimalCH$8",
      "org.mvel.conversion.BigDecimalCH$7",
      "org.mvel.conversion.BigDecimalCH$6",
      "org.mvel.conversion.BigDecimalCH$5",
      "org.mvel.conversion.BigDecimalCH$4",
      "wheel.persistence.Scope",
      "org.mvel.conversion.BigDecimalCH$3",
      "org.mvel.conversion.BigDecimalCH$2",
      "org.mvel.conversion.BigDecimalCH$1",
      "wheel.components.RadioGroup",
      "wheel.components.Select",
      "org.mvel.conversion.DoubleCH",
      "wheel.util.InitialFieldValue",
      "org.mvel.conversion.BigIntegerCH$2",
      "org.mvel.conversion.CharCH",
      "org.mvel.conversion.BigIntegerCH$1",
      "org.mvel.conversion.DoubleCH$1",
      "org.mvel.conversion.BigIntegerCH$4",
      "org.mvel.conversion.BigIntegerCH$3",
      "org.mvel.conversion.IntegerCH$10",
      "org.mvel.DataConversion",
      "org.mvel.conversion.IntegerCH$11",
      "org.mvel.conversion.DoubleCH$7",
      "org.mvel.conversion.DoubleCH$6",
      "org.mvel.conversion.BigIntegerCH$9",
      "wheel.components.Component",
      "org.mvel.conversion.DoubleCH$9",
      "org.mvel.conversion.DoubleCH$8",
      "org.mvel.conversion.DoubleCH$3",
      "org.mvel.conversion.PrimArrayHandler$1",
      "org.mvel.conversion.BigIntegerCH$6",
      "org.mvel.conversion.DoubleCH$2",
      "org.mvel.conversion.PrimArrayHandler$2",
      "org.mvel.conversion.BigIntegerCH$5",
      "org.mvel.conversion.DoubleCH$5",
      "org.mvel.conversion.BigIntegerCH$8",
      "org.mvel.conversion.DoubleCH$4",
      "org.mvel.conversion.BigIntegerCH$7",
      "wheel.WheelException",
      "wheel.components.Link",
      "org.mvel.conversion.IntArrayCH$2",
      "org.mvel.conversion.IntArrayCH$1",
      "wheel.AbstractEngine$1",
      "wheel.components.ValidationRule",
      "org.mvel.conversion.FloatCH$5",
      "org.mvel.conversion.FloatCH$6",
      "org.mvel.conversion.FloatCH$3",
      "org.mvel.conversion.FloatCH$4",
      "org.mvel.conversion.ShortCH$9",
      "org.mvel.conversion.FloatCH$1",
      "wheel.util.ActionRegistry",
      "org.mvel.conversion.FloatCH$2",
      "org.mvel.conversion.ShortCH$7",
      "org.mvel.conversion.ShortCH$8",
      "org.mvel.conversion.ShortCH$5",
      "org.mvel.conversion.ShortCH$6",
      "org.mvel.conversion.BooleanCH",
      "org.mvel.conversion.ShortCH$3",
      "org.mvel.conversion.ShortCH$4",
      "org.mvel.conversion.ShortCH$1",
      "org.mvel.conversion.FloatCH$9",
      "wheel.components.Submit",
      "org.mvel.conversion.ShortCH$2",
      "org.mvel.conversion.FloatCH$7",
      "org.mvel.conversion.FloatCH$8",
      "org.mvel.conversion.PrimArrayHandler",
      "org.mvel.conversion.StringArrayCH",
      "wheel.components.Block",
      "org.mvel.ConversionException",
      "wheel.AbstractEngine"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Component_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "wheel.components.RenderableComponent",
      "wheel.components.XmlEntityRef",
      "wheel.components.Component",
      "org.mvel.conversion.IntegerCH$1",
      "org.mvel.conversion.IntegerCH$2",
      "org.mvel.conversion.IntegerCH$3",
      "org.mvel.conversion.IntegerCH$4",
      "org.mvel.conversion.IntegerCH$5",
      "org.mvel.conversion.IntegerCH$6",
      "org.mvel.conversion.IntegerCH$7",
      "org.mvel.conversion.IntegerCH$8",
      "org.mvel.conversion.IntegerCH$9",
      "org.mvel.conversion.IntegerCH$10",
      "org.mvel.conversion.IntegerCH$11",
      "org.mvel.conversion.IntegerCH",
      "org.mvel.conversion.ShortCH$1",
      "org.mvel.conversion.ShortCH$2",
      "org.mvel.conversion.ShortCH$3",
      "org.mvel.conversion.ShortCH$4",
      "org.mvel.conversion.ShortCH$5",
      "org.mvel.conversion.ShortCH$6",
      "org.mvel.conversion.ShortCH$7",
      "org.mvel.conversion.ShortCH$8",
      "org.mvel.conversion.ShortCH$9",
      "org.mvel.conversion.ShortCH$10",
      "org.mvel.conversion.ShortCH",
      "org.mvel.conversion.LongCH$1",
      "org.mvel.conversion.LongCH$2",
      "org.mvel.conversion.LongCH$3",
      "org.mvel.conversion.LongCH$4",
      "org.mvel.conversion.LongCH$5",
      "org.mvel.conversion.LongCH$6",
      "org.mvel.conversion.LongCH$7",
      "org.mvel.conversion.LongCH$8",
      "org.mvel.conversion.LongCH",
      "org.mvel.conversion.CharCH$1",
      "org.mvel.conversion.CharCH$2",
      "org.mvel.conversion.CharCH$3",
      "org.mvel.conversion.CharCH$4",
      "org.mvel.conversion.CharCH$5",
      "org.mvel.conversion.CharCH",
      "org.mvel.conversion.ByteCH$1",
      "org.mvel.conversion.ByteCH$2",
      "org.mvel.conversion.ByteCH$3",
      "org.mvel.conversion.ByteCH",
      "org.mvel.conversion.FloatCH$1",
      "org.mvel.conversion.FloatCH$2",
      "org.mvel.conversion.FloatCH$3",
      "org.mvel.conversion.FloatCH$4",
      "org.mvel.conversion.FloatCH$5",
      "org.mvel.conversion.FloatCH$6",
      "org.mvel.conversion.FloatCH$7",
      "org.mvel.conversion.FloatCH$8",
      "org.mvel.conversion.FloatCH$9",
      "org.mvel.conversion.FloatCH$10",
      "org.mvel.conversion.FloatCH",
      "org.mvel.conversion.DoubleCH$1",
      "org.mvel.conversion.DoubleCH$2",
      "org.mvel.conversion.DoubleCH$3",
      "org.mvel.conversion.DoubleCH$4",
      "org.mvel.conversion.DoubleCH$5",
      "org.mvel.conversion.DoubleCH$6",
      "org.mvel.conversion.DoubleCH$7",
      "org.mvel.conversion.DoubleCH$8",
      "org.mvel.conversion.DoubleCH$9",
      "org.mvel.conversion.DoubleCH$10",
      "org.mvel.conversion.DoubleCH",
      "org.mvel.conversion.BooleanCH$1",
      "org.mvel.conversion.BooleanCH$2",
      "org.mvel.conversion.BooleanCH$3",
      "org.mvel.conversion.BooleanCH$4",
      "org.mvel.conversion.BooleanCH$5",
      "org.mvel.conversion.BooleanCH$6",
      "org.mvel.conversion.BooleanCH$7",
      "org.mvel.conversion.BooleanCH$8",
      "org.mvel.conversion.BooleanCH$9",
      "org.mvel.conversion.BooleanCH$10",
      "org.mvel.conversion.BooleanCH",
      "org.mvel.conversion.StringCH",
      "org.mvel.conversion.ObjectCH",
      "org.mvel.conversion.CharArrayCH$1",
      "org.mvel.conversion.CharArrayCH",
      "org.mvel.conversion.StringArrayCH$1",
      "org.mvel.conversion.StringArrayCH",
      "org.mvel.conversion.IntArrayCH$1",
      "org.mvel.conversion.IntArrayCH$2",
      "org.mvel.conversion.IntArrayCH",
      "org.mvel.conversion.PrimArrayHandler",
      "org.mvel.conversion.PrimArrayHandler$1",
      "org.mvel.conversion.PrimArrayHandler$2",
      "org.mvel.conversion.BigDecimalCH$1",
      "org.mvel.conversion.BigDecimalCH$2",
      "org.mvel.conversion.BigDecimalCH$3",
      "org.mvel.conversion.BigDecimalCH$4",
      "org.mvel.conversion.BigDecimalCH$5",
      "org.mvel.conversion.BigDecimalCH$6",
      "org.mvel.conversion.BigDecimalCH$7",
      "org.mvel.conversion.BigDecimalCH$8",
      "org.mvel.conversion.BigDecimalCH$9",
      "org.mvel.conversion.BigDecimalCH$10",
      "org.mvel.conversion.BigDecimalCH$11",
      "org.mvel.conversion.BigDecimalCH",
      "org.mvel.conversion.BigIntegerCH$1",
      "org.mvel.conversion.BigIntegerCH$2",
      "org.mvel.conversion.BigIntegerCH$3",
      "org.mvel.conversion.BigIntegerCH$4",
      "org.mvel.conversion.BigIntegerCH$5",
      "org.mvel.conversion.BigIntegerCH$6",
      "org.mvel.conversion.BigIntegerCH$7",
      "org.mvel.conversion.BigIntegerCH$8",
      "org.mvel.conversion.BigIntegerCH$9",
      "org.mvel.conversion.BigIntegerCH",
      "org.mvel.DataConversion",
      "wheel.AbstractEngine$1",
      "wheel.util.AbstractDateConversionHandler$1",
      "wheel.util.AbstractDateConversionHandler",
      "wheel.util.CalendarConversionHandler",
      "wheel.util.DateConversionHandler",
      "wheel.AbstractEngine",
      "wheel.components.Expression",
      "wheel.components.ActionExpression",
      "wheel.components.Form",
      "wheel.components.Form$Method",
      "wheel.WheelException",
      "wheel.components.StandaloneComponent",
      "wheel.ErrorPage",
      "wheel.Messages",
      "wheel.components.Image",
      "wheel.util.DynamicSelectModel",
      "wheel.components.FormElement",
      "wheel.components.SelectModelFormElement",
      "wheel.components.Select",
      "wheel.util.StringSelectModel",
      "wheel.components.Table",
      "wheel.components.Block",
      "wheel.components.TableBlock",
      "wheel.components.Label",
      "wheel.components.Link",
      "wheel.components.ElExpression",
      "wheel.components.RenderableComponentConfiguration",
      "wheel.components.TableRow",
      "wheel.components.ComponentCreator",
      "wheel.components.Checkbox",
      "wheel.components.ValidationRule",
      "wheel.components.Text",
      "wheel.components.TextArea",
      "wheel.components.RadioGroup",
      "wheel.components.Hidden",
      "wheel.components.TextInput",
      "wheel.components.DateInput",
      "wheel.components.FileInput",
      "wheel.util.InitialFieldValue",
      "wheel.components.ValidationError",
      "wheel.components.Any",
      "wheel.components.Submit",
      "wheel.components.Radio",
      "wheel.components.NumberInput",
      "wheel.util.ComponentStore",
      "org.xmlpull.v1.XmlPullParserFactory",
      "org.xmlpull.mxp1.MXParser",
      "org.xmlpull.mxp1_serializer.MXSerializer",
      "org.xmlpull.v1.wrapper.XmlPullWrapperFactory",
      "org.xmlpull.v1.wrapper.classic.XmlSerializerDelegate",
      "org.xmlpull.v1.XmlPullParserException"
    );
  }
}
