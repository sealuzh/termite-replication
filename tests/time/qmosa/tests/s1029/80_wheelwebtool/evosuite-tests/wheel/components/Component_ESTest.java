/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 11:21:06 GMT 2019
 */

package wheel.components;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import java.util.Locale;
import java.util.SimpleTimeZone;
import java.util.stream.IntStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockGregorianCalendar;
import org.junit.runner.RunWith;
import org.xmlpull.mxp1_serializer.MXSerializer;
import org.xmlpull.v1.XmlPullParserFactory;
import wheel.ErrorPage;
import wheel.components.ActionExpression;
import wheel.components.Any;
import wheel.components.Block;
import wheel.components.Checkbox;
import wheel.components.Component;
import wheel.components.DateInput;
import wheel.components.ElExpression;
import wheel.components.Form;
import wheel.components.FormElement;
import wheel.components.Hidden;
import wheel.components.Radio;
import wheel.components.Select;
import wheel.components.StandaloneComponent;
import wheel.components.Submit;
import wheel.components.Table;
import wheel.components.TableBlock;
import wheel.components.Text;
import wheel.components.TextArea;
import wheel.components.TextInput;
import wheel.components.XmlEntityRef;
import wheel.util.DynamicSelectModel;
import wheel.util.InitialFieldValue;
import wheel.util.StringSelectModel;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Component_ESTest extends Component_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.9860493313089678
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = null;
      Form form0 = new Form((String) null);
      String string1 = "Could not find component with id '";
      // Undeclared exception!
      try { 
        form0.map("Could not find component with id '");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No top level component found.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.9253539308675658
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String string0 = "org.apache.commons.io.filefilter.TrueFileFilter";
      TextInput textInput0 = new TextInput(errorPage0, "p", "org.apache.commons.io.filefilter.TrueFileFilter");
      String string1 = "RySEB3}^9P\\RRm<n,";
      // Undeclared exception!
      try { 
        textInput0.colgroup();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Colgroup component can be added only to a Table.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.3558258304206885
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = "Td";
      Form form0 = new Form("Td");
      XmlPullParserFactory.newInstance();
      form0._setGeneratedId(true);
      MXSerializer mXSerializer0 = new MXSerializer();
      form0._renderActions(mXSerializer0);
      // Undeclared exception!
      try { 
        form0.h6();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.0171084361782916
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, (String) null);
      TableBlock tableBlock0 = table0.tfoot();
      Component component0 = errorPage0.abbr((Object) null);
      component0._applyFormat(errorPage0);
      TableBlock tableBlock1 = new TableBlock(tableBlock0);
      tableBlock0.a();
      ElExpression elExpression0 = new ElExpression("{(mBWKi{");
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      Double double0 = new Double((-2.4664170439889204));
      table0.strike((Object) double0);
      elExpression0.codePoints();
      dynamicSelectModel0.empty((Object) null);
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("blockquote");
      TextInput textInput0 = new TextInput(table0, (String) null, (String) null);
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        textInput0.h4(object0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.2756611383247347
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Component component0 = errorPage0.br();
      ActionExpression actionExpression0 = new ActionExpression("7ZC 139wwQ5o>");
      ActionExpression actionExpression1 = actionExpression0.setOwner(errorPage0);
      ActionExpression actionExpression2 = actionExpression1.event("7ZC 139wwQ5o>");
      Form form0 = new Form(errorPage0, "7ZC 139wwQ5o>", actionExpression2);
      TextInput textInput0 = new TextInput(errorPage0, "7ZC 139wwQ5o>", " is not allowed in output");
      actionExpression0.javascript("No corresponding component found for end expression '");
      FormElement formElement0 = textInput0.value("K");
      Form form1 = form0.addFormElement(formElement0);
      String[] stringArray0 = new String[0];
      form0._buildFromSerializedString(stringArray0);
      form0.defaultDomEvent();
      form1.buildComponent();
      // Undeclared exception!
      try { 
        component0.style();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.9165168016827283
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "wheel.components.Submit");
      Text text0 = new Text(errorPage0, table0);
      errorPage0.entity("wheel.components.Submit");
      Radio radio0 = new Radio(errorPage0, "G0$J\"OM", "wheel.components.Submit");
      // Undeclared exception!
      try { 
        text0.span((Object) radio0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.9841012486377547
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "wheel.components.Submit");
      Text text0 = new Text(errorPage0, table0);
      table0.bdo("G0$J\"OM");
      Radio radio0 = new Radio(errorPage0, "G0$J\"OM", "wheel.components.Submit");
      // Undeclared exception!
      try { 
        text0.span((Object) radio0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.429871678186767
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "wheel.components.Submit");
      String string0 = "";
      StringBuilder stringBuilder0 = new StringBuilder("");
      // Undeclared exception!
      try { 
        errorPage0.textarea("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.983997114513002
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String string0 = "wheel.components.Submit";
      Table table0 = new Table(errorPage0, "wheel.components.Submit");
      Text text0 = new Text(errorPage0, table0);
      table0.h4((Object) "wheel.components.Submit");
      Radio radio0 = new Radio(errorPage0, "G0$J\"OM", "wheel.components.Submit");
      // Undeclared exception!
      try { 
        text0.span((Object) radio0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Form form0 = new Form((String) null);
      String string0 = "";
      // Undeclared exception!
      try { 
        form0.dl();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.9627184463265137
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String string0 = "";
      InitialFieldValue initialFieldValue0 = new InitialFieldValue("");
      Component component0 = errorPage0.u((Object) initialFieldValue0);
      component0.h1();
      String string1 = "{";
      // Undeclared exception!
      try { 
        errorPage0.dateInput("{", "b");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.9645001346450215
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String string0 = "ye'#l@J%";
      errorPage0.sup();
      Table table0 = new Table(errorPage0, "ye'#l@J%");
      // Undeclared exception!
      try { 
        table0.up(14);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.964763373583426
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String string0 = "+e'#lWJ%";
      ElExpression elExpression0 = new ElExpression("+e'#lWJ%");
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      Double double0 = new Double(0.0);
      ElExpression elExpression1 = new ElExpression("+e'#lWJ%");
      elExpression1.codePoints();
      dynamicSelectModel0.empty(errorPage0);
      String string1 = "samp";
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("samp");
      String string2 = null;
      Object object0 = new Object();
      String string3 = null;
      String string4 = "expected > to end empty tag not ";
      XmlEntityRef xmlEntityRef1 = new XmlEntityRef("");
      String string5 = "";
      XmlEntityRef xmlEntityRef2 = new XmlEntityRef("");
      // Undeclared exception!
      try { 
        xmlEntityRef2.sup();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.5186153853759072
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String string0 = null;
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef((String) null);
      String string1 = "";
      Checkbox checkbox0 = new Checkbox(xmlEntityRef0, "", "JrVw`]&=e6U8E@&z~r");
      String string2 = "org.mvel.conversion.CharCH$2";
      checkbox0.fieldBinding("org.mvel.conversion.CharCH$2");
      // Undeclared exception!
      try { 
        xmlEntityRef0.abbr();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.1179251883779973
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String string0 = "org.apache.commons.io.filefilter.TrueFileFilter";
      TextInput textInput0 = new TextInput(errorPage0, "p", "org.apache.commons.io.filefilter.TrueFileFilter");
      String string1 = "RySEB3}^9P\\RRm<n,";
      textInput0.end();
      Hidden hidden0 = new Hidden(textInput0, "l'b~n\"Z5..~3}", "RySEB3}^9PRRm<n,");
      MXSerializer mXSerializer0 = new MXSerializer();
      // Undeclared exception!
      try { 
        mXSerializer0.attribute("", "JPto2e&@u", (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // startTag() must be called before attribute()
         //
         verifyException("org.xmlpull.mxp1_serializer.MXSerializer", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.012423230942518
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "+e'#lWJ%");
      ErrorPage errorPage1 = new ErrorPage();
      TableBlock tableBlock0 = table0.thead();
      tableBlock0.id("+e'#lWJ%");
      Component component0 = table0.renderHint("+e'#lWJ%");
      boolean boolean0 = false;
      StringBuilder stringBuilder0 = new StringBuilder("+e'#lWJ%");
      component0.button();
      int int0 = 1088;
      try { 
        Long.decode("org.xmlpull.v1.wrapper.classic.StaticXmlPullParserWrapper");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"org.xmlpull.v1.wrapper.classic.StaticXmlPullParserWrapper\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.142742915049106
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String string0 = "+e'#lWJ%";
      Table table0 = new Table(errorPage0, "+e'#lWJ%");
      ErrorPage errorPage1 = new ErrorPage();
      TableBlock tableBlock0 = table0.thead();
      tableBlock0.id("+e'#lWJ%");
      table0.renderHint("+e'#lWJ%");
      table0.sub();
      Any any0 = tableBlock0.col();
      // Undeclared exception!
      try { 
        any0.code();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.1420167594842408
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String string0 = "+e'#lWJ%";
      Table table0 = new Table(errorPage0, "+e'#lWJ%");
      ErrorPage errorPage1 = new ErrorPage();
      TableBlock tableBlock0 = table0.thead();
      tableBlock0.id("+e'#lWJ%");
      Component component0 = table0.renderHint("+e'#lWJ%");
      Component component1 = component0.base("+e'#lWJ%");
      // Undeclared exception!
      try { 
        component1.code();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.9557135998277697
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Form form0 = new Form("wheel.cmponents.Submit");
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try { 
        form0.i();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      String string0 = null;
      Form form0 = new Form((String) null);
      StringSelectModel stringSelectModel0 = new StringSelectModel();
      // Undeclared exception!
      try { 
        form0.meta();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.1831569871105287
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Component component0 = null;
      String string0 = "5;=";
      Checkbox checkbox0 = new Checkbox((Component) null, "5;=", "5;=");
      String string1 = "";
      FormElement formElement0 = checkbox0.setFormElementName("");
      formElement0._isGeneratedId();
      String string2 = "Lwk-DBGZ?3,u7";
      Table table0 = null;
      try {
        table0 = new Table(checkbox0, "Lwk-DBGZ?3,u7");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No top level component found.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.942508841798583
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String string0 = "ye'#l@J%";
      errorPage0.sup();
      Table table0 = new Table(errorPage0, "ye'#l@J%");
      MXSerializer mXSerializer0 = new MXSerializer();
      // Undeclared exception!
      try { 
        table0._render(mXSerializer0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // setOutput() must called set before serialization can start
         //
         verifyException("org.xmlpull.mxp1_serializer.MXSerializer", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.393094516387529
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      errorPage0.br();
      ActionExpression actionExpression0 = new ActionExpression("7ZC 139wwQ5o>");
      ActionExpression actionExpression1 = actionExpression0.setOwner(errorPage0);
      ActionExpression actionExpression2 = actionExpression1.event("7ZC 139wwQ5o>");
      Form form0 = new Form(errorPage0, "7ZC 139wwQ5o>", actionExpression2);
      TextInput textInput0 = new TextInput(errorPage0, "7ZC 139wwQ5o>", " is not allowed in output");
      actionExpression0.javascript("No corresponding component found for end expression '");
      FormElement formElement0 = textInput0.value("K");
      Form form1 = form0.addFormElement(formElement0);
      form1.i();
      form1.getComponentName();
      form0.fileInput("K");
      String[] stringArray0 = new String[0];
      form0._buildFromSerializedString(stringArray0);
      form0.defaultDomEvent();
      assertEquals("wheel_ErrorPage", actionExpression2.getSourceId());
      
      form1.buildComponent();
      Component component0 = form1.s();
      assertTrue(component0._isGeneratedId());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.722140685854292
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String string0 = "";
      Hidden hidden0 = new Hidden(errorPage0, "", "~ZrgTM@c}o/$uV&RkSF");
      Hidden hidden1 = new Hidden(hidden0, "", "~ZrgTM@c}o/$uV&RkSF");
      // Undeclared exception!
      try { 
        hidden0.object();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.772384440250501
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String string0 = "+e'#lWJ%";
      Table table0 = new Table(errorPage0, "");
      Form form0 = new Form("+e'#lWJ%");
      table0.thead();
      table0.renderHint("+e'#lWJ%");
      int int0 = 1088;
      try { 
        Long.decode("");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // Zero length string
         //
         verifyException("java.lang.Long", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.2544421956497342
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("wheel.util.AbstractDateConversionHandler");
      ActionExpression actionExpression0 = new ActionExpression("");
      actionExpression0.setOwner(xmlEntityRef0);
      String string0 = "";
      String string1 = "T>(X=K)s?|";
      Submit submit0 = new Submit(xmlEntityRef0, "wheel.util.AbstractDateConversionHandler", "wheel.util.AbstractDateConversionHandler");
      FormElement formElement0 = submit0.value("wheel.util.AbstractDateConversionHandler");
      // Undeclared exception!
      try { 
        formElement0._wrapComponentId("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No top level component found.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.1846757764811278
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      String string0 = "";
      Form form0 = new Form("");
      Form form1 = form0.renderHint("");
      // Undeclared exception!
      try { 
        form0.h1((Object) form1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.8594575384070895
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Component component0 = errorPage0.br();
      assertEquals("Any_1", component0.getComponentId());
      
      Float float0 = new Float((-1901.12236535));
      errorPage0.attribute("pA", "pA");
      Form form0 = new Form("pA");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "pA";
      errorPage0.sup((Object) form0);
      assertEquals("pA", form0.getComponentId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.9834922530641204
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String string0 = "E{vTM581gW6";
      Checkbox checkbox0 = new Checkbox(errorPage0, "E{vTM581gW6", "E{vTM581gW6");
      errorPage0.i();
      checkbox0.create();
      Text text0 = new Text(errorPage0, (Object) null);
      checkbox0._getAction();
      // Undeclared exception!
      try { 
        errorPage0.getSubmittedForm();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Tried to access a form, but none was submitted.
         //
         verifyException("wheel.components.StandaloneComponent", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.8515909474454744
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String string0 = "wheel.components.Submit";
      Table table0 = new Table(errorPage0, "wheel.components.Submit");
      Text text0 = new Text(errorPage0, table0);
      // Undeclared exception!
      try { 
        text0.i((Object) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.1846757764811278
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      String string0 = "";
      Form form0 = new Form("");
      Form form1 = form0.renderHint("");
      form1.addFormValidationRule("", ";H|]/3<q;B");
      String[] stringArray0 = new String[4];
      // Undeclared exception!
      try { 
        form0.htmlText((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.2448999724663743
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      dynamicSelectModel0.getComponent();
      String string0 = "p";
      TextInput textInput0 = new TextInput((Component) null, "G/`+/`M", "p");
      String string1 = null;
      // Undeclared exception!
      try { 
        textInput0.select("p", dynamicSelectModel0, "p");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.960841804955975
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String string0 = "+e'#lWJ%";
      ElExpression elExpression0 = new ElExpression("+e'#lWJ%");
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      Double double0 = new Double(0.0);
      ElExpression elExpression1 = new ElExpression("+e'#lWJ%");
      IntStream intStream0 = elExpression1.codePoints();
      dynamicSelectModel0.empty(intStream0);
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("");
      String string1 = null;
      Object object0 = new Object();
      String string2 = null;
      String string3 = "expected > to end empty tag not ";
      XmlEntityRef xmlEntityRef1 = new XmlEntityRef("expected > to end empty tag not ");
      // Undeclared exception!
      try { 
        xmlEntityRef1.label();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.403382060356036
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Component component0 = null;
      Checkbox checkbox0 = new Checkbox((Component) null, "5;=", "5;=");
      String string0 = "";
      Checkbox checkbox1 = new Checkbox((Component) null, "5;=", "5;=");
      checkbox1._isGeneratedId();
      // Undeclared exception!
      try { 
        checkbox0.blockquote();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.104584371831043
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String string0 = null;
      Table table0 = new Table(errorPage0, (String) null);
      TableBlock tableBlock0 = table0.tfoot();
      Component component0 = errorPage0.abbr((Object) null);
      component0._applyFormat(errorPage0);
      TableBlock tableBlock1 = new TableBlock(tableBlock0);
      tableBlock0.a();
      ElExpression elExpression0 = new ElExpression("{(mBWKi{");
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      Double double0 = new Double(0.0);
      table0.strike((Object) double0);
      elExpression0.codePoints();
      dynamicSelectModel0.empty((Object) null);
      // Undeclared exception!
      try { 
        errorPage0.radioGroup((String) null, dynamicSelectModel0, elExpression0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.1032731737259827
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.value("u$l^>");
      dynamicSelectModel1.getTopLevelComponent();
      String string0 = "Attributes must be given in name, value pairs.";
      Checkbox checkbox0 = new Checkbox((Component) null, "u$l^>", "Attributes must be given in name, value pairs.");
      // Undeclared exception!
      try { 
        checkbox0.required();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No top level component found.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Component component0 = null;
      String string0 = "[J(q73ff!F$38E$iU";
      String string1 = "KR_-g_{";
      ErrorPage errorPage0 = new ErrorPage();
      DynamicSelectModel dynamicSelectModel0 = errorPage0.selectModel();
      // Undeclared exception!
      try { 
        dynamicSelectModel0.getObjects();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.262347704522173
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      String string0 = ", id: ";
      TextArea textArea0 = new TextArea((Component) null, ", id: ", ", id: ");
      FormElement formElement0 = textArea0.value(", id: ");
      TextInput textInput0 = new TextInput(formElement0, ", id: ", ", id: ");
      // Undeclared exception!
      try { 
        textArea0.h4((Object) formElement0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.359992496620998
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      errorPage0.br();
      ActionExpression actionExpression0 = new ActionExpression("7ZC 139wwQ5o>");
      ActionExpression actionExpression1 = actionExpression0.setOwner(errorPage0);
      ActionExpression actionExpression2 = actionExpression1.event("7ZC 139wwQ5o>");
      Form form0 = new Form(errorPage0, "7ZC 139wwQ5o>", actionExpression2);
      TextInput textInput0 = new TextInput(errorPage0, "7ZC 139wwQ5o>", "7ZC 139wwQ5o>");
      actionExpression0.javascript("No corresponding component found for end expression '");
      FormElement formElement0 = textInput0.value("K");
      Form form1 = form0.addFormElement(formElement0);
      form1.getComponentName();
      form0.fileInput("K");
      String[] stringArray0 = new String[0];
      form0._buildFromSerializedString(stringArray0);
      form0.defaultDomEvent();
      assertEquals("wheel_ErrorPage", actionExpression2.getSourceId());
      
      form1.buildComponent();
      form0.li((Object) actionExpression2);
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      String string0 = null;
      Form form0 = new Form((String) null);
      // Undeclared exception!
      try { 
        form0.end();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not end compoennt, already at root.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.114321325619569
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      errorPage0.br();
      ActionExpression actionExpression0 = new ActionExpression("7ZC 139wwQ5o>");
      ActionExpression actionExpression1 = actionExpression0.setOwner(errorPage0);
      ActionExpression actionExpression2 = actionExpression1.event("7ZC 139wwQ5o>");
      Form form0 = new Form(errorPage0, "7ZC 139wwQ5o>", actionExpression2);
      TextInput textInput0 = new TextInput(errorPage0, "7ZC 139wwQ5o>", " is not allowed in output");
      actionExpression0.javascript("No corresponding component found for end expression '");
      FormElement formElement0 = textInput0.value("K");
      Form form1 = form0.addFormElement(formElement0);
      form1.getComponentName();
      form0.fileInput("K");
      SimpleTimeZone simpleTimeZone0 = null;
      try {
        simpleTimeZone0 = new SimpleTimeZone(23, " is not allowed in output", 23, 23, 23, 2, (-3477), 23, (-294), 4);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal start month 23
         //
         verifyException("java.util.SimpleTimeZone", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.4612436640950914
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Form form0 = new Form("");
      Form form1 = form0.renderHint("");
      form1.addFormValidationRule("", ";H|]/3<q;B");
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[1] = "";
      String string0 = "7ZC 139wwQ5o>";
      form0.getComponentName();
      // Undeclared exception!
      try { 
        form0.fileInput("p");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      String string0 = "='";
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("='");
      // Undeclared exception!
      try { 
        xmlEntityRef0.script();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.889713172180463
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "ye'#l@J%");
      table0.tr();
      // Undeclared exception!
      try { 
        table0.textInput("ye'#l@J%");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.3442530999419526
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String string0 = "+e'#lWJ%";
      ElExpression elExpression0 = new ElExpression("+e'#lWJ%");
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      Double double0 = new Double(0.0);
      ElExpression elExpression1 = new ElExpression("+e'#lWJ%");
      IntStream intStream0 = elExpression1.codePoints();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.empty(intStream0);
      dynamicSelectModel0.enumeration("+e'#lWJ%");
      TextInput textInput0 = new TextInput(errorPage0, "+e'#lWJ%", "+e'#lWJ%");
      // Undeclared exception!
      try { 
        textInput0.select("", dynamicSelectModel1, elExpression1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.9263548464292743
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Form form0 = new Form("wheel.cmponents.SubJiT");
      // Undeclared exception!
      try { 
        errorPage0.submit("wheel.cmponents.SubJiT");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.1944064129383247
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      String string0 = null;
      Form form0 = new Form((String) null);
      StringSelectModel stringSelectModel0 = new StringSelectModel();
      // Undeclared exception!
      try { 
        form0.textInput("F2u@zN,0e#ve1E%x_[");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.162409200836301
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Form form0 = new Form("wheel.cmponents.SubJiT");
      String string0 = null;
      // Undeclared exception!
      try { 
        form0.passwordInput((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.040764003515639
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      String string0 = "";
      Form form0 = new Form("");
      form0.renderHint("");
      String string1 = ";H|]/3<q;B";
      // Undeclared exception!
      try { 
        form0.id(";H|]/3<q;B");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No top level component found.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      String string0 = "syl>dE";
      Form form0 = new Form("syl>dE");
      // Undeclared exception!
      try { 
        form0.getPage();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=3.1635932784024856
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      errorPage0.br();
      ActionExpression actionExpression0 = new ActionExpression("1GV%p");
      StandaloneComponent standaloneComponent0 = errorPage0.getPage();
      actionExpression0.setOwner(standaloneComponent0);
      ActionExpression actionExpression1 = actionExpression0.event("7E8r");
      Form form0 = new Form(errorPage0, "this.", actionExpression0);
      TextInput textInput0 = new TextInput(form0, "this.", "");
      actionExpression1.javascript("this.");
      textInput0.value("(8ayUn");
      Form form1 = form0.addFormElement(textInput0);
      form1.i();
      form0.getComponentName();
      form0.fileInput("p");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "7ZC 139wwQ5o>";
      stringArray0[1] = "this.";
      stringArray0[2] = "1GV%p";
      stringArray0[3] = "";
      stringArray0[4] = "7ZC 139wwQ5o>";
      // Undeclared exception!
      try { 
        form0._buildFromSerializedString(stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("wheel.components.Form", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.8613587561373413
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String string0 = "";
      String string1 = "~ZrgTM@c}o/$uV&RkSF";
      Hidden hidden0 = new Hidden(errorPage0, "", "~ZrgTM@c}o/$uV&RkSF");
      String string2 = "";
      Table table0 = new Table(hidden0, "");
      Table table1 = table0.renderHint("");
      // Undeclared exception!
      try { 
        table1.id("");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.AbstractMap", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.8879632756510243
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      dynamicSelectModel0.getComponent();
      String string0 = "G/`+/`\\M";
      TextInput textInput0 = new TextInput((Component) null, "G/`+/`M", "p");
      TextInput textInput1 = new TextInput((Component) null, "G/`+/`M", "p");
      String string1 = "M2$)4.d~$";
      TextInput textInput2 = null;
      try {
        textInput2 = new TextInput(textInput0, "M2$)4.d~$", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.8000577098836734
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Component component0 = errorPage0.br();
      assertEquals("Any_1", component0.getComponentId());
      
      Float float0 = new Float((-1901.12236535));
      ErrorPage errorPage1 = new ErrorPage();
      Form form0 = new Form("pA");
      assertEquals("pA", form0.getComponentId());
      
      StringBuilder stringBuilder0 = new StringBuilder();
      char[] charArray0 = new char[1];
      charArray0[0] = 'R';
      ActionExpression actionExpression0 = new ActionExpression("pA");
      ActionExpression actionExpression1 = actionExpression0.parameter("pA");
      ActionExpression actionExpression2 = actionExpression1.submitForm(false);
      ActionExpression actionExpression3 = actionExpression2.submissible(false);
      errorPage0.p((Object) actionExpression3);
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.1846757764811278
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      String string0 = "";
      Form form0 = new Form("");
      Form form1 = form0.renderHint("");
      form1.addFormValidationRule("", ";H|]/3<q;B");
      String[] stringArray0 = new String[4];
      // Undeclared exception!
      try { 
        form0.a();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=3.0382353954578263
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String string0 = "wheel.components.Submit";
      Table table0 = new Table(errorPage0, "wheel.components.Submit");
      Text text0 = new Text(errorPage0, table0);
      DateInput dateInput0 = new DateInput(errorPage0, "wheel.components.Submit", "wheel.components.Submit", "wheel.components.Submit");
      dateInput0._applyFormat(errorPage0);
      dateInput0.getEngine();
      Table table1 = new Table(dateInput0, "wheel.ErrorPage@0000000001");
      String string1 = "";
      // Undeclared exception!
      try { 
        table1.id("wheel.ErrorPage@0000000001");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.AbstractMap", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.1179251883779973
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Radio radio0 = new Radio((Component) null, "Hz0JJUGqN]7xT$", "otdc");
      String string0 = ":nzgtN";
      TextInput textInput0 = new TextInput(radio0, "Hz0JJUGqN]7xT$", ":nzgtN");
      Block block0 = null;
      try {
        block0 = new Block(textInput0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.71747278103407
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      String string0 = "C8il7-j9eA";
      Form form0 = new Form("C8il7-j9eA");
      String string1 = "asset/wheel/components/jquery.js?expires=88";
      String string2 = "e4-k&S6vF@35OizYJ-";
      StringSelectModel stringSelectModel0 = new StringSelectModel();
      Select select0 = new Select(form0, "asset/wheel/components/jquery.js?expires=88", "e4-k&S6vF@35OizYJ-", stringSelectModel0, "asset/wheel/components/jquery.js?expires=88");
      // Undeclared exception!
      try { 
        form0.addFormElement(select0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.7153868039298454
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      ElExpression elExpression0 = new ElExpression("{(mBWKB{");
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      Double double0 = new Double(0.0);
      elExpression0.codePoints();
      dynamicSelectModel0.empty("{(mBWKB{");
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("blockquote");
      assertEquals("blockquote", xmlEntityRef0.getComponentId());
      
      Object object0 = new Object();
      Component component0 = errorPage0.h3((Object) null);
      assertTrue(component0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.7053176393559344
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Form form0 = new Form("");
      Form form1 = form0.renderHint("");
      form1.addFormValidationRule("", ";H|]/3<q;B");
      Float float0 = new Float(0.0);
      ErrorPage errorPage0 = new ErrorPage();
      Form form2 = new Form("");
      Component component0 = errorPage0.sup((Object) null);
      assertTrue(component0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.4445728849188573
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      TextInput textInput0 = new TextInput(errorPage0, "p", "org.apache.commons.io.filefilter.TrueFileFilter");
      String string0 = "RySEB3}^9P\\RRm<n,";
      // Undeclared exception!
      try { 
        textInput0.get("RySEB3}^9PRRm<n,");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not find component with id 'RySEB3}^9PRRm<n,'.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.9457994740963103
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      String string0 = "wheel.util.AbstractDateConversionHandler";
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("wheel.util.AbstractDateConversionHandler");
      ActionExpression actionExpression0 = new ActionExpression("");
      ActionExpression actionExpression1 = actionExpression0.setOwner(xmlEntityRef0);
      String string1 = "";
      Form form0 = new Form("");
      Form form1 = form0.renderHint(actionExpression0);
      ActionExpression actionExpression2 = actionExpression1.parameter(form1);
      ActionExpression actionExpression3 = actionExpression2.event("");
      // Undeclared exception!
      try { 
        actionExpression3.extractComponent();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No top level component found.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.6574520104243486
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      InitialFieldValue initialFieldValue0 = new InitialFieldValue("");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      Locale locale0 = Locale.KOREAN;
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(locale0);
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      dynamicSelectModel0.getComponent();
      Hidden hidden0 = new Hidden((Component) null, "b", "}pAd}$GQ7,~p>9");
      FormElement formElement0 = hidden0.value("");
      List<ActionExpression> list0 = formElement0._getActions();
      assertNull(list0);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.1032731737259827
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      dynamicSelectModel0.getComponent();
      TextInput textInput0 = new TextInput((Component) null, "G/`+/`M", "p");
      // Undeclared exception!
      try { 
        textInput0.get((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No top level component found.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.7200500935197973
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Hidden hidden0 = new Hidden(errorPage0, "", "~ZrgTM@c}o/$uV&RkSF");
      // Undeclared exception!
      try { 
        hidden0.h2();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      Form form0 = new Form((String) null);
      // Undeclared exception!
      try { 
        form0.style();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
