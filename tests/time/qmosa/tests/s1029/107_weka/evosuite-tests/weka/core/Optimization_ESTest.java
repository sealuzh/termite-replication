/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 11:56:52 GMT 2019
 */

package weka.core;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintWriter;
import java.text.DecimalFormat;
import java.text.DecimalFormatSymbols;
import java.text.NumberFormat;
import java.text.ParsePosition;
import java.util.Collection;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import weka.core.Optimization;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Optimization_ESTest extends Optimization_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      weka.core.matrix.Matrix matrix0 = weka.core.matrix.Matrix.identity(17, 17);
      Locale locale0 = Locale.UK;
      DecimalFormat decimalFormat0 = new DecimalFormat();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1, locale_FilteringMode0);
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.EXTENDED_FILTERING;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list0, locale_FilteringMode1);
      Locale locale1 = Locale.ROOT;
      DecimalFormatSymbols decimalFormatSymbols0 = new DecimalFormatSymbols();
      ParsePosition parsePosition0 = new ParsePosition(17);
      DecimalFormatSymbols.getInstance(locale0);
      decimalFormatSymbols0.setMonetaryDecimalSeparator('s');
      decimalFormat0.setGroupingUsed(false);
      double[] doubleArray0 = new double[0];
      boolean[] booleanArray0 = new boolean[7];
      booleanArray0[0] = true;
      booleanArray0[1] = false;
      booleanArray0[2] = false;
      booleanArray0[3] = false;
      booleanArray0[4] = false;
      booleanArray0[5] = true;
      booleanArray0[6] = true;
      double[] doubleArray1 = Optimization.solveTriangle(matrix0, doubleArray0, false, booleanArray0);
      assertFalse(doubleArray1.equals((Object)doubleArray0));
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      weka.core.matrix.Matrix matrix0 = new weka.core.matrix.Matrix(17, 17, 17);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)33;
      byteArray0[1] = (byte)102;
      byteArray0[2] = (byte)23;
      byteArray0[3] = (byte)17;
      byteArray0[4] = (byte)45;
      Locale locale0 = Locale.UK;
      DecimalFormat decimalFormat0 = new DecimalFormat();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1, locale_FilteringMode0);
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.EXTENDED_FILTERING;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list0, locale_FilteringMode1);
      Locale locale1 = Locale.ROOT;
      DecimalFormatSymbols decimalFormatSymbols0 = new DecimalFormatSymbols();
      ParsePosition parsePosition0 = new ParsePosition(17);
      DecimalFormatSymbols.getInstance(locale0);
      decimalFormatSymbols0.setMonetaryDecimalSeparator('s');
      decimalFormat0.setGroupingUsed(false);
      decimalFormat0.setDecimalFormatSymbols(decimalFormatSymbols0);
      double[] doubleArray0 = new double[8];
      matrix0.normF();
      doubleArray0[0] = (double) 17;
      boolean[] booleanArray0 = new boolean[5];
      booleanArray0[0] = false;
      booleanArray0[1] = true;
      // Undeclared exception!
      try { 
        Optimization.solveTriangle(matrix0, doubleArray0, true, booleanArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("weka.core.Optimization", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      weka.core.matrix.Matrix matrix0 = new weka.core.matrix.Matrix(17, 17, 17);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("1aOezBqg7&{se");
      Locale locale0 = Locale.CHINA;
      DecimalFormat decimalFormat0 = new DecimalFormat();
      decimalFormat0.setMultiplier((-2573));
      DecimalFormatSymbols decimalFormatSymbols0 = new DecimalFormatSymbols();
      decimalFormatSymbols0.setInternationalCurrencySymbol("1aOezBqg7&{se");
      decimalFormatSymbols0.setDecimalSeparator('(');
      decimalFormatSymbols0.setInfinity("1aOezBqg7&{se");
      mockPrintWriter0.checkError();
      decimalFormat0.setDecimalFormatSymbols(decimalFormatSymbols0);
      matrix0.print((PrintWriter) mockPrintWriter0, (NumberFormat) decimalFormat0, 17);
      double[] doubleArray0 = new double[2];
      matrix0.normF();
      doubleArray0[0] = (double) 17;
      boolean[] booleanArray0 = new boolean[19];
      booleanArray0[4] = true;
      booleanArray0[1] = true;
      double[] doubleArray1 = Optimization.solveTriangle(matrix0, doubleArray0, false, booleanArray0);
      assertArrayEquals(new double[] {1.0, 0.0}, doubleArray1, 0.01);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.7205138520748253
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Optimization optimization0 = mock(Optimization.class, CALLS_REAL_METHODS);
      Optimization.DynamicIntArray optimization_DynamicIntArray0 = optimization0.new DynamicIntArray(0);
      Optimization.DynamicIntArray optimization_DynamicIntArray1 = (Optimization.DynamicIntArray)optimization_DynamicIntArray0.copy();
      optimization_DynamicIntArray1.addElement(0);
      optimization_DynamicIntArray0.addElement(7);
      optimization_DynamicIntArray0.addElement((-2476));
      optimization_DynamicIntArray0.removeElementAt(0);
      optimization_DynamicIntArray0.getRevision();
      assertEquals(1, optimization_DynamicIntArray0.size());
      
      weka.core.matrix.Matrix matrix0 = new weka.core.matrix.Matrix(7, 7);
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = 3388.229579;
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = 3388.229579;
      boolean[] booleanArray0 = new boolean[5];
      booleanArray0[0] = true;
      booleanArray0[1] = true;
      booleanArray0[2] = true;
      booleanArray0[3] = false;
      booleanArray0[4] = true;
      double[] doubleArray1 = Optimization.solveTriangle(matrix0, doubleArray0, false, booleanArray0);
      assertArrayEquals(new double[] {0.0, 0.0, 0.0, Double.POSITIVE_INFINITY}, doubleArray1, 0.01);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.2240585736572336
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Optimization optimization0 = mock(Optimization.class, CALLS_REAL_METHODS);
      Optimization.DynamicIntArray optimization_DynamicIntArray0 = optimization0.new DynamicIntArray(0);
      optimization_DynamicIntArray0.copy();
      optimization_DynamicIntArray0.removeAllElements();
      optimization_DynamicIntArray0.copy();
      optimization_DynamicIntArray0.addElement(0);
      optimization_DynamicIntArray0.addElement(0);
      optimization_DynamicIntArray0.getRevision();
      assertEquals(2, optimization_DynamicIntArray0.size());
      
      optimization_DynamicIntArray0.removeElementAt(0);
      assertEquals(1, optimization_DynamicIntArray0.size());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      weka.core.matrix.Matrix matrix0 = new weka.core.matrix.Matrix(17, 17, 17);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)33;
      byteArray0[1] = (byte)102;
      byteArray0[2] = (byte)23;
      byteArray0[3] = (byte)17;
      byteArray0[4] = (byte)23;
      Locale locale0 = Locale.UK;
      DecimalFormat decimalFormat0 = new DecimalFormat();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1, locale_FilteringMode0);
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.EXTENDED_FILTERING;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list0, locale_FilteringMode1);
      Locale locale1 = Locale.ROOT;
      DecimalFormatSymbols decimalFormatSymbols0 = new DecimalFormatSymbols();
      ParsePosition parsePosition0 = new ParsePosition(17);
      DecimalFormatSymbols.getInstance(locale0);
      decimalFormatSymbols0.setMonetaryDecimalSeparator('s');
      decimalFormat0.setDecimalFormatSymbols(decimalFormatSymbols0);
      double[] doubleArray0 = new double[2];
      matrix0.normF();
      doubleArray0[0] = (double) 17;
      boolean[] booleanArray0 = new boolean[5];
      booleanArray0[1] = true;
      double[] doubleArray1 = Optimization.solveTriangle(matrix0, doubleArray0, true, booleanArray0);
      assertArrayEquals(new double[] {1.0, 0.0}, doubleArray1, 0.01);
      assertArrayEquals(new double[] {17.0, 0.0}, doubleArray0, 0.01);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      weka.core.matrix.Matrix matrix0 = new weka.core.matrix.Matrix(17, 17, 17);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("1aOezBqg7&{se");
      Locale locale0 = Locale.CHINA;
      DecimalFormat decimalFormat0 = new DecimalFormat();
      DecimalFormatSymbols decimalFormatSymbols0 = new DecimalFormatSymbols();
      ParsePosition parsePosition0 = new ParsePosition(17);
      DecimalFormatSymbols.getInstance(locale0);
      decimalFormat0.parseObject("1aOezBqg7&{se", parsePosition0);
      decimalFormatSymbols0.setMonetaryDecimalSeparator('s');
      decimalFormat0.setGroupingUsed(false);
      decimalFormat0.setDecimalFormatSymbols(decimalFormatSymbols0);
      double[] doubleArray0 = new double[2];
      matrix0.normF();
      doubleArray0[0] = (double) 17;
      boolean[] booleanArray0 = new boolean[5];
      booleanArray0[0] = true;
      booleanArray0[1] = true;
      double[] doubleArray1 = Optimization.solveTriangle(matrix0, doubleArray0, true, booleanArray0);
      assertArrayEquals(new double[] {17.0, 0.0}, doubleArray0, 0.01);
      assertArrayEquals(new double[] {0.0, 0.0}, doubleArray1, 0.01);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      weka.core.matrix.Matrix matrix0 = new weka.core.matrix.Matrix(17, 17);
      Locale locale0 = Locale.UK;
      DecimalFormat decimalFormat0 = new DecimalFormat();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1, locale_FilteringMode0);
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.EXTENDED_FILTERING;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list0, locale_FilteringMode1);
      Locale locale1 = Locale.forLanguageTag("[7?No10 Z3");
      Locale locale2 = Locale.ROOT;
      DecimalFormatSymbols decimalFormatSymbols0 = new DecimalFormatSymbols();
      ParsePosition parsePosition0 = new ParsePosition(17);
      DecimalFormatSymbols decimalFormatSymbols1 = DecimalFormatSymbols.getInstance(locale1);
      decimalFormatSymbols1.setMonetaryDecimalSeparator(' ');
      decimalFormat0.setGroupingUsed(false);
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = (double) 's';
      doubleArray0[1] = (double) 17;
      doubleArray0[2] = 1.0001220703125;
      doubleArray0[3] = (double) 17;
      doubleArray0[4] = (double) ' ';
      doubleArray0[5] = (double) 17;
      boolean[] booleanArray0 = new boolean[3];
      booleanArray0[0] = false;
      booleanArray0[1] = false;
      booleanArray0[2] = false;
      // Undeclared exception!
      try { 
        Optimization.solveTriangle(matrix0, doubleArray0, false, booleanArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("weka.core.Optimization", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      weka.core.matrix.Matrix matrix0 = new weka.core.matrix.Matrix(17, 17, 17);
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (double) 17;
      boolean[] booleanArray0 = new boolean[9];
      booleanArray0[0] = false;
      booleanArray0[1] = false;
      booleanArray0[2] = true;
      booleanArray0[3] = false;
      booleanArray0[4] = true;
      booleanArray0[5] = false;
      booleanArray0[6] = false;
      booleanArray0[7] = false;
      double[] doubleArray1 = Optimization.solveTriangle(matrix0, doubleArray0, true, booleanArray0);
      assertArrayEquals(new double[] {1.0, (-1.0)}, doubleArray1, 0.01);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      weka.core.matrix.Matrix matrix0 = weka.core.matrix.Matrix.identity(17, 17);
      Locale locale0 = Locale.UK;
      DecimalFormat decimalFormat0 = new DecimalFormat();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1, locale_FilteringMode0);
      Locale locale1 = new Locale("");
      linkedList1.add(locale1);
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.EXTENDED_FILTERING;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list0, locale_FilteringMode1);
      Locale.forLanguageTag("[7?No10 Z3");
      Locale locale2 = Locale.ROOT;
      DecimalFormatSymbols decimalFormatSymbols0 = new DecimalFormatSymbols();
      ParsePosition parsePosition0 = new ParsePosition(17);
      DecimalFormatSymbols.getInstance(locale0);
      decimalFormatSymbols0.setMonetaryDecimalSeparator('s');
      decimalFormat0.setGroupingUsed(false);
      double[] doubleArray0 = new double[0];
      boolean[] booleanArray0 = new boolean[1];
      booleanArray0[0] = true;
      Optimization.solveTriangle(matrix0, doubleArray0, true, booleanArray0);
      Random.setNextRandom(17);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-93);
      byteArray0[1] = (byte)19;
      byteArray0[2] = (byte)71;
      byteArray0[3] = (byte) (-78);
      byteArray0[4] = (byte)1;
      byteArray0[5] = (byte) (-87);
      byteArray0[6] = (byte)114;
      byteArray0[1] = (byte) (-56);
      byteArray0[8] = (byte)21;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      weka.core.matrix.Matrix matrix0 = new weka.core.matrix.Matrix((double[][]) null, (-1595), (byte) (-93));
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = (double) (byte)114;
      doubleArray0[1] = (double) (byte)21;
      doubleArray0[2] = (double) (byte) (-78);
      // Undeclared exception!
      try { 
        Optimization.solveTriangle(matrix0, doubleArray0, false, (boolean[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.4297811167972485
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Optimization optimization0 = mock(Optimization.class, CALLS_REAL_METHODS);
      Optimization.DynamicIntArray optimization_DynamicIntArray0 = optimization0.new DynamicIntArray(2121);
      optimization_DynamicIntArray0.getRevision();
      optimization_DynamicIntArray0.removeAllElements();
      optimization_DynamicIntArray0.copy();
      optimization_DynamicIntArray0.getRevision();
      optimization_DynamicIntArray0.removeAllElements();
      optimization_DynamicIntArray0.addElement(2121);
      optimization_DynamicIntArray0.size();
      optimization_DynamicIntArray0.copy();
      optimization_DynamicIntArray0.copy();
      optimization_DynamicIntArray0.addElement(1);
      int int0 = optimization_DynamicIntArray0.elementAt(1);
      assertEquals(2, optimization_DynamicIntArray0.size());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.044581376783342
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Optimization optimization0 = mock(Optimization.class, CALLS_REAL_METHODS);
      int int0 = 0;
      Optimization.DynamicIntArray optimization_DynamicIntArray0 = optimization0.new DynamicIntArray(0);
      optimization_DynamicIntArray0.addElement(1238);
      optimization_DynamicIntArray0.removeAllElements();
      optimization_DynamicIntArray0.removeAllElements();
      int int1 = 10;
      optimization_DynamicIntArray0.removeAllElements();
      optimization_DynamicIntArray0.copy();
      optimization_DynamicIntArray0.copy();
      optimization_DynamicIntArray0.addElement(0);
      optimization_DynamicIntArray0.copy();
      optimization_DynamicIntArray0.addElement(10);
      optimization_DynamicIntArray0.addElement(20);
      // Undeclared exception!
      try { 
        optimization_DynamicIntArray0.removeElementAt(10);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }
}
