/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 11:24:43 GMT 2019
 */

package umd.cs.shop;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.StreamTokenizer;
import java.io.StringReader;
import java.nio.CharBuffer;
import java.util.Collection;
import java.util.Iterator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;
import umd.cs.shop.JSJshopVars;
import umd.cs.shop.JSPredicateForm;
import umd.cs.shop.JSSubstitution;
import umd.cs.shop.JSTerm;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JSPredicateForm_ESTest extends JSPredicateForm_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.add((Object) "not");
      StringReader stringReader0 = new StringReader("S=:b'En  v");
      // Undeclared exception!
      try { 
        jSTerm0.clonePF();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1 >= 1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.7437009261328056
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.listIterator();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSTerm0.containsAll(jSSubstitution0);
      jSTerm0.add((Object) null);
      StringReader stringReader0 = new StringReader("iZen7g_");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm1 = new JSTerm(streamTokenizer1);
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      StringReader stringReader1 = new StringReader("!{^[8");
      stringReader0.close();
      StreamTokenizer streamTokenizer2 = new StreamTokenizer(stringReader0);
      JSSubstitution jSSubstitution2 = new JSSubstitution();
      jSTerm1.standarizerPredicateForm();
      jSSubstitution1.clone();
      StringReader stringReader2 = new StringReader("0.0");
      StringReader stringReader3 = new StringReader("PlanningDomain: error");
      char[] charArray0 = new char[4];
      charArray0[0] = '0';
      charArray0[1] = '7';
      jSTerm1.equals((JSPredicateForm) jSTerm0);
      JSSubstitution jSSubstitution3 = new JSSubstitution();
      jSTerm1.toStr();
      // Undeclared exception!
      try { 
        jSTerm0.applySubstitutionPF(jSSubstitution3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.5164586295246056
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      StringReader stringReader0 = new StringReader("S=:b'En  v");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm1 = new JSTerm(streamTokenizer0);
      streamTokenizer0.sval = "F4}o";
      jSTerm0.add((Object) jSTerm1);
      StringReader stringReader1 = new StringReader("F4}o");
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader1);
      stringReader1.read();
      streamTokenizer1.ordinaryChar(33);
      StreamTokenizer streamTokenizer2 = new StreamTokenizer(stringReader1);
      JSTerm jSTerm2 = new JSTerm(streamTokenizer1);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      StringReader stringReader2 = new StringReader("Tz");
      jSTerm1.applySubstitutionPF(jSSubstitution0);
      // Undeclared exception!
      try { 
        jSTerm2.equals((JSPredicateForm) jSTerm0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // umd.cs.shop.JSTerm cannot be cast to java.lang.String
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0809586127392572
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.add((Object) "");
      StringReader stringReader0 = new StringReader("S=:b'En  v");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.sval = "";
      jSTerm0.add((Object) jSTerm0);
      StringReader stringReader1 = new StringReader("F4}o");
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader1);
      streamTokenizer1.whitespaceChars((-4), (-1194));
      streamTokenizer1.ordinaryChar(33);
      StreamTokenizer streamTokenizer2 = new StreamTokenizer(stringReader1);
      JSTerm jSTerm1 = new JSTerm(streamTokenizer1);
      stringReader1.ready();
      StringReader stringReader2 = new StringReader("Tz");
      jSTerm1.applySubstitutionPF((JSSubstitution) null);
      jSTerm1.isEmpty();
      // Undeclared exception!
      try { 
        jSTerm0.print();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.8779917020604717
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.add((Object) "");
      StringReader stringReader0 = new StringReader("S=:b'En  v");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm1 = new JSTerm(streamTokenizer0);
      streamTokenizer0.sval = "F4}o";
      jSTerm0.add((Object) jSTerm1);
      StringReader stringReader1 = new StringReader("F4}o");
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader1);
      streamTokenizer1.ordinaryChar(33);
      streamTokenizer1.ordinaryChars((-1), (-1));
      StreamTokenizer streamTokenizer2 = new StreamTokenizer(stringReader1);
      JSTerm jSTerm2 = new JSTerm(streamTokenizer1);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      StringReader stringReader2 = new StringReader("Tz");
      jSTerm1.applySubstitutionPF(jSSubstitution0);
      boolean boolean0 = jSTerm2.equals((JSPredicateForm) jSTerm0);
      jSTerm0.print();
      streamTokenizer0.parseNumbers();
      JSPredicateForm jSPredicateForm0 = jSTerm0.clonePF();
      boolean boolean1 = jSPredicateForm0.equals((JSPredicateForm) jSTerm0);
      assertFalse(boolean1 == boolean0);
      
      StringReader stringReader3 = new StringReader("Expecting elements of the list");
      StreamTokenizer streamTokenizer3 = new StreamTokenizer(stringReader3);
      streamTokenizer3.lowerCaseMode(true);
      streamTokenizer3.pushBack();
      StreamTokenizer streamTokenizer4 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm3 = new JSTerm(streamTokenizer3);
      System.setCurrentTimeMillis(33);
      StringBuffer stringBuffer0 = jSPredicateForm0.toStr();
      assertEquals(6, stringBuffer0.length());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      jSPredicateForm0.print();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSJshopVars.plus = (-618);
      JSTerm jSTerm0 = new JSTerm();
      // Undeclared exception!
      try { 
        jSTerm0.matches(jSPredicateForm0, jSSubstitution0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.0990410695344712
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.add((Object) "");
      StringReader stringReader0 = new StringReader("S=:b'En  v");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm1 = new JSTerm(streamTokenizer0);
      streamTokenizer0.sval = "";
      jSTerm0.add((Object) jSTerm1);
      StringReader stringReader1 = new StringReader("F4}o");
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader1);
      streamTokenizer1.ordinaryChar(33);
      StreamTokenizer streamTokenizer2 = new StreamTokenizer(stringReader1);
      JSTerm jSTerm2 = new JSTerm(streamTokenizer1);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      StringReader stringReader2 = new StringReader("Tz");
      jSTerm1.applySubstitutionPF(jSSubstitution0);
      jSTerm2.isEmpty();
      jSTerm0.print();
      streamTokenizer0.parseNumbers();
      JSPredicateForm jSPredicateForm0 = jSTerm0.clonePF();
      jSPredicateForm0.equals((JSPredicateForm) jSTerm0);
      StringReader stringReader3 = new StringReader("Expecting elements of the list");
      StreamTokenizer streamTokenizer3 = new StreamTokenizer(stringReader3);
      streamTokenizer3.lowerCaseMode(true);
      streamTokenizer3.pushBack();
      StreamTokenizer streamTokenizer4 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm3 = new JSTerm(streamTokenizer3);
      System.setCurrentTimeMillis(33);
      jSPredicateForm0.print();
      JSPredicateForm jSPredicateForm1 = jSTerm3.standarizerPredicateForm();
      jSPredicateForm1.print();
      assertEquals(1, jSPredicateForm1.size());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSSubstitution0.add((Object) null);
      jSSubstitution0.remove((Object) null);
      jSSubstitution0.add((Object) "%%%");
      Iterator iterator0 = jSSubstitution0.iterator();
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      JSJshopVars.whiteSpace = (-519);
      Object[] objectArray0 = new Object[20];
      objectArray0[0] = (Object) jSSubstitution0;
      objectArray0[1] = (Object) iterator0;
      objectArray0[2] = (Object) jSSubstitution0;
      objectArray0[3] = (Object) jSSubstitution0;
      objectArray0[4] = (Object) "%%%";
      jSPredicateForm0.toArray(objectArray0);
      StringReader stringReader0 = new StringReader("]}naKy");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      StreamTokenizer streamTokenizer2 = new StreamTokenizer(stringReader0);
      System.setCurrentTimeMillis((-519));
      JSPredicateForm jSPredicateForm1 = new JSPredicateForm();
      // Undeclared exception!
      try { 
        jSPredicateForm0.matches(jSPredicateForm1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      JSPredicateForm jSPredicateForm1 = null;
      // Undeclared exception!
      try { 
        jSPredicateForm0.matches((JSPredicateForm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.4780709313740181
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.add((Object) "(");
      StringReader stringReader0 = new StringReader("S=:b'En  v");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm1 = new JSTerm(streamTokenizer0);
      jSTerm0.add((Object) jSTerm1);
      StringReader stringReader1 = new StringReader("F4}o");
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader1);
      streamTokenizer1.ordinaryChar(33);
      StreamTokenizer streamTokenizer2 = new StreamTokenizer(stringReader1);
      JSTerm jSTerm2 = new JSTerm(streamTokenizer1);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      StreamTokenizer streamTokenizer3 = new StreamTokenizer(stringReader0);
      streamTokenizer3.slashStarComments(true);
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      JSSubstitution jSSubstitution2 = new JSSubstitution();
      jSTerm0.applySubstitutionPF(jSSubstitution2);
      jSTerm0.equals((JSPredicateForm) jSTerm2);
      JSSubstitution jSSubstitution3 = new JSSubstitution();
      StringReader stringReader2 = null;
      try {
        stringReader2 = new StringReader((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSSubstitution0.add((Object) jSSubstitution0);
      jSSubstitution0.remove((Object) jSSubstitution0);
      jSSubstitution0.add((Object) "%%%");
      Iterator iterator0 = jSSubstitution0.iterator();
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      JSJshopVars.whiteSpace = (-519);
      Object[] objectArray0 = new Object[20];
      objectArray0[0] = (Object) jSSubstitution0;
      objectArray0[1] = (Object) iterator0;
      objectArray0[2] = (Object) jSSubstitution0;
      objectArray0[3] = (Object) jSSubstitution0;
      objectArray0[4] = (Object) "%%%";
      jSPredicateForm0.toArray(objectArray0);
      JSTerm jSTerm0 = new JSTerm();
      // Undeclared exception!
      try { 
        jSTerm0.toStr();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.4850884752336673
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.add((Object) "");
      String string0 = "F4}o";
      String string1 = "S=:b'En  v";
      StringReader stringReader0 = new StringReader("S=:b'En  v");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm1 = new JSTerm(streamTokenizer0);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSSubstitution0.stream();
      StringReader stringReader1 = new StringReader("1!");
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader1);
      streamTokenizer0.nextToken();
      stringReader0.read();
      jSTerm0.applySubstitutionPF(jSSubstitution0);
      jSTerm1.add((Object) streamTokenizer1);
      JSJshopVars.percent = (-1);
      JSTerm jSTerm2 = new JSTerm(streamTokenizer1);
      jSTerm2.clonePF();
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      streamTokenizer0.slashStarComments(true);
      JSSubstitution jSSubstitution2 = new JSSubstitution();
      // Undeclared exception!
      try { 
        jSTerm1.applySubstitutionPF(jSSubstitution1);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.io.StreamTokenizer cannot be cast to umd.cs.shop.JSTerm
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.4804233872329893
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.equals((JSPredicateForm) null);
      jSTerm0.add((Object) "/65");
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSPredicateForm jSPredicateForm0 = jSTerm0.clonePF();
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      jSTerm0.listIterator();
      jSTerm0.remove((Object) "\"1=:}~-;s;\"$W");
      JSSubstitution jSSubstitution2 = jSTerm0.matches(jSPredicateForm0, jSSubstitution1);
      JSPredicateForm jSPredicateForm1 = jSPredicateForm0.standarizerPredicateForm();
      JSPredicateForm jSPredicateForm2 = jSTerm0.standarizerPredicateForm();
      jSPredicateForm2.matches((JSPredicateForm) jSTerm0);
      jSPredicateForm1.isEmpty();
      JSPredicateForm jSPredicateForm3 = new JSPredicateForm();
      jSPredicateForm3.print();
      jSPredicateForm1.clonePF();
      jSTerm0.print();
      jSPredicateForm3.print();
      JSPredicateForm jSPredicateForm4 = jSPredicateForm1.clonePF();
      jSPredicateForm4.setSize(63);
      jSTerm0.equals(jSPredicateForm4);
      jSPredicateForm0.print();
      JSPredicateForm jSPredicateForm5 = jSPredicateForm2.clonePF();
      jSTerm0.standarizerPredicateForm();
      jSPredicateForm4.equals(jSPredicateForm5);
      JSPredicateForm jSPredicateForm6 = jSPredicateForm2.clonePF();
      jSPredicateForm6.equals(jSPredicateForm1);
      JSSubstitution jSSubstitution3 = new JSSubstitution();
      jSPredicateForm3.toStr();
      jSPredicateForm2.applySubstitutionPF(jSSubstitution2);
      JSPredicateForm jSPredicateForm7 = new JSPredicateForm();
      // Undeclared exception!
      try { 
        jSPredicateForm4.clonePF();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.8768785738082712
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.add((Object) "");
      StringReader stringReader0 = new StringReader("S=:b'En  v");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm1 = new JSTerm(streamTokenizer0);
      streamTokenizer0.sval = "";
      jSTerm0.add((Object) jSTerm1);
      StringReader stringReader1 = new StringReader("F4}o");
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader1);
      streamTokenizer1.ordinaryChar(33);
      StreamTokenizer streamTokenizer2 = new StreamTokenizer(stringReader1);
      JSTerm jSTerm2 = new JSTerm(streamTokenizer1);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      StringReader stringReader2 = new StringReader("Tz");
      jSTerm1.applySubstitutionPF(jSSubstitution0);
      jSTerm2.isEmpty();
      jSTerm0.print();
      streamTokenizer0.parseNumbers();
      JSPredicateForm jSPredicateForm0 = jSTerm0.clonePF();
      jSPredicateForm0.equals((JSPredicateForm) jSTerm0);
      StringReader stringReader3 = new StringReader("Expecting eementj of th list");
      StreamTokenizer streamTokenizer3 = new StreamTokenizer(stringReader3);
      streamTokenizer3.lowerCaseMode(true);
      streamTokenizer3.pushBack();
      StreamTokenizer streamTokenizer4 = new StreamTokenizer(stringReader2);
      StreamTokenizer streamTokenizer5 = new StreamTokenizer(stringReader3);
      jSTerm2.standarizerPredicateForm();
      JSPredicateForm jSPredicateForm1 = jSTerm2.clonePF();
      assertFalse(jSPredicateForm1.isEmpty());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.3984267690774774
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.add((Object) "");
      StringReader stringReader0 = new StringReader("S=:b'En  v");
      JSPredicateForm jSPredicateForm0 = jSTerm0.clonePF();
      jSTerm0.equals(jSPredicateForm0);
      Object object0 = new Object();
      jSTerm0.add(object0);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      // Undeclared exception!
      try { 
        jSTerm0.clonePF();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Object cannot be cast to umd.cs.shop.JSTerm
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StringReader stringReader0 = new StringReader("(");
      stringReader0.close();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm(streamTokenizer0);
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.481992500001469
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      StringReader stringReader0 = new StringReader("VYa6");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSSubstitution0.add((Object) stringReader0);
      jSSubstitution0.add((Object) null);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSPredicateForm jSPredicateForm0 = jSTerm0.applySubstitutionPF(jSSubstitution0);
      jSPredicateForm0.applySubstitutionPF(jSSubstitution0);
      jSTerm0.add((Object) jSTerm0);
      jSTerm0.standarizerPredicateForm();
      StringReader stringReader1 = null;
      try {
        stringReader1 = new StringReader((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.472942726245813
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      JSPredicateForm jSPredicateForm0 = null;
      jSTerm0.equals((JSPredicateForm) null);
      jSTerm0.add((Object) "b65");
      jSTerm0.clonePF();
      JSPredicateForm jSPredicateForm1 = new JSPredicateForm();
      jSTerm0.equals(jSPredicateForm1);
      // Undeclared exception!
      try { 
        jSTerm0.elementAt((-2006108020));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      String string0 = "(";
      jSTerm0.add((Object) "(");
      jSTerm0.add((Object) "(");
      StringReader stringReader0 = new StringReader("(");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.resetSyntax();
      // Undeclared exception!
      try { 
        jSTerm0.print();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.7945725536756378
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      String string0 = "(";
      jSTerm0.add((Object) "(");
      String string1 = "Fi}o";
      StringReader stringReader0 = new StringReader("Fi}o");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm1 = new JSTerm(streamTokenizer0);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSSubstitution0.stream();
      StringReader stringReader1 = new StringReader("Tz");
      streamTokenizer0.nextToken();
      StreamTokenizer streamTokenizer2 = new StreamTokenizer(stringReader0);
      streamTokenizer2.ttype = (-1);
      streamTokenizer0.nextToken();
      stringReader0.read();
      JSPredicateForm jSPredicateForm0 = jSTerm1.applySubstitutionPF(jSSubstitution0);
      jSTerm1.clonePF();
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      streamTokenizer2.slashStarComments(true);
      JSSubstitution jSSubstitution2 = new JSSubstitution();
      jSTerm0.applySubstitutionPF(jSSubstitution2);
      jSTerm0.equals(jSPredicateForm0);
      JSSubstitution jSSubstitution3 = new JSSubstitution();
      StreamTokenizer streamTokenizer3 = new StreamTokenizer(stringReader1);
      StringReader stringReader2 = null;
      try {
        stringReader2 = new StringReader((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.0730116670092564
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      String string0 = "(";
      StringReader stringReader0 = new StringReader("(");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      Object object0 = null;
      jSSubstitution0.add((Object) null);
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm("(");
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      StringReader stringReader0 = new StringReader("(");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm((String) null);
      System.setCurrentTimeMillis(2540L);
      stringReader0.markSupported();
      streamTokenizer0.pushBack();
      streamTokenizer0.slashSlashComments(true);
      char[] charArray0 = new char[2];
      charArray0[0] = 'u';
      charArray0[1] = 'g';
      streamTokenizer0.resetSyntax();
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      stringReader0.read(charBuffer0);
      streamTokenizer0.ordinaryChars(4496, 3807);
      streamTokenizer0.wordChars((-447), 37);
      streamTokenizer0.wordChars((-1139895351), 3807);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      streamTokenizer1.resetSyntax();
      StreamTokenizer streamTokenizer2 = new StreamTokenizer(stringReader0);
      StreamTokenizer streamTokenizer3 = new StreamTokenizer(stringReader0);
      StreamTokenizer streamTokenizer4 = new StreamTokenizer(stringReader0);
      StreamTokenizer streamTokenizer5 = new StreamTokenizer(stringReader0);
      System.setCurrentTimeMillis((-2906L));
      System.setCurrentTimeMillis((-3138L));
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.076201906348742
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.equals((JSPredicateForm) null);
      jSTerm0.add((Object) "b65");
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSPredicateForm jSPredicateForm0 = jSTerm0.clonePF();
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      jSSubstitution1.add((Object) jSPredicateForm0);
      JSPredicateForm jSPredicateForm1 = jSTerm0.applySubstitutionPF(jSSubstitution0);
      JSPredicateForm jSPredicateForm2 = jSPredicateForm0.clonePF();
      JSPredicateForm jSPredicateForm3 = jSTerm0.standarizerPredicateForm();
      JSSubstitution jSSubstitution2 = new JSSubstitution();
      jSPredicateForm1.equals(jSPredicateForm2);
      JSTerm jSTerm1 = new JSTerm();
      jSPredicateForm1.addAll((Collection) jSPredicateForm3);
      jSPredicateForm0.trimToSize();
      jSPredicateForm3.equals((JSPredicateForm) jSTerm1);
      JSSubstitution jSSubstitution3 = new JSSubstitution();
      // Undeclared exception!
      try { 
        jSPredicateForm1.toStr();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to umd.cs.shop.JSTerm
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.4659497192528061
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.add((Object) null);
      StringReader stringReader0 = new StringReader("iZen7g_");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm1 = new JSTerm(streamTokenizer0);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSPredicateForm jSPredicateForm0 = jSTerm1.standarizerPredicateForm();
      jSPredicateForm0.print();
      // Undeclared exception!
      try { 
        jSTerm0.print();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSSubstitution0.add((Object) null);
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      jSSubstitution0.iterator();
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      JSJshopVars.minus = 46;
      JSJshopVars.slash = 1084;
      // Undeclared exception!
      try { 
        jSPredicateForm0.matches((JSPredicateForm) null, jSSubstitution1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.667343244774476
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.add((Object) "RlC/;_1}j79f~_");
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSSubstitution0.add((Object) null);
      JSPredicateForm jSPredicateForm0 = jSTerm0.applySubstitutionPF(jSSubstitution0);
      JSPredicateForm jSPredicateForm1 = jSPredicateForm0.clonePF();
      JSPredicateForm jSPredicateForm2 = jSPredicateForm0.standarizerPredicateForm();
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      jSPredicateForm2.listIterator();
      jSPredicateForm1.remove((Object) null);
      JSSubstitution jSSubstitution2 = jSPredicateForm0.matches(jSPredicateForm1, jSSubstitution1);
      JSPredicateForm jSPredicateForm3 = jSPredicateForm2.standarizerPredicateForm();
      JSPredicateForm jSPredicateForm4 = jSPredicateForm1.standarizerPredicateForm();
      jSPredicateForm2.matches(jSPredicateForm0);
      jSPredicateForm0.equals(jSPredicateForm3);
      JSPredicateForm jSPredicateForm5 = new JSPredicateForm();
      JSPredicateForm jSPredicateForm6 = jSPredicateForm3.standarizerPredicateForm();
      jSPredicateForm5.print();
      jSPredicateForm3.print();
      JSPredicateForm jSPredicateForm7 = jSTerm0.clonePF();
      jSPredicateForm4.matches(jSPredicateForm6);
      jSPredicateForm7.print();
      jSPredicateForm0.matches(jSPredicateForm6, jSSubstitution2);
      JSPredicateForm jSPredicateForm8 = null;
      try {
        jSPredicateForm8 = new JSPredicateForm("RlC/;_1}j79f~_");
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.667343244774476
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.add((Object) "RlC/;_1}j79f~_");
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSSubstitution0.add((Object) null);
      JSPredicateForm jSPredicateForm0 = jSTerm0.applySubstitutionPF(jSSubstitution0);
      JSPredicateForm jSPredicateForm1 = jSPredicateForm0.clonePF();
      JSPredicateForm jSPredicateForm2 = jSPredicateForm0.standarizerPredicateForm();
      JSJshopVars.minus = (-1923);
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      jSPredicateForm2.listIterator();
      jSPredicateForm1.remove((Object) null);
      JSSubstitution jSSubstitution2 = jSPredicateForm0.matches(jSPredicateForm1, jSSubstitution1);
      JSPredicateForm jSPredicateForm3 = jSPredicateForm2.standarizerPredicateForm();
      JSPredicateForm jSPredicateForm4 = jSPredicateForm1.standarizerPredicateForm();
      jSPredicateForm2.matches(jSPredicateForm0);
      jSPredicateForm0.equals(jSPredicateForm3);
      JSPredicateForm jSPredicateForm5 = new JSPredicateForm();
      JSPredicateForm jSPredicateForm6 = jSPredicateForm3.standarizerPredicateForm();
      jSPredicateForm5.print();
      jSPredicateForm3.print();
      JSPredicateForm jSPredicateForm7 = jSTerm0.clonePF();
      jSPredicateForm4.matches(jSPredicateForm6);
      jSPredicateForm7.print();
      jSPredicateForm0.matches(jSPredicateForm6, jSSubstitution2);
      JSPredicateForm jSPredicateForm8 = null;
      try {
        jSPredicateForm8 = new JSPredicateForm("RlC/;_1}j79f~_");
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.521586834652811
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      String string0 = "RlC/;_1}j79f~_";
      jSTerm0.add((Object) "RlC/;_1}j79f~_");
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSSubstitution0.add((Object) null);
      jSSubstitution0.add((Object) jSTerm0);
      jSTerm0.applySubstitutionPF(jSSubstitution0);
      JSPredicateForm jSPredicateForm0 = jSTerm0.applySubstitutionPF(jSSubstitution0);
      jSTerm0.add((Object) jSPredicateForm0);
      // Undeclared exception!
      try { 
        jSTerm0.standarizerPredicateForm();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // umd.cs.shop.JSPredicateForm cannot be cast to umd.cs.shop.JSTerm
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.521586834652811
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      StringReader stringReader0 = new StringReader("VYa6");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSSubstitution0.add((Object) stringReader0);
      jSSubstitution0.add((Object) null);
      jSSubstitution0.add((Object) null);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.applySubstitutionPF(jSSubstitution0);
      jSTerm0.applySubstitutionPF(jSSubstitution0);
      jSTerm0.add((Object) null);
      // Undeclared exception!
      try { 
        jSTerm0.standarizerPredicateForm();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.0277013333517635
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      String string0 = "RlC/;_1}j79f~_";
      jSTerm0.add((Object) "RlC/;_1}j79f~_");
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSSubstitution0.add((Object) null);
      JSPredicateForm jSPredicateForm0 = jSTerm0.applySubstitutionPF(jSSubstitution0);
      JSPredicateForm jSPredicateForm1 = jSPredicateForm0.clonePF();
      JSPredicateForm jSPredicateForm2 = jSPredicateForm0.standarizerPredicateForm();
      JSJshopVars.minus = (-1923);
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      jSPredicateForm2.listIterator();
      jSSubstitution1.add((Object) jSSubstitution0);
      jSPredicateForm1.remove((Object) null);
      // Undeclared exception!
      try { 
        jSPredicateForm0.matches(jSPredicateForm1, jSSubstitution1);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // umd.cs.shop.JSSubstitution cannot be cast to umd.cs.shop.JSPairVarTerm
         //
         verifyException("umd.cs.shop.JSSubstitution", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      jSPredicateForm0.print();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSPredicateForm jSPredicateForm1 = new JSPredicateForm();
      JSJshopVars.plus = (-618);
      JSTerm jSTerm0 = new JSTerm();
      JSPredicateForm jSPredicateForm2 = new JSPredicateForm();
      // Undeclared exception!
      try { 
        jSTerm0.equals(jSPredicateForm2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      JSJshopVars.whiteSpace = (-2145);
      StringReader stringReader0 = new StringReader("X]OWHfXetcV=v|");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSSubstitution jSSubstitution1 = jSPredicateForm0.matches((JSPredicateForm) jSTerm0, jSSubstitution0);
      assertTrue(jSSubstitution1.fail());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.add((Object) "(");
      StringReader stringReader0 = new StringReader("F4}o");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      streamTokenizer1.resetSyntax();
      StringReader stringReader1 = new StringReader("1.");
      StreamTokenizer streamTokenizer2 = new StreamTokenizer(stringReader1);
      JSTerm jSTerm1 = new JSTerm(streamTokenizer2);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSSubstitution jSSubstitution1 = jSTerm0.matches((JSPredicateForm) jSTerm1, jSSubstitution0);
      assertTrue(jSSubstitution1.fail());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.add((Object) "(");
      StringReader stringReader0 = new StringReader("F4}o");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      stringReader0.markSupported();
      JSTerm jSTerm1 = new JSTerm();
      JSSubstitution jSSubstitution0 = jSTerm1.matches((JSPredicateForm) jSTerm0);
      jSSubstitution0.spliterator();
      jSSubstitution0.cloneS();
      StringReader stringReader1 = new StringReader("!");
      StreamTokenizer streamTokenizer2 = new StreamTokenizer(stringReader0);
      System.setCurrentTimeMillis((-1420L));
      streamTokenizer2.ttype = (-1163709147);
      StreamTokenizer streamTokenizer3 = new StreamTokenizer(stringReader0);
      StreamTokenizer streamTokenizer4 = new StreamTokenizer(stringReader1);
      streamTokenizer3.ordinaryChars(2, (-1));
      streamTokenizer3.wordChars((-4), 37);
      StreamTokenizer streamTokenizer5 = new StreamTokenizer(stringReader1);
      streamTokenizer2.resetSyntax();
      StringReader stringReader2 = new StringReader("$id@Xbk%");
      StringReader stringReader3 = new StringReader("$id@Xbk%");
      StreamTokenizer streamTokenizer6 = new StreamTokenizer(stringReader2);
      StreamTokenizer streamTokenizer7 = new StreamTokenizer(stringReader3);
      StreamTokenizer streamTokenizer8 = new StreamTokenizer(stringReader2);
      StreamTokenizer streamTokenizer9 = new StreamTokenizer(stringReader1);
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      String string0 = "F4}o";
      StringReader stringReader0 = new StringReader("F4}o");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      stringReader0.markSupported();
      JSTerm jSTerm1 = new JSTerm(streamTokenizer0);
      JSSubstitution jSSubstitution0 = jSTerm1.matches((JSPredicateForm) jSTerm0);
      jSSubstitution0.spliterator();
      jSSubstitution0.cloneS();
      StringReader stringReader1 = new StringReader("!");
      StreamTokenizer streamTokenizer2 = new StreamTokenizer(stringReader0);
      System.setCurrentTimeMillis((-1420L));
      streamTokenizer2.ttype = streamTokenizer2.ttype;
      StreamTokenizer streamTokenizer3 = new StreamTokenizer(stringReader0);
      StreamTokenizer streamTokenizer4 = new StreamTokenizer(stringReader1);
      streamTokenizer3.ordinaryChars(2, (-1));
      StreamTokenizer streamTokenizer5 = new StreamTokenizer(stringReader1);
      streamTokenizer2.resetSyntax();
      StringReader stringReader2 = null;
      try {
        stringReader2 = new StringReader((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.4942662253853725
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.add((Object) "(");
      StringReader stringReader0 = new StringReader("F4}o");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      stringReader0.markSupported();
      JSTerm jSTerm1 = new JSTerm(streamTokenizer0);
      JSSubstitution jSSubstitution0 = jSTerm1.matches((JSPredicateForm) jSTerm0);
      jSSubstitution0.spliterator();
      jSSubstitution0.cloneS();
      StringReader stringReader1 = new StringReader("!");
      StreamTokenizer streamTokenizer2 = new StreamTokenizer(stringReader0);
      System.setCurrentTimeMillis((-1420L));
      StreamTokenizer streamTokenizer3 = new StreamTokenizer(stringReader0);
      StreamTokenizer streamTokenizer4 = new StreamTokenizer(stringReader1);
      streamTokenizer3.ordinaryChars(2, (-1));
      streamTokenizer3.wordChars((-4), 37);
      StreamTokenizer streamTokenizer5 = new StreamTokenizer(stringReader1);
      streamTokenizer2.resetSyntax();
      StringReader stringReader2 = new StringReader("$id@Xbk%");
      StringReader stringReader3 = new StringReader("$id@Xbk%");
      StreamTokenizer streamTokenizer6 = new StreamTokenizer(stringReader2);
      StreamTokenizer streamTokenizer7 = new StreamTokenizer(stringReader3);
      StreamTokenizer streamTokenizer8 = new StreamTokenizer(stringReader2);
      StreamTokenizer streamTokenizer9 = new StreamTokenizer(stringReader1);
      JSTerm jSTerm2 = null;
      try {
        jSTerm2 = new JSTerm(streamTokenizer8);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSTerm", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.makeVariable();
      // Undeclared exception!
      try { 
        jSTerm0.print();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.649594339635748
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.equals((JSPredicateForm) null);
      jSTerm0.add((Object) "/65");
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSPredicateForm jSPredicateForm0 = jSTerm0.clonePF();
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      jSTerm0.remove((Object) "\"1=:}~-;s;\"$W");
      JSSubstitution jSSubstitution2 = jSTerm0.matches(jSPredicateForm0, jSSubstitution1);
      JSPredicateForm jSPredicateForm1 = jSPredicateForm0.standarizerPredicateForm();
      JSPredicateForm jSPredicateForm2 = jSTerm0.standarizerPredicateForm();
      jSPredicateForm2.matches((JSPredicateForm) jSTerm0);
      jSPredicateForm1.isEmpty();
      JSPredicateForm jSPredicateForm3 = new JSPredicateForm();
      jSPredicateForm3.print();
      JSPredicateForm jSPredicateForm4 = jSPredicateForm1.clonePF();
      jSTerm0.print();
      jSPredicateForm3.print();
      JSPredicateForm jSPredicateForm5 = jSPredicateForm1.clonePF();
      jSTerm0.equals(jSPredicateForm5);
      jSPredicateForm0.print();
      JSPredicateForm jSPredicateForm6 = jSPredicateForm2.clonePF();
      jSTerm0.standarizerPredicateForm();
      jSPredicateForm5.equals(jSPredicateForm6);
      JSPredicateForm jSPredicateForm7 = jSPredicateForm2.clonePF();
      jSPredicateForm4.isEmpty();
      jSPredicateForm3.toStr();
      JSPredicateForm jSPredicateForm8 = jSPredicateForm2.applySubstitutionPF(jSSubstitution2);
      JSPredicateForm jSPredicateForm9 = new JSPredicateForm();
      JSPredicateForm jSPredicateForm10 = jSPredicateForm5.clonePF();
      jSPredicateForm10.equals(jSPredicateForm7);
      jSPredicateForm0.toStr();
      jSPredicateForm0.equals(jSPredicateForm8);
      jSPredicateForm0.print();
      StringReader stringReader0 = new StringReader("/65");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      // Undeclared exception!
      try { 
        jSPredicateForm8.JSPredicateFormInit(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      // Undeclared exception!
      try { 
        jSTerm0.standarizerPredicateForm();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      // Undeclared exception!
      try { 
        jSTerm0.applySubstitutionPF(jSSubstitution0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      StringReader stringReader0 = new StringReader("(");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm((StreamTokenizer) null);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      StringReader stringReader0 = new StringReader("(");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }
}
