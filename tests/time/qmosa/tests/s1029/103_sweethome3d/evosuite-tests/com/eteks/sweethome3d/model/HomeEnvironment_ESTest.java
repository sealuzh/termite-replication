/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 11:57:45 GMT 2019
 */

package com.eteks.sweethome3d.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.eteks.sweethome3d.model.AspectRatio;
import com.eteks.sweethome3d.model.Camera;
import com.eteks.sweethome3d.model.CatalogTexture;
import com.eteks.sweethome3d.model.Content;
import com.eteks.sweethome3d.model.HomeEnvironment;
import com.eteks.sweethome3d.model.HomeTexture;
import com.eteks.sweethome3d.model.TexturesCategory;
import com.eteks.sweethome3d.tools.ResourceURLContent;
import com.eteks.sweethome3d.tools.TemporaryURLContent;
import com.eteks.sweethome3d.tools.URLContent;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeListenerProxy;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HomeEnvironment_ESTest extends HomeEnvironment_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.1218159503049137
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 1034, 6, 0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setVideoWidth(0);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment1.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment1.setObserverCameraElevationAdjusted(true);
      homeEnvironment1.setCeillingLightColor(0);
      homeEnvironment1.setGroundTexture((HomeTexture) null);
      homeEnvironment0.setVideoQuality(6);
      homeEnvironment0.getVideoFrameRate();
      homeEnvironment1.setPhotoHeight(13);
      int int0 = homeEnvironment1.getVideoHeight();
      assertEquals(6, homeEnvironment0.getVideoQuality());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-769), (HomeTexture) null, 0, (HomeTexture) null, (-769), (-769));
      homeEnvironment0.clone();
      homeEnvironment0.setVideoWidth(0);
      Camera.Lens camera_Lens0 = Camera.Lens.PINHOLE;
      Camera camera0 = new Camera(0, (-769), 0, (-1395.6161F), 0.0F, (-1395.6161F), (-2735L), camera_Lens0);
      camera0.setFieldOfView((-1066.5591F));
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      linkedList0.add(camera0);
      URL uRL0 = MockURL.getFileExample();
      URL uRL1 = MockURL.URL(uRL0, "NORMAL");
      MockURL.URL(uRL1, ".E#?k4YO|ay");
      URL uRL2 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL2);
      CatalogTexture catalogTexture0 = new CatalogTexture(".E#?k4YO|ay", temporaryURLContent0, (-2366.73F), 1.7777778F, true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment(739, homeTexture0, 49, homeTexture0, (-1644), (-1066.5591F));
      assertEquals(240, homeEnvironment1.getVideoHeight());
      
      HomeEnvironment homeEnvironment2 = homeEnvironment0.clone();
      homeEnvironment2.getSkyTexture();
      assertEquals(0, homeEnvironment0.getVideoWidth());
      assertEquals(300, homeEnvironment2.getPhotoHeight());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.675485446901437
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HomeEnvironment.Property.valueOf("PHOTO_HEIGHT");
      MockURL.getFileExample();
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("", temporaryURLContent0, 0, 0, false);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      CatalogTexture catalogTexture1 = new CatalogTexture((String) null, temporaryURLContent0, 0.0F, 1.0F, false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture1);
      HomeEnvironment.Property.values();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(8, homeTexture0, (-863), homeTexture0, (-863), 1.0F);
      homeEnvironment0.isAllLevelsVisible();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setObserverCameraElevationAdjusted(true);
      homeEnvironment1.setVideoWidth((-863));
      homeEnvironment1.getSkyTexture();
      assertEquals((-647), homeEnvironment1.getVideoHeight());
      
      HomeEnvironment homeEnvironment2 = new HomeEnvironment();
      homeEnvironment2.setObserverCameraElevationAdjusted(true);
      int int0 = homeEnvironment0.getPhotoHeight();
      assertEquals(300, int0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("", uRLContent0, (-3103.3088F), (-52));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-52), homeTexture0, 3826, homeTexture0, (-2320), (-1.0F));
      homeEnvironment0.getSkyTexture();
      int int0 = homeEnvironment0.getVideoQuality();
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals((-1.0F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(3826, homeEnvironment0.getSkyColor());
      assertEquals((-52), homeEnvironment0.getGroundColor());
      assertEquals((-2320), homeEnvironment0.getLightColor());
      assertEquals(0, int0);
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.7825850929940454
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MockURL.getFtpExample();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 33, 0, 0.7724939F);
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.setPhotoQuality(3110);
      homeEnvironment0.setPhotoWidth(0);
      homeEnvironment0.setSubpartSizeUnderLight(3054.174F);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      homeEnvironment1.getSubpartSizeUnderLight();
      homeEnvironment0.setWallsAlpha(33);
      int int0 = homeEnvironment0.getGroundColor();
      assertEquals(0, homeEnvironment0.getPhotoWidth());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.675485446901437
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoQuality(8);
      homeEnvironment0.setVideoQuality(25);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      MockURL.getFileExample();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.getSkyTexture();
      HomeEnvironment homeEnvironment1 = new HomeEnvironment(2, (HomeTexture) null, (-1348), 2, 25);
      homeEnvironment1.getSkyColor();
      int int0 = homeEnvironment0.getPhotoQuality();
      assertEquals(AspectRatio.RATIO_3_2, homeEnvironment0.getPhotoAspectRatio());
      assertEquals(8, int0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      System.setCurrentTimeMillis(229L);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("#D", temporaryURLContent0, 2.0F, 0.0F, true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment(0, homeTexture0, 0, (-1159), 0.0F);
      homeEnvironment0.setVideoQuality(3021);
      assertEquals(3021, homeEnvironment0.getVideoQuality());
      
      homeEnvironment1.getCeillingLightColor();
      int int0 = homeEnvironment1.getLightColor();
      assertEquals((-1159), int0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.128419031742918
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-3420), (HomeTexture) null, (-3420), (-3420), (-559.3202F));
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.CEILING_LIGHT_COLOR;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      homeEnvironment0.setCeillingLightColor((-3420));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setVideoFrameRate((-3420));
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(homeEnvironment1, (String) null, "", propertyChangeListenerProxy0);
      propertyChangeEvent0.toString();
      propertyChangeEvent0.toString();
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setSkyTexture((HomeTexture) null);
      homeEnvironment0.setVideoWidth((-471));
      HomeEnvironment homeEnvironment2 = homeEnvironment0.clone();
      homeEnvironment2.setVideoWidth(2445);
      HomeEnvironment homeEnvironment3 = new HomeEnvironment((-3420), (HomeTexture) null, (-471), (-3420), (-3420));
      homeEnvironment3.clone();
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setGroundTexture((HomeTexture) null);
      homeEnvironment1.setVideoQuality(2445);
      HomeEnvironment homeEnvironment4 = new HomeEnvironment();
      homeEnvironment3.getVideoFrameRate();
      homeEnvironment3.setPhotoHeight(8);
      assertEquals(8, homeEnvironment3.getPhotoHeight());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-54);
      byteArray0[1] = (byte) (-33);
      byteArray0[2] = (byte)46;
      byteArray0[3] = (byte)11;
      byteArray0[4] = (byte)97;
      byteArray0[5] = (byte)9;
      byteArray0[6] = (byte) (-47);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSubpartSizeUnderLight((byte) (-47));
      homeEnvironment0.getCeillingLightColor();
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.clone();
      homeEnvironment0.getCeillingLightColor();
      HomeEnvironment.Property[] homeEnvironment_PropertyArray0 = HomeEnvironment.Property.values();
      assertEquals(20, homeEnvironment_PropertyArray0.length);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.2388461041110044
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_16_9;
      homeEnvironment0.setSkyTexture((HomeTexture) null);
      homeEnvironment0.setVideoWidth((-471));
      homeEnvironment0.setPhotoHeight((-1249));
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setSubpartSizeUnderLight((-1249));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.getSkyTexture();
      homeEnvironment1.setPhotoQuality(0);
      homeEnvironment0.setPhotoWidth((-1649));
      homeEnvironment0.setSubpartSizeUnderLight(3271.228F);
      homeEnvironment0.getSubpartSizeUnderLight();
      homeEnvironment0.setWallsAlpha(2.0F);
      homeEnvironment1.getGroundColor();
      homeEnvironment0.getSubpartSizeUnderLight();
      homeEnvironment0.getLightColor();
      homeEnvironment1.getSkyTexture();
      assertEquals(AspectRatio.RATIO_16_9, homeEnvironment0.getVideoAspectRatio());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.085628388624577
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("", temporaryURLContent0, 2.0F, 2.0F, false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment((-4592), homeTexture0, (-4592), (-4592), 1.5F);
      HomeEnvironment homeEnvironment2 = new HomeEnvironment();
      HomeEnvironment homeEnvironment3 = homeEnvironment2.clone();
      assertNotSame(homeEnvironment3, homeEnvironment2);
      assertEquals(13427964, homeEnvironment3.getSkyColor());
      assertEquals(13684944, homeEnvironment3.getLightColor());
      assertEquals(11053224, homeEnvironment3.getGroundColor());
      
      HomeTexture homeTexture1 = homeEnvironment1.getGroundTexture();
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(1.5F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertNotNull(homeTexture1);
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.9103281932812037
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoWidth(25);
      homeEnvironment0.setVideoQuality(25);
      homeEnvironment0.getLightColor();
      homeEnvironment0.setWallsAlpha(2152.0F);
      homeEnvironment0.getVideoHeight();
      homeEnvironment0.getWallsAlpha();
      homeEnvironment0.setVideoFrameRate((-1101));
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      Camera.Lens camera_Lens0 = Camera.Lens.NORMAL;
      Camera camera0 = new Camera((-344.16086F), (-2773.3857F), (-1.0F), (-1.0F), (-344.16086F), 2152.0F, (-2597L), camera_Lens0);
      camera0.setLens(camera_Lens0);
      Camera camera1 = camera0.clone();
      camera1.setX(19);
      linkedList0.add(camera1);
      Camera.Lens camera_Lens1 = Camera.Lens.FISHEYE;
      Camera camera2 = new Camera(1.5F, 0.0F, 0.0F, (-1101), 0.0F, 1.0F, (-1101), camera_Lens1);
      camera2.setFieldOfView((-1.0F));
      linkedList0.add(camera2);
      homeEnvironment0.setVideoCameraPath(linkedList0);
      homeEnvironment0.setVideoCameraPath(linkedList0);
      homeEnvironment0.setVideoCameraPath((List<Camera>) null);
      homeEnvironment0.setVideoWidth(25);
      assertEquals((-1101), homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.2654436797543704
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoQuality((-3420));
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment homeEnvironment2 = new HomeEnvironment();
      int int0 = homeEnvironment1.getVideoWidth();
      assertEquals((-3420), homeEnvironment0.getVideoQuality());
      assertEquals(320, int0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.11673984287575
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeEnvironment0.setVideoCameraPath(linkedList0);
      homeEnvironment0.setPhotoQuality((-1380));
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setGroundColor((-1380));
      homeEnvironment0.setCeillingLightColor((-1380));
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.setVideoFrameRate((-4152));
      homeEnvironment0.getLightColor();
      homeEnvironment0.setVideoQuality((-1380));
      homeEnvironment0.setCeillingLightColor(2);
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      classLoader0.getParent();
      HomeEnvironment.Property.values();
      homeEnvironment0.isAllLevelsVisible();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setObserverCameraElevationAdjusted(true);
      homeEnvironment1.setVideoWidth((-1380));
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      assertEquals(2, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.910791328878232
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeEnvironment0.setVideoCameraPath(linkedList0);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_QUALITY;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("c5;IB-Drzi", propertyChangeListener0);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(linkedList0, "~9I", object0, "c5;IB-Drzi");
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      HomeEnvironment.DrawingMode.values();
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setVideoFrameRate((-3767));
      homeEnvironment0.setGroundTexture((HomeTexture) null);
      homeEnvironment0.setVideoQuality((-3767));
      homeEnvironment0.getVideoFrameRate();
      homeEnvironment0.setPhotoHeight(2850);
      assertEquals((-3767), homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.9954171502194566
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setPhotoWidth(13684944);
      homeEnvironment0.getCeillingLightColor();
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment0.setPhotoWidth(13684944);
      homeEnvironment0.setPhotoHeight(13684944);
      homeEnvironment0.getPhotoQuality();
      homeEnvironment0.getLightColor();
      homeEnvironment0.getDrawingMode();
      assertEquals(13684944, homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.2381531034180036
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      CatalogTexture catalogTexture0 = new CatalogTexture("com.eteks.sweethome3d.model.HomeEnvironment", (Content) null, 1.0F, 243.36371F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment(320, homeTexture0, 11, homeTexture0, 320, 1135.1229F);
      homeEnvironment1.setPhotoWidth(320);
      homeEnvironment1.getCeillingLightColor();
      AspectRatio aspectRatio1 = AspectRatio.SQUARE_RATIO;
      homeEnvironment1.setVideoAspectRatio(aspectRatio1);
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment1.setPhotoHeight(320);
      HomeEnvironment homeEnvironment2 = new HomeEnvironment(6, homeTexture0, 320, homeTexture0, 8, 1.0F);
      homeEnvironment2.getPhotoQuality();
      homeEnvironment2.getWallsAlpha();
      homeEnvironment2.getVideoHeight();
      homeEnvironment2.getSkyTexture();
      homeEnvironment1.getVideoCameraPath();
      assertEquals(AspectRatio.SQUARE_RATIO, homeEnvironment1.getVideoAspectRatio());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.getGroundTexture();
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(320, homeEnvironment1.getVideoWidth());
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("", temporaryURLContent0, (-2589L), (-1773.0F), false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(25, homeTexture0, 25, 25, 2.0F);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeTexture homeTexture1 = homeEnvironment1.getGroundTexture();
      assertEquals(25, homeEnvironment1.getLightColor());
      assertNotNull(homeTexture1);
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(2.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(25, homeEnvironment1.getSkyColor());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(25, homeEnvironment1.getGroundColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.0426423449562177
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyColor((-827));
      homeEnvironment0.setSubpartSizeUnderLight((-1773));
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL_AND_OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.setWallsAlpha((-743));
      homeEnvironment0.setVideoWidth((-743));
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.setPhotoQuality((-743));
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setPhotoHeight(1769);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_QUALITY;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("RATIO_2_1", propertyChangeListener0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setPhotoHeight((-1773));
      homeEnvironment0.getPhotoQuality();
      System.setCurrentTimeMillis(4502);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.2228255375915524
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeEnvironment0.setVideoCameraPath(linkedList0);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_QUALITY;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("c5;IB-Drzi", propertyChangeListener0);
      homeEnvironment0.setPhotoQuality((-1380));
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setGroundColor(1445);
      homeEnvironment0.setCeillingLightColor(1445);
      homeEnvironment0.getVideoAspectRatio();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      homeEnvironment0.setVideoFrameRate((-4152));
      homeEnvironment0.getLightColor();
      homeEnvironment0.setVideoQuality(1445);
      homeEnvironment0.setCeillingLightColor(2);
      ClassLoader.getSystemClassLoader();
      ClassLoader.getSystemClassLoader();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      LinkedList<Camera> linkedList1 = new LinkedList<Camera>();
      homeEnvironment1.setVideoCameraPath(linkedList1);
      ClassLoader.getSystemClassLoader();
      homeEnvironment0.setAllLevelsVisible(false);
      int int0 = homeEnvironment0.getVideoFrameRate();
      assertFalse(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals((-4152), int0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.876156142363588
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setPhotoWidth(13684944);
      homeEnvironment0.getCeillingLightColor();
      homeEnvironment0.getLightColor();
      homeEnvironment0.setVideoQuality(13684944);
      homeEnvironment0.setCeillingLightColor(13684944);
      ClassLoader.getSystemClassLoader();
      ClassLoader.getSystemClassLoader();
      HomeEnvironment.Property.values();
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment0.clone();
      HomeEnvironment.DrawingMode[] homeEnvironment_DrawingModeArray0 = HomeEnvironment.DrawingMode.values();
      assertEquals(3, homeEnvironment_DrawingModeArray0.length);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      homeEnvironment0.setAllLevelsVisible(false);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      homeEnvironment0.getPhotoQuality();
      homeEnvironment0.setPhotoHeight(0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      homeEnvironment0.clone();
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.9721987111105235
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1887, (HomeTexture) null, 24, 0, 1887);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setAllLevelsVisible(true);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.DRAWING_MODE;
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL_AND_OUTLINE;
      homeEnvironment1.setSubpartSizeUnderLight(0.0F);
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("%3}", (PropertyChangeListener) null);
      homeEnvironment1.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment1.setAllLevelsVisible(true);
      homeEnvironment1.getPhotoQuality();
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment1.setSkyColor(0);
      homeEnvironment1.setCeillingLightColor(1887);
      homeEnvironment0.getPhotoHeight();
      homeEnvironment0.setAllLevelsVisible(true);
      int int0 = homeEnvironment1.getLightColor();
      assertEquals(HomeEnvironment.DrawingMode.FILL_AND_OUTLINE, homeEnvironment0.getDrawingMode());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.2228255375915524
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoHeight(1006);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.OBSERVER_CAMERA_ELEVATION_ADJUSTED;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      Object object0 = new Object();
      homeEnvironment0.setVideoFrameRate(1006);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(object0, "", "", "");
      propertyChangeEvent0.toString();
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      Object object1 = new Object();
      Camera camera0 = new Camera(1.3684944E7F, 73.0F, 0.0F, 0.0F, (-464.32F), 73.0F);
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent("java.beans.PropertyChangeEvent[propertyName=; oldValue=; newValue=; propagationId=null; source=java.lang.Object@7a17a1f2]", "Q31BMn'XC c`SW|1", object1, camera0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent1);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.setLightColor((-202));
      homeEnvironment1.setPhotoWidth((-1338));
      homeEnvironment1.setVideoFrameRate(1006);
      HomeEnvironment.Property homeEnvironment_Property1 = HomeEnvironment.Property.OBSERVER_CAMERA_ELEVATION_ADJUSTED;
      homeEnvironment1.addPropertyChangeListener(homeEnvironment_Property1, propertyChangeListenerProxy0);
      homeEnvironment1.setAllLevelsVisible(true);
      homeEnvironment0.getPhotoQuality();
      homeEnvironment1.getVideoCameraPath();
      homeEnvironment1.setSkyColor(1006);
      homeEnvironment1.setCeillingLightColor((-202));
      homeEnvironment1.getPhotoWidth();
      int int0 = homeEnvironment1.getLightColor();
      assertEquals(1006, homeEnvironment1.getSkyColor());
      assertEquals(13684944, int0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.1558341755211026
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.setSubpartSizeUnderLight(0.0F);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setGroundColor(182);
      homeEnvironment0.setCeillingLightColor(3);
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.setVideoFrameRate(3);
      homeEnvironment0.getLightColor();
      URL uRL0 = MockURL.getFileExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("W)W-|=b,lie*", (String) null, uRLContent0, 3, 3, (String) null, false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setSkyTexture(homeTexture0);
      CatalogTexture catalogTexture1 = new CatalogTexture("Y", uRLContent0, 1240.23F, 3);
      homeEnvironment0.setSkyTexture(homeTexture0);
      homeEnvironment0.setSubpartSizeUnderLight(2.0F);
      homeEnvironment0.isObserverCameraElevationAdjusted();
      homeEnvironment0.setLightColor(13684944);
      homeEnvironment0.getDrawingMode();
      assertEquals(AspectRatio.RATIO_3_2, homeEnvironment0.getPhotoAspectRatio());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.046430838943019
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoWidth(25);
      homeEnvironment0.setVideoQuality(25);
      homeEnvironment0.getLightColor();
      homeEnvironment0.setWallsAlpha(2141.1394F);
      homeEnvironment0.getVideoHeight();
      homeEnvironment0.getWallsAlpha();
      homeEnvironment0.setGroundColor(13684944);
      int int0 = (-3401);
      homeEnvironment0.setCeillingLightColor((-3401));
      TexturesCategory texturesCategory0 = new TexturesCategory("VIDEO_WIDTH");
      // Undeclared exception!
      try { 
        texturesCategory0.getTexture(19);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 19, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      HomeEnvironment.Property.valueOf("PHOTO_HEIGHT");
      MockURL.getFileExample();
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("", temporaryURLContent0, 0, 0, false);
      catalogTexture0.getCategory();
      catalogTexture0.setCategory((TexturesCategory) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      CatalogTexture catalogTexture1 = new CatalogTexture("PHOTO_HEIGHT", temporaryURLContent0, 783.5953F, 0.0F, false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(11053224, homeTexture0, 907, 0, 1.0F);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(907, homeEnvironment1.getSkyColor());
      
      Random.setNextRandom(11053224);
      homeEnvironment0.setSkyColor(11053224);
      assertEquals(11053224, homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.1241890720809167
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoWidth(25);
      homeEnvironment0.setVideoQuality(25);
      homeEnvironment0.getLightColor();
      homeEnvironment0.setWallsAlpha(2152.0F);
      homeEnvironment0.getVideoHeight();
      homeEnvironment0.getWallsAlpha();
      homeEnvironment0.setVideoFrameRate((-1101));
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      Camera.Lens camera_Lens0 = Camera.Lens.FISHEYE;
      Camera camera0 = new Camera(1.5F, 0.0F, 0.0F, (-1101), 0.0F, 1.0F, (-1101), camera_Lens0);
      linkedList0.add(camera0);
      homeEnvironment0.setVideoCameraPath(linkedList0);
      homeEnvironment0.setVideoCameraPath(linkedList0);
      homeEnvironment0.getVideoQuality();
      int int0 = homeEnvironment0.getCeillingLightColor();
      assertEquals(19, homeEnvironment0.getVideoHeight());
      assertEquals(13684944, int0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.171659610384074
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.setSubpartSizeUnderLight(0.0F);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setGroundColor(182);
      homeEnvironment0.setCeillingLightColor(3);
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.setVideoFrameRate(3);
      homeEnvironment0.getLightColor();
      URL uRL0 = MockURL.getFileExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("W)W-|=b,lie*", (String) null, uRLContent0, 3, 3, (String) null, false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setSkyTexture(homeTexture0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      CatalogTexture catalogTexture1 = new CatalogTexture("Y", uRLContent0, 1240.23F, 3);
      HomeTexture homeTexture1 = new HomeTexture(catalogTexture1);
      homeEnvironment0.setSkyTexture(homeTexture1);
      homeEnvironment0.setSubpartSizeUnderLight(13684944);
      homeEnvironment0.isObserverCameraElevationAdjusted();
      homeEnvironment0.setLightColor(1);
      homeEnvironment0.setGroundTexture(homeTexture1);
      assertEquals(AspectRatio.RATIO_3_2, homeEnvironment0.getPhotoAspectRatio());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=3.1707938095182726
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL_AND_OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.setPhotoHeight(13684944);
      homeEnvironment0.setSubpartSizeUnderLight(4.0F);
      AspectRatio aspectRatio0 = AspectRatio.FREE_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setGroundColor(3021);
      homeEnvironment0.setCeillingLightColor(14);
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.setVideoFrameRate(3);
      AspectRatio aspectRatio1 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setVideoAspectRatio(aspectRatio1);
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment0.setPhotoHeight(400);
      homeEnvironment0.getPhotoQuality();
      homeEnvironment0.getDrawingMode();
      assertEquals(AspectRatio.RATIO_2_1, homeEnvironment0.getVideoAspectRatio());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=3.3459917263308907
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-3420), (HomeTexture) null, (-3420), (-3420), (-559.3202F));
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.CEILING_LIGHT_COLOR;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      homeEnvironment0.setCeillingLightColor((-3420));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setVideoFrameRate((-3420));
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(homeEnvironment1, (String) null, "", propertyChangeListenerProxy0);
      propertyChangeEvent0.toString();
      propertyChangeEvent0.toString();
      propertyChangeEvent0.toString();
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_16_9;
      homeEnvironment0.setSkyTexture((HomeTexture) null);
      homeEnvironment0.setVideoWidth((-471));
      homeEnvironment0.setPhotoHeight((-1649));
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setSubpartSizeUnderLight((-559.3202F));
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.setPhotoQuality(0);
      homeEnvironment0.setPhotoWidth((-1649));
      homeEnvironment0.setSubpartSizeUnderLight((-559.3202F));
      homeEnvironment0.getSubpartSizeUnderLight();
      homeEnvironment1.setWallsAlpha((-559.3202F));
      homeEnvironment0.getGroundColor();
      homeEnvironment1.setSkyColor((-3420));
      assertEquals(AspectRatio.RATIO_16_9, homeEnvironment0.getVideoAspectRatio());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.047707978151193
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.setSubpartSizeUnderLight(4.0F);
      homeEnvironment0.setGroundColor(3021);
      homeEnvironment0.setCeillingLightColor(14);
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.setVideoFrameRate(3);
      homeEnvironment0.getLightColor();
      homeEnvironment0.setVideoQuality(3);
      homeEnvironment0.setCeillingLightColor(2314);
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      classLoader0.getParent();
      HomeEnvironment.Property.values();
      homeEnvironment0.isAllLevelsVisible();
      int int0 = homeEnvironment0.getGroundColor();
      assertEquals(3, homeEnvironment0.getVideoFrameRate());
      assertEquals(3021, int0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      HomeEnvironment.Property.valueOf("PHOTO_WIDTH");
      MockURL.getFileExample();
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("", temporaryURLContent0, 0, 0, false);
      CatalogTexture catalogTexture1 = new CatalogTexture((String) null, temporaryURLContent0, 0.0F, 1.0F, false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture1);
      FileSystemHandling.shouldAllThrowIOExceptions();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(12, homeTexture0, 0, 12, 12);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setSkyTexture(homeTexture0);
      Random.setNextRandom((-1073741823));
      HomeEnvironment.Property[] homeEnvironment_PropertyArray0 = HomeEnvironment.Property.values();
      assertEquals(20, homeEnvironment_PropertyArray0.length);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.0983891977172062
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL;
      homeEnvironment1.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment1.setVideoFrameRate(2192);
      homeEnvironment0.setLightColor(2192);
      homeEnvironment1.setVideoCameraPath((List<Camera>) null);
      AspectRatio aspectRatio0 = homeEnvironment1.getVideoAspectRatio();
      homeEnvironment1.getPhotoAspectRatio();
      homeEnvironment1.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setPhotoQuality(1970);
      homeEnvironment0.getSubpartSizeUnderLight();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.DRAWING_MODE;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy((String) null, propertyChangeListener0);
      homeEnvironment1.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      assertEquals(2192, homeEnvironment0.getLightColor());
      assertEquals(240, homeEnvironment0.getVideoHeight());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=3.2373809026458025
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoHeight(1006);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.OBSERVER_CAMERA_ELEVATION_ADJUSTED;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(object0, "", "", "");
      propertyChangeEvent0.toString();
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      Object object1 = new Object();
      homeEnvironment0.setGroundColor(1006);
      Camera camera0 = new Camera(1.3684944E7F, 73.0F, 0.0F, 0.0F, (-464.32F), 73.0F);
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent("java.beans.PropertyChangeEvent[propertyName=; oldValue=; newValue=; propagationId=null; source=java.lang.Object@5bd13f94]", "Q31BMn'XC c`SW|1", object1, camera0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent1);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.setLightColor((-202));
      homeEnvironment1.setPhotoWidth((-1338));
      homeEnvironment1.setVideoFrameRate(1006);
      HomeEnvironment.Property homeEnvironment_Property1 = HomeEnvironment.Property.OBSERVER_CAMERA_ELEVATION_ADJUSTED;
      homeEnvironment1.addPropertyChangeListener(homeEnvironment_Property1, propertyChangeListenerProxy0);
      homeEnvironment1.setAllLevelsVisible(true);
      homeEnvironment0.getPhotoQuality();
      homeEnvironment1.getVideoCameraPath();
      homeEnvironment1.setSkyColor(1006);
      homeEnvironment1.setCeillingLightColor((-202));
      float float0 = homeEnvironment1.getSubpartSizeUnderLight();
      assertEquals((-202), homeEnvironment1.getCeillingLightColor());
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.9224967595081845
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor(0);
      homeEnvironment0.setGroundColor(0);
      homeEnvironment0.setCeillingLightColor(986);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.setVideoFrameRate(3030);
      homeEnvironment0.setLightColor(3030);
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.getPhotoAspectRatio();
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setPhotoQuality(76);
      ClassLoader.getSystemClassLoader();
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("ygHN", (PropertyChangeListener) null);
      assertEquals("ygHN", propertyChangeListenerProxy0.getPropertyName());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.258778759004467
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-1773), (HomeTexture) null, (-743), (HomeTexture) null, 4502, 4502);
      homeEnvironment0.setSkyColor((-827));
      homeEnvironment0.setSubpartSizeUnderLight((-1773));
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL_AND_OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.setWallsAlpha((-743));
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_WIDTH;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setVideoWidth(1062);
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.setPhotoQuality((-743));
      homeEnvironment0.setSkyColor((-1773));
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setPhotoHeight(1769);
      HomeEnvironment.Property homeEnvironment_Property1 = HomeEnvironment.Property.PHOTO_QUALITY;
      PropertyChangeListener propertyChangeListener1 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("RATIO_2_1", propertyChangeListener1);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property1, propertyChangeListenerProxy1);
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.setCeillingLightColor((-1338));
      homeEnvironment0.setSkyTexture((HomeTexture) null);
      homeEnvironment0.setSubpartSizeUnderLight(0.0F);
      homeEnvironment0.isObserverCameraElevationAdjusted();
      homeEnvironment0.setLightColor((-1338));
      homeEnvironment0.getVideoQuality();
      assertEquals(1062, homeEnvironment0.getVideoWidth());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      CatalogTexture catalogTexture0 = new CatalogTexture("PHOTO_ASPECT_RATIO", "PHOTO_ASPECT_RATIO", resourceURLContent0, 4, 1572.54F, "");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(4, homeTexture0, 4, homeTexture0, 4, 4);
      homeEnvironment0.setSubpartSizeUnderLight(4);
      assertEquals(4.0F, homeEnvironment0.getSubpartSizeUnderLight(), 0.01F);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=3.068020630028253
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.getLightColor();
      homeEnvironment0.setWallsAlpha(2152.0F);
      homeEnvironment0.getVideoHeight();
      homeEnvironment0.getWallsAlpha();
      homeEnvironment0.setVideoFrameRate((-1101));
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      Camera.Lens camera_Lens0 = Camera.Lens.NORMAL;
      Camera camera0 = new Camera((-344.16086F), (-2773.3857F), (-1.0F), (-1.0F), (-344.16086F), 2152.0F, (-2597L), camera_Lens0);
      linkedList0.add(camera0);
      Camera.Lens camera_Lens1 = Camera.Lens.FISHEYE;
      Camera camera1 = new Camera(1.5F, 0.0F, 0.0F, (-1101), 0.0F, 1.0F, (-1101), camera_Lens1);
      camera1.setFieldOfView((-1.0F));
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment0.setVideoCameraPath(linkedList0);
      homeEnvironment0.setVideoCameraPath(linkedList0);
      homeEnvironment0.setVideoCameraPath((List<Camera>) null);
      homeEnvironment0.getCeillingLightColor();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      int int0 = homeEnvironment1.getVideoQuality();
      assertEquals(2152.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.4553949936248007
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeEnvironment0.setVideoCameraPath(linkedList0);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_QUALITY;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("c5;IB-Drzi", propertyChangeListener0);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(linkedList0, "~9I", object0, "c5;IB-Drzi");
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      HomeEnvironment.DrawingMode.values();
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setVideoFrameRate((-3767));
      linkedList0.pollFirst();
      linkedList0.add((Camera) null);
      homeEnvironment0.setVideoCameraPath(linkedList0);
      ClassLoader.getSystemClassLoader();
      homeEnvironment0.setAllLevelsVisible(true);
      assertTrue(homeEnvironment0.isAllLevelsVisible());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.820255121797642
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeEnvironment0.setVideoCameraPath(linkedList0);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_QUALITY;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("c5;IB-Drzi", propertyChangeListener0);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(linkedList0, "~9I", object0, "c5;IB-Drzi");
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      HomeEnvironment.DrawingMode.values();
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setVideoFrameRate((-3767));
      Camera.Lens camera_Lens0 = Camera.Lens.FISHEYE;
      linkedList0.pollFirst();
      Camera camera0 = new Camera((-3767), 0.0F, (-1773.0F), 901.44995F, 0.0F, 1470.4353F, (-3767), camera_Lens0);
      linkedList0.add(camera0);
      HomeEnvironment.Property.values();
      homeEnvironment0.isAllLevelsVisible();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.getSkyTexture();
      assertTrue(homeEnvironment0.isAllLevelsVisible());
      assertEquals((-3767), homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.9383113296830845
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("ek=", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("ek=", propertyChangeListenerProxy0);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.ALL_LEVELS_VISIBLE;
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy1);
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      HomeEnvironment.DrawingMode.values();
      boolean boolean0 = false;
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.setVideoFrameRate(8);
      AspectRatio aspectRatio1 = AspectRatio.VIEW_3D_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio1);
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.setVideoQuality(13684944);
      HomeEnvironment.DrawingMode.values();
      homeEnvironment0.isAllLevelsVisible();
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("$VALUES");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.$VALUES
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      Camera.Lens camera_Lens0 = Camera.Lens.SPHERICAL;
      Camera camera0 = new Camera(18.0F, 2458.2913F, 18.0F, 1.0F, 1.0F, 1.0F, 3570L, camera_Lens0);
      camera0.setFieldOfView((-4931.02F));
      linkedList0.add(camera0);
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("", temporaryURLContent0, 1.5F, (-2239.0845F), true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, homeTexture0, 0, (-4592), (-2124.239F));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      assertTrue(homeEnvironment2.isObserverCameraElevationAdjusted());
      assertEquals(0, homeEnvironment2.getSkyColor());
      assertEquals(400, homeEnvironment2.getPhotoWidth());
      assertNotSame(homeEnvironment2, homeEnvironment0);
      assertEquals(13684944, homeEnvironment2.getCeillingLightColor());
      assertEquals((-2124.239F), homeEnvironment2.getWallsAlpha(), 0.01F);
      assertEquals((-4592), homeEnvironment2.getLightColor());
      assertEquals(0, homeEnvironment2.getGroundColor());
      assertEquals(320, homeEnvironment2.getVideoWidth());
      assertEquals(300, homeEnvironment2.getPhotoHeight());
      assertEquals(25, homeEnvironment2.getVideoFrameRate());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      URL uRL0 = MockURL.getFtpExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, false);
      CatalogTexture catalogTexture0 = new CatalogTexture("", resourceURLContent0, 8, 8, false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(8, homeTexture0, 8, 8, (-577.16925F));
      homeEnvironment0.getPhotoAspectRatio();
      assertEquals(8, homeEnvironment0.getLightColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(8, homeEnvironment0.getSkyColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals((-577.16925F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(8, homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoQuality(25);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent((URL) null);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      AspectRatio aspectRatio0 = AspectRatio.FREE_RATIO;
      // Undeclared exception!
      try { 
        homeEnvironment1.setVideoAspectRatio(aspectRatio0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unsupported aspect ratio FREE_RATIO
         //
         verifyException("com.eteks.sweethome3d.model.HomeEnvironment", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      HomeEnvironment.Property.valueOf("PHOTO_WIDTH");
      MockURL.getFtpExample();
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("", temporaryURLContent0, 0, 0, false);
      CatalogTexture catalogTexture1 = new CatalogTexture("", temporaryURLContent0, 0.0F, 1.0F, false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture1);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-148), homeTexture0, 0, homeTexture0, (-148), 0.0F);
      homeEnvironment0.clone();
      Random.setNextRandom((-1073741823));
      HomeEnvironment.Property[] homeEnvironment_PropertyArray0 = HomeEnvironment.Property.values();
      assertEquals(20, homeEnvironment_PropertyArray0.length);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.7244547079196284
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoQuality(25);
      homeEnvironment0.getLightColor();
      homeEnvironment0.getVideoHeight();
      homeEnvironment0.getWallsAlpha();
      homeEnvironment0.setVideoFrameRate((-1101));
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      Camera.Lens camera_Lens0 = Camera.Lens.NORMAL;
      Camera camera0 = new Camera((-358.84875F), (-2773.0F), (-1.0F), (-1.0F), (-358.84875F), 0.0F, (-2597L), camera_Lens0);
      Camera camera1 = camera0.clone();
      linkedList0.add(camera1);
      Camera.Lens camera_Lens1 = Camera.Lens.FISHEYE;
      Camera camera2 = new Camera(1.5F, 0.0F, 0.0F, (-1101), 0.0F, 1.0F, (-1101), camera_Lens1);
      camera2.setFieldOfView((-1.0F));
      linkedList0.add(camera2);
      homeEnvironment0.setVideoCameraPath(linkedList0);
      homeEnvironment0.setVideoCameraPath(linkedList0);
      homeEnvironment0.setVideoCameraPath((List<Camera>) null);
      assertEquals((-1101), homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_HEIGHT;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setVideoQuality(25);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent((URL) null);
      Random.setNextRandom((-3259));
      HomeEnvironment.Property[] homeEnvironment_PropertyArray0 = HomeEnvironment.Property.values();
      assertEquals(20, homeEnvironment_PropertyArray0.length);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, false);
      CatalogTexture catalogTexture0 = new CatalogTexture("VIDEO_QUALITY", resourceURLContent0, 724.0F, 2453.2473F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-1008), homeTexture0, (-2317), homeTexture0, 0, (-559.3202F));
      int int0 = homeEnvironment0.getVideoFrameRate();
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals((-1008), homeEnvironment0.getGroundColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals((-2317), homeEnvironment0.getSkyColor());
      assertEquals((-559.3202F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(25, int0);
      assertEquals(0, homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.6401461330725327
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment1.setVideoQuality(0);
      homeEnvironment0.getSkyColor();
      homeEnvironment1.setVideoQuality((-819));
      homeEnvironment0.getCeillingLightColor();
      int int0 = homeEnvironment1.getLightColor();
      assertEquals(HomeEnvironment.DrawingMode.OUTLINE, homeEnvironment0.getDrawingMode());
      assertEquals(13684944, int0);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.getVideoCameraPath();
      int int0 = homeEnvironment0.getVideoQuality();
      assertEquals(0, int0);
      
      homeEnvironment0.setPhotoQuality(0);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(0, homeEnvironment0.getPhotoQuality());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.850863601176158
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      CatalogTexture catalogTexture0 = new CatalogTexture("com.eteks.sweethome3d.model.HomeEnvironment", (Content) null, 1.0F, 243.36371F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment(320, homeTexture0, 11, homeTexture0, 320, 1135.1229F);
      homeEnvironment1.setPhotoWidth(320);
      homeEnvironment1.getCeillingLightColor();
      AspectRatio aspectRatio1 = AspectRatio.SQUARE_RATIO;
      homeEnvironment1.setVideoAspectRatio(aspectRatio1);
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment1.setPhotoHeight(320);
      catalogTexture0.getCategory();
      catalogTexture0.setCategory((TexturesCategory) null);
      HomeEnvironment homeEnvironment2 = new HomeEnvironment(6, homeTexture0, 320, homeTexture0, 8, 1.0F);
      homeEnvironment2.setSkyColor((-137));
      int int0 = homeEnvironment2.getPhotoQuality();
      assertEquals((-137), homeEnvironment2.getSkyColor());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.4553949936248007
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeEnvironment0.setVideoCameraPath(linkedList0);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_QUALITY;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("c5;IB-Drzi", propertyChangeListener0);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(linkedList0, "~9I", object0, "c5;IB-Drzi");
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      HomeEnvironment.DrawingMode.values();
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setVideoFrameRate((-3767));
      Camera.Lens camera_Lens0 = Camera.Lens.FISHEYE;
      linkedList0.pollFirst();
      Camera camera0 = new Camera((-3767), 0.0F, (-1773.0F), 901.44995F, 0.0F, 1470.4353F, (-3767), camera_Lens0);
      linkedList0.add(camera0);
      homeEnvironment0.setVideoCameraPath(linkedList0);
      ClassLoader.getSystemClassLoader();
      homeEnvironment0.setAllLevelsVisible(false);
      assertEquals((-3767), homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      HomeEnvironment.Property.valueOf("PHOTO_HEIGHT");
      MockURL.getFileExample();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "#");
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("", temporaryURLContent0, (-6), (-6), false);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      CatalogTexture catalogTexture1 = new CatalogTexture((String) null, temporaryURLContent0, 0.0F, 1.0F, false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture1);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1563, homeTexture0, 400, 400, 400);
      int int0 = homeEnvironment0.getVideoHeight();
      assertEquals(1563, homeEnvironment0.getGroundColor());
      assertEquals(400.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(240, int0);
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(400, homeEnvironment0.getSkyColor());
      assertEquals(400, homeEnvironment0.getLightColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      int int0 = 1006;
      homeEnvironment0.setPhotoHeight(1006);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      Object object0 = new Object();
      String string0 = "";
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(object0, "", "", "");
      propertyChangeEvent0.toString();
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setWallsAlpha(0.0F);
      Object object1 = new Object();
      propertyChangeEvent0.setPropagationId("java.beans.PropertyChangeEvent[propertyName=; oldValue=; newValue=; propagationId=null; source=java.lang.Object@22643ff4]");
      Camera camera0 = new Camera(1.3684944E7F, 73.0F, 0.0F, 0.0F, (-464.32F), 73.0F);
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent("java.beans.PropertyChangeEvent[propertyName=; oldValue=; newValue=; propagationId=null; source=java.lang.Object@22643ff4]", "Q31BMn'XC c`SW|1", object1, camera0);
      homeEnvironment0.setLightColor((-202));
      try { 
        MockURL.URL("", "10.4", (-202), "");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // Invalid port number :-202
         //
         verifyException("java.net.URL", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.376742981833967
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      int int0 = 320;
      float float0 = 1.0F;
      CatalogTexture catalogTexture0 = new CatalogTexture("com.eteks.sweethome3d.model.HomeEnviroment", (Content) null, 1.0F, 243.36371F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      TexturesCategory texturesCategory0 = new TexturesCategory("com.eteks.sweethome3d.model.HomeEnviroment");
      catalogTexture0.setCategory(texturesCategory0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      HomeEnvironment homeEnvironment1 = new HomeEnvironment(320, homeTexture0, 41, homeTexture0, 320, 1135.1229F);
      CatalogTexture catalogTexture1 = new CatalogTexture("com.eteks.sweethome3d.model.HomeEnviroment", (Content) null, 1135.1229F, 243.36371F, true);
      catalogTexture0.compareTo(catalogTexture1);
      homeEnvironment1.setPhotoWidth(320);
      homeEnvironment1.getCeillingLightColor();
      AspectRatio aspectRatio1 = AspectRatio.FREE_RATIO;
      // Undeclared exception!
      try { 
        homeEnvironment1.setVideoAspectRatio(aspectRatio1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unsupported aspect ratio FREE_RATIO
         //
         verifyException("com.eteks.sweethome3d.model.HomeEnvironment", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.7321184591665695
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoHeight(1006);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setPhotoWidth(1);
      homeEnvironment0.getCeillingLightColor();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "NORMAL");
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment0.setPhotoHeight(1006);
      int int0 = homeEnvironment0.getPhotoQuality();
      assertEquals(AspectRatio.RATIO_3_2, homeEnvironment0.getPhotoAspectRatio());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.8778952727983707
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1906, (HomeTexture) null, (-191), 748, 1906);
      homeEnvironment0.setPhotoHeight(14);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.GROUND_COLOR;
      homeEnvironment0.setSubpartSizeUnderLight(1906);
      String string0 = "T";
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("T", propertyChangeListener0);
      Integer integer0 = new Integer(1906);
      Camera camera0 = new Camera(748, (-1448.69F), (-191), 699.0F, 518.9904F, 518.9904F);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent("38cuagO,)S", (String) null, integer0, camera0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.clone();
      homeEnvironment0.clone();
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent(homeEnvironment_Property0, "T", "PHOTO_QUALITY", "T");
      propertyChangeEvent1.toString();
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent1);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.getVideoQuality();
      homeEnvironment0.setPhotoQuality(251);
      homeEnvironment0.getVideoFrameRate();
      homeEnvironment0.getVideoWidth();
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("3m]epJ");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.3m]epJ
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.9918749204059027
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoWidth(25);
      homeEnvironment0.setVideoQuality(25);
      homeEnvironment0.getLightColor();
      homeEnvironment0.setWallsAlpha(2152.0F);
      homeEnvironment0.getVideoHeight();
      homeEnvironment0.getWallsAlpha();
      homeEnvironment0.setVideoFrameRate((-1101));
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      Camera.Lens camera_Lens0 = Camera.Lens.NORMAL;
      Camera camera0 = new Camera((-344.16086F), (-2773.3857F), (-1.0F), (-1.0F), (-344.16086F), 2152.0F, (-2597L), camera_Lens0);
      Camera camera1 = camera0.clone();
      linkedList0.add(camera1);
      Camera.Lens camera_Lens1 = Camera.Lens.FISHEYE;
      Camera camera2 = new Camera(1.5F, 0.0F, 0.0F, (-1101), 0.0F, 1.0F, (-1101), camera_Lens1);
      camera2.setFieldOfView((-1.0F));
      linkedList0.add(camera2);
      homeEnvironment0.setVideoCameraPath(linkedList0);
      homeEnvironment0.setVideoCameraPath(linkedList0);
      homeEnvironment0.setVideoCameraPath((List<Camera>) null);
      int int0 = homeEnvironment0.getCeillingLightColor();
      assertEquals(2152.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(13684944, int0);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.5651558273941215
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      System.setCurrentTimeMillis(229L);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("#D", temporaryURLContent0, 2.0F, 0.0F, true);
      homeEnvironment0.setGroundColor((-815));
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      homeEnvironment1.getSkyColor();
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment2 = new HomeEnvironment((-815), homeTexture0, (-936), (-936), 1.3333334F);
      homeEnvironment2.setVideoQuality(49);
      homeEnvironment0.getCeillingLightColor();
      assertEquals((-815), homeEnvironment0.getGroundColor());
      
      HomeEnvironment homeEnvironment3 = new HomeEnvironment();
      HomeTexture homeTexture1 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment4 = new HomeEnvironment(13684944, homeTexture1, 1872, homeTexture1, 12, 1.3333334F);
      int int0 = homeEnvironment4.getLightColor();
      assertEquals(12, int0);
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.7808459625592628
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(25, (HomeTexture) null, 25, (HomeTexture) null, 0, 25);
      homeEnvironment0.setSkyColor(0);
      homeEnvironment0.setWallsAlpha((-464.32F));
      homeEnvironment0.setGroundTexture((HomeTexture) null);
      homeEnvironment0.setPhotoHeight(0);
      URL uRL0 = MockURL.getFileExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("%2", "Wjw@Y/2M/b<~}\\", uRLContent0, (-1429.9469F), (-1.0F), "", false);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeTexture homeTexture1 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setSkyTexture(homeTexture1);
      CatalogTexture catalogTexture1 = new CatalogTexture("}N", uRLContent0, (-1.0F), 157.7071F);
      HomeTexture homeTexture2 = new HomeTexture(homeTexture1);
      homeEnvironment0.setSkyTexture((HomeTexture) null);
      homeEnvironment0.setSubpartSizeUnderLight(2453.2473F);
      homeEnvironment0.isObserverCameraElevationAdjusted();
      homeEnvironment0.setLightColor(25);
      homeEnvironment0.getDrawingMode();
      assertEquals(2453.2473F, homeEnvironment0.getSubpartSizeUnderLight(), 0.01F);
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoHeight(1019);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.SKY_COLOR;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(object0, "", "", "");
      Camera.Lens camera_Lens0 = Camera.Lens.SPHERICAL;
      Camera camera0 = new Camera(1.7777778F, 1.7777778F, 1019, 1.7777778F, 1.7777778F, (-2143.7F), 1019, camera_Lens0);
      propertyChangeEvent0.setPropagationId(camera0);
      propertyChangeEvent0.toString();
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Name is null
         //
         verifyException("java.lang.Enum", e);
      }
  }
}
