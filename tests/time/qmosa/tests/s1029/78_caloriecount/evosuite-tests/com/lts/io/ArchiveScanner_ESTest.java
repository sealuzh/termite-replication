/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 11:36:54 GMT 2019
 */

package com.lts.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.lts.io.ArchiveScanner;
import com.lts.io.ImprovedFile;
import java.io.File;
import java.io.IOException;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.net.URI;
import java.util.Collection;
import java.util.Comparator;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Set;
import java.util.Vector;
import java.util.function.Predicate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ArchiveScanner_ESTest extends ArchiveScanner_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = "\\ufNJ~+zjO@OB&";
      ImprovedFile improvedFile0 = new ImprovedFile(string0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[7];
      stringArray0[0] = string0;
      stringArray0[1] = "eqi[";
      stringArray0[2] = string0;
      stringArray0[3] = "1[O/D&[p%%gm'%H";
      stringArray0[4] = string0;
      stringArray0[5] = "eqi[";
      stringArray0[6] = "eqi[";
      archiveScanner0.setIncludes(stringArray0);
      // Undeclared exception!
      try { 
        archiveScanner0.processFile("eqi[");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.9140273284145395
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Vector<String> vector0 = new Vector<String>();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) vector0);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.or(predicate1);
      Predicate<Object> predicate3 = Predicate.isEqual((Object) null);
      predicate2.test(vector0);
      predicate0.negate();
      Predicate<Object> predicate4 = predicate2.and(predicate3);
      vector0.removeIf(predicate0);
      Predicate<Object> predicate5 = predicate4.or(predicate3);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      Predicate.isEqual((Object) vector0);
      Predicate<Object> predicate6 = predicate2.and(predicate3);
      predicate4.or(predicate6);
      predicate5.negate();
      LinkedList<String> linkedList2 = new LinkedList<String>();
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      Locale.filterTags((List<Locale.LanguageRange>) linkedList3, (Collection<String>) vector0, locale_FilteringMode0);
      predicate5.or(predicate3);
      Locale locale0 = Locale.JAPAN;
      linkedList1.removeIf(predicate0);
      ImprovedFile improvedFile0 = new ImprovedFile("Yt1d/}LL|Do%");
      MockFile.createTempFile("INVALID_FILE_NAME", "INVALID_FILE_NAME", (File) improvedFile0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "INVALID_FILE_NAME";
      stringArray0[1] = "Yt1d/}LL|Do%";
      archiveScanner0.setIncludes(stringArray0);
      Vector<String> vector1 = new Vector<String>();
      archiveScanner0.dirsExcluded = vector1;
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(improvedFile0, "Yt1d/}LL|Do%", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.533344419789668
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = "\\ufNJ~+ztO@OBM&";
      ImprovedFile improvedFile0 = new ImprovedFile(string0);
      ImprovedFile improvedFile1 = improvedFile0.createTempDir("Od]K9sp", "Od]K9sp");
      improvedFile1.getCanonicalFile();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      improvedFile1.setExecutable(false);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("\\ufNJ~+zjO@OBM&/Od]K9sp0Od]K9sp/Od]K9sp1pM4S-dh$Pt{K96");
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)67;
      byteArray0[1] = (byte) (-81);
      byteArray0[2] = (byte)15;
      byteArray0[3] = (byte) (-111);
      byteArray0[4] = (byte) (-111);
      byteArray0[5] = (byte)65;
      byteArray0[6] = (byte) (-81);
      byteArray0[7] = (byte)15;
      byteArray0[8] = (byte) (-119);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.dirsIncluded = vector0;
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("\\ufNJ~+ztO@OBM&/Od]K9sp0Od]K9sp");
      FileSystemHandling.appendDataToFile(evoSuiteFile1, byteArray0);
      improvedFile0.deleteOnExit();
      String[] stringArray0 = new String[5];
      stringArray0[0] = string0;
      stringArray0[1] = "Od]K9sp";
      stringArray0[2] = ":N-9cbV(djCb)v-l6.j8r.jar";
      stringArray0[3] = "sEAR";
      stringArray0[4] = "Od]K9sp";
      archiveScanner0.setIncludes(stringArray0);
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(improvedFile0, "Od]K9sp", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String string0 = "\\ufNJ~+ztO@OBM&";
      ImprovedFile improvedFile0 = new ImprovedFile(string0);
      ImprovedFile improvedFile1 = improvedFile0.createTempDir("Od]K9sp", "Od]K9sp");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("\\ufNJ~+zjO@OBM&/Od]K9sp0Od]K9sp");
      FileSystemHandling.setPermissions(evoSuiteFile0, false, false, true);
      improvedFile1.getCanonicalFile();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      improvedFile1.setExecutable(true);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("\\ufNJ~+zjO@OBM&/Od]K9sp0Od]K9sp/Od]K9sp1pM4S-dh$Pt{K96");
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)67;
      byteArray0[1] = (byte) (-81);
      byteArray0[2] = (byte)15;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)65;
      byteArray0[6] = (byte) (-81);
      byteArray0[7] = (byte)15;
      byteArray0[8] = (byte) (-119);
      FileSystemHandling.appendDataToFile(evoSuiteFile1, byteArray0);
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.dirsIncluded = vector0;
      FileSystemHandling.shouldAllThrowIOExceptions();
      vector0.add((Object) archiveScanner0.dirsIncluded);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "Od]K9sp";
      stringArray0[1] = "SBPZ9 _]r?g";
      stringArray0[2] = "Od]K9sp";
      archiveScanner0.setIncludes(stringArray0);
      // Undeclared exception!
      try { 
        archiveScanner0.processFile(string0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Vector<String> vector0 = new Vector<String>();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) vector0);
      vector0.trimToSize();
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.or(predicate1);
      vector0.removeAllElements();
      Predicate<Object> predicate3 = Predicate.isEqual((Object) null);
      Predicate<Object> predicate4 = predicate2.and(predicate0);
      predicate2.test(vector0);
      Predicate<Object> predicate5 = predicate3.negate();
      Predicate<Object> predicate6 = predicate2.and(predicate3);
      predicate5.negate();
      vector0.removeIf(predicate0);
      Predicate.isEqual((Object) predicate5);
      predicate6.test((Object) null);
      predicate6.or(predicate3);
      vector0.add((String) null);
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      predicate3.and(predicate4);
      Predicate<Object> predicate7 = predicate3.or(predicate2);
      Locale locale0 = Locale.JAPAN;
      Predicate<Object> predicate8 = predicate7.negate();
      linkedList0.removeIf(predicate6);
      ImprovedFile improvedFile0 = new ImprovedFile("INVALID_FILE_NAME");
      MockFile.createTempFile("Y9['!4]}s9},Feqi[", "Y9['!4]}s9},Feqi[", (File) improvedFile0);
      Predicate.isEqual((Object) linkedList0);
      vector0.clear();
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "INVALID_FILE_NAME";
      predicate1.and(predicate8);
      stringArray0[1] = "INVALID_FILE_NAME";
      archiveScanner0.setIncludes(stringArray0);
      System.setCurrentTimeMillis(0);
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory(improvedFile0, "INVALID_FILE_NAME", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.533344419789668
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String string0 = "\\ufNJ~+zjO@OB&";
      ImprovedFile improvedFile0 = new ImprovedFile(string0);
      ImprovedFile improvedFile1 = improvedFile0.createTempDir("Od]K9sp", "Od]K9sp");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      improvedFile1.setExecutable(true);
      improvedFile0.deleteOnExit();
      Vector<String> vector0 = new Vector<String>();
      archiveScanner0.filesNotIncluded = vector0;
      archiveScanner0.haveSlowResults = true;
      improvedFile1.setReadable(true);
      String[] stringArray0 = new String[2];
      MockFile.createTempFile("i]i", "i]i", (File) improvedFile0);
      stringArray0[0] = "Od]K9sp";
      stringArray0[1] = string0;
      archiveScanner0.setIncludes(stringArray0);
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(improvedFile0, "'", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String string0 = "\\ufNJ~+zjO@OB&";
      ImprovedFile improvedFile0 = new ImprovedFile(string0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive(improvedFile0, string0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = "\\ufNJ~+zjO@OB&";
      ImprovedFile improvedFile0 = new ImprovedFile(string0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = string0;
      stringArray0[1] = string0;
      stringArray0[2] = "eqi[";
      stringArray0[3] = "Od]K9sp";
      archiveScanner0.setIncludes(stringArray0);
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive(improvedFile0, "eqi[");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      ArchiveScanner archiveScanner1 = new ArchiveScanner((ImprovedFile) null);
      Vector<String> vector0 = new Vector<String>();
      Vector<String> vector1 = new Vector<String>();
      archiveScanner1.filesExcluded = vector0;
      Vector<String> vector2 = new Vector<String>();
      // Undeclared exception!
      try { 
        archiveScanner0.scanArchive((File) null, "+_cz*G|ts{m");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.archive.AbstractNestedArchive", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.8323649625844873
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      URI uRI0 = MockURI.aFileURI;
      MockFile mockFile0 = new MockFile(":N-9cbV(djCbBv-l6.jar", ":N-9cbV(djCbBv-l6.jar");
      ImprovedFile improvedFile0 = ImprovedFile.createTempImprovedFile(":N-9cbV(djCbBv-l6.jar", ":N-9cbV(djCbBv-l6.jar", mockFile0);
      mockFile0.getCanonicalFile();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ":N-9cbV(djCbBv-l6.jar");
      mockFile0.setReadable(false, false);
      String string0 = "aa$UL;0(on\"{.jar";
      mockFile0.getAbsolutePath();
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(mockFile0, "aa$UL;0(on\"{.jar", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("!");
      ImprovedFile improvedFile1 = improvedFile0.createTempDir();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.scandir(improvedFile1, (String) null, true);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      PipedInputStream pipedInputStream1 = null;
      try {
        pipedInputStream1 = new PipedInputStream(pipedOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String string0 = "\\ufNJ~+zjO@OB&";
      ImprovedFile improvedFile0 = new ImprovedFile(string0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      ArchiveScanner archiveScanner1 = new ArchiveScanner(improvedFile0);
      archiveScanner1.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      System.setCurrentTimeMillis(1);
      // Undeclared exception!
      try { 
        archiveScanner1.processDirectory(improvedFile0, "eqi[", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      ArchiveScanner archiveScanner1 = new ArchiveScanner((ImprovedFile) null);
      ArchiveScanner archiveScanner2 = new ArchiveScanner((ImprovedFile) null);
      Vector<String> vector0 = new Vector<String>();
      Vector<String> vector1 = new Vector<String>();
      archiveScanner2.dirsNotIncluded = vector1;
      archiveScanner1.filesExcluded = vector0;
      Vector<String> vector2 = new Vector<String>();
      vector2.add("k#B");
      archiveScanner2.dirsExcluded = vector2;
      // Undeclared exception!
      try { 
        archiveScanner2.isArchive((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Vector<String> vector0 = new Vector<String>();
      Predicate.isEqual((Object) vector0);
      vector0.add((String) null);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      Locale locale0 = Locale.GERMAN;
      locale0.toLanguageTag();
      Locale locale1 = Locale.ITALY;
      Locale locale2 = Locale.GERMAN;
      Locale locale3 = Locale.GERMANY;
      Locale.Category locale_Category0 = Locale.Category.FORMAT;
      Locale.setDefault(locale_Category0, locale2);
      locale1.getDisplayCountry(locale3);
      Vector<Locale.LanguageRange> vector1 = new Vector<Locale.LanguageRange>();
      Vector<Locale> vector2 = new Vector<Locale>();
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) vector1, (Collection<Locale>) vector2, locale_FilteringMode0);
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) vector1, (Collection<Locale>) vector2, locale_FilteringMode1);
      Locale.filter((List<Locale.LanguageRange>) vector1, (Collection<Locale>) list0);
      Locale locale4 = Locale.CANADA;
      locale4.getDisplayCountry(locale0);
      Locale locale5 = Locale.TAIWAN;
      locale5.getUnicodeLocaleAttributes();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      Vector<Object> vector3 = new Vector<Object>(linkedList0);
      ImprovedFile improvedFile0 = new ImprovedFile("de");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.isArchive(improvedFile0);
      System.setCurrentTimeMillis((-4409L));
      System.setCurrentTimeMillis(383L);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.892246898188396
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Vector<String> vector0 = new Vector<String>();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) vector0);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.or(predicate1);
      Predicate<Object> predicate3 = Predicate.isEqual((Object) null);
      predicate2.test(vector0);
      predicate0.negate();
      Predicate<Object> predicate4 = predicate2.and(predicate3);
      vector0.removeIf(predicate0);
      predicate4.or(predicate3);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      Locale.filterTags((List<Locale.LanguageRange>) linkedList1, (Collection<String>) vector0, locale_FilteringMode0);
      Locale locale0 = Locale.JAPAN;
      linkedList1.removeIf(predicate4);
      ImprovedFile improvedFile0 = new ImprovedFile("INVALID_FILE_NAME");
      MockFile.createTempFile("Y9['!4]}s9},eqi[", "Y9['!4]}s9},eqi[", (File) improvedFile0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "INVALID_FILE_NAME";
      stringArray0[1] = "INVALID_FILE_NAME";
      archiveScanner0.setIncludes(stringArray0);
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(improvedFile0, ".EAR.jar0!.jar", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Vector<String> vector0 = new Vector<String>();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)109;
      byteArray0[1] = (byte)109;
      byteArray0[2] = (byte) (-30);
      byteArray0[3] = (byte)79;
      byteArray0[0] = (byte)79;
      byteArray0[5] = (byte)103;
      byteArray0[6] = (byte)92;
      byteArray0[7] = (byte)46;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Locale locale0 = Locale.CANADA_FRENCH;
      Locale locale1 = Locale.TRADITIONAL_CHINESE;
      locale1.getDisplayCountry(locale0);
      Locale locale2 = Locale.UK;
      Locale locale3 = Locale.TRADITIONAL_CHINESE;
      Locale locale4 = Locale.PRC;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale.lookupTag(linkedList0, vector0);
      Vector<Locale.LanguageRange> vector1 = new Vector<Locale.LanguageRange>();
      Vector<Locale> vector2 = new Vector<Locale>();
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) vector2);
      Locale.lookup(vector1, list0);
      locale3.getDisplayCountry(locale2);
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      Vector<Object> vector3 = new Vector<Object>(set0);
      ImprovedFile improvedFile0 = new ImprovedFile("!");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.isArchive(improvedFile0);
      System.setCurrentTimeMillis(2007L);
      System.setCurrentTimeMillis(3080L);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.4187591973137939
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/p?Z7v(`;]Od?}<0g");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      ImprovedFile improvedFile0 = new ImprovedFile("!");
      ImprovedFile improvedFile1 = new ImprovedFile(improvedFile0, ":N-9cb1V(2kCbBvW-l6");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile1);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)46;
      byteArray0[1] = (byte) (-49);
      byteArray0[2] = (byte) (-59);
      byteArray0[3] = (byte) (-33);
      byteArray0[4] = (byte)106;
      byteArray0[5] = (byte)34;
      byteArray0[6] = (byte)85;
      byteArray0[7] = (byte) (-38);
      byteArray0[8] = (byte)33;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      ImprovedFile improvedFile2 = new ImprovedFile("Sm*,Dl&{Cx\"ai.jar", "p?Z7v(`;]Od?}<");
      ImprovedFile improvedFile3 = new ImprovedFile(":N-9cb1V(2kCbBvW-l6", "crititcal.com.lts.application.errors.properties.title");
      int int0 = archiveScanner0.toFileType(improvedFile3);
      assertEquals(0, int0);
      
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/tmp");
      improvedFile2.setReadable(false, true);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      File file0 = MockFile.createTempFile("p?Z7v(`;]Od?}<", "g");
      ImprovedFile.copyFromToDir(improvedFile0, file0);
      ImprovedFile.createTempImprovedFile(":k][#E", "Sm*,Dl&{Cx\"ai.jar", improvedFile2);
      improvedFile2.delete();
      improvedFile2.setExecutable(false, false);
      int int1 = archiveScanner0.toFileType(improvedFile2);
      assertEquals(1, int1);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      ArchiveScanner archiveScanner1 = new ArchiveScanner((ImprovedFile) null);
      ArchiveScanner archiveScanner2 = new ArchiveScanner((ImprovedFile) null);
      ArchiveScanner archiveScanner3 = new ArchiveScanner((ImprovedFile) null);
      Vector<String> vector0 = new Vector<String>();
      // Undeclared exception!
      try { 
        archiveScanner2.toFileType((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.428860207414804
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/p?Z7v(`;]Od?}<0g");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      ImprovedFile improvedFile0 = new ImprovedFile("!");
      ImprovedFile improvedFile1 = new ImprovedFile(improvedFile0, ":N-9cb1V(2kCbBvW-l6");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile1);
      ImprovedFile improvedFile2 = new ImprovedFile("Sm*,Dl&{Cx\"ai.jar", "p?Z7v(`;]Od?}<");
      ImprovedFile improvedFile3 = new ImprovedFile(":N-9cb1V(2kCbBvW-l6", "crititcal.com.lts.application.errors.properties.title");
      int int0 = archiveScanner0.toFileType(improvedFile3);
      //  // Unstable assertion: assertEquals(0, int0);
      
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/tmp");
      improvedFile2.setReadable(false, true);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      File file0 = MockFile.createTempFile("p?Z7v(`;]Od?}<", "g");
      ImprovedFile.copyFromToDir(improvedFile0, file0);
      improvedFile2.delete();
      improvedFile2.setExecutable(false, false);
      int int1 = archiveScanner0.toFileType(improvedFile2);
      //  // Unstable assertion: assertEquals(2, int1);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Locale locale0 = Locale.GERMAN;
      locale0.toLanguageTag();
      Locale locale1 = Locale.ITALY;
      Locale locale2 = Locale.GERMAN;
      locale1.getDisplayCountry(locale0);
      Vector<Locale.LanguageRange> vector0 = new Vector<Locale.LanguageRange>();
      Vector<Locale> vector1 = new Vector<Locale>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) vector0, (Collection<Locale>) vector1, locale_FilteringMode0);
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      List<Locale> list1 = Locale.filter((List<Locale.LanguageRange>) vector0, (Collection<Locale>) vector1, locale_FilteringMode1);
      Locale.filter((List<Locale.LanguageRange>) vector0, (Collection<Locale>) list0);
      Locale locale3 = Locale.GERMAN;
      Locale locale4 = Locale.TRADITIONAL_CHINESE;
      locale4.getDisplayCountry(locale3);
      Locale locale5 = Locale.TAIWAN;
      locale1.clone();
      Locale locale6 = new Locale("Italien", "!");
      Locale.setDefault(locale1);
      Locale locale7 = Locale.JAPAN;
      Locale.setDefault(locale4);
      locale0.getUnicodeLocaleAttributes();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      Vector<Object> vector2 = new Vector<Object>();
      LinkedList<Integer> linkedList1 = new LinkedList<Integer>();
      Vector<Object> vector3 = new Vector<Object>(list1);
      ImprovedFile improvedFile0 = new ImprovedFile("Italien");
      Vector<String> vector4 = new Vector<String>();
      vector4.add("!");
      vector4.trimToSize();
      Vector<Locale.LanguageRange> vector5 = new Vector<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode2 = Locale.FilteringMode.EXTENDED_FILTERING;
      Locale.filter((List<Locale.LanguageRange>) vector5, (Collection<Locale>) list0, locale_FilteringMode2);
      Vector<String> vector6 = new Vector<String>();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      try { 
        archiveScanner0.scanArchive(improvedFile0, "le, ");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error trying to list archive, Italien
         //
         verifyException("com.lts.io.archive.AbstractNestedArchive", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.4471627089619605
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      String string0 = "\\uIfNJ+z^O@O_Bl&";
      ImprovedFile improvedFile0 = new ImprovedFile(string0);
      ImprovedFile improvedFile1 = improvedFile0.createTempDir("Od]K9sp", "t");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      improvedFile1.setExecutable(false);
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(improvedFile0, "", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Vector<String> vector0 = new Vector<String>();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      vector0.sort(comparator0);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) vector0);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.or(predicate1);
      Object object0 = new Object();
      Predicate<Object> predicate3 = Predicate.isEqual(object0);
      Predicate<Object> predicate4 = predicate0.and(predicate2);
      predicate1.test(predicate2);
      Predicate<Object> predicate5 = predicate3.negate();
      Predicate<Object> predicate6 = predicate3.negate();
      Predicate<Object> predicate7 = predicate2.and(predicate6);
      vector0.removeIf(predicate5);
      Predicate<Object> predicate8 = predicate4.and(predicate7);
      predicate8.or(predicate6);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      predicate0.and(predicate7);
      ImprovedFile improvedFile0 = new ImprovedFile("INVALID_FILE_NAME");
      File file0 = MockFile.createTempFile("Y}%m3cR1&-", "Y9['!4]}s9},eqi[", (File) improvedFile0);
      vector0.clear();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "Y}%m3cR1&-";
      stringArray0[1] = "Y}%m3cR1&-";
      stringArray0[2] = "INVALID_FILE_NAME";
      stringArray0[3] = "#vXu'$5:)`&5/";
      stringArray0[4] = "A4 @%(X<!?S\"s";
      archiveScanner0.setIncludes(stringArray0);
      try { 
        archiveScanner0.scandir(file0, "lyYdDr(?", true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // IO error scanning directory /home/ubuntu/termite/projects/78_caloriecount/INVALID_FILE_NAME/Y}%m3cR1&-0Y9['!4]}s9},eqi[
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }
}
