/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 11:19:46 GMT 2019
 */

package org.dom4j.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.dom4j.io.OutputFormat;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class OutputFormat_ESTest extends OutputFormat_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.262003488147391
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      String[] stringArray0 = new String[4];
      outputFormat0.setNewLineAfterNTags(1912);
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.setLineSeparator("-encoding");
      stringArray0[0] = "TR\"Achkoz)N{#";
      stringArray0[1] = "";
      outputFormat0.setIndentSize((-1069));
      stringArray0[2] = "Oz}'d4tqK' p";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setIndent("");
      String[] stringArray1 = new String[9];
      stringArray1[0] = "-encoding";
      stringArray1[1] = "";
      stringArray1[2] = "";
      stringArray1[3] = "";
      stringArray1[4] = "-encoding";
      stringArray1[5] = "Oz}'d4tqK' p";
      stringArray1[6] = "-encoding";
      stringArray1[7] = "";
      stringArray1[8] = "";
      outputFormat0.parseOptions(stringArray1, 0);
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      assertTrue(outputFormat1.isTrimText());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.774987250032101
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setSuppressDeclaration(false);
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat0.getLineSeparator();
      outputFormat0.setIndent("EbQXB/");
      outputFormat1.setIndent("-indentSize");
      OutputFormat.createCompactFormat();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "T<4y44*";
      stringArray0[1] = "-indentSize";
      stringArray0[2] = "EbQXB/";
      stringArray0[3] = "V#`O";
      stringArray0[4] = "od/0\r8XJ";
      stringArray0[5] = "-indentSize";
      stringArray0[6] = "-indentSize";
      // Undeclared exception!
      try { 
        outputFormat1.parseOptions(stringArray0, 1);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"EbQXB/\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.786100702584461
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setIndentSize(1);
      outputFormat1.setNewLineAfterNTags(1);
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      outputFormat2.setTrimText(false);
      outputFormat2.isPadText();
      OutputFormat outputFormat3 = new OutputFormat("", false);
      outputFormat2.setEncoding("");
      outputFormat2.isPadText();
      outputFormat1.setOmitEncoding(true);
      outputFormat3.setPadText(false);
      outputFormat1.setLineSeparator("xtf.uG[64o5OkEvpH#");
      OutputFormat.createPrettyPrint();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      outputFormat2.parseOptions(stringArray0, 0);
      outputFormat1.isOmitEncoding();
      OutputFormat outputFormat4 = OutputFormat.createCompactFormat();
      outputFormat4.setIndent(false);
      outputFormat0.setIndentSize((-1097548142));
      OutputFormat.createCompactFormat();
      OutputFormat.createPrettyPrint();
      outputFormat2.getEncoding();
      assertFalse(outputFormat2.isTrimText());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.2284716861944682
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setSuppressDeclaration(false);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "-xhtml";
      outputFormat0.parseOptions(stringArray0, 1040);
      outputFormat0.setIndent("-xhtml");
      stringArray0[1] = "-lineSeparator";
      stringArray0[2] = "<[TG=c&C\"zOA(wM}.Z";
      stringArray0[3] = "-expandEmptyInvalid attribute quote character (";
      stringArray0[4] = ";\"!f";
      stringArray0[5] = "";
      stringArray0[6] = "org.dom4j.io.OutputFormat";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setIndent("Go1WK$cG~!1");
      outputFormat0.setIndent("-suppressDeclaration");
      outputFormat0.setPadText(false);
      outputFormat0.setXHTML(false);
      outputFormat0.isSuppressDeclaration();
      outputFormat0.setNewlines(true);
      outputFormat0.setIndent(false);
      outputFormat0.setIndentSize(1040);
      outputFormat0.setIndent(";c 4vuk#+{czB\"fK ");
      outputFormat0.setIndent("~7N;CIyp3T7X+Ok-;a");
      assertEquals("<[TG=c&C\"zOA(wM}.Z", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.488449485775118
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setSuppressDeclaration(false);
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat0.getLineSeparator();
      outputFormat0.setIndent("nvalid attr");
      outputFormat1.setOmitEncoding(true);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "}GlD";
      stringArray0[1] = "-lineSeparator";
      stringArray0[2] = "";
      stringArray0[3] = "nvalid attr";
      stringArray0[4] = "";
      stringArray0[5] = "-expandEmpty>oL}*nO";
      stringArray0[6] = "-xhtml`";
      outputFormat1.parseOptions(stringArray0, 0);
      outputFormat1.setNewLineAfterNTags(0);
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setAttributeQuoteCharacter('\'');
      assertEquals('\'', outputFormat0.getAttributeQuoteCharacter());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.01443902312833
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setExpandEmptyElements(true);
      int int0 = (-354117425);
      outputFormat0.setNewLineAfterNTags((-354117425));
      outputFormat0.isExpandEmptyElements();
      outputFormat0.getLineSeparator();
      outputFormat0.isExpandEmptyElements();
      outputFormat0.isExpandEmptyElements();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.getLineSeparator();
      outputFormat1.setIndentSize((-354117425));
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      outputFormat2.setNewlines(true);
      outputFormat2.setPadText(false);
      // Undeclared exception!
      try { 
        outputFormat2.setAttributeQuoteCharacter(' ');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character ( )
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.372821413206516
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String string0 = "G3ytFX9hi%";
      boolean boolean0 = false;
      OutputFormat outputFormat0 = new OutputFormat("G3ytFX9hi%", false, "G3ytFX9hi%");
      OutputFormat.createCompactFormat();
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('!');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (!)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.7590479998760498
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setIndentSize((-1745));
      outputFormat0.setLineSeparator("");
      outputFormat0.setTrimText(true);
      OutputFormat.createPrettyPrint();
      outputFormat0.getLineSeparator();
      outputFormat0.getLineSeparator();
      char char0 = 'b';
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1745));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1745
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.3015574568421027
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.setNewLineAfterNTags((-373));
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setNewLineAfterNTags(1113);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "Invalid attribute quote character (";
      stringArray0[1] = "Invalid attribute quote character (";
      stringArray0[2] = "";
      stringArray0[3] = "Invalid attribute quote character (";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "";
      stringArray0[1] = "";
      outputFormat0.setXHTML(false);
      outputFormat0.parseOptions(stringArray0, 2);
      outputFormat0.isOmitEncoding();
      outputFormat0.setIndent(false);
      outputFormat0.setIndentSize(2);
      outputFormat0.getEncoding();
      outputFormat0.setIndent("-expandEmpty");
      assertEquals(1113, outputFormat0.getNewLineAfterNTags());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.2890792946791434
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat(";^oBA7Q/VP");
      outputFormat0.setTrimText(true);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setIndentSize(1135);
      outputFormat0.setNewLineAfterNTags(2);
      outputFormat0.setTrimText(true);
      outputFormat0.setEncoding((String) null);
      outputFormat0.isPadText();
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setPadText(true);
      outputFormat0.setLineSeparator(";^oBA7Q/VP");
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      String[] stringArray0 = new String[8];
      stringArray0[0] = ";^oBA7Q/VP";
      stringArray0[1] = ";^oBA7Q/VP";
      stringArray0[2] = ";^oBA7Q/VP";
      stringArray0[3] = null;
      stringArray0[4] = ";^oBA7Q/VP";
      stringArray0[5] = "xtf.uG[64o5OkEvpH#";
      stringArray0[6] = null;
      stringArray0[7] = null;
      outputFormat0.parseOptions(stringArray0, 129);
      outputFormat0.isOmitEncoding();
      outputFormat1.setIndent(true);
      outputFormat0.setIndentSize(1527);
      assertEquals(";^oBA7Q/VP", outputFormat0.getLineSeparator());
      
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      assertFalse(outputFormat2.isOmitEncoding());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.4894270028816674
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      String[] stringArray0 = new String[4];
      outputFormat0.setNewLineAfterNTags(1912);
      outputFormat0.setNewLineAfterNTags(0);
      stringArray0[0] = "Invalid attribute quote character (";
      stringArray0[1] = "";
      stringArray0[2] = "Oz}'d4tqK' p";
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setNewLineAfterNTags(1912);
      stringArray0[3] = "";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.isOmitEncoding();
      outputFormat0.setIndent(false);
      outputFormat0.setIndentSize(0);
      outputFormat0.setIndent("");
      outputFormat0.isExpandEmptyElements();
      assertEquals(1912, outputFormat0.getNewLineAfterNTags());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.9809787598716668
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.getLineSeparator();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "\n";
      stringArray0[1] = "\n";
      outputFormat0.parseOptions(stringArray0, 0);
      assertFalse(outputFormat0.isNewlines());
      
      outputFormat0.setNewlines(true);
      outputFormat0.isNewlines();
      String string0 = outputFormat0.getEncoding();
      assertEquals("UTF-8", string0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.6191642429520607
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      String[] stringArray0 = new String[7];
      outputFormat0.setNewLineAfterNTags(1912);
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.setLineSeparator("-encoding");
      stringArray0[0] = "TR\"Achkoz)N{#";
      stringArray0[1] = "";
      outputFormat0.setTrimText(false);
      outputFormat0.setIndentSize((-1069));
      stringArray0[2] = "Oz}'d4tqK' p";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setIndent("");
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setIndent(">{CwJ|9");
      outputFormat0.setIndent("-suppressDeclaration");
      outputFormat0.setPadText(false);
      outputFormat0.isSuppressDeclaration();
      outputFormat0.setNewlines(true);
      outputFormat0.setIndent(false);
      outputFormat0.setAttributeQuoteCharacter('\"');
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat0.setIndent("  ");
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.0504784086361374
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setSuppressDeclaration(false);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-xhtml";
      outputFormat0.parseOptions(stringArray0, 1050);
      stringArray0[1] = "-lineSeparator";
      stringArray0[2] = "<[TG=c&C\"zOA(wM}.Z";
      stringArray0[3] = ">oL}*nO";
      stringArray0[4] = ";\"!f";
      stringArray0[5] = "";
      stringArray0[6] = "org.dom4j.io.OutputFormat";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setIndent("H?z&vmEnU1k]$*a");
      outputFormat0.setIndent("");
      outputFormat0.setPadText(false);
      outputFormat0.isSuppressDeclaration();
      outputFormat0.setIndent(false);
      outputFormat0.setIndentSize((-192));
      outputFormat0.setIndent("<[TG=c&C\"zOA(wM}.Z");
      assertEquals("<[TG=c&C\"zOA(wM}.Z", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.setPadText(false);
      boolean boolean0 = outputFormat0.isTrimText();
      assertFalse(outputFormat0.isXHTML());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isOmitEncoding());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertTrue(boolean0);
      assertFalse(outputFormat0.isPadText());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.3680343188386552
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.setEncoding("");
      outputFormat0.isPadText();
      OutputFormat.createPrettyPrint();
      String[] stringArray0 = new String[7];
      stringArray0[5] = "";
      stringArray0[1] = "";
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      stringArray0[2] = "xtf.uG[64o5OkEvpH#";
      stringArray0[3] = "xtf.uG[64o5OkEvpH#";
      outputFormat0.parseOptions(stringArray0, 2);
      assertEquals("", outputFormat0.getEncoding());
      
      outputFormat1.isOmitEncoding();
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      assertEquals("UTF-8", outputFormat2.getEncoding());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.6852405671876847
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setSuppressDeclaration(false);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-xhtml";
      stringArray0[1] = "-lineSeparator";
      stringArray0[3] = ">oL}*nO";
      stringArray0[4] = ";\"!f";
      stringArray0[5] = "";
      stringArray0[6] = "org.dom4j.io.OutputFormat";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.getIndent();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.isOmitEncoding();
      outputFormat0.setEncoding("$^86@#vs0");
      outputFormat1.setEncoding("<[TG=c&C\"zOA(wM}.Z");
      outputFormat1.setIndentSize(1128);
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.setNewLineAfterNTags(1128);
      assertEquals(1128, outputFormat0.getNewLineAfterNTags());
      
      outputFormat1.setIndent(false);
      assertEquals("<[TG=c&C\"zOA(wM}.Z", outputFormat1.getEncoding());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.193764486816496
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("D2(XTs|~K");
      outputFormat0.setIndentSize((-1));
      outputFormat0.setNewlines(false);
      outputFormat0.setTrimText(false);
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setEncoding("C");
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.getIndent();
      outputFormat1.isNewlines();
      outputFormat1.setPadText(false);
      outputFormat1.setOmitEncoding(true);
      outputFormat0.getEncoding();
      assertEquals("", outputFormat0.getIndent());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setXHTML(false);
      String string0 = null;
      char char0 = '%';
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('%');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (%)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.8423493237596777
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat(";^oBA7Q/VP");
      outputFormat0.setTrimText(true);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setIndentSize(1135);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "EbQXB/;To";
      stringArray0[1] = "";
      stringArray0[2] = "<[TG=c&C\"zOA(wM}.Z";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setIndent("<[TG=c&C\"zOA(wM}.Z");
      outputFormat0.setIndent(true);
      outputFormat0.setIndentSize((-2076));
      outputFormat0.setIndent("$");
      outputFormat0.setIndent("-suppressDeclaration");
      assertEquals("-suppressDeclaration", outputFormat0.getIndent());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.9077601896124021
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setSuppressDeclaration(false);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-xhtml";
      outputFormat0.parseOptions(stringArray0, 1040);
      stringArray0[1] = "-lineSeparator";
      stringArray0[2] = "<[TG=c&C\"zOA(wM}.Z";
      stringArray0[3] = ">oL}*nO";
      stringArray0[4] = ";\"!f";
      stringArray0[5] = "";
      stringArray0[6] = "org.dom4j.io.OutputFormat";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setIndent("Go1WK$cG~!1");
      outputFormat0.setIndent("-supprsDclaration");
      outputFormat0.isSuppressDeclaration();
      outputFormat0.setNewlines(true);
      outputFormat0.isXHTML();
      boolean boolean0 = outputFormat0.isSuppressDeclaration();
      assertEquals("<[TG=c&C\"zOA(wM}.Z", outputFormat0.getLineSeparator());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.9542939451287182
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat(";^oBA7Q/VP");
      outputFormat0.setTrimText(true);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setIndentSize(1135);
      outputFormat0.setNewLineAfterNTags(2);
      outputFormat0.setTrimText(true);
      outputFormat0.isPadText();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setEncoding(";^oBA7Q/VP");
      outputFormat1.isPadText();
      outputFormat0.setOmitEncoding(false);
      outputFormat1.setPadText(true);
      outputFormat1.setExpandEmptyElements(false);
      outputFormat1.setLineSeparator(";^oBA7Q/VP");
      String[] stringArray0 = new String[3];
      stringArray0[0] = ";^oBA7Q/VP";
      stringArray0[1] = ";^oBA7Q/VP";
      stringArray0[2] = ";^oBA7Q/VP";
      outputFormat1.parseOptions(stringArray0, 2);
      outputFormat1.isXHTML();
      outputFormat0.getNewLineAfterNTags();
      outputFormat1.setXHTML(true);
      outputFormat0.parseOptions(stringArray0, 1135);
      outputFormat1.setIndentSize(1135);
      outputFormat1.setIndent(";^oBA7Q/VP");
      assertEquals(";^oBA7Q/VP", outputFormat1.getEncoding());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.214534764133424
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat(";^oBA7Q/VP");
      outputFormat0.setTrimText(true);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setIndentSize(1135);
      String string0 = "<[TG=c&C\"zOA(wM}.Z";
      outputFormat0.setIndentSize(1135);
      outputFormat0.setPadText(true);
      String[] stringArray0 = new String[3];
      stringArray0[1] = "EbQXB/;To";
      stringArray0[1] = "";
      stringArray0[2] = "<[TG=c&C\"zOA(wM}.Z";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.2012324661972493
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.getLineSeparator();
      outputFormat0.setIndent("nvalid attr");
      String[] stringArray0 = new String[9];
      stringArray0[0] = "\n";
      stringArray0[1] = "nvalid attr";
      stringArray0[2] = "nvalid attr";
      OutputFormat outputFormat1 = new OutputFormat("-expandEmptynvalid attr", false);
      outputFormat0.setIndent("-lineSeparator");
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setIndent("UTF-8");
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.getNewLineAfterNTags();
      OutputFormat outputFormat2 = new OutputFormat("-lineSeparator", false);
      outputFormat1.isSuppressDeclaration();
      outputFormat0.setIndentSize(1);
      outputFormat0.getLineSeparator();
      assertFalse(outputFormat0.isNewLineAfterDeclaration());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.3630015417836807
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat0.setIndent(true);
      outputFormat0.setEncoding("-indent");
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setTrimText(false);
      outputFormat0.setNewlines(true);
      outputFormat0.setIndentSize(0);
      outputFormat0.setLineSeparator("e_2P?`Pwk");
      boolean boolean0 = true;
      outputFormat0.setOmitEncoding(true);
      outputFormat1.setNewLineAfterNTags(0);
      outputFormat0.getIndent();
      outputFormat1.isNewLineAfterDeclaration();
      outputFormat0.setLineSeparator("");
      outputFormat1.isXHTML();
      OutputFormat outputFormat2 = new OutputFormat("e_2P?`Pwk");
      outputFormat2.setLineSeparator("e_2P?`Pwk");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "'yhpeU'.B ~S9";
      stringArray0[1] = "";
      stringArray0[2] = "-indent";
      stringArray0[3] = "-indent";
      stringArray0[4] = "-indent";
      // Undeclared exception!
      try { 
        outputFormat2.parseOptions(stringArray0, (-2399));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2399
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.9431598145315694
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      String[] stringArray0 = new String[4];
      outputFormat0.setLineSeparator("3EFm67f$/1");
      outputFormat0.setNewLineAfterNTags(1912);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.isPadText();
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setPadText(true);
      boolean boolean0 = false;
      outputFormat0.setExpandEmptyElements(false);
      String string0 = null;
      outputFormat0.setLineSeparator((String) null);
      int int0 = (-2964);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-2964));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2964
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.2883091753106406
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-expandEmpty", false, (String) null);
      outputFormat0.getLineSeparator();
      outputFormat0.setIndentSize((-1));
      outputFormat0.setLineSeparator((String) null);
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setTrimText(false);
      outputFormat0.setIndent(true);
      outputFormat0.setPadText(false);
      outputFormat0.setIndent("Invalid attribqte quoLe characer (");
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setIndent(":03?._~!rdXc<u#e");
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat0.getIndent();
      assertEquals(":03?._~!rdXc<u#e", outputFormat0.getIndent());
      
      outputFormat1.getNewLineAfterNTags();
      outputFormat1.setPadText(false);
      outputFormat1.setTrimText(false);
      boolean boolean0 = outputFormat1.isNewLineAfterDeclaration();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      boolean boolean0 = outputFormat0.isTrimText();
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isNewlines());
      assertFalse(boolean0);
      assertFalse(outputFormat0.isPadText());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertEquals("", outputFormat0.getIndent());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isXHTML());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isSuppressDeclaration());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true);
      assertFalse(outputFormat0.isExpandEmptyElements());
      
      outputFormat0.setExpandEmptyElements(true);
      assertTrue(outputFormat0.isExpandEmptyElements());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.022248870579868
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setIndentSize(1);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.setNewlines(true);
      assertEquals(" ", outputFormat0.getIndent());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.384415616105067
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.getLineSeparator();
      outputFormat0.setIndent(",xZ{XhJ+qiMByY(!P5");
      OutputFormat outputFormat1 = new OutputFormat("-POZ{>Z.X#QT#(g~1", false);
      outputFormat1.setIndent("TR\"Achkoz)N{#");
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setIndent("Pug:)>WyJju.(_43@I");
      OutputFormat outputFormat2 = new OutputFormat("@L,,6a(gzs_W/o", true);
      outputFormat0.isSuppressDeclaration();
      outputFormat1.getLineSeparator();
      assertEquals("TR\"Achkoz)N{#", outputFormat1.getIndent());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-^\"zag]9Q");
      char char0 = ':';
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('V');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (V)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      char char0 = outputFormat0.getAttributeQuoteCharacter();
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isPadText());
      assertEquals('\"', char0);
      assertFalse(outputFormat0.isXHTML());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isOmitEncoding());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isTrimText());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.95571359982777
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[0] = "Invalid attribute quote character (";
      stringArray0[1] = "4.Q9";
      OutputFormat outputFormat0 = new OutputFormat("-xhtml");
      outputFormat0.setIndent(false);
      OutputFormat outputFormat1 = new OutputFormat("\n", false, "%fvT6%1");
      outputFormat1.setIndentSize(24);
      outputFormat0.setIndent("\n");
      assertEquals("\n", outputFormat0.getIndent());
      
      outputFormat0.setIndent((String) null);
      assertFalse(outputFormat0.isSuppressDeclaration());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat(";^oBA7Q/VP");
      boolean boolean0 = true;
      outputFormat0.setTrimText(true);
      String[] stringArray0 = new String[0];
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-30));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -30
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.445977656303489
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat(";^oBA7Q/VP");
      outputFormat0.setNewLineAfterNTags((-3359));
      outputFormat0.setNewLineAfterNTags(1912);
      outputFormat0.setLineSeparator((String) null);
      outputFormat0.setIndentSize((-3359));
      String[] stringArray0 = new String[8];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = ";^oBA7Q/VP";
      stringArray0[4] = "Oz}'d4tqK' p";
      stringArray0[5] = "";
      stringArray0[6] = "  ";
      stringArray0[7] = "TR\"Achkoz)N{#";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setIndent("");
      String[] stringArray1 = new String[0];
      outputFormat0.parseOptions(stringArray1, 0);
      outputFormat0.parseOptions(stringArray1, 3198);
      assertEquals(1912, outputFormat0.getNewLineAfterNTags());
      
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      assertFalse(outputFormat1.isNewlines());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.2176071276296847
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "-xhtml";
      outputFormat0.parseOptions(stringArray0, 1040);
      stringArray0[1] = "-ineSepaator";
      stringArray0[2] = "<[TG=c&C\"zOA(wM}.Z";
      stringArray0[4] = ";\"!f";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setIndent("oBW$Gf!P");
      outputFormat0.setIndent("=*UBm~tC");
      outputFormat0.parseOptions(stringArray0, 1040);
      String[] stringArray1 = new String[6];
      stringArray1[0] = ">oL}*nO";
      stringArray1[1] = "-xhtml";
      stringArray1[2] = "<[TG=c&C\"zOA(wM}.Z";
      stringArray1[3] = ";\"!f";
      stringArray1[4] = ";2)Xz9Q8";
      stringArray1[5] = ";\"!f";
      outputFormat0.parseOptions(stringArray1, 0);
      assertTrue(outputFormat0.isXHTML());
      
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      assertFalse(outputFormat1.isXHTML());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setNewLineAfterNTags((-925));
      int int0 = outputFormat0.getNewLineAfterNTags();
      assertEquals((-925), int0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.6439556568820564
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[1] = "";
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setXHTML(true);
      assertTrue(outputFormat0.isXHTML());
      
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      assertFalse(outputFormat1.isXHTML());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.0213525504517342
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setSuppressDeclaration(false);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-xhtml";
      outputFormat0.parseOptions(stringArray0, 1040);
      stringArray0[1] = "-lineSeparator";
      stringArray0[2] = "<[TG=c&C\"zOA(wM}.Z";
      stringArray0[3] = ">oL}*nO";
      stringArray0[4] = ";\"!f";
      stringArray0[5] = "";
      stringArray0[6] = "org.dom4j.io.OutputFormat";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setIndent("Go1WK$cG~!1");
      outputFormat0.setIndent("-suppressDeclaration");
      outputFormat0.setPadText(false);
      outputFormat0.isSuppressDeclaration();
      outputFormat0.setNewlines(true);
      outputFormat0.setXHTML(false);
      outputFormat0.isXHTML();
      boolean boolean0 = outputFormat0.isSuppressDeclaration();
      assertEquals("<[TG=c&C\"zOA(wM}.Z", outputFormat0.getLineSeparator());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.19953461806653
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-suppressDeclaration");
      outputFormat0.setIndentSize(1135);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "<[TG=c&C\"zOA(wM}.Z";
      stringArray0[1] = "<[TG=c&C\"zOA(wM}.Z";
      stringArray0[2] = "-suppressDeclaration";
      stringArray0[3] = "";
      stringArray0[4] = "EbQXB/;To";
      stringArray0[5] = "-suppressDeclaration";
      stringArray0[6] = "EbQXB/;To";
      outputFormat0.setIndent("EbQXB/;To");
      outputFormat0.setNewlines(false);
      outputFormat0.setIndent(true);
      assertEquals("  ", outputFormat0.getIndent());
      
      OutputFormat outputFormat1 = new OutputFormat();
      outputFormat1.setIndentSize(1135);
      assertFalse(outputFormat1.isOmitEncoding());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.1182088790283604
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat(";^oBA7Q/VP");
      outputFormat0.setTrimText(true);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setIndentSize(1135);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "EbQXB/;To";
      stringArray0[1] = "";
      stringArray0[2] = "<[TG=c&C\"zOA(wM}.Z";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setIndent("<[TG=c&C\"zOA(wM}.Z");
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setIndent("");
      outputFormat0.setIndent("");
      outputFormat0.setPadText(true);
      outputFormat0.isSuppressDeclaration();
      outputFormat0.setIndent(true);
      outputFormat0.setIndentSize(0);
      outputFormat0.setIndent("H?z&vmEnU1k]$*a");
      assertEquals("H?z&vmEnU1k]$*a", outputFormat0.getIndent());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.9725477463093382
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat(";^oBA7Q/VP");
      outputFormat0.setTrimText(true);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setIndentSize(1135);
      outputFormat0.setIndentSize(1135);
      outputFormat0.setPadText(true);
      String[] stringArray0 = new String[3];
      outputFormat0.setOmitEncoding(true);
      stringArray0[0] = "EbQXB/;To";
      stringArray0[1] = "";
      stringArray0[2] = "<[TG=c&C\"zOA(wM}.Z";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setIndent("<[TG=c&C\"zOA(wM}.Z");
      outputFormat0.setIndent("$");
      outputFormat0.setPadText(true);
      outputFormat0.setIndentSize(0);
      assertEquals("", outputFormat0.getIndent());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("`", false);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "`";
      stringArray0[1] = "`";
      stringArray0[2] = "`";
      stringArray0[3] = "`";
      stringArray0[4] = "`";
      stringArray0[2] = "`";
      stringArray0[6] = "`";
      stringArray0[7] = "`";
      outputFormat0.setNewlines(false);
      outputFormat0.isNewlines();
      String string0 = outputFormat0.getEncoding();
      assertEquals("`", outputFormat0.getIndent());
      assertFalse(outputFormat0.isXHTML());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isPadText());
      assertFalse(outputFormat0.isTrimText());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isNewlines());
      assertEquals("UTF-8", string0);
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertEquals("\n", outputFormat0.getLineSeparator());
  }
}
