/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 11:34:16 GMT 2019
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.time.Instant;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.ConcurrentModificationException;
import java.util.Date;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.businessLayer.VariableSummary;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.time.MockInstant;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      String string0 = "}}";
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      ArrayList<ValueLabel> arrayList1 = rawVariable0.getValueLabels();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      rawVariable0.setValueLabels(arrayList1);
      // Undeclared exception!
      try { 
        rawVariable0.removeSupportingDocuments(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.888852326148842
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = null;
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      arrayList0.listIterator();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      derivedVariable0.getSupportingDocuments();
      User user0 = new User((String) null, (String) null);
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, derivedVariable0);
      arrayList0.listIterator();
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      rawVariable0.addOntologyTerms(arrayList1);
      rawVariable0.setForm("a+bipS`o");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("variable.cleaningStatus.label");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm3);
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.8860347621526325
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      String string0 = null;
      rawVariable0.createVariableSummary();
      rawVariable1.notes = null;
      rawVariable0.setAlternativeVariable(rawVariable1);
      User user0 = new User((String) null, (String) null);
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      User user1 = new User((String) null, (String) null);
      RawVariable rawVariable2 = new RawVariable();
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.809499552453337
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.createVariableSummary();
      rawVariable0.setAlternativeVariable(rawVariable1);
      ArrayList<SupportingDocument> arrayList0 = rawVariable1.getSupportingDocuments();
      arrayList0.listIterator();
      rawVariable0.setSupportingDocuments(arrayList0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setSourceVariables((ArrayList<Variable>) null);
      rawVariable1.setLabel("variable.codeBookNumber.label");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      User user0 = new User();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      User user1 = new User("variable.codeBookNumber.label", "variable.isCleaned.saveChanges.changedToNotClean");
      DerivedVariable derivedVariable3 = new DerivedVariable();
      Variable.detectFieldChanges(user1, rawVariable1, derivedVariable3);
      assertEquals("variable.codeBookNumber.label", rawVariable1.getLabel());
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.getFilePath();
      DerivedVariable derivedVariable4 = new DerivedVariable();
      DerivedVariable derivedVariable5 = new DerivedVariable();
      derivedVariable5.removeSourceVariable(derivedVariable1);
      ArrayList<OntologyTerm> arrayList1 = derivedVariable2.getOntologyTerms();
      derivedVariable4.removeOntologyTerms(arrayList1);
      RawVariable rawVariable3 = new RawVariable();
      rawVariable2.cloneAttributes(rawVariable1);
      derivedVariable1.hasSameDisplayName(derivedVariable4);
      assertEquals("Unknown", derivedVariable4.getCleaningStatus());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.2085716838811678
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      User user0 = new User("atnMTT_F_=k0=4zt@}]", "atnMTT_F_=k0=4zt@}]");
      Object object0 = new Object();
      arrayList0.remove(object0);
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      MockDate mockDate0 = new MockDate((-614), (-614), (-614), (-614), (-625));
      Instant instant0 = MockInstant.ofEpochSecond((long) (-614));
      Date date0 = Date.from(instant0);
      mockDate0.before(date0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      // Undeclared exception!
      try { 
        rawVariable0.updateOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.70816141220136
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      String string0 = "eLi=y^CdUWpON";
      rawVariable0.setQuestionNumber("/[b&~BawsB^3f;px*g");
      rawVariable0.setColumnStart("eLi=y^CdUWpON");
      rawVariable0.clone();
      rawVariable0.getCategory();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIdentifier(157);
      String string1 = "/[b&~BawsB^3f;px*g";
      supportingDocument0.setFileName("/[b&~BawsB^3f;px*g");
      rawVariable0.containsSupportingDocument(supportingDocument0);
      // Undeclared exception!
      try { 
        rawVariable0.updateOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.8280918037926885
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.createVariableSummary();
      rawVariable1.notes = null;
      rawVariable0.setAlternativeVariable(rawVariable1);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.listIterator();
      rawVariable0.setSupportingDocuments(arrayList0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setSourceVariables((ArrayList<Variable>) null);
      rawVariable1.setLabel("variable.codeBookNumber.label");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      User user0 = new User();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      User user1 = new User("variable.codeBookNumber.label", "variable.isCleaned.saveChanges.changedToNotClean");
      DerivedVariable derivedVariable3 = new DerivedVariable();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user1, rawVariable1, derivedVariable3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.59928092190985
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      User user0 = new User("atnMTT_F_=k0=4zt@}]", "atnMTT_F_=k0=4zt@}]");
      Object object0 = new Object();
      arrayList0.remove(object0);
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      rawVariable0.setForm("/[b&~BawsB^3f;px*g");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("/[b&~BawsB^3f;px*g");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm3, ontologyTerm1);
      rawVariable0.addOntologyTerm(ontologyTerm2);
      rawVariable0.getFilePath();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(rawVariable0);
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      assertEquals("/[b&~BawsB^3f;px*g", rawVariable0.getForm());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setForm((String) null);
      VariableSummary variableSummary0 = rawVariable0.createVariableSummary();
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = null;
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      arrayList0.listIterator();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument1);
      rawVariable0.isNewRecord();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setSourceVariables((ArrayList<Variable>) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setIsNewRecord(false);
      rawVariable0.setName("v*SoT^d4\"1F[On");
      rawVariable0.createVariableSummary();
      assertEquals("v*SoT^d4\"1F[On", rawVariable0.getName());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.getDisplayName();
      rawVariable0.addValueLabel(valueLabel0);
      rawVariable0.setName("general.fieldValue.blank");
      rawVariable0.setCleaningStatus("general.fieldValue.blank");
      rawVariable0.getColumnStart();
      User user0 = new User();
      // Undeclared exception!
      try { 
        User.detectFieldChanges(user0, (User) null, user0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.7861008663021525
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList1 = rawVariable1.getOntologyTerms();
      arrayList1.add(ontologyTerm0);
      rawVariable0.addOntologyTerms(arrayList1);
      ArrayList<SupportingDocument> arrayList2 = rawVariable1.getSupportingDocuments();
      rawVariable0.addSupportingDocuments(arrayList2);
      rawVariable1.setForm((String) null);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm0.setTerm("/[b&~BawsB^3f;px*g");
      ontologyTerm1.setIdentifier((-1));
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable1.containsOntologyTerm(ontologyTerm2);
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.689067872995674
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, derivedVariable0, derivedVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.70512412001327
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable0);
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      arrayList0.listIterator();
      rawVariable0.setSupportingDocuments(arrayList0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      rawVariable0.isNewRecord();
      rawVariable0.setIsNewRecord(true);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      rawVariable0.removeOntologyTerms(arrayList1);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument0.setDocumentCode("");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.getFilePath();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(rawVariable0);
      rawVariable0.getCleaningStatus();
      // Undeclared exception!
      try { 
        rawVariable0.clone();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.9957249477231347
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.addValueLabel(valueLabel0);
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      ArrayList<ValueLabel> arrayList1 = derivedVariable0.getValueLabels();
      arrayList0.retainAll(arrayList1);
      derivedVariable0.addOntologyTerms(arrayList0);
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      RawVariable rawVariable0 = new RawVariable();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, derivedVariable0);
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      
      String string0 = derivedVariable0.getCleaningStatus();
      assertEquals("Unknown", string0);
      
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable1);
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertFalse(rawVariable1.isCoded());
      assertFalse(rawVariable1.isCleaned());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.7518685126965625
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      arrayList0.listIterator();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      rawVariable0.isNewRecord();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setSourceVariables((ArrayList<Variable>) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setIsNewRecord(true);
      rawVariable0.setName("general.error.blankField");
      derivedVariable0.setLabel("variable.codeBookNumber.label");
      derivedVariable1.setFilePath("3*");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument1);
      User user0 = new User("I&}NV\"5^m*el yJ", "I&}NV\"5^m*el yJ");
      supportingDocument1.setDocumentCode("3*");
      user0.setCounty(" (;;=H.54:n1");
      SupportingDocument supportingDocument2 = new SupportingDocument();
      supportingDocument1.setTitle("I&}NV\"5^m*el yJ");
      SupportingDocument.detectFieldChanges(user0, supportingDocument2, supportingDocument0);
      SupportingDocument supportingDocument3 = new SupportingDocument();
      supportingDocument1.setDescription((String) null);
      supportingDocument2.setTitle("-G%@5wLBzff=");
      derivedVariable1.getFilePath();
      // Undeclared exception!
      try { 
        derivedVariable0.removeSourceVariables((ArrayList<Variable>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.5353865202004258
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaningDescription("variable.alternativeVariable.label");
      rawVariable0.setColumnEnd("variable.alternativeVariable.label");
      rawVariable0.clone();
      assertEquals("variable.alternativeVariable.label", rawVariable0.getColumnEnd());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.6241857997652422
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("general.fieldValue.unknown");
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.addValueLabel(valueLabel0);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertFalse(rawVariable1.isNewRecord());
      assertFalse(rawVariable1.isCoded());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals(0, rawVariable1.getIdentifier());
      assertFalse(rawVariable1.isCleaned());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      arrayList0.add((OntologyTerm) null);
      rawVariable0.addOntologyTerms(arrayList0);
      rawVariable0.setForm("/[b&~BawsB^3f;px*g");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setTerm("/[b&~BawsB^3f;px*g");
      ontologyTerm1.setIdentifier((-1));
      // Undeclared exception!
      try { 
        rawVariable0.containsOntologyTerm(ontologyTerm1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.866255578670286
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.createVariableSummary();
      rawVariable1.notes = null;
      rawVariable0.setAlternativeVariable(rawVariable1);
      ArrayList<SupportingDocument> arrayList0 = rawVariable1.getSupportingDocuments();
      User user0 = new User((String) null, (String) null);
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, macawChangeEvent0.getChangedObjectIdentifier());
      
      arrayList0.listIterator();
      User user1 = new User((String) null, "e*");
      RawVariable rawVariable2 = new RawVariable();
      RawVariable.detectFieldChanges(user1, rawVariable2, rawVariable0);
      Variable.detectFieldChanges(user0, rawVariable2, rawVariable2);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable2.addOntologyTerm(ontologyTerm0);
      RawVariable rawVariable3 = new RawVariable();
      String string0 = rawVariable1.getFilePath();
      assertNotNull(string0);
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.removeSourceVariable(rawVariable2);
      rawVariable1.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      derivedVariable1.removeOntologyTerms(arrayList1);
      RawVariable rawVariable4 = new RawVariable();
      rawVariable1.cloneAttributes(derivedVariable1);
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertFalse(derivedVariable1.isCoded());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertFalse(rawVariable1.isNewRecord());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.624728496322497
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.codeBookNumber = "user.lastName.saveChanges";
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      rawVariable1.isCoded();
      assertEquals("", rawVariable1.getColumnEnd());
      assertEquals("", rawVariable1.getName());
      assertEquals("", rawVariable1.getForm());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("", rawVariable1.getAlias());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("user.lastName.saveChanges", rawVariable1.getCodeBookNumber());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertEquals("", rawVariable1.getQuestionNumber());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("", rawVariable1.getColumnStart());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("", rawVariable1.getLabel());
      
      String string0 = rawVariable0.getName();
      assertEquals("", string0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.703349086267263
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = null;
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      arrayList0.listIterator();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      rawVariable0.isNewRecord();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setSourceVariables((ArrayList<Variable>) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setIsNewRecord(false);
      rawVariable0.setName("v*SoT^d4\"1F[On");
      derivedVariable1.setLabel((String) null);
      derivedVariable1.setFilePath("I&}NV\"5^m*el yJ");
      rawVariable0.containsSupportingDocument(supportingDocument0);
      User user0 = new User("A[c%L%&@FeI#Y)BWpR", "");
      user0.setCounty("v*SoT^d4\"1F[On");
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setDescription("");
      supportingDocument0.setTitle("");
      rawVariable0.setCleaned(true);
      derivedVariable1.clone();
      assertEquals("I&}NV\"5^m*el yJ", derivedVariable1.getFilePath());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.742411608614115
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = null;
      rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      rawVariable0.isNewRecord();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setSourceVariables((ArrayList<Variable>) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setIsNewRecord(false);
      rawVariable0.setName("v*SoT^d4\"1F[On");
      derivedVariable1.setLabel((String) null);
      derivedVariable1.setFilePath("I&}NV\"5^m*el yJ");
      rawVariable0.containsSupportingDocument(supportingDocument0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      derivedVariable1.removeSourceVariable(derivedVariable2);
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      derivedVariable1.removeOntologyTerms(arrayList0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.cloneAttributes(derivedVariable2);
      assertEquals("v*SoT^d4\"1F[On", rawVariable0.getName());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable1.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      rawVariable1.addOntologyTerms(arrayList0);
      rawVariable1.setForm("/[b&~BawsB^3f;px*g");
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setTerm("R 9j$>lMC9-aG:v");
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm1);
      rawVariable0.getFilePath();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(rawVariable1);
      assertEquals("/[b&~BawsB^3f;px*g", rawVariable1.getForm());
      assertFalse(rawVariable1.isNewRecord());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.850863601176158
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = null;
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      arrayList0.listIterator();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      rawVariable0.isNewRecord();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setSourceVariables((ArrayList<Variable>) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setIsNewRecord(false);
      rawVariable0.setName("v*SoT^d4\"1F[On");
      derivedVariable1.setLabel((String) null);
      derivedVariable1.setFilePath("I&}NV\"5^m*el yJ");
      rawVariable0.containsSupportingDocument(supportingDocument0);
      User user0 = new User("A[c%L%&@FeI#Y)BWpR", "");
      user0.setCounty("v*SoT^d4\"1F[On");
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setDescription("");
      supportingDocument0.setTitle("");
      rawVariable0.setCleaned(true);
      assertEquals("v*SoT^d4\"1F[On", rawVariable0.getDisplayName());
      
      derivedVariable0.getColumnEnd();
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.051435843948024
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.createVariableSummary();
      rawVariable1.notes = null;
      rawVariable0.setAlternativeVariable(rawVariable1);
      ArrayList<SupportingDocument> arrayList0 = rawVariable1.getSupportingDocuments();
      arrayList0.listIterator();
      rawVariable0.setSupportingDocuments(arrayList0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable1.addSupportingDocument(supportingDocument0);
      rawVariable1.isNewRecord();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setSourceVariables((ArrayList<Variable>) null);
      rawVariable0.setLabel("variable.codeBookNumber.label");
      derivedVariable0.setIsNewRecord(false);
      rawVariable0.setName((String) null);
      assertEquals("variable.codeBookNumber.label", rawVariable0.getLabel());
      
      derivedVariable0.setFilePath((String) null);
      rawVariable1.getDisplayItemIdentifier();
      derivedVariable0.setSourceVariables((ArrayList<Variable>) null);
      rawVariable1.addSupportingDocuments(arrayList0);
      ArrayList<SupportingDocument> arrayList1 = rawVariable1.getSupportingDocuments();
      derivedVariable0.addSupportingDocuments(arrayList1);
      derivedVariable0.getSupportingDocuments();
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getOntologyTerms();
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.4466856169199285
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlias("");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      derivedVariable0.getSourceVariables();
      derivedVariable0.getAvailability();
      derivedVariable0.setYear("Unknown");
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.6981134023974382
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      rawVariable0.addOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addSourceVariable(rawVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(rawVariable0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.cloneAttributes(derivedVariable1);
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.990857630526887
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      rawVariable1.isNewRecord();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setSourceVariables((ArrayList<Variable>) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setIsNewRecord(false);
      rawVariable1.setName("variable.alternativeVariable.label");
      derivedVariable0.setLabel("variable.alternativeVariable.label");
      derivedVariable0.setFilePath("dSHcx+X");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument1);
      User user0 = new User("/[b&~BawsB^3f;px*g", "3*");
      SupportingDocument supportingDocument2 = new SupportingDocument();
      user0.setCounty("dSHcx+X");
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument2);
      SupportingDocument supportingDocument4 = new SupportingDocument();
      supportingDocument4.setDescription(" (;;=H.54:n1");
      supportingDocument3.setTitle("variable.codeBookNumber.label");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      rawVariable0.getAvailability();
      boolean boolean0 = rawVariable1.isCleaned();
      assertEquals("variable.alternativeVariable.label", rawVariable1.getName());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.5594415416798357
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable1.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      rawVariable1.addOntologyTerms(arrayList0);
      ValueLabel valueLabel0 = new ValueLabel();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getCleaningStatus();
      derivedVariable0.setCategory("'Tk");
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.removeOntologyTerm(ontologyTerm2);
      assertEquals("'Tk", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=3.1937561962712997
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart("r6D LP$>x`c");
      rawVariable0.removeValueLabel((ValueLabel) null);
      rawVariable0.setName(">)>lDc!1-./#@:6");
      rawVariable0.setIsNewRecord(false);
      rawVariable0.notes = ")o_dYUhu)Oc8F#gD>6N";
      rawVariable0.setCategory("");
      rawVariable0.setAlias("");
      Variable.validateFields(rawVariable0);
      rawVariable0.getCodeBookNumber();
      rawVariable0.getQuestionNumber();
      rawVariable0.getCategory();
      rawVariable0.setIsNewRecord(false);
      rawVariable0.getValueLabels();
      User user0 = null;
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges((User) null, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("general.fieldValue.unknown");
      // Undeclared exception!
      try { 
        rawVariable0.addOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.7465068710350855
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable1.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      rawVariable0.addOntologyTerms(arrayList0);
      ValueLabel valueLabel0 = new ValueLabel();
      ontologyTerm0.setNameSpace("variable.columnEnd.label");
      ontologyTerm0.setNameSpace((String) null);
      User user0 = new User("/[b&~BawsB^3f;px*g", "variable.codeBookNumber.label");
      ArrayList<MacawChangeEvent> arrayList1 = RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      assertEquals(0, arrayList1.size());
      
      rawVariable1.addOntologyTerm(ontologyTerm0);
      rawVariable1.getFilePath();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(derivedVariable1);
      RawVariable rawVariable2 = new RawVariable();
      ArrayList<OntologyTerm> arrayList2 = rawVariable2.getOntologyTerms();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.removeOntologyTerms(arrayList2);
      derivedVariable1.removeOntologyTerms(arrayList2);
      RawVariable rawVariable3 = new RawVariable();
      rawVariable3.cloneAttributes(rawVariable0);
      RawVariable rawVariable4 = (RawVariable)rawVariable1.clone();
      assertFalse(rawVariable4.isCleaned());
      assertEquals("Unknown", rawVariable4.getCategory());
      assertEquals("Unknown", rawVariable4.getAvailability());
      assertEquals("Unknown", rawVariable4.getCleaningStatus());
      assertFalse(rawVariable4.isCoded());
      assertFalse(rawVariable4.isNewRecord());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.5774876682173042
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.setCleaningStatus(")$U@:_=");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      rawVariable1.addOntologyTerms(arrayList0);
      assertEquals(")$U@:_=", rawVariable0.getCleaningStatus());
      
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable1.updateOntologyTerm(ontologyTerm1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getCleaningStatus();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.removeSourceVariable(rawVariable1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      derivedVariable2.removeOntologyTerm(ontologyTerm2);
      rawVariable1.getAlternativeVariable();
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.847642989259894
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaningStatus("9");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      derivedVariable0.setYear("R`>?8/0&");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setDocumentCode("R`>?8/0&");
      derivedVariable0.addSupportingDocument(supportingDocument1);
      derivedVariable0.removeSupportingDocuments(arrayList0);
      derivedVariable0.getNotes();
      derivedVariable0.setCoded(false);
      derivedVariable0.getIdentifier();
      derivedVariable0.setIsNewRecord(false);
      derivedVariable0.setNotes("R`>?8/0&");
      User user0 = new User();
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, (RawVariable) null, (RawVariable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.5762105290091304
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable1.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      rawVariable0.addOntologyTerms(arrayList0);
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable1.addValueLabel(valueLabel0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      String string0 = derivedVariable0.getCleaningStatus();
      assertEquals("Unknown", string0);
      
      derivedVariable0.setCategory("Unknown");
      assertEquals("Unknown", derivedVariable0.getCategory());
      
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.removeOntologyTerm(ontologyTerm0);
      assertFalse(derivedVariable1.isNewRecord());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertFalse(derivedVariable1.isCoded());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.8966087604157607
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable1.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      rawVariable0.addOntologyTerms(arrayList0);
      ValueLabel valueLabel0 = new ValueLabel();
      ontologyTerm0.setNameSpace("variable.columnEnd.label");
      ontologyTerm0.setNameSpace((String) null);
      User user0 = new User("/[b&~BawsB^3f;px*g", "variable.codeBookNumber.label");
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      rawVariable1.addOntologyTerm(ontologyTerm0);
      ontologyTerm0.setNameSpace((String) null);
      ontologyTerm0.setTerm("U9s-7a(- E-OmXQcGh&");
      ontologyTerm0.setIdentifier((-1));
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.containsOntologyTerm(ontologyTerm0);
      try { 
        RawVariable.validateFields(rawVariable1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable1.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      rawVariable0.addOntologyTerms(arrayList0);
      String string0 = "/[b&~BawsB^3f;px*g";
      rawVariable0.setForm("/[b&~BawsB^3f;px*g");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setTerm("/[b&~BawsB^3f;px*g");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      // Undeclared exception!
      try { 
        rawVariable1.containsSupportingDocument((SupportingDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIdentifier(1902);
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(derivedVariable0.isCoded());
      
      derivedVariable0.setCoded(true);
      derivedVariable0.getCleaningStatus();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      int int0 = derivedVariable0.getIdentifier();
      assertTrue(derivedVariable0.isCoded());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.321136508685147
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.createVariableSummary();
      rawVariable1.notes = null;
      rawVariable0.setAlternativeVariable(rawVariable1);
      ArrayList<SupportingDocument> arrayList0 = rawVariable1.getSupportingDocuments();
      arrayList0.listIterator();
      rawVariable0.setSupportingDocuments(arrayList0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable1.addSupportingDocument(supportingDocument0);
      rawVariable1.isNewRecord();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setSourceVariables((ArrayList<Variable>) null);
      rawVariable0.setQuestionNumber((String) null);
      rawVariable0.getSupportingDocuments();
      derivedVariable0.getCategory();
      rawVariable1.setAlias("Unknown");
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.getYear();
      derivedVariable0.getDisplayItemIdentifier();
      Variable.validateFields(derivedVariable0);
      ArrayList<SupportingDocument> arrayList1 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.setSupportingDocuments(arrayList1);
      derivedVariable0.setYear((String) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.containsSourceVariable(derivedVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.744372501442903
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.createVariableSummary();
      rawVariable1.notes = null;
      rawVariable0.setAlternativeVariable(rawVariable1);
      ArrayList<SupportingDocument> arrayList0 = rawVariable1.getSupportingDocuments();
      arrayList0.listIterator();
      rawVariable0.setSupportingDocuments(arrayList0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable1.addSupportingDocument(supportingDocument0);
      rawVariable1.setLabel("");
      rawVariable1.isNewRecord();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setSourceVariables((ArrayList<Variable>) null);
      rawVariable0.setLabel("variable.codeBookNumber.label");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setIsNewRecord(false);
      rawVariable0.setName((String) null);
      derivedVariable1.setFilePath(";iK]gW");
      rawVariable0.getDisplayItemIdentifier();
      derivedVariable0.setSourceVariables((ArrayList<Variable>) null);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      rawVariable1.addSupportingDocuments(arrayList1);
      rawVariable0.setQuestionNumber("variable.codeBookNumber.label");
      rawVariable0.clone();
      assertEquals("variable.codeBookNumber.label", rawVariable0.getLabel());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.1506719848487332
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      rawVariable0.addOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addSourceVariable(rawVariable0);
      derivedVariable0.removeSourceVariable(rawVariable0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.removeOntologyTerm(ontologyTerm1);
      assertFalse(derivedVariable1.isCleaned());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertFalse(derivedVariable1.isCoded());
      assertFalse(derivedVariable1.isNewRecord());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.4522469794234416
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setFilePath("variable.year.label");
      ArrayList<OntologyTerm> arrayList0 = rawVariable1.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      rawVariable0.addOntologyTerms(arrayList0);
      assertEquals("variable.year.label", rawVariable1.getFilePath());
      
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getCleaningStatus();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.removeOntologyTerm(ontologyTerm0);
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = null;
      rawVariable0.setLabel((String) null);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getLabel();
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.5053262207700673
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable1.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      rawVariable0.addOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      String string0 = derivedVariable0.getCleaningStatus();
      assertEquals("Unknown", string0);
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.removeSourceVariable(rawVariable0);
      rawVariable1.removeOntologyTerm(ontologyTerm0);
      String string1 = rawVariable0.getDisplayItemIdentifier();
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", string1);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.880653893488026
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.createVariableSummary();
      rawVariable1.notes = null;
      rawVariable0.setAlternativeVariable(rawVariable1);
      ArrayList<SupportingDocument> arrayList0 = rawVariable1.getSupportingDocuments();
      arrayList0.listIterator();
      rawVariable0.setSupportingDocuments(arrayList0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable1.addSupportingDocument(supportingDocument0);
      rawVariable1.isNewRecord();
      rawVariable0.setIsNewRecord(true);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      rawVariable0.removeOntologyTerms(arrayList1);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument0.setDocumentCode("");
      User user0 = new User("", "");
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument.detectFieldChanges(user0, supportingDocument2, supportingDocument1);
      SupportingDocument supportingDocument3 = new SupportingDocument();
      supportingDocument3.setDescription("WvkJws");
      SupportingDocument supportingDocument4 = new SupportingDocument();
      supportingDocument4.setTitle((String) null);
      SupportingDocument supportingDocument5 = new SupportingDocument();
      rawVariable1.addSupportingDocument(supportingDocument0);
      rawVariable0.setColumnEnd("=R2jE");
      RawVariable rawVariable2 = new RawVariable();
      rawVariable1.setForm("/[b&~BawsB^3f;px*g");
      assertEquals("/[b&~BawsB^3f;px*g", rawVariable1.getForm());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      User user0 = new User("atnMTT_F_=k0=4zt@}]", "atnMTT_F_=k0=4zt@}]");
      Object object0 = new Object();
      arrayList0.remove(object0);
      MockDate mockDate0 = new MockDate((-614), (-614), (-614), (-614), (-614));
      Instant instant0 = MockInstant.ofEpochSecond((long) (-614));
      mockDate0.getTime();
      Date date0 = Date.from(instant0);
      mockDate0.before(date0);
      Date.from(instant0);
      rawVariable0.setIsNewRecord(true);
      rawVariable0.removeOntologyTerms(arrayList0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDocumentCode("");
      supportingDocument0.setDocumentCode("{%j#TE>T");
      User user1 = new User();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setTitle("atnMTT_F_=k0=4zt@}]");
      SupportingDocument.detectFieldChanges(user1, supportingDocument1, supportingDocument1);
      supportingDocument0.setDescription("");
      supportingDocument0.setTitle("");
      rawVariable0.addSupportingDocument(supportingDocument0);
      supportingDocument1.setTitle("");
      rawVariable0.setCleaned(true);
      assertTrue(rawVariable0.isCleaned());
      assertTrue(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.5594415416798357
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      User user0 = new User();
      ValueLabel.detectFieldChanges(user0, derivedVariable0, valueLabel0, valueLabel0);
      valueLabel0.clone();
      User user1 = new User("/[b&~BawsB^3f;px*g", "/[b&~BawsB^3f;px*g");
      user1.setAddressLine1("/[b&~BawsB^3f;px*g");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ValueLabel.differencesExist(user1, derivedVariable1, valueLabel0, valueLabel0);
      valueLabel0.setIdentifier(0);
      ValueLabel valueLabel1 = new ValueLabel();
      derivedVariable0.setCoded(false);
      assertFalse(derivedVariable0.isCoded());
      
      DerivedVariable derivedVariable2 = new DerivedVariable();
      String string0 = derivedVariable2.getCleaningStatus();
      assertEquals("Unknown", string0);
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable1.removeOntologyTerm(ontologyTerm0);
      derivedVariable1.getYear();
      assertFalse(derivedVariable1.isCleaned());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals(0, derivedVariable1.getIdentifier());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=3.8635416439159527
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.createVariableSummary();
      rawVariable1.notes = null;
      RawVariable rawVariable2 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable2.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      rawVariable1.setOntologyTerms(arrayList0);
      RawVariable rawVariable3 = new RawVariable();
      rawVariable3.addOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable3.updateOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(rawVariable0);
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      derivedVariable0.removeOntologyTerms(arrayList1);
      RawVariable rawVariable4 = new RawVariable();
      RawVariable rawVariable5 = new RawVariable();
      rawVariable3.cloneAttributes(rawVariable5);
      rawVariable5.hasSameDisplayName(rawVariable2);
      try { 
        RawVariable.validateFields(rawVariable2);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getAlias();
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.6709087878625355
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = null;
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle((String) null);
      arrayList0.add(supportingDocument0);
      arrayList0.listIterator();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument1);
      rawVariable0.isNewRecord();
      rawVariable0.setCodeBookNumber(":KMR6aIc2j");
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      supportingDocument1.setDocumentCode("");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName("");
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.getFilePath();
      rawVariable0.getDisplayName();
      assertEquals(":KMR6aIc2j", rawVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=3.7978036178331562
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      User user0 = new User("atnMTT_F_=k0=4zt@}]", "atnMTT_F_=k0=4zt@}]");
      Object object0 = rawVariable0.clone();
      arrayList0.remove(object0);
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      rawVariable0.setAlias("#A|;nJvDM=z");
      User user1 = new User("t+;BqAx9&R", ":#6xQ#M");
      User user2 = new User(":#6xQ#M", ":#6xQ#M");
      user2.clone();
      user2.clone();
      user1.setIdentifier(1);
      RawVariable.detectFieldChanges(user1, rawVariable0, rawVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.removeOntologyTerm(ontologyTerm0);
      supportingDocument0.setIdentifier(0);
      rawVariable1.addSupportingDocument(supportingDocument0);
      // Undeclared exception!
      try { 
        rawVariable0.containsOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable0.setAvailability((String) null);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier(1);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart((String) null);
      boolean boolean1 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertTrue(boolean1 == boolean0);
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.getQuestionNumber();
      assertFalse(derivedVariable1.isCleaned());
      assertFalse(derivedVariable1.isNewRecord());
      assertFalse(derivedVariable1.isCoded());
      assertEquals(0, derivedVariable1.getIdentifier());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.862681628353659
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.clone();
      User user0 = new User("/[b&~BawsB^3f;px*g", "/[b&~BawsB^3f;px*g");
      user0.setAddressLine1("/[b&~BawsB^3f;px*g");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ValueLabel.differencesExist(user0, derivedVariable1, valueLabel0, valueLabel0);
      valueLabel0.setIdentifier(0);
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel.differencesExist(user0, derivedVariable1, valueLabel0, valueLabel1);
      derivedVariable1.codeBookNumber = "/[b&~BawsB^3f;px*g";
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      derivedVariable0.removeValueLabel(valueLabel0);
      derivedVariable0.setIdentifier(0);
      derivedVariable0.isNewRecord();
      derivedVariable0.getCodeBookNumber();
      // Undeclared exception!
      try { 
        derivedVariable0.addSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=3.581687993791636
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.createVariableSummary();
      derivedVariable0.setColumnEnd("mkL)7v/*");
      derivedVariable0.setQuestionNumber("mkL)7v/*");
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.removeSourceVariables(arrayList0);
      derivedVariable0.setIdentifier((-2245));
      System.setCurrentTimeMillis((-1L));
      derivedVariable0.clone();
      assertEquals("mkL)7v/*", derivedVariable0.getColumnEnd());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=3.786185841917597
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable1.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      rawVariable1.addOntologyTerms(arrayList0);
      rawVariable1.setForm("/[b&~BawsB^3f;px*g");
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setTerm("R 9j$>lMC9-aG:v");
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(derivedVariable1);
      derivedVariable1.getOntologyTerms();
      derivedVariable1.removeOntologyTerms(arrayList0);
      RawVariable rawVariable2 = new RawVariable();
      rawVariable1.cloneAttributes(derivedVariable0);
      RawVariable rawVariable3 = new RawVariable();
      derivedVariable0.hasSameDisplayName(rawVariable3);
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable1, derivedVariable0);
      assertEquals("/[b&~BawsB^3f;px*g", derivedVariable0.getForm());
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=3.2990373725707287
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart("==");
      user0.setLastName("supportingDocument.title.saveChanges");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setQuestionNumber("");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, derivedVariable0);
      rawVariable0.setName("");
      derivedVariable0.getDisplayName();
      derivedVariable0.setYear("");
      derivedVariable0.getSupportingDocuments();
      derivedVariable0.removeSourceVariable(rawVariable0);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>(223);
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList0.sort(comparator0);
      derivedVariable0.removeSupportingDocuments(arrayList0);
      derivedVariable0.getSupportingDocuments();
      derivedVariable0.getSourceVariables();
      rawVariable0.setCleaningDescription("supportingDocument.title.saveChanges");
      derivedVariable0.getValueLabels();
      derivedVariable0.hasSameDisplayName(rawVariable0);
      rawVariable0.setNotes("ontologyTerm.nameSpace.label");
      derivedVariable0.isNewRecord();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      rawVariable0.removeOntologyTerms(arrayList1);
      assertEquals("ontologyTerm.nameSpace.label", rawVariable0.getNotes());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=3.041560533833002
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(false);
      RawVariable rawVariable1 = new RawVariable();
      User user0 = new User("", "");
      user0.setStatus("");
      user0.setStatus("Pf-1K{2?QV%%");
      user0.setStatus("Pf-1K{2?QV%%");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable1, rawVariable1);
      rawVariable1.notes = "macaw.businessLayer.OntologyTerm";
      rawVariable1.setColumnStart("_~!rdXc<u#etr^");
      rawVariable0.hasSameDisplayName(rawVariable1);
      rawVariable0.hasSameDisplayName(rawVariable1);
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      ArrayList<MacawChangeEvent> arrayList1 = Variable.detectFieldChanges(user0, rawVariable1, rawVariable1);
      arrayList0.containsAll(arrayList1);
      arrayList0.add(valueLabel0);
      rawVariable0.setValueLabels(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable1.addOntologyTerm(ontologyTerm0);
      assertEquals("macaw.businessLayer.OntologyTerm", rawVariable1.getNotes());
      
      rawVariable0.setCleaned(false);
      rawVariable0.getYear();
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.579755221006731
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.createVariableSummary();
      rawVariable1.notes = null;
      rawVariable1.setLabel((String) null);
      rawVariable0.setAlternativeVariable(rawVariable1);
      rawVariable1.getSupportingDocuments();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace("variable.columnEnd.label");
      ontologyTerm0.setNameSpace((String) null);
      User user0 = new User("a+bipS`o", "/N9qwy?#.Y0");
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=3.0888349398423283
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = null;
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      arrayList0.listIterator();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      rawVariable0.isNewRecord();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setSourceVariables((ArrayList<Variable>) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setIsNewRecord(false);
      rawVariable0.setName("v*SoT^d4\"1F[On");
      derivedVariable1.setLabel((String) null);
      derivedVariable1.setFilePath("I&}NV\"5^m*el yJ");
      rawVariable0.containsSupportingDocument(supportingDocument0);
      User user0 = new User("A[c%L%&@FeI#Y)BWpR", "");
      user0.setCounty("v*SoT^d4\"1F[On");
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setDescription("");
      supportingDocument0.setTitle("");
      rawVariable0.setCleaned(true);
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=3.021294734707494
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable1.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      rawVariable0.addOntologyTerms(arrayList0);
      rawVariable1.columnEnd = "variable.codeBookNumber.label";
      ValueLabel valueLabel0 = new ValueLabel();
      ontologyTerm0.setNameSpace("variable.columnEnd.label");
      ontologyTerm0.setNameSpace((String) null);
      User user0 = new User("/[b&~BawsB^3f;px*g", "variable.codeBookNumber.label");
      user0.setCity("/[b&~BawsB^3f;px*g");
      rawVariable1.setNotes("-G%@5wLBzff=");
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      rawVariable1.addOntologyTerm(ontologyTerm0);
      assertEquals("variable.codeBookNumber.label", rawVariable1.getColumnEnd());
      
      ontologyTerm0.setNameSpace((String) null);
      ontologyTerm0.setTerm("U9s-7a(- E-OmXQcGh&");
      ontologyTerm0.setIdentifier((-1));
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.containsOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.getCleaningDescription();
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=3.7794207077756727
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable1.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      rawVariable0.addOntologyTerms(arrayList0);
      rawVariable0.setForm("/[b&~BawsB^3f;px*g");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setTerm("/[b&~BawsB^3f;px*g");
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm1);
      assertEquals("/[b&~BawsB^3f;px*g", rawVariable0.getForm());
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable2 = new RawVariable();
      derivedVariable0.removeSourceVariable(rawVariable2);
      rawVariable1.getOntologyTerms();
      derivedVariable0.removeOntologyTerms(arrayList0);
      RawVariable rawVariable3 = new RawVariable();
      rawVariable3.cloneAttributes(derivedVariable0);
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDocumentCode("UNABLE_TO_DISASSOCIATE_DOCUMENT");
      User user0 = new User();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument0.setTitle("UNABLE_TO_DISASSOCIATE_DOCUMENT");
      SupportingDocument.detectFieldChanges(user0, supportingDocument1, supportingDocument0);
      supportingDocument0.setDescription("");
      supportingDocument0.setTitle("A[S:#@|Q)-");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.addSupportingDocument(supportingDocument0);
      rawVariable0.getValueLabels();
      assertFalse(rawVariable0.isCleaned());
      
      rawVariable1.setCleaned(true);
      assertTrue(rawVariable1.isCleaned());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.4902259998997436
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      String string0 = "atnMTT_F_=k0=4zt@}]";
      User user0 = new User("atnMTT_F_=k0=4zt@}]", "atnMTT_F_=k0=4zt@}]");
      Object object0 = new Object();
      arrayList0.remove(object0);
      arrayList0.spliterator();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      MockDate mockDate0 = new MockDate((-614), (-614), (-614), (-614), (-625));
      Instant instant0 = MockInstant.ofEpochSecond((long) (-614));
      Date date0 = Date.from(instant0);
      mockDate0.before(date0);
      Date.from(instant0);
      macawChangeEvent0.setDate(mockDate0);
      arrayList0.remove((Object) macawChangeEvent0);
      arrayList0.add((OntologyTerm) null);
      rawVariable0.setIsNewRecord(true);
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.86257310963418
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAvailability("1o+kxeghWH:1}Ra'");
      rawVariable0.setCoded(false);
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setValue("1o+kxeghWH:1}Ra'");
      User user0 = new User();
      ValueLabel.detectFieldChanges(user0, rawVariable0, valueLabel0, valueLabel0);
      ValueLabel.validateFields(valueLabel0);
      rawVariable0.addValueLabel(valueLabel0);
      User user1 = new User();
      user1.setPhone("user.addressLine2.label");
      RawVariable.detectFieldChanges(user1, rawVariable0, rawVariable0);
      rawVariable0.setCleaningStatus("MacawProperties");
      rawVariable0.getName();
      rawVariable0.getForm();
      rawVariable0.getCleaningStatus();
      rawVariable0.createVariableSummary();
      rawVariable0.getCleaningDescription();
      assertEquals("1o+kxeghWH:1}Ra'", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.1341286000959614
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      boolean boolean0 = derivedVariable0.isCoded();
      assertFalse(boolean0);
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<String> arrayList0 = Variable.validateFields(derivedVariable1);
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals(1, arrayList0.size());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertFalse(derivedVariable1.isCleaned());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable0.setAvailability((String) null);
      derivedVariable0.setSupportingDocuments(arrayList0);
      derivedVariable0.addSupportingDocuments(arrayList0);
      derivedVariable0.setAlias("2C3erx{MO_u/y}");
      assertEquals("2C3erx{MO_u/y}", derivedVariable0.getAlias());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setYear("");
      // Undeclared exception!
      try { 
        rawVariable0.removeSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getDisplayItemIdentifier();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      arrayList0.add(supportingDocument0);
      rawVariable0.removeSupportingDocuments(arrayList0);
      rawVariable0.setQuestionNumber("I`BKw|`I4");
      rawVariable0.getCodeBookNumber();
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      assertEquals("I`BKw|`I4", rawVariable0.getQuestionNumber());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=3.8113142490918186
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable1.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      rawVariable0.addOntologyTerms(arrayList0);
      User user0 = new User("/[b&~BawsB^3f;px*g", "Te>{'B");
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable1);
      ArrayList<MacawChangeEvent> arrayList1 = Variable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      assertTrue(arrayList1.isEmpty());
      
      rawVariable1.addOntologyTerm(ontologyTerm0);
      RawVariable rawVariable2 = new RawVariable();
      rawVariable1.getFilePath();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.removeSourceVariable(rawVariable2);
      derivedVariable1.getOntologyTerms();
      derivedVariable0.removeOntologyTerms(arrayList0);
      derivedVariable0.removeOntologyTerms(arrayList0);
      RawVariable rawVariable3 = new RawVariable();
      RawVariable rawVariable4 = new RawVariable();
      rawVariable0.cloneAttributes(rawVariable4);
      assertEquals("Unknown", rawVariable4.getAvailability());
      assertEquals("Unknown", rawVariable4.getCategory());
      assertEquals("Unknown", rawVariable4.getCleaningStatus());
      assertEquals(0, rawVariable4.getIdentifier());
      assertFalse(rawVariable4.isCoded());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.7468661552001836
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      rawVariable0.addOntologyTerms(arrayList0);
      ArrayList<SupportingDocument> arrayList1 = rawVariable0.getSupportingDocuments();
      rawVariable0.addSupportingDocuments(arrayList1);
      rawVariable0.setForm("}9nO&e?");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm0.setTerm((String) null);
      ontologyTerm0.setIdentifier((-1));
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm2);
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.788299378708331
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      arrayList0.listIterator();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      VariableSummary variableSummary0 = rawVariable0.createVariableSummary();
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
      
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<OntologyTerm> arrayList1 = rawVariable1.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList1.add(ontologyTerm0);
      rawVariable0.setOntologyTerms(arrayList1);
      RawVariable rawVariable2 = new RawVariable();
      ArrayList<OntologyTerm> arrayList2 = rawVariable2.getOntologyTerms();
      rawVariable1.addOntologyTerms(arrayList2);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable2.updateOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      String string0 = derivedVariable1.getCleaningStatus();
      assertNotNull(string0);
      assertEquals("Unknown", string0);
      
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable1.removeSourceVariable(derivedVariable2);
      derivedVariable2.removeOntologyTerm(ontologyTerm0);
      assertFalse(derivedVariable2.isNewRecord());
      assertFalse(derivedVariable2.isCleaned());
      assertFalse(derivedVariable2.isCoded());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.579628870616548
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      rawVariable0.addOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addSourceVariable(rawVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      rawVariable0.hasSameDisplayName(derivedVariable1);
      derivedVariable0.removeSourceVariable(rawVariable0);
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.862218290000827
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setIdentifier(19);
      ValueLabel valueLabel1 = new ValueLabel();
      User user0 = new User("I!]gfYo='S<3[(t", (String) null);
      ValueLabel valueLabel2 = new ValueLabel();
      ValueLabel.differencesExist(user0, derivedVariable0, valueLabel0, valueLabel2);
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.removeValueLabel(valueLabel0);
      derivedVariable0.setIdentifier((-1));
      derivedVariable0.isNewRecord();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable1.addSupportingDocument(supportingDocument0);
      // Undeclared exception!
      try { 
        derivedVariable1.addSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }
}
