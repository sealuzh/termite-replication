/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 11:56:29 GMT 2019
 */


import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Services_ESTest extends Services_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.4048159937786893
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("https://\\,\"+)/VQ}J`2el\\+1{:612");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, ",\"+)/VQ}J`2el+1{");
      Services.testHTTPS(",\"+)/VQ}J`2el+1{", 612);
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTPS(",\"+)/VQ}J`2el+1{", 0);
      assertEquals(0L, services_HTTP_Result0.time);
      assertFalse(services_HTTP_Result0.works);
      assertEquals(0, services_HTTP_Result0.code);
      assertEquals(0, services_HTTP_Result0.page_weight);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.530996748593901
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress1 = new EvoSuiteRemoteAddress("", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress1);
      byte[] byteArray0 = new byte[16];
      byteArray0[5] = (byte)19;
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://:19");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "y?u.nj_Y=c$-W {]a");
      byteArray0[1] = (byte)19;
      byteArray0[2] = (byte)19;
      byteArray0[3] = (byte)19;
      byteArray0[4] = (byte)19;
      byteArray0[5] = (byte)19;
      byteArray0[6] = (byte)19;
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTP("", (byte)19);
      services_HTTP_Result0.time = (long) (byte)19;
      EvoSuiteURL evoSuiteURL1 = new EvoSuiteURL("http://T");
      NetworkHandling.createRemoteTextFile(evoSuiteURL1, "V/RlL?n6<[Lv12");
      Services.HTTP_Result services_HTTP_Result1 = Services.testHTTP("T", (-1));
      assertEquals(15, services_HTTP_Result1.page_weight);
      assertTrue(services_HTTP_Result1.works);
      
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testPOP3("", 0);
      services_SIMPLE_Result0.reset();
      Services.testHTTPS("yz/X4tfT?G8G%rAX=?", (-741));
      Services.testSMTP("k/q{ m#:6iWA~S", (byte)19);
      System.setCurrentTimeMillis(0L);
      Services.SIMPLE_Result services_SIMPLE_Result1 = Services.testSMTP("Services$HTTP_Result", (byte)19);
      assertEquals(0L, services_SIMPLE_Result1.time);
      assertFalse(services_SIMPLE_Result1.works);
      
      Services.HTTP_Result services_HTTP_Result2 = Services.testHTTP("Ju#lX-Ahz", (-741));
      assertEquals(0L, services_HTTP_Result2.time);
      assertFalse(services_HTTP_Result2.works);
      assertEquals(0, services_HTTP_Result2.code);
      assertEquals(0, services_HTTP_Result2.page_weight);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.177018148301881
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("200.42.42.1", 19);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)19;
      byteArray0[2] = (byte)19;
      byteArray0[4] = (byte)19;
      byteArray0[5] = (byte)19;
      byteArray0[6] = (byte)19;
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      Services.testSMTP((String) null, (byte)19);
      System.setCurrentTimeMillis((-609L));
      System.setCurrentTimeMillis(0L);
      Services.testSMTP((String) null, (-1));
      Services.testSMTP((String) null, (byte)0);
      Services.testSMTP("**Erreur d'E/S** (java.io.IOException: Remote address/port is not opened: org.evosuite.runtime.vnet.EndPointInfo@ffbd9594) **", (byte)19);
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testSMTP("{UzoE.t.r7P", (byte)19);
      assertEquals(0L, services_SIMPLE_Result0.time);
      assertFalse(services_SIMPLE_Result0.works);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("200.42.42.0", 1);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      Services.testPOP3("36t^){hUL%aoBTd>W8q", 1);
      System.setCurrentTimeMillis(1);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-520L));
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis(2520L);
      System.setCurrentTimeMillis((-520L));
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("200.42.42.0", 1);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testPOP3("?>=f cBF+lO,zZwVRZ", 1);
      assertEquals(0L, services_SIMPLE_Result0.time);
      assertFalse(services_SIMPLE_Result0.works);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testPOP3("", (-2076));
      assertFalse(services_SIMPLE_Result0.works);
      assertEquals(0L, services_SIMPLE_Result0.time);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress1 = new EvoSuiteRemoteAddress("", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress1);
      byte[] byteArray0 = new byte[16];
      byteArray0[5] = (byte)19;
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://:19");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "y?u.nj_Y=c$-W {]a");
      byteArray0[1] = (byte)19;
      byteArray0[2] = (byte)19;
      byteArray0[3] = (byte)19;
      byteArray0[4] = (byte)19;
      byteArray0[4] = (byte)19;
      byteArray0[6] = (byte)19;
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      EvoSuiteLocalAddress evoSuiteLocalAddress0 = new EvoSuiteLocalAddress("192.168.1.42", 40000);
      NetworkHandling.sendDataOnTcp(evoSuiteLocalAddress0, byteArray0);
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTPS("** Poid de la page : ", (-741));
      services_HTTP_Result0.reset();
      assertFalse(services_HTTP_Result0.works);
      assertEquals(0L, services_HTTP_Result0.time);
      assertEquals(0, services_HTTP_Result0.page_weight);
      assertEquals(0, services_HTTP_Result0.code);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)46;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)19;
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTP((String) null, 495);
      assertEquals(0, services_HTTP_Result0.code);
      assertEquals(0, services_HTTP_Result0.page_weight);
      assertEquals(0L, services_HTTP_Result0.time);
      assertFalse(services_HTTP_Result0.works);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.4221006252457893
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Services.SIMPLE_Result services_SIMPLE_Result0 = new Services.SIMPLE_Result();
      assertEquals(0L, services_SIMPLE_Result0.time);
      
      Services.SIMPLE_Result services_SIMPLE_Result1 = new Services.SIMPLE_Result();
      services_SIMPLE_Result1.works = false;
      services_SIMPLE_Result0.time = (-1L);
      services_SIMPLE_Result1.time = (-1L);
      services_SIMPLE_Result0.time = (-1L);
      services_SIMPLE_Result1.works = true;
      services_SIMPLE_Result1.works = true;
      services_SIMPLE_Result1.Error = "";
      Services.HTTP_Result services_HTTP_Result0 = new Services.HTTP_Result();
      services_SIMPLE_Result0.toString();
      Services.testHTTP("", 6070);
      services_SIMPLE_Result0.toString();
      services_SIMPLE_Result1.reset();
      String string0 = services_HTTP_Result0.toString();
      assertEquals("**** Resultat : \n** Fonctionnement : false\n** Temps : 0 ms\n** Poid de la page : 0 octets\n** Code de page : 0\n** Erreur g\u00E9n\u00E9r\u00E9e : .\n****", string0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Services.SIMPLE_Result services_SIMPLE_Result0 = new Services.SIMPLE_Result();
      assertEquals(0L, services_SIMPLE_Result0.time);
      
      Services.SIMPLE_Result services_SIMPLE_Result1 = new Services.SIMPLE_Result();
      services_SIMPLE_Result1.works = false;
      services_SIMPLE_Result0.time = (-1L);
      services_SIMPLE_Result1.time = (-1L);
      services_SIMPLE_Result0.time = (-1L);
      services_SIMPLE_Result1.works = true;
      services_SIMPLE_Result1.works = true;
      Services.HTTP_Result services_HTTP_Result0 = new Services.HTTP_Result();
      services_SIMPLE_Result0.toString();
      Services.testHTTP("", 6070);
      services_SIMPLE_Result1.reset();
      String string0 = services_HTTP_Result0.toString();
      assertEquals("**** Resultat : \n** Fonctionnement : false\n** Temps : 0 ms\n** Poid de la page : 0 octets\n** Code de page : 0\n** Erreur g\u00E9n\u00E9r\u00E9e : .\n****", string0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      System.setCurrentTimeMillis(1);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(1);
      System.setCurrentTimeMillis(835L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-520L));
      Services.SIMPLE_Result services_SIMPLE_Result0 = new Services.SIMPLE_Result();
      Services.testPOP3("", 3000);
      System.setCurrentTimeMillis((-520L));
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.7937175017485838
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress1 = new EvoSuiteRemoteAddress("", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress1);
      byte[] byteArray0 = new byte[16];
      byteArray0[5] = (byte)19;
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://:19");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "y?u.nj_Y=c$-W {]a");
      byteArray0[1] = (byte)19;
      byteArray0[2] = (byte)19;
      byteArray0[3] = (byte)19;
      byteArray0[4] = (byte)19;
      byteArray0[5] = (byte)19;
      byteArray0[6] = (byte)19;
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTP("", (byte)19);
      String string0 = services_HTTP_Result0.toString();
      assertEquals("**** Resultat : \n** Fonctionnement : true\n** Temps : 0 ms\n** Poid de la page : 18 octets\n** Code de page : -1\n** Erreur g\u00E9n\u00E9r\u00E9e : .\n****", string0);
      
      System.setCurrentTimeMillis(2939L);
      System.setCurrentTimeMillis((-1));
      System.setCurrentTimeMillis((-3039L));
      Services.HTTP_Result services_HTTP_Result1 = Services.testHTTP(">", (-3062));
      assertFalse(services_HTTP_Result1.works);
      assertEquals(0, services_HTTP_Result1.page_weight);
      assertEquals(0L, services_HTTP_Result1.time);
      assertEquals(0, services_HTTP_Result1.code);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.0921965331237558
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = new Services.HTTP_Result();
      services_HTTP_Result0.reset();
      services_HTTP_Result0.reset();
      assertEquals(0L, services_HTTP_Result0.time);
      assertEquals(0, services_HTTP_Result0.page_weight);
      assertFalse(services_HTTP_Result0.works);
      assertEquals(0, services_HTTP_Result0.code);
      
      Services.HTTP_Result services_HTTP_Result1 = Services.testHTTP("", 0);
      String string0 = services_HTTP_Result1.toString();
      assertEquals("**** Resultat : \n** Fonctionnement : false\n** Temps : 0 ms\n** Poid de la page : 0 octets\n** Code de page : 0\n** Erreur g\u00E9n\u00E9r\u00E9e : **Erreur d'E/S** (org.evosuite.runtime.mock.java.lang.MockThrowable: Could not find: ) **.\n****", string0);
      
      services_HTTP_Result1.reset();
      Services.testHTTPS("", 0);
      Services.HTTP_Result services_HTTP_Result2 = Services.testHTTPS("Hi(GXLt(Q=<trEXaD%B", (-1));
      assertEquals(0, services_HTTP_Result2.page_weight);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.5719788551126714
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = new Services.HTTP_Result();
      Services.HTTP_Result services_HTTP_Result1 = new Services.HTTP_Result();
      Services services0 = new Services();
      Services.testHTTPS("", 0);
      Services.HTTP_Result services_HTTP_Result2 = Services.testHTTP("", 0);
      Services.testHTTPS((String) null, 2168);
      Services.SIMPLE_Result services_SIMPLE_Result0 = new Services.SIMPLE_Result();
      services_SIMPLE_Result0.toString();
      String string0 = services_SIMPLE_Result0.toString();
      assertEquals("**** Resultat : \n** Fonctionnement : false\n** Temps : 0 ms\n** Erreur g\u00E9n\u00E9r\u00E9e : .\n****", string0);
      
      Services.testHTTP("", (-2150));
      services_SIMPLE_Result0.reset();
      services_HTTP_Result2.reset();
      services_HTTP_Result0.reset();
      assertEquals(0, services_HTTP_Result0.page_weight);
      assertFalse(services_HTTP_Result0.works);
      assertEquals(0, services_HTTP_Result0.code);
      assertEquals(0L, services_HTTP_Result0.time);
      
      Services.testHTTP("", 0);
      services_SIMPLE_Result0.reset();
      String string1 = services_SIMPLE_Result0.toString();
      assertEquals("**** Resultat : \n** Fonctionnement : false\n** Temps : 0 ms\n** Erreur g\u00E9n\u00E9r\u00E9e : .\n****", string1);
      
      Services.testHTTP("2'", 941);
      services_SIMPLE_Result0.reset();
      Services.HTTP_Result services_HTTP_Result3 = Services.testHTTPS("**Erreur : java.lang.NullPointerException**", 941);
      assertFalse(services_HTTP_Result3.works);
  }
}
