/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 11:24:54 GMT 2019
 */

package net.sourceforge.squirrel_sql.plugins.dbcopy.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.gargoylesoftware.base.resource.jdbc.ConnectionWrapper;
import java.awt.AWTEventMulticaster;
import java.awt.event.InputMethodListener;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import javax.swing.DefaultListCellRenderer;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JInternalFrame;
import javax.swing.JMenuBar;
import javax.swing.plaf.metal.MetalTreeUI;
import javax.swing.tree.DefaultTreeCellRenderer;
import net.sourceforge.squirrel_sql.client.IApplication;
import net.sourceforge.squirrel_sql.client.session.ISession;
import net.sourceforge.squirrel_sql.client.session.schemainfo.SchemaInfo;
import net.sourceforge.squirrel_sql.client.util.ApplicationFileWrappersImpl;
import net.sourceforge.squirrel_sql.fw.id.IntegerIdentifier;
import net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectType;
import net.sourceforge.squirrel_sql.fw.sql.ForeignKeyInfo;
import net.sourceforge.squirrel_sql.fw.sql.IDatabaseObjectInfo;
import net.sourceforge.squirrel_sql.fw.sql.ISQLConnection;
import net.sourceforge.squirrel_sql.fw.sql.ITableInfo;
import net.sourceforge.squirrel_sql.fw.sql.SQLDriver;
import net.sourceforge.squirrel_sql.fw.sql.SQLDriverPropertyCollection;
import net.sourceforge.squirrel_sql.fw.sql.TableColumnInfo;
import net.sourceforge.squirrel_sql.fw.util.FileWrapper;
import net.sourceforge.squirrel_sql.fw.util.FileWrapperFactoryImpl;
import net.sourceforge.squirrel_sql.fw.util.FileWrapperImpl;
import net.sourceforge.squirrel_sql.plugins.dbcopy.DBCopyPlugin;
import net.sourceforge.squirrel_sql.plugins.dbcopy.prefs.DBCopyPreferenceBean;
import net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DBUtil_ESTest extends DBUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.unload();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl0.getFwJarFile();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo(",<;}mCf%MFRl", "&KWN+1Qv6 jom", "select seqname from sysibm.syssequences", "D'd|", 1111, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 31982, 26, 1986, 1986, "bu", (String) null, 31982, 26, "W");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SEQUENCE_TYPE_DBO;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin2 = new DBCopyPlugin();
      dBCopyPlugin1.getSourceSession();
      DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[1];
      iDatabaseObjectInfoArray0[0] = (IDatabaseObjectInfo) tableColumnInfo0;
      // Undeclared exception!
      try { 
        DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // net.sourceforge.squirrel_sql.fw.sql.TableColumnInfo cannot be cast to net.sourceforge.squirrel_sql.fw.sql.ITableInfo
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DBUtil.getLastStatement();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, (String) null, "&;[", "org.jfree.data.xy.OHLCDataItem", 661, "org.jfree.data.xy.OHLCDataItem", 7, (-1499), 7, 7, (String) null, "iVN;{b5'XE `y8", 3569, 3569, "&;[");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SEQUENCE;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DBUtil.getSchemaNameFromDbObject(tableColumnInfo0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      dBCopyPlugin0.setDestDatabaseObject(tableColumnInfo0);
      // Undeclared exception!
      try { 
        DBUtil.getTableInfo((ISession) null, "&KWN+1Qv6 jom", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/102_squirrel-sql");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "com.jidesoft.plaf.eclipse.EclipseMenuUI$MenuDragMouseHandler");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl1.getLicenceFile();
      applicationFileWrappersImpl1.getDatabaseAliasesTreeStructureFile();
      applicationFileWrappersImpl0.getUpdateDirectory();
      applicationFileWrappersImpl1.getDatabaseAliasesFile();
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      FileWrapperImpl fileWrapperImpl0 = new FileWrapperImpl("SELECT CURRENT_VALUE, 'NONE' 'NONu' CACHE, INCREMENT, 0 FROM INFORMATION_SCHEMA.SEQUENCES WHERE SEQUENCE_SCHEMA = '$schemaN3me$' AND SEQUENCE_NAME = '$sequenceName$' AND SEQUENCE_CATALOG = '$catalogName$'", "SELECT CURRENT_VALUE, 'NONE' 'NONu' CACHE, INCREMENT, 0 FROM INFORMATION_SCHEMA.SEQUENCES WHERE SEQUENCE_SCHEMA = '$schemaN3me$' AND SEQUENCE_NAME = '$sequenceName$' AND SEQUENCE_CATALOG = '$catalogName$'");
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.getPasteToTableInfo((ISQLConnection) null, (String) null, "blob");
      // Undeclared exception!
      try { 
        DBUtil.getPKColumnString((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      arrayList0.trimToSize();
      String string0 = "L'sLc /*ekK";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "L'sLc /*ekK");
      arrayList0.add((ITableInfo) null);
      arrayList0.add((ITableInfo) null);
      arrayList0.add((ITableInfo) null);
      DBUtil.convertTableToObjectList(arrayList0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl0.getUserSettingsDirectory();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      FileWrapper fileWrapper0 = applicationFileWrappersImpl0.getLicenceFile();
      fileWrapperFactoryImpl0.create(fileWrapper0, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      applicationFileWrappersImpl0.setFileWrapperFactory(fileWrapperFactoryImpl0);
      dBCopyPlugin0.setApplicationFiles(applicationFileWrappersImpl0);
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.sameDatabaseType((ISession) null, (ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "0o QU5-L");
      FileSystemHandling.createFolder(evoSuiteFile0);
      dBCopyPlugin0.getSourceSession();
      dBCopyPlugin0.getSourceSession();
      String string0 = "l[wax";
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("l[wax", "0o QU5-L", ")h", (String) null, 874, ")h", 193, 290, 193, 91, "?", "imrbwb", 376, 193, "q$v9^Cl@O1^$%!!f}wb");
      DBUtil.replaceDistinctDataType(2053, tableColumnInfo0, (ISession) null);
      DBUtil.replaceDistinctDataType(2048, tableColumnInfo0, (ISession) null);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      System.setCurrentTimeMillis((-1L));
      // Undeclared exception!
      try { 
        DBUtil.convertObjectToTableList((List<IDatabaseObjectInfo>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql/logs");
      FileSystemHandling.createFolder(evoSuiteFile0);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SEQUENCE_TYPE_DBO;
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.createNewDatabaseObjectType(")[");
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "", "9/46\"i^:C2nEKnc%v%D", "9/46\"i^:C2nEKnc%v%D", (-3), "\"(4H_i +", 488, 488, 145, 1, ",,H(`P", "", (-1543), 488, "R@Vhj3 AC7L");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      ImageIcon imageIcon0 = new ImageIcon(",,H(`P");
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.SCHEMA;
      DatabaseObjectType.createNewDatabaseObjectType("DBUtil.error.tablenotfound", (Icon) imageIcon0);
      DatabaseObjectType.createNewDatabaseObjectType("9/46\"i^:C2nEKnc%v%D", (Icon) imageIcon0);
      imageIcon0.setDescription("http://www.squirrelsql.org");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      DatabaseObjectType.createNewDatabaseObjectType("\"(4H_i +", (Icon) imageIcon0);
      DBUtil.isBinaryType(tableColumnInfo0);
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      IDatabaseObjectInfo iDatabaseObjectInfo0 = DBUtil.getSchemaFromDbObject(tableColumnInfo0, schemaInfo0);
      assertEquals("", iDatabaseObjectInfo0.getSchemaName());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.unload();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      DBUtil.typesAreEquivalent(509, 9);
      SQLDriver sQLDriver0 = new SQLDriver();
      Connection connection0 = null;
      ConnectionWrapper connectionWrapper0 = null;
      try {
        connectionWrapper0 = new ConnectionWrapper((Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.ConnectionWrapper", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.convertObjectArrayToTableList((IDatabaseObjectInfo[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      String string0 = "";
      DBUtil.fixCase((ISession) null, "");
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.dropTable("\",|U* Rg_soLv]X", (String) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (ISession) null, true, (-410));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.5981863871455346
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.unload();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo(".=[eDa@p3", "", "hE^H", "?", 2000, "W5bfCb1*TrrzT", 1458, 705, 1066, 4, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "9o)VXVr3jH*rdo;", 2000, 488, "_f>Nf");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SEQUENCE_TYPE_DBO;
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.createNewDatabaseObjectType("?");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.TABLE_TYPE_DBO;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DBUtil.isBinaryType(tableColumnInfo0);
      DBUtil.getSchemaNameFromDbObject(tableColumnInfo0);
      LinkedList<IDatabaseObjectInfo> linkedList0 = new LinkedList<IDatabaseObjectInfo>();
      List<ITableInfo> list0 = DBUtil.convertObjectToTableList(linkedList0);
      DBUtil.convertTableToObjectList(list0);
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier((-130));
      SQLDriver sQLDriver0 = new SQLDriver(integerIdentifier0);
      ConnectionWrapper connectionWrapper0 = null;
      try {
        connectionWrapper0 = new ConnectionWrapper((Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.ConnectionWrapper", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      MetalTreeUI metalTreeUI0 = new MetalTreeUI();
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer0.getDefaultOpenIcon();
      MetalTreeUI metalTreeUI1 = new MetalTreeUI();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      SchemaInfo schemaInfo1 = new SchemaInfo((IApplication) null);
      SchemaInfo schemaInfo2 = new SchemaInfo((IApplication) null);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("xuDc':Rjnm|3uCsJ", "!-01k=H}6a^#U>^)@LU", "DBUtil.info.bindclobfile", "DBUtil.info.bindclobfile", 2001, " tableName = ", 1, 2, 2004, (-2), "Do#a@", "rPp6^-pQfh|#M`Y", 1, 23503, " tableName = ");
      // Undeclared exception!
      try { 
        DBUtil.getSchemaFromDbObject(tableColumnInfo0, schemaInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // SQLDatabaseMetaData == null
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      FileWrapperImpl fileWrapperImpl0 = (FileWrapperImpl)applicationFileWrappersImpl0.getUpdateDirectory();
      applicationFileWrappersImpl0.getDatabaseAliasesFile();
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      FileWrapperImpl fileWrapperImpl1 = new FileWrapperImpl(fileWrapperImpl0);
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      arrayList0.add((ITableInfo) null);
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.getForeignKeySQL(dBCopyPlugin1, (ITableInfo) null, arrayList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("9/46\"i^:C2nEKnc%v%D", ".=[eDa@p3", ")[", " ", (-274), "8JRkyfrIe$", (-3), 335, (-6), 1458, ".=[eDa@p3", "hibernate.jdbc.use_streams_for_binary", 335, 4, ".=[eDa@p3");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SEQUENCE_TYPE_DBO;
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.createNewDatabaseObjectType(") has a particular foreign ");
      TableColumnInfo tableColumnInfo1 = new TableColumnInfo("9/46\"i^:C2nEKnc%v%D", "i$>Lu?w", "", "8JRkyfrIe$", 335, "", (-274), (-3), 1458, 335, "hibernate.jdbc.use_streams_for_binary", "", (-3), (-6), "i$>Lu?w");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      ImageIcon imageIcon0 = new ImageIcon("8JRkyfrIe$");
      DatabaseObjectType.createNewDatabaseObjectType("getViewDefinitionSQL: MySQL 4 and below doesn't support views", (Icon) imageIcon0);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      // Undeclared exception!
      try { 
        DBUtil.isBinaryType((TableColumnInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      System.setCurrentTimeMillis((-1065L));
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("Farout value must be greater thn the outlier value, which i currently set at: (", "Farout value must be greater thn the outlier value, which i currently set at: (", "Farout value must be greater thn the outlier value, which i currently set at: (", "P+_C#K", (-1468), "P+_C#K", 128, 128, 128, (-177), "P+_C#K", "Farout value must be greater thn the outlier value, which i currently set at: (", (-177), (-177), "P+_C#K");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      int int0 = DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      assertEquals((-1468), int0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "g~1S2?~{g S9-|9");
      DBUtil.typesAreEquivalent(67, 67);
      SQLDriver sQLDriver0 = new SQLDriver();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((CallableStatement) null).when(connection0).prepareCall(anyString());
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      // Undeclared exception!
      try { 
        connectionWrapper0.prepareCall("blob");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // statement
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.StatementWrapper", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      dBCopyPlugin0.getDestSession();
      ImageIcon imageIcon0 = new ImageIcon("(");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.PROC_TYPE_DBO;
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "rX|vxqlmJ(<)", "9/46\"i^:C2nEKnc%v%D", "longvarchar(1000000000)", 2004, "sqlResultsTabPlacement", 1003, (-125), 151, 404, "UWST[V!Em", (String) null, 404, (-21), "9/46\"i^:C2nEKnc%v%D");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DBUtil.isBinaryType(tableColumnInfo0);
      DBUtil.replaceDistinctDataType(991, tableColumnInfo0, (ISession) null);
      String string0 = "&KWN+1Qv6 jom";
      // Undeclared exception!
      try { 
        DBUtil.getTableInfo((ISession) null, "sqlResultsTabPlacement", "&KWN+1Qv6 jom");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("`fQ/Z]eA#{W>Z0Y'x", "J2 +gi1uw#R=!", ")9!,'$:&u&SKT$", "J2 +gi1uw#R=!", 1372, "`fQ/Z]eA#{W>Z0Y'x", 3847, 3847, (-17), 2001, ")9!,'$:&u&SKT$", (String) null, (-6), (-1729), "GUEU:Koj");
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[5];
      tableColumnInfoArray0[0] = tableColumnInfo0;
      tableColumnInfoArray0[1] = tableColumnInfo0;
      TableColumnInfo tableColumnInfo1 = new TableColumnInfo(" O}2;)6;c!?B P", " O}2;)6;c!?B P", "DBUtil.info.bindclobfile", "null Window or Rectangle passed", (-1729), "`fQ/Z]eA#{W>Z0Y'x", (-4262), 3847, 2001, (-17), ")9!,'$:&u&SKT$", "sqlResultsTabPlacement", (-6), (-2783), "ybiw8<A*sE+$@)TtPG");
      tableColumnInfoArray0[2] = tableColumnInfo1;
      tableColumnInfoArray0[3] = tableColumnInfo0;
      tableColumnInfoArray0[4] = tableColumnInfo0;
      DBUtil.getColumnList(tableColumnInfoArray0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      ISession iSession0 = dBCopyPlugin0.getSourceSession();
      assertNull(iSession0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql");
      FileSystemHandling.createFolder(evoSuiteFile0);
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.setDestSession((ISession) null);
      dBCopyPlugin0.getPluginJarFilePath();
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      dBCopyPlugin0.setApplicationFiles(applicationFileWrappersImpl1);
      dBCopyPlugin0.getWebSite();
      boolean boolean0 = DBUtil.typesAreEquivalent((-4117), (-243));
      assertFalse(boolean0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DBUtil.typesAreEquivalent((-3), 9);
      JInternalFrame jInternalFrame0 = new JInternalFrame(" set to ", false, true, false);
      InputMethodListener inputMethodListener0 = mock(InputMethodListener.class, new ViolatedAssumptionAnswer());
      InputMethodListener inputMethodListener1 = AWTEventMulticaster.add(inputMethodListener0, inputMethodListener0);
      AWTEventMulticaster.remove(inputMethodListener1, inputMethodListener1);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      InputMethodListener inputMethodListener2 = AWTEventMulticaster.add((InputMethodListener) null, inputMethodListener1);
      AWTEventMulticaster.add((InputMethodListener) null, inputMethodListener2);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      jInternalFrame0.removeInputMethodListener(inputMethodListener2);
      MetalTreeUI metalTreeUI0 = new MetalTreeUI();
      metalTreeUI0.getAccessibleChild(jInternalFrame0, 9);
      Icon icon0 = metalTreeUI0.getCollapsedIcon();
      assertNull(icon0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[7];
      tableColumnInfoArray0[0] = null;
      tableColumnInfoArray0[1] = null;
      tableColumnInfoArray0[2] = null;
      tableColumnInfoArray0[3] = tableColumnInfoArray0[2];
      tableColumnInfoArray0[4] = null;
      tableColumnInfoArray0[5] = null;
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("TimeSeriesDataset.addSeries(): cannot add null array of values.", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "", "systimestamp", 14, "1iPW}(w@j", 2672, 14, 14, (-26), "systimestamp", "5h:(,{LDxf", (-4), 14, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "1iPW}(w@j");
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      dBCopyPlugin1.setDestSession((ISession) null);
      dBCopyPlugin1.getSourceSession();
      DBUtil.replaceDistinctDataType(2053, tableColumnInfoArray0[2], (ISession) null);
      // Undeclared exception!
      try { 
        DBUtil.getSchemaNameFromDbObject(tableColumnInfoArray0[4]);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.5981863871455346
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("", "org.jfree.data.xy.XInteralDataIem", ">l.3WUUX>:1\u0004", ">l.3WUUX>:1\u0004", (-3742), "+D4,dCa<}>", 1464, (-1073741822), 1464, (-257), "6JKMfLlt*o=VA+Gt", "6JKMfLlt*o=VA+Gt", (-1279), (-3742), "+D4,dCa<}>");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SEQUENCE_TYPE_DBO;
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.createNewDatabaseObjectType("6JKMfLlt*o=VA+Gt");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.PROC_TYPE_DBO;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      DatabaseObjectType databaseObjectType3 = DatabaseObjectType.createNewDatabaseObjectType("+D4,dCa<}>");
      DatabaseObjectType.createNewDatabaseObjectType("&KWN+1Qv6 jom");
      DatabaseObjectType databaseObjectType4 = DatabaseObjectType.TABLE_TYPE_DBO;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType3);
      DBUtil.isBinaryType(tableColumnInfo0);
      DBUtil.getSchemaNameFromDbObject(tableColumnInfo0);
      LinkedList<IDatabaseObjectInfo> linkedList0 = new LinkedList<IDatabaseObjectInfo>();
      List<ITableInfo> list0 = DBUtil.convertObjectToTableList(linkedList0);
      DBUtil.convertTableToObjectList(list0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier((-3742));
      // Undeclared exception!
      try { 
        integerIdentifier0.setString("+D4,dCa<}>");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"+D4,dCa<}>\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.getInsertSQL(dBCopyPlugin0, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (ITableInfo) null, 347);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      DBUtil.fixCase((ISession) null, (String) null);
      String string0 = "9/46\"i^:C2nEKnc%v%D";
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.dropTable((String) null, (String) null, "e_Dop\"}U6J&f", (ISession) null, false, 10);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      dBCopyPlugin0.getSourceSession();
      ArrayList<IDatabaseObjectInfo> arrayList0 = new ArrayList<IDatabaseObjectInfo>();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("6wwnQLd=j.T>,", ",,H(`P", "Rl6QF", (String) null, 354, ",,H(`P", 1584, (-950), 354, (-104), "left", ". ?K-Sv)?nBwUP/CMh", 449, (-844), ",,H(`P");
      arrayList0.add((IDatabaseObjectInfo) tableColumnInfo0);
      // Undeclared exception!
      try { 
        DBUtil.convertObjectToTableList(arrayList0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // net.sourceforge.squirrel_sql.fw.sql.TableColumnInfo cannot be cast to net.sourceforge.squirrel_sql.fw.sql.ITableInfo
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      MetalTreeUI metalTreeUI0 = new MetalTreeUI();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "yFhAk0)3U;Mm3&ac");
      // Undeclared exception!
      try { 
        DBUtil.getTableCount((ISession) null, "Farout value must be greater thn the outlier value, which i currently set at: (", "!", "lcx+l4MRdU?\"Iq]", 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "0o QU5-L");
      FileSystemHandling.createFolder(evoSuiteFile0);
      dBCopyPlugin0.getSourceSession();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, (String) null, "j+>T~C");
      // Undeclared exception!
      try { 
        DBUtil.tableHasPrimaryKey((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "axion", "axion");
      // Undeclared exception!
      try { 
        DBUtil.getColumnNames((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/102_squirrel-sql");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "SELECT CURRENT_VALUE, 'NONE', 'NONE', CACHE, INCREMENT, 0 FROM INFORMATION_SCHEMA.SEQUENCES WHERE SEQUENCE_SCHEMA = '$schemaName$' AND SEQUENCE_NAME = '$sequenceName$' AND SEQUENCE_CATALOG = '$catalogName$'");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      FileWrapperImpl fileWrapperImpl0 = (FileWrapperImpl)applicationFileWrappersImpl0.getUpdateDirectory();
      applicationFileWrappersImpl0.getDatabaseAliasesFile();
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      FileWrapperImpl fileWrapperImpl1 = new FileWrapperImpl(fileWrapperImpl0);
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin0.setCopyMenuEnabled(false);
      DBCopyPlugin dBCopyPlugin2 = new DBCopyPlugin();
      dBCopyPlugin2.getPasteToTableInfo((ISQLConnection) null, "NO", " schema = ");
      // Undeclared exception!
      try { 
        DBUtil.getSelectQuery(dBCopyPlugin0, "G}tW3!\"WH+Ux", (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getWebSite();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl0.getLibraryDirectory();
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      dBCopyPlugin0.setApplicationFiles(applicationFileWrappersImpl1);
      dBCopyPlugin0.unload();
      dBCopyPlugin0.getDestSession();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("http://www.squirrelsql.org", "http://www.squirrelsql.org", "(-9;tWx)X2>", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (-3306), (String) null, (-3306), (-3306), 16, 1, "wep/iq ;[jf{M$5T6", "Axion", 208, 16, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      // Undeclared exception!
      try { 
        DBUtil.getMaxColumnLengthSQL((ISession) null, tableColumnInfo0, "sign", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "0o QU5-L");
      FileSystemHandling.createFolder(evoSuiteFile0);
      dBCopyPlugin0.getSourceSession();
      dBCopyPlugin0.getSourceSession();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("3hq.80w", "Error creating user settings directory: ", "insert into ", "j2'!w", (-2783), "rPp6^-pQfh|#M`Y", 315, 290, (-1952), 1961, "rPp6^-pQfh|#M`Y", "NO", (-6), 1066, ")h");
      // Undeclared exception!
      try { 
        DBUtil.getColumnList((TableColumnInfo[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      // Undeclared exception!
      try { 
        DBUtil.getSchemaFromDbObject((IDatabaseObjectInfo) null, schemaInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      SchemaInfo schemaInfo1 = new SchemaInfo((IApplication) null);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "=B{O0QaO>s", ") outside valid range.", "6!D#xe/nz", 23001, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 2718, 23001, (-4381), 92, "bpv=Qu\"jU5sIu+r", "=B{O0QaO>s", 2173, 23001, "6!D#xe/nz");
      dBCopyPlugin0.getDestSession();
      int int0 = DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      assertEquals(23001, int0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      String string0 = DBUtil.getLastStatementValues();
      assertNull(string0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("", "", "", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 3569, "9/46\"i^:C2nEKnc%v%D", 3569, 3569, 3569, 3569, "9/46\"i^:C2nEKnc%v%D", "", 22, 22, "");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SEQUENCE_TYPE_DBO;
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.createNewDatabaseObjectType("8o*&j%JD*I~,s}}bT`");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      TableColumnInfo tableColumnInfo1 = new TableColumnInfo((String) null, "O01to#/a^sX$_.S{c", "8o*&j%JD*I~,s}}bT`", "", 8, "", (-2042), 1231, (-2042), (-2042), (String) null, "to_char(", 91, 92, "DatabaseObjectType.catalog");
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.SEQUENCE_TYPE_DBO;
      DatabaseObjectType.createNewDatabaseObjectType("dEJI.',!UK\"O");
      tableColumnInfo1.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      ImageIcon imageIcon0 = new ImageIcon("O01to#/a^sX$_.S{c");
      DatabaseObjectType.createNewDatabaseObjectType("", (Icon) imageIcon0);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[0];
      DBUtil.getColumnList(tableColumnInfoArray0);
      JInternalFrame jInternalFrame0 = new JInternalFrame("", false, false, false);
      InputMethodListener inputMethodListener0 = mock(InputMethodListener.class, new ViolatedAssumptionAnswer());
      InputMethodListener inputMethodListener1 = AWTEventMulticaster.add(inputMethodListener0, inputMethodListener0);
      AWTEventMulticaster.remove(inputMethodListener1, inputMethodListener1);
      AWTEventMulticaster.remove((InputMethodListener) null, inputMethodListener1);
      InputMethodListener inputMethodListener2 = AWTEventMulticaster.add(inputMethodListener1, (InputMethodListener) null);
      AWTEventMulticaster.add(inputMethodListener2, inputMethodListener1);
      AWTEventMulticaster.remove(inputMethodListener1, (InputMethodListener) null);
      jInternalFrame0.removeInputMethodListener(inputMethodListener1);
      MetalTreeUI metalTreeUI0 = new MetalTreeUI();
      metalTreeUI0.getAccessibleChild(jInternalFrame0, 3665);
      Icon icon0 = metalTreeUI0.getCollapsedIcon();
      assertNull(icon0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("`fQ/Z]eA#{W>Z0Y'x", "J2 +gi1w#R=!", ")9!,'$:&u&uSKT$", "J2 +gi1w#R=!", 1372, "`fQ/Z]eA#{W>Z0Y'x", 3847, 3847, (-17), 1996, ")9!,'$:&u&uSKT$", (String) null, (-6), (-1729), "GUEU:Koj");
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[5];
      tableColumnInfoArray0[0] = tableColumnInfo0;
      tableColumnInfoArray0[1] = tableColumnInfo0;
      TableColumnInfo tableColumnInfo1 = new TableColumnInfo(" O}2;)6;c!?B P", " O}2;)6;c!?B P", "DBUtil.info.bindclobfile", "null Window or Recta8gle passed", (-1729), "`fQ/Z]eA#{W>Z0Y'x", (-4262), 3847, 1996, (-17), ")9!,'$:&u&uSKT$", "GUEU:Koj", (-6), (-2783), "ybiw8<A*sE+$@)TtPG");
      tableColumnInfoArray0[2] = tableColumnInfo1;
      tableColumnInfoArray0[3] = tableColumnInfo0;
      tableColumnInfoArray0[4] = tableColumnInfo0;
      String string0 = DBUtil.getColumnList(tableColumnInfoArray0);
      assertEquals("J2 +gi1w#R=!, J2 +gi1w#R=!, null Window or Recta8gle passed, J2 +gi1w#R=!, J2 +gi1w#R=!", string0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.4841652152843623
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      DBCopyPreferenceBean dBCopyPreferenceBean0 = new DBCopyPreferenceBean();
      dBCopyPreferenceBean0.setPruneDuplicateIndexDefs(false);
      dBCopyPreferenceBean0.setAutoCommitEnabled(false);
      dBCopyPreferenceBean0.setRecordDelayMillis(0L);
      dBCopyPreferenceBean0.setCommitCount(7);
      DBUtil.setPreferences(dBCopyPreferenceBean0);
      String string0 = "";
      String string1 = "";
      String string2 = "9/46\"i^:C2nEKnc%v%D";
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("", "9/46\"i^:C2nEKnc%v%D", ">'&3Pw>`MBL;3k9", "", 725, "6", 725, 0, (-1031), 1578, "M+", "6", 19, 0, "");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.getColumnSql(dBCopyPlugin0, tableColumnInfo0, "6", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      MetalTreeUI metalTreeUI0 = new MetalTreeUI();
      MetalTreeUI metalTreeUI1 = new MetalTreeUI();
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      Icon icon0 = defaultTreeCellRenderer0.getDefaultOpenIcon();
      MetalTreeUI metalTreeUI2 = new MetalTreeUI();
      defaultTreeCellRenderer0.getPreferredSize();
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource0 = new DefaultListCellRenderer.UIResource();
      metalTreeUI2.setExpandedIcon(icon0);
      metalTreeUI0.getCollapsedIcon();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.deleteDataInExistingTable((ISession) null, " )", "{UzoE.t.r7P", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      MetalTreeUI metalTreeUI0 = new MetalTreeUI();
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      Icon icon0 = defaultTreeCellRenderer0.getDefaultOpenIcon();
      defaultTreeCellRenderer0.getBackgroundSelectionColor();
      MetalTreeUI metalTreeUI1 = new MetalTreeUI();
      defaultTreeCellRenderer0.getColorModel();
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource0 = new DefaultListCellRenderer.UIResource();
      metalTreeUI1.setExpandedIcon(icon0);
      metalTreeUI1.getCollapsedIcon();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.executeQuery((ISession) null, "Do#a@");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl0.getUpdateDirectory();
      applicationFileWrappersImpl0.getDatabaseAliasesFile();
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl1.getFwJarFile();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin2 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin3 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.convertTableToObjectList((List<ITableInfo>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "0o QU5-L");
      FileSystemHandling.createFolder(evoSuiteFile0);
      dBCopyPlugin0.getSourceSession();
      dBCopyPlugin0.getSourceSession();
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "XUZKwGJ=DA");
      FileSystemHandling.appendDataToFile(evoSuiteFile0, (byte[]) null);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo(")E!bGi6N03t0f2^", (String) null, "XUZKwGJ=DA", "0o QU5-L", 1, "3D|9* -cs", 2441, (-357), (-821), 1, "XUZKwGJ=DA", ")E!bGi6N03t0f2^", 1066, (-163), "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      DBUtil.replaceDistinctDataType(1278, tableColumnInfo0, (ISession) null);
      DBUtil.replaceDistinctDataType((-2915), tableColumnInfo0, (ISession) null);
      System.setCurrentTimeMillis((-163));
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("1", "1", "1", "1", (-977), "1", (-977), (-977), 693, (-977), " and catalog ", " and catalog ", 693, (-977), "N{72h");
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[7];
      tableColumnInfoArray0[0] = null;
      tableColumnInfoArray0[1] = null;
      tableColumnInfoArray0[2] = null;
      tableColumnInfoArray0[3] = tableColumnInfoArray0[2];
      tableColumnInfoArray0[4] = null;
      tableColumnInfoArray0[5] = null;
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("", " ", "", "NO", (-1275), " CASCADE", 2087, 2087, 2201, (-1275), "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "systimestamp", (-711), 10, "systimestamp");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SEQUENCE_TYPE_DBO;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin2 = new DBCopyPlugin();
      dBCopyPlugin2.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.replaceOtherDataType(tableColumnInfoArray0[3], (ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      DBCopyPreferenceBean dBCopyPreferenceBean0 = new DBCopyPreferenceBean();
      DBCopyPreferenceBean dBCopyPreferenceBean1 = new DBCopyPreferenceBean();
      dBCopyPreferenceBean1.setCopyForeignKeys(true);
      dBCopyPreferenceBean1.setPruneDuplicateIndexDefs(true);
      dBCopyPreferenceBean0.setRecordDelayMillis(2135L);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("RELATIVE_FREQUENCY", "RELATIVE_FREQUENCY", "9/46\"i^:C2nEKnc%v%D", "RELATIVE_FREQUENCY", 0, "DBUtil.info.bindblobmem", 0, 2001, 0, 4049, "DBUtil.info.bindblobmem", "!", 166, 166, "DBUtil.info.bindblobmem");
      int int0 = DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("", (String) null, "3t3wv@s.ud~&WX", (String) null, (-1176), "8`[buh:r6~QNG51PSRK", (-1582), (-1176), (-1477), 0, "8`[buh:r6~QNG51PSRK", "3t3wv@s.ud~&WX", 0, 0, " to 128.");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      int int0 = DBUtil.replaceDistinctDataType(0, tableColumnInfo0, (ISession) null);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, "", "|nNJ", "", 0, "9/46\"i^:C2nEKnc%v%D", 34, 17, 0, 2001, (String) null, "R@Vhj3 AC7L", 1, 3569, (String) null);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SEQUENCE_TYPE_DBO;
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.createNewDatabaseObjectType("|nNJ");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      JInternalFrame jInternalFrame0 = new JInternalFrame("Do#a@", false, true, false);
      jInternalFrame0.getDefaultCloseOperation();
      JMenuBar jMenuBar0 = new JMenuBar();
      MetalTreeUI metalTreeUI0 = new MetalTreeUI();
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer0.setAutoscrolls(true);
      Icon icon0 = defaultTreeCellRenderer0.getDefaultOpenIcon();
      metalTreeUI0.setExpandedIcon(icon0);
      ImageIcon imageIcon0 = new ImageIcon("Do#a@", "Do#a@");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.getTables((ISession) null, "&;[", ") has a particular foreign ", "{lg\"W3(h/]_P)P");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      DBUtil.setLastStatement("@XFuz>2p1n");
      DBUtil.setLastStatementValues("@XFuz>2p1n");
      // Undeclared exception!
      try { 
        DBUtil.isKeyword((ISession) null, "org.jfree.data.general.SubSeriesDataset");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.unload();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl0.getFwJarFile();
      FileSystemHandling.shouldAllThrowIOExceptions();
      dBCopyPlugin0.getWebSite();
      dBCopyPlugin0.setCopyMenuEnabled(false);
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl0.getFAQFile();
      applicationFileWrappersImpl1.getFwJarFile();
      applicationFileWrappersImpl1.getDatabaseAliasesFile();
      ApplicationFileWrappersImpl applicationFileWrappersImpl2 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl2.getJDBCDebugLogFile();
      applicationFileWrappersImpl1.getLibraryDirectory();
      ApplicationFileWrappersImpl applicationFileWrappersImpl3 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl2.getDTPropertiesFile();
      applicationFileWrappersImpl1.getUpdateDirectory();
      applicationFileWrappersImpl3.getFwJarFile();
      dBCopyPlugin0.setApplicationFiles(applicationFileWrappersImpl2);
      dBCopyPlugin0.unload();
      ForeignKeyInfo foreignKeyInfo0 = mock(ForeignKeyInfo.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        DBUtil.tableHasForeignKey("VI(;&3^i", "7=X8", "7V1u-$?,kO?Qb@1X/)", foreignKeyInfo0, dBCopyPlugin0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "{Gt:sd*`~w");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.getCatSep((ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      MetalTreeUI metalTreeUI0 = new MetalTreeUI();
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      Icon icon0 = defaultTreeCellRenderer0.getDefaultOpenIcon();
      MetalTreeUI metalTreeUI1 = new MetalTreeUI();
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource0 = new DefaultListCellRenderer.UIResource();
      metalTreeUI1.setExpandedIcon(icon0);
      metalTreeUI1.getCollapsedIcon();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.sanityCheckPreferences((ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.checkKeyword((ISession) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      int int0 = 0;
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      String string0 = "";
      // Undeclared exception!
      try { 
        DBUtil.getQualifiedObjectName((ISession) null, (String) null, "", "getCatSep: Unexpected Exception - ", 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.getTableCount((ISession) null, " default values", " default values", " from ", (-3501));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.fixCase((ISession) null, "!");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      MetalTreeUI metalTreeUI0 = new MetalTreeUI();
      String string0 = "\n";
      // Undeclared exception!
      try { 
        DBUtil.executeUpdate((ISQLConnection) null, "\n", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      DBUtil dBUtil0 = new DBUtil();
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      assertEquals(0, sQLDriverPropertyCollection0.size());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      DBUtil.setLastStatement("@XFuz>2p1n");
      DBUtil.setLastStatementValues("@XFuz>2p1n");
      // Undeclared exception!
      try { 
        DBUtil.isKeyword((ISession) null, "?}hQx8 :]S~0b3+Y5dt");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }
}
