/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 29 19:48:33 GMT 2020
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JavaCharStream_ESTest extends JavaCharStream_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 57, 94, 57);
      int[] intArray0 = new int[7];
      intArray0[0] = 1;
      intArray0[1] = (-1);
      intArray0[2] = (-1);
      intArray0[3] = 57;
      intArray0[4] = 94;
      intArray0[5] = 94;
      intArray0[6] = 94;
      javaCharStream0.bufline = intArray0;
      javaCharStream0.bufpos = 57;
      // Undeclared exception!
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.1738965505262752
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      javaCharStream0.bufpos = 0;
      javaCharStream0.available = 0;
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      StringReader stringReader0 = new StringReader("aAR'x!_ #I!d@FRa@dc{");
      stringReader0.reset();
      stringReader0.mark(84);
      StringReader stringReader1 = new StringReader("ka@_ZpHj|,89F%*I");
      stringReader1.reset();
      try { 
        JavaCharStream.hexval(':');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      StringReader stringReader0 = new StringReader("b7/Sur/D.$y@jQ8mdk");
      FileSystemHandling.shouldAllThrowIOExceptions();
      char[] charArray0 = new char[1];
      char char0 = 'u';
      charArray0[0] = 'u';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 7, 69, 7);
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      javaCharStream0.GetImage();
      javaCharStream0.ReadByte();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      pipedInputStream0.close();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      PipedInputStream pipedInputStream1 = null;
      try {
        pipedInputStream1 = new PipedInputStream(pipedOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("");
      StringReader stringReader2 = new StringReader("");
      try { 
        JavaCharStream.hexval('W');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.157485523082231
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      javaCharStream0.bufpos = 0;
      javaCharStream0.available = (-2);
      javaCharStream0.AdjustBuffSize();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-15);
      byteArray0[1] = (byte) (-15);
      byteArray0[2] = (byte) (-15);
      byteArray0[3] = (byte) (-15);
      byteArray0[4] = (byte) (-15);
      byteArray0[5] = (byte) (-15);
      javaCharStream0.bufpos = (int) (byte)89;
      byteArray0[7] = (byte) (-15);
      byteArray0[8] = (byte) (-15);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, 69, 6144, (-58));
      JavaCharStream javaCharStream2 = new JavaCharStream(byteArrayInputStream0, 69, (-4020));
      byteArrayInputStream0.reset();
      javaCharStream2.BeginToken();
      javaCharStream2.available = (int) (byte) (-15);
      JavaCharStream javaCharStream3 = new JavaCharStream(byteArrayInputStream0, (byte) (-15), (-1));
      javaCharStream3.adjustBeginLineColumn(0, 0);
      javaCharStream3.adjustBeginLineColumn(69, (-1));
      javaCharStream3.AdjustBuffSize();
      javaCharStream0.AdjustBuffSize();
      javaCharStream3.ExpandBuff(false);
      javaCharStream2.getLine();
      // Undeclared exception!
      try { 
        javaCharStream3.UpdateLineColumn('\uFFFD');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      StringReader stringReader0 = new StringReader("uX9SQ)W6");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader1 = new StringReader("");
      stringReader1.reset();
      try { 
        JavaCharStream.hexval('X');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.9633815843099562
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte) (-7);
      byteArray0[3] = (byte)53;
      byteArray0[4] = (byte)3;
      byteArray0[5] = (byte)92;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("nXyDx.]#%Ua4^Th6");
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 2109, (-2159));
      byteArrayInputStream0.reset();
      javaCharStream0.BeginToken();
      javaCharStream0.readChar();
      StringReader stringReader1 = new StringReader("nXyDx.]#%Ua4^Th6");
      StringReader stringReader2 = new StringReader("nXyDx.]#%Ua4^Th6");
      javaCharStream0.BeginToken();
      javaCharStream0.getColumn();
      int int0 = javaCharStream0.getEndColumn();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals((-2157), int0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.4988398256648112
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      javaCharStream0.bufpos = 0;
      javaCharStream0.available = 0;
      javaCharStream0.AdjustBuffSize();
      assertEquals(4096, javaCharStream0.bufpos);
      
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-15);
      byteArray0[1] = (byte) (-15);
      byteArray0[2] = (byte) (-15);
      byteArray0[3] = (byte) (-15);
      byteArray0[4] = (byte) (-15);
      byteArray0[5] = (byte) (-15);
      javaCharStream0.bufpos = (int) (byte)89;
      byteArray0[7] = (byte) (-15);
      byteArray0[8] = (byte) (-15);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, 69, 6144, (-58));
      JavaCharStream javaCharStream2 = new JavaCharStream(byteArrayInputStream0, 69, (-4020));
      byteArrayInputStream0.reset();
      byteArray0[1] = (byte) (-15);
      JavaCharStream javaCharStream3 = new JavaCharStream(byteArrayInputStream0, (byte) (-15), (-1));
      javaCharStream3.adjustBeginLineColumn(0, (-1));
      javaCharStream3.adjustBeginLineColumn(69, (-1));
      javaCharStream3.AdjustBuffSize();
      javaCharStream0.AdjustBuffSize();
      javaCharStream3.ExpandBuff(false);
      assertEquals((-1), javaCharStream3.getBeginColumn());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.39274289626694653
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.skip(0L);
      sequenceInputStream0.read();
      sequenceInputStream0.read();
      Enumeration<MockFileInputStream> enumeration1 = (Enumeration<MockFileInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration1).hasMoreElements();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(enumeration1);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)13;
      PipedInputStream pipedInputStream0 = new PipedInputStream(101);
      StringReader stringReader0 = new StringReader("=)l ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 92, (byte)13);
      javaCharStream0.AdjustBuffSize();
      try { 
        JavaCharStream.hexval('N');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.6035681031705153
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.available();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)96;
      byteArray0[1] = (byte)76;
      byteArray0[2] = (byte) (-26);
      byteArray0[3] = (byte) (-50);
      byteArray0[4] = (byte)0;
      sequenceInputStream0.read(byteArray0);
      sequenceInputStream0.read();
      sequenceInputStream0.read();
      Enumeration<MockFileInputStream> enumeration1 = (Enumeration<MockFileInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration1).hasMoreElements();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(enumeration1);
      byte[] byteArray1 = new byte[9];
      byteArray1[0] = (byte)13;
      byteArray1[1] = (byte)13;
      byteArray1[2] = (byte)13;
      byteArray1[3] = (byte) (-15);
      byteArray1[4] = (byte)13;
      byteArray1[5] = (byte)13;
      byteArray1[6] = (byte)13;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray1);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)13, 0, 100);
      javaCharStream0.BeginToken();
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.4988398256648112
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      javaCharStream0.bufpos = 0;
      javaCharStream0.available = (-2);
      javaCharStream0.AdjustBuffSize();
      assertEquals(4096, javaCharStream0.bufpos);
      
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-15);
      byteArray0[1] = (byte) (-15);
      byteArray0[2] = (byte) (-15);
      byteArray0[3] = (byte) (-15);
      byteArray0[4] = (byte) (-15);
      byteArray0[5] = (byte) (-15);
      javaCharStream0.bufpos = (int) (byte)89;
      byteArray0[7] = (byte) (-15);
      byteArray0[8] = (byte) (-15);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, 69, 6144, (-58));
      JavaCharStream javaCharStream2 = new JavaCharStream(byteArrayInputStream0, 69, (-4020));
      byteArrayInputStream0.reset();
      javaCharStream2.available = (int) (byte) (-15);
      JavaCharStream javaCharStream3 = new JavaCharStream(byteArrayInputStream0, (byte) (-15), (-1));
      javaCharStream3.adjustBeginLineColumn(0, (-1));
      javaCharStream3.adjustBeginLineColumn(69, (-1));
      javaCharStream3.AdjustBuffSize();
      javaCharStream0.AdjustBuffSize();
      javaCharStream3.ExpandBuff(false);
      assertEquals((-1), javaCharStream3.getBeginColumn());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.6922814607175367
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      javaCharStream0.bufpos = 0;
      javaCharStream0.available = (-2);
      javaCharStream0.AdjustBuffSize();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-15);
      byteArray0[1] = (byte) (-15);
      byteArray0[2] = (byte) (-15);
      byteArray0[3] = (byte) (-15);
      byteArray0[4] = (byte) (-15);
      byteArray0[5] = (byte) (-15);
      javaCharStream0.bufpos = (int) (byte)89;
      byteArray0[7] = (byte) (-15);
      byteArray0[8] = (byte) (-15);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, 69, 6144, (-58));
      JavaCharStream javaCharStream2 = new JavaCharStream(byteArrayInputStream0, 69, (-4020));
      byteArrayInputStream0.reset();
      JavaCharStream javaCharStream3 = new JavaCharStream(byteArrayInputStream0, 72, (-2321));
      JavaCharStream javaCharStream4 = new JavaCharStream((Reader) null);
      javaCharStream4.adjustBeginLineColumn((-767), 5);
      javaCharStream3.AdjustBuffSize();
      int int0 = javaCharStream0.getBeginColumn();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.106411735972191
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)89;
      byteArray0[1] = (byte)89;
      byteArray0[2] = (byte)6;
      byteArray0[3] = (byte)89;
      byteArray0[4] = (byte) (-14);
      byteArray0[5] = (byte)89;
      byteArray0[6] = (byte)89;
      byteArray0[7] = (byte)89;
      byteArray0[8] = (byte)89;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 4, (byte) (-14));
      byteArrayInputStream0.reset();
      javaCharStream0.BeginToken();
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, (-4643), 1);
      javaCharStream1.adjustBeginLineColumn((byte)89, (byte)89);
      javaCharStream1.AdjustBuffSize();
      javaCharStream1.getBeginColumn();
      try { 
        javaCharStream1.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.1786549963416462
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byteArray0[0] = (byte)63;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader0 = new StringReader("[]a^PB6jj*9-,@");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)63, (-555), (byte)63);
      javaCharStream0.adjustBeginLineColumn((byte)63, (-193));
      javaCharStream0.AdjustBuffSize();
      int int0 = javaCharStream0.getBeginColumn();
      assertEquals(64, javaCharStream0.getBeginLine());
      assertEquals((-193), int0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.skip(0L);
      sequenceInputStream0.read();
      sequenceInputStream0.read();
      Enumeration<MockFileInputStream> enumeration1 = (Enumeration<MockFileInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration1).hasMoreElements();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(enumeration1);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)13;
      PipedInputStream pipedInputStream0 = new PipedInputStream(101);
      StringReader stringReader0 = new StringReader("=)l ");
      stringReader0.reset();
      try { 
        JavaCharStream.hexval('V');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.08831978220001763
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      JavaCharStream.hexval('D');
      int int0 = 2;
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null, 2, 0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.5068833488641131
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byteArray0[0] = (byte)63;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)63, (byte)63);
      byteArrayInputStream0.read(byteArray0);
      byteArrayInputStream0.skip(0L);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 77, 77, 82);
      javaCharStream0.inBuf = 77;
      javaCharStream0.BeginToken();
      assertEquals(0, javaCharStream0.bufpos);
      
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, 0, (byte)63);
      javaCharStream1.adjustBeginLineColumn(76, 0);
      javaCharStream1.adjustBeginLineColumn(1, 82);
      javaCharStream1.AdjustBuffSize();
      StringReader stringReader0 = new StringReader("0h");
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0, (-1925), 77, 82);
      javaCharStream2.AdjustBuffSize();
      assertEquals((-1), javaCharStream2.bufpos);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      String string0 = "";
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      int int0 = 1678;
      stringReader0.read();
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((InputStream) null, 1678, 1678, 77);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.8931766712395741
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Le6RnOuC.QoE&?GE");
      stringReader0.ready();
      int int0 = (-1647);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-974), (-1647), 264);
      StringReader stringReader1 = new StringReader("");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader2 = new StringReader("cK*");
      stringReader2.reset();
      JavaCharStream.hexval('C');
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      try { 
        JavaCharStream.hexval(']');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      StringReader stringReader0 = new StringReader("sm.:b99nY^CFs");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader1 = new StringReader("urK9<paGQUMlZX");
      stringReader0.reset();
      try { 
        JavaCharStream.hexval('>');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      StringReader stringReader0 = new StringReader("u");
      stringReader0.reset();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      pipedInputStream0.skip((-4013));
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
      pipedInputStream0.close();
      bufferedInputStream0.available();
      try { 
        JavaCharStream.hexval('`');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)89;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)80;
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte) (-1);
      byteArray0[5] = (byte) (-63);
      Enumeration<MockFileInputStream> enumeration1 = (Enumeration<MockFileInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      sequenceInputStream0.skip((byte)89);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, 74, 88, (-342));
      javaCharStream0.tokenBegin = (-342);
      // Undeclared exception!
      try { 
        javaCharStream0.GetImage();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      int int0 = JavaCharStream.hexval('B');
      assertEquals(11, int0);
      
      StringReader stringReader0 = new StringReader("");
      stringReader0.reset();
      int int1 = JavaCharStream.hexval('a');
      assertEquals(10, int1);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.read();
      JavaCharStream.hexval('2');
      try { 
        JavaCharStream.hexval('Z');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      StringReader stringReader0 = new StringReader("|Cv)w0-LDH$5K");
      StringReader stringReader1 = new StringReader("Invalid escape character at line ");
      stringReader1.reset();
      StringReader stringReader2 = new StringReader("Invalid escape character at line ");
      stringReader2.reset();
      try { 
        JavaCharStream.hexval('[');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      StringReader stringReader0 = new StringReader("urK9<paGQUMlZX");
      stringReader0.mark(1428);
      StringReader stringReader1 = new StringReader(".");
      stringReader1.reset();
      try { 
        JavaCharStream.hexval('?');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "xLE[J");
      pipedInputStream0.close();
      try { 
        JavaCharStream.hexval('\\');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.skip(0L);
      sequenceInputStream0.read();
      sequenceInputStream0.read();
      Enumeration<InputStream> enumeration1 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration1).hasMoreElements();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(enumeration1);
      try { 
        JavaCharStream.hexval('S');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      try { 
        JavaCharStream.hexval('Y');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StringReader stringReader0 = new StringReader("ak\"");
      stringReader0.ready();
      stringReader0.ready();
      char char0 = '=';
      try { 
        JavaCharStream.hexval('=');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ".");
      sequenceInputStream0.read(byteArray0);
      sequenceInputStream0.read();
      StringReader stringReader0 = new StringReader("urK9<paGQUMlZX");
      stringReader0.reset();
      int int0 = JavaCharStream.hexval('7');
      assertEquals(7, int0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      try { 
        JavaCharStream.hexval('_');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.822456686505235
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      StringReader stringReader0 = new StringReader("urK9<paGQUMlZX");
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 69, (-58), (-1214));
      StringReader stringReader1 = new StringReader("nyrsY,7%<Eo5dZkZ{");
      javaCharStream0.BeginToken();
      javaCharStream0.getColumn();
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, 0, (-1), 4092);
      // Undeclared exception!
      try { 
        javaCharStream1.getEndColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.read();
      sequenceInputStream0.read();
      Enumeration<MockFileInputStream> enumeration1 = (Enumeration<MockFileInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration1).hasMoreElements();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(enumeration1);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)13;
      byteArray0[1] = (byte)13;
      byteArray0[2] = (byte)13;
      byteArray0[3] = (byte) (-15);
      int int0 = JavaCharStream.hexval('5');
      assertEquals(5, int0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Le6RnOuC.QoE&?GE");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 0);
      StringReader stringReader1 = new StringReader("");
      byte byte0 = (byte)12;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)12;
      javaCharStream0.backup(0);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.skip((-1044L));
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0, 1143, 0, (-480));
      // Undeclared exception!
      try { 
        javaCharStream0.getColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      pipedInputStream0.skip((-5977L));
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
      pipedInputStream0.close();
      bufferedInputStream0.available();
      int int0 = JavaCharStream.hexval('4');
      assertEquals(4, int0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      StringReader stringReader0 = new StringReader("{h -Kw/F0)12]vf");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader1 = new StringReader("urK9<paGQUMlZX");
      stringReader1.reset();
      try { 
        JavaCharStream.hexval('O');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byteArray0[0] = (byte)63;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)63, (byte)63);
      byteArrayInputStream0.read(byteArray0);
      byteArrayInputStream0.skip(0L);
      try { 
        JavaCharStream.hexval('U');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      JavaCharStream.hexval('8');
      int int0 = JavaCharStream.hexval('8');
      assertEquals(8, int0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" column ");
      stringReader0.mark(1673);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, (-1926), 4);
      javaCharStream0.backup((-164));
      // Undeclared exception!
      try { 
        javaCharStream0.GetSuffix(1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.311996272241857
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)89;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 69, 0, 64);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, (byte)89, 1);
      javaCharStream1.ReInit((InputStream) byteArrayInputStream0, 69, 64);
      byteArrayInputStream0.reset();
      javaCharStream1.BeginToken();
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, 64, (-1595));
      JavaCharStream javaCharStream2 = new JavaCharStream(byteArrayInputStream1, 64, (-2932));
      javaCharStream1.Done();
      javaCharStream0.adjustBeginLineColumn((-1595), 101);
      javaCharStream0.adjustBeginLineColumn((-1), 2119);
      // Undeclared exception!
      try { 
        javaCharStream1.AdjustBuffSize();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.6606976414262855
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      JavaCharStream.hexval('e');
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, (byte)0, 14, (-165));
      javaCharStream0.backup(14);
      StringReader stringReader0 = new StringReader("");
      JavaCharStream.hexval('6');
      JavaCharStream.hexval('1');
      javaCharStream0.adjustBeginLineColumn((-165), (byte)0);
      javaCharStream0.adjustBeginLineColumn(58, 1499);
      int int0 = javaCharStream0.getEndLine();
      assertEquals(4081, javaCharStream0.bufpos);
      assertEquals(59, int0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.4500064999181648
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      StringReader stringReader0 = new StringReader("]_2Oq2%>G%UQH(");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)55;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 60);
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0, 10, (byte) (-15));
      javaCharStream0.adjustBeginLineColumn(18, 0);
      javaCharStream0.adjustBeginLineColumn((byte)89, 10);
      javaCharStream0.AdjustBuffSize();
      StringReader stringReader1 = new StringReader("]_2Oq2%>G%UQH(");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 1, (byte)55, 264);
      javaCharStream0.AdjustBuffSize();
      int int0 = javaCharStream0.getBeginLine();
      assertEquals(10, javaCharStream0.getBeginColumn());
      assertEquals(91, int0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      int int0 = JavaCharStream.hexval('E');
      assertEquals(14, int0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.4402347497045995
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Le6RnOuC.QoE&?GE");
      stringReader0.ready();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-974), (-1647), 264);
      javaCharStream0.readChar();
      StringReader stringReader1 = new StringReader("Le6RnOuC.QoE&?GE");
      StringReader stringReader2 = new StringReader("dW}e=kj");
      javaCharStream0.GetSuffix(264);
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.2568646526994761
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      StringReader stringReader0 = new StringReader("_ aa*T|w|=Uq");
      StringReader stringReader1 = new StringReader("dW}e=kj");
      stringReader1.reset();
      stringReader0.reset();
      stringReader1.reset();
      JavaCharStream.hexval('3');
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      // Undeclared exception!
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.7875058172986216
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Le6RnOuC.QoE&?GE");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 8, (-1647), 4096);
      javaCharStream0.readChar();
      StringReader stringReader1 = new StringReader("*95?]rOTOFma-n\"");
      StringReader stringReader2 = new StringReader("Wt@I-9LIUYj+V3jB1Hi");
      stringReader2.reset();
      stringReader0.ready();
      try { 
        JavaCharStream.hexval('L');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.1738965505262752
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.read();
      sequenceInputStream0.read();
      sequenceInputStream0.mark((-1));
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, (-712), 0, 0);
      StringReader stringReader0 = new StringReader("");
      stringReader0.reset();
      try { 
        JavaCharStream.hexval('R');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      try { 
        JavaCharStream.hexval('<');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      try { 
        JavaCharStream.hexval('H');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.8310204811135165
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      javaCharStream0.bufpos = 0;
      javaCharStream0.available = 0;
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)4;
      byteArray0[1] = (byte)4;
      byteArray0[2] = (byte)1;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.getEndLine();
      assertEquals(4096, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.0844297682153505
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      javaCharStream0.bufpos = 0;
      javaCharStream0.bufpos = 0;
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.getColumn();
      javaCharStream0.backup(0);
      javaCharStream0.adjustBeginLineColumn(0, 0);
      javaCharStream0.getColumn();
      javaCharStream0.backup((-1206));
      javaCharStream0.ReInit((Reader) null, (-682), (-1206), 0);
      javaCharStream0.ReInit((Reader) null, 102, 3280);
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      javaCharStream1.ReInit((Reader) null);
      assertNotSame(javaCharStream1, javaCharStream0);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      byte[] byteArray0 = new byte[1];
      sequenceInputStream0.read(byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      sequenceInputStream0.read();
      sequenceInputStream0.read();
      sequenceInputStream0.mark(0);
      try { 
        JavaCharStream.hexval('T');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.skip(0L);
      sequenceInputStream0.read();
      sequenceInputStream0.read();
      Enumeration<MockFileInputStream> enumeration1 = (Enumeration<MockFileInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration1).hasMoreElements();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(enumeration1);
      byte[] byteArray0 = new byte[11];
      byteArray0[0] = (byte)13;
      byteArray0[1] = (byte)13;
      byteArray0[2] = (byte)13;
      byteArray0[3] = (byte) (-15);
      try { 
        JavaCharStream.hexval('M');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(sequenceInputStream0, sequenceInputStream0);
      char char0 = 'c';
      JavaCharStream.hexval('c');
      FileSystemHandling.shouldAllThrowIOExceptions();
      ByteArrayInputStream byteArrayInputStream0 = null;
      try {
        byteArrayInputStream0 = new ByteArrayInputStream((byte[]) null, 117, 12);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.0636975555267987
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-1140), 69, 3);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, 0, (-2224));
      byteArrayInputStream0.reset();
      javaCharStream0.BeginToken();
      JavaCharStream javaCharStream2 = new JavaCharStream(byteArrayInputStream0, (-58), 0);
      javaCharStream0.adjustBeginLineColumn(0, 92);
      javaCharStream1.adjustBeginLineColumn((-58), 0);
      javaCharStream2.inBuf = 84;
      javaCharStream0.AdjustBuffSize();
      javaCharStream1.AdjustBuffSize();
      javaCharStream2.ExpandBuff(false);
      // Undeclared exception!
      try { 
        javaCharStream0.GetSuffix((-1353));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Le6RnOuC.QoE&?GE");
      stringReader0.reset();
      stringReader0.ready();
      stringReader0.ready();
      try { 
        JavaCharStream.hexval(';');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.read();
      sequenceInputStream0.read();
      Enumeration<MockFileInputStream> enumeration1 = (Enumeration<MockFileInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration1).hasMoreElements();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(enumeration1);
      SequenceInputStream sequenceInputStream2 = new SequenceInputStream(sequenceInputStream1, sequenceInputStream1);
      sequenceInputStream2.mark(0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream1, (-1), 1, (byte)13);
      javaCharStream0.GetImage();
      javaCharStream0.GetSuffix(78);
      javaCharStream0.backup(1);
      javaCharStream0.getLine();
      assertEquals(4094, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JavaCharStream.hexval('B');
      PipedInputStream pipedInputStream0 = new PipedInputStream(11);
      StringReader stringReader0 = new StringReader("");
      stringReader0.reset();
      int int0 = JavaCharStream.hexval('b');
      assertEquals(11, int0);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=0.08831978220001763
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Le6RnOuC.QoE&?GE");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 0);
      assertEquals((-1), javaCharStream0.bufpos);
      
      StringReader stringReader1 = new StringReader("");
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
      bufferedInputStream0.available();
      int int0 = JavaCharStream.hexval('F');
      assertEquals(15, int0);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=0.9104956296178259
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.read();
      sequenceInputStream0.read();
      Enumeration<MockFileInputStream> enumeration1 = (Enumeration<MockFileInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration1).hasMoreElements();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(enumeration1);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)13;
      byteArray0[1] = (byte)13;
      byteArray0[2] = (byte)13;
      byteArray0[3] = (byte) (-15);
      byteArray0[4] = (byte)13;
      byteArray0[5] = (byte)13;
      byteArray0[6] = (byte)13;
      byteArray0[7] = (byte)13;
      byteArray0[8] = (byte)13;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)13, 0, 100);
      javaCharStream0.BeginToken();
      assertEquals(0, byteArrayInputStream0.available());
      
      int int0 = JavaCharStream.hexval('f');
      assertEquals(15, int0);
  }

  /**
  //Test case number: 61
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      StringReader stringReader0 = new StringReader("uX9SQ)W6");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      char char0 = 'K';
      try { 
        JavaCharStream.hexval('K');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 64, 1825);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)93;
      byteArray0[1] = (byte) (-17);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)117;
      byteArray0[4] = (byte)32;
      byteArray0[5] = (byte)90;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-17), (byte)93);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      javaCharStream0.ReInit((InputStream) dataInputStream0, (int) (byte)0, (int) (byte)93);
      assertFalse(JavaCharStream.staticFlag);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.6674619334292946
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      javaCharStream0.bufpos = 0;
      javaCharStream0.available = 0;
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.prevCharIsLF = false;
      javaCharStream0.getLine();
      javaCharStream0.getBeginLine();
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=0.5004024235381879
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      String string0 = "";
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 99, 0);
      // Undeclared exception!
      try { 
        javaCharStream0.adjustBeginLineColumn(2862, (-3363));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=0.9502705392332347
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.read();
      sequenceInputStream0.read();
      Enumeration<MockFileInputStream> enumeration1 = (Enumeration<MockFileInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration1).hasMoreElements();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(enumeration1);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)13;
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream1, 1412, (byte)13, (-1239));
      StringReader stringReader0 = new StringReader("Xcwjx$Vet`");
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((Reader) stringReader0, (int) (byte)13, (-1387), (-1239));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.7494938253936618
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.read();
      sequenceInputStream0.read();
      Enumeration<MockFileInputStream> enumeration1 = (Enumeration<MockFileInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration1).hasMoreElements();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(enumeration1);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)13;
      byteArray0[1] = (byte)13;
      byteArray0[2] = (byte)13;
      byteArray0[3] = (byte) (-15);
      byteArray0[4] = (byte)13;
      byteArray0[5] = (byte)13;
      byteArray0[6] = (byte)13;
      byteArray0[7] = (byte)13;
      byteArray0[8] = (byte)13;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.skip((byte) (-15));
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)13, 0, 100);
      javaCharStream0.BeginToken();
      javaCharStream0.ReInit((Reader) null, 0, (int) (byte) (-15), 8);
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      StringReader stringReader0 = new StringReader("uX9SQ)W6");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader1 = new StringReader("urK9<paGQUMlZX");
      stringReader0.reset();
      try { 
        JavaCharStream.hexval('^');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      JavaCharStream.hexval('0');
      try { 
        JavaCharStream.hexval('/');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      byte byte0 = (byte) (-119);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-119);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, (-902), (byte) (-119));
      // Undeclared exception!
      try { 
        javaCharStream0.getEndLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      try { 
        JavaCharStream.hexval('J');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=0.1738965505262752
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      try { 
        JavaCharStream.hexval('I');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.6987829895138011
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Reader reader0 = null;
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      int int0 = 0;
      javaCharStream0.bufpos = 0;
      javaCharStream0.bufpos = 0;
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.getColumn();
      javaCharStream0.backup(0);
      int int1 = 0;
      javaCharStream0.adjustBeginLineColumn(0, 0);
      javaCharStream0.getColumn();
      javaCharStream0.backup((-1206));
      javaCharStream0.adjustBeginLineColumn(0, 762);
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      ObjectInputStream objectInputStream0 = null;
      try {
        objectInputStream0 = new ObjectInputStream(dataInputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.242453324894
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      StringReader stringReader0 = new StringReader("&?F^~Au^O9");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 57, 14, 57);
      StringReader stringReader1 = new StringReader("&?F^~Au^O9");
      javaCharStream0.ReInit((Reader) stringReader1, 14, 57, 90);
      javaCharStream0.ReInit((Reader) stringReader0, (-1512), (-1274));
      javaCharStream0.ReInit((Reader) stringReader0);
      assertEquals(0, javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.5792331346113395
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      Enumeration<MockFileInputStream> enumeration1 = (Enumeration<MockFileInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration1).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration1);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)13;
      Enumeration<InputStream> enumeration2 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration2).hasMoreElements();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(enumeration2);
      sequenceInputStream0.skip(0L);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 1347, 1356, 98);
      char char0 = javaCharStream0.BeginToken();
      assertEquals(1347, javaCharStream0.getBeginLine());
      assertEquals('\r', char0);
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.8343719702816237
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      javaCharStream0.bufpos = 0;
      javaCharStream0.available = 0;
      javaCharStream0.AdjustBuffSize();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-15);
      byteArray0[1] = (byte) (-15);
      byteArray0[2] = (byte) (-15);
      byteArray0[3] = (byte) (-15);
      byteArray0[4] = (byte) (-15);
      byteArray0[5] = (byte) (-15);
      byteArray0[6] = (byte)89;
      byteArray0[7] = (byte) (-15);
      byteArray0[8] = (byte) (-15);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, 69, 6144, (-58));
      JavaCharStream javaCharStream2 = new JavaCharStream(byteArrayInputStream0, 69, (-4020));
      JavaCharStream javaCharStream3 = new JavaCharStream((Reader) null, 4096, (-1617));
      javaCharStream0.ExpandBuff(false);
      assertEquals(4096, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      byte[] byteArray0 = new byte[0];
      sequenceInputStream0.read(byteArray0);
      sequenceInputStream0.read();
      sequenceInputStream0.mark(0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, 0, 4096, 77);
      char[] charArray0 = javaCharStream0.GetSuffix(0);
      assertEquals(0, charArray0.length);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 77
  /*Coverage entropy=0.3250829733914482
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Le6RnOuC.QoE&?GE");
      int int0 = 0;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 0);
      stringReader0.mark(76);
      stringReader0.reset();
      char char0 = '4';
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('4');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.9633815843099565
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Le6RnOuC.QoE&?GE");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 0);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-19);
      byteArray0[1] = (byte) (-75);
      byteArray0[2] = (byte) (-9);
      byteArray0[3] = (byte) (-26);
      byteArray0[4] = (byte) (-1);
      byteArray0[5] = (byte) (-1);
      byteArray0[6] = (byte)14;
      byteArray0[7] = (byte) (-19);
      byteArray0[8] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(sequenceInputStream0, (byte) (-75), (byte)14, (byte) (-26));
      javaCharStream1.ReInit((InputStream) byteArrayInputStream0, (-2197), (-269));
      char char0 = javaCharStream1.BeginToken();
      assertEquals(0, javaCharStream1.bufpos);
      assertEquals('\uFFFD', char0);
  }

  /**
  //Test case number: 79
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      StringReader stringReader0 = new StringReader("&?F^~Au^O9");
      int int0 = 57;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 57, 14, 57);
      StringReader stringReader1 = new StringReader("&?F^~Au^O9");
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((Reader) stringReader1, 57, 828, (-1274));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.0636975555267987
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StringReader stringReader0 = new StringReader("urK9<paGQUMlZX");
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 69, (-58), (-1214));
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, (-58), (-2062));
      byteArrayInputStream0.reset();
      javaCharStream0.BeginToken();
      JavaCharStream javaCharStream2 = new JavaCharStream(byteArrayInputStream0, (-2062), (-4020));
      javaCharStream2.adjustBeginLineColumn(99, (byte)75);
      javaCharStream0.adjustBeginLineColumn((byte)75, 63);
      javaCharStream0.AdjustBuffSize();
      javaCharStream2.GetImage();
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals(100, javaCharStream2.getBeginLine());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.831353549917586
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      String string0 = "";
      StringReader stringReader0 = new StringReader("");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 5, (byte)10);
      javaCharStream0.BeginToken();
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.5498260458782016
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      Enumeration<MockFileInputStream> enumeration1 = (Enumeration<MockFileInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration1).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration1);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)13;
      Enumeration<InputStream> enumeration2 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration2).hasMoreElements();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(enumeration2);
      sequenceInputStream0.skip(0L);
      StringReader stringReader0 = new StringReader("$aw F-0*d_RxFp=xiy ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.FillBuff();
      javaCharStream0.ReInit((InputStream) sequenceInputStream1, 1137, (-1), 14);
      assertNotSame(sequenceInputStream1, sequenceInputStream0);
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.0431918705451206
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      pipedInputStream0.skip((-5977L));
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pipedInputStream0, bufferedInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, (-1), 0);
      javaCharStream0.ReInit((Reader) null, 0, 0);
      pipedInputStream0.close();
      bufferedInputStream0.available();
      javaCharStream0.nextCharInd = 613;
      javaCharStream0.ReInit((Reader) null);
      javaCharStream0.Done();
      // Undeclared exception!
      try { 
        javaCharStream0.getLine();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.2424533248940002
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      javaCharStream0.ReInit((Reader) null);
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((Reader) null, (-877), (-877), (-877));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=2.30205453352288
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)89;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 69, 0, 64);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, (byte)89, 1);
      javaCharStream1.ReInit((InputStream) byteArrayInputStream0, 69, 64);
      byteArrayInputStream0.reset();
      javaCharStream1.BeginToken();
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, 64, (-1595));
      JavaCharStream javaCharStream2 = new JavaCharStream(byteArrayInputStream1, (byte)89, (-1));
      javaCharStream2.Done();
      javaCharStream0.adjustBeginLineColumn(14, 101);
      javaCharStream0.adjustBeginLineColumn(55, 804);
      javaCharStream0.AdjustBuffSize();
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals(57, javaCharStream0.getBeginLine());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      StringReader stringReader0 = new StringReader("r{.H1&");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      InputStream inputStream0 = null;
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=0.39274289626694653
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      JavaCharStream.hexval('e');
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-119);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)1;
      byteArray0[5] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)0, 0, (byte)0);
      char char0 = javaCharStream0.ReadByte();
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals('\u0000', char0);
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.5792331346113395
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)63;
      byteArray0[1] = (byte)63;
      byteArray0[2] = (byte)63;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)63, (-1), (byte)63);
      char char0 = javaCharStream0.BeginToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('?', char0);
  }

  /**
  //Test case number: 89
  /*Coverage entropy=2.338371704803573
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      pipedInputStream0.skip((-5977L));
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pipedInputStream0, bufferedInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, (-1), 0);
      javaCharStream0.maxNextCharInd = (-1);
      javaCharStream0.ReInit((Reader) null, 0, 0);
      bufferedInputStream0.available();
      javaCharStream0.nextCharInd = 613;
      javaCharStream0.column = 1;
      javaCharStream0.AdjustBuffSize();
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 90
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      try { 
        JavaCharStream.hexval('j');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      byteArray0[0] = (byte)63;
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null, 100, 65, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.7351264569629226
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      StringReader stringReader0 = new StringReader("uX9SQ)W6");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader1 = new StringReader("urK9<paGQUMlZX");
      stringReader0.reset();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream0, 444, 956);
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.NativeMockedIO", e);
      }
  }

  /**
  //Test case number: 93
  /*Coverage entropy=0.08831978220001763
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      JavaCharStream.hexval('9');
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader0 = new StringReader("a");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "a");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      int[] intArray0 = new int[6];
      intArray0[0] = (-1);
      intArray0[1] = (-1);
      char[] charArray0 = new char[4];
      charArray0[0] = '[';
      charArray0[1] = 'm';
      charArray0[2] = 't';
      charArray0[3] = ':';
      stringReader0.read(charArray0);
      intArray0[2] = (-1);
      intArray0[3] = (-1);
      intArray0[4] = (-1);
      intArray0[5] = (-1);
      javaCharStream0.bufline = intArray0;
      javaCharStream0.getBeginLine();
      // Undeclared exception!
      try { 
        javaCharStream0.getLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1858, 2957);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      javaCharStream0.ReInit((InputStream) pipedInputStream0, 1858, 752, 2957);
      assertEquals(0, javaCharStream0.getBeginLine());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.read();
      sequenceInputStream0.read();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-98);
      byteArray0[1] = (byte) (-4);
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte)81;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-990), (byte)1);
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)1, (-1));
      javaCharStream0.ReInit((InputStream) sequenceInputStream0, 69, 4096, (int) (byte) (-98));
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)89;
      byteArray0[1] = (byte)89;
      byte byte0 = (byte)6;
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null);
      int int0 = 188;
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0, (byte)89, (-617), 188);
      JavaCharStream javaCharStream1 = null;
      try {
        javaCharStream1 = new JavaCharStream((InputStream) null, (-1), (-1214));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 98
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JavaCharStream.hexval('e');
      JavaCharStream.hexval('e');
      try { 
        JavaCharStream.hexval('L');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 99
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      try { 
        JavaCharStream.hexval('P');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 100
  /*Coverage entropy=1.242453324894
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      StringReader stringReader0 = new StringReader("&?F^~Au^O9");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 57, 14, 57);
      StringReader stringReader1 = new StringReader("");
      javaCharStream0.ReInit((Reader) stringReader0, (-2682), 3341, 102);
      javaCharStream0.ReInit((Reader) stringReader0, 102, 102);
      javaCharStream0.ReInit((Reader) stringReader0);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 101
  /*Coverage entropy=2.33247285020659
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      javaCharStream0.bufpos = 0;
      javaCharStream0.available = 0;
      javaCharStream0.AdjustBuffSize();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-15);
      byteArray0[1] = (byte) (-15);
      byteArray0[2] = (byte) (-15);
      byteArray0[3] = (byte) (-15);
      byteArray0[4] = (byte) (-15);
      byteArray0[5] = (byte) (-15);
      byteArray0[6] = (byte)89;
      byteArray0[7] = (byte) (-15);
      byteArray0[8] = (byte) (-15);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, 69, 6144, (-58));
      JavaCharStream javaCharStream2 = new JavaCharStream(byteArrayInputStream0, 69, (-4020));
      javaCharStream1.AdjustBuffSize();
      byteArrayInputStream0.reset();
      javaCharStream2.BeginToken();
      javaCharStream2.available = (int) (byte) (-15);
      javaCharStream2.ReInit((InputStream) byteArrayInputStream0);
      JavaCharStream javaCharStream3 = new JavaCharStream(byteArrayInputStream0, (-320), (byte) (-15));
      javaCharStream1.adjustBeginLineColumn((byte) (-15), 0);
      // Undeclared exception!
      javaCharStream0.adjustBeginLineColumn((-1), 77);
  }

  /**
  //Test case number: 102
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-61);
      byteArray0[1] = (byte)10;
      byteArray0[2] = (byte)14;
      byteArray0[3] = (byte) (-3);
      byteArray0[4] = (byte)55;
      byteArray0[5] = (byte) (-76);
      byteArray0[6] = (byte) (-101);
      byteArray0[7] = (byte) (-104);
      byteArray0[8] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 78, (-2276));
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)55, 2418, (byte) (-61));
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0, (int) (byte) (-76), 70, (int) (byte) (-76));
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 103
  /*Coverage entropy=0.6001660731596457
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('I');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 104
  /*Coverage entropy=1.4402347497045995
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      StringReader stringReader0 = new StringReader("uX9SQ)W6");
      StringReader stringReader1 = new StringReader("urK9<paGQUMlZX");
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-2090), (-2090), 78);
      char char0 = javaCharStream0.BeginToken();
      assertEquals((-2090), javaCharStream0.getBeginColumn());
      assertEquals('u', char0);
  }

  /**
  //Test case number: 105
  /*Coverage entropy=1.3517839942896461
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)89;
      byteArray0[1] = (byte)89;
      byteArray0[2] = (byte)89;
      byteArray0[3] = (byte)89;
      byteArray0[4] = (byte)89;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 69, 1030, (byte)89);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, 1864, 1250);
      byteArrayInputStream0.reset();
      JavaCharStream javaCharStream2 = new JavaCharStream(byteArrayInputStream0, 1030, 102);
      javaCharStream1.adjustBeginLineColumn((-303), 1030);
      javaCharStream2.adjustBeginLineColumn(91, 0);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.AdjustBuffSize();
      javaCharStream2.ExpandBuff(false);
      assertEquals(92, javaCharStream2.getBeginLine());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=2.098147389135067
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      javaCharStream0.bufpos = 0;
      javaCharStream0.available = 0;
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-15);
      byteArray0[1] = (byte) (-78);
      byteArray0[2] = (byte) (-15);
      byteArray0[3] = (byte) (-15);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, (byte) (-15), 3280, (-1));
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 107
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.ready();
      StringReader stringReader1 = new StringReader("lmh,C$TGQ@ciNd0beaA");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 89, (-3158));
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.7690361613040135
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      javaCharStream0.bufpos = 0;
      javaCharStream0.available = 0;
      javaCharStream0.AdjustBuffSize();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-15);
      byteArray0[1] = (byte) (-15);
      byteArray0[2] = (byte) (-15);
      byteArray0[3] = (byte) (-15);
      byteArray0[4] = (byte) (-15);
      byteArray0[5] = (byte) (-15);
      byteArray0[6] = (byte)89;
      byteArray0[7] = (byte) (-15);
      byteArray0[8] = (byte) (-15);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, (byte) (-15), 0);
      javaCharStream1.adjustBeginLineColumn(0, (byte) (-15));
      javaCharStream0.adjustBeginLineColumn((byte) (-15), 1);
      javaCharStream0.AdjustBuffSize();
      assertEquals(4096, javaCharStream0.bufpos);
      
      StringReader stringReader0 = new StringReader("0h");
      JavaCharStream javaCharStream2 = new JavaCharStream((Reader) null, (byte) (-15), (-1801), 69);
      javaCharStream1.AdjustBuffSize();
      int int0 = javaCharStream1.getBeginLine();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 109
  /*Coverage entropy=1.4750763110546947
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      StringReader stringReader0 = new StringReader("uX9SQ)W6");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader1 = new StringReader("urK9<paGQUMlZX");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 1, 4082, 4065);
      javaCharStream0.ReInit((Reader) stringReader1, 0, (-2400));
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1);
      javaCharStream1.ReInit((Reader) stringReader0);
      assertEquals((-1), javaCharStream1.bufpos);
  }

  /**
  //Test case number: 110
  /*Coverage entropy=1.6769877743224173
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1014, 1014);
      char[] charArray0 = new char[4];
      charArray0[0] = 'D';
      charArray0[1] = '7';
      charArray0[2] = 'q';
      charArray0[3] = 'i';
      stringReader0.read(charArray0);
      javaCharStream0.nextCharInd = 1014;
      javaCharStream0.available = 1014;
      javaCharStream0.GetImage();
      javaCharStream0.GetImage();
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 111
  /*Coverage entropy=0.9510427607332081
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Le6RnOuC.QoE&?GE");
      stringReader0.ready();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-974), (-1647), 264);
      StringReader stringReader1 = new StringReader("");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader2 = new StringReader("cK*");
      stringReader2.reset();
      JavaCharStream.hexval('C');
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      char char0 = javaCharStream0.readChar();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals('e', char0);
  }

  /**
  //Test case number: 112
  /*Coverage entropy=1.6769877743224173
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0);
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 113
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      StringReader stringReader0 = new StringReader("]_2Oq2%>G%UQH(");
      StringReader stringReader1 = new StringReader("]_2Oq2%>G%UQH(");
      stringReader1.reset();
      stringReader0.reset();
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream(stringReader0, (-757), (-3899), (-757));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 114
  /*Coverage entropy=1.6957425341696346
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 77, 82);
      byteArrayInputStream0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 3190, 82, 4096);
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }
}
