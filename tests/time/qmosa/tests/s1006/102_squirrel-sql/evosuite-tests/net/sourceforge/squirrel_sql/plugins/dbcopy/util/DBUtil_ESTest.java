/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 18:27:21 GMT 2019
 */

package net.sourceforge.squirrel_sql.plugins.dbcopy.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.gargoylesoftware.base.resource.jdbc.CallableStatementWrapper;
import com.gargoylesoftware.base.resource.jdbc.ConnectionWrapper;
import java.io.IOException;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.DatabaseMetaData;
import java.sql.DriverPropertyInfo;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Stack;
import javax.swing.Icon;
import javax.swing.tree.DefaultTreeCellRenderer;
import net.sourceforge.squirrel_sql.client.IApplication;
import net.sourceforge.squirrel_sql.client.gui.db.SQLAlias;
import net.sourceforge.squirrel_sql.client.gui.db.SQLAliasColorProperties;
import net.sourceforge.squirrel_sql.client.session.ISession;
import net.sourceforge.squirrel_sql.client.session.schemainfo.SchemaInfo;
import net.sourceforge.squirrel_sql.client.util.ApplicationFileWrappersImpl;
import net.sourceforge.squirrel_sql.fw.id.IIdentifier;
import net.sourceforge.squirrel_sql.fw.id.IntegerIdentifier;
import net.sourceforge.squirrel_sql.fw.id.UidIdentifier;
import net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo;
import net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectType;
import net.sourceforge.squirrel_sql.fw.sql.ForeignKeyInfo;
import net.sourceforge.squirrel_sql.fw.sql.IDatabaseObjectInfo;
import net.sourceforge.squirrel_sql.fw.sql.ISQLConnection;
import net.sourceforge.squirrel_sql.fw.sql.ITableInfo;
import net.sourceforge.squirrel_sql.fw.sql.SQLConnection;
import net.sourceforge.squirrel_sql.fw.sql.SQLDriver;
import net.sourceforge.squirrel_sql.fw.sql.SQLDriverPropertyCollection;
import net.sourceforge.squirrel_sql.fw.sql.TableColumnInfo;
import net.sourceforge.squirrel_sql.plugins.dbcopy.DBCopyPlugin;
import net.sourceforge.squirrel_sql.plugins.dbcopy.prefs.DBCopyPreferenceBean;
import net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DBUtil_ESTest extends DBUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.5357939587515939
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = " ADD CONSTRAINT FOEIGN KEY";
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("dzRwxjs'Y7.k{dv<*4", "DBUtil.info.bindblobmem", (String) null, "DBUtil.info.bindblobmem", (-5), (String) null, (-650), (-5), 28, (-5796), "C)M@5JLC['%{", " ADD CONSTRAINT FOEIGN KEY", (-650), 28, "C)M@5JLC['%{");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getWebSite();
      dBCopyPlugin0.getDestSession();
      DBUtil.replaceDistinctDataType((-1606), tableColumnInfo0, (ISession) null);
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, (-5), 4, 1111, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceDatabaseObjects();
      dBCopyPlugin0.setSourceDatabaseObjects((List<IDatabaseObjectInfo>) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu");
      FileSystemHandling.appendDataToFile(evoSuiteFile0, (byte[]) null);
      DBUtil.validateColumnNames((ITableInfo) null, dBCopyPlugin0);
      SQLAlias sQLAlias0 = new SQLAlias();
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = sQLAlias0.getDriverPropertiesClone();
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      SQLDriver sQLDriver0 = new SQLDriver(uidIdentifier0);
      SQLConnection sQLConnection0 = new SQLConnection(connection0, sQLDriverPropertyCollection0, sQLDriver0);
      int int0 = DBUtil.getColumnType((ISQLConnection) sQLConnection0, (ITableInfo) null, "Encountered unexpected exception when attempting to call schemaInfo.getTables with catalog = ");
      assertEquals("6e64ec27:16ecd00e996:-7eb4", uidIdentifier0.toString());
      assertEquals((-1), int0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.8361623253853443
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DBUtil.typesAreEquivalent(3, 3);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      System.setCurrentTimeMillis(1600L);
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, (-7), (byte)118, 3280, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu");
      FileSystemHandling.appendDataToFile(evoSuiteFile0, (byte[]) null);
      DBUtil.validateColumnNames((ITableInfo) null, dBCopyPlugin0);
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      SQLDriver sQLDriver0 = new SQLDriver(uidIdentifier0);
      SQLConnection sQLConnection0 = new SQLConnection(connection0, sQLDriverPropertyCollection0, sQLDriver0);
      // Undeclared exception!
      try { 
        DBUtil.getColumnCount(sQLConnection0, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.SQLDatabaseMetaData", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, (String) null, "", "Mk4XZ4v7d>GuC-?$F", (-2341), "Mk4XZ4v7d>GuC-?$F", (-869), (-2341), (-1), 1368, "Xh", (String) null, 1345, (-3404), "");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.createNewDatabaseObjectType("Application.error.closeAllSessions");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[3];
      tableColumnInfoArray0[0] = tableColumnInfo0;
      tableColumnInfoArray0[1] = tableColumnInfo0;
      tableColumnInfoArray0[0] = tableColumnInfo0;
      // Undeclared exception!
      try { 
        DBUtil.getColumnList(tableColumnInfoArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin2 = new DBCopyPlugin();
      dBCopyPlugin2.getWebSite();
      dBCopyPlugin0.getDestSession();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      DBCopyPlugin dBCopyPlugin3 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      dBCopyPlugin3.setDestSession((ISession) null);
      // Undeclared exception!
      try { 
        DBUtil.getInsertSQL(dBCopyPlugin0, "http://www.squirrelsql.org", (ITableInfo) null, (-5));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.3654597361104444
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      boolean boolean0 = DBUtil.typesAreEquivalent(4213, 4213);
      assertTrue(boolean0);
      
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[1];
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("t8U!]$xVZ05}(;0", "t8U!]$xVZ05}(;0", "t8U!]$xVZ05}(;0", "ASmXL&tOyqh-n$=", (-733), "~'[]", 4213, 4213, (-733), (-247), "", "~'[]", 4213, (-247), "*[+.");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.UDT_TYPE_DBO;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      tableColumnInfoArray0[0] = tableColumnInfo0;
      String string0 = DBUtil.getColumnList(tableColumnInfoArray0);
      assertEquals("ASmXL&tOyqh-n$=", string0);
      
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      int int0 = DBUtil.replaceDistinctDataType((-2148), tableColumnInfo0, (ISession) null);
      assertEquals((-2148), int0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("*[+.", "~'[]", "5e:Xy&Qo4/}-jYg", "", 858, "*[+.", 4213, 65535, (-2745), (-2542), "", "", 4213, (-124), "*[+.");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.UDT_TYPE_DBO;
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[1];
      tableColumnInfoArray0[0] = tableColumnInfo0;
      DBUtil.getColumnList(tableColumnInfoArray0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      try { 
        dBCopyPlugin1.getPluginUserSettingsFolder();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Cannot create directory as a file of the same name already exists: /home/ubuntu/.squirrel-sql/plugins/dbcopy/
         //
         verifyException("net.sourceforge.squirrel_sql.client.plugin.DefaultPlugin", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.3265171534282083
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DBUtil.typesAreEquivalent(3, 3);
      ForeignKeyInfo foreignKeyInfo0 = mock(ForeignKeyInfo.class, new ViolatedAssumptionAnswer());
      byte[] byteArray0 = new byte[8];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArray0[0] = (byte)118;
      byteArray0[1] = (byte)118;
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.setCopyMenuEnabled(true);
      String string0 = "y+";
      String string1 = "Error loading schemas";
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("ek ~I;Mxx", "ek ~I;Mxx", "y+", "ek ~I;Mxx", (-4), (String) null, 3, (byte)118, 3, 224, "S]A", "", 5, 224, "Error loading schemas");
      DBUtil.isBinaryType(tableColumnInfo0);
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.sameDatabaseType((ISession) null, (ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.9982695885852573
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DBUtil.typesAreEquivalent(0, (-6699));
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SESSION;
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier((-6699));
      SQLAlias sQLAlias0 = new SQLAlias();
      sQLAlias0.getDriverPropertiesClone();
      SQLDriver sQLDriver0 = new SQLDriver();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)61;
      connectionWrapper0.setHoldability(693);
      byteArray0[2] = (byte) (-2);
      sQLDriver0.setReportPropertyChanges(false);
      byteArray0[3] = (byte) (-2);
      byteArray0[4] = (byte) (-12);
      Stack<IDatabaseObjectInfo> stack0 = new Stack<IDatabaseObjectInfo>();
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("f&k2hE2]!*'vBE6,.kj", ". New tokenizer is ", ". New tokenizer is ");
      stack0.add((IDatabaseObjectInfo) databaseObjectInfo0);
      // Undeclared exception!
      try { 
        DBUtil.convertObjectToTableList(stack0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo cannot be cast to net.sourceforge.squirrel_sql.fw.sql.ITableInfo
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SESSION;
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier((-6699));
      SQLAlias sQLAlias0 = new SQLAlias();
      sQLAlias0.getDriverPropertiesClone();
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      SQLDriver sQLDriver0 = new SQLDriver();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)61;
      connectionWrapper0.setHoldability(693);
      byteArray0[2] = (byte) (-2);
      sQLDriver0.setReportPropertyChanges(true);
      byteArray0[3] = (byte) (-2);
      byteArray0[4] = (byte) (-12);
      byteArray0[5] = (byte)61;
      SQLAliasColorProperties sQLAliasColorProperties0 = new SQLAliasColorProperties();
      sQLAlias0.setColorProperties(sQLAliasColorProperties0);
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, (-570), 128, 304, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPluginAppSettingsFolder();
      ITableInfo iTableInfo0 = null;
      ArrayList<IDatabaseObjectInfo> arrayList0 = new ArrayList<IDatabaseObjectInfo>();
      dBCopyPlugin0.setSourceDatabaseObjects(arrayList0);
      String string0 = "]o?)e<T(J)KN1,KIw?E";
      // Undeclared exception!
      try { 
        DBUtil.getCreateTableSql(dBCopyPlugin0, (ITableInfo) null, "oI]?$", "oI]?$", "]o?)e<T(J)KN1,KIw?E");
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Stack<ITableInfo> stack0 = new Stack<ITableInfo>();
      stack0.iterator();
      stack0.add((ITableInfo) null);
      stack0.stream();
      List<IDatabaseObjectInfo> list0 = DBUtil.convertTableToObjectList(stack0);
      assertFalse(list0.isEmpty());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.setPasteToTableName("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      dBCopyPlugin1.getWebSite();
      dBCopyPlugin1.unload();
      dBCopyPlugin1.setCopyMenuEnabled(true);
      // Undeclared exception!
      try { 
        DBUtil.getSelectQuery(dBCopyPlugin1, ".<!", (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SESSION;
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier((-6699));
      SQLAlias sQLAlias0 = new SQLAlias();
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = sQLAlias0.getDriverPropertiesClone();
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      SQLDriver sQLDriver0 = new SQLDriver();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)56;
      connectionWrapper0.setHoldability(693);
      byteArray0[2] = (byte) (-2);
      sQLDriver0.setReportPropertyChanges(true);
      byteArray0[3] = (byte) (-2);
      byteArray0[4] = (byte) (-12);
      byteArray0[5] = (byte)56;
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu");
      SQLAliasColorProperties sQLAliasColorProperties0 = new SQLAliasColorProperties();
      sQLAlias0.setColorProperties(sQLAliasColorProperties0);
      FileSystemHandling.setPermissions(evoSuiteFile0, false, true, true);
      SQLConnection sQLConnection0 = new SQLConnection(connectionWrapper0, (SQLDriverPropertyCollection) null, sQLDriver0);
      sQLDriver0.setJDBCDriverClassLoaded(true);
      SQLConnection sQLConnection1 = new SQLConnection(connectionWrapper0, sQLDriverPropertyCollection0, sQLDriver0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      connectionWrapper0.close();
      dBCopyPlugin0.getPasteToTableInfo(sQLConnection0, "G $<&r>(8xi?\"X~", "null");
      // Undeclared exception!
      try { 
        DBUtil.getColumnName(sQLConnection0, (ITableInfo) null, (byte) (-12));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.SQLDatabaseMetaData", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      dBCopyPlugin0.setApplicationFiles(applicationFileWrappersImpl0);
      dBCopyPlugin0.getDestSession();
      DBUtil.replaceDistinctDataType(0, (TableColumnInfo) null, (ISession) null);
      CallableStatementWrapper callableStatementWrapper0 = null;
      try {
        callableStatementWrapper0 = new CallableStatementWrapper((CallableStatement) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // statement
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.StatementWrapper", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      String string0 = "org.apache.log4j.AppenderSkeleton";
      String string1 = "wy9,UJAW9b)";
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "replaceOtherDataType: unexpected exception - ", "org.apache.log4j.AppenderSkeleton", " ) values ( ", 31982, "wy9,UJAW9b)", 31982, 31982, 31982, 2001, "wy9,UJAW9b)", "cxbt^{N{>fbGn~0", 31982, 151, "wy9,UJAW9b)");
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin0.getWebSite();
      dBCopyPlugin1.getDestSession();
      DBUtil.replaceDistinctDataType((-1606), tableColumnInfo0, (ISession) null);
      DBUtil.isBinaryType(tableColumnInfo0);
      // Undeclared exception!
      try { 
        DBUtil.sameDatabaseType((ISession) null, (ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("", "", "", "", 0, "", 1925, 1925, 1925, 1925, "", "", 3172, 0, "] using ");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.PRIMARY_KEY;
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer0.getDefaultOpenIcon();
      TableColumnInfo tableColumnInfo1 = new TableColumnInfo("", "", "", "", (-4736), "", (-4736), 966, 3172, (-4736), "4lA<X\" D#-D2Zt?s", "^BA|)^R\"Ck+] 7( L99", 91, 593, "");
      DBUtil.getSchemaNameFromDbObject(tableColumnInfo1);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin0.setPasteMenuEnabled(true);
      ISession iSession0 = dBCopyPlugin0.getDestSession();
      assertNull(iSession0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        DBUtil.convertObjectArrayToTableList((IDatabaseObjectInfo[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(connection0).getCatalog();
      doReturn((DatabaseMetaData) null, (DatabaseMetaData) null, (DatabaseMetaData) null, (DatabaseMetaData) null, (DatabaseMetaData) null).when(connection0).getMetaData();
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SESSION;
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier((-6699));
      SQLAlias sQLAlias0 = new SQLAlias();
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = sQLAlias0.getDriverPropertiesClone();
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      SQLDriver sQLDriver0 = new SQLDriver();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)61;
      connectionWrapper0.setHoldability(693);
      byteArray0[2] = (byte) (-2);
      byteArray0[3] = (byte) (-2);
      IntegerIdentifier integerIdentifier1 = new IntegerIdentifier((-1966));
      SQLDriver sQLDriver1 = new SQLDriver(uidIdentifier0);
      SQLAlias sQLAlias1 = new SQLAlias(integerIdentifier0);
      SQLAlias sQLAlias2 = new SQLAlias(integerIdentifier0);
      SQLDriverPropertyCollection sQLDriverPropertyCollection1 = sQLAlias2.getDriverPropertiesClone();
      SQLConnection sQLConnection0 = new SQLConnection(connectionWrapper0, sQLDriverPropertyCollection0, sQLDriver1);
      SQLConnection sQLConnection1 = new SQLConnection(connectionWrapper0, sQLDriverPropertyCollection1, sQLDriver1);
      sQLConnection0.setCatalog("1dT`SeiIgm6PB4HpUQ");
      // Undeclared exception!
      try { 
        DBUtil.getColumnType((ISQLConnection) sQLConnection0, (ITableInfo) null, 36);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.SQLDatabaseMetaData", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      ArrayList<ITableInfo> arrayList1 = new ArrayList<ITableInfo>();
      // Undeclared exception!
      try { 
        DBUtil.getForeignKeySQL(dBCopyPlugin0, (ITableInfo) null, arrayList1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.8137821552104612
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-31);
      byteArray0[1] = (byte)58;
      byteArray0[2] = (byte) (-19);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, (String) null, "", (String) null, (byte)58, (String) null, (-3858), (-38), 70, (byte) (-19), (String) null, "", 527, 699, (String) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      DBUtil.replaceDistinctDataType(2147483645, tableColumnInfo0, (ISession) null);
      DBUtil.typesAreEquivalent(2926, (-321));
      dBCopyPlugin0.getSourceSession();
      DBUtil.fixCase((ISession) null, (String) null);
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.getTableCount((ISession) null, "rawtohex", (String) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 213);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.8505612088663046
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DBUtil.typesAreEquivalent(0, (-6699));
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((DatabaseMetaData) null).when(connection0).getMetaData();
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier((-6699));
      SQLAlias sQLAlias0 = new SQLAlias();
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = sQLAlias0.getDriverPropertiesClone();
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      SQLDriver sQLDriver0 = new SQLDriver();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)61;
      byteArray0[1] = (byte) (-85);
      sQLDriver0.setReportPropertyChanges(false);
      byteArray0[3] = (byte) (-2);
      byteArray0[4] = (byte) (-12);
      byte byte0 = (byte)3;
      byteArray0[5] = (byte)3;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      SQLConnection sQLConnection0 = new SQLConnection(connectionWrapper0, sQLDriverPropertyCollection0, sQLDriver0);
      sQLDriver0.setJDBCDriverClassLoaded(true);
      sQLConnection0.rollback();
      String string0 = "axion";
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo(sQLConnection0, "axion", "axion");
      // Undeclared exception!
      try { 
        DBUtil.tableHasPrimaryKey(sQLConnection0, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // metaData
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.DatabaseMetaDataWrapper", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[1];
      List<ITableInfo> list0 = DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
      assertEquals(1, list0.size());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("DefaultIntervalCaeegoryDataset.setCatego8yKeys(): null category not permitted.", "", "&v!|u?{2");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.TRIGGER;
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DatabaseObjectType.createNewDatabaseObjectType("&v!|u?{2");
      DatabaseObjectType.createNewDatabaseObjectType(" g{U%AGhewqVW");
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.PRIMARY_KEY;
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      // Undeclared exception!
      try { 
        DBUtil.getSchemaFromDbObject(databaseObjectInfo0, schemaInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // SQLDatabaseMetaData == null
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.6820748660026672
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[0];
      DBUtil.getColumnList(tableColumnInfoArray0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      dBCopyPlugin0.getSourceSession();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      DBUtil.typesAreEquivalent(16, 16);
      dBCopyPlugin0.getWebSite();
      dBCopyPlugin0.getDestSession();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("U3p7C", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "", " in schema ", (-2), "DBUtil.info.bindcloblength", 2945, 2147483645, 2004, 546, (String) null, "U3p7C", (-1625), 124, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      DBUtil.replaceDistinctDataType((-1625), tableColumnInfo0, (ISession) null);
      DBUtil.isBinaryType(tableColumnInfo0);
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.sameDatabaseType((ISession) null, (ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      String string0 = "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy";
      String string1 = null;
      String string2 = "";
      int int0 = 64000;
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("t!}4", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "", (String) null, 2004, "", 953, 64000, 372, 605, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "rawtohex", 1644, (-1606), "ra tohex");
      DBUtil.isBinaryType(tableColumnInfo0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.sameDatabaseType((ISession) null, (ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("net.sourceforge.squirrel_sql.client.resources.SquirrelResources", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "]YOu8;reI:;VvTbRPC&", "net.sourceforge.squirrel_sql.client.resources.SquirrelResources", (-675), "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 28, (-675), 16, 16, "]YOu8;reI:;VvTbRPC&", "net.sourceforge.squirrel_sql.client.resources.SquirrelResources", 16, 2, " schema = ");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.UDF_TYPE_DBO;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM((DatabaseObjectType) null);
      dBCopyPlugin0.getWebSite();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.getDestSession();
      int int0 = new Integer((-2353));
      DBUtil.isBinaryType(tableColumnInfo0);
      DBCopyPlugin dBCopyPlugin2 = new DBCopyPlugin();
      dBCopyPlugin2.getDestSession();
      DBCopyPlugin dBCopyPlugin3 = new DBCopyPlugin();
      ISession iSession0 = dBCopyPlugin3.getDestSession();
      assertNull(iSession0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(connection0).getCatalog();
      doReturn((DatabaseMetaData) null, (DatabaseMetaData) null, (DatabaseMetaData) null, (DatabaseMetaData) null, (DatabaseMetaData) null).when(connection0).getMetaData();
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SESSION;
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier((-6699));
      SQLAlias sQLAlias0 = new SQLAlias();
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = sQLAlias0.getDriverPropertiesClone();
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      SQLDriver sQLDriver0 = new SQLDriver();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)61;
      connectionWrapper0.setHoldability(693);
      byteArray0[2] = (byte) (-2);
      byteArray0[3] = (byte) (-2);
      IntegerIdentifier integerIdentifier1 = new IntegerIdentifier((-1966));
      SQLDriver sQLDriver1 = new SQLDriver(uidIdentifier0);
      SQLAlias sQLAlias1 = new SQLAlias(integerIdentifier0);
      SQLAlias sQLAlias2 = new SQLAlias(integerIdentifier0);
      SQLDriverPropertyCollection sQLDriverPropertyCollection1 = sQLAlias2.getDriverPropertiesClone();
      SQLConnection sQLConnection0 = new SQLConnection(connectionWrapper0, sQLDriverPropertyCollection0, sQLDriver1);
      SQLConnection sQLConnection1 = new SQLConnection(connectionWrapper0, sQLDriverPropertyCollection1, sQLDriver1);
      sQLConnection0.setCatalog("1dT`SeiIgm6PB4HpUQ");
      // Undeclared exception!
      try { 
        DBUtil.getSchemaNameFromDbObject((IDatabaseObjectInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("vu}fk F\"Y|@", "GLqt)RE&", "GLqt)RE&");
      String string0 = DBUtil.getSchemaNameFromDbObject(databaseObjectInfo0);
      assertEquals("GLqt)RE&", string0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Stack<ITableInfo> stack0 = new Stack<ITableInfo>();
      stack0.stream();
      List<IDatabaseObjectInfo> list0 = DBUtil.convertTableToObjectList(stack0);
      assertEquals(0, list0.size());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Stack<ITableInfo> stack0 = new Stack<ITableInfo>();
      stack0.stream();
      // Undeclared exception!
      try { 
        DBUtil.convertTableToObjectList((List<ITableInfo>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin0.getWebSite();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "K,");
      dBCopyPlugin1.getDestSession();
      TableColumnInfo tableColumnInfo0 = null;
      DBUtil.replaceDistinctDataType(68, (TableColumnInfo) null, (ISession) null);
      dBCopyPlugin1.setCopyMenuEnabled(false);
      // Undeclared exception!
      try { 
        DBUtil.isBinaryType((TableColumnInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      DBUtil dBUtil0 = new DBUtil();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((CallableStatement) null).when(connection0).prepareCall(anyString());
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      String string0 = ">zjEojc";
      // Undeclared exception!
      try { 
        connectionWrapper0.prepareCall(">zjEojc");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // statement
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.StatementWrapper", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      DBCopyPreferenceBean dBCopyPreferenceBean0 = new DBCopyPreferenceBean();
      DBUtil.setPreferences(dBCopyPreferenceBean0);
      Connection connection0 = null;
      ConnectionWrapper connectionWrapper0 = null;
      try {
        connectionWrapper0 = new ConnectionWrapper((Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.ConnectionWrapper", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.PRIMARY_KEY;
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      Icon icon0 = defaultTreeCellRenderer0.getDefaultClosedIcon();
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.createNewDatabaseObjectType((String) null, icon0);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo(":F-", "", "8UR`u)h/y:", "", (-4050), "", (-4050), 31, (-4121), (-4121), ":F-", (String) null, (-739), (-4121), "z~o:(N:>");
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.OTHER;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      DatabaseObjectType.createNewDatabaseObjectType(":F-");
      DatabaseObjectType databaseObjectType3 = DatabaseObjectType.DATATYPE;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType3);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      DatabaseObjectType databaseObjectType4 = DatabaseObjectType.DATABASE_TYPE_DBO;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType4);
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        DBUtil.getMaxColumnLengthSQL((ISession) null, tableColumnInfo0, "rawtohex", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[0];
      List<ITableInfo> list0 = DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
      assertEquals(0, list0.size());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("DefaultIntervalCaeegoryDataset.setCatego8yKeys(): null category not permitted.", "&v!|u?{2", "&v!|u?{2");
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[2];
      iDatabaseObjectInfoArray0[0] = (IDatabaseObjectInfo) databaseObjectInfo0;
      iDatabaseObjectInfoArray0[1] = (IDatabaseObjectInfo) databaseObjectInfo0;
      // Undeclared exception!
      try { 
        DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo cannot be cast to net.sourceforge.squirrel_sql.fw.sql.ITableInfo
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestDatabaseObject();
      dBCopyPlugin0.setDestDatabaseObject((IDatabaseObjectInfo) null);
      dBCopyPlugin0.getDestSession();
      boolean boolean0 = DBUtil.typesAreEquivalent(16, 70);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((Statement) null).when(connection0).createStatement();
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      connectionWrapper0.setHoldability((byte)61);
      SQLDriver sQLDriver0 = new SQLDriver();
      sQLDriver0.setReportPropertyChanges(false);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)61;
      byteArray0[1] = (byte)61;
      byteArray0[2] = (byte)14;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      SQLConnection sQLConnection0 = new SQLConnection(connectionWrapper0, sQLDriverPropertyCollection0, sQLDriver0);
      DriverPropertyInfo[] driverPropertyInfoArray0 = new DriverPropertyInfo[0];
      sQLDriverPropertyCollection0.applyDriverPropertynfo(driverPropertyInfoArray0);
      sQLDriver0.setJDBCDriverClassLoaded(true);
      // Undeclared exception!
      try { 
        DBUtil.executeUpdate(sQLConnection0, "F;*?}7#H!FH", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // statement
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.StatementWrapper", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("", "", "", "", 0, "", 1925, 1925, 1925, 1925, "", "", 3172, 0, "] usin ");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.PRIMARY_KEY;
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      Icon icon0 = defaultTreeCellRenderer0.getDefaultClosedIcon();
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.createNewDatabaseObjectType("] usin ", icon0);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.SCHEMA;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      defaultTreeCellRenderer0.removeNotify();
      DatabaseObjectType databaseObjectType3 = DatabaseObjectType.FUNCTION;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.getColumnSql(dBCopyPlugin0, tableColumnInfo0, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      DBUtil.typesAreEquivalent((-321), 2001);
      System.setCurrentTimeMillis((-451L));
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)12;
      byteArray0[1] = (byte)39;
      byteArray0[2] = (byte)6;
      byteArray0[3] = (byte) (-85);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)122;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "t", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 16, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (byte)0, (byte)39, 769, (-262), "t", " and table_schema = ? ", (byte)6, 1111, " and table_schema = ? ");
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("", "", "", "", 1797, "", 1925, 1925, 1925, 1925, "", "", 3172, 1797, "] usin ");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.PRIMARY_KEY;
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      Icon icon0 = defaultTreeCellRenderer0.getDefaultClosedIcon();
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.createNewDatabaseObjectType("] usin ", icon0);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DatabaseObjectType.createNewDatabaseObjectType("] usin ");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.DATABASE_TYPE_DBO;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      int int0 = DBUtil.replaceDistinctDataType(70, tableColumnInfo0, (ISession) null);
      assertEquals(70, int0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.USER;
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier((-6705));
      SQLAlias sQLAlias0 = new SQLAlias();
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = sQLAlias0.getDriverPropertiesClone();
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      SQLDriver sQLDriver0 = new SQLDriver();
      byte[] byteArray0 = new byte[6];
      DriverPropertyInfo[] driverPropertyInfoArray0 = new DriverPropertyInfo[7];
      DriverPropertyInfo driverPropertyInfo0 = new DriverPropertyInfo("!FM", "!FM");
      driverPropertyInfoArray0[0] = driverPropertyInfo0;
      DriverPropertyInfo driverPropertyInfo1 = new DriverPropertyInfo("a`", "!FM");
      driverPropertyInfoArray0[1] = driverPropertyInfo1;
      DriverPropertyInfo driverPropertyInfo2 = new DriverPropertyInfo("", "!FM");
      driverPropertyInfoArray0[2] = driverPropertyInfo2;
      DriverPropertyInfo driverPropertyInfo3 = new DriverPropertyInfo("!FM", (String) null);
      driverPropertyInfoArray0[3] = driverPropertyInfo3;
      DriverPropertyInfo driverPropertyInfo4 = new DriverPropertyInfo("!FM", (String) null);
      driverPropertyInfoArray0[4] = driverPropertyInfo4;
      DriverPropertyInfo driverPropertyInfo5 = new DriverPropertyInfo("!FM", "!FM");
      driverPropertyInfoArray0[5] = driverPropertyInfo5;
      DriverPropertyInfo driverPropertyInfo6 = new DriverPropertyInfo(")", "ra tohex");
      driverPropertyInfoArray0[6] = driverPropertyInfo6;
      sQLDriverPropertyCollection0.applyDriverPropertynfo(driverPropertyInfoArray0);
      byteArray0[0] = (byte)61;
      sQLDriver0.setReportPropertyChanges(true);
      // Undeclared exception!
      try { 
        DBUtil.getColumnTypes((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SESSION;
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier((-6699));
      SQLAlias sQLAlias0 = new SQLAlias();
      sQLAlias0.getDriverPropertiesClone();
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      SQLDriver sQLDriver0 = new SQLDriver();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)61;
      connectionWrapper0.setHoldability(693);
      byteArray0[2] = (byte) (-2);
      sQLDriver0.setReportPropertyChanges(true);
      byteArray0[3] = (byte) (-2);
      Stack<ITableInfo> stack0 = new Stack<ITableInfo>();
      stack0.stream();
      // Undeclared exception!
      try { 
        DBUtil.convertObjectToTableList((List<IDatabaseObjectInfo>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      LinkedList<IDatabaseObjectInfo> linkedList0 = new LinkedList<IDatabaseObjectInfo>();
      linkedList0.clone();
      List<ITableInfo> list0 = DBUtil.convertObjectToTableList(linkedList0);
      assertEquals(0, list0.size());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.getCreateTableSql(dBCopyPlugin0, (ITableInfo) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-58);
      byteArray0[1] = (byte) (-58);
      byteArray0[2] = (byte) (-37);
      byteArray0[3] = (byte)68;
      byteArray0[4] = (byte)11;
      byteArray0[5] = (byte)93;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier(0);
      SQLAlias sQLAlias0 = new SQLAlias(integerIdentifier0);
      SQLAlias sQLAlias1 = new SQLAlias();
      SQLAlias sQLAlias2 = new SQLAlias();
      sQLAlias2.getDriverPropertiesClone();
      DBUtil.setLastStatement("Usn_?..<I$");
  }

  /**
  //Test case number: 49
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.getCatSep((ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      int int0 = (-321);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("DatabaseObjectType.udf", "D(^", "DatabaseObjectType.udf", "DatabaseObjectType.udf", 3172, "] usin ", 691, 3172, 2, 3172, "DatabaseObjectType.udf", "] usin ", 1385, (-321), "] usin ");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.PRIMARY_KEY;
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      Icon icon0 = defaultTreeCellRenderer0.getDefaultClosedIcon();
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.createNewDatabaseObjectType("DatabaseObjectType.udf", icon0);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.createNewDatabaseObjectType("D(^");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      DatabaseObjectType databaseObjectType3 = DatabaseObjectType.DATABASE_TYPE_DBO;
      DatabaseObjectType.createNewDatabaseObjectType("catalogFilterExclude", icon0);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType3);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      // Undeclared exception!
      try { 
        DBUtil.getMaxColumnLengthSQL((ISession) null, tableColumnInfo0, "D(^", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      DBUtil.getLastStatement();
      CallableStatementWrapper callableStatementWrapper0 = null;
      try {
        callableStatementWrapper0 = new CallableStatementWrapper((CallableStatement) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // statement
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.StatementWrapper", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("", "", "", "", 0, "", 1925, 1925, 1925, 1925, "", "", 3172, 0, "] using ");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.PRIMARY_KEY;
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      Icon icon0 = defaultTreeCellRenderer0.getDefaultOpenIcon();
      DatabaseObjectType.createNewDatabaseObjectType("] using ", icon0);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "kS'^w6;Hg{j");
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.createNewDatabaseObjectType("");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      TableColumnInfo tableColumnInfo1 = new TableColumnInfo("kS'^w6;Hg{j", "", "kS'^w6;Hg{j", "] using ", 0, "", 3172, 3172, 0, 1925, "] using ", "] using ", 1925, 0, "] using ");
      assertEquals(3172, tableColumnInfo1.getColumnSize());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.executeQuery((ISession) null, "r\"8C[VepeU");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.createNewDatabaseObjectType("J/p_.WT4$^AVK;F@D", (Icon) null);
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("J/p_.WT4$^AVK;F@D", "Xi*[)Z[:!\"c", "Xi*[)Z[:!\"c");
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.createNewDatabaseObjectType("Xi*[)Z[:!\"c");
      DatabaseObjectType.createNewDatabaseObjectType((String) null, (Icon) null);
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.createNewDatabaseObjectType(" g{U%AGheqVW");
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      // Undeclared exception!
      try { 
        DBUtil.getSchemaFromDbObject(databaseObjectInfo0, (SchemaInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.createNewDatabaseObjectType("J/p_.WT4$^AVK;F@D", (Icon) null);
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("J/p_.WT4$^AVK;F@D", "Xi*[)Z[:!\"c", "Xi*[)Z[:!\"c");
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.createNewDatabaseObjectType("Xi*[)Z[:!\"c");
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.createNewDatabaseObjectType(" g{U%AGheqVW");
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      ForeignKeyInfo foreignKeyInfo0 = mock(ForeignKeyInfo.class, new ViolatedAssumptionAnswer());
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.tableHasForeignKey((String) null, ". Using 'length'", "c$Z^ZCX=V\bwv", foreignKeyInfo0, dBCopyPlugin0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      DBUtil.getLastStatementValues();
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      SQLAlias sQLAlias0 = new SQLAlias(uidIdentifier0);
      sQLAlias0.getDriverPropertiesClone();
      SQLDriver sQLDriver0 = new SQLDriver((IIdentifier) null);
      assertNull(sQLDriver0.getJarFileName());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      DBUtil.setLastStatementValues("@Du");
      DBUtil.getLastStatementValues();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier(3);
      SQLAlias sQLAlias0 = new SQLAlias(integerIdentifier0);
      boolean boolean0 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "@Du");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu");
      FileSystemHandling.appendDataToFile(evoSuiteFile0, (byte[]) null);
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.getQualifiedObjectName((ISession) null, "M", (String) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 1293);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.createNewDatabaseObjectType("J/p_.WT4$^AVK;F@D", (Icon) null);
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("J/p_.WT4$^AVK;F@D", "Xi*[)Z[:!\"c", "Xi*[)Z[:!\"c");
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.createNewDatabaseObjectType("Xi*[)Z[:!\"c");
      DatabaseObjectType.createNewDatabaseObjectType((String) null, (Icon) null);
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.createNewDatabaseObjectType(" g{U%AGheqVW");
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.deleteDataInExistingTable((ISession) null, (String) null, "Encountered unexpected exception while attempting to determine if schemas are used in table definitions", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        DBUtil.getTables((ISession) null, "", "$", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.getTableInfo((ISession) null, "select ", "ne00i.");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.getDestSession();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.fixCase((ISession) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      DBUtil.fixCase((ISession) null, "");
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((CallableStatement) null).when(connection0).prepareCall(anyString() , anyInt() , anyInt() , anyInt());
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      // Undeclared exception!
      try { 
        connectionWrapper0.prepareCall("", (-971), (-971), (-971));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // statement
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.StatementWrapper", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      ISession iSession0 = null;
      // Undeclared exception!
      try { 
        DBUtil.checkKeyword((ISession) null, (String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.isKeyword((ISession) null, "fF[$Jf.X7f56&c0");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.dropTable("r\"8C[VepeU", "Application.error.loadUserSpecificWikiConfiguration", (String) null, (ISession) null, true, 3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.sanityCheckPreferences((ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }
}
