/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 18:31:46 GMT 2019
 */


import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Services_ESTest extends Services_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.3803872339294605
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("127.0.0.1", 160);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("https://:0");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "^VfqZTlPU,8/WjD");
      EvoSuiteRemoteAddress evoSuiteRemoteAddress1 = new EvoSuiteRemoteAddress("Services$HTTP_Result", 1);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress1);
      Services.testHTTPS("^VfqZTlPU,8/WjD", 3027);
      EvoSuiteURL evoSuiteURL1 = new EvoSuiteURL("http://:0");
      NetworkHandling.createRemoteTextFile(evoSuiteURL1, "^VfqZTlPU,8/WjD");
      Services.testPOP3("^VfqZTlPU,8/WjD", 0);
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testPOP3("^VfqZTlPU,8/WjD", (-972));
      Services.testSMTP("", 160);
      services_SIMPLE_Result0.time = (long) 0;
      Services.testPOP3("**Erreur d'E/S** (org.evosuite.runtime.mock.java.lang.MockThrowable: Could not find: ^VfqZTlPU,8/WjD) **", 0);
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTP("", 0);
      assertEquals(16, services_HTTP_Result0.page_weight);
      assertTrue(services_HTTP_Result0.works);
      
      Services.testHTTPS(",#zQt]WdB", (-1));
      Services.HTTP_Result services_HTTP_Result1 = Services.testHTTPS("", 0);
      assertEquals(16, services_HTTP_Result1.page_weight);
      assertTrue(services_HTTP_Result1.works);
      
      Services.HTTP_Result services_HTTP_Result2 = Services.testHTTP("**Erreur d'E/S** (org.evosuite.runtime.mock.java.lang.MockThrowable: Could not find: ^VfqZTlPU,8/WjD) **", (-1));
      assertEquals(0L, services_HTTP_Result2.time);
      assertEquals(0, services_HTTP_Result2.page_weight);
      assertEquals(0, services_HTTP_Result2.code);
      assertFalse(services_HTTP_Result2.works);
      
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-173L));
      Services.SIMPLE_Result services_SIMPLE_Result1 = Services.testPOP3("U7|d<Y", 0);
      assertFalse(services_SIMPLE_Result1.works);
      assertEquals(0L, services_SIMPLE_Result1.time);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.8104399097753396
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("https://]ZaN^US1NkS:3027");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "^VfqZTlPU,8/WjD");
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("200.42.42.2", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      Services.testHTTPS("^VfqZTlPU,8/WjD", 3027);
      EvoSuiteURL evoSuiteURL1 = new EvoSuiteURL("http://:0");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)56;
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte) (-73);
      byteArray0[3] = (byte)18;
      byteArray0[4] = (byte) (-1);
      byteArray0[5] = (byte)85;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)75;
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTPS("]ZaN^US1NkS", 3027);
      assertEquals(16, services_HTTP_Result0.page_weight);
      assertTrue(services_HTTP_Result0.works);
      
      NetworkHandling.createRemoteTextFile(evoSuiteURL1, "^VfqZTlPU,8/WjD");
      Services.testHTTP("", (byte) (-73));
      Services.HTTP_Result services_HTTP_Result1 = Services.testHTTPS("nsB", (byte)56);
      assertFalse(services_HTTP_Result1.works);
      assertEquals(0, services_HTTP_Result1.code);
      assertEquals(0, services_HTTP_Result1.page_weight);
      assertEquals(0L, services_HTTP_Result1.time);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(6200L);
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(6200L);
      System.setCurrentTimeMillis(880L);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("127.0.0.1", 3000);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      System.setCurrentTimeMillis(0L);
      Services.testPOP3("", 3000);
      System.setCurrentTimeMillis(6200L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(1L);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(6200L);
      System.setCurrentTimeMillis(880L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-680L));
      System.setCurrentTimeMillis((-1L));
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTPS("`\"z4;lXpuDu(v~*+7", (-3398));
      assertFalse(services_HTTP_Result0.works);
      assertEquals(0, services_HTTP_Result0.page_weight);
      assertEquals(0L, services_HTTP_Result0.time);
      assertEquals(0, services_HTTP_Result0.code);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = new Services.HTTP_Result();
      services_HTTP_Result0.reset();
      assertFalse(services_HTTP_Result0.works);
      assertEquals(0, services_HTTP_Result0.page_weight);
      assertEquals(0, services_HTTP_Result0.code);
      assertEquals(0L, services_HTTP_Result0.time);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testSMTP("** Poid de la page : ", (-131));
      assertEquals(0L, services_SIMPLE_Result0.time);
      assertFalse(services_SIMPLE_Result0.works);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = new Services.HTTP_Result();
      services_HTTP_Result0.toString();
      assertEquals(0, services_HTTP_Result0.page_weight);
      
      services_HTTP_Result0.page_weight = 1;
      services_HTTP_Result0.toString();
      services_HTTP_Result0.toString();
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testSMTP("", 0);
      assertEquals(0L, services_SIMPLE_Result0.time);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Services.SIMPLE_Result services_SIMPLE_Result0 = new Services.SIMPLE_Result();
      services_SIMPLE_Result0.Error = null;
      services_SIMPLE_Result0.reset();
      assertFalse(services_SIMPLE_Result0.works);
      
      services_SIMPLE_Result0.works = false;
      services_SIMPLE_Result0.toString();
      String string0 = services_SIMPLE_Result0.toString();
      assertEquals("**** Resultat : \n** Fonctionnement : false\n** Temps : 0 ms\n** Erreur g\u00E9n\u00E9r\u00E9e : .\n****", string0);
      assertEquals(0L, services_SIMPLE_Result0.time);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("0.0.0.220", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "^VfqZTlP,8/WjD");
      Services services0 = new Services();
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Services.SIMPLE_Result services_SIMPLE_Result0 = new Services.SIMPLE_Result();
      services_SIMPLE_Result0.Error = "";
      Services.SIMPLE_Result services_SIMPLE_Result1 = new Services.SIMPLE_Result();
      Services.SIMPLE_Result services_SIMPLE_Result2 = Services.testSMTP("", 189);
      assertEquals(0L, services_SIMPLE_Result2.time);
      assertFalse(services_SIMPLE_Result2.works);
      
      String string0 = services_SIMPLE_Result0.toString();
      assertEquals("**** Resultat : \n** Fonctionnement : false\n** Temps : 0 ms\n** Erreur g\u00E9n\u00E9r\u00E9e : .\n****", string0);
      
      String string1 = services_SIMPLE_Result2.Error;
      Services.SIMPLE_Result services_SIMPLE_Result3 = new Services.SIMPLE_Result();
      assertEquals(0L, services_SIMPLE_Result3.time);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.8599785716462063
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("0.0.0.220", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("https://:0");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "^VfqZTlPU,8/WjD");
      EvoSuiteRemoteAddress evoSuiteRemoteAddress1 = new EvoSuiteRemoteAddress("200.42.42.2", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress1);
      Services.testHTTPS("?M,](icM9`R'G]FJ", 2981);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, (String) null);
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "^VfqZTlPU,8/WjD");
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress1);
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, (byte[]) null);
      Services.testHTTPS((String) null, (byte)18);
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTP((String) null, (byte)18);
      assertEquals(0, services_HTTP_Result0.code);
      assertFalse(services_HTTP_Result0.works);
      assertEquals(0L, services_HTTP_Result0.time);
      assertEquals(0, services_HTTP_Result0.page_weight);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(6200L);
      System.setCurrentTimeMillis(880L);
      System.setCurrentTimeMillis((-25L));
      System.setCurrentTimeMillis((-680L));
      System.setCurrentTimeMillis(6200L);
      Services.testHTTP("", 1460);
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTP("bS'P=3fV'<?-U$*h$", (-1270));
      assertEquals(0, services_HTTP_Result0.page_weight);
      assertFalse(services_HTTP_Result0.works);
      assertEquals(0, services_HTTP_Result0.code);
      assertEquals(0L, services_HTTP_Result0.time);
  }
}
