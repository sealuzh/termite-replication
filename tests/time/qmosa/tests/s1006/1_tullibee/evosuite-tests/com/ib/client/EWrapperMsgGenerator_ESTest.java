/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 18:26:18 GMT 2019
 */

package com.ib.client;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ib.client.Contract;
import com.ib.client.ContractDetails;
import com.ib.client.EWrapperMsgGenerator;
import com.ib.client.Execution;
import com.ib.client.Order;
import com.ib.client.OrderState;
import com.ib.client.TagValue;
import com.ib.client.UnderComp;
import java.util.Vector;
import java.util.function.UnaryOperator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class EWrapperMsgGenerator_ESTest extends EWrapperMsgGenerator_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Contract contract0 = new Contract();
      contract0.clone();
      contract0.m_symbol = null;
      EWrapperMsgGenerator.updatePortfolio(contract0, 0, (-1996.78529021), 2342.0, 2342.0, 0.0, 142.5762403, "");
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.execDetails(43, contract0, (Execution) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.0557051606564785
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickOptionComputation(1, 1, 1, 0.0, 0.0, 0.0);
      assertEquals("id=1  bidPrice: vol = 1.0 delta = 0.0", string0);
      
      String string1 = EWrapperMsgGenerator.tickString(1, 1, "id=1  bidPrice: vol = 1.0 delta = 0.0");
      assertEquals("id=1  bidPrice=id=1  bidPrice: vol = 1.0 delta = 0.0", string1);
      
      Vector<Object> vector0 = new Vector<Object>();
      Contract contract0 = new Contract(1, "}+<v?~VV0)nD1f:(9BX", "", "longName = ", 1.7976931348623157E308, " volume=", "}+<v?~VV0)nD1f:(9BX", "lastTimestamp", " volume=", "wEKH'TM}av,[Ok,g", vector0, "s`>sR*", true, "", "}+<v?~VV0)nD1f:(9BX");
      Vector<Object> vector1 = new Vector<Object>();
      contract0.m_comboLegs = vector1;
      UnderComp underComp0 = new UnderComp();
      contract0.m_underComp = underComp0;
      Order order0 = new Order();
      OrderState orderState0 = new OrderState("id=1  bidPrice: vol = 1.0 delta = 0.0", "  It does not support notHeld parameter.", (String) null, "FA:", 910.6529841763, 1.7976931348623157E308, Integer.MAX_VALUE, "", (String) null);
      orderState0.m_warningText = "lastTimestamp";
      EWrapperMsgGenerator.openOrder(0, contract0, order0, orderState0);
      String string2 = EWrapperMsgGenerator.fundamentalData(0, "c_aP");
      assertEquals("id  = 0 len = 4\nc_aP", string2);
      
      String string3 = EWrapperMsgGenerator.openOrderEnd();
      assertEquals(" =============== end ===============", string3);
      
      String string4 = EWrapperMsgGenerator.tickSize((-3472), 1, 1);
      assertEquals("id=-3472  bidPrice=1", string4);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      EWrapperMsgGenerator.openOrderEnd();
      Vector<Object> vector0 = new Vector<Object>();
      Contract contract0 = new Contract(110, (String) null, "", "::=pG%=$4I|cVOW_", 110, " =============== end ===============", "oX!", " volume=", " basisPointsType=", "", vector0, "", false, "7J{G", "@qFb+s");
      Order order0 = new Order();
      contract0.m_secIdType = "#auC2~n>f\"|9>";
      OrderState orderState0 = new OrderState();
      EWrapperMsgGenerator.openOrder(110, contract0, order0, orderState0);
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.fundamentalData(0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.810116318288409
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickOptionComputation((-1855), 13, (-1855), (-1855), (-1855), 13);
      assertEquals("id=-1855  modelOptComp: vol = N/A delta = N/A: modelPrice = N/A: pvDividend = 13.0", string0);
      
      UnderComp underComp0 = new UnderComp();
      underComp0.m_price = (double) (-1855);
      String string1 = EWrapperMsgGenerator.deltaNeutralValidation((-1855), underComp0);
      assertEquals("id = -1855 underComp.conId =0 underComp.delta =0.0 underComp.price =-1855.0", string1);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ContractDetails contractDetails0 = new ContractDetails();
      Vector<String> vector0 = new Vector<String>();
      Contract contract0 = new Contract(0, "wEKH'TM}av,[Ok,g", "8;reI", (String) null, 1106.57, "8;reI", "g!PEweg^1g;N7eO?>03", "0u-$RB(veEu`,:ZU!", (String) null, "13WeekLow", vector0, (String) null, false, (String) null, "52WeekLow");
      Order order0 = new Order();
      order0.m_blockOrder = false;
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.openOrder(3951, contractDetails0.m_summary, order0, (OrderState) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.746831485658561
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.updateMktDepth((-1855), 1, (-1), 1, (-1855), (-1855));
      assertEquals("updateMktDepth: -1855 1 -1 1 -1855.0 -1855", string0);
      
      String string1 = EWrapperMsgGenerator.scannerDataEnd(743);
      assertEquals("id = 743 =============== end ===============", string1);
      
      String string2 = EWrapperMsgGenerator.tickOptionComputation(1982292598, 13, 1.0, 1.0, 13, 743);
      assertEquals("id=1982292598  modelOptComp: vol = 1.0 delta = 1.0: modelPrice = 13.0: pvDividend = 743.0", string2);
      
      String string3 = EWrapperMsgGenerator.tickString(13, 743, "id=1982292598  modelOptComp: vol = 1.0 delta = 1.0: modelPrice = 13.0: pvDividend = 743.0");
      assertEquals("id=13  unknown=id=1982292598  modelOptComp: vol = 1.0 delta = 1.0: modelPrice = 13.0: pvDividend = 743.0", string3);
      
      UnderComp underComp0 = new UnderComp();
      String string4 = EWrapperMsgGenerator.deltaNeutralValidation(10, underComp0);
      assertEquals("id = 10 underComp.conId =0 underComp.delta =0.0 underComp.price =0.0", string4);
      
      String string5 = EWrapperMsgGenerator.updateMktDepthL2(1, 2146325974, "id = 10 underComp.conId =0 underComp.delta =0.0 underComp.price =0.0", 1982292598, (-1855), (-931.26), (-1));
      assertEquals("updateMktDepth: 1 2146325974 id = 10 underComp.conId =0 underComp.delta =0.0 underComp.price =0.0 1982292598 -1855 -931.26 -1", string5);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ContractDetails contractDetails0 = new ContractDetails();
      contractDetails0.m_priceMagnifier = 48;
      Vector<Object> vector0 = new Vector<Object>();
      TagValue tagValue0 = new TagValue();
      vector0.add((Object) tagValue0);
      contractDetails0.m_liquidHours = "&";
      Vector<String> vector1 = new Vector<String>();
      Contract contract0 = new Contract(48, (String) null, (String) null, "@o>9@N", 48, (String) null, "PROFILES", "}", "MKT", "@t:ca-k*K;C", vector1, (String) null, false, (String) null, (String) null);
      ContractDetails contractDetails1 = new ContractDetails(contract0, (String) null, "@t:ca-k*K;C", (-770.031904913), (String) null, (String) null, 558, (String) null, " triggerMethod=", "a.3!`4j|46X i", "EEkVc8$NL Q SZl", "N8LGtwj\"8_0Aath9lv", "", (String) null, "@t:ca-k*K;C");
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.contractDetails(0, (ContractDetails) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Vector<Object> vector0 = new Vector<Object>();
      UnaryOperator<Object> unaryOperator0 = UnaryOperator.identity();
      vector0.add((Object) "");
      vector0.replaceAll(unaryOperator0);
      Contract contract0 = new Contract((-2691), " | ", "U+SyvYf>mngh`", " | ", (-2691), "U+SyvYf>mngh`", "@eiuc_\"H(", "U+SyvYf>mngh`", "@eiuc_\"H(", "@eiuc_\"H(", vector0, "dfcme2H.`wRTh", true, "@eiuc_\"H(", "@eiuc_\"H(");
      contract0.m_includeExpired = true;
      Execution execution0 = new Execution();
      EWrapperMsgGenerator.execDetails((-2691), contract0, execution0);
      ContractDetails contractDetails0 = new ContractDetails();
      EWrapperMsgGenerator.contractDetails(1215, contractDetails0);
      EWrapperMsgGenerator.updateAccountTime((String) null);
      contractDetails0.m_coupon = (-2224.4306336201);
      execution0.m_liquidation = 0;
      EWrapperMsgGenerator.orderStatus(0, "5Gx", 0, 2, (-2691), 0, (-2691), (-2691), (-880), (String) null);
      EWrapperMsgGenerator.nextValidId((-880));
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.deltaNeutralValidation(13, (UnderComp) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      int int0 = 1952;
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.bondContractDetails(1952, (ContractDetails) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.updateAccountValue("Z10", "", "Z10", "Z10");
      assertEquals("updateAccountValue: Z10  Z10 Z10", string0);
      
      String string1 = EWrapperMsgGenerator.tickPrice(3007, 0, 0, 0);
      assertEquals("id=3007  bidSize=0.0  noAutoExecute", string1);
      
      String string2 = EWrapperMsgGenerator.historicalData(0, "updateMktDepth: -197 -197  projection= 0 0 0.0 2", (-321.290106606132), 1139.9, 1.7976931348623157E308, 3007, 3007, (-1), 0, true);
      assertEquals("id=0 date = updateMktDepth: -197 -197  projection= 0 0 0.0 2 open=-321.290106606132 high=1139.9 low=1.7976931348623157E308 close=3007.0 volume=3007 count=-1 WAP=0.0 hasGaps=true", string2);
      
      EWrapperMsgGenerator.execDetailsEnd((-1031));
      String string3 = EWrapperMsgGenerator.execDetailsEnd((-2101));
      assertEquals("reqId = -2101 =============== end ===============", string3);
      
      String string4 = EWrapperMsgGenerator.tickSize((-1), 713, (-1));
      assertEquals("id=-1  unknown=-1", string4);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.987739820187409
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.scannerDataEnd(0);
      assertEquals("id = 0 =============== end ===============", string0);
      
      String string1 = EWrapperMsgGenerator.tickOptionComputation((-1855), 13, (-4436.5200139), (-4436.5200139), 938.52, 13);
      assertEquals("id=-1855  modelOptComp: vol = N/A delta = N/A: modelPrice = 938.52: pvDividend = 13.0", string1);
      
      String string2 = EWrapperMsgGenerator.tickString(1804, (-1855), "id = 0 =============== end ===============");
      assertEquals("id=1804  unknown=id = 0 =============== end ===============", string2);
      
      String string3 = EWrapperMsgGenerator.realtimeBar(0, 13, (-1855), 1.0, 1.0, (-2868.523), (-12L), 1.0, 0);
      assertEquals("id=0 time = 13 open=-1855.0 high=1.0 low=1.0 close=-2868.523 volume=-12 count=0 WAP=1.0", string3);
      
      String string4 = EWrapperMsgGenerator.updateMktDepth((-1855), (-1855), (-1855), 17, 1804, 13);
      assertEquals("updateMktDepth: -1855 -1855 -1855 17 1804.0 13", string4);
      
      String string5 = EWrapperMsgGenerator.tickGeneric(1091, 1091, 1091);
      assertEquals("id=1091  unknown=1091.0", string5);
      
      String string6 = EWrapperMsgGenerator.updateNewsBulletin(1091, 0, "id=-1855  modelOptComp: vol = N/A delta = N/A: modelPrice = 938.52: pvDividend = 13.0", " EAAmv\"{zI$ =9");
      assertEquals("MsgId=1091 :: MsgType=0 :: Origin= EAAmv\"{zI$ =9 :: Message=id=-1855  modelOptComp: vol = N/A delta = N/A: modelPrice = 938.52: pvDividend = 13.0", string6);
      
      String string7 = EWrapperMsgGenerator.tickString(0, 13, "!jl25");
      assertEquals("id=0  modelOptComp=!jl25", string7);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.9213932553780415
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      EWrapperMsgGenerator.updateMktDepth((-1855), 1, (-1), 1, (-1855), (-1855));
      EWrapperMsgGenerator.scannerDataEnd(743);
      String string0 = EWrapperMsgGenerator.tickOptionComputation((-1), 13, 1.0, 1.0, 13, 743);
      EWrapperMsgGenerator.tickString(13, 743, "id=-1  modelOptComp: vol = 1.0 delta = 1.0: modelPrice = 13.0: pvDividend = 743.0");
      UnderComp underComp0 = new UnderComp();
      underComp0.m_delta = (double) (-1855);
      EWrapperMsgGenerator.deltaNeutralValidation(10, underComp0);
      EWrapperMsgGenerator.contractDetailsEnd(13);
      System.setCurrentTimeMillis(1);
      EWrapperMsgGenerator.orderStatus(13, "i2\"s/;bmqxW1Ix8&", (-1), 743, (-1855), 2146775195, (-3958), 2146775195, 0, "bX+MO@G%WYTYJd8'`MM");
      String string1 = EWrapperMsgGenerator.scannerDataEnd(10);
      assertFalse(string1.equals((Object)string0));
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Vector<Object> vector0 = new Vector<Object>();
      Contract contract0 = new Contract(1428, "MraiDY$L{Mmq?b#|*", "/~~G}3", "longName = ", 1428, "}81=ft>LO<", "", "|-]kSj$K<Da", "BAG", "", vector0, "|-]kSj$K<Da", true, "}+<v?~VV0)nD1f:(9BX", "bidSize");
      Order order0 = new Order();
      OrderState orderState0 = new OrderState();
      String string0 = EWrapperMsgGenerator.currentTime((-485L));
      assertEquals("current time = -485 (Dec 31, 1969 11:51:55 PM)", string0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickSize(3172, 0, 0);
      assertEquals("id=3172  bidSize=0", string0);
      
      String string1 = EWrapperMsgGenerator.tickPrice(99, 0, 0.0, 3172);
      assertEquals("id=99  bidSize=0.0  canAutoExecute", string1);
      
      Contract contract0 = new Contract();
      Object object0 = new Object();
      contract0.equals(object0);
      contract0.m_localSymbol = "id=3172  bidSize=0";
      String string2 = EWrapperMsgGenerator.updatePortfolio(contract0, 0, 99, 2151.98923953009, 194.59866745532, 2327.097331827747, 0, (String) null);
      assertNotNull(string2);
      assertEquals("updatePortfolio: conid = 0\nsymbol = null\nsecType = null\nexpiry = null\nstrike = 0.0\nright = null\nmultiplier = null\nexchange = null\nprimaryExch = null\ncurrency = null\nlocalSymbol = id=3172  bidSize=0\n0 99.0 2151.98923953009 194.59866745532 2327.097331827747 0.0 null", string2);
      
      String string3 = EWrapperMsgGenerator.updateMktDepthL2(0, 63, (String) null, 63, 0, 980.82472, (-943));
      assertEquals("updateMktDepth: 0 63 null 63 0 980.82472 -943", string3);
      
      String string4 = EWrapperMsgGenerator.nextValidId((-1331));
      assertEquals("Next Valid Order ID: -1331", string4);
      
      String string5 = EWrapperMsgGenerator.updateMktDepth((-1331), 3, 0, 1279, (-1331), (-110));
      assertEquals("updateMktDepth: -1331 3 0 1279 -1331.0 -110", string5);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.8040612744126205
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.updateMktDepth((-1861), 1, (-1), 1, (-1861), (-1861));
      assertEquals("updateMktDepth: -1861 1 -1 1 -1861.0 -1861", string0);
      
      String string1 = EWrapperMsgGenerator.tickOptionComputation((-1092817263), 13, (-1861), 1.7976931348623157E308, 811.0, 13);
      assertEquals("id=-1092817263  modelOptComp: vol = N/A delta = N/A: modelPrice = 811.0: pvDividend = 13.0", string1);
      
      String string2 = EWrapperMsgGenerator.scannerDataEnd(13);
      assertEquals("id = 13 =============== end ===============", string2);
      
      String string3 = EWrapperMsgGenerator.tickOptionComputation(13, 2206, 1.7976931348623157E308, (-1861), 13, (-1));
      assertEquals("id=13  unknown: vol = N/A delta = N/A", string3);
      
      String string4 = EWrapperMsgGenerator.tickString(1804, 8, "updateMktDepth: -1861 1 -1 1 -1861.0 -1861");
      assertEquals("id=1804  volume=updateMktDepth: -1861 1 -1 1 -1861.0 -1861", string4);
      
      String string5 = EWrapperMsgGenerator.tickSnapshotEnd((-3245));
      assertEquals("id=-3245 =============== end ===============", string5);
      
      String string6 = EWrapperMsgGenerator.tickGeneric(1804, 8, 0.0);
      assertEquals("id=1804  volume=0.0", string6);
      
      String string7 = EWrapperMsgGenerator.fundamentalData((-1), "id=1804  volume=updateMktDepth: -1861 1 -1 1 -1861.0 -1861");
      assertEquals("id  = -1 len = 58\nid=1804  volume=updateMktDepth: -1861 1 -1 1 -1861.0 -1861", string7);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ContractDetails contractDetails0 = new ContractDetails();
      Vector<Object> vector0 = new Vector<Object>();
      Contract contract0 = new Contract(0, "F^", " maintMargin=", "a.3!`4j|46X i", 48, (String) null, (String) null, " comboLegsDescrip=", (String) null, "m", vector0, "MKT", false, "tBU#ExSN:yH:JC?wqB", (String) null);
      Order order0 = new Order();
      OrderState orderState0 = new OrderState();
      String string0 = EWrapperMsgGenerator.receiveFA(0, " client Id=");
      assertEquals("FA: null  client Id=", string0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.orderStatus(3007, "Z10", 0, 0, 0, 0, 0, 3007, 0, "");
      assertEquals("order status: orderId=3007 clientId=0 permId=0 status=Z10 filled=0 remaining=0 avgFillPrice=0.0 lastFillPrice=3007.0 parent Id=0 whyHeld=", string0);
      
      String string1 = EWrapperMsgGenerator.tickPrice(3007, 0, 264.778938387628, (-4171));
      assertEquals("id=3007  bidSize=264.778938387628  canAutoExecute", string1);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.6868977693384444
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.updateAccountValue((String) null, (String) null, "updateMktDepth: -197 -197  projection= 0 0 0.0 2", " volume=");
      assertEquals("updateAccountValue: null null updateMktDepth: -197 -197  projection= 0 0 0.0 2  volume=", string0);
      
      String string1 = EWrapperMsgGenerator.nextValidId(0);
      assertEquals("Next Valid Order ID: 0", string1);
      
      Order order0 = new Order();
      OrderState orderState0 = new OrderState();
      OrderState orderState1 = new OrderState();
      Contract contract0 = new Contract(Integer.MAX_VALUE, "current time = ", (String) null, (String) null, 1673.371983, "com.ib.client.Util", (String) null, (String) null, (String) null, "NN~F|T#d;R", (Vector) null, (String) null, false, (String) null, "JP");
      EWrapperMsgGenerator.openOrder(2661, contract0, order0, orderState1);
      String string2 = EWrapperMsgGenerator.contractMsg(contract0);
      assertEquals("conid = 2147483647\nsymbol = current time = \nsecType = null\nexpiry = null\nstrike = 1673.371983\nright = com.ib.client.Util\nmultiplier = null\nexchange = null\nprimaryExch = null\ncurrency = null\nlocalSymbol = NN~F|T#d;R\n", string2);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.1290003949677563
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.updateMktDepth(0, 0, 0, (-1855), (-1855), 0);
      assertEquals("updateMktDepth: 0 0 0 -1855 -1855.0 0", string0);
      
      String string1 = EWrapperMsgGenerator.tickOptionComputation((-1855), (-1855), (-4436.5200139), (-4436.5200139), 938.52, (-1855));
      assertEquals("id=-1855  unknown: vol = N/A delta = N/A", string1);
      
      String string2 = EWrapperMsgGenerator.tickString(1804, (-1855), "updateMktDepth: 0 0 0 -1855 -1855.0 0");
      assertEquals("id=1804  unknown=updateMktDepth: 0 0 0 -1855 -1855.0 0", string2);
      
      String string3 = EWrapperMsgGenerator.updateAccountValue("  It does not support what-if orders.", (String) null, "notes = ", "n;^");
      assertEquals("updateAccountValue:   It does not support what-if orders. null notes =  n;^", string3);
      
      String string4 = EWrapperMsgGenerator.tickEFP((-1855), 0, (-4436.5200139), " secType=", 0.0, 13, "updateAccountValue:   It does not support what-if orders. null notes =  n;^", 109.0, 1804);
      assertEquals("id=-1855  bidSize: basisPoints = -4436.5200139/ secType= impliedFuture = 0.0 holdDays = 13 futureExpiry = updateAccountValue:   It does not support what-if orders. null notes =  n;^ dividendImpact = 109.0 dividends to expiry = 1804.0", string4);
      
      String string5 = EWrapperMsgGenerator.accountDownloadEnd((String) null);
      assertEquals("accountDownloadEnd: null", string5);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Contract contract0 = new Contract();
      contract0.m_secId = "com.ib.client.ContractDetails";
      String string0 = EWrapperMsgGenerator.orderStatus(0, (String) null, 0, 0, (-2741.93613575), 0, 0, (-1.0), 0, (String) null);
      assertEquals("order status: orderId=0 clientId=0 permId=0 status=null filled=0 remaining=0 avgFillPrice=-2741.93613575 lastFillPrice=-1.0 parent Id=0 whyHeld=null", string0);
      
      String string1 = EWrapperMsgGenerator.scannerDataEnd(99);
      assertEquals("id = 99 =============== end ===============", string1);
      
      String string2 = EWrapperMsgGenerator.contractMsg(contract0);
      assertEquals("conid = 0\nsymbol = null\nsecType = null\nexpiry = null\nstrike = 0.0\nright = null\nmultiplier = null\nexchange = null\nprimaryExch = null\ncurrency = null\nlocalSymbol = null\n", string2);
      
      contract0.m_multiplier = "order status: orderId=0 clientId=0 permId=0 status=null filled=0 remaining=0 avgFillPrice=-2741.93613575 lastFillPrice=-1.0 parent Id=0 whyHeld=null";
      String string3 = EWrapperMsgGenerator.tickPrice(99, 99, (-1.0), 0);
      assertEquals("id=99  unknown=-1.0  noAutoExecute", string3);
      
      EWrapperMsgGenerator eWrapperMsgGenerator0 = new EWrapperMsgGenerator();
      String string4 = EWrapperMsgGenerator.accountDownloadEnd("");
      assertEquals("accountDownloadEnd: ", string4);
      
      String string5 = EWrapperMsgGenerator.updateAccountValue("", "com.ib.client.ContractDetails", "", (String) null);
      assertEquals("updateAccountValue:  com.ib.client.ContractDetails  null", string5);
      
      String string6 = EWrapperMsgGenerator.tickSnapshotEnd(0);
      assertEquals("id=0 =============== end ===============", string6);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Vector<Object> vector0 = new Vector<Object>();
      Order order0 = new Order();
      String string0 = EWrapperMsgGenerator.scannerDataEnd(4032);
      assertEquals("id = 4032 =============== end ===============", string0);
      
      String string1 = EWrapperMsgGenerator.scannerParameters((String) null);
      assertEquals("SCANNER PARAMETERS:\nnull", string1);
      
      order0.m_percentOffset = (double) 0L;
      String string2 = EWrapperMsgGenerator.realtimeBar((-708), 0L, (-83), 1.7976931348623157E308, 3612.9, (-1985.0), 0, 0, 0);
      assertEquals("id=-708 time = 0 open=-83.0 high=1.7976931348623157E308 low=3612.9 close=-1985.0 volume=0 count=0 WAP=0.0", string2);
      
      String string3 = EWrapperMsgGenerator.tickEFP((-465), 2145197923, 849.9041, " ===================================\n", 0, 0, "id = 4032 =============== end ===============", 1.7976931348623157E308, 3386.4);
      assertEquals("id=-465  unknown: basisPoints = 849.9041/ ===================================\n impliedFuture = 0.0 holdDays = 0 futureExpiry = id = 4032 =============== end =============== dividendImpact = 1.7976931348623157E308 dividends to expiry = 3386.4", string3);
      
      String string4 = EWrapperMsgGenerator.historicalData(1309, (String) null, 849.9041, 0, 1.7976931348623157E308, 0.0, (-1004), 0, 3612.9, false);
      assertEquals("id=1309 date = null open=849.9041 high=0.0 low=1.7976931348623157E308 close=0.0 volume=-1004 count=0 WAP=3612.9 hasGaps=false", string4);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.81173390868372
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.updateMktDepth(2146883811, (-4111), 2146883811, 1656, (-2093.042022439051), (-1855));
      assertEquals("updateMktDepth: 2146883811 -4111 2146883811 1656 -2093.042022439051 -1855", string0);
      
      String string1 = EWrapperMsgGenerator.tickOptionComputation(46, 13, (-1092817263), 13, 2042.5245, (-1));
      assertEquals("id=46  modelOptComp: vol = N/A delta = N/A: modelPrice = 2042.5245: pvDividend = N/A", string1);
      
      EWrapperMsgGenerator.scannerDataEnd(0);
      String string2 = EWrapperMsgGenerator.tickOptionComputation(2206, (-2146458127), 13, 0.0, 2146883811, 1906.0);
      assertEquals("id=2206  unknown: vol = 13.0 delta = 0.0", string2);
      
      String string3 = EWrapperMsgGenerator.scannerDataEnd(46);
      assertEquals("id = 46 =============== end ===============", string3);
      
      EWrapperMsgGenerator.tickOptionComputation((-1855), (-867), 13, (-414.875979056), 0, 598.878);
      String string4 = EWrapperMsgGenerator.tickString((-867), 13, "h6E=nR");
      assertEquals("id=-867  modelOptComp=h6E=nR", string4);
      
      EWrapperMsgGenerator.tickSnapshotEnd(13);
      String string5 = EWrapperMsgGenerator.tickGeneric(1656, 13, 1698.4146224879);
      assertEquals("id=1656  modelOptComp=1698.4146224879", string5);
      
      String string6 = EWrapperMsgGenerator.tickSize(2146883811, (-1092817263), (-2146458127));
      assertEquals("id=2146883811  unknown=-2146458127", string6);
      
      String string7 = EWrapperMsgGenerator.tickGeneric((-2146458127), 3749, 1693.3);
      assertEquals("id=-2146458127  unknown=1693.3", string7);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.7646308653001808
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.updateMktDepth(606, (-1541), (-1855), (-1855), 1, 3166);
      assertEquals("updateMktDepth: 606 -1541 -1855 -1855 1.0 3166", string0);
      
      String string1 = EWrapperMsgGenerator.tickOptionComputation((-2258), 45, (-1.0), (-1.0), (-1541), (-4436.5200139));
      assertEquals("id=-2258  lastTimestamp: vol = N/A delta = -1.0", string1);
      
      String string2 = EWrapperMsgGenerator.scannerDataEnd((-2258));
      assertEquals("id = -2258 =============== end ===============", string2);
      
      String string3 = EWrapperMsgGenerator.tickOptionComputation(13, 1, 0.0, 0.0, (-254.0), (-1429.20545));
      assertEquals("id=13  bidPrice: vol = 0.0 delta = 0.0", string3);
      
      String string4 = EWrapperMsgGenerator.tickString(1475, 13, "SF");
      assertEquals("id=1475  modelOptComp=SF", string4);
      
      String string5 = EWrapperMsgGenerator.tickSnapshotEnd((-1855));
      assertEquals("id=-1855 =============== end ===============", string5);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.4558921533008302
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickOptionComputation((-1855), (-1855), 4062.1398873225, 1.7976931348623157E308, (-1837.47), 4104.6893);
      assertEquals("id=-1855  unknown: vol = 4062.1398873225 delta = N/A", string0);
      
      String string1 = EWrapperMsgGenerator.scannerDataEnd(13);
      assertEquals("id = 13 =============== end ===============", string1);
      
      String string2 = EWrapperMsgGenerator.tickOptionComputation((-1092817263), 13, (-1855), (-1.0), (-1092817263), 4062.1398873225);
      assertEquals("id=-1092817263  modelOptComp: vol = N/A delta = -1.0: modelPrice = N/A: pvDividend = 4062.1398873225", string2);
      
      String string3 = EWrapperMsgGenerator.tickString(8, 13, "id=-1855  unknown: vol = 4062.1398873225 delta = N/A");
      assertEquals("id=8  modelOptComp=id=-1855  unknown: vol = 4062.1398873225 delta = N/A", string3);
      
      String string4 = EWrapperMsgGenerator.tickSnapshotEnd(2146402358);
      assertEquals("id=2146402358 =============== end ===============", string4);
      
      String string5 = EWrapperMsgGenerator.tickGeneric(8, (-1092817263), 25.0);
      assertEquals("id=8  unknown=25.0", string5);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ContractDetails contractDetails0 = new ContractDetails();
      contractDetails0.m_bondType = "Or38;^Fff af";
      Vector<Object> vector0 = new Vector<Object>();
      String string0 = EWrapperMsgGenerator.tickString(8, 8, "Or38;^Fff af");
      assertEquals("id=8  volume=Or38;^Fff af", string0);
      
      String string1 = EWrapperMsgGenerator.tickSnapshotEnd((-1));
      assertEquals("id=-1 =============== end ===============", string1);
      
      String string2 = EWrapperMsgGenerator.tickGeneric(48, (-367), 48);
      assertEquals("id=48  unknown=48.0", string2);
      
      String string3 = EWrapperMsgGenerator.realtimeBar(8, 48, (-3188.95), 1457.56936569, (-3188.95), 8, (-1L), 48, Integer.MAX_VALUE);
      assertEquals("id=8 time = 48 open=-3188.95 high=1457.56936569 low=-3188.95 close=8.0 volume=-1 count=2147483647 WAP=48.0", string3);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.managedAccounts("~<Yr!?)p");
      assertEquals("Connected : The list of managed accounts are : [~<Yr!?)p]", string0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.7646308653001805
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.fundamentalData((-750), "longName = ");
      assertEquals("id  = -750 len = 11\nlongName = ", string0);
      
      String string1 = EWrapperMsgGenerator.tickOptionComputation((-455), (-750), 1.0, 109, 656.882001, (-455));
      assertEquals("id=-455  unknown: vol = 1.0 delta = N/A", string1);
      
      ContractDetails contractDetails0 = new ContractDetails();
      ContractDetails contractDetails1 = new ContractDetails();
      contractDetails1.m_orderTypes = null;
      contractDetails1.m_contractMonth = "-!4OgIzDe}6XgoR>My";
      contractDetails1.m_notes = null;
      String string2 = EWrapperMsgGenerator.scannerData(670, 0, contractDetails1, "lastEFP", "ALIASES", (String) null, "lowEFP");
      assertEquals("id = 670 rank=0 symbol=null secType=null expiry=null strike=0.0 right=null exchange=null currency=null localSymbol=null marketName=null tradingClass=null distance=lastEFP benchmark=ALIASES projection=null legsStr=lowEFP", string2);
      
      contractDetails0.m_notes = null;
      String string3 = EWrapperMsgGenerator.bondContractDetails((-1), contractDetails0);
      assertEquals("reqId = -1 ===================================\n ---- Bond Contract Details begin ----\nsymbol = null\nsecType = null\ncusip = null\ncoupon = 0.0\nmaturity = null\nissueDate = null\nratings = null\nbondType = null\ncouponType = null\nconvertible = false\ncallable = false\nputable = false\ndescAppend = null\nexchange = null\ncurrency = null\nmarketName = null\ntradingClass = null\nconid = 0\nminTick = 0.0\norderTypes = null\nvalidExchanges = null\nnextOptionDate = null\nnextOptionType = null\nnextOptionPartial = false\nnotes = null\nlongName = null\n ---- Bond Contract Details End ----\n", string3);
      
      String string4 = EWrapperMsgGenerator.nextValidId(109);
      assertEquals("Next Valid Order ID: 109", string4);
      
      String string5 = EWrapperMsgGenerator.tickOptionComputation((-750), (-1845552141), (-1845552141), (-750), (-1), (-1929.19));
      assertEquals("id=-750  unknown: vol = N/A delta = N/A", string5);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Vector<Object> vector0 = new Vector<Object>();
      Order order0 = new Order();
      String string0 = EWrapperMsgGenerator.orderStatus(519, (String) null, Integer.MAX_VALUE, 46, 0, (-2729), 318, 1.7976931348623157E308, (-293), "halted");
      assertEquals("order status: orderId=519 clientId=-293 permId=-2729 status=null filled=2147483647 remaining=46 avgFillPrice=0.0 lastFillPrice=1.7976931348623157E308 parent Id=318 whyHeld=halted", string0);
      
      String string1 = EWrapperMsgGenerator.nextValidId(1994091958);
      assertEquals("Next Valid Order ID: 1994091958", string1);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.8603036899945962
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.updateMktDepth((-1855), 1, (-1), 1, (-1855), (-1855));
      assertEquals("updateMktDepth: -1855 1 -1 1 -1855.0 -1855", string0);
      
      String string1 = EWrapperMsgGenerator.tickOptionComputation((-1092817263), 13, (-1855), 1.7976931348623157E308, 13, 13);
      assertEquals("id=-1092817263  modelOptComp: vol = N/A delta = N/A: modelPrice = 13.0: pvDividend = 13.0", string1);
      
      String string2 = EWrapperMsgGenerator.scannerDataEnd((-1));
      assertEquals("id = -1 =============== end ===============", string2);
      
      String string3 = EWrapperMsgGenerator.tickOptionComputation(1, (-1), (-2093.042022439051), 1, 0.0, (-2093.042022439051));
      assertEquals("id=1  unknown: vol = N/A delta = 1.0", string3);
      
      String string4 = EWrapperMsgGenerator.tickString(13, 2146849685, "id=1  unknown: vol = N/A delta = 1.0");
      assertEquals("id=13  unknown=id=1  unknown: vol = N/A delta = 1.0", string4);
      
      String string5 = EWrapperMsgGenerator.tickSnapshotEnd(2146849685);
      assertEquals("id=2146849685 =============== end ===============", string5);
      
      String string6 = EWrapperMsgGenerator.tickGeneric((-1994685358), (-1), 1.0);
      assertEquals("id=-1994685358  unknown=1.0", string6);
      
      String string7 = EWrapperMsgGenerator.updateAccountValue("id=2146849685 =============== end ===============", (String) null, "c\"7&q`A>tG6L", (String) null);
      assertEquals("updateAccountValue: id=2146849685 =============== end =============== null c\"7&q`A>tG6L null", string7);
  }
}
