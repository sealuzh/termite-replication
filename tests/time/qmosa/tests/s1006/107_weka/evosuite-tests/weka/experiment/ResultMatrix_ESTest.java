/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 18:23:36 GMT 2019
 */

package weka.experiment;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import weka.experiment.ResultMatrix;
import weka.experiment.ResultMatrixCSV;
import weka.experiment.ResultMatrixGnuPlot;
import weka.experiment.ResultMatrixHTML;
import weka.experiment.ResultMatrixLatex;
import weka.experiment.ResultMatrixPlainText;
import weka.experiment.ResultMatrixSignificance;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ResultMatrix_ESTest extends ResultMatrix_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.9253180939429484
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(25, 8);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      resultMatrixLatex1.WIN_STRING = "(";
      resultMatrixLatex1.toStringRanking();
      resultMatrixLatex0.getShowAverage();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      resultMatrixCSV0.m_ColNameWidth = 1;
      resultMatrixCSV0.setMeanPrec(1);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      boolean[] booleanArray0 = new boolean[9];
      booleanArray0[0] = false;
      int[] intArray0 = new int[1];
      intArray0[0] = 2;
      resultMatrixLatex0.setRowNameWidth(8);
      resultMatrixCSV0.m_RankingDiff = intArray0;
      booleanArray0[1] = false;
      booleanArray0[2] = false;
      booleanArray0[3] = false;
      booleanArray0[4] = false;
      booleanArray0[5] = false;
      booleanArray0[6] = false;
      booleanArray0[7] = false;
      booleanArray0[8] = false;
      resultMatrixSignificance0.m_RowHidden = booleanArray0;
      ResultMatrixCSV.main((String[]) null);
      resultMatrixCSV0.getColName(1);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2, 0);
      resultMatrixGnuPlot0.clear();
      resultMatrixCSV0.getShowStdDev();
      resultMatrixLatex1.getRowName(26);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.807805871103007
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getDefaultStdDevWidth();
      int[] intArray0 = new int[1];
      resultMatrixHTML0.setRemoveFilterName(true);
      intArray0[0] = 0;
      resultMatrixHTML0.setRowOrder(intArray0);
      int int0 = 0;
      resultMatrixHTML0.setSignificance(0, (-3963), 0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "Fok1_iMt";
      stringArray0[1] = ")";
      stringArray0[2] = "v";
      stringArray0[3] = "$circ$";
      resultMatrixLatex0.setOptions(stringArray0);
      int int1 = (-3);
      resultMatrixLatex0.setSignificance(1, (-3), (-1042));
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.4994041853064477
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(25, 8);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      resultMatrixLatex1.WIN_STRING = "(";
      resultMatrixLatex1.toStringRanking();
      resultMatrixLatex0.getShowAverage();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      resultMatrixCSV0.setMeanPrec(1);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      resultMatrixLatex1.setRowNameWidth(1);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixLatex0);
      resultMatrixSignificance1.getRevision();
      resultMatrixLatex0.clear();
      resultMatrixSignificance0.meanPrecTipText();
      resultMatrixLatex0.toStringKey();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2, 0);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(25, 2);
      resultMatrixGnuPlot1.toStringSummary();
      int[][] intArray0 = new int[9][0];
      int[] intArray1 = new int[1];
      intArray1[0] = 8;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[4];
      intArray2[0] = 8;
      intArray2[1] = 0;
      intArray2[2] = 0;
      intArray2[3] = 2;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[0];
      intArray0[2] = intArray3;
      int[] intArray4 = new int[0];
      intArray0[3] = intArray4;
      int[] intArray5 = new int[5];
      intArray5[0] = 1;
      intArray5[1] = 25;
      intArray5[2] = 1;
      intArray5[3] = 459;
      intArray5[4] = 2;
      intArray0[4] = intArray5;
      int[] intArray6 = new int[6];
      intArray6[0] = 0;
      intArray6[1] = 0;
      intArray6[2] = 1;
      intArray6[3] = 1604;
      intArray6[4] = 2;
      intArray6[5] = 2;
      intArray0[5] = intArray6;
      int[] intArray7 = new int[3];
      intArray7[0] = 1;
      intArray7[1] = 0;
      intArray7[2] = 1;
      intArray0[6] = intArray7;
      int[] intArray8 = new int[8];
      intArray8[0] = 25;
      intArray8[1] = 0;
      intArray8[2] = 25;
      intArray8[3] = 2;
      intArray8[4] = 25;
      intArray8[5] = (-3);
      intArray8[6] = (-1);
      intArray8[7] = 25;
      intArray0[7] = intArray8;
      int[] intArray9 = new int[6];
      intArray9[0] = 0;
      intArray9[1] = 1;
      intArray9[2] = (-3505);
      intArray9[3] = 25;
      intArray9[4] = 0;
      intArray9[5] = 0;
      intArray0[8] = intArray9;
      // Undeclared exception!
      try { 
        resultMatrixSignificance1.setSummary(intArray0, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.9578263082571445
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixGnuPlot0.assign(resultMatrixPlainText0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      resultMatrixGnuPlot0.doubleToString(1, 0);
      resultMatrixCSV0.addHeader(")", "`'ng=E\"j/X");
      resultMatrixCSV0.m_MeanPrec = (-1270);
      resultMatrixCSV0.listOptions();
      resultMatrixCSV0.toStringRanking();
      resultMatrixGnuPlot0.getDisplayCol(2);
      double[][] doubleArray0 = new double[2][5];
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = (double) 0;
      resultMatrixCSV0.padString(" ", 1);
      doubleArray1[1] = (double) (-1270);
      doubleArray1[2] = (double) 0;
      resultMatrixCSV0.setStdDevPrec(1);
      doubleArray1[3] = (double) 0;
      doubleArray1[4] = (double) 1;
      doubleArray1[5] = (double) 1;
      resultMatrixGnuPlot0.setMeanWidth((-1));
      resultMatrixGnuPlot0.setEnumerateColNames(false);
      doubleArray1[6] = (double) 0;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[1];
      doubleArray2[0] = (double) (-1270);
      doubleArray0[1] = doubleArray2;
      resultMatrixGnuPlot0.clearHeader();
      resultMatrixGnuPlot0.m_Mean = doubleArray0;
      String[] stringArray0 = new String[2];
      stringArray0[0] = " ";
      stringArray0[1] = " ";
      ResultMatrixCSV.main(stringArray0);
      resultMatrixCSV0.getColName(0);
      resultMatrixGnuPlot0.clear();
      resultMatrixCSV0.getShowStdDev();
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.1749825969176273
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixPlainText0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "v";
      stringArray0[1] = "SH7SHj-U";
      stringArray0[2] = "#set output \"plot.ps\"\n";
      stringArray0[3] = "v";
      resultMatrixPlainText1.setSize(0, 0);
      resultMatrixPlainText1.m_RowNames = stringArray0;
      resultMatrixPlainText1.getDefaultPrintColNames();
      resultMatrixPlainText0.enumerateColNamesTipText();
      resultMatrixPlainText0.getDefaultStdDevWidth();
      resultMatrixPlainText0.getDefaultSignificanceWidth();
      resultMatrixPlainText1.getColOrder();
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.488844111738452
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.m_StdDevPrec = 1165;
      resultMatrixLatex0.clearSummary();
      resultMatrixLatex0.setStdDevWidth(34);
      resultMatrixLatex0.setSignificanceWidth(97);
      resultMatrixLatex0.setStdDevPrec(97);
      resultMatrixLatex0.setCountWidth((-2137));
      boolean boolean0 = false;
      resultMatrixLatex0.padString("^\"JS^Nj5>>0![!H", (-2137), false);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = null;
      try {
        resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(97, (-1));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.9820069004908674
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getDefaultStdDevWidth();
      int[] intArray0 = new int[1];
      resultMatrixHTML0.setRemoveFilterName(true);
      intArray0[0] = 0;
      resultMatrixHTML0.setRowOrder((int[]) null);
      resultMatrixHTML0.setSignificance(0, (-3963), 0);
      resultMatrixHTML0.printRowNamesTipText();
      resultMatrixHTML0.clearHeader();
      String[] stringArray0 = new String[5];
      stringArray0[0] = " ";
      stringArray0[1] = ")";
      stringArray0[2] = "Whether to output row names or just numbers representing them.";
      stringArray0[3] = "v";
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.enumerateColNamesTipText();
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
      
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(0, 930);
      resultMatrixPlainText1.getDefaultStdDevWidth();
      resultMatrixPlainText1.getDefaultSignificanceWidth();
      assertEquals(2, resultMatrixPlainText1.getStdDevPrec());
      
      ResultMatrixCSV.main(stringArray0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixPlainText1.getRevision();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      String string0 = resultMatrixLatex1.toStringKey();
      assertEquals("\\begin{table}[thb]\n\\caption{\\label{labelname}Table Caption (Key)}\n\\scriptsize\n{\\centering\n\\begin{tabular}{cl}\\\\\n(1) & col0 \\\\\n\\end{tabular}\n}\n\\end{table}\n", string0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=4.122942530462287
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getMean(0, 0);
      resultMatrixHTML0.m_ShowAverage = false;
      resultMatrixHTML0.padString("Jn!9h/_9PbV", 0, false);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      resultMatrixCSV0.setCount(12, 0.0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "v";
      stringArray0[1] = "";
      stringArray0[2] = ")";
      stringArray0[3] = "Jn!9h/_9PbV";
      ResultMatrixLatex.main(stringArray0);
      resultMatrixCSV0.setMeanWidth(12);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 12);
      resultMatrixGnuPlot0.setPrintRowNames(false);
      resultMatrixGnuPlot0.setEnumerateColNames(false);
      String[] stringArray1 = new String[2];
      stringArray1[0] = ")";
      stringArray1[1] = "";
      resultMatrixGnuPlot0.setOptions(stringArray1);
      resultMatrixGnuPlot0.getDefaultColNameWidth();
      resultMatrixGnuPlot0.meanWidthTipText();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixCSV0);
      resultMatrixCSV1.colNameWidthTipText();
      assertEquals(12, resultMatrixCSV0.getMeanWidth());
      assertTrue(resultMatrixHTML0.getEnumerateColNames());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.709663577235252
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setMeanPrec(3);
      resultMatrixHTML0.setEnumerateColNames(false);
      resultMatrixHTML0.setRemoveFilterName(false);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixSignificance0);
      resultMatrixCSV0.listOptions();
      resultMatrixCSV0.setMeanPrec(0);
      resultMatrixCSV0.toStringSummary();
      resultMatrixCSV0.getSummaryTitle((-798));
      resultMatrixCSV0.setMean((-798), 92, (-280));
      resultMatrixCSV0.setShowAverage(false);
      resultMatrixCSV0.getDefaultRowNameWidth();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(2, 0);
      resultMatrixLatex0.setStdDevPrec(0);
      resultMatrixLatex0.getDisplayName();
      resultMatrixLatex0.getDisplayCol(2);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixLatex0);
      int int0 = resultMatrixCSV1.getCountWidth();
      assertEquals(0, resultMatrixLatex0.getStdDevPrec());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=4.025208177871339
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getDefaultStdDevWidth();
      resultMatrixHTML0.getMean(0, (-753));
      resultMatrixHTML0.padString("\tThe width of the standard deviation (0 = optimal).\n\t(default: ", 8, false);
      resultMatrixHTML0.setPrintColNames(true);
      resultMatrixHTML0.meanWidthTipText();
      resultMatrixHTML0.getDefaultEnumerateColNames();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "\tThe wid";
      stringArray0[1] = " ";
      stringArray0[2] = "Jn!9h/_9PbV";
      ResultMatrixSignificance.main(stringArray0);
      ResultMatrixSignificance resultMatrixSignificance0 = null;
      try {
        resultMatrixSignificance0 = new ResultMatrixSignificance(2, (-436));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.5515496496630603
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 0);
      double[][] doubleArray0 = new double[4][0];
      double[] doubleArray1 = new double[0];
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[2];
      doubleArray2[0] = (double) 0;
      doubleArray2[1] = (double) 2;
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[5];
      resultMatrixSignificance0.padString("w+4Ofp5W%F1", 0, false);
      doubleArray3[0] = 0.0;
      doubleArray3[1] = (double) 0;
      doubleArray3[2] = (double) 0;
      doubleArray3[3] = (double) 1;
      doubleArray3[4] = (double) 0;
      doubleArray0[2] = doubleArray3;
      resultMatrixSignificance0.setStdDevPrec(0);
      double[] doubleArray4 = new double[1];
      doubleArray4[0] = (double) 0;
      doubleArray0[3] = doubleArray4;
      resultMatrixSignificance0.m_StdDev = doubleArray0;
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getMean(0, (-3066));
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixSignificance0);
      resultMatrixLatex0.setRemoveFilterName(false);
      resultMatrixGnuPlot0.padString("w+4Ofp5W%F1", 0, false);
      resultMatrixLatex0.getRowCount();
      resultMatrixSignificance0.printColNamesTipText();
      assertEquals(0, resultMatrixSignificance0.getStdDevPrec());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.4634456677905
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixGnuPlot0.assign(resultMatrixPlainText0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      resultMatrixGnuPlot0.doubleToString(1, 0);
      resultMatrixCSV0.addHeader(")", "`'ng=E\"j/X");
      resultMatrixCSV0.m_MeanPrec = (-1270);
      resultMatrixCSV0.listOptions();
      resultMatrixCSV0.toStringRanking();
      resultMatrixGnuPlot0.getDisplayCol(2);
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) (-1270);
      doubleArray0[2] = (double) 0;
      resultMatrixCSV0.setStdDevPrec(1);
      doubleArray0[3] = (double) 0;
      doubleArray0[4] = (double) 1;
      doubleArray0[5] = (double) 1;
      resultMatrixGnuPlot0.setMeanWidth((-1));
      resultMatrixGnuPlot0.setEnumerateColNames(false);
      // Undeclared exception!
      resultMatrixPlainText0.setSize(739, 2178);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.396107466106561
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.m_MeanWidth = 11;
      resultMatrixCSV0.LOSS_STRING = null;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      resultMatrixGnuPlot0.getDefaultColNameWidth();
      double[][] doubleArray0 = new double[3][9];
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = (double) 11;
      doubleArray1[1] = (double) 2;
      doubleArray1[2] = (double) 2;
      doubleArray1[3] = (double) 2;
      resultMatrixGnuPlot0.getRowName(1);
      doubleArray1[4] = (double) 0;
      doubleArray1[5] = (double) 2;
      doubleArray1[6] = (double) 11;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[1];
      doubleArray2[0] = (double) 927;
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[3];
      doubleArray3[0] = (double) 0;
      doubleArray3[1] = (double) 0;
      doubleArray3[2] = (double) 0;
      doubleArray0[2] = doubleArray3;
      resultMatrixCSV0.m_Mean = doubleArray0;
      resultMatrixGnuPlot0.toStringKey();
      resultMatrixGnuPlot0.setEnumerateRowNames(true);
      resultMatrixGnuPlot0.getSignificance(2, 2);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixGnuPlot0);
      resultMatrixGnuPlot1.stdDevPrecTipText();
      resultMatrixGnuPlot0.toStringSummary();
      assertTrue(resultMatrixGnuPlot0.getEnumerateRowNames());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.6934721984395424
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "(";
      resultMatrixHTML0.toStringSummary();
      resultMatrixHTML0.getRevision();
      resultMatrixHTML0.setColHidden(0, false);
      resultMatrixHTML0.setPrintRowNames(true);
      resultMatrixHTML0.getRowName(39);
      int[] intArray0 = new int[1];
      intArray0[0] = 1;
      resultMatrixHTML0.setRowOrder(intArray0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      resultMatrixPlainText0.toStringKey();
      String string0 = resultMatrixPlainText0.doubleToString((-320.70794861772896), 11);
      assertEquals("-320.70794861773", string0);
      
      resultMatrixHTML0.setColName((-3415), "Key:\n");
      boolean boolean0 = resultMatrixPlainText0.isMean(1);
      assertEquals(0, resultMatrixHTML0.getColCount());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(0, resultMatrixPlainText0.getDefaultColNameWidth());
      assertTrue(resultMatrixHTML0.getPrintRowNames());
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
      assertTrue(resultMatrixPlainText0.getEnumerateColNames());
      assertFalse(resultMatrixPlainText0.getShowStdDev());
      assertEquals(0, resultMatrixPlainText0.getCountWidth());
      assertFalse(resultMatrixPlainText0.getEnumerateRowNames());
      assertEquals(25, resultMatrixPlainText0.getRowNameWidth());
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      assertEquals(0, resultMatrixHTML0.getRowCount());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.9752269832423517
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 0);
      resultMatrixGnuPlot0.doubleToString(0, 0);
      int[] intArray0 = new int[6];
      resultMatrixGnuPlot0.m_ShowAverage = false;
      intArray0[0] = 2;
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixGnuPlot0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot1);
      resultMatrixCSV0.setCount((-1733), 1);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "v";
      stringArray0[1] = "";
      ResultMatrixLatex.main(stringArray0);
      resultMatrixCSV0.setMeanWidth(2);
      ResultMatrixGnuPlot resultMatrixGnuPlot2 = null;
      try {
        resultMatrixGnuPlot2 = new ResultMatrixGnuPlot(2, (-6560));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=4.008274675856303
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.m_MeanWidth = 11;
      resultMatrixCSV0.LOSS_STRING = null;
      resultMatrixCSV0.LEFT_PARENTHESES = "`";
      resultMatrixCSV0.setCount(4046, 4046);
      String[] stringArray0 = new String[6];
      stringArray0[0] = null;
      stringArray0[1] = null;
      stringArray0[2] = " ";
      resultMatrixCSV0.setRowNameWidth(46);
      stringArray0[3] = "v";
      stringArray0[4] = null;
      stringArray0[5] = "]";
      ResultMatrixLatex.main(stringArray0);
      resultMatrixCSV0.setMeanWidth(0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(26, 11);
      resultMatrixGnuPlot0.setPrintRowNames(false);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      resultMatrixHTML0.toStringKey();
      resultMatrixGnuPlot0.setEnumerateColNames(true);
      try { 
        resultMatrixGnuPlot0.setOptions(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.core.Utils", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.5661998048224914
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(2, 943);
      resultMatrixHTML0.toStringSummary();
      resultMatrixHTML1.getRevision();
      resultMatrixHTML1.setColHidden(2, true);
      resultMatrixHTML1.setPrintRowNames(true);
      int[] intArray0 = new int[8];
      intArray0[0] = 2;
      intArray0[1] = 0;
      intArray0[2] = 2;
      intArray0[3] = 943;
      intArray0[4] = 1;
      intArray0[5] = 0;
      intArray0[6] = (-2814);
      intArray0[7] = 2;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      String string0 = resultMatrixPlainText0.toStringKey();
      assertEquals("Key:\n(1) col0\n", string0);
      
      String string1 = resultMatrixPlainText0.doubleToString(1033.214386294435, 0);
      assertFalse(resultMatrixPlainText0.getEnumerateRowNames());
      assertEquals("1033.", string1);
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(40, resultMatrixPlainText0.getRowNameWidth());
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
      
      resultMatrixHTML1.setColName(2, "-summary data not set-");
      assertTrue(resultMatrixHTML1.getPrintRowNames());
      assertEquals(943, resultMatrixHTML1.getRowCount());
      
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      boolean boolean0 = resultMatrixPlainText1.isMean(2839);
      assertFalse(boolean0);
      assertEquals(0, resultMatrixPlainText1.getDefaultMeanWidth());
      assertFalse(resultMatrixPlainText1.getRemoveFilterName());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.5679563920319937
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 0);
      String string0 = resultMatrixGnuPlot0.doubleToString(0, 0);
      int[] intArray0 = new int[6];
      intArray0[0] = 2;
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 1;
      intArray0[4] = 0;
      intArray0[5] = 0;
      resultMatrixGnuPlot0.m_ColOrder = intArray0;
      resultMatrixGnuPlot0.m_ShowStdDev = false;
      resultMatrixGnuPlot0.m_StdDevPrec = 0;
      resultMatrixGnuPlot0.getDefaultColNameWidth();
      String string1 = resultMatrixGnuPlot0.trimString("0.", 1120);
      assertTrue(string1.equals((Object)string0));
      
      resultMatrixGnuPlot0.setEnumerateRowNames(true);
      resultMatrixGnuPlot0.getSignificance((-2208), 2);
      resultMatrixGnuPlot0.stdDevPrecTipText();
      assertEquals(0, resultMatrixGnuPlot0.getColCount());
      
      resultMatrixGnuPlot0.toStringSummary();
      assertFalse(resultMatrixGnuPlot0.getDefaultShowStdDev());
      assertFalse(resultMatrixGnuPlot0.getDefaultRemoveFilterName());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(0, resultMatrixGnuPlot0.getRowCount());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.847855763280926
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.toString();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixSignificance0.assign(resultMatrixGnuPlot0);
      int int0 = 4259;
      resultMatrixSignificance0.setCount(4259, 4259);
      resultMatrixSignificance0.setMeanWidth((-3882));
      int int1 = 5;
      int int2 = 3143;
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(5, 3143);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.103250326728553
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[][] intArray0 = new int[2][2];
      int[] intArray1 = new int[2];
      intArray1[0] = 0;
      intArray1[1] = 0;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[2];
      intArray2[0] = 1;
      intArray2[1] = 1;
      intArray0[1] = intArray2;
      resultMatrixGnuPlot0.setRanking(intArray0);
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.271571848382245
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[] intArray0 = new int[9];
      resultMatrixSignificance0.m_PrintColNames = false;
      intArray0[0] = 0;
      intArray0[1] = 48;
      intArray0[2] = (-160);
      intArray0[3] = 2;
      intArray0[4] = 1;
      intArray0[5] = 0;
      resultMatrixSignificance0.m_EnumerateRowNames = false;
      resultMatrixSignificance0.addHeader("-supervised..*", "7");
      intArray0[6] = 2;
      intArray0[7] = 2;
      intArray0[8] = 1;
      resultMatrixSignificance0.m_RankingWins = intArray0;
      resultMatrixSignificance0.setStdDevWidth((-1120));
      resultMatrixSignificance0.setStdDevWidth(1);
      resultMatrixSignificance0.getColHidden(3677);
      resultMatrixSignificance0.getVisibleRowCount();
      resultMatrixSignificance0.globalInfo();
      ResultMatrixHTML resultMatrixHTML0 = null;
      try {
        resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixSignificance0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.441371012875262
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.m_StdDevPrec = (-581);
      resultMatrixLatex0.clearSummary();
      resultMatrixLatex0.setStdDevWidth((-55));
      resultMatrixLatex0.setSignificanceWidth(97);
      resultMatrixLatex0.m_PrintRowNames = true;
      resultMatrixLatex0.setStdDevPrec((-771));
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "R#t@vof8";
      stringArray0[0] = "^\"JS^Nj5>>0![!H";
      try { 
        resultMatrixLatex1.setOptions(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.core.Utils", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.7092461436652933
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.m_StdDevPrec = 1165;
      resultMatrixLatex0.toArray();
      resultMatrixLatex0.clearSummary();
      resultMatrixLatex0.setStdDevWidth((-55));
      resultMatrixLatex0.setSignificanceWidth(97);
      resultMatrixLatex0.m_PrintRowNames = true;
      resultMatrixLatex0.setStdDevPrec((-771));
      resultMatrixLatex0.setCountWidth((-2137));
      resultMatrixLatex0.padString("^\"JS^Nj5>>0![!H", 50, true);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = null;
      try {
        resultMatrixGnuPlot0 = new ResultMatrixGnuPlot((-771), 2);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.6181434349934403
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.toArray();
      int[][] intArray0 = new int[2][8];
      int[] intArray1 = new int[1];
      intArray1[0] = 2;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[7];
      intArray2[0] = 0;
      intArray2[1] = 2;
      intArray2[2] = 2;
      intArray2[3] = 2;
      // Undeclared exception!
      try { 
        resultMatrixLatex0.setRanking(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.746833193551615
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.clearSummary();
      resultMatrixHTML0.getDefaultPrintColNames();
      resultMatrixHTML0.m_ShowAverage = false;
      resultMatrixHTML0.getRevision();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixHTML0);
      Vector<Integer> vector0 = new Vector<Integer>();
      vector0.stream();
      vector0.add((Integer) 1);
      resultMatrixGnuPlot0.m_HeaderKeys = vector0;
      resultMatrixGnuPlot0.getDefaultEnumerateRowNames();
      resultMatrixHTML0.setEnumerateColNames(false);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.m_SignificanceWidth = 1;
      resultMatrixSignificance0.getDefaultShowStdDev();
      resultMatrixSignificance0.m_HeaderValues = resultMatrixGnuPlot0.m_HeaderKeys;
      resultMatrixSignificance0.getOptions();
      resultMatrixSignificance0.getSummaryTitle((-63));
      assertEquals(1, resultMatrixSignificance0.getSignificanceWidth());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.3888825529417446
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.m_HeaderValues = null;
      resultMatrixLatex0.getSummaryTitle((-3120));
      resultMatrixLatex0.setShowAverage(true);
      resultMatrixLatex0.setColOrder((int[]) null);
      int int0 = 563;
      // Undeclared exception!
      try { 
        resultMatrixLatex0.setSize((-3120), 563);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.9577527753003805
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "(";
      stringArray0[1] = ")";
      resultMatrixHTML0.m_RowNames = stringArray0;
      resultMatrixHTML0.toStringSummary();
      resultMatrixHTML0.getRevision();
      resultMatrixHTML0.setColHidden(0, true);
      resultMatrixHTML0.clear();
      resultMatrixHTML0.setPrintRowNames(true);
      resultMatrixHTML0.getRowName((-2814));
      int[] intArray0 = new int[8];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 0;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      resultMatrixSignificance0.m_EnumerateColNames = false;
      resultMatrixSignificance0.setColOrder(intArray0);
      resultMatrixSignificance0.getOptions();
      assertFalse(resultMatrixSignificance0.getEnumerateColNames());
      
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixHTML0);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(3, 1);
      resultMatrixHTML1.setColName(1, " ");
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.isMean((-1));
      assertEquals(5, resultMatrixPlainText0.getCountWidth());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.5015031405893424
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixGnuPlot0.assign(resultMatrixPlainText0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      resultMatrixGnuPlot0.doubleToString(1, 0);
      resultMatrixCSV0.addHeader(")", "`'ng=E\"j/X");
      resultMatrixCSV0.m_MeanPrec = (-1270);
      resultMatrixCSV0.listOptions();
      resultMatrixCSV0.toStringRanking();
      resultMatrixGnuPlot0.getDisplayCol(2);
      double[][] doubleArray0 = new double[2][5];
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = (double) 0;
      doubleArray1[1] = (double) (-1270);
      doubleArray1[2] = (double) 0;
      resultMatrixCSV0.setStdDevPrec(1);
      doubleArray1[3] = (double) 0;
      doubleArray1[4] = (double) 1;
      doubleArray1[5] = (double) 1;
      resultMatrixGnuPlot0.setMeanWidth((-1));
      resultMatrixGnuPlot0.setEnumerateColNames(false);
      doubleArray1[6] = (double) 0;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[1];
      doubleArray2[0] = (double) (-1270);
      doubleArray0[1] = doubleArray2;
      resultMatrixGnuPlot0.clearHeader();
      resultMatrixGnuPlot0.m_Mean = doubleArray0;
      String[] stringArray0 = new String[2];
      resultMatrixGnuPlot0.setEnumerateColNames(false);
      try { 
        resultMatrixGnuPlot0.setOptions(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.core.Utils", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.020056464274406
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.toStringRanking();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      int[][] intArray0 = new int[8][8];
      int[] intArray1 = new int[2];
      intArray1[0] = 0;
      intArray1[1] = 3;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[7];
      intArray2[0] = 3;
      intArray2[1] = 0;
      intArray2[2] = 2;
      intArray2[3] = 0;
      intArray2[4] = 1;
      intArray2[5] = 3;
      intArray2[6] = 1;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[0];
      intArray0[2] = intArray3;
      int[] intArray4 = new int[1];
      intArray4[0] = (-2875);
      intArray0[3] = intArray4;
      int[] intArray5 = new int[4];
      intArray5[0] = 1;
      intArray5[1] = 1;
      intArray5[2] = 1;
      intArray5[3] = 0;
      intArray0[4] = intArray5;
      int[] intArray6 = new int[1];
      intArray6[0] = 2;
      intArray0[5] = intArray6;
      int[] intArray7 = new int[2];
      intArray7[0] = 0;
      intArray7[1] = 2;
      intArray0[6] = intArray7;
      int[] intArray8 = new int[2];
      intArray8[0] = 2;
      intArray8[1] = (-2875);
      intArray0[7] = intArray8;
      resultMatrixHTML0.m_Wins = intArray0;
      // Undeclared exception!
      try { 
        resultMatrixHTML0.assign((ResultMatrix) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.995447316897821
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.m_MeanWidth = 11;
      resultMatrixCSV0.LOSS_STRING = null;
      resultMatrixCSV0.LEFT_PARENTHESES = "`";
      resultMatrixCSV0.setCount(4046, 4046);
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      
      String[] stringArray0 = new String[6];
      stringArray0[0] = null;
      stringArray0[1] = null;
      stringArray0[2] = " ";
      stringArray0[3] = "v";
      stringArray0[4] = null;
      stringArray0[5] = "]";
      ResultMatrixLatex.main(stringArray0);
      resultMatrixCSV0.setMeanWidth(0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(26, 11);
      resultMatrixGnuPlot0.setPrintRowNames(false);
      ResultMatrixCSV.main(stringArray0);
      resultMatrixCSV0.getColName(1351);
      resultMatrixGnuPlot0.clear();
      resultMatrixCSV0.getShowStdDev();
      assertTrue(resultMatrixCSV0.getEnumerateColNames());
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixGnuPlot0);
      resultMatrixLatex0.getDefaultPrintColNames();
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(50, resultMatrixLatex0.getRowNameWidth());
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      
      int int0 = resultMatrixGnuPlot0.getMeanPrec();
      assertEquals(2, int0);
      assertFalse(resultMatrixGnuPlot0.getShowAverage());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=4.0111917399032055
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.m_MeanWidth = 11;
      resultMatrixCSV0.LOSS_STRING = null;
      resultMatrixCSV0.RIGHT_PARENTHESES = "`";
      resultMatrixCSV0.setCount(4046, 4046);
      String[] stringArray0 = new String[6];
      stringArray0[0] = null;
      stringArray0[1] = null;
      stringArray0[2] = " ";
      stringArray0[3] = "v";
      stringArray0[4] = null;
      stringArray0[5] = "`";
      ResultMatrixLatex.main(stringArray0);
      resultMatrixCSV0.setMeanWidth(0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(26, 11);
      resultMatrixCSV0.getDefaultRowNameWidth();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 37);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(26, 34);
      resultMatrixLatex1.setStdDevPrec(4046);
      resultMatrixLatex0.getDisplayName();
      resultMatrixLatex1.getDisplayCol(37);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      resultMatrixCSV0.getCountWidth();
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=3.5846045663369925
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "(";
      stringArray0[1] = ")";
      resultMatrixHTML0.m_RowNames = stringArray0;
      resultMatrixHTML0.toStringSummary();
      resultMatrixHTML0.getRevision();
      resultMatrixHTML0.setColHidden(0, true);
      resultMatrixHTML0.clear();
      resultMatrixHTML0.setPrintRowNames(true);
      String string0 = resultMatrixHTML0.getRowName((-2814));
      assertNull(string0);
      
      int[] intArray0 = new int[8];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 0;
      intArray0[4] = (-2814);
      resultMatrixHTML0.m_StdDevWidth = (-3415);
      intArray0[5] = (-2814);
      intArray0[6] = 0;
      intArray0[7] = 2;
      resultMatrixHTML0.setRowOrder(intArray0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      resultMatrixHTML0.getPrintColNames();
      resultMatrixPlainText0.toStringKey();
      String string1 = resultMatrixPlainText0.doubleToString((-2482.61645), 2);
      assertEquals("-2482.62", string1);
      
      resultMatrixHTML0.setColName(1, "(");
      boolean boolean0 = resultMatrixPlainText0.isMean(507);
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals((-3415), resultMatrixPlainText0.getStdDevWidth());
      assertEquals(0, resultMatrixPlainText0.getCountWidth());
      assertTrue(resultMatrixPlainText0.getEnumerateColNames());
      assertFalse(boolean0);
      assertTrue(resultMatrixPlainText0.getPrintRowNames());
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      assertFalse(resultMatrixPlainText0.getDefaultRemoveFilterName());
      assertFalse(resultMatrixPlainText0.getEnumerateRowNames());
      assertEquals(25, resultMatrixPlainText0.getRowNameWidth());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.7846133702475315
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      resultMatrixSignificance0.setRemoveFilterName(false);
      resultMatrixSignificance0.getDefaultPrintColNames();
      resultMatrixSignificance0.toStringMatrix();
      resultMatrixSignificance0.setShowStdDev(false);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[] intArray0 = new int[0];
      resultMatrixCSV0.m_RankingLosses = intArray0;
      resultMatrixCSV0.m_EnumerateRowNames = false;
      resultMatrixCSV0.m_MeanPrec = 0;
      // Undeclared exception!
      try { 
        resultMatrixCSV0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.9541770713796134
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setRemoveFilterName(true);
      resultMatrixHTML0.m_ColNameWidth = 3494;
      String[] stringArray0 = new String[1];
      resultMatrixHTML0.m_ColNameWidth = 526;
      resultMatrixHTML0.setPrintColNames(true);
      stringArray0[0] = ")";
      resultMatrixHTML0.m_ColNames = stringArray0;
      resultMatrixHTML0.setCountWidth((-1));
      resultMatrixHTML0.getSignificanceWidth();
      resultMatrixHTML0.getRowOrder();
      resultMatrixHTML0.setRowNameWidth((-1));
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getDefaultPrintColNames();
      resultMatrixSignificance0.toStringMatrix();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.m_PrintRowNames = true;
      resultMatrixPlainText0.getRevision();
      resultMatrixSignificance0.m_ColOrder = null;
      resultMatrixHTML0.setRowHidden(97, true);
      resultMatrixSignificance0.getSummaryTitle((-3005));
      resultMatrixPlainText0.setColName((-1), "Resultset & Wins$-$ & Wins & Losses \\\n& Losses & & \\\nhline\n");
      resultMatrixHTML0.getMean(17, 1116);
      resultMatrixSignificance0.getDefaultPrintColNames();
      resultMatrixHTML0.toStringKey();
      assertTrue(resultMatrixHTML0.getRemoveFilterName());
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getDefaultPrintColNames();
      assertEquals(0, resultMatrixLatex0.getDefaultRowNameWidth());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.8332203827361884
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setRowName(5, "L4Z8RyIzu");
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      boolean[] booleanArray0 = new boolean[8];
      booleanArray0[0] = false;
      booleanArray0[1] = true;
      booleanArray0[2] = false;
      int[] intArray0 = new int[5];
      intArray0[0] = 2;
      intArray0[1] = 2;
      intArray0[2] = 2;
      intArray0[3] = 0;
      intArray0[4] = 0;
      resultMatrixHTML0.m_RankingWins = intArray0;
      booleanArray0[3] = true;
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "L4Z8RyIzu";
      resultMatrixPlainText0.m_PrintColNames = false;
      stringArray0[1] = "*";
      stringArray0[2] = "*";
      stringArray0[3] = "L4Z8RyIzu";
      resultMatrixLatex0.setOptions(stringArray0);
      resultMatrixLatex0.setSignificance((-855), 0, 2018);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=4.068398927108272
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setRemoveFilterName(true);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      int[] intArray0 = new int[9];
      intArray0[0] = 2;
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 0;
      intArray0[4] = 2;
      intArray0[5] = 0;
      intArray0[6] = 2;
      intArray0[7] = 2;
      intArray0[8] = 0;
      resultMatrixHTML1.setRowOrder(intArray0);
      resultMatrixHTML0.setSignificance(721, 721, 34);
      resultMatrixHTML0.printRowNamesTipText();
      resultMatrixHTML1.clearHeader();
      ResultMatrixHTML.main((String[]) null);
      resultMatrixHTML0.enumerateRowNamesTipText();
      resultMatrixHTML1.isStdDev(2);
      // Undeclared exception!
      try { 
        resultMatrixHTML0.setRanking((int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.4475969268067588
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.m_RowHidden = null;
      resultMatrixPlainText0.getSummaryTitle(0);
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.toStringMatrix();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.2834713987917805
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixSignificance0);
      resultMatrixSignificance1.addHeader(")", "*");
      double[][] doubleArray0 = new double[2][3];
      double[] doubleArray1 = new double[6];
      doubleArray1[0] = 0.0;
      doubleArray1[1] = (double) 1;
      doubleArray1[2] = (double) 0;
      doubleArray1[3] = (double) 1;
      doubleArray1[4] = (double) 0;
      doubleArray1[5] = (double) 0;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[9];
      doubleArray2[0] = (double) 1;
      doubleArray2[1] = (double) 0;
      doubleArray2[2] = (double) 1;
      doubleArray2[3] = (double) 0;
      doubleArray2[4] = (double) 1;
      doubleArray2[5] = (double) 0;
      doubleArray2[6] = (double) 1;
      doubleArray2[7] = (double) 1;
      doubleArray2[8] = 0.0;
      doubleArray0[1] = doubleArray2;
      resultMatrixSignificance1.m_StdDev = doubleArray0;
      resultMatrixSignificance1.setPrintRowNames(true);
      String string0 = resultMatrixSignificance1.toStringKey();
      assertEquals("Key:\n(1) col0\n", string0);
      
      resultMatrixSignificance1.globalInfo();
      assertEquals(2, resultMatrixSignificance1.getStdDevPrec());
      assertEquals(0, resultMatrixSignificance1.getStdDevWidth());
      assertEquals(0, resultMatrixSignificance1.getCountWidth());
      assertEquals(40, resultMatrixSignificance1.getRowNameWidth());
      assertTrue(resultMatrixSignificance1.getPrintRowNames());
      assertEquals(1, resultMatrixSignificance1.getRowCount());
      assertEquals(0, resultMatrixSignificance1.getSignificanceWidth());
      assertEquals(0, resultMatrixSignificance1.getMeanWidth());
      assertEquals(0, resultMatrixSignificance1.getDefaultColNameWidth());
      assertEquals(2, resultMatrixSignificance1.getMeanPrec());
      assertTrue(resultMatrixSignificance1.getEnumerateColNames());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.4842037997477715
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setStdDevPrec(0);
      resultMatrixLatex0.m_EnumerateRowNames = false;
      resultMatrixLatex0.m_RowNameWidth = 470;
      resultMatrixLatex0.significanceWidthTipText();
      int[] intArray0 = new int[8];
      intArray0[0] = 1;
      intArray0[1] = 470;
      intArray0[2] = (-3811);
      intArray0[3] = (-3811);
      intArray0[4] = 1;
      intArray0[5] = (-3811);
      intArray0[6] = (-3811);
      intArray0[7] = 2;
      resultMatrixLatex0.m_RankingWins = intArray0;
      resultMatrixLatex0.setRowName((-3811), "The width of the significance indicator (0 = optimal).");
      resultMatrixLatex0.addHeader("The width of the significance indicator (0 = optimal).", "\tWhether to output row names or just numbers representing them.\n\t(default: no)");
      String[][] stringArray0 = new String[2][4];
      String[] stringArray1 = new String[3];
      stringArray1[0] = "9M]SQ:6B}tiz`";
      stringArray1[1] = "The width of the significance indicator (0 = optimal).";
      stringArray1[2] = ")";
      stringArray0[0] = stringArray1;
      String[] stringArray2 = new String[1];
      stringArray2[0] = "\tWhether to output row names or just numbers representing them.\n\t(default: no)";
      stringArray0[1] = stringArray2;
      resultMatrixLatex0.getColSize(stringArray0, (-3811), false, false);
      assertEquals(0, resultMatrixLatex0.getStdDevPrec());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=3.3844251966992696
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setRowName(5, "L4Z8RyIzu");
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      boolean[] booleanArray0 = new boolean[8];
      booleanArray0[0] = false;
      booleanArray0[1] = true;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixHTML0);
      resultMatrixPlainText0.toStringKey();
      // Undeclared exception!
      try { 
        resultMatrixPlainText1.doubleToString(0.0, (-503));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.6568841518983346
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setStdDevPrec(0);
      resultMatrixLatex0.m_EnumerateRowNames = false;
      resultMatrixLatex0.m_RowNameWidth = 470;
      resultMatrixLatex0.significanceWidthTipText();
      int[] intArray0 = new int[8];
      intArray0[0] = 1;
      intArray0[1] = 470;
      intArray0[2] = (-3811);
      intArray0[3] = (-3811);
      intArray0[4] = 1;
      intArray0[5] = (-3811);
      intArray0[6] = (-3811);
      intArray0[7] = 2;
      resultMatrixLatex0.m_RankingWins = intArray0;
      resultMatrixLatex0.setRowName((-3811), "The width of the significance indicator (0 = optimal).");
      resultMatrixLatex0.addHeader("The width of the significance indicator (0 = optimal).", "\tWhether to output row names or just numbers representing them.\n\t(default: no)");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "9M]SQ:6B}tiz`";
      stringArray0[1] = "The width of the significance indicator (0 = optimal).";
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setPrintRowNames(false);
      resultMatrixGnuPlot0.setEnumerateColNames(false);
      try { 
        resultMatrixGnuPlot0.setOptions(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.core.Utils", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.518222566191191
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setMeanPrec(3);
      resultMatrixHTML0.setEnumerateColNames(false);
      resultMatrixHTML0.setRemoveFilterName(false);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixSignificance0);
      resultMatrixCSV0.listOptions();
      resultMatrixCSV0.setMeanPrec(0);
      resultMatrixCSV0.toStringSummary();
      resultMatrixCSV0.getSummaryTitle((-798));
      resultMatrixCSV0.setMean((-798), 92, (-280));
      resultMatrixCSV0.setShowAverage(false);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      resultMatrixGnuPlot0.setPrintRowNames(false);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixHTML0);
      resultMatrixGnuPlot1.setEnumerateColNames(true);
      String[] stringArray0 = new String[6];
      stringArray0[0] = ")";
      stringArray0[1] = "(";
      resultMatrixGnuPlot1.RIGHT_PARENTHESES = "*";
      stringArray0[3] = "*";
      stringArray0[4] = ")";
      stringArray0[5] = "v";
      try { 
        resultMatrixGnuPlot0.setOptions(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.core.Utils", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=3.2835771243875627
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 0);
      resultMatrixSignificance0.clearHeader();
      int[] intArray0 = new int[8];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 2;
      intArray0[3] = 2;
      intArray0[4] = 1;
      intArray0[5] = 0;
      intArray0[6] = 1;
      intArray0[7] = 0;
      resultMatrixSignificance0.m_RankingWins = intArray0;
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.toStringSummary();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=4.0070656699545895
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 0);
      double[][] doubleArray0 = new double[4][0];
      double[] doubleArray1 = new double[0];
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[2];
      doubleArray2[0] = (double) 0;
      doubleArray2[1] = (double) 2;
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[5];
      resultMatrixSignificance0.padString("w+4Ofp5W%F1", 0, false);
      doubleArray3[0] = 0.0;
      doubleArray3[1] = (double) 0;
      doubleArray3[2] = (double) 0;
      doubleArray3[3] = (double) 1;
      doubleArray3[4] = (double) 0;
      doubleArray0[2] = doubleArray3;
      resultMatrixSignificance0.setStdDevPrec(0);
      double[] doubleArray4 = new double[1];
      doubleArray4[0] = (double) 0;
      doubleArray0[3] = doubleArray4;
      resultMatrixSignificance0.m_StdDev = doubleArray0;
      resultMatrixSignificance0.setPrintColNames(true);
      String[] stringArray0 = resultMatrixSignificance0.getOptions();
      resultMatrixSignificance0.getDefaultRowNameWidth();
      assertEquals(0, resultMatrixSignificance0.getVisibleRowCount());
      
      ResultMatrixCSV.main(stringArray0);
      assertEquals(19, stringArray0.length);
      
      resultMatrixSignificance0.clearHeader();
      assertFalse(resultMatrixSignificance0.getShowAverage());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=3.8995414500590377
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "(";
      stringArray0[1] = ")";
      resultMatrixHTML0.m_RowNames = stringArray0;
      resultMatrixHTML0.toStringSummary();
      resultMatrixHTML0.getRevision();
      resultMatrixHTML0.setColHidden(0, true);
      resultMatrixHTML0.clear();
      resultMatrixHTML0.setPrintRowNames(true);
      resultMatrixHTML0.getRowName((-2814));
      assertEquals(2, resultMatrixHTML0.getRowCount());
      
      int[] intArray0 = new int[8];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 0;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      resultMatrixSignificance0.m_EnumerateColNames = true;
      resultMatrixSignificance0.setColOrder(intArray0);
      resultMatrixSignificance0.getOptions();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixHTML0);
      resultMatrixSignificance1.m_StdDevWidth = 2178;
      resultMatrixSignificance1.setColNameWidth(0);
      assertEquals(0, resultMatrixSignificance1.getCountWidth());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=3.6936837529369817
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[][] intArray0 = new int[2][2];
      int[] intArray1 = new int[2];
      intArray1[0] = 0;
      intArray1[1] = 0;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[2];
      intArray2[0] = 1;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      resultMatrixSignificance0.setColOrder(intArray1);
      resultMatrixSignificance0.getOptions();
      resultMatrixSignificance0.setColNameWidth(321);
      assertEquals(321, resultMatrixSignificance0.getColNameWidth());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=3.9251066034296516
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixPlainText0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "v";
      stringArray0[1] = "SH7SHj-U";
      stringArray0[2] = "#set output \"plot.ps\"\n";
      stringArray0[3] = "v";
      resultMatrixPlainText1.setSize(0, 0);
      resultMatrixPlainText1.m_RowNames = stringArray0;
      resultMatrixPlainText1.getDefaultPrintColNames();
      resultMatrixPlainText0.enumerateColNamesTipText();
      ResultMatrixCSV.main(resultMatrixPlainText1.m_RowNames);
      ResultMatrixCSV resultMatrixCSV0 = null;
      try {
        resultMatrixCSV0 = new ResultMatrixCSV(97, (-1284));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=4.075297118770371
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getDefaultStdDevWidth();
      int[] intArray0 = new int[1];
      resultMatrixHTML0.setRemoveFilterName(true);
      intArray0[0] = 0;
      resultMatrixHTML0.setRowOrder(intArray0);
      resultMatrixHTML0.setSignificance(0, (-3963), 0);
      resultMatrixHTML0.printRowNamesTipText();
      resultMatrixHTML0.clearHeader();
      String[] stringArray0 = new String[5];
      stringArray0[0] = " ";
      stringArray0[1] = ")";
      stringArray0[2] = "Whether to output row names or just numbers representing them.";
      stringArray0[3] = "v";
      stringArray0[4] = ")";
      ResultMatrixHTML.main(stringArray0);
      resultMatrixHTML0.m_ColNameWidth = 0;
      resultMatrixHTML0.m_StdDevWidth = 0;
      resultMatrixHTML0.enumerateRowNamesTipText();
      resultMatrixHTML0.isStdDev(0);
      // Undeclared exception!
      try { 
        resultMatrixHTML0.setRanking((int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=4.058604927266176
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getMean(0, 0);
      resultMatrixHTML0.m_ShowAverage = false;
      resultMatrixHTML0.padString("Jn!9h/_9PbV", 0, false);
      resultMatrixHTML0.setPrintColNames(true);
      resultMatrixHTML0.meanWidthTipText();
      resultMatrixHTML0.getDefaultEnumerateColNames();
      String[] stringArray0 = new String[5];
      stringArray0[0] = ")";
      stringArray0[1] = " ";
      stringArray0[2] = "The width of the mean (0 = optimal).";
      stringArray0[3] = "v";
      stringArray0[4] = "*";
      ResultMatrixSignificance.main(stringArray0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 0);
      resultMatrixSignificance0.toStringRanking();
      ResultMatrixHTML.main(stringArray0);
      resultMatrixHTML0.enumerateRowNamesTipText();
      resultMatrixHTML0.isStdDev(3);
      // Undeclared exception!
      try { 
        resultMatrixHTML0.setRanking((int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=3.8756262592751254
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setEnumerateRowNames(true);
      resultMatrixHTML0.getMean(0, 0);
      resultMatrixHTML0.m_ShowAverage = false;
      resultMatrixHTML0.padString("Jn!9h/_9PbV", 0, false);
      int[] intArray0 = new int[1];
      intArray0[0] = 1;
      resultMatrixHTML0.m_RankingLosses = intArray0;
      resultMatrixHTML0.setPrintColNames(true);
      resultMatrixHTML0.meanWidthTipText();
      resultMatrixHTML0.getDefaultEnumerateColNames();
      String[] stringArray0 = new String[5];
      stringArray0[0] = ")";
      stringArray0[1] = " ";
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      int[] intArray1 = new int[4];
      intArray1[0] = 2;
      intArray1[1] = 0;
      intArray1[2] = 2;
      intArray1[3] = 2;
      resultMatrixSignificance0.setColOrder(intArray1);
      resultMatrixSignificance0.getOptions();
      resultMatrixSignificance0.setColNameWidth(2);
      resultMatrixSignificance0.getRevision();
      assertFalse(resultMatrixSignificance0.getDefaultEnumerateRowNames());
      assertTrue(resultMatrixHTML0.getEnumerateRowNames());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=3.3815696501104067
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixCSV0);
      resultMatrixPlainText0.setMeanPrec(2);
      resultMatrixPlainText0.getStdDevPrec();
      resultMatrixCSV0.getDefaultSignificanceWidth();
      int int0 = 40;
      resultMatrixCSV0.m_RemoveFilterName = true;
      resultMatrixCSV0.isStdDev(40);
      resultMatrixPlainText0.getDisplayRow(122);
      int int1 = 16;
      resultMatrixPlainText0.setColHidden(16, false);
      resultMatrixPlainText0.setRowName((-1), "v");
      int int2 = (-531);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = null;
      try {
        resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(28, (-531));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=3.3899736097617774
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 2640);
      boolean[] booleanArray0 = new boolean[9];
      booleanArray0[0] = true;
      booleanArray0[1] = false;
      booleanArray0[2] = false;
      booleanArray0[3] = false;
      booleanArray0[4] = false;
      booleanArray0[5] = false;
      booleanArray0[6] = true;
      booleanArray0[7] = false;
      int[] intArray0 = new int[4];
      intArray0[0] = 1;
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 125;
      resultMatrixCSV0.setRowOrder(intArray0);
      booleanArray0[8] = true;
      resultMatrixCSV0.m_ColHidden = booleanArray0;
      resultMatrixCSV0.getDefaultRowNameWidth();
      int int0 = resultMatrixCSV0.getStdDevPrec();
      assertEquals(0, resultMatrixCSV0.getColNameWidth());
      assertEquals(0, resultMatrixCSV0.getColCount());
      assertFalse(resultMatrixCSV0.getDefaultRemoveFilterName());
      assertEquals(2, int0);
      assertEquals(0, resultMatrixCSV0.getDefaultCountWidth());
      assertEquals(2640, resultMatrixCSV0.getRowCount());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=3.4603996182228984
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "(";
      resultMatrixHTML0.getRevision();
      assertEquals(0, resultMatrixHTML0.getRowCount());
      
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixHTML0);
      resultMatrixHTML1.setColHidden(2274, true);
      resultMatrixHTML0.setPrintRowNames(true);
      resultMatrixHTML1.getRowName((-2814));
      ResultMatrixHTML resultMatrixHTML2 = new ResultMatrixHTML();
      int[] intArray0 = new int[6];
      intArray0[0] = 0;
      intArray0[1] = 20;
      intArray0[2] = (-3415);
      intArray0[3] = 0;
      intArray0[4] = 0;
      intArray0[5] = 1;
      resultMatrixHTML2.setRowOrder(intArray0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML2);
      String string0 = resultMatrixPlainText0.doubleToString(20, 22);
      assertEquals("20.0000000000000000000000", string0);
      
      resultMatrixHTML0.setColName(10, " ");
      boolean boolean0 = resultMatrixPlainText0.isMean(2422);
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(0, resultMatrixPlainText0.getCountWidth());
      assertTrue(boolean0);
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      assertTrue(resultMatrixPlainText0.getPrintRowNames());
      assertEquals(25, resultMatrixPlainText0.getRowNameWidth());
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(1, resultMatrixHTML2.getRowCount());
      assertTrue(resultMatrixPlainText0.getEnumerateColNames());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=3.2910358629127177
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(97, 2);
      resultMatrixPlainText0.trimString("", 2304);
      assertEquals(0, resultMatrixPlainText0.getColNameWidth());
      assertFalse(resultMatrixPlainText0.getRemoveFilterName());
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      assertEquals(97, resultMatrixPlainText0.getColCount());
      assertFalse(resultMatrixPlainText0.getShowStdDev());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(2, resultMatrixPlainText0.getRowCount());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=3.2282744338409093
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String[][] stringArray0 = new String[2][7];
      int[][] intArray0 = new int[0][7];
      resultMatrixHTML0.m_HeaderValues = null;
      // Undeclared exception!
      try { 
        resultMatrixHTML0.setSummary((int[][]) null, intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=3.942238716847322
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "{centering\n";
      stringArray0[1] = "setColOrder: length does not match (";
      stringArray0[2] = ";!$mb{`vvKRJKD";
      stringArray0[3] = "";
      stringArray0[4] = "#set output \"plot.ps\"\n";
      stringArray0[5] = "";
      stringArray0[6] = "";
      stringArray0[7] = "";
      stringArray0[8] = "";
      ResultMatrixGnuPlot.main(stringArray0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.padString("", 0, true);
      assertEquals(0, resultMatrixLatex0.getRowNameWidth());
      assertTrue(resultMatrixLatex0.getEnumerateColNames());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=3.3417291421646933
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.showAverageTipText();
      resultMatrixSignificance0.getRevision();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      double[][] doubleArray0 = new double[7][9];
      double[] doubleArray1 = new double[5];
      doubleArray1[0] = (double) 0;
      doubleArray1[1] = (double) 2;
      doubleArray1[2] = (double) 2;
      doubleArray1[3] = (double) 0;
      doubleArray1[4] = (double) 2;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[1];
      doubleArray2[0] = (double) 1;
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[5];
      doubleArray3[0] = (double) 1;
      doubleArray3[1] = (double) 0;
      doubleArray3[2] = (double) 2;
      doubleArray3[3] = (double) 2;
      doubleArray3[4] = (double) 1;
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[9];
      doubleArray4[0] = (double) 0;
      doubleArray4[1] = (double) 1;
      doubleArray4[2] = (double) 0;
      doubleArray4[3] = (double) 2;
      doubleArray4[4] = (double) 0;
      doubleArray4[5] = (double) 0;
      doubleArray4[6] = (double) 1;
      doubleArray4[7] = (double) 1;
      doubleArray4[8] = (double) 2;
      doubleArray0[3] = doubleArray4;
      double[] doubleArray5 = new double[5];
      doubleArray5[0] = (double) 0;
      doubleArray5[1] = (double) 0;
      doubleArray5[2] = (double) 0;
      doubleArray5[3] = (double) 2;
      doubleArray5[4] = (double) 2;
      doubleArray0[4] = doubleArray5;
      double[] doubleArray6 = new double[1];
      doubleArray6[0] = (double) 0;
      doubleArray0[5] = doubleArray6;
      double[] doubleArray7 = new double[4];
      doubleArray7[0] = (double) 0;
      doubleArray7[1] = (double) 2;
      doubleArray7[2] = (double) 1;
      doubleArray7[3] = (double) 2;
      doubleArray0[6] = doubleArray7;
      resultMatrixPlainText0.m_Mean = doubleArray0;
      resultMatrixPlainText0.getDefaultCountWidth();
      assertEquals(1, resultMatrixPlainText0.getColCount());
      assertTrue(resultMatrixPlainText0.getPrintRowNames());
      assertTrue(resultMatrixPlainText0.getEnumerateColNames());
      assertEquals(1, resultMatrixPlainText0.getRowCount());
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
      assertEquals(2, resultMatrixPlainText0.getDefaultMeanPrec());
      assertEquals(0, resultMatrixPlainText0.getDefaultSignificanceWidth());
      assertFalse(resultMatrixPlainText0.getRemoveFilterName());
      assertEquals(2, resultMatrixPlainText0.getDefaultStdDevPrec());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=3.9547599435226886
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixPlainText0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "v";
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText1);
      resultMatrixCSV0.listOptions();
      resultMatrixCSV0.toStringRanking();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getDisplayCol(0);
      resultMatrixCSV0.setStdDevPrec(0);
      resultMatrixGnuPlot0.setMeanWidth((-2373));
      resultMatrixGnuPlot0.setEnumerateColNames(true);
      resultMatrixGnuPlot0.clearHeader();
      assertTrue(resultMatrixGnuPlot0.getEnumerateColNames());
      
      ResultMatrixCSV.main(stringArray0);
      resultMatrixCSV0.getColName(125);
      resultMatrixGnuPlot0.clear();
      resultMatrixCSV0.getShowStdDev();
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=3.988403762060197
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.countWidthTipText();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "(";
      stringArray0[1] = "";
      stringArray0[2] = ")";
      int[] intArray0 = new int[8];
      intArray0[0] = 1;
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 2;
      ResultMatrixLatex.main(stringArray0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(2, 948);
      resultMatrixCSV0.setMeanWidth(948);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 1);
      resultMatrixGnuPlot0.setPrintRowNames(false);
      resultMatrixGnuPlot0.setEnumerateColNames(true);
      try { 
        resultMatrixGnuPlot0.setOptions(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.core.Utils", e);
      }
  }
}
