/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 18:54:08 GMT 2019
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.853642271686498
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":=pG%=$4I");
      xPathLexer0.and();
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      assertEquals(":=", token0.getTokenText());
      
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.rightParen();
      assertEquals("%", token1.getTokenText());
      assertEquals(2, token1.getTokenType());
      
      Token token2 = xPathLexer0.comma();
      assertEquals(32, token2.getTokenType());
      assertEquals("=", token2.getTokenText());
      
      xPathLexer0.setXPath("Zt\"kZMY");
      Token token3 = xPathLexer0.nextToken();
      assertEquals("Zt", token3.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token4 = xPathLexer1.dollar();
      assertEquals(26, token4.getTokenType());
      
      Token token5 = xPathLexer0.identifierOrOperatorName();
      assertNull(token5);
      
      int int0 = xPathLexer1.endPosition();
      assertEquals(0, int0);
      
      Token token6 = xPathLexer0.identifier();
      assertEquals(15, token6.getTokenType());
      assertEquals("", token6.getTokenText());
      
      Token token7 = xPathLexer1.rightBracket();
      assertEquals(4, token7.getTokenType());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.0362590466036847
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.div();
      xPathLexer0.nextToken();
      xPathLexer0.slashes();
      xPathLexer0.isIdentifierChar('\"');
      xPathLexer0.or();
      xPathLexer0.dollar();
      xPathLexer0.and();
      xPathLexer0.colon();
      xPathLexer0.plus();
      xPathLexer0.setXPath("tlFSbaTFAnj-)qN%}");
      xPathLexer0.number();
      xPathLexer0.doubleColon();
      xPathLexer0.nextToken();
      xPathLexer0.rightParen();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.9412087368514575
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.comma();
      xPathLexer0.nextToken();
      xPathLexer0.isIdentifierChar('+');
      xPathLexer0.whitespace();
      xPathLexer0.and();
      xPathLexer0.nextToken();
      xPathLexer0.plus();
      xPathLexer0.setXPath("aD[d&E/Ba!+");
      xPathLexer0.nextToken();
      xPathLexer0.rightParen();
      XPathLexer xPathLexer1 = new XPathLexer("oNL:Iy*W(a@fp");
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token0 = xPathLexer2.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.8848674733590942
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.at();
      assertEquals(16, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      xPathLexer0.and();
      xPathLexer0.minus();
      Token token1 = xPathLexer0.minus();
      assertEquals("m", token1.getTokenText());
      assertEquals(6, token1.getTokenType());
      
      Token token2 = xPathLexer0.pipe();
      assertEquals(17, token2.getTokenType());
      
      xPathLexer0.operatorName();
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("werken.saxpath.Token", token3.getTokenText());
      
      xPathLexer0.setXPath("com.werken.saxpath.Token");
      Token token4 = xPathLexer0.nextToken();
      assertEquals((-1), token4.getTokenType());
      
      Token token5 = xPathLexer0.rightParen();
      assertEquals("c", token5.getTokenText());
      assertEquals(2, token5.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.mod();
      Token token6 = xPathLexer1.leftParen();
      assertEquals("c", token6.getTokenText());
      assertEquals(1, token6.getTokenType());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.9703936375199582
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")");
      xPathLexer0.literal();
      Token token0 = xPathLexer0.comma();
      assertEquals(32, token0.getTokenType());
      
      xPathLexer0.setXPath("/Zfp}'>]cr");
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.rightParen();
      assertEquals("/", token1.getTokenText());
      
      xPathLexer0.leftBracket();
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('');
      assertFalse(boolean0);
      
      xPathLexer0.setXPath("/Zfp}'>]cr");
      Token token2 = xPathLexer0.dollar();
      assertEquals(26, token2.getTokenType());
      assertEquals("/", token2.getTokenText());
      
      xPathLexer0.and();
      xPathLexer0.colon();
      XPathLexer xPathLexer1 = new XPathLexer("/Zfp}'>]cr");
      Token token3 = xPathLexer1.plus();
      assertEquals("/", token3.getTokenText());
      assertEquals(5, token3.getTokenType());
      
      Token token4 = xPathLexer1.minus();
      assertEquals(6, token4.getTokenType());
      assertEquals("Z", token4.getTokenText());
      
      xPathLexer1.setXPath(")");
      Token token5 = xPathLexer1.number();
      assertEquals(30, token5.getTokenType());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals(15, token6.getTokenType());
      assertEquals("fp", token6.getTokenText());
      
      Token token7 = xPathLexer0.rightParen();
      assertEquals(2, token7.getTokenType());
      
      Token token8 = xPathLexer1.star();
      assertEquals(20, token8.getTokenType());
      assertEquals(")", token8.getTokenText());
      
      Token token9 = xPathLexer1.at();
      assertEquals(16, token9.getTokenType());
      
      Token token10 = xPathLexer0.leftBracket();
      assertEquals("'", token10.getTokenText());
      assertEquals(3, token10.getTokenType());
      
      Token token11 = xPathLexer0.colon();
      assertEquals(18, token11.getTokenType());
      assertEquals(">", token11.getTokenText());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.4609048523212433
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.div();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      xPathLexer0.isIdentifierChar('\"');
      xPathLexer0.or();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.setXPath("*");
      Token token1 = xPathLexer0.nextToken();
      assertEquals(20, token1.getTokenType());
      assertEquals("*", token1.getTokenText());
      
      Token token2 = xPathLexer0.notEquals();
      assertEquals(22, token2.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token3 = xPathLexer2.identifier();
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer1.slashes();
      assertEquals(11, token4.getTokenType());
      
      Token token5 = xPathLexer2.doubleColon();
      assertEquals(19, token5.getTokenType());
      
      Token token6 = xPathLexer1.dollar();
      assertEquals(26, token6.getTokenType());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.6125420228323968
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.comma();
      xPathLexer0.or();
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.nextToken();
      xPathLexer0.plus();
      xPathLexer0.setXPath("($V;\"CzTx[gXBb~{X");
      XPathLexer xPathLexer2 = new XPathLexer("}");
      xPathLexer0.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.dollar();
      xPathLexer2.identifierOrOperatorName();
      Token token0 = xPathLexer2.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.4680903275058539
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")");
      xPathLexer0.literal();
      xPathLexer0.comma();
      xPathLexer0.setXPath("/Zfp}'>]cr");
      xPathLexer0.operatorName();
      xPathLexer0.isIdentifierChar('_');
      xPathLexer0.or();
      xPathLexer0.and();
      xPathLexer0.nextToken();
      xPathLexer0.setXPath(")");
      xPathLexer0.nextToken();
      xPathLexer0.rightParen();
      XPathLexer xPathLexer1 = new XPathLexer("Y(0;!D?kJ;V");
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.9648393665320414
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":=pG%=$4I");
      xPathLexer0.relationalOperator();
      xPathLexer0.and();
      xPathLexer0.relationalOperator();
      xPathLexer0.number();
      xPathLexer0.isIdentifierChar('y');
      xPathLexer0.or();
      xPathLexer0.and();
      xPathLexer0.nextToken();
      xPathLexer0.setXPath("Y(0;!D?kJ;V");
      xPathLexer0.nextToken();
      xPathLexer0.rightParen();
      XPathLexer xPathLexer1 = new XPathLexer("Y(0;!D?kJ;V");
      xPathLexer1.slashes();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.6955478085106863
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.div();
      xPathLexer0.nextToken();
      xPathLexer0.slashes();
      xPathLexer0.isIdentifierChar('\"');
      xPathLexer0.or();
      xPathLexer0.relationalOperator();
      xPathLexer0.setXPath("com.werken.saxpath.Token");
      XPathLexer xPathLexer1 = new XPathLexer("HKwepXdx`_j<2u");
      xPathLexer1.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.dollar();
      xPathLexer2.identifierOrOperatorName();
      xPathLexer2.endPosition();
      Token token0 = xPathLexer1.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.240629660964431
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.at();
      xPathLexer0.and();
      xPathLexer0.minus();
      xPathLexer0.minus();
      xPathLexer0.comma();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.and();
      xPathLexer1.nextToken();
      xPathLexer0.setXPath("Lrg+8,{O3Kh");
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.at();
      xPathLexer2.nextToken();
      xPathLexer0.rightParen();
      XPathLexer xPathLexer3 = new XPathLexer("Y(0;!D?kJ;V");
      xPathLexer0.mod();
      int int0 = xPathLexer1.currentPosition();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.8100187715768583
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.comma();
      assertEquals("c", token0.getTokenText());
      assertEquals(32, token0.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.number();
      xPathLexer0.setXPath("1A,3");
      Token token1 = xPathLexer0.nextToken();
      assertEquals("1", token1.getTokenText());
      assertEquals(30, token1.getTokenType());
      
      Token token2 = xPathLexer0.dollar();
      assertEquals(26, token2.getTokenType());
      assertEquals("A", token2.getTokenText());
      
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertNull(token3);
      
      XPathLexer xPathLexer1 = new XPathLexer();
      int int0 = xPathLexer0.endPosition();
      assertEquals(4, int0);
      
      xPathLexer0.operatorName();
      Token token4 = xPathLexer0.pipe();
      assertEquals(17, token4.getTokenType());
      assertEquals(",", token4.getTokenText());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.9160627492083089
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ex%");
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.rightParen();
      xPathLexer0.comma();
      xPathLexer0.endPosition();
      xPathLexer0.equals();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.equals();
      xPathLexer1.star();
      xPathLexer1.and();
      xPathLexer0.whitespace();
      xPathLexer0.and();
      Token token0 = xPathLexer1.or();
      assertNull(token0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.7787683524526023
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":=pG%=$4I");
      xPathLexer0.and();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.rightParen();
      assertEquals(2, token1.getTokenType());
      assertEquals(":", token1.getTokenText());
      
      Token token2 = xPathLexer0.comma();
      assertEquals("=", token2.getTokenText());
      assertEquals(32, token2.getTokenType());
      
      xPathLexer0.setXPath("AW2I&b+cDJ$)|\"");
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("AW2I", token3.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token4 = xPathLexer1.dollar();
      assertEquals(26, token4.getTokenType());
      
      xPathLexer1.identifierOrOperatorName();
      int int0 = xPathLexer0.endPosition();
      assertEquals(14, int0);
      
      xPathLexer1.identifier();
      Token token5 = xPathLexer1.rightBracket();
      assertEquals(4, token5.getTokenType());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.8516922232513904
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5gugL/H&Vub~");
      xPathLexer0.nextToken();
      xPathLexer0.isIdentifierChar('+');
      xPathLexer0.or();
      xPathLexer0.and();
      xPathLexer0.nextToken();
      xPathLexer0.setXPath("Y(0;!D?kJ;V");
      xPathLexer0.nextToken();
      xPathLexer0.rightParen();
      XPathLexer xPathLexer1 = new XPathLexer("Y(0;!D?kJ;V");
      Token token0 = xPathLexer1.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.8305232787272954
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.at();
      xPathLexer0.and();
      xPathLexer0.minus();
      xPathLexer0.minus();
      xPathLexer0.comma();
      xPathLexer0.number();
      xPathLexer0.setXPath(") (");
      xPathLexer0.nextToken();
      xPathLexer0.dollar();
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.endPosition();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.217336276719485
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4){#**Ax");
      xPathLexer0.dots();
      xPathLexer0.mod();
      xPathLexer0.or();
      xPathLexer0.and();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.setXPath("");
      xPathLexer1.nextToken();
      xPathLexer0.rightParen();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.9501327255347478
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.relationalOperator();
      xPathLexer0.consume();
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals("om.werken.saxpath.XPathLexer", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
      
      xPathLexer0.setXPath("n~`e$");
      XPathLexer xPathLexer1 = new XPathLexer("evEf}AE^u)hEk}l");
      Token token3 = xPathLexer1.nextToken();
      assertEquals(15, token3.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token4 = xPathLexer1.colon();
      assertEquals(18, token4.getTokenType());
      assertEquals("}", token4.getTokenText());
      
      Token token5 = xPathLexer2.doubleColon();
      assertEquals(19, token5.getTokenType());
      
      Token token6 = xPathLexer1.dollar();
      assertEquals(26, token6.getTokenType());
      assertEquals("A", token6.getTokenText());
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer1.endPosition();
      xPathLexer0.operatorName();
      Token token7 = xPathLexer2.at();
      assertEquals(16, token7.getTokenType());
      
      Token token8 = xPathLexer0.slashes();
      assertEquals(11, token8.getTokenType());
      assertEquals("~", token8.getTokenText());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.0459119284724485
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("w-0p~4\"`p|ZUKvucy-");
      xPathLexer0.or();
      xPathLexer0.dots();
      xPathLexer0.equals();
      xPathLexer0.and();
      xPathLexer0.minus();
      xPathLexer0.number();
      xPathLexer0.nextToken();
      xPathLexer0.dollar();
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.endPosition();
      Token token0 = xPathLexer1.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.8459315711835587
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("w-0p~4\"`p|ZUKvucy-");
      xPathLexer0.and();
      xPathLexer0.relationalOperator();
      xPathLexer0.consume();
      xPathLexer0.number();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.rightParen();
      xPathLexer0.setXPath("n~`e$");
      XPathLexer xPathLexer1 = new XPathLexer("``L1BNdn~^~tN$,Z");
      xPathLexer0.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.dollar();
      xPathLexer2.identifierOrOperatorName();
      xPathLexer0.endPosition();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.780894122770707
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":=pG%=$4I");
      xPathLexer0.and();
      xPathLexer0.relationalOperator();
      xPathLexer0.number();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.rightParen();
      xPathLexer0.setXPath("n~`e$");
      XPathLexer xPathLexer1 = new XPathLexer("n~`e$");
      xPathLexer1.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.dollar();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer1.endPosition();
      Token token0 = xPathLexer1.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.682069885868344
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.at();
      assertEquals(16, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      xPathLexer0.and();
      xPathLexer0.minus();
      Token token1 = xPathLexer0.minus();
      assertEquals(6, token1.getTokenType());
      assertEquals("m", token1.getTokenText());
      
      xPathLexer0.or();
      xPathLexer0.and();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(13, token2.getTokenType());
      assertEquals(".", token2.getTokenText());
      
      xPathLexer0.setXPath("com.werken.saxpath.Token");
      Token token3 = xPathLexer0.nextToken();
      assertEquals((-1), token3.getTokenType());
      assertEquals("com.werken.saxpath.Token", token3.getTokenText());
      
      Token token4 = xPathLexer0.rightParen();
      assertEquals(2, token4.getTokenType());
      assertEquals("c", token4.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.mod();
      Token token5 = xPathLexer1.leftParen();
      assertEquals("c", token5.getTokenText());
      assertEquals(1, token5.getTokenType());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.7975322047677103
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5gugL/H&Vub~");
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.rightParen();
      xPathLexer0.comma();
      xPathLexer0.setXPath("q=J+X`[e.~V|T(o|h6!");
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.dollar();
      xPathLexer0.nextToken();
      xPathLexer0.rightParen();
      XPathLexer xPathLexer2 = null;
      try {
        xPathLexer2 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.8176001546360525
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4){#**Ax");
      xPathLexer0.dots();
      xPathLexer0.mod();
      xPathLexer0.setXPath("4){#**Ax");
      xPathLexer0.nextToken();
      xPathLexer0.dollar();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.9864420579011273
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")");
      xPathLexer0.literal();
      xPathLexer0.dots();
      xPathLexer0.and();
      xPathLexer0.colon();
      xPathLexer0.operatorName();
      xPathLexer0.colon();
      xPathLexer0.setXPath("<r");
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.rightParen();
      XPathLexer xPathLexer3 = new XPathLexer("<r");
      Token token0 = xPathLexer3.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.137160949717066
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")");
      xPathLexer0.literal();
      Token token0 = xPathLexer0.comma();
      assertEquals(32, token0.getTokenType());
      
      xPathLexer0.setXPath("/Zfp}'>]cr");
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.rightParen();
      assertEquals("/", token1.getTokenText());
      
      Token token2 = xPathLexer0.leftBracket();
      assertEquals(3, token2.getTokenType());
      assertEquals("Z", token2.getTokenText());
      
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('');
      assertFalse(boolean0);
      
      xPathLexer0.or();
      Token token3 = xPathLexer0.not();
      assertEquals("f", token3.getTokenText());
      assertEquals(23, token3.getTokenType());
      
      Token token4 = xPathLexer0.leftParen();
      assertEquals(1, token4.getTokenType());
      assertEquals("p", token4.getTokenText());
      
      Token token5 = xPathLexer0.dots();
      assertEquals(13, token5.getTokenType());
      assertEquals("}", token5.getTokenText());
      
      Token token6 = xPathLexer0.number();
      assertEquals(30, token6.getTokenType());
      
      xPathLexer0.endPosition();
      Token token7 = xPathLexer0.equals();
      assertEquals(21, token7.getTokenType());
      assertEquals("'", token7.getTokenText());
      
      Token token8 = xPathLexer0.relationalOperator();
      assertEquals(">", token8.getTokenText());
      assertEquals(9, token8.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("/Zfp}'>]cr");
      int int0 = xPathLexer1.endPosition();
      assertEquals(10, int0);
      
      Token token9 = xPathLexer0.rightParen();
      assertEquals(2, token9.getTokenType());
      assertEquals("]", token9.getTokenText());
      
      xPathLexer1.mod();
      Token token10 = xPathLexer1.notEquals();
      assertEquals(22, token10.getTokenType());
      assertEquals("/Z", token10.getTokenText());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.3858382907972204
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5gugL/H&Vub~");
      xPathLexer0.nextToken();
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertTrue(boolean0);
      
      xPathLexer0.setXPath("5gugL/H&Vub~");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("5", token0.getTokenText());
      
      Token token1 = xPathLexer0.dollar();
      assertEquals(26, token1.getTokenType());
      assertEquals("g", token1.getTokenText());
      
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
      assertEquals("u", token2.getTokenText());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(12, int0);
      
      Token token3 = xPathLexer0.rightParen();
      assertEquals(2, token3.getTokenType());
      assertEquals("g", token3.getTokenText());
      
      xPathLexer0.mod();
      Token token4 = xPathLexer0.notEquals();
      assertEquals(22, token4.getTokenType());
      assertEquals("L/", token4.getTokenText());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.072851664504677
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":=pG%=$4I");
      xPathLexer0.relationalOperator();
      xPathLexer0.rightBracket();
      xPathLexer0.and();
      xPathLexer0.relationalOperator();
      xPathLexer0.number();
      xPathLexer0.operatorName();
      xPathLexer0.isIdentifierChar('y');
      xPathLexer0.or();
      xPathLexer0.nextToken();
      xPathLexer0.setXPath("Y(0;!D?kJ;V");
      xPathLexer0.nextToken();
      xPathLexer0.rightParen();
      XPathLexer xPathLexer1 = new XPathLexer("Y(0;!D?kJ;V");
      xPathLexer1.identifier();
      xPathLexer1.slashes();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.7196559148573
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.equals();
      xPathLexer0.nextToken();
      xPathLexer0.isIdentifierStartChar('+');
      xPathLexer0.or();
      xPathLexer0.and();
      xPathLexer0.nextToken();
      xPathLexer0.plus();
      xPathLexer0.setXPath("yQ4xB3:$-(YQ 8&");
      xPathLexer0.nextToken();
      xPathLexer0.rightParen();
      XPathLexer xPathLexer1 = new XPathLexer("oNL:Iy*W(a@fp");
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.3533596791599105
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ex%");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      assertEquals("Ex", token0.getTokenText());
      
      xPathLexer0.mod();
      XPathLexer xPathLexer1 = new XPathLexer("Ex%");
      xPathLexer1.consume(31);
      xPathLexer0.relationalOperator();
      int int0 = xPathLexer0.endPosition();
      assertEquals(3, int0);
      
      Token token1 = xPathLexer1.equals();
      assertEquals(21, token1.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("%", token2.getTokenText());
      
      Token token3 = xPathLexer2.rightParen();
      assertEquals(2, token3.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("qvsI I98|/6wg");
      xPathLexer2.mod();
      Token token4 = xPathLexer1.dots();
      assertEquals(13, token4.getTokenType());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.678706058817701
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.mod();
      xPathLexer0.consume((-83));
      // Undeclared exception!
      try { 
        xPathLexer0.relationalOperator();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.8872569749260304
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.notEquals();
      xPathLexer0.equals();
      xPathLexer0.minus();
      xPathLexer0.consume((-4186));
      Token token0 = null;
      // Undeclared exception!
      try { 
        xPathLexer0.literal();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.4435914296919865
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume();
      xPathLexer0.consume(0);
      xPathLexer0.minus();
      xPathLexer0.doubleColon();
      xPathLexer0.comma();
      xPathLexer0.star();
      xPathLexer0.comma();
      xPathLexer0.rightBracket();
      xPathLexer0.rightBracket();
      xPathLexer0.div();
      xPathLexer0.colon();
      xPathLexer0.comma();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.operatorName();
      xPathLexer0.leftParen();
      xPathLexer0.slashes();
      xPathLexer0.comma();
      xPathLexer0.equals();
      String string0 = xPathLexer0.getXPath();
      assertNull(string0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.6488041417305412
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.leftBracket();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.977443963220837
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.dollar();
      xPathLexer0.dollar();
      xPathLexer0.notEquals();
      xPathLexer0.LA(1039);
      xPathLexer0.rightBracket();
      xPathLexer0.minus();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.731966498333489
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("o0c0r@&-12HO2{@sD");
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
      
      xPathLexer0.equals();
      xPathLexer0.leftParen();
      xPathLexer0.leftBracket();
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(19, token1.getTokenType());
      
      xPathLexer0.number();
      xPathLexer0.consume();
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
      
      Token token3 = xPathLexer0.equals();
      assertEquals(21, token3.getTokenType());
      
      xPathLexer0.minus();
      Token token4 = xPathLexer0.slashes();
      assertEquals(11, token4.getTokenType());
      
      Token token5 = xPathLexer0.whitespace();
      assertEquals("", token5.getTokenText());
      assertEquals((-2), token5.getTokenType());
      
      Token token6 = xPathLexer0.literal();
      assertNull(token6);
      
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('_');
      assertTrue(boolean0);
      
      Token token7 = xPathLexer0.leftBracket();
      assertEquals(3, token7.getTokenType());
      
      Token token8 = xPathLexer0.nextToken();
      assertEquals((-1), token8.getTokenType());
      
      Token token9 = xPathLexer0.number();
      assertEquals(30, token9.getTokenType());
      
      xPathLexer0.getXPath();
      Token token10 = xPathLexer0.minus();
      assertEquals(6, token10.getTokenType());
      
      Token token11 = xPathLexer0.notEquals();
      assertEquals(22, token11.getTokenType());
      
      Token token12 = xPathLexer0.leftParen();
      assertEquals(1, token12.getTokenType());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.0908273508286084
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.rightBracket();
      xPathLexer0.consume();
      xPathLexer0.star();
      xPathLexer0.leftParen();
      xPathLexer0.consume((-2120));
      // Undeclared exception!
      try { 
        xPathLexer0.identifierOrOperatorName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.571193574048166
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      String string0 = ")";
      XPathLexer xPathLexer0 = new XPathLexer(")");
      xPathLexer0.star();
      xPathLexer0.slashes();
      xPathLexer0.leftParen();
      xPathLexer0.number();
      xPathLexer0.consume((-1341));
      xPathLexer0.comma();
      xPathLexer0.rightBracket();
      // Undeclared exception!
      try { 
        xPathLexer0.nextToken();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.5867721948310423
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.relationalOperator();
      xPathLexer0.rightParen();
      Token token0 = xPathLexer0.doubleColon();
      xPathLexer0.dots();
      xPathLexer0.plus();
      xPathLexer0.equals();
      xPathLexer0.or();
      xPathLexer0.literal();
      xPathLexer0.dollar();
      xPathLexer0.rightBracket();
      xPathLexer0.div();
      xPathLexer0.colon();
      xPathLexer0.isIdentifierStartChar('Y');
      xPathLexer0.minus();
      xPathLexer0.equals();
      xPathLexer0.isIdentifierStartChar('>');
      xPathLexer0.star();
      xPathLexer0.relationalOperator();
      xPathLexer0.dollar();
      xPathLexer0.not();
      xPathLexer0.literal();
      xPathLexer0.pipe();
      Token token1 = xPathLexer0.not();
      assertNotSame(token1, token0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.2258641211717243
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.equals();
      xPathLexer0.nextToken();
      xPathLexer0.isIdentifierChar('+');
      xPathLexer0.or();
      xPathLexer0.and();
      xPathLexer0.nextToken();
      xPathLexer0.plus();
      xPathLexer0.nextToken();
      xPathLexer0.rightParen();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.036227483936008
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.div();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      xPathLexer0.slashes();
      xPathLexer0.isIdentifierChar('\"');
      xPathLexer0.or();
      Token token1 = xPathLexer0.dollar();
      assertEquals(26, token1.getTokenType());
      
      xPathLexer0.and();
      Token token2 = xPathLexer0.colon();
      assertEquals(18, token2.getTokenType());
      
      Token token3 = xPathLexer0.plus();
      assertEquals(5, token3.getTokenType());
      
      xPathLexer0.setXPath("tlFSbaTFAnj-)qN%}");
      Token token4 = xPathLexer0.number();
      assertEquals(30, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("tlFSbaTFAnj-)qN%}", token5.getTokenText());
      
      Token token6 = xPathLexer0.rightParen();
      assertEquals(2, token6.getTokenType());
      assertEquals("t", token6.getTokenText());
      
      Token token7 = xPathLexer0.star();
      assertEquals(20, token7.getTokenType());
      assertEquals("l", token7.getTokenText());
      
      Token token8 = xPathLexer0.at();
      assertEquals("F", token8.getTokenText());
      assertEquals(16, token8.getTokenType());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.468758738921901
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("T^K^OA");
      xPathLexer0.minus();
      xPathLexer0.not();
      XPathLexer xPathLexer1 = new XPathLexer("HyIX`m*");
      xPathLexer0.at();
      Token token0 = xPathLexer1.plus();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.at();
      xPathLexer0.or();
      xPathLexer0.dollar();
      xPathLexer0.slashes();
      xPathLexer0.plus();
      xPathLexer0.minus();
      xPathLexer1.minus();
      xPathLexer1.at();
      xPathLexer0.rightParen();
      xPathLexer1.not();
      xPathLexer1.identifierOrOperatorName();
      // Undeclared exception!
      try { 
        xPathLexer1.LA((-2813));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.4190531989170894
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":=pG%=$4I");
      xPathLexer0.and();
      xPathLexer0.relationalOperator();
      xPathLexer0.number();
      xPathLexer0.isIdentifierChar(']');
      xPathLexer0.or();
      xPathLexer0.and();
      xPathLexer0.nextToken();
      String string0 = "Y(0;!D?kJ;V";
      // Undeclared exception!
      try { 
        xPathLexer0.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.5651057507487567
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.or();
      xPathLexer0.dots();
      xPathLexer0.colon();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.nextToken();
      xPathLexer1.plus();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer("lGmHM17{#3a..L!pW");
      Token token0 = xPathLexer1.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.4130179695700957
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.equals();
      assertEquals(21, token0.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.nextToken();
      Token token1 = xPathLexer1.plus();
      assertEquals(5, token1.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.setXPath("");
      Token token2 = xPathLexer1.nextToken();
      assertEquals((-1), token2.getTokenType());
      
      Token token3 = xPathLexer1.notEquals();
      assertEquals(22, token3.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token4 = xPathLexer3.identifier();
      assertEquals(15, token4.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("!dURR!\"9S\u0006-~ko scL");
      Token token5 = xPathLexer4.slashes();
      assertEquals(11, token5.getTokenType());
      assertEquals("!", token5.getTokenText());
      
      Token token6 = xPathLexer0.doubleColon();
      assertEquals(19, token6.getTokenType());
      
      Token token7 = xPathLexer3.dollar();
      assertEquals(26, token7.getTokenType());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=3.2603928629793018
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("wXZs6UCn*'");
      xPathLexer0.operatorName();
      xPathLexer0.colon();
      Token token0 = xPathLexer0.doubleColon();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.getPreviousToken();
      xPathLexer0.isIdentifierChar('9');
      xPathLexer0.minus();
      xPathLexer0.rightParen();
      xPathLexer0.or();
      xPathLexer0.not();
      xPathLexer0.plus();
      xPathLexer0.getPreviousToken();
      Token token1 = xPathLexer0.div();
      assertNull(token1);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.941766985802879
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.comma();
      Token token0 = xPathLexer0.plus();
      token0.toString();
      token0.toString();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.star();
      xPathLexer0.slashes();
      xPathLexer0.notEquals();
      XPathLexer xPathLexer1 = new XPathLexer("|E<v/?a '='Nd2BKW");
      Token token1 = xPathLexer0.operatorName();
      assertNull(token1);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.6578096712108636
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("j}JB?");
      xPathLexer0.div();
      xPathLexer0.slashes();
      xPathLexer0.operatorName();
      xPathLexer0.or();
      xPathLexer0.leftBracket();
      xPathLexer0.minus();
      xPathLexer0.number();
      xPathLexer0.rightParen();
      xPathLexer0.mod();
      XPathLexer xPathLexer1 = null;
      try {
        xPathLexer1 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=3.0888680023932995
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals("c", token0.getTokenText());
      assertEquals(3, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifier();
      assertEquals("om.werken.saxpath.Token", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      xPathLexer0.minus();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.getPreviousToken();
      xPathLexer0.or();
      Token token2 = xPathLexer1.minus();
      assertEquals(6, token2.getTokenType());
      
      Token token3 = xPathLexer0.comma();
      assertEquals(32, token3.getTokenType());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=3.5755515135602822
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals(22, token1.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.consume(1452);
      Token token2 = xPathLexer0.leftBracket();
      assertEquals(3, token2.getTokenType());
      
      xPathLexer0.minus();
      xPathLexer0.consume(0);
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.dollar();
      Token token3 = xPathLexer0.whitespace();
      assertEquals((-2), token3.getTokenType());
      
      xPathLexer0.identifier();
      Token token4 = xPathLexer0.rightParen();
      assertEquals(2, token4.getTokenType());
      
      Token token5 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token5.getTokenType());
      
      xPathLexer0.hasMoreChars();
      Token token6 = xPathLexer0.dollar();
      assertEquals(26, token6.getTokenType());
      
      Token token7 = xPathLexer0.slashes();
      assertEquals(11, token7.getTokenType());
      
      Token token8 = xPathLexer0.colon();
      assertEquals(18, token8.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token9 = xPathLexer0.minus();
      assertEquals(6, token9.getTokenType());
      
      Token token10 = xPathLexer0.comma();
      assertEquals(32, token10.getTokenType());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.797156698253507
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4){#**Ax");
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("4", token0.getTokenText());
      
      xPathLexer0.mod();
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.doubleColon();
      assertEquals("){", token1.getTokenText());
      
      Token token2 = xPathLexer0.doubleColon();
      assertEquals(19, token2.getTokenType());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=3.0434370722243163
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("j}JB?");
      xPathLexer0.div();
      xPathLexer0.slashes();
      xPathLexer0.operatorName();
      xPathLexer0.or();
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(3, token0.getTokenType());
      assertEquals("}", token0.getTokenText());
      
      Token token1 = xPathLexer0.minus();
      assertEquals("J", token1.getTokenText());
      assertEquals(6, token1.getTokenType());
      
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      
      Token token3 = xPathLexer0.identifier();
      assertEquals("B", token3.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token4 = xPathLexer0.slashes();
      assertEquals(11, token4.getTokenType());
      assertEquals("?", token4.getTokenText());
      
      xPathLexer0.mod();
      Token token5 = xPathLexer0.equals();
      assertEquals(21, token5.getTokenType());
      
      Token token6 = xPathLexer0.identifier();
      assertEquals(15, token6.getTokenType());
      
      int int0 = xPathLexer0.currentPosition();
      assertEquals(6, int0);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=3.3285404468599546
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.star();
      xPathLexer0.doubleColon();
      xPathLexer0.dollar();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.rightParen();
      xPathLexer0.or();
      xPathLexer0.rightParen();
      xPathLexer0.not();
      xPathLexer0.star();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=3.428834450605289
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4){#**Ax");
      xPathLexer0.dots();
      xPathLexer0.mod();
      xPathLexer0.equals();
      Token token0 = xPathLexer0.slashes();
      xPathLexer0.leftParen();
      token0.toString();
      xPathLexer0.literal();
      xPathLexer0.whitespace();
      xPathLexer0.at();
      xPathLexer0.leftParen();
      xPathLexer0.and();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.leftBracket();
      xPathLexer0.identifier();
      xPathLexer0.minus();
      xPathLexer0.getPreviousToken();
      xPathLexer0.or();
      Token token1 = xPathLexer0.or();
      assertNull(token1);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=3.764638923611305
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.or();
      xPathLexer0.consume();
      xPathLexer0.rightBracket();
      xPathLexer0.equals();
      xPathLexer0.rightParen();
      xPathLexer0.literal();
      xPathLexer0.not();
      xPathLexer0.notEquals();
      xPathLexer0.and();
      xPathLexer0.identifier();
      xPathLexer0.star();
      xPathLexer0.not();
      xPathLexer0.equals();
      xPathLexer0.operatorName();
      xPathLexer0.comma();
      xPathLexer0.equals();
      xPathLexer0.comma();
      xPathLexer0.relationalOperator();
      xPathLexer0.whitespace();
      xPathLexer0.at();
      xPathLexer0.dots();
      xPathLexer0.rightBracket();
      xPathLexer0.leftBracket();
      xPathLexer0.pipe();
      xPathLexer0.colon();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.equals();
      xPathLexer0.mod();
      xPathLexer0.rightParen();
      xPathLexer0.dots();
      xPathLexer0.at();
      xPathLexer0.or();
      xPathLexer0.dollar();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=3.080537390796536
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":=pG%=$4I");
      xPathLexer0.and();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
      assertNotNull(token1);
      
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
      
      Token token3 = xPathLexer0.comma();
      assertEquals(32, token3.getTokenType());
      assertEquals("=", token3.getTokenText());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(9, int0);
      
      Token token4 = xPathLexer0.equals();
      assertEquals(21, token4.getTokenType());
      assertEquals("p", token4.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token5 = xPathLexer1.notEquals();
      assertEquals(22, token5.getTokenType());
      
      xPathLexer1.and();
      Token token6 = xPathLexer0.doubleColon();
      assertEquals(19, token6.getTokenType());
      assertEquals("G%", token6.getTokenText());
      
      Token token7 = xPathLexer0.dollar();
      assertEquals("=", token7.getTokenText());
      assertEquals(26, token7.getTokenType());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.821135311228118
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.comma();
      xPathLexer0.plus();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.literal();
      Token token0 = xPathLexer1.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.562200162369491
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.div();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer1.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.5839880252395355
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.or();
      xPathLexer0.div();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.2122626291197265
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#-\"]3?");
      xPathLexer0.relationalOperator();
      xPathLexer0.at();
      xPathLexer0.plus();
      xPathLexer0.literal();
      xPathLexer0.nextToken();
      xPathLexer0.identifier();
      xPathLexer0.doubleColon();
      xPathLexer0.slashes();
      xPathLexer0.leftBracket();
      xPathLexer0.pipe();
      xPathLexer0.slashes();
      xPathLexer0.number();
      xPathLexer0.plus();
      xPathLexer0.or();
      xPathLexer0.equals();
      xPathLexer0.leftParen();
      xPathLexer0.doubleColon();
      xPathLexer0.colon();
      xPathLexer0.identifier();
      xPathLexer0.number();
      xPathLexer0.getPreviousToken();
      xPathLexer0.relationalOperator();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.notEquals();
      xPathLexer0.rightBracket();
      xPathLexer0.notEquals();
      xPathLexer0.relationalOperator();
      xPathLexer0.getPreviousToken();
      xPathLexer0.at();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.977660272976407
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.comma();
      assertEquals(32, token0.getTokenType());
      
      xPathLexer0.at();
      Token token1 = xPathLexer0.rightParen();
      assertEquals(2, token1.getTokenType());
      
      xPathLexer0.div();
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
      
      Token token3 = xPathLexer0.not();
      assertEquals(23, token3.getTokenType());
      
      Token token4 = xPathLexer0.dollar();
      assertEquals(26, token4.getTokenType());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.540514404739262
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/Zfp}'>]cr");
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      assertEquals("/", token0.getTokenText());
      
      Token token1 = xPathLexer0.minus();
      assertEquals(6, token1.getTokenType());
      assertEquals("Z", token1.getTokenText());
      
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      
      Token token3 = xPathLexer0.star();
      assertEquals("f", token3.getTokenText());
      assertEquals(20, token3.getTokenType());
      
      Token token4 = xPathLexer0.at();
      assertEquals("p", token4.getTokenText());
      assertEquals(16, token4.getTokenType());
      
      Token token5 = xPathLexer0.doubleColon();
      assertEquals(19, token5.getTokenType());
      assertEquals("}'", token5.getTokenText());
      
      Token token6 = xPathLexer0.slashes();
      assertEquals(11, token6.getTokenType());
      assertEquals(">", token6.getTokenText());
      
      Token token7 = xPathLexer0.dollar();
      assertEquals(26, token7.getTokenType());
      assertEquals("]", token7.getTokenText());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=3.309546607063864
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.or();
      xPathLexer0.dots();
      xPathLexer0.and();
      xPathLexer0.colon();
      xPathLexer0.operatorName();
      xPathLexer0.colon();
      xPathLexer0.slashes();
      xPathLexer0.notEquals();
      xPathLexer0.identifier();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token0 = xPathLexer1.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.555645495228826
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5gugL/H&Vub~");
      Token token0 = xPathLexer0.nextToken();
      Token token1 = xPathLexer0.plus();
      token0.toString();
      token1.toString();
      xPathLexer0.setPreviousToken(token1);
      xPathLexer0.slashes();
      xPathLexer0.notEquals();
      xPathLexer0.identifier();
      Token token2 = xPathLexer0.relationalOperator();
      assertNull(token2);
  }

  /**
  //Test case number: 64
  /*Coverage entropy=3.092014277250427
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("HyIX`m*");
      Token token0 = xPathLexer0.plus();
      String string0 = token0.toString();
      assertEquals("[ (5) (H)", string0);
      
      xPathLexer0.at();
      Token token1 = xPathLexer0.not();
      assertEquals("I", token1.getTokenText());
      assertEquals(23, token1.getTokenType());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals("X", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      assertNotNull(token2);
      
      Token token3 = xPathLexer0.at();
      assertEquals(16, token3.getTokenType());
      assertEquals("`", token3.getTokenText());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.519382346735597
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
  }
}
