/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 18:54:01 GMT 2019
 */

package org.dom4j.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.dom4j.io.OutputFormat;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class OutputFormat_ESTest extends OutputFormat_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.155940352319277
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("12HO2{sDvCJq");
      outputFormat0.setIndent(true);
      outputFormat0.setTrimText(true);
      OutputFormat outputFormat1 = new OutputFormat();
      outputFormat1.setIndent(true);
      outputFormat1.setIndentSize(0);
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.setTrimText(true);
      outputFormat1.setIndentSize(0);
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.setIndentSize(0);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-indent";
      stringArray0[1] = "12HO2{sDvCJq";
      stringArray0[2] = "12HO2{sDvCJq";
      outputFormat1.parseOptions(stringArray0, 0);
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('?');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (?)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.420181903010856
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("12HO2{sDvCJq");
      outputFormat0.setIndent(false);
      outputFormat0.setIndentSize(0);
      outputFormat0.setTrimText(false);
      outputFormat0.setIndentSize(0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "-trimText";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setIndentSize(0);
      assertEquals("", outputFormat0.getIndent());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.322055368667316
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("12HO2{sDvCJq");
      outputFormat0.setIndent(true);
      outputFormat0.setIndentSize(0);
      outputFormat0.setTrimText(true);
      outputFormat0.setIndent("12HO2{sDvCJq");
      outputFormat0.setIndentSize(0);
      outputFormat0.setTrimText(true);
      outputFormat0.setIndentSize(0);
      OutputFormat outputFormat1 = new OutputFormat("7Q-;]cR", true);
      outputFormat1.setExpandEmptyElements(true);
      outputFormat0.setIndent(true);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "7Q-;]cR";
      stringArray0[1] = "-indent";
      stringArray0[2] = "12HO2{sDvCJq";
      outputFormat0.parseOptions(stringArray0, 33);
      outputFormat0.setIndentSize(0);
      String[] stringArray1 = new String[1];
      stringArray1[0] = "-indent";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray1, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.582066865178424
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("12HO2{@sDvCJq");
      OutputFormat outputFormat1 = new OutputFormat("12HO2{@sDvCJq");
      outputFormat1.setExpandEmptyElements(true);
      outputFormat1.setIndent(true);
      int int0 = 0;
      outputFormat0.setIndent("-omitEncoding");
      outputFormat0.setIndentSize(0);
      outputFormat1.setTrimText(true);
      outputFormat1.setIndentSize(0);
      OutputFormat outputFormat2 = new OutputFormat("12HO2{@sDvCJq");
      outputFormat1.setExpandEmptyElements(false);
      OutputFormat outputFormat3 = OutputFormat.createCompactFormat();
      outputFormat3.setIndent(true);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-indentSize";
      stringArray0[1] = "12HO2{@sDvCJq";
      stringArray0[2] = "7Q-;]cR";
      stringArray0[3] = "-newlines";
      stringArray0[4] = "-omitEncoding";
      stringArray0[5] = "-omitEncoding";
      // Undeclared exception!
      try { 
        outputFormat1.parseOptions(stringArray0, 0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"12HO2{@sDvCJq\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.5947716377779808
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("12HO2{@sDvCJq");
      OutputFormat outputFormat1 = new OutputFormat("12HO2{@sDvCJq");
      outputFormat1.setIndentSize(0);
      String[] stringArray0 = new String[2];
      outputFormat1.setLineSeparator((String) null);
      stringArray0[0] = "12HO2{@sDvCJq";
      stringArray0[1] = "12HO2{@sDvCJq";
      outputFormat0.setNewLineAfterDeclaration(true);
      String[] stringArray1 = new String[7];
      stringArray1[0] = "12HO2{@sDvCJq";
      stringArray1[1] = null;
      stringArray1[2] = "12HO2{@sDvCJq";
      stringArray1[3] = "12HO2{@sDvCJq";
      stringArray1[4] = "c";
      stringArray1[5] = "p2s|EW";
      stringArray1[6] = null;
      outputFormat0.parseOptions(stringArray1, 0);
      outputFormat1.setIndentSize(866);
      outputFormat0.setIndentSize(866);
      outputFormat1.setNewLineAfterDeclaration(true);
      outputFormat1.parseOptions(stringArray1, 580);
      outputFormat1.getLineSeparator();
      assertEqualsoutputFormat1.getIndent());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.4735546310288816
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("12HO2{@sDvCJq");
      outputFormat0.setIndent(true);
      assertEquals("  ", outputFormat0.getIndent());
      
      outputFormat0.setIndentSize((-1507078663));
      outputFormat0.setTrimText(false);
      outputFormat0.setIndentSize((-1507078663));
      String[] stringArray0 = new String[6];
      stringArray0[0] = "12HO2{@sDvCJq";
      stringArray0[1] = "12HO2{@sDvCJq";
      stringArray0[2] = "-expandEmptyUTF-8";
      stringArray0[3] = "12HO2{@sDvCJq";
      stringArray0[4] = "12HO2{@sDvCJq";
      stringArray0[5] = "12HO2{@sDvCJq";
      outputFormat0.parseOptions(stringArray0, 2141);
      outputFormat0.setIndentSize((-3486));
      int int0 = outputFormat0.parseOptions(stringArray0, 2);
      assertEquals(3, int0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.6422165264472737
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      boolean boolean0 = true;
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setNewLineAfterNTags(893);
      outputFormat0.setNewLineAfterNTags(2);
      outputFormat0.setIndent(true);
      outputFormat0.setEncoding("sthIdY");
      outputFormat0.setNewlines(true);
      outputFormat0.setIndent("A!<");
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.getEncoding();
      String[] stringArray0 = null;
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions((String[]) null, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-pdText", true);
      outputFormat0.setTrimText(true);
      String[] stringArray0 = new String[5];
      int int0 = (-4328);
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('!');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (!)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.6928210779767148
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-pdText", true);
      outputFormat0.setTrimText(true);
      outputFormat0.setIndent(true);
      outputFormat0.setIndentSize((-1));
      outputFormat0.setIndentSize(0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-xhtml";
      stringArray0[1] = "-padText";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setIndentSize(2);
      assertEquals("  ", outputFormat0.getIndent());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.051679382013907
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("12HO2{@sDvCJq");
      OutputFormat outputFormat1 = new OutputFormat("12HO2{@sDvCJq");
      outputFormat1.setExpandEmptyElements(false);
      OutputFormat outputFormat2 = new OutputFormat("-expandEmpty-trimText", true, "-expandEmpty-trimText");
      outputFormat2.setExpandEmptyElements(true);
      outputFormat1.setIndent(true);
      outputFormat2.setIndent("-expandEmpty-trimText");
      outputFormat1.setIndentSize((-558));
      outputFormat0.setIndentSize((-558));
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-omitEncoding";
      stringArray0[1] = "-trimText";
      stringArray0[2] = "-expandEmpty-trimText";
      stringArray0[3] = "-omitEncoding";
      stringArray0[4] = "-expandEmpty-trimText";
      stringArray0[5] = "-omitEncoding";
      stringArray0[6] = "-omitEncoding";
      outputFormat2.parseOptions(stringArray0, 0);
      outputFormat0.setIndentSize(7);
      assertEquals("       ", outputFormat0.getIndent());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.850863601176158
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.setIndent("-suppressDeclaration");
      outputFormat0.setNewLineAfterNTags((-220));
      String string0 = "A_I";
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setIndent("A_I");
      outputFormat0.isSuppressDeclaration();
      outputFormat0.getNewLineAfterNTags();
      String[] stringArray0 = null;
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions((String[]) null, (-220));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.549125602097848
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", false, "-padText");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "-padText";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      outputFormat0.parseOptions(stringArray0, 1);
      OutputFormat.createCompactFormat();
      outputFormat0.setSuppressDeclaration(true);
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat0.setLineSeparator(",-");
      outputFormat0.getIndent();
      assertEquals(",-", outputFormat0.getLineSeparator());
      
      outputFormat1.getAttributeQuoteCharacter();
      OutputFormat.createCompactFormat();
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      assertTrue(outputFormat2.isPadText());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.939792811164566
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("favXr)+\"");
      outputFormat0.setIndent(true);
      outputFormat0.setIndentSize(1);
      outputFormat0.setTrimText(true);
      outputFormat0.setNewLineAfterDeclaration(false);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "favXr)+\"";
      stringArray0[1] = "-indent";
      stringArray0[2] = "favXr)+\"";
      stringArray0[3] = "favXr)+\"";
      stringArray0[4] = "favXr)+\"";
      outputFormat0.setXHTML(true);
      stringArray0[5] = "favXr)+\"";
      stringArray0[6] = "-xhtml12HO2{";
      outputFormat0.parseOptions(stringArray0, 2865);
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setLineSeparator("favXr)+\"");
      assertEquals("favXr)+\"", outputFormat0.getLineSeparator());
      
      OutputFormat outputFormat1 = new OutputFormat("q", false);
      assertEquals('\"', outputFormat1.getAttributeQuoteCharacter());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.0748361414752705
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("qrdY0~OFIe-");
      outputFormat0.setLineSeparator("qrdY0~OFIe-");
      outputFormat0.setIndent(false);
      outputFormat0.setIndentSize((-4572));
      outputFormat0.setTrimText(false);
      outputFormat0.setIndentSize(0);
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.setIndent(false);
      OutputFormat outputFormat1 = new OutputFormat("qrdY0~OFIe-");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-xhtml2H2{@sDvCJq";
      stringArray0[1] = "-xhtml2H2{@sDvCJq";
      stringArray0[2] = "-xhtml2H2{@sDvCJq";
      stringArray0[3] = "-newlines";
      stringArray0[4] = "qrdY0~OFIe-";
      stringArray0[0] = "-newlines";
      stringArray0[6] = "12HO2{";
      outputFormat1.setIndent("-xhtml12HO2{@sDvCJq");
      outputFormat1.parseOptions(stringArray0, 0);
      outputFormat1.setIndentSize(4);
      outputFormat0.parseOptions(stringArray0, 972);
      assertEquals("qrdY0~OFIe-", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.8400453949278868
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.getAttributeQuoteCharacter();
      OutputFormat.createPrettyPrint();
      outputFormat0.setAttributeQuoteCharacter('\"');
      String[] stringArray0 = new String[8];
      stringArray0[0] = "hOT";
      stringArray0[1] = "hOT";
      stringArray0[2] = "hOT";
      stringArray0[3] = "hOT";
      stringArray0[6] = "hOT";
      stringArray0[7] = "hOT";
      OutputFormat outputFormat1 = new OutputFormat("w#_.k|", true);
      assertEquals("w#_.k|", outputFormat1.getIndent());
      assertEquals(0, outputFormat1.getNewLineAfterNTags());
      assertEquals("\n", outputFormat1.getLineSeparator());
      assertEquals('\"', outputFormat1.getAttributeQuoteCharacter());
      assertFalse(outputFormat1.isTrimText());
      assertFalse(outputFormat1.isExpandEmptyElements());
      assertFalse(outputFormat1.isOmitEncoding());
      assertFalse(outputFormat1.isSuppressDeclaration());
      assertEquals("UTF-8", outputFormat1.getEncoding());
      assertFalse(outputFormat1.isXHTML());
      assertFalse(outputFormat1.isPadText());
      assertTrue(outputFormat1.isNewLineAfterDeclaration());
      assertTrue(outputFormat1.isNewlines());
      
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      assertEquals("  ", outputFormat2.getIndent());
      assertTrue(outputFormat2.isTrimText());
      assertTrue(outputFormat2.isNewlines());
      assertTrue(outputFormat2.isPadText());
      
      outputFormat0.setAttributeQuoteCharacter('\"');
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertTrue(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isXHTML());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isPadText());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isNewlines());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertEquals("\n", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.011015831001672
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", false, "");
      outputFormat0.setIndent("");
      outputFormat0.setNewlines(false);
      outputFormat0.setIndent("");
      outputFormat0.setNewlines(false);
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.setIndent(false);
      outputFormat0.setPadText(true);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setIndent("");
      outputFormat0.getEncoding();
      outputFormat0.setIndent("");
      OutputFormat.createPrettyPrint();
      outputFormat0.setTrimText(true);
      assertTrue(outputFormat0.isTrimText());
      assertTrue(outputFormat0.isOmitEncoding());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("QXhr@xq");
      assertEquals("\n", outputFormat0.getLineSeparator());
      
      outputFormat0.setLineSeparator("");
      boolean boolean0 = outputFormat0.isXHTML();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.1746703358172643
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("12HO2{sDvCJq");
      outputFormat0.setIndentSize(0);
      outputFormat0.setIndent(false);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "rO]R:TkODR{";
      stringArray0[1] = "";
      stringArray0[2] = "12HO2{sDvCJq";
      stringArray0[3] = "-expandEmpty12HO2{@sDvCJq";
      stringArray0[4] = "-xhtml12HO2{@sDvCJq";
      stringArray0[5] = "rO]R:TkODR{";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setIndentSize(0);
      assertEquals("", outputFormat0.getIndent());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-suppressDeclaration", false);
      boolean boolean0 = outputFormat0.isSuppressDeclaration();
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isXHTML());
      assertFalse(outputFormat0.isPadText());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isOmitEncoding());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(boolean0);
      assertEquals("-suppressDeclaration", outputFormat0.getIndent());
      assertFalse(outputFormat0.isNewlines());
      assertEquals("\n", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("r!Z`cN48gX|Z", false, "r!Z`cN48gX|Z");
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('T');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (T)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.852140740384332
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setNewlines(false);
      outputFormat0.setPadText(false);
      outputFormat0.isTrimText();
      outputFormat0.getIndent();
      String[] stringArray0 = new String[8];
      OutputFormat.createPrettyPrint();
      stringArray0[0] = null;
      stringArray0[1] = null;
      stringArray0[2] = null;
      stringArray0[3] = null;
      stringArray0[4] = "";
      stringArray0[5] = null;
      outputFormat0.setIndent(false);
      stringArray0[6] = null;
      stringArray0[7] = null;
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.8532851225497633
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("qrdY0~OFIe-");
      outputFormat0.setLineSeparator("qrdY0~OFIe-");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "qrdY0~OFIe-";
      stringArray0[1] = "qrdY0~OFIe-";
      stringArray0[2] = "qrdY0~OFIe-";
      stringArray0[3] = "qrdY0~OFIe-";
      stringArray0[4] = "qrdY0~OFIe-";
      stringArray0[5] = "-newlines";
      stringArray0[6] = "-newlines";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setEncoding("cg8rKKG|c'h)gL ns4");
      outputFormat0.isNewlines();
      outputFormat0.setNewlines(false);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setNewlines(false);
      outputFormat0.isNewlines();
      outputFormat0.setSuppressDeclaration(true);
      int int0 = outputFormat0.parseOptions(stringArray0, 0);
      assertEquals("cg8rKKG|c'h)gL ns4", outputFormat0.getEncoding());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-xhtml12HO2{@sDvCJq");
      outputFormat0.setIndent((String) null);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-padText";
      stringArray0[1] = "-supresDeclNtion";
      stringArray0[2] = "-xhtml2H2{@sDvCJq";
      stringArray0[3] = null;
      stringArray0[4] = "-xhtml12HO2{@sDvCJq";
      outputFormat0.setIndentSize(1);
      assertEquals(" ", outputFormat0.getIndent());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.7937175017485838
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("12HO2{sDvCJq");
      outputFormat0.setIndentSize(0);
      outputFormat0.setIndent(false);
      outputFormat0.setIndentSize((-781));
      outputFormat0.setIndent(true);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-xhtml12HO2{@sDvCJq";
      stringArray0[1] = ")";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-781));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -781
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.2928952794152035
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setNewlines(true);
      outputFormat0.setXHTML(false);
      outputFormat0.isSuppressDeclaration();
      outputFormat0.setNewLineAfterNTags((-2864));
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setIndentSize(15);
      outputFormat1.setExpandEmptyElements(true);
      outputFormat1.isPadText();
      outputFormat1.setIndentSize(15);
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      outputFormat2.setSuppressDeclaration(false);
      OutputFormat outputFormat3 = OutputFormat.createCompactFormat();
      outputFormat3.setTrimText(true);
      outputFormat2.setTrimText(false);
      outputFormat2.setTrimText(true);
      outputFormat2.setIndentSize(889);
      outputFormat0.setLineSeparator("");
      outputFormat2.getIndent();
      OutputFormat.createCompactFormat();
      OutputFormat.createPrettyPrint();
      outputFormat0.setIndent("Di");
      assertEquals((-2864), outputFormat0.getNewLineAfterNTags());
      
      outputFormat3.setIndent("RkBld6");
      assertEquals('\"', outputFormat3.getAttributeQuoteCharacter());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.7392004731479975
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("12HO2{sDvCJq");
      outputFormat0.setIndent(true);
      outputFormat0.setIndentSize(0);
      outputFormat0.setTrimText(true);
      outputFormat0.setIndentSize(0);
      outputFormat0.setIndentSize(0);
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.setIndent(false);
      String[] stringArray0 = new String[9];
      stringArray0[1] = "rO]R:TkODR{";
      stringArray0[2] = "-xhtml12HO2{@sDvCJq";
      outputFormat0.setPadText(false);
      outputFormat0.parseOptions(stringArray0, 3373);
      outputFormat0.setIndentSize((-328));
      outputFormat0.parseOptions(stringArray0, 1);
      assertEquals("", outputFormat0.getIndent());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.576534609090467
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null, true, "T");
      outputFormat0.setIndent("");
      outputFormat0.setEncoding((String) null);
      outputFormat0.setIndentSize((-1079));
      outputFormat0.setNewlines(true);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setNewlines(true);
      outputFormat0.isOmitEncoding();
      outputFormat0.setLineSeparator("T");
      outputFormat0.setIndent("T");
      outputFormat0.getEncoding();
      assertEquals("T", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.93817812649062
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("12HO2{sDvCJq");
      outputFormat0.setIndentSize(0);
      String[] stringArray0 = new String[2];
      outputFormat0.setLineSeparator((String) null);
      stringArray0[0] = "12HO2{sDvCJq";
      outputFormat0.setNewLineAfterNTags(42);
      stringArray0[1] = "12HO2{sDvCJq";
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.parseOptions(stringArray0, 863);
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setLineSeparator("-xhtmlfavXr)+\"");
      int int0 = outputFormat0.parseOptions(stringArray0, 0);
      assertEquals("-xhtmlfavXr)+\"", outputFormat0.getLineSeparator());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.0347522396959996
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null, false, "T");
      outputFormat0.setIndent("");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "YR.5{j3Mb5^";
      stringArray0[1] = "-expandEmptyp{slK<oAU&#m";
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setLineSeparator("YR.5{j3Mb5^");
      assertTrue(outputFormat0.isExpandEmptyElements());
      
      OutputFormat outputFormat1 = new OutputFormat("T", false);
      assertFalse(outputFormat1.isPadText());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("b-FR_%", false, "b|OGkum^6YKi");
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions((String[]) null, (-1449));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=3.0881908159886837
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.setTrimText(true);
      outputFormat1.setNewlines(false);
      outputFormat0.isPadText();
      outputFormat1.setSuppressDeclaration(true);
      outputFormat0.setLineSeparator("s5;LD+#");
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat1.getLineSeparator();
      outputFormat0.isNewlines();
      // Undeclared exception!
      try { 
        outputFormat1.setAttributeQuoteCharacter('w');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (w)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("6[5*35cg'H~JDwbd", false, "W");
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.getLineSeparator();
      assertFalse(outputFormat0.isNewLineAfterDeclaration());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.2090584275903393
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("12HU2{sDvCJq");
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setIndent(true);
      outputFormat0.setIndentSize(0);
      outputFormat0.setTrimText(true);
      outputFormat0.setIndentSize(0);
      String[] stringArray0 = new String[1];
      outputFormat0.setIndent(true);
      outputFormat0.parseOptions(stringArray0, 1009);
      outputFormat0.setIndentSize(1009);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-2245));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2245
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.75012938226178
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[1] = "qrdY0OFIe-";
      stringArray0[2] = "qrdY0OFIe-";
      OutputFormat outputFormat0 = new OutputFormat("qrdY0OFIe-", false);
      outputFormat0.setEncoding(stringArray0[0]);
      outputFormat0.isNewlines();
      outputFormat0.setNewlines(false);
      OutputFormat outputFormat1 = new OutputFormat("ZDx");
      outputFormat1.setOmitEncoding(false);
      outputFormat0.setNewlines(false);
      outputFormat1.isOmitEncoding();
      outputFormat1.getEncoding();
      outputFormat0.setXHTML(false);
      outputFormat1.setIndent("UTF-8");
      assertEquals("UTF-8", outputFormat1.getIndent());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.963826488286453
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("#g>okN+F^k?H83o{E", false);
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setIndent("");
      outputFormat0.setIndent("#g>okN+F^k?H83o{E");
      outputFormat0.setXHTML(true);
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.setIndentSize(2);
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat0.isXHTML();
      outputFormat0.setTrimText(true);
      outputFormat0.setPadText(true);
      outputFormat0.isTrimText();
      char char0 = outputFormat0.getAttributeQuoteCharacter();
      assertEquals("  ", outputFormat0.getIndent());
      assertEquals('\"', char0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=3.3051586831891404
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.setTrimText(true);
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat0.setLineSeparator((String) null);
      outputFormat1.setEncoding(":A+;#-j0a[MrGel->");
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat1.isExpandEmptyElements();
      outputFormat0.isXHTML();
      outputFormat1.getAttributeQuoteCharacter();
      outputFormat1.setEncoding("4Z8RyIzu");
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      outputFormat0.setOmitEncoding(false);
      outputFormat2.setXHTML(false);
      outputFormat1.setOmitEncoding(false);
      outputFormat1.setPadText(true);
      outputFormat2.isTrimText();
      outputFormat1.setPadText(false);
      assertFalse(outputFormat1.isPadText());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.3048808282294293
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat0.setLineSeparator("");
      outputFormat0.isExpandEmptyElements();
      outputFormat1.getNewLineAfterNTags();
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      outputFormat2.setOmitEncoding(false);
      outputFormat0.setXHTML(true);
      outputFormat0.setNewlines(true);
      outputFormat0.getLineSeparator();
      outputFormat0.setEncoding(";{O}C&a?ll5`/NB");
      outputFormat1.setXHTML(false);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setExpandEmptyElements(true);
      boolean boolean0 = outputFormat0.isTrimText();
      assertEquals(";{O}C&a?ll5`/NB", outputFormat0.getEncoding());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.5084965683569505
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("12HO2{sDvCJq");
      outputFormat0.setIndentSize(0);
      outputFormat0.setIndent(false);
      outputFormat0.setIndentSize(0);
      outputFormat0.getNewLineAfterNTags();
      assertEquals("", outputFormat0.getIndent());
      
      outputFormat0.setIndentSize((-2071));
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-trimText";
      stringArray0[1] = "12HO2{sDvCJq";
      stringArray0[2] = "";
      stringArray0[3] = "-xhtml12HO2{@sDvCJq";
      stringArray0[4] = "12HO2{sDvCJq";
      stringArray0[5] = "12HO2{sDvCJq";
      stringArray0[6] = "-trimText";
      int int0 = outputFormat0.parseOptions(stringArray0, 0);
      assertEquals(1, int0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.6197895169208802
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setIndent(true);
      outputFormat0.setIndent("~}o*{j");
      assertEquals("~}o*{j", outputFormat0.getIndent());
      
      outputFormat0.setIndentSize(2);
      String[] stringArray0 = new String[4];
      stringArray0[1] = "-xhtml12HO2{@sDvCJq";
      stringArray0[2] = "-xhtml12HO2{@sDvCJq";
      stringArray0[3] = "";
      outputFormat0.parseOptions(stringArray0, 1016);
      int int0 = outputFormat0.parseOptions(stringArray0, 2);
      assertEquals(3, int0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=3.1013448627418367
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("Y?");
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.isTrimText();
      outputFormat0.setLineSeparator("Y?");
      outputFormat0.setIndent(false);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.isExpandEmptyElements();
      outputFormat0.setNewlines(true);
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.setIndent("Y?");
      outputFormat0.setTrimText(false);
      outputFormat0.setNewlines(true);
      outputFormat0.setPadText(false);
      outputFormat0.setLineSeparator("@V7'ty~3%Bl[,}a");
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.isNewlines();
      outputFormat0.setNewlines(false);
      assertEquals("@V7'ty~3%Bl[,}a", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("qrdY0~OFIe-");
      outputFormat0.setLineSeparator("qrdY0~OFIe-");
      outputFormat0.setIndent(false);
      outputFormat0.setIndentSize((-4572));
      OutputFormat outputFormat1 = new OutputFormat();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "qrdY0~OFIe-";
      stringArray0[1] = "-newlines";
      stringArray0[2] = "G^!2h.65>X";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-4572));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -4572
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "<";
      stringArray0[1] = " gF\"WqQ?'\"=7BD";
      stringArray0[2] = "";
      stringArray0[3] = "oJ?<X`s=NUhqI#";
      stringArray0[4] = "";
      stringArray0[5] = "8C^#(";
      stringArray0[6] = "-expandEmpty";
      stringArray0[7] = "7&$waPsp";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1980));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1980
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      String[] stringArray0 = new String[3];
      OutputFormat outputFormat0 = new OutputFormat("ZDx");
      outputFormat0.setOmitEncoding(false);
      outputFormat0.isOmitEncoding();
      outputFormat0.setIndent("Dw&o");
      assertEquals("Dw&o", outputFormat0.getIndent());
  }
}
