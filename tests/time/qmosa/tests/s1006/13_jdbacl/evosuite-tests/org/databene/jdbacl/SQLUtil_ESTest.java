/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 18:44:15 GMT 2019
 */

package org.databene.jdbacl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.io.PrintWriter;
import java.io.Reader;
import java.io.StreamTokenizer;
import java.io.StringReader;
import java.io.StringWriter;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Set;
import java.util.Vector;
import javax.sql.ConnectionPoolDataSource;
import org.apache.derby.iapi.services.context.ContextService;
import org.apache.derby.iapi.store.raw.xact.RawTransaction;
import org.apache.derby.impl.sql.catalog.DataDictionaryImpl;
import org.databene.commons.version.VersionNumber;
import org.databene.jdbacl.NameSpec;
import org.databene.jdbacl.SQLUtil;
import org.databene.jdbacl.model.CompositeDBObject;
import org.databene.jdbacl.model.DBCatalog;
import org.databene.jdbacl.model.DBColumn;
import org.databene.jdbacl.model.DBConstraint;
import org.databene.jdbacl.model.DBDataType;
import org.databene.jdbacl.model.DBForeignKeyConstraint;
import org.databene.jdbacl.model.DBNonUniqueIndex;
import org.databene.jdbacl.model.DBObject;
import org.databene.jdbacl.model.DBPackage;
import org.databene.jdbacl.model.DBPrimaryKeyConstraint;
import org.databene.jdbacl.model.DBSchema;
import org.databene.jdbacl.model.DBTable;
import org.databene.jdbacl.model.DBUniqueConstraint;
import org.databene.jdbacl.model.DBUniqueIndex;
import org.databene.jdbacl.model.DefaultDBColumn;
import org.databene.jdbacl.model.DefaultDBTable;
import org.databene.jdbacl.model.DefaultDatabase;
import org.databene.jdbacl.model.TableContainer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.h2.jdbcx.JdbcConnectionPool;
import org.hsqldb.jdbc.jdbcClob;
import org.junit.runner.RunWith;
import org.postgresql.ds.PGConnectionPoolDataSource;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SQLUtil_ESTest extends SQLUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.9557135998277697
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "alter tableinsert");
      StringBuilder stringBuilder0 = new StringBuilder("u`;{Ez");
      stringBuilder0.reverse();
      SQLUtil.mutatesDataOrStructure("alter tableinsert");
      defaultDBTable0.getPrimaryKeyConstraint();
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) null, stringBuilder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.9663267452196522
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "UQ0K>~]");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("UW)}Yq-PO9?Oul", (DBSchema) null);
      SQLUtil.isDML("UQ0K>~]");
      SQLUtil.isProcedureCall("UW)}Yq-PO9?Oul");
      Character character0 = Character.valueOf('+');
      Character.isBmpCodePoint(47);
      String string0 = SQLUtil.renderValue(character0);
      String string1 = SQLUtil.removeComments("UQ0K>~]");
      assertFalse(string1.equals((Object)string0));
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.1641933683302232
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      File file0 = MockFile.createTempFile("drop indexupdateamhag\"#ani$s)", "left");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(file0);
      char[] charArray0 = new char[7];
      charArray0[0] = 'x';
      charArray0[1] = '^';
      charArray0[2] = '@';
      charArray0[3] = 'q';
      charArray0[4] = '9';
      charArray0[5] = 'M';
      charArray0[6] = '`';
      mockPrintWriter0.println(charArray0);
      SQLUtil.renderCreateTable(defaultDBTable0, true, nameSpec0, mockPrintWriter0);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("O+2Q2m", defaultDBTable0, (-1258), "");
      defaultDBColumn0.getForeignKeyConstraint();
      // Undeclared exception!
      try { 
        SQLUtil.renderAddForeignKey((DBForeignKeyConstraint) null, nameSpec0, mockPrintWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.4841652152843623
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      String[] stringArray0 = new String[1];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      defaultDBTable0.getUniqueConstraint(stringArray0);
      DBDataType dBDataType0 = DBDataType.getInstance(1518, "C+a");
      Integer integer0 = new Integer(1518);
      dBDataType0.isAlpha();
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("C+a");
      Integer integer1 = new Integer((-1985470206));
      Integer integer2 = RawTransaction.LOCK_ESCALATE;
      Integer.compareUnsigned(1518, (-1985470206));
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("*b+<v|2-", defaultDBTable0, dBDataType0, integer0, integer2);
      defaultDBColumn0.setType(dBDataType0);
      String string0 = SQLUtil.renderColumn(defaultDBColumn0);
      assertEquals("*b+<v|2- C+A(1518,3) NULL", string0);
      
      SQLUtil.ownerDotComponent(defaultDBTable0);
      String string1 = SQLUtil.ownerDotComponent(defaultDBColumn0);
      assertEquals("null.*b+<v|2-", string1);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.290664210654739
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SQLUtil.mutatesStructure("kMBEgxPQ9~N");
      DBSchema dBSchema0 = new DBSchema("kMBEgxPQ9~N");
      DBSchema dBSchema1 = new DBSchema("hWFL");
      dBSchema1.setDoc("kMBEgxPQ9~N");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("hWFL", dBSchema1);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "hWFL";
      DBDataType dBDataType0 = DBDataType.getInstance((-2), "hWFL");
      Integer integer0 = new Integer(95);
      Integer.sum((-2), (-2));
      Integer integer1 = new Integer((-1996102693));
      DefaultDBTable defaultDBTable1 = new DefaultDBTable();
      Integer integer2 = RawTransaction.SAVEPOINT_ROLLBACK;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("alter materialized viewupdate'amhag\"#1ni$s)", defaultDBTable1, dBDataType0, integer2, integer1);
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable1, (String) null, true, stringArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      StringBuilder stringBuilder0 = SQLUtil.createConstraintSpecBuilder(dBUniqueConstraint0, nameSpec0);
      String string0 = "CHECK ";
      StringBuilder stringBuilder1 = SQLUtil.addRequiredCondition("CHECK ", stringBuilder0);
      dBDataType0.isAlpha();
      // Undeclared exception!
      try { 
        stringBuilder1.appendCodePoint((-1332));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.8512196535223662
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)3;
      byteArray0[1] = (byte)120;
      byteArray0[2] = (byte) (-124);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      String[] stringArray0 = new String[4];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("");
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "bsu", false, stringArray0);
      Integer integer0 = RawTransaction.ABORT;
      Integer integer1 = RawTransaction.COMMIT;
      Integer.valueOf(4);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      DBDataType dBDataType0 = DBDataType.getInstance(344, "updateng6,7u");
      Integer integer2 = new Integer(4);
      Integer.sum(509, (-1996102693));
      Integer integer3 = new Integer((-1996102693));
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("updateng6,7u", defaultDBTable0, dBDataType0, integer0, integer3);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("alter session", false, dBPrimaryKeyConstraint0);
      dBPrimaryKeyConstraint0.isIdentical(dBUniqueIndex0);
      StringBuilder stringBuilder0 = SQLUtil.createConstraintSpecBuilder(dBPrimaryKeyConstraint0, nameSpec0);
      StringBuilder stringBuilder1 = SQLUtil.addRequiredCondition("updateng6,7u", stringBuilder0);
      dBDataType0.isAlpha();
      StringBuilder stringBuilder2 = stringBuilder1.appendCodePoint(4);
      SQLUtil.addOptionalCondition("", stringBuilder1);
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0, stringBuilder0);
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0, stringBuilder2);
      assertEquals("updateng6,7u\u0004 or UPDATENG6,7U(1,-1996102693)UPDATENG6,7U(1,-1996102693)", stringBuilder2.toString());
      assertEquals("updateng6,7u\u0004 or UPDATENG6,7U(1,-1996102693)UPDATENG6,7U(1,-1996102693)", stringBuilder0.toString());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.7893713507820492
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "iw/SJB#iXT+0p";
      SQLUtil.renderColumnListWithTableName("iw/SJB#iXT+0p", stringArray0);
      SQLUtil.leftJoin("update9_nhkw9<:+", stringArray0, "iw/SJB#iXT+0p", "update9_nhkw9<:+", stringArray0);
      SQLUtil.isProcedureCall("iw/SJB#iXT+0p");
      SQLUtil.parseColumnTypeAndSize("update9_nhkw9<:+");
      SQLUtil.normalize("iw/SJB#iXT+0p.iw/SJB#iXT+0p", false);
      SQLUtil.join("rename", "", stringArray0, "", "left join iw/SJB#iXT+0p as update9_nhkw9<:+ on update9_nhkw9<:+.iw/SJB#iXT+0p = update9_nhkw9<:+.iw/SJB#iXT+0p", stringArray0);
      DataDictionaryImpl dataDictionaryImpl0 = new DataDictionaryImpl();
      LinkedList<DBColumn> linkedList0 = new LinkedList<DBColumn>();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("iw / SJB # iXT + 0p.iw / SJB # iXT + 0p");
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "X0Y58.S", true, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("org.apache.derby.impl.store.access.btree.ControlRow", false, dBUniqueConstraint0);
      DBTable dBTable0 = dBUniqueIndex0.getTable();
      int int0 = 57;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("k+] 7( L99P8c](bD 6", dBTable0, 57, "left join iw/SJB#iXT+0p as update9_nhkw9<:+ on update9_nhkw9<:+.iw/SJB#iXT+0p = update9_nhkw9<:+.iw/SJB#iXT+0p");
      linkedList0.add((DBColumn) defaultDBColumn0);
      SQLUtil.renderColumnNames((List<DBColumn>) linkedList0);
      SQLUtil.join("iw/SJB#iXT+0p", "upda", stringArray0, "", "X0Y58.S", stringArray0);
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "org.apache.derby.impl.store.access.btree.ControlRow");
      // Undeclared exception!
      try { 
        stringBuilder0.append((CharSequence) "iw/SJB#iXT+0p", (-9), 57);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // start -9, end 57, s.length() 13
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.ownerDotComponent((DBObject) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SQLUtil.parseColumnTypeAndSize("CHECK ");
      TableContainer tableContainer0 = new TableContainer("MSTTq2856^8sl");
      tableContainer0.getSchema();
      DBPackage dBPackage0 = new DBPackage("MSTTq2856^8sl", (DBSchema) null);
      String string0 = SQLUtil.ownerDotComponent(dBPackage0);
      assertEquals("MSTTq2856^8sl", string0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[1] = ";dP{Tm9p";
      String[] stringArray1 = new String[3];
      stringArray1[0] = "bsu";
      stringArray1[1] = "hWFL";
      stringArray1[2] = "hWFL";
      DBSchema dBSchema0 = new DBSchema("hWFL");
      dBSchema0.setDoc("WWqkjFuh6VEfWC3=!_");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("hWFL", dBSchema0);
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("hWFL", false, defaultDBTable0, stringArray0, defaultDBTable0, stringArray1);
      defaultDBTable0.setDoc(";dP{Tm9p");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("drop tableselect intocreate tableexecnv3nm<^<k", defaultDBTable0, (-162442624), "hWFL");
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0, (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("YZ0_I2~3_lEqd", (DBSchema) null);
      defaultDBTable0.getPrimaryKeyConstraint();
      DBDataType dBDataType0 = DBDataType.getInstance(90117, "YZ0_I2~3_lEqd");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("YZ0_I2~3_lEqd", defaultDBTable0, dBDataType0, (Integer) null);
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "YZ0_I2~3_lEqd");
      char[] charArray0 = new char[2];
      charArray0[0] = '?';
      charArray0[1] = 'K';
      defaultDBColumn0.setDefaultValue("YZ0_I2~3_lEqd");
      StringBuilder stringBuilder1 = stringBuilder0.append(charArray0);
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0, stringBuilder1);
      assertEquals("YZ0_I2~3_lEqd?KYZ0_I2~3_LEQD", stringBuilder1.toString());
      
      DBColumn[] dBColumnArray0 = new DBColumn[4];
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[1] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[2] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[3] = (DBColumn) defaultDBColumn0;
      String string0 = SQLUtil.renderColumnNames(dBColumnArray0);
      assertEquals("YZ0_I2~3_lEqd, YZ0_I2~3_lEqd, YZ0_I2~3_lEqd, YZ0_I2~3_lEqd", string0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.3896604215404316
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "iw/SJB#iXT+0p";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      boolean boolean0 = SQLUtil.isDDL("iw/SJB#iXT+0p");
      System.setCurrentTimeMillis((-3667L));
      Boolean boolean1 = SQLUtil.mutatesDataOrStructure("alter tableinsert");
      assertTrue(boolean1);
      assertNotNull(boolean1);
      
      boolean boolean2 = SQLUtil.isDML("iw/SJB#iXT+0p");
      assertTrue(boolean2 == boolean0);
      
      String string0 = SQLUtil.join("@]x4,>9OM?KQM\"%<Zt", "iw/SJB#iXT+0p", stringArray0, "@]x4,>9OM?KQM\"%<Zt", " or ", stringArray0);
      assertEquals("@]x4,>9OM?KQM\"%<Zt join @]x4,>9OM?KQM\"%<Zt as  or  on iw/SJB#iXT+0p.iw/SJB#iXT+0p =  or .iw/SJB#iXT+0p", string0);
      
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, " or ", true, stringArray0);
      String string1 = SQLUtil.constraintName(dBUniqueConstraint0);
      assertEquals("CONSTRAINT \" or \" ", string1);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String[] stringArray0 = new String[1];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      defaultDBTable0.getUniqueConstraint(stringArray0);
      DBDataType dBDataType0 = DBDataType.getInstance(1518, "C+a");
      Integer integer0 = new Integer(1518);
      dBDataType0.isAlpha();
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("C+a");
      Integer integer1 = new Integer((-1985470206));
      Integer integer2 = RawTransaction.LOCK_ESCALATE;
      Integer.remainderUnsigned((-1985470206), 1518);
      Integer.compareUnsigned(1518, (-1985470206));
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("*b+<v|2-", defaultDBTable0, dBDataType0, integer0, integer2);
      defaultDBColumn0.setType(dBDataType0);
      String string0 = SQLUtil.renderColumn(defaultDBColumn0);
      assertEquals("*b+<v|2- C+A(1518,3) NULL", string0);
      
      DBColumn[] dBColumnArray0 = new DBColumn[6];
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[1] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[2] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[3] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[4] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[5] = (DBColumn) defaultDBColumn0;
      String string1 = SQLUtil.renderColumnNames(dBColumnArray0);
      assertEquals("*b+<v|2-, *b+<v|2-, *b+<v|2-, *b+<v|2-, *b+<v|2-, *b+<v|2-", string1);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.5320629486398087
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SQLUtil.mutatesStructure("drop materialized view");
      SQLUtil.isQuery("drop materialized view");
      StringBuilder stringBuilder0 = new StringBuilder("");
      stringBuilder0.append("");
      SQLUtil.mutatesDataOrStructure("##UnWindowingColumn");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("##UnWindowingColumn", (DBTable) null, 57, "org.apache.derby.iapi.services.stream.InfoStreams");
      LinkedList<DBColumn> linkedList0 = new LinkedList<DBColumn>();
      linkedList0.add((DBColumn) defaultDBColumn0);
      SQLUtil.renderColumnNames((List<DBColumn>) linkedList0);
      DBCatalog dBCatalog0 = new DBCatalog();
      dBCatalog0.getSchema("alter materialized view1jvk/lzx f\"");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("alter materialized view1jvk/lzx f\"", (DBSchema) null);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "alter materialized view1jvk/lzx f\"";
      // Undeclared exception!
      try { 
        defaultDBTable0.getForeignKeyConstraint(stringArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Table 'alter materialized view1jvk/lzx f\"' has no foreign key with the columns (alter materialized view1jvk/lzx f\")
         //
         verifyException("org.databene.jdbacl.model.DefaultDBTable", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.3554595688722784
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      String[] stringArray0 = new String[4];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      defaultDBTable0.getPrimaryKeyConstraint();
      defaultDBTable0.setPrimaryKey((DBPrimaryKeyConstraint) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "1:");
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "org.apache.derby.impl.store.access.btree.BranchControlRow", false, stringArray0);
      SQLUtil.isDML("create tableexecnv3nm<^<k");
      dBPrimaryKeyConstraint0.setDoc("selectng6,7u");
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      SQLUtil.constraintSpec(dBPrimaryKeyConstraint0, nameSpec0);
      DBColumn[] dBColumnArray0 = new DBColumn[0];
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames(dBColumnArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DBColumn dBColumn0 = null;
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnTypeWithSize((DBColumn) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.9313637081915067
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Integer integer0 = RawTransaction.COMMIT;
      boolean boolean0 = SQLUtil.isProcedureCall("execute");
      assertTrue(boolean0);
      
      String string0 = SQLUtil.normalize("Invalid character data was found.  This is most likely caused by stored data containing characters that are invalid for the character set the database was created in.  The most common example of this is storing 8bit data in a SQL_ASCII database.", true);
      assertEquals("Invalid character data was found.This is most likely caused by stored data containing characters that are invalid for the character set the database was created in.The most common example of this is storing 8bit data in a SQL_ASCII database.", string0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      String string0 = "Illegal column type format: ";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Illegal column type format: ");
      String[] stringArray0 = new String[0];
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("(kll,yxc|'D|i\"i?i'");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal column type format: (kll,yxc|'D|i\"i?i'
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.8505612088663046
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      defaultDBTable0.getPrimaryKeyConstraint();
      File file0 = MockFile.createTempFile("left", "drop indexupdateamhag\"#ani$s)");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(file0);
      char[] charArray0 = new char[8];
      charArray0[0] = 'M';
      charArray0[1] = '%';
      charArray0[2] = '9';
      charArray0[3] = '^';
      charArray0[4] = '@';
      charArray0[5] = '@';
      charArray0[6] = 'M';
      charArray0[7] = '9';
      mockPrintWriter0.println(charArray0);
      DBSchema dBSchema0 = new DBSchema("drop indexupdateamhag\"#ani$s)");
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("left", dBSchema0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      SQLUtil.renderCreateTable(defaultDBTable1, false, nameSpec0, mockPrintWriter0);
      // Undeclared exception!
      try { 
        SQLUtil.renderNumber((StreamTokenizer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.06075971812573
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      String[] stringArray0 = new String[1];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      defaultDBTable0.getUniqueConstraint(stringArray0);
      DBDataType dBDataType0 = DBDataType.getInstance(1519, "C+a");
      Integer integer0 = new Integer(1519);
      Integer.compareUnsigned((-1914), 9);
      dBDataType0.isAlpha();
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("C+a");
      Integer integer1 = new Integer((-1985470206));
      Integer integer2 = RawTransaction.COMMIT;
      Integer.compareUnsigned(1519, (-1985470206));
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("*b+<v|2-", defaultDBTable0, dBDataType0, integer0, integer2);
      defaultDBColumn0.setType(dBDataType0);
      SQLUtil.renderColumn(defaultDBColumn0);
      SQLUtil.typeAndName((DBObject) null);
      SQLUtil.renderColumnListWithTableName("SMs)1M0W/Ly,\"d", stringArray0);
      String[] stringArray1 = new String[7];
      stringArray1[0] = "SMs)1M0W/Ly,\"d";
      stringArray1[2] = "SALT '";
      stringArray1[4] = "*b+<v|2-";
      stringArray1[5] = "(";
      stringArray1[6] = "SMs)1M0W/Ly,\"d.null";
      // Undeclared exception!
      try { 
        SQLUtil.leftJoin("*b+<v|2-", stringArray1, "*b+<v|2-", "SALT '", stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.116740672535303
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "iw/SJB#iXT+0p";
      TableContainer tableContainer0 = new TableContainer("iw/SJB#iXT+0p");
      tableContainer0.getSchema();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      defaultDBTable0.getUniqueConstraint(stringArray0);
      SQLUtil.normalize("p'WS}aDMe-Dn=I!", false);
      Object object0 = new Object();
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      Integer.compareUnsigned((-2858), 0);
      Integer integer1 = new Integer((-2858));
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((DBColumn[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.207328981387181
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesStructure("kMBEgxPQ9~N\"");
      assertFalse(boolean0);
      
      DBSchema dBSchema0 = new DBSchema("kMBEgxPQ9~N\"");
      DBSchema dBSchema1 = new DBSchema("hWFL");
      dBSchema1.setDoc("kMBEgxPQ9~N\"");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("hWFL", dBSchema1);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "hWFL";
      stringArray0[1] = "kMBEgxPQ9~N\"";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("WWqkjFuh6VEfWC3=!_", false, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      defaultDBTable0.setDoc("v6_UVDKV[ZN:Swb]");
      NameSpec nameSpec0 = NameSpec.NEVER;
      SQLUtil.appendConstraintName((DBConstraint) dBForeignKeyConstraint0, (StringBuilder) null, nameSpec0);
      boolean boolean1 = SQLUtil.isDML("kMBEgxPQ9~N\"");
      assertFalse(boolean1);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.5788449127168476
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      String[] stringArray0 = new String[4];
      SQLUtil.normalize("ZW(Q&TB", true);
      Object object0 = new Object();
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      Integer.compareUnsigned(335544421, 2);
      SQLUtil.renderValue("");
      // Undeclared exception!
      try { 
        DBDataType.getInstance("create table");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.model.DBDataType", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.1032731737259827
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      defaultDBTable0.getPrimaryKeyConstraint();
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String[] stringArray0 = new String[7];
      stringArray0[0] = "create tableupdateamhag\"#ani$s)";
      stringArray0[1] = "create tableupdateamhag\"#ani$s)";
      stringArray0[2] = "create tableupdateamhag\"#ani$s)";
      stringArray0[3] = "create tableupdateamhag\"#ani$s)";
      stringArray0[4] = "create tableupdateamhag\"#ani$s)";
      stringArray0[5] = "create tableupdateamhag\"#ani$s)";
      stringArray0[6] = "create tableupdateamhag\"#ani$s)";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "create tableupdateamhag\"#ani$s)", true, stringArray0);
      SQLUtil.constraintSpec(dBUniqueConstraint0, nameSpec0);
      StringBuilder stringBuilder0 = new StringBuilder("MAX_LENGTH_INPLACE_LOB");
      StringBuilder stringBuilder1 = stringBuilder0.reverse();
      // Undeclared exception!
      try { 
        stringBuilder1.delete((-212), 2448);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -212
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("org.apache.derby.impl.sql.execute.CreateTableConstantAction");
      CompositeDBObject<DBForeignKeyConstraint> compositeDBObject0 = (CompositeDBObject<DBForeignKeyConstraint>) mock(CompositeDBObject.class, new ViolatedAssumptionAnswer());
      defaultDBTable0.setOwner(compositeDBObject0);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("w*", defaultDBTable0, (-1424), "org.apache.derby.impl.sql.execute.CreateTableConstantAction");
      DBDataType dBDataType0 = DBDataType.getInstance((-1424), "w*");
      dBDataType0.isNumber();
      defaultDBColumn0.setType(dBDataType0);
      defaultDBColumn0.setOwner(defaultDBTable0);
      Character character0 = Character.valueOf('P');
      String string0 = SQLUtil.substituteMarkers("j~aMzLp", "C:P>&pU^`", character0);
      assertEquals("j~aMzLp", string0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "&:w>VL804uUB{<qZqS", true, (String[]) null);
      defaultDBTable0.setPrimaryKey(dBPrimaryKeyConstraint0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "&:w>VL804uUB{<qZqS");
      String[] stringArray0 = new String[0];
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint1 = new DBPrimaryKeyConstraint(defaultDBTable0, "&:w>VL804uUB{<qZqS", true, stringArray0);
      SQLUtil.isDML("create tableexecnv3nm<^<k");
      Vector<DBColumn> vector0 = new Vector<DBColumn>();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) vector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      defaultDBTable0.getPrimaryKeyConstraint();
      defaultDBTable0.setPrimaryKey((DBPrimaryKeyConstraint) null);
      String[] stringArray0 = null;
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause((String[]) null, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.810116318288409
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "$C^?2'~Vt";
      stringArray0[1] = "C+a";
      stringArray0[2] = "x_1f>#";
      stringArray0[3] = " as ";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      defaultDBTable0.getUniqueConstraint(stringArray0);
      String[] stringArray1 = new String[8];
      stringArray1[0] = "x_1f>#";
      stringArray1[1] = "$C^?2'~Vt";
      stringArray1[2] = "C+a";
      stringArray1[3] = "x_1f>#";
      stringArray1[4] = " as ";
      stringArray1[5] = " as ";
      stringArray1[6] = " as ";
      stringArray1[7] = "x_1f>#";
      // Undeclared exception!
      try { 
        SQLUtil.innerJoin("x_1f>#", stringArray1, "C+a", "org.apache.derby.impl.sql.catalog.DD_Version", stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.815904955321774
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SQLUtil.mutatesStructure("kMBEgxPQ9~N\"");
      SQLUtil.isQuery("kMBEgxPQ9~N\"");
      StringBuilder stringBuilder0 = new StringBuilder();
      stringBuilder0.append("");
      SQLUtil.mutatesDataOrStructure("UNIQUE ");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("select#%ua4^th6", (DBTable) null, 57, " NOT NULL");
      LinkedList<DBColumn> linkedList0 = new LinkedList<DBColumn>();
      linkedList0.poll();
      linkedList0.add((DBColumn) defaultDBColumn0);
      SQLUtil.renderColumnNames((List<DBColumn>) linkedList0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("kMBEgxPQ9~N\"");
      defaultDBTable0.getPrimaryKeyConstraint();
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.ukSpec((DBUniqueConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.1861157092681336
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      SQLUtil.isDDL("8lI9Cj^");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "Bte&[j73yx-&";
      stringArray0[1] = "8lI9Cj^";
      stringArray0[2] = "Bte&[j73yx-&";
      stringArray0[3] = "8lI9Cj^";
      stringArray0[4] = "Bte&[j73yx-&";
      String string0 = SQLUtil.leftJoin("Bte&[j73yx-&", stringArray0, "8lI9Cj^", " (", stringArray0);
      assertEquals("left join 8lI9Cj^ as  ( on Bte&[j73yx-&.Bte&[j73yx-& =  (.Bte&[j73yx-& and Bte&[j73yx-&.8lI9Cj^ =  (.8lI9Cj^ and Bte&[j73yx-&.Bte&[j73yx-& =  (.Bte&[j73yx-& and Bte&[j73yx-&.8lI9Cj^ =  (.8lI9Cj^ and Bte&[j73yx-&.Bte&[j73yx-& =  (.Bte&[j73yx-&", string0);
      
      SQLUtil.substituteMarkers(" for ", "Bte&[j73yx-&", "Bte&[j73yx-&");
      SQLUtil.substituteMarkers("Bte&[j73yx-&", "8lI9Cj^", "8lI9Cj^");
      SQLUtil.join(" DEFAULT ", "pj5dnr:cmgIrjtJtZxd", stringArray0, "create materialized viewinsert", "4=$fP$4hW9*s?", stringArray0);
      boolean boolean0 = SQLUtil.isProcedureCall("Bte&[j73yx-&");
      assertFalse(boolean0);
      
      SQLUtil.isQuery(" DEFAULT  join create materialized viewinsert as 4=$fP$4hW9*s? on pj5dnr:cmgIrjtJtZxd.Bte&[j73yx-& = 4=$fP$4hW9*s?.Bte&[j73yx-& and pj5dnr:cmgIrjtJtZxd.8lI9Cj^ = 4=$fP$4hW9*s?.8lI9Cj^ and pj5dnr:cmgIrjtJtZxd.Bte&[j73yx-& = 4=$fP$4hW9*s?.Bte&[j73yx-& and pj5dnr:cmgIrjtJtZxd.8lI9Cj^ = 4=$fP$4hW9*s?.8lI9Cj^ and pj5dnr:cmgIrjtJtZxd.Bte&[j73yx-& = 4=$fP$4hW9*s?.Bte&[j73yx-&");
      String string1 = SQLUtil.renderWhereClause(stringArray0, stringArray0);
      assertEquals("Bte&[j73yx-& = 'Bte&[j73yx-&' AND 8lI9Cj^ = '8lI9Cj^' AND Bte&[j73yx-& = 'Bte&[j73yx-&' AND 8lI9Cj^ = '8lI9Cj^' AND Bte&[j73yx-& = 'Bte&[j73yx-&'", string1);
      
      SQLUtil.isDML("Bte&[j73yx-& = 'Bte&[j73yx-&' AND 8lI9Cj^ = '8lI9Cj^' AND Bte&[j73yx-& = 'Bte&[j73yx-&' AND 8lI9Cj^ = '8lI9Cj^' AND Bte&[j73yx-& = 'Bte&[j73yx-&'");
      DBCatalog dBCatalog0 = new DBCatalog("[yLX[`:");
      DBSchema dBSchema0 = new DBSchema("ZO(s_$SxX", dBCatalog0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("insert", dBSchema0);
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "ZO(s_$SxX", false, stringArray0);
      dBUniqueConstraint0.setDoc("8lI9Cj^");
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String string2 = SQLUtil.constraintSpec(dBUniqueConstraint0, nameSpec0);
      assertEquals("UNIQUE (Bte&[j73yx-&, 8lI9Cj^, Bte&[j73yx-&, 8lI9Cj^, Bte&[j73yx-&)", string2);
      
      SQLUtil.mutatesStructure(")");
      Boolean boolean1 = SQLUtil.mutatesDataOrStructure("8lI9Cj^");
      assertNull(boolean1);
      
      VersionNumber versionNumber0 = VersionNumber.valueOf("create materialized view");
      DefaultDatabase defaultDatabase0 = new DefaultDatabase("left join 8lI9Cj^ as  ( on Bte&[j73yx-&.Bte&[j73yx-& =  (.Bte&[j73yx-& and Bte&[j73yx-&.8lI9Cj^ =  (.8lI9Cj^ and Bte&[j73yx-&.Bte&[j73yx-& =  (.Bte&[j73yx-& and Bte&[j73yx-&.8lI9Cj^ =  (.8lI9Cj^ and Bte&[j73yx-&.Bte&[j73yx-& =  (.Bte&[j73yx-&", "*Pq^m;Q~yKKp)t=]", versionNumber0);
      DBCatalog dBCatalog1 = new DBCatalog("Bte&[j73yx-&", defaultDatabase0);
      dBUniqueConstraint0.isIdentical(dBCatalog1);
      NameSpec nameSpec1 = NameSpec.ALWAYS;
      StringBuilder stringBuilder0 = SQLUtil.createConstraintSpecBuilder(dBUniqueConstraint0, nameSpec1);
      assertEquals("CONSTRAINT ZO(s_$SxX ", stringBuilder0.toString());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "insert";
      stringArray0[1] = "insert";
      stringArray0[2] = "insert";
      stringArray0[3] = "insert";
      stringArray0[4] = "insert";
      SQLUtil.renderColumnListWithTableName("insert", stringArray0);
      String string0 = null;
      // Undeclared exception!
      try { 
        SQLUtil.isDDL((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.512450879249128
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[1] = "bsu";
      String[] stringArray1 = new String[3];
      stringArray1[0] = "bsu";
      SQLUtil.join("getprojectr", "hWFL", stringArray0, "deletegetprojectrestrictresultset", "deletegetprojectrestrictresultset", stringArray0);
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause(stringArray0, stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String string0 = "";
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      String string1 = ";dP{Tm9p";
      String string2 = "hWFL";
      String[] stringArray1 = new String[6];
      stringArray1[0] = ";dP{Tm9p";
      stringArray1[1] = "hWFL";
      stringArray1[2] = "";
      stringArray1[3] = "hWFL";
      stringArray1[4] = ";dP{Tm9p";
      stringArray1[5] = "";
      // Undeclared exception!
      try { 
        SQLUtil.join("", ";dP{Tm9p", stringArray0, "", " WHERE ", stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable(";dP{Tm9p");
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      Integer integer1 = RawTransaction.COMMIT;
      Integer.compare((-1840700267), (-1840700267));
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("@U@3z", defaultDBTable0, (DBDataType) null, integer0, integer1);
      defaultDBColumn0.setType((DBDataType) null);
      // Undeclared exception!
      try { 
        SQLUtil.renderColumn(defaultDBColumn0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      String string0 = null;
      // Undeclared exception!
      try { 
        SQLUtil.isQuery((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      char[] charArray0 = new char[7];
      charArray0[0] = 'x';
      charArray0[1] = '^';
      charArray0[3] = 'q';
      charArray0[3] = '9';
      charArray0[5] = 'M';
      charArray0[6] = '`';
      defaultDBTable0.getUniqueConstraints(false);
      defaultDBTable0.getPrimaryKeyConstraint();
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.constraintSpec((DBConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.3412474390077769
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[1] = "J*F8tPG]KHJO+";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "";
      defaultDBTable0.getPrimaryKeyConstraint();
      defaultDBTable0.setPrimaryKey((DBPrimaryKeyConstraint) null);
      StringBuilder stringBuilder0 = new StringBuilder("alter tablein");
      SQLUtil.addOptionalCondition("", stringBuilder0);
      assertEquals("alter tablein or ", stringBuilder0.toString());
      
      String string0 = SQLUtil.renderWhereClause(stringArray0, stringArray0);
      assertEquals(" = '' AND J*F8tPG]KHJO+ = 'J*F8tPG]KHJO+' AND  = '' AND  = '' AND  = '' AND  = '' AND  = ''", string0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      jdbcClob jdbcClob0 = new jdbcClob(" on ");
      Reader reader0 = jdbcClob0.getCharacterStream();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(reader0);
      SQLUtil.renderNumber(streamTokenizer0);
      SQLUtil.isQuery(" on ");
      // Undeclared exception!
      try { 
        SQLUtil.substituteMarkers((String) null, " on ", " on ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "CALL SCOPE_IENTIT#()";
      stringArray0[1] = "CALL SCOPE_IENTIT#()";
      stringArray0[2] = "CALL SCOPE_IENTIT#()";
      defaultDBTable0.getForeignKeyConstraints();
      stringArray0[3] = "CALL SCOPE_IENTIT#()";
      stringArray0[4] = "CALL SCOPE_IENTIT#()";
      stringArray0[5] = "CALL SCOPE_IENTIT#()";
      defaultDBTable0.getUniqueConstraint(stringArray0);
      DBDataType dBDataType0 = DBDataType.getInstance(4588, "L");
      Integer integer0 = new Integer(39);
      DBDataType dBDataType1 = DBDataType.getInstance((-62568013), "CALL SCOPE_IENTIT#()");
      dBDataType1.isAlpha();
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("*LfDfDV ^SezLsDCwe^");
      Integer integer1 = new Integer((-44836242));
      Integer integer2 = RawTransaction.LOCK_ESCALATE;
      Integer.compareUnsigned(4588, 3541);
      Integer integer3 = new Integer((-1891360635));
      Integer integer4 = RawTransaction.LOCK_ESCALATE;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("- ", defaultDBTable1, dBDataType0, integer4, integer1);
      Integer integer5 = RawTransaction.COMMIT;
      DefaultDBColumn defaultDBColumn1 = new DefaultDBColumn("upda", defaultDBTable1, dBDataType0, integer5);
      defaultDBColumn0.setType(dBDataType1);
      String string0 = SQLUtil.renderColumn(defaultDBColumn1);
      assertEquals("upda L(0) NULL", string0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.6868359830561608
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      String[] stringArray0 = new String[5];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      defaultDBTable0.getIndexes();
      defaultDBTable0.getUniqueConstraint(stringArray0);
      SQLUtil.normalize("A4gXuvR)Ppvqr9", false);
      Object object0 = new Object();
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      Integer.compareUnsigned(218, 0);
      SQLUtil.renderValue(integer0);
      String string0 = "create table";
      // Undeclared exception!
      try { 
        DBDataType.getInstance("create table");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.model.DBDataType", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      String[] stringArray0 = new String[1];
      String string0 = "C+a";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("C+a");
      defaultDBTable0.getPrimaryKeyConstraint();
      defaultDBTable0.setPrimaryKey((DBPrimaryKeyConstraint) null);
      String string1 = "BLOB";
      String string2 = " WHERE ";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, " WHERE ", false, stringArray0);
      // Undeclared exception!
      try { 
        SQLUtil.constraintName((DBConstraint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      String string0 = "inse";
      String string1 = "-+pB+D$pf0d?6cO\">";
      String string2 = "hWFL";
      String[] stringArray0 = null;
      // Undeclared exception!
      try { 
        SQLUtil.join("inse", "CONCUR_UPDATABLE => CONCUR_READ_ONLY", (String[]) null, "hWFL", "setNClob(int, Reader, long)", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.322122307526584
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      SQLUtil.mutatesDataOrStructure("execn3nm<^<k");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      defaultDBTable0.getPrimaryKeyConstraint();
      DBUniqueIndex dBUniqueIndex0 = null;
      try {
        dBUniqueIndex0 = new DBUniqueIndex("9y~Q7/W ssCNt?Ulc", false, (DBUniqueConstraint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.model.DBUniqueIndex", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.7546963228531545
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[1] = "J*F8tP]wHJO+";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      String string0 = SQLUtil.join("", "W5'gI8na", stringArray0, "J*F8tP]wHJO+", (String) null, stringArray0);
      assertEquals("J*F8tP]wHJO+ as null on W5'gI8na. = null. and W5'gI8na.J*F8tP]wHJO+ = null.J*F8tP]wHJO+ and W5'gI8na. = null. and W5'gI8na. = null. and W5'gI8na. = null. and W5'gI8na. = null. and W5'gI8na.null = null.null", string0);
      
      Object object0 = new Object();
      String string1 = SQLUtil.renderValue(defaultDBTable0);
      assertNull(string1);
      
      SQLUtil sQLUtil0 = new SQLUtil();
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("");
      assertNull(boolean0);
      
      String string2 = SQLUtil.renderColumnListWithTableName("6:[z'S.aJ@|\"", stringArray0);
      assertEquals("6:[z'S.aJ@|\"., 6:[z'S.aJ@|\".J*F8tP]wHJO+, 6:[z'S.aJ@|\"., 6:[z'S.aJ@|\"., 6:[z'S.aJ@|\"., 6:[z'S.aJ@|\"., 6:[z'S.aJ@|\".null", string2);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      String[] stringArray0 = new String[1];
      // Undeclared exception!
      try { 
        SQLUtil.join("", (String) null, (String[]) null, "k^<p]|v*|BW Kfzj r", "I7bk", stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.5131939972990156
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      SQLUtil.mutatesDataOrStructure("");
      SQLUtil.isDML("*_fllW-@q`O-Gm");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "*_fllW-@q`O-Gm";
      stringArray0[1] = "*_fllW-@q`O-Gm";
      stringArray0[2] = "*_fllW-@q`O-Gm";
      stringArray0[3] = "*_fllW-@q`O-Gm";
      stringArray0[4] = "";
      stringArray0[5] = "derby.storage.streamFileBufferSize";
      stringArray0[6] = "executevr";
      String[] stringArray1 = new String[6];
      stringArray1[0] = "";
      stringArray1[1] = "executevr";
      stringArray1[2] = "";
      stringArray1[3] = "";
      stringArray1[4] = "";
      stringArray1[5] = "";
      // Undeclared exception!
      try { 
        SQLUtil.leftJoin("", stringArray0, "derby.storage.streamFileBufferSize", "*_fllW-@q`O-Gm", stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.4359838465843624
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      SQLUtil.mutatesDataOrStructure("VR");
      CompositeDBObject<DBForeignKeyConstraint> compositeDBObject0 = (CompositeDBObject<DBForeignKeyConstraint>) mock(CompositeDBObject.class, new ViolatedAssumptionAnswer());
      TableContainer tableContainer0 = new TableContainer("VR", compositeDBObject0);
      tableContainer0.getTable("VR");
      NameSpec nameSpec0 = NameSpec.NEVER;
      PGConnectionPoolDataSource pGConnectionPoolDataSource0 = new PGConnectionPoolDataSource();
      pGConnectionPoolDataSource0.getDescription();
      pGConnectionPoolDataSource0.getLoginTimeout();
      pGConnectionPoolDataSource0.getLogWriter();
      JdbcConnectionPool jdbcConnectionPool0 = JdbcConnectionPool.create((ConnectionPoolDataSource) pGConnectionPoolDataSource0);
      jdbcConnectionPool0.getLogWriter();
      // Undeclared exception!
      try { 
        SQLUtil.renderCreateTable((DBTable) null, false, nameSpec0, (PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.394714983677679
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      String string0 = "kMBEgxPQ9~N\"";
      Boolean.valueOf("kMBEgxPQ9~N\"");
      String string1 = "J~bujM.`b@";
      SQLUtil.isDDL("alter tableinsert");
      // Undeclared exception!
      try { 
        SQLUtil.mutatesDataOrStructure((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.128212582878733
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      String string0 = "org.apache.derby.iapi.sql.dictionary.SubConstraintDescriptor";
      SQLUtil.removeComments("org.apache.derby.iapi.sql.dictionary.SubConstraintDescriptor");
      SQLUtil.normalize("org.apache.derby.iapi.sql.dictionary.SubConstraintDescriptor", false);
      SQLUtil.isDDL("J~bujM.`b@");
      SQLUtil.mutatesDataOrStructure("org.apache.derby.iapi.sql.dictionary.SubConstraintDescriptor");
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "org.apache.derby.iapi.sql.dictionary.SubConstraintDescriptor");
      StringBuffer stringBuffer0 = new StringBuffer();
      int int0 = 598;
      StringWriter stringWriter0 = new StringWriter(598);
      stringBuilder0.append(stringBuffer0);
      int int1 = 435;
      // Undeclared exception!
      try { 
        stringBuilder0.insert(598, ' ');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.7245389578444956
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      SQLUtil.mutatesStructure("kMBEgxPQ9~N\"");
      SQLUtil.isQuery("V.b;hWKR022hsO");
      String string0 = ".::?yLbaD^;";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "kMBEgxPQ9~N\"";
      stringArray0[1] = ".::?yLbaD^;";
      stringArray0[1] = "kMBEgxPQ9~N\"";
      stringArray0[3] = "42802";
      stringArray0[4] = "\"uUTaj9$43s6ZZI0Nj";
      defaultDBTable0.getIndexes();
      stringArray0[5] = "kMBEgxPQ9~N\"";
      stringArray0[6] = ".::?yLbaD^;";
      stringArray0[7] = "V.b;hWKR022hsO";
      defaultDBTable0.getUniqueConstraint(stringArray0);
      SQLUtil.normalize("kMBEgxPQ9~N\"", false);
      Object object0 = new Object();
      SQLUtil.renderValue(object0);
      // Undeclared exception!
      try { 
        DBDataType.getInstance("kMBEgxPQ9 ~ N \"\"");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.model.DBDataType", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      String string0 = "lORtqsg[v*X";
      StringBuilder stringBuilder0 = new StringBuilder(44);
      SQLUtil.normalize("lORtqsg[v*X", true);
      StringBuilder stringBuilder1 = stringBuilder0.append((CharSequence) "lORtqsg [ v * X");
      // Undeclared exception!
      try { 
        stringBuilder1.insert(44, false);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 44
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.437465328065844
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[1] = "setNClob(int, Reader, long)";
      stringArray0[1] = "hWFL";
      stringArray0[1] = "";
      stringArray0[3] = "setNClob(int, Reader, long)";
      StringBuilder stringBuilder0 = new StringBuilder("inse");
      stringBuilder0.append("setNClob(int, Reader, long)");
      SQLUtil.mutatesDataOrStructure("setNClob(int, Reader, long)");
      SQLUtil.removeComments("quJ2");
      String string0 = SQLUtil.removeComments("");
      assertEquals("", string0);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.474839794921637
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("9_nhKw9<:+");
      assertNull(boolean0);
      
      SQLUtil.isQuery("9_nhKw9<:+");
      StringBuilder stringBuilder0 = new StringBuilder("");
      stringBuilder0.append("/a=e*x\"CK?)[");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "9_nhKw9<:+";
      stringArray0[1] = "\"uUTaj9$43s6ZZI0Nj";
      stringArray0[2] = "9_nhKw9<:+";
      stringArray0[3] = "t$|##z/'NaTsj[q-";
      stringArray0[4] = "9_nhKw9<:+";
      stringArray0[5] = "";
      stringArray0[6] = "\"uUTaj9$43s6ZZI0Nj";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, (String) null, false, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("9_nhKw9<:+", false, dBUniqueConstraint0);
      DBTable dBTable0 = dBUniqueIndex0.getTable();
      DBUniqueConstraint dBUniqueConstraint1 = new DBUniqueConstraint(dBTable0, "", true, stringArray0);
      defaultDBTable0.removeUniqueConstraint(dBUniqueConstraint1);
      DBUniqueConstraint dBUniqueConstraint2 = defaultDBTable0.getUniqueConstraint(stringArray0);
      String string0 = SQLUtil.typeAndName(dBUniqueConstraint2);
      assertEquals("unique constraint constraint", string0);
      assertNotNull(string0);
      
      boolean boolean1 = SQLUtil.isDML("q=+gbL");
      assertFalse(boolean1);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder(34);
      stringBuilder0.reverse();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnListWithTableName("6(Tm", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      defaultDBTable0.getPrimaryKeyConstraint();
      defaultDBTable0.setPrimaryKey((DBPrimaryKeyConstraint) null);
      // Undeclared exception!
      try { 
        SQLUtil.removeComments((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      LinkedList<DBColumn> linkedList0 = new LinkedList<DBColumn>();
      LinkedList<DBColumn> linkedList1 = new LinkedList<DBColumn>();
      linkedList1.removeFirstOccurrence("updateamhag\"#ani$s)");
      linkedList1.add((DBColumn) null);
      boolean boolean0 = SQLUtil.isDML("updateamhag\"#ani$s)");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.3125019625949976
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      LinkedList<DBColumn> linkedList0 = new LinkedList<DBColumn>();
      LinkedList<DBColumn> linkedList1 = new LinkedList<DBColumn>();
      linkedList1.removeFirstOccurrence("updateamhag\"#ani$s)");
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("updateamhag\"#ani$s)");
      assertNotNull(boolean0);
      assertTrue(boolean0);
      
      boolean boolean1 = SQLUtil.isDML("getProjectRestrictResultSet");
      assertFalse(boolean1);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      SQLUtil.substituteMarkers("UI-dP;,-", "UI-dP;,-", "UI-dP;,-");
      // Undeclared exception!
      try { 
        SQLUtil.isProcedureCall((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      String string0 = "YZ0_I2~3_lEqd\\";
      StringBuilder stringBuilder0 = null;
      // Undeclared exception!
      try { 
        SQLUtil.addOptionalCondition("YZ0_I2~3_lEqd", (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "UQ0K>~]");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)37;
      byteArray0[1] = (byte)85;
      byteArray0[2] = (byte)85;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      int int0 = 1801;
      StringBuilder stringBuilder0 = new StringBuilder(1801);
      StringBuilder stringBuilder1 = stringBuilder0.reverse();
      StringBuilder stringBuilder2 = SQLUtil.addOptionalCondition((String) null, stringBuilder1);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      stringBuilder2.append(8455716872L);
      stringBuilder2.append(false);
      // Undeclared exception!
      try { 
        ContextService.getFactory();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // 
         //
         verifyException("org.apache.derby.iapi.services.context.ContextService", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.4078164692513457
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Character.valueOf('U');
      boolean boolean0 = SQLUtil.isProcedureCall("renameiw / sjb # ixt + 0p.iw / sjb # ixt + 0p");
      boolean boolean1 = SQLUtil.isQuery("renameiw / sjb # ixt + 0p.iw / sjb # ixt + 0p");
      assertTrue(boolean1 == boolean0);
      
      String string0 = SQLUtil.normalize("execute", false);
      assertEquals("execute", string0);
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBTable defaultDBTable1 = new DefaultDBTable();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "C+a";
      stringArray0[1] = " as ";
      stringArray0[2] = " as ";
      defaultDBTable0.getUniqueConstraint(stringArray0);
      defaultDBTable0.isIdentical((DBObject) null);
      String[] stringArray1 = new String[2];
      stringArray1[0] = " as ";
      stringArray1[1] = "";
      DBNonUniqueIndex dBNonUniqueIndex0 = new DBNonUniqueIndex("C+a", true, defaultDBTable0, stringArray1);
      String string0 = SQLUtil.typeAndName(defaultDBTable0);
      assertNotNull(string0);
      assertEquals("table null", string0);
  }

  /**
  //Test case number: 62
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      String string0 = "CAL =SCOPE_DNTITY(";
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("CAL =SCOPE_DNTITY(");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal column type format: CAL =SCOPE_DNTITY(
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("renameon");
      DBDataType dBDataType0 = DBDataType.getInstance(122, "renameon");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("renameon", defaultDBTable0, dBDataType0);
      String string0 = SQLUtil.renderValue(defaultDBColumn0);
      assertEquals("renameon : RENAMEON", string0);
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.4841652152843623
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      String[] stringArray0 = new String[6];
      stringArray0[0] = "lw5:cU|%\"Y%";
      stringArray0[1] = "lw5:cU|%\"Y%";
      stringArray0[3] = "lw5:cU|%\"Y%";
      stringArray0[4] = "lw5:cU|%\"Y%";
      stringArray0[5] = "lw5:cU|%\"Y%";
      String[] stringArray1 = new String[6];
      stringArray1[0] = "lw5:cU|%\"Y%";
      DefaultDatabase defaultDatabase0 = new DefaultDatabase("--", (String) null, (VersionNumber) null);
      defaultDatabase0.getCatalog("lw5:cU|%\"Y%");
      DBSchema dBSchema0 = new DBSchema(stringArray0[2], (DBCatalog) null);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("Td}", dBSchema0);
      DBDataType dBDataType0 = DBDataType.getInstance((-2092), "setPoolable(");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("--", defaultDBTable0, dBDataType0);
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      DefaultDBColumn defaultDBColumn1 = new DefaultDBColumn("lw5:cU|%\"Y%", defaultDBTable0, dBDataType0);
      String string0 = SQLUtil.renderColumn(defaultDBColumn1);
      assertEquals("lw5:cU|%\"Y% SETPOOLABLE( NULL", string0);
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.6574520104243486
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      String[] stringArray0 = new String[1];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      defaultDBTable0.getUniqueConstraint(stringArray0);
      DBDataType dBDataType0 = DBDataType.getInstance(1518, "C+a");
      Integer integer0 = new Integer(1518);
      dBDataType0.isAlpha();
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("C+a");
      Integer integer1 = new Integer((-1985470206));
      Integer integer2 = RawTransaction.LOCK_ESCALATE;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("*b+<v|2-", defaultDBTable0, dBDataType0, integer0, integer2);
      defaultDBColumn0.setType(dBDataType0);
      String string0 = SQLUtil.renderColumn(defaultDBColumn0);
      assertEquals("*b+<v|2- C+A(1518,3) NULL", string0);
      
      String[] stringArray1 = new String[0];
      String string1 = SQLUtil.renderQuery(defaultDBTable0, stringArray1, stringArray1);
      assertEquals("SELECT * FROM null WHERE ", string1);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "<=}g";
      stringArray0[1] = "$";
      stringArray0[2] = "XJ085.S";
      stringArray0[3] = "rename";
      stringArray0[4] = "";
      // Undeclared exception!
      try { 
        SQLUtil.renderQuery((DBTable) null, stringArray0, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.9517632546458659
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      SQLUtil.isDML("*_fllW-@q`O-Gm");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "*_fllW-@q`O-Gm";
      stringArray0[1] = "*_fllW-@q`O-Gm";
      stringArray0[2] = "*_fllW-@q`O-Gm";
      stringArray0[4] = "";
      stringArray0[5] = "derby.storage.streamFileBufferSize";
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      DBColumn[] dBColumnArray0 = new DBColumn[0];
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames(dBColumnArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.3437537046719372
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[0] = "S";
      stringArray0[1] = "S";
      stringArray0[2] = "truncate";
      stringArray0[3] = "kmbe";
      stringArray0[4] = "EZagY-34/04G;";
      stringArray0[5] = "+*";
      stringArray0[6] = "R/nJ4c,W$`";
      stringArray0[7] = "create unique index";
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((DBColumn[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      File file0 = MockFile.createTempFile("drop indexupdateamhag\"#ani$s)", "left");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(file0);
      char[] charArray0 = new char[7];
      charArray0[0] = 'x';
      charArray0[1] = '^';
      charArray0[2] = '@';
      charArray0[3] = 'q';
      charArray0[4] = '9';
      charArray0[5] = 'M';
      charArray0[6] = '`';
      mockPrintWriter0.println(charArray0);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("O+2Q2m", defaultDBTable0, (-1258), "");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "drop indexupdateamhag\"#ani$s)";
      stringArray0[1] = "O+2Q2m";
      stringArray0[2] = "";
      stringArray0[3] = "O+2Q2m";
      stringArray0[4] = "drop indexupdateamhag\"#ani$s)";
      stringArray0[5] = "drop indexupdateamhag\"#ani$s)";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("drop indexupdateamhag\"#ani$s)", true, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      String string0 = SQLUtil.constraintName(dBForeignKeyConstraint0);
      assertEquals("CONSTRAINT \"drop indexupdateamhag\"#ani$s)\" ", string0);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("CALL SCOPE_IENTIT#()");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      String string0 = null;
      String string1 = null;
      // Undeclared exception!
      try { 
        SQLUtil.addRequiredCondition((String) null, (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      LinkedList<DBColumn> linkedList0 = new LinkedList<DBColumn>();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) linkedList0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      LinkedList<DBColumn> linkedList0 = new LinkedList<DBColumn>();
      LinkedList<DBColumn> linkedList1 = new LinkedList<DBColumn>();
      linkedList1.removeFirstOccurrence("updateamhag\"#ani$s)");
      linkedList1.add((DBColumn) null);
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) linkedList1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=0.810116318288409
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      String[] stringArray0 = new String[6];
      stringArray0[0] = "lw5:cU|%\"Y%";
      stringArray0[1] = "lw5:cU|%\"Y%";
      stringArray0[2] = "lw5:cU|%\"Y%";
      stringArray0[3] = "lw5:cU|%\"Y%";
      stringArray0[4] = "lw5:cU|%\"Y%";
      stringArray0[5] = "lw5:cU|%\"Y%";
      String[] stringArray1 = new String[6];
      stringArray1[0] = "";
      stringArray1[1] = null;
      stringArray1[2] = null;
      stringArray1[3] = null;
      stringArray1[4] = null;
      stringArray1[5] = "^jCL";
      String string0 = SQLUtil.leftJoin("lw5:cU|%\"Y%", stringArray0, (String) null, (String) null, stringArray1);
      assertEquals("left join null as null on lw5:cU|%\"Y%.lw5:cU|%\"Y% = null. and lw5:cU|%\"Y%.lw5:cU|%\"Y% = null.null and lw5:cU|%\"Y%.lw5:cU|%\"Y% = null.null and lw5:cU|%\"Y%.lw5:cU|%\"Y% = null.null and lw5:cU|%\"Y%.lw5:cU|%\"Y% = null.null and lw5:cU|%\"Y%.lw5:cU|%\"Y% = null.^jCL", string0);
  }

  /**
  //Test case number: 75
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder(34);
      StringBuilder stringBuilder1 = stringBuilder0.reverse();
      StringBuilder stringBuilder2 = stringBuilder1.append(false);
      StringBuilder stringBuilder3 = SQLUtil.addRequiredCondition("I$g)4m\rY*}V::;KM'", stringBuilder2);
      stringBuilder0.reverse();
      stringBuilder2.reverse();
      // Undeclared exception!
      try { 
        stringBuilder3.delete(205, 205);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.7653291326451686
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      SQLUtil.mutatesStructure("update'amhag\"#1ni$s)");
      DBCatalog dBCatalog0 = new DBCatalog();
      dBCatalog0.getSchema(":}C<vvU]BDkop");
      // Undeclared exception!
      try { 
        ContextService.getFactory();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // 
         //
         verifyException("org.apache.derby.iapi.services.context.ContextService", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      String[] stringArray0 = null;
      // Undeclared exception!
      try { 
        SQLUtil.leftJoin("pD", (String[]) null, (String) null, (String) null, (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = " join ";
      stringArray0[1] = " join ";
      stringArray0[2] = " join ";
      SQLUtil.renderColumnListWithTableName(" join ", stringArray0);
      String string0 = "org.databene.jdbacl.model.DBRowIterator";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable(" join ");
      defaultDBTable0.getPrimaryKeyConstraint();
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.createConstraintSpecBuilder((DBConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.9193618394362675
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[1] = "J*F8tP]KHJO+";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "";
      defaultDBTable0.getPrimaryKeyConstraint();
      defaultDBTable0.setPrimaryKey((DBPrimaryKeyConstraint) null);
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "", false, stringArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      SQLUtil.pkSpec(dBPrimaryKeyConstraint0, nameSpec0);
      SQLUtil.normalize("", false);
      String string0 = "";
      // Undeclared exception!
      try { 
        DBDataType.getInstance("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.model.DBDataType", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.3447004957129813
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "wL<s<J@jkxDca");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("wL<s<J@jkxDca");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "wL<s<J@jkxDca";
      stringArray0[1] = "+n";
      stringArray0[2] = "+n";
      stringArray0[3] = "+n";
      stringArray0[4] = "+n";
      stringArray0[5] = "+n";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "+n", false, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      StringBuilder stringBuilder0 = SQLUtil.createConstraintSpecBuilder(dBPrimaryKeyConstraint0, nameSpec0);
      StringBuilder stringBuilder1 = stringBuilder0.append((-102494267));
      NameSpec nameSpec1 = NameSpec.ALWAYS;
      SQLUtil.appendConstraintName((DBConstraint) dBPrimaryKeyConstraint0, stringBuilder1, nameSpec1);
      assertEquals("-102494267CONSTRAINT +n ", stringBuilder1.toString());
      assertEquals("-102494267CONSTRAINT +n ", stringBuilder0.toString());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.138526235860879
  */
  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[1] = "J*F8tP]KHJO+";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "";
      defaultDBTable0.getPrimaryKeyConstraint();
      defaultDBTable0.setPrimaryKey((DBPrimaryKeyConstraint) null);
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "", false, stringArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      SQLUtil.pkSpec(dBPrimaryKeyConstraint0, nameSpec0);
      SQLUtil.constraintName(dBPrimaryKeyConstraint0);
      String string0 = "";
      // Undeclared exception!
      try { 
        DBDataType.getInstance("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.model.DBDataType", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[0] = "";
      stringArray0[1] = "@)w A+jEX)>=";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "w%kVX7viW@+$";
      stringArray0[5] = "n V]A:A+;#-j0a[";
      stringArray0[6] = "BC";
      stringArray0[7] = "SELECT * FROM ";
      String string0 = SQLUtil.renderColumnNames(stringArray0);
      assertEquals("(, @)w A+jEX)>=, , , w%kVX7viW@+$, n V]A:A+;#-j0a[, BC, SELECT * FROM )", string0);
  }

  /**
  //Test case number: 83
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable((String) null);
      defaultDBTable0.getPrimaryKeyConstraint();
      defaultDBTable0.setPrimaryKey((DBPrimaryKeyConstraint) null);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[1] = ", TYPE = ";
      stringArray0[2] = "";
      stringArray0[3] = "J*F8tPG]KHJO+";
      stringArray0[4] = "zv13jB94=g6$=";
      stringArray0[5] = "nf?d";
      stringArray0[6] = "nf?d";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "nf?d", false, stringArray0);
      // Undeclared exception!
      try { 
        SQLUtil.isDML((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=2.340234055942502
  */
  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      SQLUtil.mutatesStructure("kMBEgxPQ9~N\"");
      SQLUtil.isQuery("kMBEgxPQ9~N\"");
      StringBuilder stringBuilder0 = new StringBuilder("");
      stringBuilder0.append("");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      SQLUtil.isDML("V.b;hWKR022hsO");
      // Undeclared exception!
      try { 
        SQLUtil.normalize((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=0.9946571675310574
  */
  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      jdbcClob jdbcClob0 = new jdbcClob(" on ");
      Reader reader0 = jdbcClob0.getCharacterStream();
      StringReader stringReader0 = new StringReader(" on ");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(reader0);
      String string0 = SQLUtil.renderNumber(streamTokenizer0);
      assertEquals("- 0", string0);
      
      String string1 = SQLUtil.normalize(" on ", true);
      assertEquals("on", string1);
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      String[] stringArray0 = new String[6];
      stringArray0[0] = "lw5:cU|%\"Y%";
      stringArray0[1] = "lw5:cU|%\"Y%";
      stringArray0[2] = "lw5:cU|%\"Y%";
      stringArray0[3] = "lw5:cU|%\"Y%";
      stringArray0[4] = "lw5:cU|%\"Y%";
      stringArray0[5] = "lw5:cU|%\"Y%";
      String[] stringArray1 = new String[6];
      stringArray1[0] = "";
      DefaultDatabase defaultDatabase0 = new DefaultDatabase("--", (String) null, (VersionNumber) null);
      defaultDatabase0.getCatalog("");
      DBSchema dBSchema0 = new DBSchema("", (DBCatalog) null);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("Td}", dBSchema0);
      DBDataType.getInstance((-2092), "setPoolable(");
      Object object0 = new Object();
      String string0 = SQLUtil.substituteMarkers("lw5:cU|%\"Y%", "not ", object0);
      assertEquals("lw5:cU|%\"Y%", string0);
  }

  /**
  //Test case number: 88
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      Character.valueOf('3');
      boolean boolean0 = SQLUtil.isProcedureCall("select intostquerystimeout(int)");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.4399756932787804
  */
  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      String string0 = "r";
      DBCatalog dBCatalog0 = new DBCatalog("r");
      dBCatalog0.getTable("r", false);
      DBDataType dBDataType0 = DBDataType.getInstance((-501), "");
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      Integer.getInteger("//");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("r", (DBTable) null, dBDataType0, integer0);
      defaultDBColumn0.getNotNullConstraint();
      SQLUtil.renderValue((Object) null);
      defaultDBColumn0.isEquivalent((DBObject) null);
      String[] stringArray0 = null;
      // Undeclared exception!
      try { 
        SQLUtil.innerJoin("r", (String[]) null, "r", "null", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 90
  /*Coverage entropy=0.810116318288409
  */
  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "Ipuzh%^";
      stringArray0[1] = "Ipuzh%^";
      stringArray0[2] = "Ipuzh%^";
      stringArray0[3] = "Ipuzh%^";
      stringArray0[4] = "drop table";
      stringArray0[5] = "CALL SCOPE_IENTIT#()";
      stringArray0[6] = "Ipuzh%^";
      stringArray0[7] = "CALL SCOPE_IENTIT#()";
      stringArray0[8] = "Ipuzh%^";
      String string0 = SQLUtil.innerJoin("CALL SCOPE_IENTIT#()", stringArray0, "create table ", "o1j", stringArray0);
      assertEquals("create table  as o1j on CALL SCOPE_IENTIT#().Ipuzh%^ = o1j.Ipuzh%^ and CALL SCOPE_IENTIT#().Ipuzh%^ = o1j.Ipuzh%^ and CALL SCOPE_IENTIT#().Ipuzh%^ = o1j.Ipuzh%^ and CALL SCOPE_IENTIT#().Ipuzh%^ = o1j.Ipuzh%^ and CALL SCOPE_IENTIT#().drop table = o1j.drop table and CALL SCOPE_IENTIT#().CALL SCOPE_IENTIT#() = o1j.CALL SCOPE_IENTIT#() and CALL SCOPE_IENTIT#().Ipuzh%^ = o1j.Ipuzh%^ and CALL SCOPE_IENTIT#().CALL SCOPE_IENTIT#() = o1j.CALL SCOPE_IENTIT#() and CALL SCOPE_IENTIT#().Ipuzh%^ = o1j.Ipuzh%^", string0);
  }

  /**
  //Test case number: 91
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[8];
      DBNonUniqueIndex dBNonUniqueIndex0 = new DBNonUniqueIndex(".", false, defaultDBTable0, stringArray0);
      defaultDBTable0.isIdentical(dBNonUniqueIndex0);
      dBNonUniqueIndex0.setOwner(defaultDBTable0);
      dBNonUniqueIndex0.setTable(defaultDBTable0);
      String string0 = SQLUtil.typeAndName(dBNonUniqueIndex0);
      assertEquals("index .", string0);
      assertNotNull(string0);
  }

  /**
  //Test case number: 92
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "drop materialized viewkmbegxpq9~n\"");
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "My#qM#S`9qy]0$");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      NameSpec nameSpec0 = NameSpec.NEVER;
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) null, stringBuilder0, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 93
  /*Coverage entropy=2.162409200836301
  */
  @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("create materialized view");
      String[] stringArray0 = new String[2];
      stringArray0[0] = "~5[m[@>rqj+Z#";
      stringArray0[1] = "create materialized view";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("XBCXM.S", false, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      String string0 = SQLUtil.constraintSpec(dBForeignKeyConstraint0, nameSpec0);
      assertEquals("CONSTRAINT XBCXM.S FOREIGN KEY (~5[m[@>rqj+Z#, create materialized view) REFERENCES create materialized view(~5[m[@>rqj+Z#, create materialized view)", string0);
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test94()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      Set<DBUniqueConstraint> set0 = new HashSet<DBUniqueConstraint>();
      defaultDBTable0.getPrimaryKeyConstraint();
      // Undeclared exception!
      try { 
        SQLUtil.pkSpec((DBPrimaryKeyConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=0.810116318288409
  */
  @Test(timeout = 4000)
  public void test95()  throws Throwable  {
      String[] stringArray0 = new String[6];
      stringArray0[0] = "lw5:cU|%\"Y%";
      stringArray0[2] = "lw5:cU|%\"Y%";
      stringArray0[3] = "lw5:cU|%\"Y%";
      stringArray0[5] = "lw5:cU|%\"Y%";
      String[] stringArray1 = new String[6];
      stringArray1[0] = "";
      stringArray1[1] = null;
      stringArray1[3] = null;
      stringArray1[4] = null;
      stringArray1[5] = "^jCL";
      String string0 = SQLUtil.leftJoin("lw5:cU|%\"Y%", stringArray0, (String) null, (String) null, stringArray1);
      assertEquals("left join null as null on lw5:cU|%\"Y%.lw5:cU|%\"Y% = null. and lw5:cU|%\"Y%.null = null.null and lw5:cU|%\"Y%.lw5:cU|%\"Y% = null.null and lw5:cU|%\"Y%.lw5:cU|%\"Y% = null.null and lw5:cU|%\"Y%.null = null.null and lw5:cU|%\"Y%.lw5:cU|%\"Y% = null.^jCL", string0);
  }

  /**
  //Test case number: 96
  /*Coverage entropy=2.1950865325403197
  */
  @Test(timeout = 4000)
  public void test96()  throws Throwable  {
      String string0 = "";
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringBuilder stringBuilder0 = new StringBuilder("");
      stringBuilder0.append("<i1N'vhI4S<~");
      SQLUtil.mutatesDataOrStructure("select intocreate tableexecnv3nm<^<k");
      // Undeclared exception!
      try { 
        DBDataType.getInstance("n8R8bx");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.model.DBDataType", e);
      }
  }

  /**
  //Test case number: 97
  /*Coverage entropy=0.810116318288409
  */
  @Test(timeout = 4000)
  public void test97()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[0] = ", TYPE = ";
      stringArray0[1] = ", TYPE = ";
      stringArray0[2] = ", TYPE = ";
      stringArray0[3] = null;
      stringArray0[4] = "bsu";
      stringArray0[5] = null;
      stringArray0[6] = "insert";
      stringArray0[7] = null;
      SQLUtil.join(", TYPE = ", (String) null, stringArray0, "bsu", "U~?o`YX", stringArray0);
      Object object0 = new Object();
      SQLUtil sQLUtil0 = new SQLUtil();
      StringBuilder stringBuilder0 = null;
      try {
        stringBuilder0 = new StringBuilder((CharSequence) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }
}
