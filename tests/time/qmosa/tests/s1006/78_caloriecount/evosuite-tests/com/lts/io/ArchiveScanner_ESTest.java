/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 18:32:43 GMT 2019
 */

package com.lts.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.lts.io.ArchiveScanner;
import com.lts.io.DirectoryScanner;
import com.lts.io.ImprovedFile;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.net.URI;
import java.util.Locale;
import java.util.Set;
import java.util.Vector;
import java.util.function.Consumer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ArchiveScanner_ESTest extends ArchiveScanner_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ImprovedFile improvedFile0 = null;
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      Vector<PipedInputStream> vector0 = new Vector<PipedInputStream>();
      archiveScanner0.dirsNotIncluded = vector0;
      System.setCurrentTimeMillis(0);
      String[] stringArray0 = new String[0];
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.couldHoldIncluded("HV");
      // Undeclared exception!
      try { 
        archiveScanner0.processFile("l&TF");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MockFile mockFile0 = new MockFile("com.lts.pest.swing.PestTree", "com.lts.pest.swing.PestTree");
      mockFile0.getAbsolutePath();
      MockFile mockFile1 = new MockFile(mockFile0, "?");
      ImprovedFile improvedFile0 = new ImprovedFile(mockFile1);
      URI uRI0 = improvedFile0.toURI();
      MockFile mockFile2 = new MockFile(uRI0);
      mockFile1.toURL();
      mockFile0.toURL();
      mockFile1.setWritable(true);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      MockFile mockFile3 = new MockFile(uRI0);
      mockFile0.setWritable(true);
      URI uRI1 = MockURI.resolve(uRI0, uRI0);
      MockFile mockFile4 = new MockFile(uRI1);
      mockFile3.setWritable(true);
      MockFile mockFile5 = new MockFile("J^e}.jar0.war1f~+7x6p9.j(.fcI.jar.jar", "?");
      MockURI.toURL(uRI0);
      mockFile0.setReadOnly();
      MockFile mockFile6 = new MockFile("IO error scnning directory .jar", "IO error scnning directory .jar");
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.dirsIncluded = vector0;
      mockFile4.setLastModified(1L);
      mockFile6.setReadOnly();
      MockURI.relativize(uRI1, uRI0);
      mockFile5.mkdir();
      mockFile4.mkdirs();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "?";
      archiveScanner0.setIncludes(stringArray0);
      MockFile mockFile7 = new MockFile(uRI1);
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory(mockFile6, "&vfv", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ImprovedFile improvedFile0 = null;
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      String string0 = "le: 0f~+7x69rb(..cI.ja}";
      ArchiveScanner archiveScanner1 = new ArchiveScanner((ImprovedFile) null);
      archiveScanner1.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      Vector<Integer> vector0 = new Vector<Integer>();
      archiveScanner1.dirsExcluded = vector0;
      Vector<Object> vector1 = new Vector<Object>();
      archiveScanner1.filesExcluded = vector1;
      // Undeclared exception!
      try { 
        archiveScanner1.processFile("le: 0f~+7x69rb(..cI.ja}");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      Vector<InputStream> vector0 = new Vector<InputStream>();
      archiveScanner0.haveSlowResults = false;
      archiveScanner0.dirsExcluded = vector0;
      archiveScanner0.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "unknwn clas");
      ImprovedFile improvedFile0 = new ImprovedFile("unknwn clas");
      improvedFile0.toURI();
      improvedFile0.toURL();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "unknwn clas");
      ImprovedFile improvedFile1 = new ImprovedFile("unknwn clas");
      DirectoryScanner.match("tVVP!_~.", "unknwn clas");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Rkw");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "Rkw";
      stringArray0[1] = "tVVP!_~.";
      stringArray0[2] = "Rkw";
      archiveScanner0.setExcludes(stringArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ".WAR");
      improvedFile1.mkdir();
      improvedFile0.setExecutable(false, false);
      archiveScanner0.setIncludes(stringArray0);
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive(improvedFile0, ")EOOX");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("com.lts.pest.swing.PestTree/com.lts.pest.swing.PestTree");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      MockFile mockFile0 = new MockFile("com.lts.pest.swing.PUstTree", "com.lts.pest.swing.PUstTree");
      mockFile0.getAbsolutePath();
      MockFile mockFile1 = new MockFile(mockFile0, "");
      ImprovedFile improvedFile0 = new ImprovedFile(mockFile1);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      File file0 = improvedFile0.getAbsoluteFile();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "unknwn clas");
      improvedFile0.toURI();
      mockFile1.toURL();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "unknwn clas");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "com.lts.pest.swing.PUstTree";
      stringArray0[1] = "/home/ubuntu/termite/projects/78_caloriecount/com.lts.pest.swing.PUstTree/com.lts.pest.swing.PUstTree";
      stringArray0[2] = "com.lts.pest.swing.PUstTree";
      FileSystemHandling.createFolder(evoSuiteFile0);
      ImprovedFile improvedFile1 = new ImprovedFile("Error trying to backu4 archYve file, ");
      DirectoryScanner.match("", "unknown class");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, (String) null);
      archiveScanner0.setExcludes(stringArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "/home/ubuntu/termite/projects/78_caloriecount/com.lts.pest.swing.PUstTree/com.lts.pest.swing.PUstTree");
      mockFile1.mkdir();
      mockFile1.setExecutable(false, false);
      archiveScanner0.setIncludes(stringArray0);
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive(file0, "com.lts.pest.swing.PUstTree");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("com.lts.pest.swing.PestTree/com.lts.pest.swing.PestTree");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      MockFile mockFile0 = new MockFile("com.lts.pest.swing.PUstTree", "com.lts.pest.swing.PUstTree");
      FileSystemHandling.setPermissions(evoSuiteFile0, false, false, false);
      mockFile0.getAbsolutePath();
      MockFile mockFile1 = new MockFile(mockFile0, "");
      ImprovedFile improvedFile0 = new ImprovedFile(mockFile1);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      File file0 = improvedFile0.getAbsoluteFile();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "unknwn clas");
      improvedFile0.toURI();
      mockFile1.toURL();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "unknwn clas");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "com.lts.pest.swing.PUstTree";
      stringArray0[1] = "/home/ubuntu/termite/projects/78_caloriecount/com.lts.pest.swing.PUstTree/com.lts.pest.swing.PUstTree";
      stringArray0[2] = "com.lts.pest.swing.PUstTree";
      ImprovedFile improvedFile1 = new ImprovedFile("Error trying to backu4 archYve file, ");
      DirectoryScanner.match("", "unknown class");
      String[] stringArray1 = new String[5];
      stringArray1[0] = "Error trying to backu4 archYve file, ";
      stringArray1[1] = "/home/ubuntu/termite/projects/78_caloriecount/com.lts.pest.swing.PUstTree/com.lts.pest.swing.PUstTree";
      stringArray1[2] = "Error trying to ascertain the existence of entry, ";
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "com.lts.pest.swing.PUstTree");
      stringArray1[3] = "Error trying to backu4 archYve file, ";
      stringArray1[4] = "";
      archiveScanner0.setExcludes(stringArray1);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "com.lts.pest.swing.PUstTree");
      file0.mkdir();
      mockFile0.setExecutable(false, true);
      archiveScanner0.setIncludes(stringArray0);
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive(mockFile0, "com.lts.pest.swing.PUstTree");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MockFile mockFile0 = new MockFile("com.lts.pest.swing.PestTree", "com.lts.pest.swing.PestTree");
      mockFile0.getAbsolutePath();
      MockFile mockFile1 = new MockFile(mockFile0, "?");
      ImprovedFile improvedFile0 = new ImprovedFile(mockFile1);
      URI uRI0 = improvedFile0.toURI();
      MockFile mockFile2 = new MockFile(uRI0);
      mockFile1.toURL();
      mockFile0.toURL();
      mockFile1.setWritable(true);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      MockFile mockFile3 = new MockFile(uRI0);
      mockFile0.setWritable(true);
      URI uRI1 = MockURI.resolve(uRI0, uRI0);
      mockFile3.setWritable(true);
      MockFile mockFile4 = new MockFile("J^e}.jar0.war1f~+7x6p9.j(.fcI.jar.jar", "?");
      MockURI.toURL(uRI0);
      mockFile0.setReadOnly();
      MockFile mockFile5 = new MockFile("IO error scnning directory .jar", "IO error scnning directory .jar");
      mockFile0.setLastModified(1L);
      mockFile5.setReadable(false);
      MockURI.relativize(uRI1, uRI0);
      mockFile4.mkdir();
      mockFile3.mkdirs();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "?";
      archiveScanner0.setIncludes(stringArray0);
      MockFile mockFile6 = new MockFile(uRI1);
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory(mockFile5, "?", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.8548720307766426
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MockFile mockFile0 = new MockFile("com.lts.pest.swing.PestTree", "com.lts.pest.swing.PestTree");
      mockFile0.getAbsolutePath();
      MockFile mockFile1 = new MockFile(mockFile0, "");
      ImprovedFile improvedFile0 = new ImprovedFile(mockFile1);
      URI uRI0 = improvedFile0.toURI();
      MockFile mockFile2 = new MockFile(uRI0);
      MockURI.toURL(uRI0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.setBasedir((File) mockFile2);
      MockFile mockFile3 = new MockFile(uRI0);
      mockFile1.setExecutable(false);
      MockFile.createTempFile("com.lts.pest.swing.PestTree", "20.F", (File) mockFile0);
      mockFile0.setWritable(true);
      MockFile mockFile4 = new MockFile("/home/ubuntu/termite/projects/78_caloriecount/com.lts.pest.swing.PestTree/com.lts.pest.swing.PestTree", "/home/ubuntu/termite/projects/78_caloriecount/com.lts.pest.swing.PestTree/com.lts.pest.swing.PestTree");
      MockURI.toURL(uRI0);
      mockFile2.toPath();
      MockFile mockFile5 = new MockFile(uRI0);
      mockFile1.mkdirs();
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(mockFile2, "com.lts.pest.swing.PestTree", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.8323649625844873
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "u");
      String string0 = "gCecT``n|";
      MockFile mockFile0 = new MockFile("c/@s{6o /S?D1CD", "gCecT``n|");
      MockFile mockFile1 = new MockFile(mockFile0, "B7e%AAxQ~h`Zp");
      ImprovedFile improvedFile0 = new ImprovedFile(mockFile1);
      String string1 = "J^e}.jar";
      ImprovedFile improvedFile1 = ImprovedFile.createTempImprovedFile("J^e}.jar", "B7e%AAxQ~h`Zp", improvedFile0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile1);
      improvedFile1.getAbsoluteFile();
      URI uRI0 = improvedFile1.toURI();
      MockFile mockFile2 = new MockFile(uRI0);
      String string2 = "GM<j";
      mockFile2.setWritable(true);
      MockFile mockFile3 = new MockFile("B7e%AAxQ~h`Zp", "GM<j");
      MockURI.toURL(uRI0);
      mockFile2.mkdirs();
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(mockFile1, "eo~k6+$", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ImprovedFile improvedFile0 = null;
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      Vector<InputStream> vector0 = new Vector<InputStream>();
      // Undeclared exception!
      try { 
        archiveScanner0.toFileType((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.4471627089619605
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MockFile mockFile0 = new MockFile("com.lts.pest.swing.PestTree", "com.lts.pest.swing.PestTree");
      mockFile0.getAbsolutePath();
      MockFile mockFile1 = new MockFile(mockFile0, "");
      ImprovedFile improvedFile0 = new ImprovedFile(mockFile1);
      URI uRI0 = improvedFile0.toURI();
      MockFile mockFile2 = new MockFile(uRI0);
      mockFile1.toURL();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.setBasedir((File) mockFile2);
      MockFile mockFile3 = new MockFile(uRI0);
      mockFile1.setExecutable(false);
      MockFile.createTempFile("=y[Hr/`s3", "20.F", (File) mockFile0);
      mockFile0.setWritable(true);
      MockFile mockFile4 = new MockFile("/home/ubuntu/termite/projects/78_caloriecount/com.lts.pest.swing.PestTree/com.lts.pest.swing.PestTree", "/home/ubuntu/termite/projects/78_caloriecount/com.lts.pest.swing.PestTree/com.lts.pest.swing.PestTree");
      MockURI.toURL(uRI0);
      mockFile2.toPath();
      MockFile mockFile5 = new MockFile(uRI0);
      mockFile1.mkdirs();
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(mockFile2, "com.lts.pest.swing.PestTree", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("IO error scanning divectory ", "IO error scanning divectory ");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      Vector<InputStream> vector0 = new Vector<InputStream>();
      archiveScanner0.setIncludes((String[]) null);
      ArchiveScanner archiveScanner1 = new ArchiveScanner(improvedFile0);
      try { 
        archiveScanner1.scanArchive(improvedFile0, "IO error scanning divectory ");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error trying to list archive, /home/ubuntu/termite/projects/78_caloriecount/IO error scanning divectory /IO error scanning divectory 
         //
         verifyException("com.lts.io.archive.AbstractNestedArchive", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ImprovedFile improvedFile0 = null;
      Vector<InputStream> vector0 = new Vector<InputStream>();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      vector0.forEach(consumer0);
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.read(byteArray0);
      vector0.add((InputStream) byteArrayInputStream0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      // Undeclared exception!
      try { 
        archiveScanner0.scanArchive((File) null, "'gnsc/79/tc^|,7\"");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.archive.AbstractNestedArchive", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MockFile mockFile0 = new MockFile("com.lts.pest.swing.PestTree", "com.lts.pest.swing.PestTree");
      mockFile0.getAbsolutePath();
      MockFile mockFile1 = new MockFile(mockFile0, "Z!");
      ImprovedFile improvedFile0 = new ImprovedFile(mockFile1);
      URI uRI0 = improvedFile0.toURI();
      MockFile mockFile2 = new MockFile(uRI0);
      mockFile1.toURL();
      mockFile0.toURL();
      mockFile1.setWritable(true);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      MockFile mockFile3 = new MockFile(uRI0);
      mockFile0.setWritable(true);
      URI uRI1 = MockURI.resolve(uRI0, uRI0);
      MockFile mockFile4 = new MockFile(uRI1);
      mockFile1.setReadOnly();
      MockFile.createTempFile("!_QIi,*KOcH", "com.lts.pest.swing.PestTree", (File) mockFile3);
      mockFile3.setWritable(true);
      MockFile mockFile5 = new MockFile("J^e}.jar0.war1f~+7x6p9.j(.fcI.jar.jar", "Z!");
      MockURI.toURL(uRI0);
      mockFile0.setReadOnly();
      MockFile mockFile6 = new MockFile("IO error scnning directory .jar", "IO error scnning directory .jar");
      mockFile4.setLastModified(1L);
      mockFile6.setReadOnly();
      MockURI.relativize(uRI1, uRI0);
      mockFile5.mkdir();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Z!";
      archiveScanner0.setIncludes(stringArray0);
      MockFile mockFile7 = new MockFile(uRI1);
      boolean boolean0 = archiveScanner0.isArchive(mockFile2);
      //  // Unstable assertion: assertTrue(boolean0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("You have unsaved changes.  Save them before quitting?");
      ImprovedFile improvedFile1 = new ImprovedFile("You have unsaved changes.  Save them before quitting?", "Id");
      improvedFile0.createTempDir();
      ImprovedFile.buildName("You have unsaved changes.  Save them before quitting?", 0L, "0h[v(`zjAdF<96hu9R", improvedFile0);
      ImprovedFile improvedFile2 = improvedFile1.createTempDir();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile1);
      int int0 = archiveScanner0.toFileType(improvedFile2);
      assertEquals(1, int0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.4399756932787802
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("com.lts.pest.swing.PestTree/com.lts.pest.swing.PestTree");
      FileSystemHandling.createFolder(evoSuiteFile0);
      Vector<PipedInputStream> vector0 = new Vector<PipedInputStream>();
      Vector<String> vector1 = new Vector<String>();
      ImprovedFile improvedFile0 = new ImprovedFile("IO error scanning directory .jar");
      System.setCurrentTimeMillis((-2091L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-951L));
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      int int0 = archiveScanner0.toFileType(improvedFile0);
      assertEquals(2, int0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      MockFile mockFile0 = new MockFile("com.lts.pest.swing.PestTree", "com.lts.pest.swing.PestTree");
      mockFile0.getAbsolutePath();
      MockFile mockFile1 = new MockFile(mockFile0, "");
      ImprovedFile improvedFile0 = new ImprovedFile(mockFile1);
      URI uRI0 = improvedFile0.toURI();
      MockFile mockFile2 = new MockFile(uRI0);
      mockFile1.toURL();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      MockFile mockFile3 = new MockFile(uRI0);
      mockFile0.setWritable(true);
      MockFile mockFile4 = new MockFile("/home/ubuntu/termite/projects/78_caloriecount/com.lts.pest.swing.PestTree/com.lts.pest.swing.PestTree", "/home/ubuntu/termite/projects/78_caloriecount/com.lts.pest.swing.PestTree/com.lts.pest.swing.PestTree");
      MockURI.toURL(uRI0);
      mockFile2.toPath();
      MockFile mockFile5 = new MockFile("B7e%AAxQ~h`Zp.jar", "320.");
      mockFile1.mkdirs();
      archiveScanner0.scandir(mockFile2, "com.lts.pest.swing.PestTree", false);
      URI uRI1 = improvedFile0.toURI();
      MockFile mockFile6 = new MockFile(uRI1);
      improvedFile0.toURI();
      MockFile mockFile7 = new MockFile(uRI1);
      MockFile mockFile8 = null;
      try {
        mockFile8 = new MockFile("F+*", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFile", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      String string0 = "com.lts.pest.swing.PestTree";
      MockFile mockFile0 = new MockFile("com.lts.pest.swing.PestTree", "com.lts.pest.swing.PestTree");
      mockFile0.getAbsolutePath();
      MockFile mockFile1 = new MockFile(mockFile0, "?");
      ImprovedFile improvedFile0 = new ImprovedFile(mockFile1);
      URI uRI0 = improvedFile0.toURI();
      MockFile mockFile2 = new MockFile(uRI0);
      mockFile1.toURL();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      MockFile mockFile3 = new MockFile(uRI0);
      mockFile0.setWritable(true);
      URI uRI1 = MockURI.resolve(uRI0, uRI0);
      MockFile mockFile4 = new MockFile((String) null, "^e.jar0B7e%AAxQ~h`Zp.jar.jar");
      MockURI.toURL(uRI1);
      mockFile0.toPath();
      String string1 = "unknown class";
      MockFile mockFile5 = new MockFile(".ear", "unknown class");
      mockFile4.mkdirs();
      try { 
        archiveScanner0.scandir(mockFile0, "unknown class", false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // IO error scanning directory /home/ubuntu/termite/projects/78_caloriecount/com.lts.pest.swing.PestTree/com.lts.pest.swing.PestTree
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.4471627089619605
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("com.lts.pest.swing.PestTree/com.lts.pest.swing.PestTree");
      FileSystemHandling.createFolder(evoSuiteFile0);
      String string0 = "com.lts.pest.swing.PestTree";
      MockFile mockFile0 = new MockFile("com.lts.pest.swing.PestTree", "com.lts.pest.swing.PestTree");
      mockFile0.getAbsolutePath();
      MockFile mockFile1 = new MockFile(mockFile0, "");
      ImprovedFile improvedFile0 = new ImprovedFile(mockFile1);
      URI uRI0 = improvedFile0.toURI();
      MockFile mockFile2 = new MockFile(uRI0);
      ImprovedFile improvedFile1 = improvedFile0.createTempDir();
      improvedFile1.toURL();
      mockFile2.mkdirs();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile1);
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(improvedFile0, "]L:_E%5)5'Vd", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ImprovedFile improvedFile0 = null;
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      String string0 = ".WAR";
      archiveScanner0.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      // Undeclared exception!
      try { 
        archiveScanner0.processFile(".WAR");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Locale locale0 = Locale.CHINA;
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      Vector<String> vector0 = new Vector<String>(set0);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "";
      stringArray0[1] = "4mh_`C5~a4@CO";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = ".WAR";
      stringArray0[5] = "le, ";
      stringArray0[6] = ".bar";
      stringArray0[7] = "W#Sm";
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      // Undeclared exception!
      try { 
        archiveScanner0.isArchive((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      MockFile mockFile0 = new MockFile("com.lts.pest.swing.PestTree", "com.lts.pest.swing.PestTree");
      mockFile0.getAbsolutePath();
      MockFile mockFile1 = new MockFile(mockFile0, "?");
      ImprovedFile improvedFile0 = new ImprovedFile(mockFile1);
      URI uRI0 = improvedFile0.toURI();
      MockFile mockFile2 = new MockFile(uRI0);
      mockFile1.toURL();
      mockFile0.toURL();
      mockFile1.setWritable(true);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      MockFile mockFile3 = new MockFile(uRI0);
      mockFile0.setWritable(true);
      URI uRI1 = MockURI.resolve(uRI0, uRI0);
      MockFile mockFile4 = new MockFile(uRI1);
      mockFile3.setWritable(true);
      MockFile mockFile5 = new MockFile("J^e}.jar0.war1f~+7x6p9.j(.fcI.jar.jar", "?");
      MockURI.toURL(uRI0);
      mockFile0.setReadOnly();
      MockFile mockFile6 = new MockFile("IO error scnning directory .jar", "IO error scnning directory .jar");
      mockFile4.setLastModified(1L);
      mockFile6.setReadOnly();
      MockURI.relativize(uRI1, uRI0);
      mockFile5.mkdir();
      mockFile4.mkdirs();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "?";
      archiveScanner0.setIncludes(stringArray0);
      MockFile mockFile7 = new MockFile(uRI1);
      boolean boolean0 = archiveScanner0.isArchive(mockFile2);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.4486869174985209
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("IO error scanning directory ", "IO error scanning directory ");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.toFileType(improvedFile0);
      ArchiveScanner archiveScanner1 = new ArchiveScanner(improvedFile0);
      // Undeclared exception!
      try { 
        archiveScanner1.isIncluded("IO error scanning directory ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }
}
