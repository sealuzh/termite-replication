/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 30 04:23:30 GMT 2020
 */

package weka.experiment;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import java.util.Vector;
import java.util.function.UnaryOperator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import weka.experiment.ResultMatrix;
import weka.experiment.ResultMatrixCSV;
import weka.experiment.ResultMatrixGnuPlot;
import weka.experiment.ResultMatrixHTML;
import weka.experiment.ResultMatrixLatex;
import weka.experiment.ResultMatrixPlainText;
import weka.experiment.ResultMatrixSignificance;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ResultMatrix_ESTest extends ResultMatrix_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.7936567840058286
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      int int0 = (-1553);
      // Undeclared exception!
      try { 
        resultMatrixLatex0.padString((String) null, 249, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.0404387273591684
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.m_StdDevWidth = 0;
      resultMatrixHTML0.setSignificanceWidth(636);
      resultMatrixHTML0.getDisplayCol((-1905));
      resultMatrixHTML0.toStringKey();
      ResultMatrix resultMatrix0 = null;
      ResultMatrixSignificance resultMatrixSignificance0 = null;
      try {
        resultMatrixSignificance0 = new ResultMatrixSignificance((ResultMatrix) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.516329201889268
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[1] = "setRowOrder: length does not match (";
      stringArray0[2] = "";
      stringArray0[3] = "h]IRbL[oo55P7";
      stringArray0[4] = "5T7v\"rZc{t>\"$UHTz";
      stringArray0[5] = " = ";
      stringArray0[6] = "";
      ResultMatrixSignificance.main(stringArray0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.toStringKey();
      resultMatrixGnuPlot0.getRowNameWidth();
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.8466796372141983
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "\"^Y-B+0,i#m0{tm[6w";
      String string0 = ") - ignored!";
      stringArray0[1] = ") - ignored!";
      String string1 = "\\footnotesize ";
      stringArray0[2] = "\footnotesize ";
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 0);
      resultMatrixLatex0.setMeanPrec((-2));
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      try { 
        resultMatrixLatex1.setOptions(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.28156580200658
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      double[] doubleArray0 = new double[5];
      resultMatrixCSV0.toStringMatrix();
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 1;
      doubleArray0[3] = (double) 1;
      doubleArray0[4] = (-5454.962837);
      resultMatrixCSV0.m_Counts = doubleArray0;
      resultMatrixCSV0.getDefaultEnumerateColNames();
      int[][] intArray0 = new int[0][2];
      resultMatrixCSV0.m_NonSigWins = intArray0;
      resultMatrixCSV0.toStringSummary();
      resultMatrixCSV0.getDefaultEnumerateColNames();
      resultMatrixCSV0.toStringKey();
      resultMatrixCSV0.printRowNamesTipText();
      resultMatrixCSV0.getDisplayCol(0);
      resultMatrixCSV0.setRanking(intArray0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(97, 0);
      resultMatrixGnuPlot0.toStringRanking();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      resultMatrixCSV1.getRevision();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixCSV1.m_PrintColNames = false;
      resultMatrixHTML0.getDefaultPrintColNames();
      resultMatrixHTML0.listOptions();
      resultMatrixGnuPlot0.m_CountWidth = 0;
      resultMatrixHTML0.getDisplayRow(0);
      resultMatrixCSV0.trimString("*", 2);
      resultMatrixHTML0.setSignificance(0, 0, 1);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.3467262830059195
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.m_StdDevPrec = 0;
      resultMatrixSignificance0.m_ShowStdDev = false;
      resultMatrixSignificance0.doubleToString((-2541.9081796), 0);
      resultMatrixSignificance0.m_EnumerateRowNames = false;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixSignificance0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setMeanWidth(2);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(117, 0);
      resultMatrixLatex0.setEnumerateColNames(false);
      resultMatrixLatex0.getDefaultPrintColNames();
      int[] intArray0 = new int[4];
      intArray0[0] = 2;
      resultMatrixPlainText0.setRowOrder(intArray0);
      resultMatrixPlainText0.setCountWidth((-3010));
      resultMatrixLatex0.clearSummary();
      resultMatrixPlainText0.getEnumerateRowNames();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(1, 1);
      resultMatrixGnuPlot0.toStringRanking();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot1);
      resultMatrixCSV0.getRevision();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getDefaultPrintColNames();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      resultMatrixCSV0.m_ColOrder = intArray0;
      resultMatrixHTML1.listOptions();
      resultMatrixHTML0.getDisplayRow(85);
      resultMatrixCSV0.trimString("v", (-2714));
      resultMatrixGnuPlot0.toStringMatrix();
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.3795626065260653
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.padString("\"T<*#MdOeQ&<r", 0);
      resultMatrixPlainText0.toArray();
      resultMatrixPlainText0.setRowHidden(1, false);
      resultMatrixPlainText0.setColNameWidth(0);
      resultMatrixPlainText0.setMeanWidth(5);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 1);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      resultMatrixGnuPlot0.getDefaultEnumerateColNames();
      resultMatrixGnuPlot0.getDefaultEnumerateColNames();
      resultMatrixGnuPlot0.getDefaultColNameWidth();
      resultMatrixGnuPlot0.getDefaultColNameWidth();
      resultMatrixGnuPlot0.getColNameWidth();
      resultMatrixGnuPlot0.showStdDevTipText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setStdDevPrec(3018);
      resultMatrixCSV0.padString("", 1541, true);
      resultMatrixCSV0.setEnumerateRowNames(false);
      resultMatrixCSV0.toStringSummary();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      // Undeclared exception!
      try { 
        resultMatrixLatex0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.5698689494290536
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.m_StdDevPrec = 0;
      resultMatrixSignificance0.m_ShowStdDev = false;
      resultMatrixSignificance0.doubleToString((-2541.9081796), 0);
      resultMatrixSignificance0.m_EnumerateRowNames = false;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixSignificance0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setMeanWidth(2);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(117, 0);
      resultMatrixLatex0.setEnumerateColNames(false);
      resultMatrixLatex0.getDefaultPrintColNames();
      int[] intArray0 = new int[4];
      intArray0[0] = 2;
      resultMatrixPlainText0.setRowOrder(intArray0);
      String[] stringArray0 = new String[0];
      ResultMatrixHTML.main(stringArray0);
      resultMatrixLatex0.getRowName(2);
      resultMatrixLatex0.setCount(0, 117);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.toString();
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.7284075400342926
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setColNameWidth(0);
      resultMatrixGnuPlot0.m_PrintColNames = false;
      boolean[] booleanArray0 = new boolean[3];
      resultMatrixGnuPlot0.setEnumerateColNames(true);
      booleanArray0[0] = true;
      booleanArray0[1] = false;
      resultMatrixGnuPlot0.setStdDevPrec(2019);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      resultMatrixSignificance0.toStringRanking();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int int0 = 1;
      resultMatrixSignificance0.setColNameWidth(1);
      // Undeclared exception!
      resultMatrixGnuPlot0.setSize(114, 114);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.7380783554095367
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(0, 0);
      int int0 = (-1974);
      // Undeclared exception!
      try { 
        resultMatrixCSV1.doubleToString((-1173.462157452493), (-1974));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.601943923694664
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 0);
      resultMatrixCSV0.doubleToString(0, 0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      String[] stringArray0 = resultMatrixHTML0.getOptions();
      resultMatrixHTML0.getMean((-331), 0);
      int int0 = ResultMatrix.SIGNIFICANCE_TIE;
      resultMatrixHTML0.clearHeader();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(2, 1);
      int[] intArray0 = new int[1];
      intArray0[0] = 0;
      resultMatrixPlainText0.setRowOrder(intArray0);
      resultMatrixPlainText0.setCountWidth((-316));
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.clearSummary();
      resultMatrixPlainText0.getEnumerateRowNames();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      resultMatrixSignificance0.setRowName(1, "");
      resultMatrixSignificance0.getShowAverage();
      ResultMatrixLatex.main(stringArray0);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      resultMatrixHTML1.getDisplayName();
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.550186470496145
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixHTML0.globalInfo();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "Generates the matrix output as HTML.";
      ResultMatrixLatex.main(stringArray0);
      stringArray0[1] = "*";
      ResultMatrixHTML.main(stringArray0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getRevision();
      ResultMatrixHTML.main(stringArray0);
      String[][] stringArray1 = new String[2][6];
      stringArray1[0] = stringArray0;
      stringArray1[1] = stringArray0;
      resultMatrixPlainText0.getColSize(stringArray1, 1273);
      resultMatrixHTML0.getDefaultSignificanceWidth();
      resultMatrixPlainText0.toStringMatrix();
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.552046978440697
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 0);
      resultMatrixCSV0.doubleToString(0, 0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      String[] stringArray0 = resultMatrixHTML0.getOptions();
      resultMatrixHTML0.getMean((-331), 0);
      int int0 = ResultMatrix.SIGNIFICANCE_TIE;
      resultMatrixHTML0.clearHeader();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixCSV0.getRevision();
      resultMatrixSignificance0.setRowName(2914, "*");
      resultMatrixSignificance0.getShowAverage();
      ResultMatrixLatex.main(stringArray0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.491573622513231
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 0);
      resultMatrixCSV0.doubleToString(0, 0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      resultMatrixHTML0.getOptions();
      resultMatrixHTML0.getMean((-331), 0);
      int int0 = ResultMatrix.SIGNIFICANCE_TIE;
      resultMatrixHTML0.clearHeader();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(2, 1);
      int[] intArray0 = new int[1];
      intArray0[0] = 0;
      resultMatrixPlainText0.setRowOrder(intArray0);
      resultMatrixPlainText0.setCountWidth((-316));
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.clearSummary();
      resultMatrixPlainText0.getEnumerateRowNames();
      resultMatrixLatex0.getMean(1, (-1636));
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(155, 26);
      // Undeclared exception!
      resultMatrixSignificance0.toStringKey();
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.5558182081558924
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixLatex0.padString("*", 2);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixLatex0);
      String[] stringArray0 = new String[15];
      stringArray0[0] = "* ";
      ResultMatrixLatex.main(stringArray0);
      stringArray0[1] = "*";
      stringArray0[2] = "(";
      resultMatrixGnuPlot0.setMeanWidth(0);
      stringArray0[3] = "v";
      ResultMatrixHTML.main(stringArray0);
      resultMatrixGnuPlot0.toStringRanking();
      resultMatrixLatex0.setCount(3, 2);
      resultMatrixHTML0.toString();
      resultMatrixLatex0.enumerateColNamesTipText();
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.5213648896657963
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixLatex0.padString("*", 2);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixLatex0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "* ";
      ResultMatrixLatex.main(stringArray0);
      stringArray0[1] = "*";
      stringArray0[2] = "(";
      stringArray0[3] = "v";
      Vector<String> vector0 = new Vector<String>();
      vector0.add("   <tr><td><b>(");
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setSignificanceWidth(2);
      resultMatrixGnuPlot0.getRevision();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(2, 1);
      resultMatrixPlainText0.setEnumerateRowNames(true);
      vector0.parallelStream();
      resultMatrixPlainText0.globalInfo();
      resultMatrixGnuPlot0.getDefaultMeanPrec();
      int[] intArray0 = new int[8];
      intArray0[0] = 964;
      intArray0[1] = 2;
      intArray0[2] = 2;
      intArray0[3] = 1;
      intArray0[4] = 25;
      intArray0[5] = 0;
      intArray0[6] = 2;
      intArray0[7] = 0;
      resultMatrixGnuPlot0.setColOrder(intArray0);
      resultMatrixLatex0.isRowName(1);
      resultMatrixPlainText0.setShowAverage(true);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.5286447412084416
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDefaultRemoveFilterName();
      resultMatrixCSV0.getDefaultRemoveFilterName();
      resultMatrixCSV0.getRowName((-1521));
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      resultMatrixLatex0.m_CountWidth = 1;
      resultMatrixLatex0.clear();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2, 1557);
      String[] stringArray0 = new String[4];
      stringArray0[0] = " ";
      ResultMatrixHTML.main(stringArray0);
      resultMatrixCSV0.getColName(2);
      resultMatrixLatex0.getRowName(1);
      resultMatrixLatex0.setCount(0, 3);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      Vector<Object> vector0 = new Vector<Object>();
      resultMatrixGnuPlot0.m_HeaderValues = vector0;
      resultMatrixHTML0.toString();
      // Undeclared exception!
      resultMatrixGnuPlot0.toStringHeader();
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.531756067763083
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 0);
      resultMatrixCSV0.doubleToString(0, 0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      resultMatrixHTML0.getOptions();
      resultMatrixHTML0.getMean((-331), 0);
      int int0 = ResultMatrix.SIGNIFICANCE_TIE;
      resultMatrixHTML0.clearHeader();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(2, 1);
      resultMatrixCSV0.m_StdDevPrec = 32;
      resultMatrixPlainText0.enumerateRowNamesTipText();
      resultMatrixPlainText0.getColHidden(1692);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(1, 741);
      resultMatrixCSV1.m_StdDevWidth = 2;
      resultMatrixCSV1.getDefaultRowNameWidth();
      assertEquals(2, resultMatrixCSV1.getStdDevWidth());
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getDefaultMeanPrec();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(2558, 0);
      resultMatrixHTML1.getEnumerateRowNames();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getRevision();
      resultMatrixGnuPlot0.getDefaultColNameWidth();
      int int1 = resultMatrixSignificance0.getVisibleRowCount();
      assertEquals(1, int1);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.312806687466271
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      resultMatrixLatex1.toString();
      int[] intArray0 = new int[5];
      intArray0[0] = 2;
      resultMatrixLatex0.m_MeanPrec = 2988;
      intArray0[1] = 2;
      resultMatrixLatex0.LOSS_STRING = "\begin{table}[thb]\ncaption{label{labelname}Table Caption}\n\footnotesize\n{centering \begin{tabular}{lr}\n\\\nhline\nDataset & (1)\\\nhline\nrow0 &    \\\nhline\nmulticolumn{2}{c}{$circ$, $\bullet$ statistically significant improvement or degradation}\\\nend{tabular} \footnotesize par}\nend{table}\n";
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setStdDevPrec(2988);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex1);
      resultMatrixSignificance0.toStringRanking();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixSignificance0.setColNameWidth(0);
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.setSize(2058, (-1996));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.8322602295395347
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getDisplayName();
      int int0 = 0;
      resultMatrixHTML0.getColHidden(0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      Vector<Integer> vector0 = new Vector<Integer>();
      resultMatrixCSV0.setStdDevWidth((-711));
      vector0.addElement((Integer) 0);
      resultMatrixCSV0.m_StdDevWidth = 2;
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setColNameWidth(26);
      int int1 = 5;
      resultMatrixPlainText0.setMeanWidth(2);
      ResultMatrixLatex resultMatrixLatex0 = null;
      try {
        resultMatrixLatex0 = new ResultMatrixLatex((-1404), 426);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.5989581880697834
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      boolean[] booleanArray0 = new boolean[5];
      booleanArray0[0] = false;
      booleanArray0[1] = true;
      resultMatrixSignificance0.toStringSummary();
      booleanArray0[2] = true;
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 0);
      resultMatrixLatex0.setMeanPrec(1);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "v";
      stringArray0[1] = "";
      stringArray0[2] = " ";
      resultMatrixLatex0.setOptions(stringArray0);
      resultMatrixLatex0.clearSummary();
      ResultMatrixLatex.main(stringArray0);
      resultMatrixLatex0.getCount(0);
      resultMatrixLatex0.isAverage(1544);
      resultMatrixLatex0.getDefaultSignificanceWidth();
      resultMatrixLatex0.clear();
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.3805477218346724
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.padString("\"T<*#MdOeQ&<r", 0);
      String[][] stringArray0 = resultMatrixPlainText0.toArray();
      resultMatrixPlainText0.setRowHidden((-3676), false);
      resultMatrixPlainText0.setColNameWidth(0);
      resultMatrixPlainText0.setMeanWidth(5);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 1);
      resultMatrixLatex0.setEnumerateColNames(true);
      int[] intArray0 = new int[7];
      intArray0[0] = 0;
      intArray0[1] = 1;
      intArray0[2] = 0;
      intArray0[3] = 1;
      intArray0[4] = 2;
      intArray0[5] = 0;
      intArray0[6] = 1;
      resultMatrixPlainText0.setRowOrder(intArray0);
      resultMatrixPlainText0.setCountWidth(2);
      resultMatrixLatex0.clearSummary();
      resultMatrixPlainText0.getEnumerateRowNames();
      resultMatrixLatex0.getMean(2942, 2942);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 1);
      resultMatrixSignificance0.toStringKey();
      int int0 = resultMatrixPlainText0.getColSize(stringArray0, 1, true, true);
      assertEquals(5, resultMatrixPlainText0.getMeanWidth());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.6125339494454085
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.m_StdDevPrec = 0;
      resultMatrixSignificance0.m_ShowStdDev = false;
      resultMatrixSignificance0.doubleToString((-2541.9081796), 0);
      resultMatrixSignificance0.m_EnumerateRowNames = false;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixSignificance0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setMeanWidth(2);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(117, 0);
      resultMatrixLatex0.setEnumerateColNames(false);
      String[] stringArray0 = new String[8];
      stringArray0[0] = " ";
      stringArray0[1] = " ";
      stringArray0[2] = " ";
      stringArray0[3] = "*";
      stringArray0[4] = ")";
      stringArray0[5] = "(";
      stringArray0[6] = "(";
      stringArray0[7] = "-2542.";
      resultMatrixLatex0.setOptions(stringArray0);
      resultMatrixLatex0.clearSummary();
      ResultMatrixLatex.main((String[]) null);
      resultMatrixLatex0.getCount(942);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixPlainText0);
      resultMatrixLatex1.isAverage(914);
      resultMatrixLatex0.getDefaultSignificanceWidth();
      assertEquals(0, resultMatrixLatex0.getStdDevPrec());
      
      resultMatrixLatex1.clear();
      resultMatrixSignificance0.getSignificance(1289, 2491);
      assertEquals(0, resultMatrixSignificance0.getColNameWidth());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.3422519749999955
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      String string0 = resultMatrixPlainText0.padString("\"T<*#MdOeQ&<r", 0);
      assertEquals("\"T<*#MdOeQ&<r", string0);
      
      String[][] stringArray0 = resultMatrixPlainText0.toArray();
      assertEquals(3, stringArray0.length);
      
      resultMatrixPlainText0.setRowHidden(1, false);
      resultMatrixPlainText0.setColNameWidth(0);
      resultMatrixPlainText0.setMeanWidth(5);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 1);
      resultMatrixLatex0.setEnumerateColNames(true);
      resultMatrixLatex0.getDefaultPrintColNames();
      int[] intArray0 = new int[7];
      intArray0[0] = 0;
      intArray0[1] = 1;
      intArray0[1] = 0;
      intArray0[3] = 1;
      intArray0[4] = 2;
      intArray0[5] = 0;
      intArray0[6] = 1;
      resultMatrixPlainText0.setRowOrder(intArray0);
      resultMatrixLatex0.isAverage(5);
      resultMatrixLatex0.getDefaultSignificanceWidth();
      resultMatrixLatex0.getRowCount();
      assertEquals(0, resultMatrixLatex0.getVisibleColCount());
      
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getRevision();
      assertEquals(25, resultMatrixPlainText0.getRowNameWidth());
      assertTrue(resultMatrixPlainText0.getPrintColNames());
      assertFalse(resultMatrixPlainText0.getEnumerateRowNames());
      assertEquals(0, resultMatrixPlainText0.getColNameWidth());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.276106059067642
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDefaultRemoveFilterName();
      resultMatrixCSV0.getDefaultRemoveFilterName();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.padString("v", 1);
      resultMatrixPlainText0.toArray();
      int int0 = (-3676);
      resultMatrixPlainText0.setRowHidden(2, true);
      resultMatrixPlainText0.setColNameWidth((-3676));
      int int1 = 5;
      resultMatrixPlainText0.setMeanWidth((-3676));
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(2, 1);
      ResultMatrixLatex resultMatrixLatex1 = null;
      try {
        resultMatrixLatex1 = new ResultMatrixLatex((-3676), (-1401));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.3350385645543703
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDefaultRemoveFilterName();
      resultMatrixCSV0.getDefaultRemoveFilterName();
      resultMatrixCSV0.getRowName((-1521));
      resultMatrixCSV0.setShowStdDev(false);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      resultMatrixLatex0.m_CountWidth = 1;
      resultMatrixLatex0.clear();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2, 1557);
      String[] stringArray0 = new String[4];
      stringArray0[0] = " ";
      stringArray0[1] = " ";
      stringArray0[2] = "$\bullet$";
      stringArray0[3] = "[";
      resultMatrixGnuPlot0.setOptions(stringArray0);
      assertEquals(0, resultMatrixGnuPlot0.getStdDevPrec());
      
      resultMatrixCSV0.getCount((-1521));
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getDefaultPrintColNames();
      resultMatrixHTML0.listOptions();
      resultMatrixHTML0.getDisplayRow(2);
      resultMatrixCSV0.trimString("5", 2);
      assertEquals(0, resultMatrixCSV0.getDefaultSignificanceWidth());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.000075746995985
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      int int0 = 0;
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 0);
      double[][] doubleArray0 = new double[0][9];
      resultMatrixCSV0.clearSummary();
      resultMatrixCSV0.m_StdDev = doubleArray0;
      resultMatrixCSV0.setSignificanceWidth(0);
      resultMatrixCSV0.setShowStdDev(false);
      // Undeclared exception!
      try { 
        resultMatrixCSV0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.613742332848157
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(0, 110);
      resultMatrixCSV1.doubleToString(1172.0356, 1);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV1);
      resultMatrixHTML0.getOptions();
      resultMatrixHTML0.getMean(0, 2);
      int int0 = ResultMatrix.SIGNIFICANCE_TIE;
      resultMatrixHTML0.clearHeader();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(39, 1);
      resultMatrixPlainText0.enumerateRowNamesTipText();
      resultMatrixPlainText0.getColHidden(1);
      ResultMatrixCSV resultMatrixCSV2 = new ResultMatrixCSV(0, 1544);
      resultMatrixCSV2.getDefaultRowNameWidth();
      resultMatrixPlainText0.getRevision();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "[";
      stringArray0[1] = " ";
      ResultMatrixHTML.main(stringArray0);
      assertEquals(2, stringArray0.length);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.0153240793209064
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.m_StdDevPrec = 0;
      resultMatrixSignificance0.m_ShowStdDev = false;
      resultMatrixSignificance0.doubleToString((-2541.9081796), 0);
      resultMatrixSignificance0.m_EnumerateRowNames = false;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixSignificance0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setMeanWidth(2);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(117, 0);
      resultMatrixLatex0.setEnumerateColNames(false);
      resultMatrixLatex0.getDefaultPrintColNames();
      int[] intArray0 = new int[4];
      intArray0[0] = 2;
      resultMatrixPlainText0.setRowOrder(intArray0);
      Vector<String> vector0 = new Vector<String>();
      vector0.add("'n1\"EZ<");
      resultMatrixSignificance0.setSignificanceWidth(4716);
      resultMatrixGnuPlot0.getRevision();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(26, 2);
      resultMatrixPlainText0.setEnumerateRowNames(false);
      vector0.parallelStream();
      resultMatrixPlainText1.globalInfo();
      resultMatrixGnuPlot0.getDefaultMeanPrec();
      assertEquals(4716, resultMatrixSignificance0.getSignificanceWidth());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(2, 1);
      resultMatrixGnuPlot1.setColOrder(intArray0);
      assertEquals(1, resultMatrixGnuPlot1.getVisibleRowCount());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.2400842127844856
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.TIE_STRING = "_M{4#<qn':%/";
      resultMatrixGnuPlot0.m_MeanPrec = 26;
      resultMatrixGnuPlot0.setShowStdDev(true);
      resultMatrixGnuPlot0.toString();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixGnuPlot0);
      resultMatrixGnuPlot0.toArray();
      resultMatrixGnuPlot1.m_StdDevWidth = 6;
      resultMatrixGnuPlot1.setEnumerateColNames(true);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixGnuPlot1);
      resultMatrixGnuPlot1.getDefaultRowNameWidth();
      resultMatrixGnuPlot1.getDisplayRow(97);
      resultMatrixGnuPlot1.setStdDevPrec(663);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[][] intArray0 = new int[9][2];
      int[] intArray1 = new int[4];
      intArray1[0] = 97;
      intArray1[1] = 0;
      intArray1[2] = 97;
      intArray1[3] = 0;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[8];
      intArray2[0] = 97;
      intArray2[1] = 26;
      intArray2[2] = 2;
      intArray2[3] = 1;
      intArray2[4] = 2;
      intArray2[5] = 1;
      intArray2[6] = 663;
      intArray2[7] = 50;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[8];
      intArray3[0] = 1;
      intArray3[1] = 26;
      intArray3[2] = 2;
      intArray3[3] = 663;
      intArray3[4] = 0;
      intArray3[5] = 2345;
      intArray3[6] = 2;
      intArray3[7] = (-432);
      intArray0[2] = intArray3;
      int[] intArray4 = new int[9];
      intArray4[0] = 1;
      intArray4[1] = 1;
      intArray4[2] = 1;
      intArray4[3] = 26;
      intArray4[4] = 0;
      intArray4[5] = 0;
      intArray4[6] = (-1);
      intArray4[7] = 0;
      intArray4[8] = 26;
      intArray0[3] = intArray4;
      int[] intArray5 = new int[8];
      intArray5[0] = 6;
      intArray5[1] = 2;
      intArray5[2] = 2345;
      intArray5[3] = 1;
      intArray5[4] = 97;
      intArray5[5] = 1;
      intArray5[6] = 2;
      intArray5[7] = (-1068);
      intArray0[4] = intArray5;
      int[] intArray6 = new int[8];
      intArray6[0] = 485;
      intArray6[1] = 0;
      intArray6[2] = 1;
      intArray6[3] = 6;
      intArray6[4] = 26;
      intArray6[5] = 1;
      intArray6[6] = 2345;
      intArray6[7] = 1;
      intArray0[5] = intArray6;
      int[] intArray7 = new int[6];
      intArray7[0] = 1;
      intArray7[1] = 2;
      intArray7[2] = (-1068);
      intArray7[3] = (-1183);
      intArray7[4] = 26;
      intArray7[5] = 0;
      intArray0[6] = intArray7;
      int[] intArray8 = new int[4];
      intArray8[0] = 1;
      intArray8[1] = 6;
      intArray8[2] = 0;
      intArray8[3] = 97;
      intArray0[7] = intArray8;
      int[] intArray9 = new int[9];
      intArray9[0] = 0;
      intArray9[1] = 2345;
      intArray9[2] = 2345;
      intArray9[3] = 2;
      intArray9[4] = 0;
      intArray9[5] = 1;
      intArray9[6] = 2;
      intArray9[7] = 0;
      intArray9[8] = (-1183);
      intArray0[8] = intArray9;
      resultMatrixHTML0.setSummary(intArray0, intArray0);
      resultMatrixHTML0.clearSummary();
      resultMatrixHTML0.getDisplayName();
      resultMatrixLatex0.getDefaultColNameWidth();
      assertTrue(resultMatrixGnuPlot0.getShowStdDev());
      assertEquals(26, resultMatrixGnuPlot1.getMeanPrec());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=3.462741248094962
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      resultMatrixLatex1.toString();
      int[] intArray0 = new int[5];
      intArray0[0] = 2;
      resultMatrixLatex0.m_MeanPrec = 2988;
      intArray0[1] = 2;
      resultMatrixLatex0.LOSS_STRING = "\begin{table}[thb]\ncaption{label{labelname}Table Caption}\n\footnotesize\n{centering \begin{tabular}{lr}\n\\\nhline\nDataset & (1)\\\nhline\nrow0 &    \\\nhline\nmulticolumn{2}{c}{$circ$, $\bullet$ statistically significant improvement or degradation}\\\nend{tabular} \footnotesize par}\nend{table}\n";
      intArray0[2] = 2;
      intArray0[3] = 2;
      intArray0[4] = 0;
      resultMatrixLatex1.setColOrder(intArray0);
      resultMatrixLatex1.colNameWidthTipText();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setShowStdDev(true);
      resultMatrixGnuPlot0.toString();
      resultMatrixLatex0.getRevision();
      resultMatrixGnuPlot0.doubleToString(2709.904085431824, 0);
      resultMatrixGnuPlot0.getRevision();
      String[] stringArray0 = new String[1];
      stringArray0[0] = ",b$q|kLk-pU;";
      ResultMatrixCSV.main(stringArray0);
      resultMatrixGnuPlot0.getShowAverage();
      resultMatrixGnuPlot0.getDefaultEnumerateRowNames();
      // Undeclared exception!
      try { 
        resultMatrixLatex0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.714277730720821
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getDisplayName();
      int int0 = 0;
      resultMatrixHTML0.getColHidden(0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      Vector<Integer> vector0 = new Vector<Integer>();
      resultMatrixCSV0.setStdDevWidth((-711));
      vector0.addElement((Integer) 0);
      resultMatrixCSV0.m_StdDevWidth = 2;
      int[][] intArray0 = new int[4][5];
      int[] intArray1 = new int[7];
      intArray1[0] = 1;
      intArray1[1] = 1;
      intArray1[2] = 2;
      intArray1[3] = 1;
      intArray1[4] = 1;
      intArray1[5] = 2;
      intArray1[6] = (-711);
      intArray0[0] = intArray1;
      int[] intArray2 = new int[4];
      intArray2[0] = 0;
      intArray2[1] = 2;
      intArray2[2] = 0;
      intArray2[3] = 0;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[3];
      intArray3[0] = 1;
      intArray3[1] = 2;
      intArray3[2] = 1;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[6];
      intArray4[0] = 2;
      intArray4[1] = 1;
      intArray4[2] = 1;
      intArray4[3] = 1;
      intArray4[4] = 1;
      intArray4[5] = 1;
      intArray0[3] = intArray4;
      // Undeclared exception!
      try { 
        resultMatrixHTML0.setSummary(intArray0, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.516329201889268
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getDisplayName();
      resultMatrixHTML0.getColHidden(0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      
      Vector<Integer> vector0 = new Vector<Integer>();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "HTML";
      ResultMatrixSignificance.main(stringArray0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(3, 105);
      resultMatrixGnuPlot0.getDefaultRowNameWidth();
      assertEquals(105, resultMatrixGnuPlot0.getVisibleRowCount());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.6237083844410054
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.stdDevWidthTipText();
      String[] stringArray0 = new String[8];
      resultMatrixLatex0.m_RowNameWidth = 1434;
      stringArray0[0] = "(";
      stringArray0[1] = "(";
      stringArray0[2] = " ";
      resultMatrixLatex0.setMeanPrec(0);
      stringArray0[3] = "$circ$";
      stringArray0[4] = "(";
      stringArray0[5] = "$\bullet$";
      stringArray0[6] = ")";
      stringArray0[7] = "$circ$";
      resultMatrixLatex0.setOptions(stringArray0);
      resultMatrixLatex0.clearSummary();
      ResultMatrixLatex.main(stringArray0);
      resultMatrixLatex0.getCount(1);
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (double) 1;
      doubleArray0[1] = (double) 1;
      doubleArray0[2] = (double) 2;
      doubleArray0[3] = 0.0;
      doubleArray0[4] = (double) 0;
      resultMatrixLatex0.m_Counts = doubleArray0;
      resultMatrixLatex0.isAverage(1);
      resultMatrixLatex0.getDefaultSignificanceWidth();
      resultMatrixLatex0.clear();
      int[][] intArray0 = new int[1][5];
      int[] intArray1 = new int[4];
      intArray1[0] = 1;
      intArray1[1] = 0;
      intArray1[2] = 1;
      intArray1[3] = 2;
      intArray0[0] = intArray1;
      resultMatrixLatex0.setSummary(intArray0, intArray0);
      assertEquals(0, resultMatrixLatex0.getRowNameWidth());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.7936567840058286
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      boolean boolean0 = true;
      resultMatrixHTML0.setPrintRowNames(true);
      resultMatrixHTML0.m_ShowStdDev = true;
      // Undeclared exception!
      try { 
        resultMatrixHTML0.getHeader("MNRF?]0mN@");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=3.507129807329839
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.stdDevWidthTipText();
      String[] stringArray0 = new String[8];
      resultMatrixLatex0.m_RowNameWidth = 1434;
      stringArray0[0] = "(";
      stringArray0[1] = "(";
      ResultMatrixPlainText.main(stringArray0);
      int int0 = 1974;
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(1434, 26);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.196170046769773
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.toStringRanking();
      double[] doubleArray0 = new double[5];
      String string0 = resultMatrixCSV0.toString();
      assertEquals("Dataset,[1]\nrow0,''\n'[v/ /*]',''\n", string0);
      
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 1;
      doubleArray0[2] = (double) 1;
      doubleArray0[3] = (double) 1;
      doubleArray0[4] = (-5454.962837);
      resultMatrixCSV0.m_Counts = doubleArray0;
      resultMatrixCSV0.getPrintColNames();
      int[][] intArray0 = new int[0][2];
      resultMatrixCSV0.m_NonSigWins = intArray0;
      String string1 = resultMatrixCSV0.toStringSummary();
      assertEquals("a,'(No. of datasets where [col] >> [row])'\n-,a = col0\n", string1);
      
      resultMatrixCSV0.getDefaultEnumerateRowNames();
      resultMatrixCSV0.toStringKey();
      resultMatrixCSV0.printRowNamesTipText();
      resultMatrixCSV0.getDisplayCol(0);
      double double0 = resultMatrixCSV0.getCount(0);
      assertEquals(0.0, double0, 0.01);
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getDefaultPrintColNames();
      double[][] doubleArray1 = new double[7][0];
      doubleArray1[0] = resultMatrixCSV0.m_Counts;
      doubleArray1[1] = resultMatrixCSV0.m_Counts;
      double[] doubleArray2 = new double[9];
      doubleArray2[0] = (double) 1;
      doubleArray2[1] = (double) 0;
      doubleArray2[2] = (double) 0;
      doubleArray2[3] = (double) 0;
      doubleArray2[4] = (double) 0;
      doubleArray2[5] = (double) 2;
      doubleArray2[6] = (double) 1;
      doubleArray2[7] = (double) 0;
      doubleArray2[8] = (double) 0;
      doubleArray1[2] = doubleArray2;
      doubleArray1[3] = resultMatrixCSV0.m_Counts;
      doubleArray1[4] = doubleArray0;
      doubleArray1[5] = doubleArray0;
      doubleArray1[6] = doubleArray0;
      resultMatrixHTML0.m_StdDev = doubleArray1;
      resultMatrixHTML0.listOptions();
      resultMatrixHTML0.getDisplayRow(0);
      resultMatrixCSV0.trimString("Key,\n[1],col0\n", 40);
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertEquals(0, resultMatrixCSV0.getColNameWidth());
      assertEquals(2, resultMatrixCSV0.getDefaultStdDevPrec());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.3092508427079994
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      int int0 = 0;
      resultMatrixPlainText0.m_CountWidth = 0;
      resultMatrixPlainText0.m_Counts = null;
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.376468982375618
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      String string0 = resultMatrixPlainText0.padString("\"T<*#MdOeQ&<r", 0);
      assertEquals("\"T<*#MdOeQ&<r", string0);
      assertEquals(1, resultMatrixPlainText0.getRowCount());
      assertEquals(1, resultMatrixPlainText0.getVisibleColCount());
      
      String[][] stringArray0 = resultMatrixPlainText0.toArray();
      assertEquals(3, stringArray0.length);
      
      resultMatrixPlainText0.setRowHidden(1, false);
      resultMatrixPlainText0.setColNameWidth(0);
      resultMatrixPlainText0.setMeanWidth(5);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 1);
      resultMatrixLatex0.setEnumerateColNames(true);
      resultMatrixLatex0.getDefaultPrintColNames();
      int[] intArray0 = new int[7];
      intArray0[0] = 0;
      intArray0[1] = 1;
      intArray0[1] = 0;
      intArray0[3] = 1;
      intArray0[4] = 2;
      intArray0[5] = 0;
      intArray0[6] = 1;
      resultMatrixPlainText0.setRowOrder(intArray0);
      resultMatrixPlainText0.setCountWidth(2);
      resultMatrixLatex0.clearSummary();
      resultMatrixPlainText0.getEnumerateRowNames();
      assertTrue(resultMatrixPlainText0.getPrintColNames());
      assertEquals(0, resultMatrixPlainText0.getColNameWidth());
      
      resultMatrixLatex0.getMean(0, 0);
      assertTrue(resultMatrixLatex0.getEnumerateColNames());
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 1);
      resultMatrixSignificance0.toStringKey();
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=3.3276352310578634
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 0);
      resultMatrixCSV0.doubleToString(0, 0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      resultMatrixHTML0.getOptions();
      resultMatrixHTML0.getMean((-331), 0);
      resultMatrixHTML0.getMeanPrec();
      resultMatrixHTML0.clearHeader();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(2, 1);
      resultMatrixCSV0.m_StdDevPrec = 32;
      resultMatrixPlainText0.m_RemoveFilterName = false;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      resultMatrixCSV0.LEFT_PARENTHESES = "";
      resultMatrixSignificance0.LOSS_STRING = "8J6";
      resultMatrixSignificance0.toStringSummary();
      resultMatrixSignificance0.setColNameWidth((-2398));
      resultMatrixCSV0.getDisplayName();
      resultMatrixPlainText0.getDefaultStdDevWidth();
      resultMatrixHTML0.globalInfo();
      // Undeclared exception!
      try { 
        resultMatrixCSV0.toStringMatrix();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.6177261191008823
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 0);
      resultMatrixCSV0.doubleToString(0, 0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      String[] stringArray0 = resultMatrixHTML0.getOptions();
      resultMatrixHTML0.getMean((-331), 0);
      int int0 = ResultMatrix.SIGNIFICANCE_TIE;
      resultMatrixHTML0.clearHeader();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(2, 1);
      resultMatrixCSV0.m_StdDevPrec = 32;
      resultMatrixPlainText0.enumerateRowNamesTipText();
      resultMatrixPlainText0.getColHidden(1692);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(1, 741);
      resultMatrixCSV1.getDefaultRowNameWidth();
      resultMatrixPlainText0.getRevision();
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
      
      ResultMatrixHTML.main(stringArray0);
      assertEquals(0, resultMatrixHTML0.getCountWidth());
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.217267436939139
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      double[] doubleArray0 = new double[5];
      resultMatrixCSV0.toString();
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 1;
      doubleArray0[3] = (double) 1;
      doubleArray0[4] = (-5454.962837);
      resultMatrixCSV0.m_Counts = doubleArray0;
      resultMatrixCSV0.getPrintColNames();
      int[][] intArray0 = new int[0][2];
      resultMatrixCSV0.m_NonSigWins = intArray0;
      resultMatrixCSV0.toStringSummary();
      resultMatrixCSV0.getDefaultEnumerateRowNames();
      resultMatrixCSV0.toStringKey();
      resultMatrixCSV0.printRowNamesTipText();
      int int0 = 0;
      resultMatrixCSV0.getDisplayCol(0);
      resultMatrixCSV0.setRanking(intArray0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(97, 0);
      resultMatrixGnuPlot0.toStringRanking();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      ResultMatrixHTML resultMatrixHTML0 = null;
      try {
        resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=3.4690150520016996
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      boolean[] booleanArray0 = new boolean[5];
      booleanArray0[0] = false;
      booleanArray0[1] = true;
      resultMatrixSignificance0.toStringSummary();
      booleanArray0[2] = true;
      booleanArray0[3] = true;
      booleanArray0[4] = false;
      resultMatrixSignificance0.m_ColHidden = booleanArray0;
      boolean[] booleanArray1 = new boolean[7];
      booleanArray1[0] = false;
      booleanArray1[1] = true;
      resultMatrixSignificance0.m_CountWidth = (-1);
      booleanArray1[2] = true;
      booleanArray1[3] = true;
      booleanArray1[4] = true;
      booleanArray1[5] = true;
      booleanArray1[6] = false;
      resultMatrixSignificance0.m_ColHidden = booleanArray1;
      resultMatrixSignificance0.getRevision();
      resultMatrixSignificance0.setRowName(0, "oH1gj]?=n)@/!%");
      resultMatrixSignificance0.getShowAverage();
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
      
      ResultMatrixLatex.main((String[]) null);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getDisplayName();
      assertTrue(resultMatrixHTML0.getPrintRowNames());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.9458755173797666
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.stdDevWidthTipText();
      resultMatrixLatex0.setStdDevWidth(5155);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "(";
      stringArray0[1] = "(";
      stringArray0[2] = " ";
      resultMatrixLatex0.setMeanPrec(0);
      stringArray0[3] = "$circ$";
      stringArray0[5] = "$\bullet$";
      stringArray0[6] = ")";
      stringArray0[7] = "$circ$";
      try { 
        resultMatrixLatex0.setOptions(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.8466796372141983
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setPrintColNames(true);
      String string0 = " E99m_mEbu` ixux";
      String[] stringArray0 = new String[5];
      stringArray0[1] = "*";
      stringArray0[3] = "`0u2x(";
      stringArray0[4] = "   <tr><td align=\"right\">";
      try { 
        resultMatrixPlainText0.setOptions(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=3.4047687751665032
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      doubleArray0[4] = (-5454.962837);
      int[] intArray0 = new int[0];
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setShowStdDev(false);
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
      
      String string0 = resultMatrixGnuPlot0.toString();
      assertEquals("\n##################\n# file: plot.dat #\n##################\n# generated by WEKA 3.7.7\n# contains the data for the plot\n\n# key for the x-axis\n# 1 - row0\n\n# data for the plot\n1 ''\n#######\n# end #\n#######\n\n##################\n# file: plot.scr #\n##################\n# generated by WEKA 3.7.7\n# script to plot the data\n\n# display it in a window:\nset terminal x11\nset output\n\n# to display all data rows:\nset xrange [0:2]\n\n# axis labels, e.g.:\n#set xlabel \"Datasets\"\n#set ylabel \"Accuracy in %\"\n\n# the plot commands\nplot \"plot.dat\" using 1:2 with lines title \"col0\"\n\n# generate ps:\n#set terminal postscript\n#set output \"plot.ps\"\n#replot\n\n# generate png:\n#set terminal png size 800,600\n#set output \"plot.png\"\n#replot\n\n# wait for user to hit <Return>\npause -1\n#######\n# end #\n#######\n", string0);
      
      resultMatrixGnuPlot0.toStringSummary();
      resultMatrixGnuPlot0.getRevision();
      String[] stringArray0 = new String[9];
      stringArray0[0] = " ";
      stringArray0[1] = "*";
      stringArray0[2] = "cY=EiX7SQ7Syv/";
      ResultMatrixCSV.main(stringArray0);
      resultMatrixGnuPlot0.getShowAverage();
      resultMatrixGnuPlot0.getDefaultEnumerateRowNames();
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=3.044820482464577
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(26, 0);
      resultMatrixCSV0.m_CountWidth = 26;
      resultMatrixCSV0.clearHeader();
      resultMatrixCSV0.setEnumerateRowNames(true);
      resultMatrixCSV0.getDefaultStdDevPrec();
      resultMatrixCSV0.getSignificanceWidth();
      resultMatrixCSV0.setShowAverage(true);
      assertTrue(resultMatrixCSV0.getShowAverage());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=3.444499207429848
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      String[] stringArray0 = new String[0];
      ResultMatrixCSV.main(stringArray0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setPrintColNames(true);
      resultMatrixHTML0.setPrintRowNames(true);
      resultMatrixHTML0.setShowAverage(true);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.globalInfo();
      resultMatrixHTML0.getDisplayRow(0);
      assertTrue(resultMatrixHTML0.getPrintColNames());
      
      resultMatrixCSV0.getDefaultEnumerateRowNames();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      int[] intArray0 = new int[1];
      intArray0[0] = 1;
      resultMatrixPlainText0.m_RankingLosses = intArray0;
      resultMatrixPlainText0.assign(resultMatrixCSV0);
      resultMatrixPlainText0.toStringSummary();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(1, 0);
      resultMatrixSignificance0.clearRanking();
      resultMatrixSignificance0.getRevision();
      resultMatrixPlainText0.getColHidden(3);
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=3.5316752800759446
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      
      double[] doubleArray0 = new double[5];
      resultMatrixCSV0.toString();
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 1;
      doubleArray0[3] = (double) 1;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "v";
      stringArray0[1] = "]";
      stringArray0[2] = "v";
      ResultMatrixLatex.main(stringArray0);
      ResultMatrixHTML.main(stringArray0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getRowName(917);
      resultMatrixLatex0.setCount(97, 2);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      String string0 = resultMatrixHTML0.toString();
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>[1]</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>[v/ /*]</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string0);
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(0, resultMatrixHTML0.getCountWidth());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=3.5520036293107196
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixHTML0.globalInfo();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixLatex0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "Generates the matrix output as HTML.";
      ResultMatrixLatex.main(stringArray0);
      stringArray0[1] = "*";
      stringArray0[2] = "(";
      stringArray0[3] = "v";
      ResultMatrixHTML.main(stringArray0);
      resultMatrixLatex0.getRowName(0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(1, 1);
      resultMatrixCSV0.getDefaultRowNameWidth();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getRevision();
      ResultMatrixHTML.main(stringArray0);
      assertEquals(4, stringArray0.length);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=3.550679887022807
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.m_StdDevPrec = 0;
      resultMatrixSignificance0.m_ShowStdDev = true;
      resultMatrixSignificance0.doubleToString((-2541.9081796), 0);
      resultMatrixSignificance0.m_EnumerateRowNames = true;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixSignificance0);
      resultMatrixGnuPlot0.assign(resultMatrixSignificance0);
      Vector<String> vector0 = new Vector<String>();
      vector0.spliterator();
      vector0.setSize(1);
      resultMatrixGnuPlot0.m_HeaderValues = vector0;
      vector0.removeAll(resultMatrixGnuPlot0.m_HeaderValues);
      resultMatrixGnuPlot0.getMeanWidth();
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleRowCount());
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      assertEquals(40, resultMatrixGnuPlot0.getRowNameWidth());
      assertFalse(resultMatrixGnuPlot0.getShowAverage());
      
      String[] stringArray0 = new String[7];
      stringArray0[0] = " ";
      stringArray0[1] = "(";
      stringArray0[2] = ")";
      stringArray0[3] = "*";
      stringArray0[4] = "c";
      stringArray0[5] = "-2542.";
      stringArray0[6] = "-2542.";
      ResultMatrixHTML.main(stringArray0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getRowName(1);
      resultMatrixLatex0.setCount((-2468), (-2468));
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String string0 = resultMatrixHTML0.toString();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>(1)</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>(v/ /*)</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string0);
      
      String string1 = resultMatrixLatex0.toStringMatrix();
      assertEquals("\\begin{table}[thb]\n\\caption{\\label{labelname}Table Caption}\n\\footnotesize\n{\\centering \\begin{tabular}{lr}\n\\\\\n\\hline\nDataset & (1)\\\\\n\\hline\nrow0 &    \\\\\n\\hline\n\\multicolumn{2}{c}{$\\circ$, $\\bullet$ statistically significant improvement or degradation}\\\\\n\\end{tabular} \\footnotesize \\par}\n\\end{table}\n", string1);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=3.3361202174025157
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setColNameWidth(0);
      resultMatrixGnuPlot0.m_PrintColNames = false;
      boolean[] booleanArray0 = new boolean[3];
      resultMatrixGnuPlot0.setEnumerateColNames(true);
      booleanArray0[0] = true;
      booleanArray0[1] = false;
      resultMatrixGnuPlot0.m_PrintRowNames = false;
      booleanArray0[2] = false;
      resultMatrixGnuPlot0.m_RowHidden = booleanArray0;
      resultMatrixGnuPlot0.m_ColNameWidth = 1;
      resultMatrixGnuPlot0.getDefaultEnumerateColNames();
      resultMatrixGnuPlot0.getDefaultEnumerateColNames();
      resultMatrixGnuPlot0.getDefaultColNameWidth();
      resultMatrixGnuPlot0.getDefaultColNameWidth();
      resultMatrixGnuPlot0.getColNameWidth();
      resultMatrixGnuPlot0.showStdDevTipText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setStdDevPrec(2);
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      
      resultMatrixCSV0.m_MeanWidth = 1;
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      resultMatrixLatex0.getRowName(1);
      resultMatrixLatex0.setCount(26, 0.0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      String string0 = resultMatrixHTML0.toString();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>[1]</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>[v/ /*]</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string0);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=3.5246706438873834
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDefaultRemoveFilterName();
      resultMatrixCSV0.getDefaultRemoveFilterName();
      resultMatrixCSV0.getRowName((-1521));
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      resultMatrixLatex0.m_CountWidth = 1;
      resultMatrixLatex0.clear();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2, 1557);
      String[] stringArray0 = new String[4];
      stringArray0[0] = " ";
      ResultMatrixHTML.main(stringArray0);
      resultMatrixLatex0.getRowName(1);
      resultMatrixLatex0.getMean(0, 116);
      ResultMatrixSignificance resultMatrixSignificance0 = null;
      try {
        resultMatrixSignificance0 = new ResultMatrixSignificance((-2251), 0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=3.5989581880697834
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.stdDevWidthTipText();
      String[] stringArray0 = new String[8];
      resultMatrixLatex0.setShowAverage(false);
      resultMatrixLatex0.m_RowNameWidth = 1434;
      stringArray0[0] = "(";
      stringArray0[1] = "(";
      stringArray0[2] = " ";
      resultMatrixLatex0.setMeanPrec(0);
      stringArray0[3] = "$circ$";
      stringArray0[4] = "(";
      stringArray0[5] = "$\bullet$";
      stringArray0[6] = ")";
      stringArray0[7] = "$circ$";
      resultMatrixLatex0.setOptions(stringArray0);
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
      
      ResultMatrixLatex.main(stringArray0);
      resultMatrixLatex0.getCount(1);
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (double) 1;
      doubleArray0[1] = (double) 1;
      doubleArray0[2] = (double) 2;
      doubleArray0[3] = 0.0;
      doubleArray0[4] = (double) 0;
      resultMatrixLatex0.m_Counts = doubleArray0;
      resultMatrixLatex0.isAverage(1);
      resultMatrixLatex0.getDefaultSignificanceWidth();
      resultMatrixLatex0.clear();
      assertFalse(resultMatrixLatex0.getDefaultShowStdDev());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=3.564871265649712
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.padString("\"T<*#MdOeQ&<r", 0);
      resultMatrixPlainText0.toArray();
      resultMatrixPlainText0.setRowHidden(1, false);
      resultMatrixPlainText0.setColNameWidth(0);
      resultMatrixPlainText0.setMeanWidth(5);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 1);
      resultMatrixLatex0.setEnumerateColNames(true);
      resultMatrixLatex0.getDefaultPrintColNames();
      int[] intArray0 = new int[7];
      intArray0[0] = 0;
      intArray0[1] = 1;
      intArray0[1] = 0;
      intArray0[3] = 1;
      intArray0[4] = 2;
      intArray0[5] = 0;
      intArray0[6] = 1;
      resultMatrixPlainText0.setRowOrder(intArray0);
      resultMatrixPlainText0.setCountWidth(2);
      assertEquals(5, resultMatrixPlainText0.getMeanWidth());
      
      resultMatrixLatex0.clearSummary();
      ResultMatrixSignificance.main((String[]) null);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getDefaultMeanPrec();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(2, 1);
      resultMatrixHTML0.getEnumerateRowNames();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getRevision();
      resultMatrixGnuPlot0.getDefaultColNameWidth();
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.8871876276384967
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.m_StdDevPrec = 0;
      resultMatrixSignificance0.m_ShowStdDev = true;
      resultMatrixSignificance0.doubleToString((-2541.9081796), 0);
      resultMatrixSignificance0.m_EnumerateRowNames = true;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixSignificance0);
      resultMatrixGnuPlot0.assign(resultMatrixSignificance0);
      Vector<String> vector0 = new Vector<String>();
      vector0.setSize(1);
      resultMatrixGnuPlot0.m_HeaderValues = vector0;
      vector0.removeAll(resultMatrixGnuPlot0.m_HeaderValues);
      resultMatrixGnuPlot0.getRevision();
      resultMatrixGnuPlot0.getMeanWidth();
      int[][] intArray0 = new int[2][2];
      int[] intArray1 = new int[2];
      intArray1[0] = 2;
      intArray1[1] = 97;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[8];
      intArray2[0] = 0;
      intArray2[1] = 0;
      intArray2[2] = 0;
      intArray2[3] = 0;
      intArray2[4] = 0;
      intArray2[5] = 4;
      intArray2[6] = 97;
      intArray2[7] = 0;
      intArray0[1] = intArray2;
      resultMatrixGnuPlot0.m_NonSigWins = intArray0;
      vector0.add("]");
      resultMatrixGnuPlot0.m_PrintRowNames = true;
      resultMatrixSignificance0.setSignificanceWidth(1687);
      resultMatrixGnuPlot0.getRevision();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(2, 0);
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = 0.0;
      resultMatrixPlainText0.setEnumerateRowNames(true);
      doubleArray0[1] = (double) 2;
      resultMatrixPlainText0.m_Counts = doubleArray0;
      vector0.parallelStream();
      resultMatrixPlainText0.globalInfo();
      resultMatrixGnuPlot0.getDefaultMeanPrec();
      int[] intArray3 = new int[0];
      resultMatrixGnuPlot0.setColOrder(intArray3);
      assertEquals(1687, resultMatrixSignificance0.getSignificanceWidth());
      assertEquals(0, resultMatrixSignificance0.getMeanWidth());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.8765090940922815
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.doubleToString(0, 392);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixSignificance0);
      resultMatrixGnuPlot0.assign(resultMatrixSignificance0);
      Vector<String> vector0 = new Vector<String>();
      vector0.setSize(44);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      vector0.removeAll(linkedList0);
      resultMatrixGnuPlot0.getRevision();
      resultMatrixGnuPlot0.getMeanWidth();
      vector0.add((String) null);
      resultMatrixSignificance0.setSignificanceWidth(97);
      resultMatrixGnuPlot0.getRevision();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 1444);
      resultMatrixPlainText0.setEnumerateRowNames(true);
      Vector<String> vector1 = new Vector<String>();
      vector1.parallelStream();
      resultMatrixPlainText0.globalInfo();
      resultMatrixGnuPlot0.getDefaultMeanPrec();
      resultMatrixGnuPlot0.setColOrder((int[]) null);
      assertEquals(97, resultMatrixSignificance0.getSignificanceWidth());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=3.2945992363420875
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      
      double[] doubleArray0 = new double[5];
      String string0 = resultMatrixCSV0.toString();
      assertEquals("Dataset,[1]\nrow0,''\n'[v/ /*]',''\n", string0);
      
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 1;
      doubleArray0[3] = (double) 1;
      doubleArray0[4] = (-5454.962837);
      resultMatrixCSV0.m_Counts = doubleArray0;
      resultMatrixCSV0.getPrintColNames();
      int[][] intArray0 = new int[0][2];
      resultMatrixCSV0.m_NonSigWins = intArray0;
      String string1 = resultMatrixCSV0.toStringSummary();
      assertEquals("a,'(No. of datasets where [col] >> [row])'\n-,a = col0\n", string1);
      
      resultMatrixCSV0.getDefaultEnumerateRowNames();
      resultMatrixCSV0.toStringKey();
      resultMatrixCSV0.printRowNamesTipText();
      resultMatrixCSV0.getDisplayCol(0);
      resultMatrixCSV0.setRanking(intArray0);
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(97, 0);
      resultMatrixGnuPlot0.toStringRanking();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      resultMatrixCSV1.getRevision();
      assertEquals(2, resultMatrixCSV1.getStdDevPrec());
      assertTrue(resultMatrixCSV1.getPrintRowNames());
      assertEquals(0, resultMatrixCSV1.getSignificanceWidth());
      assertEquals(0, resultMatrixCSV1.getStdDevWidth());
      assertFalse(resultMatrixCSV1.getEnumerateColNames());
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getDefaultPrintColNames();
      resultMatrixHTML0.listOptions();
      resultMatrixHTML0.getDisplayRow(0);
      int[] intArray1 = new int[8];
      intArray1[0] = 1;
      intArray1[1] = 1;
      intArray1[2] = 0;
      intArray1[3] = 0;
      intArray1[4] = 1;
      intArray1[5] = 0;
      intArray1[6] = 1;
      intArray1[7] = 48;
      resultMatrixGnuPlot0.setColOrder(intArray1);
      assertEquals(97, resultMatrixGnuPlot0.getColCount());
      assertEquals(50, resultMatrixGnuPlot0.getRowNameWidth());
      assertEquals(0, resultMatrixGnuPlot0.getRowCount());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=3.3068849378916276
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDefaultRemoveFilterName();
      resultMatrixCSV0.getDefaultRemoveFilterName();
      int int0 = (-1521);
      resultMatrixCSV0.getRowName((-1521));
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getOptions();
      int int1 = ResultMatrix.SIGNIFICANCE_TIE;
      resultMatrixHTML0.clearHeader();
      int int2 = 33;
      ResultMatrixPlainText resultMatrixPlainText0 = null;
      try {
        resultMatrixPlainText0 = new ResultMatrixPlainText((-1521), 33);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.7368184083473874
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getDefaultStdDevWidth();
      resultMatrixGnuPlot0.enumerateRowNamesTipText();
      resultMatrixGnuPlot0.doubleToString(0, 2013);
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultStdDevPrec());
      assertFalse(resultMatrixGnuPlot0.getDefaultRemoveFilterName());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=3.5931088447739192
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      stringArray0[1] = ") - ignored!";
      stringArray0[2] = "\footnotesize ";
      stringArray0[3] = "pn>b?7[vkp";
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setMeanPrec((-1386));
      String[] stringArray1 = new String[2];
      stringArray1[0] = ") - ignored!";
      stringArray1[1] = ") - ignored!";
      resultMatrixLatex0.setOptions(stringArray1);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(2, 557);
      resultMatrixLatex1.clearSummary();
      ResultMatrixLatex.main(stringArray1);
      resultMatrixLatex0.getCount(242);
      resultMatrixLatex0.isAverage(557);
      assertFalse(resultMatrixLatex0.getEnumerateColNames());
      
      resultMatrixLatex1.getDefaultSignificanceWidth();
      resultMatrixLatex1.clear();
      assertEquals(2, resultMatrixLatex1.getDefaultStdDevPrec());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=3.4951130746841126
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      double[] doubleArray0 = new double[5];
      resultMatrixCSV0.toString();
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 1;
      doubleArray0[3] = (double) 1;
      doubleArray0[4] = (-5454.962837);
      resultMatrixCSV0.m_Counts = doubleArray0;
      resultMatrixCSV0.getPrintColNames();
      int[][] intArray0 = new int[0][2];
      resultMatrixCSV0.m_NonSigWins = intArray0;
      resultMatrixCSV0.toStringSummary();
      resultMatrixCSV0.getDefaultEnumerateRowNames();
      resultMatrixCSV0.toStringKey();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "Key,\n[1],col0\n";
      stringArray0[1] = "]";
      stringArray0[2] = "*";
      stringArray0[3] = "v";
      stringArray0[4] = "]";
      ResultMatrixHTML.main(stringArray0);
      ResultMatrixLatex resultMatrixLatex0 = null;
      try {
        resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=3.0008303170414576
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      doubleArray0[4] = (-5454.962837);
      int[][] intArray0 = new int[0][2];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      String string0 = resultMatrixLatex0.toStringKey();
      assertEquals("\\begin{table}[thb]\n\\caption{\\label{labelname}Table Caption (Key)}\n\\scriptsize\n{\\centering\n\\begin{tabular}{cl}\\\\\n(1) & col0 \\\\\n\\end{tabular}\n}\n\\end{table}\n", string0);
      
      Vector<Object> vector0 = new Vector<Object>();
      resultMatrixLatex0.setCountWidth((-681));
      resultMatrixLatex0.globalInfo();
      String string1 = resultMatrixLatex0.getColName(97);
      assertEquals(0, resultMatrixLatex0.getCountWidth());
      assertNull(string1);
      
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(0, 0);
      assertEquals(2, resultMatrixLatex1.getDefaultMeanPrec());
      assertEquals(0, resultMatrixLatex1.getVisibleRowCount());
      assertFalse(resultMatrixLatex1.getRemoveFilterName());
      assertEquals(2, resultMatrixLatex1.getStdDevPrec());
      assertEquals(0, resultMatrixLatex1.getDefaultStdDevWidth());
      assertEquals(0, resultMatrixLatex1.getMeanWidth());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=3.4293960570816115
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 0);
      resultMatrixCSV0.doubleToString(0, 0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      resultMatrixHTML0.meanWidthTipText();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setEnumerateColNames(true);
      resultMatrixGnuPlot0.padString("VjL(8e", 2, true);
      resultMatrixGnuPlot0.getDisplayName();
      resultMatrixGnuPlot0.getDefaultEnumerateColNames();
      resultMatrixGnuPlot0.getDefaultEnumerateColNames();
      resultMatrixGnuPlot0.getDefaultColNameWidth();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixHTML0);
      resultMatrixGnuPlot1.getDefaultColNameWidth();
      resultMatrixGnuPlot0.getColNameWidth();
      assertTrue(resultMatrixGnuPlot0.getEnumerateColNames());
      
      resultMatrixGnuPlot1.showStdDevTipText();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      resultMatrixCSV0.setStdDevPrec((-3143));
      ResultMatrixCSV resultMatrixCSV2 = new ResultMatrixCSV(0, 246);
      resultMatrixCSV2.padString("-col-name-width <int>", 26, false);
      resultMatrixCSV2.setEnumerateRowNames(false);
      ResultMatrixCSV resultMatrixCSV3 = new ResultMatrixCSV();
      ResultMatrixCSV resultMatrixCSV4 = new ResultMatrixCSV();
      resultMatrixCSV4.toStringSummary();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.toString();
      resultMatrixLatex0.getDisplayName();
      resultMatrixCSV2.removeFilterNameTipText();
      int int0 = ResultMatrix.SIGNIFICANCE_LOSS;
      boolean boolean0 = resultMatrixCSV4.getEnumerateColNames();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.917018025490165
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      Vector<Object> vector0 = new Vector<Object>();
      resultMatrixHTML0.setPrintColNames(false);
      Object object0 = new Object();
      vector0.add(object0);
      resultMatrixHTML0.m_HeaderKeys = vector0;
      resultMatrixHTML0.listOptions();
      resultMatrixHTML0.getDefaultShowAverage();
      resultMatrixHTML0.getDefaultMeanWidth();
      resultMatrixHTML0.getColHidden((-1010));
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(2, 1);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      resultMatrixLatex1.clearHeader();
      resultMatrixLatex1.toStringKey();
      UnaryOperator.identity();
      UnaryOperator<Object> unaryOperator0 = UnaryOperator.identity();
      vector0.replaceAll(unaryOperator0);
      resultMatrixLatex0.setCountWidth(1);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "$circ$";
      stringArray0[1] = "$\bullet$";
      stringArray0[2] = "\begin{table}[thb]\ncaption{label{labelname}Table Caption (Key)}\nscriptsize\n{centering\n\begin{tabular}{cl}\\\n(1) & col0 \\\n(2) & col1 \\\nend{tabular}\n}\nend{table}\n";
      stringArray0[3] = ")";
      resultMatrixLatex1.m_ColNames = stringArray0;
      resultMatrixLatex1.globalInfo();
      ResultMatrixLatex resultMatrixLatex2 = null;
      try {
        resultMatrixLatex2 = new ResultMatrixLatex(resultMatrixLatex1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=3.116954888166493
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      Vector<Object> vector0 = new Vector<Object>();
      resultMatrixHTML0.setPrintColNames(true);
      Object object0 = new Object();
      vector0.add(object0);
      resultMatrixHTML0.m_HeaderKeys = vector0;
      resultMatrixHTML0.listOptions();
      resultMatrixHTML0.getDefaultShowAverage();
      resultMatrixHTML0.getDefaultMeanWidth();
      resultMatrixHTML0.getColHidden((-1010));
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.clearHeader();
      resultMatrixLatex0.toStringKey();
      int[] intArray0 = new int[2];
      intArray0[0] = 3463;
      resultMatrixLatex0.m_RankingWins = intArray0;
      UnaryOperator<Object> unaryOperator0 = UnaryOperator.identity();
      vector0.replaceAll(unaryOperator0);
      assertEquals(1, vector0.size());
      
      resultMatrixLatex0.TIE_STRING = "v";
      resultMatrixLatex0.setCountWidth(0);
      boolean[] booleanArray0 = new boolean[7];
      booleanArray0[0] = false;
      booleanArray0[1] = true;
      booleanArray0[2] = false;
      booleanArray0[3] = false;
      booleanArray0[4] = true;
      booleanArray0[5] = false;
      booleanArray0[6] = true;
      resultMatrixLatex0.globalInfo();
      resultMatrixLatex0.getColName((-657));
      String string0 = resultMatrixLatex0.padString(")", 0, false);
      assertEquals(")", string0);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=3.3068849378916276
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDefaultRemoveFilterName();
      resultMatrixCSV0.getDefaultRemoveFilterName();
      int int0 = (-1521);
      resultMatrixCSV0.getRowName((-1521));
      int int1 = (-331);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getOptions();
      int int2 = ResultMatrix.SIGNIFICANCE_TIE;
      resultMatrixHTML0.clearHeader();
      int int3 = 2;
      ResultMatrixPlainText resultMatrixPlainText0 = null;
      try {
        resultMatrixPlainText0 = new ResultMatrixPlainText((-1521), 2);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.9913616173293627
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 0);
      resultMatrixCSV0.m_ColNameWidth = 2;
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixCSV0);
      double[][] doubleArray0 = new double[8][6];
      double[] doubleArray1 = new double[5];
      doubleArray1[0] = (double) 0;
      doubleArray1[1] = (double) 2;
      doubleArray1[2] = (double) 2;
      doubleArray1[3] = (double) 2;
      doubleArray1[4] = (double) 2;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[8];
      doubleArray2[0] = (double) 1;
      doubleArray2[1] = (double) 1;
      doubleArray2[2] = 192.666147959343;
      doubleArray2[3] = (double) 0;
      doubleArray2[4] = (double) 2;
      doubleArray2[5] = (double) 2;
      doubleArray2[6] = (double) 2;
      doubleArray2[7] = (double) 2;
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[2];
      doubleArray3[0] = (double) 1;
      doubleArray3[1] = 2302.4901514;
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[7];
      doubleArray4[0] = (-3277.353898415);
      doubleArray4[1] = (double) 2;
      doubleArray4[2] = (double) 0;
      doubleArray4[3] = (double) 1;
      doubleArray4[4] = (double) 0;
      doubleArray4[5] = (double) 0;
      doubleArray4[6] = (double) 2;
      doubleArray0[3] = doubleArray4;
      double[] doubleArray5 = new double[0];
      doubleArray0[4] = doubleArray5;
      double[] doubleArray6 = new double[5];
      doubleArray6[0] = (double) 1;
      doubleArray6[1] = (double) 2;
      doubleArray6[2] = (-3277.353898415);
      doubleArray6[3] = 2302.4901514;
      doubleArray6[4] = (-4482.85);
      doubleArray0[5] = doubleArray6;
      double[] doubleArray7 = new double[4];
      doubleArray7[0] = (-4482.85);
      doubleArray7[1] = (double) 0;
      doubleArray7[2] = (double) 2;
      doubleArray7[3] = 192.666147959343;
      doubleArray0[6] = doubleArray7;
      double[] doubleArray8 = new double[3];
      doubleArray8[0] = 2302.4901514;
      doubleArray8[1] = 2302.4901514;
      doubleArray8[2] = (double) 1;
      doubleArray0[7] = doubleArray8;
      resultMatrixCSV0.m_Mean = doubleArray0;
      resultMatrixCSV0.WIN_STRING = "4B~PH|~s#<Z";
      resultMatrixCSV1.m_SignificanceWidth = (-795);
      resultMatrixCSV1.toStringSummary();
      resultMatrixCSV1.padString("", 0);
      resultMatrixCSV0.m_PrintRowNames = false;
      resultMatrixCSV0.getDefaultPrintColNames();
      resultMatrixCSV0.setSignificanceWidth(0);
      resultMatrixCSV1.addHeader("[", "\n1. complete\n");
      resultMatrixCSV0.getDefaultRowNameWidth();
      // Undeclared exception!
      try { 
        resultMatrixCSV1.assign(resultMatrixCSV0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=3.017639781928488
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      int int0 = 0;
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixCSV0);
      resultMatrixPlainText0.padString("-show-stddev", 2);
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.toArray();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=3.337747568065136
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.padString("\"T<*#MdOeQ&<r", 0);
      resultMatrixPlainText0.toArray();
      resultMatrixPlainText0.setRowHidden((-3676), false);
      resultMatrixPlainText0.setColNameWidth(0);
      resultMatrixPlainText0.setMeanWidth(714);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 1);
      resultMatrixLatex0.setEnumerateColNames(true);
      resultMatrixLatex0.getDefaultPrintColNames();
      int[] intArray0 = new int[7];
      intArray0[0] = 0;
      intArray0[1] = 1;
      intArray0[2] = 0;
      intArray0[3] = 1;
      intArray0[4] = 2;
      intArray0[5] = 0;
      intArray0[6] = 1;
      resultMatrixPlainText0.setRowOrder(intArray0);
      resultMatrixPlainText0.setCountWidth(2);
      resultMatrixLatex0.clearSummary();
      resultMatrixPlainText0.getEnumerateRowNames();
      assertEquals(714, resultMatrixPlainText0.getMeanWidth());
      
      resultMatrixLatex0.getMean(2942, 2942);
      resultMatrixLatex0.getColName(2483);
      String string0 = resultMatrixLatex0.padString("*", 435, true);
      assertEquals("                                                                                                                                                                                                                                                                                                                                                                                                                                                  *", string0);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.965984268590563
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      boolean boolean0 = resultMatrixGnuPlot0.getDefaultRemoveFilterName();
      resultMatrixGnuPlot0.setPrintColNames(false);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      resultMatrixHTML0.m_RowNameWidth = 0;
      resultMatrixHTML0.getRevision();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixGnuPlot0);
      resultMatrixLatex0.setRemoveFilterName(true);
      resultMatrixLatex0.clearHeader();
      resultMatrixLatex0.globalInfo();
      resultMatrixLatex0.assign(resultMatrixHTML0);
      resultMatrixGnuPlot0.getRowHidden(0);
      resultMatrixHTML0.addHeader("", "fTQ\\");
      resultMatrixLatex0.padString("Q", 2);
      boolean[] booleanArray0 = new boolean[9];
      booleanArray0[0] = false;
      booleanArray0[1] = true;
      booleanArray0[2] = true;
      booleanArray0[3] = false;
      booleanArray0[4] = true;
      booleanArray0[5] = false;
      double[][] doubleArray0 = new double[9][1];
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = (double) 0;
      doubleArray1[1] = (double) 2;
      doubleArray1[2] = (double) 2;
      doubleArray1[3] = (double) 0;
      doubleArray1[4] = (double) 0;
      doubleArray1[5] = (double) 2;
      doubleArray1[6] = (-3931.2939962);
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[1];
      doubleArray2[0] = (double) 1;
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[1];
      doubleArray3[0] = (double) 1;
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[5];
      doubleArray4[0] = 814.257;
      doubleArray4[1] = (double) 1;
      doubleArray4[2] = (-3931.2939962);
      doubleArray4[3] = (double) 1;
      doubleArray4[4] = (double) 0;
      doubleArray0[3] = doubleArray4;
      double[] doubleArray5 = new double[2];
      doubleArray5[0] = (double) 1;
      doubleArray5[1] = (double) 0;
      doubleArray0[4] = doubleArray5;
      double[] doubleArray6 = new double[4];
      doubleArray6[0] = (-3931.2939962);
      doubleArray6[1] = (double) 0;
      doubleArray6[2] = 2069.4;
      doubleArray6[3] = (double) 0;
      doubleArray0[5] = doubleArray6;
      double[] doubleArray7 = new double[3];
      doubleArray7[0] = (double) 1;
      doubleArray7[1] = 814.257;
      doubleArray7[2] = (double) 0;
      doubleArray0[6] = doubleArray7;
      double[] doubleArray8 = new double[5];
      doubleArray8[0] = 2069.4;
      doubleArray8[1] = (double) 0;
      doubleArray8[2] = (double) 1;
      doubleArray8[3] = (double) 1;
      doubleArray8[4] = (double) 0;
      doubleArray0[7] = doubleArray8;
      double[] doubleArray9 = new double[9];
      doubleArray9[0] = (-1.0);
      doubleArray9[1] = (double) 2;
      doubleArray9[2] = (double) 0;
      doubleArray9[3] = (double) 2;
      doubleArray9[4] = (double) 2;
      doubleArray9[5] = (-2370.0);
      doubleArray9[6] = (double) 0;
      doubleArray9[7] = (double) 3;
      doubleArray9[8] = (double) 3;
      doubleArray0[8] = doubleArray9;
      resultMatrixLatex0.m_StdDev = doubleArray0;
      booleanArray0[6] = true;
      booleanArray0[7] = false;
      booleanArray0[8] = false;
      resultMatrixLatex0.m_ColHidden = booleanArray0;
      resultMatrixLatex0.setStdDevPrec(3);
      resultMatrixLatex0.getStdDevPrec();
      resultMatrixHTML0.getColHidden(2);
      boolean boolean1 = resultMatrixHTML0.getDefaultPrintColNames();
      assertFalse(resultMatrixGnuPlot0.getPrintColNames());
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 71
  /*Coverage entropy=3.0844651844585504
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.toStringKey();
      int int0 = 1542;
      resultMatrixCSV0.getSummaryTitle(1542);
      resultMatrixCSV0.toStringKey();
      resultMatrixCSV0.setMean(1542, 1542, 1498.09191231);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      boolean boolean0 = true;
      resultMatrixLatex0.clearSummary();
      resultMatrixLatex0.setRemoveFilterName(true);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "i";
      stringArray0[1] = "Key,\n[1],col0\n";
      stringArray0[2] = "q/00P-pK";
      stringArray0[3] = "ka\"%M'u$|XqK>XFu";
      stringArray0[4] = "*";
      resultMatrixLatex0.m_ColNames = stringArray0;
      // Undeclared exception!
      try { 
        resultMatrixLatex0.toStringMatrix();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=3.5398187675822066
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 0);
      resultMatrixPlainText0.WIN_STRING = null;
      int[] intArray0 = new int[2];
      resultMatrixPlainText0.toStringRanking();
      intArray0[0] = 0;
      intArray0[1] = 3;
      resultMatrixPlainText0.m_ColOrder = intArray0;
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixPlainText0);
      resultMatrixHTML0.m_StdDevWidth = 0;
      resultMatrixHTML0.setEnumerateColNames(true);
      resultMatrixPlainText0.enumerateRowNamesTipText();
      resultMatrixPlainText0.getColHidden(1281);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 2);
      resultMatrixCSV0.getDefaultRowNameWidth();
      resultMatrixPlainText0.getRevision();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "[";
      stringArray0[1] = ")";
      stringArray0[2] = "v";
      stringArray0[3] = "[";
      stringArray0[4] = "*";
      stringArray0[5] = ")";
      stringArray0[6] = " ";
      stringArray0[7] = "]";
      stringArray0[8] = "*";
      ResultMatrixHTML.main(stringArray0);
      assertEquals(9, stringArray0.length);
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.9848697993327096
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 0);
      double[][] doubleArray0 = new double[8][0];
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = (double) 2;
      doubleArray1[1] = (double) 1;
      doubleArray1[2] = (double) 0;
      doubleArray1[3] = (-2281.19398);
      doubleArray1[4] = (double) 0;
      doubleArray1[5] = (double) 0;
      doubleArray1[6] = (double) 0;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[6];
      doubleArray2[0] = (double) 0;
      doubleArray2[1] = (double) 0;
      doubleArray2[2] = (double) 0;
      doubleArray2[3] = (double) 0;
      doubleArray2[4] = (double) 1;
      doubleArray2[5] = (double) 0;
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[5];
      doubleArray3[0] = (double) 1;
      doubleArray3[1] = (double) 0;
      doubleArray3[2] = (double) 1;
      doubleArray3[3] = (-302.223472097248);
      doubleArray3[4] = (double) 1;
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[0];
      doubleArray0[3] = doubleArray4;
      double[] doubleArray5 = new double[2];
      doubleArray5[0] = (-302.223472097248);
      doubleArray5[1] = (double) 2;
      doubleArray0[4] = doubleArray5;
      double[] doubleArray6 = new double[9];
      doubleArray6[0] = (double) 1;
      doubleArray6[1] = (-302.223472097248);
      doubleArray6[2] = (double) 0;
      doubleArray6[3] = (double) 2;
      doubleArray6[4] = (double) 0;
      doubleArray6[5] = (-301.7559543668796);
      doubleArray6[6] = (double) 1;
      doubleArray6[7] = (-302.223472097248);
      doubleArray6[8] = (double) 2;
      doubleArray0[5] = doubleArray6;
      double[] doubleArray7 = new double[8];
      doubleArray7[0] = (-301.7559543668796);
      doubleArray7[1] = 1961.45;
      doubleArray7[2] = 0.0;
      doubleArray7[3] = (double) 2;
      doubleArray7[4] = (double) 2;
      doubleArray7[5] = (double) 0;
      doubleArray7[6] = 0.0;
      doubleArray7[7] = (-302.223472097248);
      doubleArray0[6] = doubleArray7;
      double[] doubleArray8 = new double[5];
      doubleArray8[0] = 0.0;
      doubleArray8[1] = (double) 2;
      doubleArray8[2] = (double) 1;
      doubleArray8[3] = (double) 0;
      doubleArray8[4] = (double) 0;
      doubleArray0[7] = doubleArray8;
      resultMatrixHTML0.m_StdDev = doubleArray0;
      resultMatrixHTML0.setSize(97, 0);
      resultMatrixHTML0.getColName(0);
      resultMatrixHTML0.clearRanking();
      assertEquals(97, resultMatrixHTML0.getVisibleColCount());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=3.290076778045551
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.globalInfo();
      resultMatrixLatex0.setRowNameWidth(258);
      resultMatrixLatex0.setSignificanceWidth(3);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.toStringRanking();
      resultMatrixLatex0.toStringMatrix();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      int[] intArray0 = new int[7];
      intArray0[0] = 1;
      intArray0[1] = 2;
      intArray0[2] = 0;
      intArray0[3] = 0;
      intArray0[4] = 1;
      intArray0[5] = 2;
      intArray0[6] = 3;
      resultMatrixPlainText0.m_RankingDiff = intArray0;
      resultMatrixPlainText0.globalInfo();
      resultMatrixPlainText0.getDisplayName();
      assertEquals(258, resultMatrixLatex0.getRowNameWidth());
      assertFalse(resultMatrixLatex0.getShowStdDev());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=3.1238415154939942
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(50, 50);
      resultMatrixLatex0.toStringKey();
      resultMatrixLatex0.meanPrecTipText();
      resultMatrixLatex0.getRemoveFilterName();
      resultMatrixLatex0.WIN_STRING = "Ic";
      resultMatrixLatex0.setStdDev((-4327), 117, 117);
      resultMatrixLatex0.getDefaultCountWidth();
      resultMatrixLatex0.setStdDevWidth((-4327));
      resultMatrixLatex0.getRowHidden((-4327));
      resultMatrixLatex0.setSignificanceWidth(117);
      assertEquals(117, resultMatrixLatex0.getSignificanceWidth());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=3.3274061159714567
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDefaultRemoveFilterName();
      resultMatrixCSV0.getDefaultRemoveFilterName();
      resultMatrixCSV0.getRowName((-1521));
      resultMatrixCSV0.setShowStdDev(false);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      resultMatrixLatex0.m_CountWidth = 1;
      assertEquals(25, resultMatrixLatex0.getRowNameWidth());
      
      resultMatrixLatex0.clear();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2, 1557);
      String[] stringArray0 = new String[4];
      stringArray0[0] = " ";
      stringArray0[1] = " ";
      stringArray0[2] = "$\bullet$";
      stringArray0[3] = "[";
      resultMatrixGnuPlot0.setOptions(stringArray0);
      resultMatrixCSV0.getCount((-1521));
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixLatex0.isAverage(13);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      resultMatrixLatex1.getDefaultSignificanceWidth();
      resultMatrixHTML0.getStdDev(2, 0);
      assertEquals(1, resultMatrixHTML0.getRowCount());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=3.376546304142592
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setColNameWidth(0);
      resultMatrixGnuPlot0.m_PrintColNames = false;
      boolean[] booleanArray0 = new boolean[3];
      resultMatrixGnuPlot0.setEnumerateColNames(true);
      booleanArray0[0] = true;
      booleanArray0[1] = false;
      resultMatrixGnuPlot0.m_PrintRowNames = false;
      booleanArray0[2] = false;
      resultMatrixGnuPlot0.m_RowHidden = booleanArray0;
      resultMatrixGnuPlot0.m_ColNameWidth = 1;
      resultMatrixGnuPlot0.getDefaultEnumerateColNames();
      resultMatrixGnuPlot0.getDefaultEnumerateColNames();
      resultMatrixGnuPlot0.getDefaultColNameWidth();
      resultMatrixGnuPlot0.getDefaultColNameWidth();
      resultMatrixGnuPlot0.getColNameWidth();
      resultMatrixGnuPlot0.showStdDevTipText();
      assertEquals(1, resultMatrixGnuPlot0.getColNameWidth());
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setStdDevPrec(2);
      resultMatrixCSV0.m_MeanWidth = 1;
      resultMatrixCSV0.padString("L::)2AYSF OBb%", 1567, true);
      resultMatrixCSV0.setEnumerateRowNames(false);
      resultMatrixCSV0.toStringSummary();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.toString();
      resultMatrixLatex0.getDisplayName();
      resultMatrixCSV0.removeFilterNameTipText();
      resultMatrixLatex0.getCountWidth();
      resultMatrixCSV0.getEnumerateColNames();
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=3.1399967357792766
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.countWidthTipText();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.TIE_STRING = "";
      resultMatrixGnuPlot0.setPrintColNames(false);
      resultMatrixGnuPlot0.m_PrintRowNames = false;
      resultMatrixGnuPlot0.WIN_STRING = " ";
      resultMatrixGnuPlot0.TIE_STRING = "";
      resultMatrixGnuPlot0.getDefaultEnumerateColNames();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getDefaultPrintColNames();
      assertEquals(1, resultMatrixLatex0.getRowCount());
      
      String string0 = resultMatrixGnuPlot0.toStringKey();
      assertEquals("Key:\n1 col0\n", string0);
      
      resultMatrixCSV0.clear();
      resultMatrixGnuPlot0.getRevision();
      resultMatrixGnuPlot0.toStringSummary();
      boolean boolean0 = resultMatrixGnuPlot0.isMean(1976);
      assertTrue(boolean0);
      
      resultMatrixCSV0.setRowName((-1261), "-");
      resultMatrixLatex0.headerKeys();
      resultMatrixGnuPlot0.isAverage(6);
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultStdDevPrec());
      assertFalse(resultMatrixGnuPlot0.getShowStdDev());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.7284075400342926
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setPrintColNames(false);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      int[][] intArray0 = new int[4][5];
      int[] intArray1 = new int[5];
      intArray1[0] = 2;
      intArray1[1] = 0;
      intArray1[2] = 1;
      intArray1[3] = 1;
      intArray1[4] = 2;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[5];
      intArray2[0] = 0;
      intArray2[1] = 2;
      intArray2[2] = 1;
      intArray2[3] = 2;
      intArray2[4] = 2;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[8];
      intArray3[0] = 0;
      intArray3[1] = 1;
      intArray3[2] = 2;
      intArray3[3] = 0;
      intArray3[4] = 0;
      intArray3[5] = 2;
      intArray3[6] = 2;
      intArray3[7] = 2;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[8];
      intArray4[0] = 2;
      intArray4[1] = 2;
      intArray4[2] = 2;
      intArray4[3] = 1;
      intArray4[4] = 1;
      intArray4[5] = 0;
      intArray4[6] = (-692);
      intArray4[7] = 1;
      intArray0[3] = intArray4;
      resultMatrixCSV0.m_NonSigWins = intArray0;
      resultMatrixCSV0.listOptions();
      assertEquals(0, resultMatrixCSV0.getRowNameWidth());
      
      resultMatrixCSV0.clear();
      assertEquals(1, resultMatrixLatex0.getColCount());
  }
}
