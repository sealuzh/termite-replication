/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 02:46:08 GMT 2019
 */

package weka.experiment;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import java.util.Vector;
import java.util.function.UnaryOperator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import weka.experiment.ResultMatrix;
import weka.experiment.ResultMatrixCSV;
import weka.experiment.ResultMatrixGnuPlot;
import weka.experiment.ResultMatrixHTML;
import weka.experiment.ResultMatrixLatex;
import weka.experiment.ResultMatrixPlainText;
import weka.experiment.ResultMatrixSignificance;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ResultMatrix_ESTest extends ResultMatrix_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.910959247795601
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      resultMatrixLatex1.toString();
      int[] intArray0 = new int[5];
      intArray0[0] = 2;
      resultMatrixLatex0.m_MeanPrec = 2988;
      intArray0[1] = 2;
      resultMatrixLatex0.LOSS_STRING = "\begin{table}[thb]\ncaption{label{labelname}Table Caption}\n\footnotesize\n{centering \begin{tabular}{lr}\n\\\nhline\nDataset & (1)\\\nhline\nrow0 &    \\\nhline\nmulticolumn{2}{c}{$circ$, $\bullet$ statistically significant improvement or degradation}\\\nend{tabular} \footnotesize par}\nend{table}\n";
      intArray0[2] = 2;
      intArray0[3] = 2;
      intArray0[4] = 0;
      resultMatrixLatex1.setColOrder(intArray0);
      resultMatrixLatex1.colNameWidthTipText();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getSummaryTitle(0);
      resultMatrixGnuPlot0.setShowStdDev(true);
      resultMatrixGnuPlot0.toString();
      resultMatrixGnuPlot0.toStringSummary();
      resultMatrixGnuPlot0.doubleToString(2709.904085431824, 0);
      resultMatrixGnuPlot0.getRevision();
      resultMatrixLatex1.getRowName(2988);
      resultMatrixLatex0.setCount(1, 0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex1);
      resultMatrixHTML0.toString();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(2, 34);
      resultMatrixCSV0.globalInfo();
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.337588728123289
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "(";
      stringArray0[1] = "(";
      stringArray0[2] = " ";
      resultMatrixLatex0.setMeanPrec(0);
      stringArray0[4] = "(";
      stringArray0[5] = "$\bullet$";
      stringArray0[6] = ")";
      stringArray0[7] = "$circ$";
      try { 
        resultMatrixLatex0.setOptions(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=4.098251068183135
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.stdDevWidthTipText();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "(";
      stringArray0[1] = "(";
      stringArray0[2] = " ";
      resultMatrixLatex0.setMeanPrec(0);
      stringArray0[3] = "$circ$";
      stringArray0[4] = "(";
      stringArray0[5] = "$\bullet$";
      stringArray0[6] = ")";
      stringArray0[7] = "$circ$";
      resultMatrixLatex0.setOptions(stringArray0);
      resultMatrixLatex0.clearSummary();
      ResultMatrixLatex.main(stringArray0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixLatex0.assign(resultMatrixGnuPlot0);
      resultMatrixGnuPlot0.getRowHidden((-469));
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setSize(0, 0);
      resultMatrixHTML0.getColName(247);
      resultMatrixHTML0.clearRanking();
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.330314704247706
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getDefaultRemoveFilterName();
      resultMatrixGnuPlot0.setPrintColNames(false);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixGnuPlot0);
      resultMatrixLatex0.setRemoveFilterName(true);
      resultMatrixLatex0.globalInfo();
      resultMatrixLatex0.getCount(2);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      ResultMatrixLatex resultMatrixLatex2 = new ResultMatrixLatex();
      ResultMatrixLatex resultMatrixLatex3 = new ResultMatrixLatex();
      resultMatrixLatex2.assign(resultMatrixLatex3);
      resultMatrixLatex2.getDefaultSignificanceWidth();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      resultMatrixCSV0.toStringRanking();
      resultMatrixCSV0.toStringRanking();
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.858257689946044
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.globalInfo();
      resultMatrixLatex0.setRowNameWidth(258);
      resultMatrixLatex0.setSignificanceWidth(3);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixLatex0.getDisplayName();
      resultMatrixLatex0.toStringMatrix();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      int[] intArray0 = new int[7];
      intArray0[0] = 1;
      intArray0[1] = 2;
      intArray0[2] = 0;
      intArray0[3] = 0;
      intArray0[4] = 1;
      intArray0[5] = 2;
      intArray0[6] = 3;
      resultMatrixPlainText0.m_RankingDiff = intArray0;
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[][] intArray1 = new int[9][7];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      intArray1[4] = resultMatrixPlainText0.m_RankingDiff;
      intArray1[5] = intArray0;
      intArray1[6] = intArray0;
      intArray1[7] = resultMatrixPlainText0.m_RankingDiff;
      intArray1[8] = intArray0;
      resultMatrixHTML0.setSummary(intArray1, intArray1);
      Integer integer0 = new Integer(1);
      Vector<Integer> vector0 = new Vector<Integer>();
      vector0.add((Integer) 0);
      resultMatrixCSV0.getDisplayName();
      resultMatrixCSV0.setStdDev(0, 123, 1);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.7125228003106496
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.toStringRanking();
      double[] doubleArray0 = new double[5];
      resultMatrixCSV0.toString();
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 1;
      doubleArray0[2] = (double) 1;
      doubleArray0[3] = (double) 1;
      doubleArray0[4] = (-5454.962837);
      resultMatrixCSV0.m_Counts = doubleArray0;
      resultMatrixCSV0.getPrintColNames();
      int[][] intArray0 = new int[0][2];
      resultMatrixCSV0.m_NonSigWins = intArray0;
      resultMatrixCSV0.toStringSummary();
      resultMatrixCSV0.getDefaultEnumerateRowNames();
      resultMatrixCSV0.toStringKey();
      resultMatrixCSV0.printRowNamesTipText();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setStdDevPrec(45);
      resultMatrixLatex0.getStdDevPrec();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 1551);
      resultMatrixHTML0.getColHidden(0);
      resultMatrixHTML0.getDefaultPrintColNames();
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.8566532788193615
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.padString("\"T<*#MdOeQ&<r", 0);
      resultMatrixPlainText0.toArray();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      resultMatrixCSV0.getPrintColNames();
      resultMatrixCSV0.toStringSummary();
      resultMatrixCSV0.getDefaultEnumerateRowNames();
      resultMatrixCSV0.toStringKey();
      resultMatrixCSV0.printRowNamesTipText();
      resultMatrixCSV0.getDisplayCol(0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      resultMatrixCSV1.toString();
      resultMatrixCSV1.getCount((-503));
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getDefaultPrintColNames();
      resultMatrixHTML0.listOptions();
      resultMatrixHTML0.getDisplayRow(1923);
      resultMatrixCSV0.trimString("Indices from stable sort (doubles): ", (-1520));
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      // Undeclared exception!
      try { 
        resultMatrixLatex0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.436052374805664
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.m_StdDevPrec = 0;
      resultMatrixSignificance0.m_ShowStdDev = true;
      resultMatrixSignificance0.doubleToString((-2541.9081796), 0);
      resultMatrixSignificance0.m_EnumerateRowNames = true;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixSignificance0);
      resultMatrixGnuPlot0.assign(resultMatrixSignificance0);
      Vector<String> vector0 = new Vector<String>();
      vector0.setSize(1);
      resultMatrixGnuPlot0.m_HeaderValues = vector0;
      vector0.removeAll(resultMatrixGnuPlot0.m_HeaderValues);
      resultMatrixGnuPlot0.getRevision();
      resultMatrixGnuPlot0.getMeanWidth();
      vector0.add("]");
      resultMatrixGnuPlot0.m_PrintRowNames = true;
      resultMatrixSignificance0.setSignificanceWidth(1687);
      resultMatrixGnuPlot0.getRevision();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = 0.0;
      resultMatrixPlainText0.setEnumerateRowNames(true);
      doubleArray0[1] = (double) 2;
      resultMatrixPlainText0.m_Counts = doubleArray0;
      vector0.parallelStream();
      resultMatrixPlainText0.globalInfo();
      resultMatrixGnuPlot0.getDefaultMeanPrec();
      int[] intArray0 = new int[0];
      resultMatrixGnuPlot0.setColOrder(intArray0);
      assertEquals(1687, resultMatrixSignificance0.getSignificanceWidth());
      
      resultMatrixPlainText0.setRowHidden(217, true);
      assertEquals(2, resultMatrixPlainText0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.8148035840980556
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.globalInfo();
      resultMatrixLatex0.setRowNameWidth(258);
      resultMatrixLatex0.setSignificanceWidth(3);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixLatex0.getDisplayName();
      resultMatrixLatex0.toStringMatrix();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      int[] intArray0 = new int[7];
      intArray0[0] = 1;
      intArray0[1] = 2;
      intArray0[2] = 0;
      intArray0[3] = 0;
      intArray0[4] = 1;
      intArray0[5] = 2;
      intArray0[6] = 3;
      resultMatrixPlainText0.m_RankingDiff = intArray0;
      resultMatrixLatex0.getColName(0);
      resultMatrixLatex0.padString("W.hOk", (-419), false);
      assertEquals(258, resultMatrixLatex0.getRowNameWidth());
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.toStringKey();
      resultMatrixHTML0.setColName(2, "[");
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.2713119171645784
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDefaultRemoveFilterName();
      resultMatrixCSV0.getDefaultRemoveFilterName();
      resultMatrixCSV0.getRowName((-1521));
      resultMatrixCSV0.setShowStdDev(false);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      resultMatrixLatex0.m_CountWidth = 1;
      resultMatrixLatex0.clear();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2, 1557);
      UnaryOperator<Object> unaryOperator0 = UnaryOperator.identity();
      Vector<Object> vector0 = new Vector<Object>();
      vector0.replaceAll(unaryOperator0);
      int int0 = (-1569);
      resultMatrixLatex0.setCountWidth((-1569));
      resultMatrixLatex0.globalInfo();
      ResultMatrixLatex resultMatrixLatex1 = null;
      try {
        resultMatrixLatex1 = new ResultMatrixLatex(26, (-657));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.2296037791383503
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDefaultRemoveFilterName();
      resultMatrixCSV0.getDefaultRemoveFilterName();
      Vector<Integer> vector0 = new Vector<Integer>();
      resultMatrixCSV0.setStdDevWidth(247);
      vector0.addElement((Integer) 2);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(254, 255);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.337907707389637
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setColNameWidth(0);
      resultMatrixGnuPlot0.m_PrintColNames = false;
      boolean[] booleanArray0 = new boolean[3];
      resultMatrixGnuPlot0.setEnumerateColNames(true);
      booleanArray0[0] = true;
      booleanArray0[1] = false;
      resultMatrixGnuPlot0.m_PrintRowNames = false;
      booleanArray0[2] = false;
      resultMatrixGnuPlot0.m_RowHidden = booleanArray0;
      resultMatrixGnuPlot0.m_ColNameWidth = 1;
      resultMatrixGnuPlot0.getDefaultEnumerateColNames();
      resultMatrixGnuPlot0.getDefaultEnumerateColNames();
      resultMatrixGnuPlot0.getDefaultColNameWidth();
      resultMatrixGnuPlot0.getDefaultColNameWidth();
      resultMatrixGnuPlot0.getColNameWidth();
      resultMatrixGnuPlot0.showStdDevTipText();
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.setSize(50, (-721));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.2887062889563237
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDefaultRemoveFilterName();
      int int0 = 0;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.doubleToString(0.0, (-1851));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.4941933940548084
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      int int0 = 0;
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 0);
      double[][] doubleArray0 = new double[0][9];
      resultMatrixCSV0.clearSummary();
      resultMatrixCSV0.m_StdDev = doubleArray0;
      resultMatrixCSV0.setSignificanceWidth(0);
      resultMatrixCSV0.setShowStdDev(false);
      // Undeclared exception!
      try { 
        resultMatrixCSV0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.979323320026027
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.globalInfo();
      resultMatrixLatex0.setRowNameWidth(258);
      resultMatrixLatex0.setSignificanceWidth(3);
      int[] intArray0 = new int[3];
      intArray0[0] = 258;
      intArray0[1] = 2;
      intArray0[2] = 2;
      resultMatrixLatex0.setColOrder(intArray0);
      resultMatrixLatex0.colNameWidthTipText();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setShowStdDev(false);
      resultMatrixGnuPlot0.toString();
      resultMatrixGnuPlot0.toStringSummary();
      resultMatrixGnuPlot0.doubleToString(0, 258);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot1.getRevision();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "$\bullet$";
      stringArray0[1] = "0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
      ResultMatrixCSV.main(stringArray0);
      resultMatrixGnuPlot0.getShowAverage();
      ResultMatrixGnuPlot resultMatrixGnuPlot2 = new ResultMatrixGnuPlot(resultMatrixLatex0);
      resultMatrixGnuPlot2.getDefaultEnumerateRowNames();
      // Undeclared exception!
      try { 
        resultMatrixLatex0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.9626736896569135
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      resultMatrixLatex1.toString();
      int[] intArray0 = new int[5];
      intArray0[0] = 2;
      resultMatrixLatex0.m_MeanPrec = 2988;
      intArray0[1] = 2;
      resultMatrixLatex0.LOSS_STRING = "\begin{table}[thb]\ncaption{label{labelname}Table Caption}\n\footnotesize\n{centering \begin{tabular}{lr}\n\\\nhline\nDataset & (1)\\\nhline\nrow0 &    \\\nhline\nmulticolumn{2}{c}{$circ$, $\bullet$ statistically significant improvement or degradation}\\\nend{tabular} \footnotesize par}\nend{table}\n";
      intArray0[2] = 2;
      intArray0[3] = 2;
      intArray0[4] = 0;
      resultMatrixLatex1.setColOrder(intArray0);
      resultMatrixLatex1.colNameWidthTipText();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setShowStdDev(true);
      resultMatrixGnuPlot0.toString();
      resultMatrixGnuPlot0.toStringSummary();
      resultMatrixGnuPlot0.doubleToString(2709.904085431824, 0);
      resultMatrixGnuPlot0.getRevision();
      String[] stringArray0 = new String[1];
      stringArray0[0] = ",b$q|kLk-pU;";
      ResultMatrixCSV.main(stringArray0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      resultMatrixSignificance0.getDefaultPrintColNames();
      ResultMatrixCSV resultMatrixCSV0 = null;
      try {
        resultMatrixCSV0 = new ResultMatrixCSV((ResultMatrix) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.207428415652328
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getDisplayName();
      int int0 = 0;
      resultMatrixHTML0.getColHidden(0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      Vector<Integer> vector0 = new Vector<Integer>();
      resultMatrixCSV0.setStdDevWidth((-711));
      vector0.addElement((Integer) 0);
      resultMatrixCSV0.m_StdDevWidth = 2;
      int[][] intArray0 = new int[4][5];
      int[] intArray1 = new int[7];
      intArray1[0] = 1;
      intArray1[1] = 1;
      intArray1[2] = 2;
      intArray1[3] = 1;
      intArray1[4] = 1;
      intArray1[5] = 2;
      intArray1[6] = (-711);
      intArray0[0] = intArray1;
      int[] intArray2 = new int[4];
      intArray2[0] = 0;
      intArray2[1] = 2;
      intArray2[2] = 0;
      intArray2[3] = 0;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[3];
      intArray3[0] = 1;
      intArray3[1] = 2;
      intArray3[2] = 1;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[6];
      intArray4[0] = 2;
      intArray4[1] = 1;
      intArray4[2] = 1;
      intArray4[3] = 1;
      intArray4[4] = 1;
      intArray4[5] = 1;
      intArray0[3] = intArray4;
      // Undeclared exception!
      try { 
        resultMatrixHTML0.setSummary(intArray0, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.2842228217416776
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      boolean boolean0 = true;
      resultMatrixHTML0.setPrintRowNames(true);
      resultMatrixHTML0.m_ShowStdDev = true;
      // Undeclared exception!
      try { 
        resultMatrixHTML0.getHeader("MNRF?]0mN@");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.8075673410244977
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      int int0 = 0;
      resultMatrixPlainText0.m_CountWidth = 0;
      resultMatrixPlainText0.m_Counts = null;
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.4856144908925812
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 0);
      resultMatrixCSV0.m_ColNameWidth = 2;
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixCSV0);
      double[][] doubleArray0 = new double[8][6];
      double[] doubleArray1 = new double[5];
      doubleArray1[0] = (double) 0;
      doubleArray1[1] = (double) 2;
      doubleArray1[2] = (double) 2;
      doubleArray1[3] = (double) 2;
      doubleArray1[4] = (double) 2;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[8];
      doubleArray2[0] = (double) 1;
      doubleArray2[1] = (double) 1;
      doubleArray2[2] = 192.666147959343;
      doubleArray2[3] = (double) 0;
      doubleArray2[4] = (double) 2;
      doubleArray2[5] = (double) 2;
      doubleArray2[6] = (double) 2;
      doubleArray2[7] = (double) 2;
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[2];
      doubleArray3[0] = (double) 1;
      doubleArray3[1] = 2302.4901514;
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[7];
      doubleArray4[0] = (-3277.353898415);
      doubleArray4[1] = (double) 2;
      doubleArray4[2] = (double) 0;
      doubleArray4[3] = (double) 1;
      doubleArray4[4] = (double) 0;
      doubleArray4[5] = (double) 0;
      doubleArray4[6] = (double) 2;
      doubleArray0[3] = doubleArray4;
      double[] doubleArray5 = new double[0];
      doubleArray0[4] = doubleArray5;
      double[] doubleArray6 = new double[5];
      doubleArray6[0] = (double) 1;
      doubleArray6[1] = (double) 2;
      doubleArray6[2] = (-3277.353898415);
      doubleArray6[3] = 2302.4901514;
      doubleArray6[4] = (-4482.85);
      doubleArray0[5] = doubleArray6;
      double[] doubleArray7 = new double[4];
      doubleArray7[0] = (-4482.85);
      doubleArray7[1] = (double) 0;
      doubleArray7[2] = (double) 2;
      doubleArray7[3] = 192.666147959343;
      doubleArray0[6] = doubleArray7;
      double[] doubleArray8 = new double[3];
      doubleArray8[0] = 2302.4901514;
      doubleArray8[1] = 2302.4901514;
      doubleArray8[2] = (double) 1;
      doubleArray0[7] = doubleArray8;
      resultMatrixCSV0.m_Mean = doubleArray0;
      resultMatrixCSV0.WIN_STRING = "4B~PH|~s#<Z";
      resultMatrixCSV1.m_SignificanceWidth = (-795);
      resultMatrixCSV1.toStringSummary();
      resultMatrixCSV1.padString("", 0);
      resultMatrixCSV0.m_PrintRowNames = false;
      resultMatrixCSV0.getDefaultPrintColNames();
      resultMatrixCSV0.setSignificanceWidth(0);
      resultMatrixCSV1.addHeader("[", "\n1. complete\n");
      resultMatrixCSV0.getDefaultRowNameWidth();
      // Undeclared exception!
      try { 
        resultMatrixCSV1.assign(resultMatrixCSV0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.1699021172713064
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int int0 = resultMatrixGnuPlot0.getDefaultStdDevWidth();
      assertEquals(0, int0);
      
      resultMatrixGnuPlot0.enumerateRowNamesTipText();
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.8259311897177692
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDefaultPrintColNames();
      resultMatrixCSV0.getDefaultRemoveFilterName();
      resultMatrixCSV0.getRowName((-1152));
      resultMatrixCSV0.setShowStdDev(false);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      resultMatrixLatex0.m_CountWidth = 1;
      resultMatrixLatex0.clear();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[0];
      resultMatrixCSV0.m_RankingWins = intArray0;
      int[][] intArray1 = new int[0][3];
      resultMatrixCSV0.setRanking(intArray1);
      resultMatrixGnuPlot0.m_EnumerateRowNames = false;
      resultMatrixGnuPlot0.toStringRanking();
      resultMatrixCSV0.getRevision();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setOptions((String[]) null);
      resultMatrixSignificance0.getDefaultPrintColNames();
      resultMatrixGnuPlot0.getDefaultEnumerateRowNames();
      // Undeclared exception!
      try { 
        resultMatrixLatex0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.968953904881729
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      boolean[] booleanArray0 = new boolean[5];
      booleanArray0[0] = false;
      booleanArray0[1] = true;
      booleanArray0[2] = true;
      booleanArray0[3] = true;
      booleanArray0[4] = false;
      resultMatrixSignificance0.m_ColHidden = booleanArray0;
      boolean[] booleanArray1 = new boolean[7];
      booleanArray1[0] = false;
      booleanArray1[1] = true;
      resultMatrixSignificance0.m_CountWidth = (-1);
      booleanArray1[2] = true;
      booleanArray1[3] = true;
      booleanArray1[4] = true;
      booleanArray1[5] = true;
      booleanArray1[6] = false;
      resultMatrixSignificance0.m_ColHidden = booleanArray1;
      resultMatrixSignificance0.getRevision();
      resultMatrixSignificance0.setRowName(0, "oH1gj]?=n)@/!%");
      resultMatrixSignificance0.getShowAverage();
      ResultMatrixLatex.main((String[]) null);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.9689542912774316
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 0);
      double[][] doubleArray0 = new double[0][9];
      resultMatrixCSV0.clearSummary();
      resultMatrixCSV0.m_StdDev = doubleArray0;
      resultMatrixCSV0.setShowStdDev(false);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getRevision();
      resultMatrixSignificance0.setRowName(1, "oH1gj]?=n)@/!%");
      resultMatrixSignificance0.getShowAverage();
      ResultMatrixLatex.main((String[]) null);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.816747079040943
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setPrintColNames(true);
      String[] stringArray0 = new String[5];
      stringArray0[0] = ")";
      stringArray0[1] = "*";
      stringArray0[2] = " E99m_mEbu` ixux";
      stringArray0[3] = "`0u2x(";
      stringArray0[4] = "   <tr><td align=\"right\">";
      resultMatrixPlainText0.setOptions(stringArray0);
      resultMatrixPlainText0.LEFT_PARENTHESES = " E99m_mEbu` ixux";
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.2973882607488347
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getDisplayName();
      resultMatrixHTML0.getColHidden(0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      Vector<Integer> vector0 = new Vector<Integer>();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) linkedList0;
      objectArray0[1] = (Object) resultMatrixHTML0;
      objectArray0[2] = (Object) "HTML";
      objectArray0[3] = (Object) linkedList0;
      objectArray0[4] = (Object) linkedList0;
      objectArray0[5] = (Object) resultMatrixHTML0;
      objectArray0[6] = (Object) linkedList0;
      linkedList0.toArray(objectArray0);
      vector0.retainAll(linkedList0);
      resultMatrixCSV0.setStdDevWidth((-711));
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      
      vector0.addElement((Integer) 0);
      resultMatrixCSV0.m_StdDevWidth = 2;
      int[][] intArray0 = new int[4][5];
      int[] intArray1 = new int[7];
      intArray1[0] = 1;
      intArray1[1] = 1;
      intArray1[2] = 2;
      intArray1[3] = 1;
      intArray1[4] = 1;
      intArray1[5] = 2;
      intArray1[6] = (-711);
      intArray0[0] = intArray1;
      int[] intArray2 = new int[4];
      intArray2[0] = 0;
      intArray2[1] = 2;
      intArray2[2] = 0;
      intArray2[3] = 0;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[3];
      intArray3[0] = 1;
      intArray3[1] = 2;
      intArray3[2] = 1;
      intArray0[2] = intArray3;
      resultMatrixHTML0.listOptions();
      resultMatrixHTML0.getDisplayRow(232);
      String string0 = resultMatrixCSV0.trimString(" ", (-635));
      assertEquals(" ", string0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.944427911265582
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      String[] stringArray0 = new String[0];
      ResultMatrixCSV.main(stringArray0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setPrintColNames(true);
      resultMatrixHTML0.setPrintRowNames(true);
      resultMatrixHTML0.setShowAverage(true);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.globalInfo();
      resultMatrixHTML0.getDisplayRow(0);
      resultMatrixCSV0.getDefaultEnumerateRowNames();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      int[] intArray0 = new int[1];
      intArray0[0] = 1;
      resultMatrixPlainText0.m_RankingLosses = intArray0;
      resultMatrixPlainText0.assign(resultMatrixCSV0);
      resultMatrixPlainText0.toStringSummary();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(1, 0);
      resultMatrixSignificance0.clearRanking();
      resultMatrixSignificance0.getRevision();
      resultMatrixPlainText0.getColHidden(3);
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertFalse(resultMatrixPlainText0.getRemoveFilterName());
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
      assertEquals(25, resultMatrixPlainText0.getRowNameWidth());
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
      assertFalse(resultMatrixPlainText0.getShowAverage());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.5363459061933904
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(26, 0);
      resultMatrixCSV0.m_CountWidth = 26;
      resultMatrixCSV0.clearHeader();
      resultMatrixCSV0.setEnumerateRowNames(true);
      resultMatrixCSV0.getDefaultStdDevPrec();
      resultMatrixCSV0.getSignificanceWidth();
      resultMatrixCSV0.setShowAverage(true);
      assertTrue(resultMatrixCSV0.getEnumerateRowNames());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.8253521260350323
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 0);
      resultMatrixCSV0.doubleToString(0, 0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      resultMatrixHTML0.getOptions();
      resultMatrixHTML0.getMean((-331), 0);
      resultMatrixHTML0.getMeanPrec();
      resultMatrixHTML0.clearHeader();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(2, 1);
      resultMatrixCSV0.m_StdDevPrec = 32;
      resultMatrixPlainText0.m_RemoveFilterName = false;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      resultMatrixCSV0.LEFT_PARENTHESES = "";
      resultMatrixSignificance0.LOSS_STRING = "8J6";
      resultMatrixSignificance0.toStringSummary();
      resultMatrixSignificance0.setColNameWidth((-2398));
      resultMatrixCSV0.getDisplayName();
      resultMatrixPlainText0.getDefaultStdDevWidth();
      resultMatrixHTML0.globalInfo();
      // Undeclared exception!
      try { 
        resultMatrixCSV0.toStringMatrix();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=4.031646171384089
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixLatex0.padString("*", 2);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixLatex0);
      assertEquals(1, resultMatrixGnuPlot0.getVisibleRowCount());
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
      
      String[] stringArray0 = new String[4];
      stringArray0[0] = "* ";
      ResultMatrixLatex.main(stringArray0);
      stringArray0[1] = "*";
      stringArray0[2] = "(";
      stringArray0[3] = "v";
      ResultMatrixHTML.main(stringArray0);
      String string0 = resultMatrixLatex0.getRowName(0);
      assertEquals("row0", string0);
      
      resultMatrixLatex0.setCount(3, 2);
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      assertEquals(0, resultMatrixLatex0.getCountWidth());
      
      String string1 = resultMatrixHTML0.toString();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>(1)</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>(v/ /*)</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string1);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=4.031646255869757
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      String string0 = resultMatrixLatex0.padString("*", 2);
      assertEquals("* ", string0);
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixLatex0);
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
      
      String[] stringArray0 = new String[4];
      stringArray0[0] = " ";
      stringArray0[1] = " ";
      stringArray0[2] = ")";
      stringArray0[3] = " ";
      ResultMatrixLatex.main(stringArray0);
      ResultMatrixHTML.main(stringArray0);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(2, 69);
      resultMatrixLatex1.getRowName(0);
      resultMatrixLatex1.setCount(0, (-1563.31297331));
      String string1 = resultMatrixHTML0.toString();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>(1)</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>(v/ /*)</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string1);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=4.0403000652791405
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 0);
      double[][] doubleArray0 = new double[0][9];
      resultMatrixCSV0.clearSummary();
      resultMatrixCSV0.m_StdDev = doubleArray0;
      resultMatrixCSV0.setShowStdDev(false);
      resultMatrixCSV0.globalInfo();
      resultMatrixCSV0.getColName(0);
      resultMatrixCSV0.LOSS_STRING = "";
      resultMatrixCSV0.getDisplayRow(25);
      resultMatrixCSV0.getDisplayRow(0);
      resultMatrixCSV0.getStdDevWidth();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "v";
      stringArray0[1] = null;
      stringArray0[2] = "";
      stringArray0[3] = "={Oyl";
      stringArray0[4] = "]";
      ResultMatrixHTML.main(stringArray0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      resultMatrixLatex0.getRowName(0);
      resultMatrixLatex0.setCount((-3581), 0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      // Undeclared exception!
      try { 
        resultMatrixHTML0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=4.039762264022483
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 0);
      resultMatrixPlainText0.WIN_STRING = null;
      int[] intArray0 = new int[2];
      resultMatrixPlainText0.toStringRanking();
      intArray0[0] = 0;
      intArray0[1] = 3;
      resultMatrixPlainText0.m_ColOrder = intArray0;
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixPlainText0);
      resultMatrixHTML0.m_StdDevWidth = 0;
      resultMatrixHTML0.setEnumerateColNames(true);
      resultMatrixPlainText0.enumerateRowNamesTipText();
      resultMatrixPlainText0.getColHidden(1281);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 2);
      resultMatrixCSV0.getDefaultRowNameWidth();
      resultMatrixPlainText0.getRevision();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "[";
      stringArray0[1] = ")";
      stringArray0[2] = "v";
      stringArray0[3] = "[";
      stringArray0[4] = "*";
      stringArray0[5] = ")";
      stringArray0[6] = " ";
      stringArray0[7] = "]";
      stringArray0[8] = "*";
      ResultMatrixHTML.main(stringArray0);
      assertEquals(9, stringArray0.length);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=4.039762264022483
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 0);
      resultMatrixPlainText0.WIN_STRING = null;
      int[] intArray0 = new int[2];
      resultMatrixPlainText0.toStringRanking();
      intArray0[0] = 0;
      intArray0[1] = 3;
      resultMatrixPlainText0.m_ColOrder = intArray0;
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixPlainText0);
      resultMatrixHTML0.m_StdDevWidth = 0;
      resultMatrixHTML0.setEnumerateColNames(true);
      resultMatrixPlainText0.enumerateRowNamesTipText();
      resultMatrixPlainText0.getColHidden(1281);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 2);
      resultMatrixCSV0.getDefaultRowNameWidth();
      resultMatrixPlainText0.getRevision();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "[";
      stringArray0[1] = ")";
      stringArray0[2] = "v";
      stringArray0[3] = "[";
      stringArray0[4] = "*";
      stringArray0[2] = ")";
      stringArray0[6] = " ";
      stringArray0[7] = "]";
      stringArray0[8] = "*";
      ResultMatrixHTML.main(stringArray0);
      assertEquals(9, stringArray0.length);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.9803730584651884
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 0);
      double[][] doubleArray0 = new double[0][9];
      resultMatrixCSV0.clearSummary();
      resultMatrixCSV0.m_StdDev = doubleArray0;
      resultMatrixCSV0.setShowStdDev(false);
      resultMatrixCSV0.globalInfo();
      resultMatrixCSV0.getColName(0);
      resultMatrixCSV0.LOSS_STRING = "";
      resultMatrixCSV0.getDisplayRow(25);
      resultMatrixCSV0.getDisplayRow(0);
      resultMatrixCSV0.getStdDevWidth();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      resultMatrixGnuPlot0.toStringKey();
      resultMatrixGnuPlot0.getDefaultColNameWidth();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "v";
      stringArray0[1] = "";
      stringArray0[2] = "[";
      stringArray0[3] = "Generates the matrix in CSV ('comma-separated values') format.";
      resultMatrixGnuPlot0.m_MeanPrec = 832;
      stringArray0[4] = "qYMD[";
      stringArray0[5] = " ";
      resultMatrixGnuPlot0.setOptions(stringArray0);
      resultMatrixGnuPlot0.getColOrder();
      resultMatrixGnuPlot0.enumerateColNamesTipText();
      assertFalse(resultMatrixGnuPlot0.getEnumerateColNames());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=3.5025274962265955
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      Vector<Object> vector0 = new Vector<Object>();
      resultMatrixHTML0.setPrintColNames(false);
      Object object0 = new Object();
      vector0.add(object0);
      resultMatrixHTML0.m_HeaderKeys = vector0;
      resultMatrixHTML0.listOptions();
      resultMatrixHTML0.getDefaultShowAverage();
      resultMatrixHTML0.getDefaultMeanWidth();
      resultMatrixHTML0.getColHidden((-1010));
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(2, 1);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      resultMatrixLatex1.clearHeader();
      resultMatrixLatex1.toStringKey();
      int[] intArray0 = new int[2];
      intArray0[0] = 3463;
      intArray0[1] = 1;
      resultMatrixLatex0.m_RankingWins = intArray0;
      UnaryOperator<Object> unaryOperator0 = UnaryOperator.identity();
      vector0.replaceAll(unaryOperator0);
      assertEquals(1, vector0.size());
      
      resultMatrixLatex0.TIE_STRING = "v";
      resultMatrixLatex0.setCountWidth(0);
      boolean[] booleanArray0 = new boolean[7];
      booleanArray0[0] = false;
      booleanArray0[1] = false;
      booleanArray0[2] = false;
      booleanArray0[3] = false;
      booleanArray0[4] = false;
      booleanArray0[5] = false;
      booleanArray0[6] = false;
      resultMatrixLatex1.m_RowHidden = booleanArray0;
      resultMatrixLatex0.globalInfo();
      resultMatrixLatex1.getColName((-657));
      String string0 = resultMatrixLatex0.padString(")", 0, false);
      assertEquals(")", string0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.192313694045538
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getDefaultRemoveFilterName();
      resultMatrixGnuPlot0.setPrintColNames(false);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      resultMatrixHTML0.m_RowNameWidth = 0;
      resultMatrixHTML0.getRevision();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixGnuPlot0);
      resultMatrixLatex0.setRemoveFilterName(true);
      resultMatrixLatex0.clearHeader();
      resultMatrixLatex0.globalInfo();
      resultMatrixLatex0.assign(resultMatrixHTML0);
      resultMatrixGnuPlot0.getRowHidden(0);
      int int0 = 97;
      // Undeclared exception!
      resultMatrixHTML0.setSize(247, 97);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.3606287049315657
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setPrintRowNames(true);
      Vector<Object> vector0 = new Vector<Object>();
      vector0.add((Object) resultMatrixHTML0);
      resultMatrixHTML0.listOptions();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      resultMatrixHTML1.getDefaultShowAverage();
      resultMatrixHTML0.getDefaultMeanWidth();
      resultMatrixHTML1.getColHidden((-1010));
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 3);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixHTML1);
      resultMatrixLatex1.clearHeader();
      resultMatrixLatex0.toStringKey();
      UnaryOperator<Object> unaryOperator0 = UnaryOperator.identity();
      vector0.replaceAll(unaryOperator0);
      assertEquals("[<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>(1)</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>(v/ /*)</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n]", vector0.toString());
      
      resultMatrixLatex0.setCountWidth(1);
      resultMatrixLatex1.globalInfo();
      resultMatrixLatex0.getColName((-2422));
      String string0 = resultMatrixLatex0.padString("", 1, false);
      assertEquals(" ", string0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.5805281765845347
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.toStringKey();
      int int0 = 1542;
      resultMatrixCSV0.getSummaryTitle(1542);
      resultMatrixCSV0.toStringKey();
      resultMatrixCSV0.setMean(1542, 1542, 1498.09191231);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      boolean boolean0 = true;
      resultMatrixLatex0.clearSummary();
      resultMatrixLatex0.setRemoveFilterName(true);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "i";
      stringArray0[1] = "Key,\n[1],col0\n";
      stringArray0[2] = "q/00P-pK";
      stringArray0[3] = "ka\"%M'u$|XqK>XFu";
      stringArray0[4] = "*";
      resultMatrixLatex0.m_ColNames = stringArray0;
      // Undeclared exception!
      try { 
        resultMatrixLatex0.toStringMatrix();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=3.866709565359827
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.padString("\"T<*#MdOeQ&<r", 0);
      resultMatrixPlainText0.toArray();
      resultMatrixPlainText0.setRowHidden((-3676), false);
      resultMatrixPlainText0.setColNameWidth(0);
      resultMatrixPlainText0.setMeanWidth(5);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 1);
      resultMatrixLatex0.setEnumerateColNames(true);
      resultMatrixLatex0.getDefaultPrintColNames();
      int[] intArray0 = new int[7];
      intArray0[0] = 0;
      intArray0[1] = 1;
      intArray0[2] = 0;
      intArray0[3] = 1;
      intArray0[4] = 2;
      intArray0[5] = 0;
      intArray0[6] = 1;
      resultMatrixPlainText0.setRowOrder(intArray0);
      resultMatrixPlainText0.setCountWidth(2);
      resultMatrixLatex0.clearSummary();
      resultMatrixPlainText0.getEnumerateRowNames();
      assertEquals(2, resultMatrixPlainText0.getCountWidth());
      
      resultMatrixLatex0.getMean(2942, 2942);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 1);
      resultMatrixSignificance0.toStringKey();
      resultMatrixSignificance0.getEnumerateColNames();
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.2700687159213766
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDefaultRemoveFilterName();
      resultMatrixCSV0.getDefaultRemoveFilterName();
      resultMatrixCSV0.getRowName((-1521));
      resultMatrixCSV0.setShowStdDev(false);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      resultMatrixLatex0.m_CountWidth = 1;
      resultMatrixLatex0.clear();
      resultMatrixLatex0.setStdDevPrec(123);
      int int0 = resultMatrixLatex0.getStdDevPrec();
      assertEquals(1, resultMatrixCSV0.getRowCount());
      assertEquals(0, resultMatrixLatex0.getRowNameWidth());
      assertEquals(123, int0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.7170962372896166
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.toStringRanking();
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      assertEquals(1, resultMatrixCSV0.getColCount());
      
      double[] doubleArray0 = new double[5];
      String string0 = resultMatrixCSV0.toString();
      assertEquals("Dataset,[1]\nrow0,''\n'[v/ /*]',''\n", string0);
      
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 1;
      doubleArray0[2] = (double) 1;
      doubleArray0[3] = (double) 1;
      resultMatrixCSV0.m_Counts = doubleArray0;
      resultMatrixCSV0.getPrintColNames();
      int[][] intArray0 = new int[0][2];
      resultMatrixCSV0.m_NonSigWins = intArray0;
      String string1 = resultMatrixCSV0.toStringSummary();
      assertEquals("a,'(No. of datasets where [col] >> [row])'\n-,a = col0\n", string1);
      
      resultMatrixCSV0.getDefaultEnumerateRowNames();
      resultMatrixCSV0.toStringKey();
      resultMatrixCSV0.printRowNamesTipText();
      resultMatrixCSV0.getDisplayCol(0);
      resultMatrixCSV0.getCount(0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixCSV0.getDefaultEnumerateColNames();
      assertEquals(0, resultMatrixCSV0.getColNameWidth());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      
      double[][] doubleArray1 = new double[7][0];
      doubleArray1[0] = resultMatrixCSV0.m_Counts;
      doubleArray1[1] = resultMatrixCSV0.m_Counts;
      double[] doubleArray2 = new double[9];
      doubleArray2[0] = (double) 1;
      doubleArray2[1] = (double) 0;
      doubleArray2[2] = (double) 0;
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(1164, 0);
      resultMatrixLatex0.isAverage(239);
      resultMatrixLatex0.getDefaultSignificanceWidth();
      assertTrue(resultMatrixLatex0.getEnumerateColNames());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=3.4856144908925812
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 0);
      resultMatrixCSV0.m_ColNameWidth = 2;
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixCSV0);
      double[][] doubleArray0 = new double[8][6];
      double[] doubleArray1 = new double[5];
      doubleArray1[0] = (double) 0;
      doubleArray1[1] = (double) 2;
      doubleArray1[2] = (double) 2;
      doubleArray1[3] = (double) 2;
      doubleArray1[4] = (double) 2;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[8];
      doubleArray2[0] = (double) 1;
      doubleArray2[1] = (double) 1;
      doubleArray2[2] = 192.666147959343;
      doubleArray2[3] = (double) 2;
      doubleArray2[4] = (double) 1;
      doubleArray2[5] = (double) 2;
      doubleArray2[6] = (double) 2;
      doubleArray2[7] = (double) 2;
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[11];
      doubleArray3[0] = (double) 1;
      doubleArray3[1] = 2302.4901514;
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[7];
      doubleArray4[0] = (-3277.353898415);
      doubleArray4[1] = (double) 2;
      doubleArray4[2] = (double) 0;
      doubleArray4[3] = (double) 1;
      doubleArray4[4] = (double) 0;
      doubleArray4[5] = (double) 0;
      doubleArray1[1] = (double) 2;
      doubleArray0[3] = doubleArray4;
      double[] doubleArray5 = new double[0];
      doubleArray0[4] = doubleArray5;
      double[] doubleArray6 = new double[5];
      doubleArray6[0] = (double) 1;
      doubleArray6[1] = (double) 2;
      doubleArray6[2] = (-3277.353898415);
      doubleArray6[3] = 2302.4901514;
      doubleArray6[4] = (-4482.85);
      doubleArray0[5] = doubleArray6;
      double[] doubleArray7 = new double[4];
      doubleArray7[1] = (double) 0;
      doubleArray7[2] = (double) 2;
      doubleArray7[3] = 192.666147959343;
      doubleArray0[6] = doubleArray7;
      double[] doubleArray8 = new double[3];
      doubleArray8[0] = 2302.4901514;
      doubleArray8[1] = 2302.4901514;
      doubleArray8[2] = (double) 1;
      doubleArray0[7] = doubleArray8;
      resultMatrixCSV0.m_Mean = doubleArray0;
      resultMatrixCSV0.WIN_STRING = "4B~PH|~s#<Z";
      resultMatrixCSV1.m_SignificanceWidth = (-795);
      resultMatrixCSV1.toStringSummary();
      resultMatrixCSV1.padString("[", 0);
      resultMatrixCSV0.m_PrintRowNames = false;
      resultMatrixCSV0.getDefaultPrintColNames();
      resultMatrixCSV0.setSignificanceWidth(0);
      resultMatrixCSV1.addHeader("[", "\n1. complete\n");
      resultMatrixCSV0.getDefaultRowNameWidth();
      // Undeclared exception!
      try { 
        resultMatrixCSV1.assign(resultMatrixCSV0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=3.7886522766210495
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.globalInfo();
      resultMatrixLatex0.setRowNameWidth(258);
      resultMatrixLatex0.setSignificanceWidth(3);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.toStringRanking();
      resultMatrixLatex0.toStringMatrix();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      int[] intArray0 = new int[7];
      intArray0[0] = 1;
      intArray0[1] = 2;
      intArray0[2] = 0;
      intArray0[3] = 0;
      intArray0[4] = 1;
      intArray0[5] = 2;
      intArray0[6] = 3;
      resultMatrixPlainText0.m_RankingDiff = intArray0;
      resultMatrixPlainText0.globalInfo();
      resultMatrixPlainText0.getDisplayName();
      assertEquals(3, resultMatrixLatex0.getSignificanceWidth());
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=3.7559090932239845
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      assertEquals(1, resultMatrixLatex1.getVisibleColCount());
      
      resultMatrixLatex1.toString();
      int[] intArray0 = new int[5];
      intArray0[0] = 2;
      intArray0[2] = 2988;
      intArray0[1] = 2;
      resultMatrixLatex0.LOSS_STRING = "\begin{table}[thb]\ncaption{label{labelname}Table Caption}\n\footnotesize\n{centering \begin{tabular}{lr}\n\\\nhline\nDataset & (1)\\\nhline\nrow0 &    \\\nhline\nmulticolumn{2}{c}{$circ$, $\bullet$ statistically significant improvement or degradation}\\\nend{tabular} \footnotesize par}\nend{table}\n";
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.toStringRanking();
      String string0 = resultMatrixLatex0.toStringMatrix();
      assertEquals("\\begin{table}[thb]\n\\caption{\\label{labelname}Table Caption}\n\\footnotesize\n{\\centering \\begin{tabular}{lr}\n\\\\\n\\hline\nDataset & (1)\\\\\n\\hline\nrow0 &    \\\\\n\\hline\n\\multicolumn{2}{c}{$\\circ$, $\\bullet$ statistically significant improvement or degradation}\\\\\n\\end{tabular} \\footnotesize \\par}\n\\end{table}\n", string0);
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex1);
      resultMatrixPlainText0.globalInfo();
      resultMatrixPlainText0.getDisplayName();
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(0, resultMatrixPlainText0.getColNameWidth());
      assertEquals(0, resultMatrixPlainText0.getRowNameWidth());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(0, resultMatrixPlainText0.getCountWidth());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=3.622959681278827
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(50, 50);
      resultMatrixLatex0.toStringKey();
      resultMatrixLatex0.meanPrecTipText();
      resultMatrixLatex0.getRemoveFilterName();
      resultMatrixLatex0.WIN_STRING = "Ic";
      resultMatrixLatex0.setStdDev((-4327), 117, 117);
      resultMatrixLatex0.getDefaultCountWidth();
      resultMatrixLatex0.setStdDevWidth((-4327));
      resultMatrixLatex0.getRowHidden((-4327));
      resultMatrixLatex0.setSignificanceWidth(117);
      assertEquals(117, resultMatrixLatex0.getSignificanceWidth());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=3.9327862143705192
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      boolean[] booleanArray0 = new boolean[5];
      booleanArray0[0] = false;
      booleanArray0[1] = true;
      booleanArray0[2] = true;
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.globalInfo();
      resultMatrixCSV0.getColName(0);
      resultMatrixCSV0.getDisplayRow((-2126));
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      resultMatrixCSV1.getDisplayRow((-1));
      resultMatrixCSV0.getStdDevWidth();
      ResultMatrixCSV resultMatrixCSV2 = new ResultMatrixCSV(1, 45);
      assertEquals(45, resultMatrixCSV2.getRowCount());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV2);
      resultMatrixGnuPlot0.toStringKey();
      resultMatrixGnuPlot0.getDefaultColNameWidth();
      resultMatrixGnuPlot0.setOptions((String[]) null);
      resultMatrixGnuPlot0.getColOrder();
      resultMatrixGnuPlot0.enumerateColNamesTipText();
      assertEquals(50, resultMatrixGnuPlot0.getRowNameWidth());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=3.6948713454710718
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.toStringRanking();
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      
      double[] doubleArray0 = new double[5];
      String string0 = resultMatrixCSV0.toString();
      assertEquals("Dataset,[1]\nrow0,''\n'[v/ /*]',''\n", string0);
      
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 1;
      doubleArray0[2] = (double) 1;
      doubleArray0[3] = (double) 1;
      doubleArray0[4] = (-5454.962837);
      resultMatrixCSV0.m_Counts = doubleArray0;
      resultMatrixCSV0.getPrintColNames();
      int[][] intArray0 = new int[0][2];
      resultMatrixCSV0.m_NonSigWins = intArray0;
      String string1 = resultMatrixCSV0.toStringSummary();
      assertEquals("a,'(No. of datasets where [col] >> [row])'\n-,a = col0\n", string1);
      
      resultMatrixCSV0.getDefaultEnumerateRowNames();
      resultMatrixCSV0.toStringKey();
      resultMatrixCSV0.printRowNamesTipText();
      resultMatrixCSV0.getDisplayCol(0);
      resultMatrixCSV0.getCount(0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getDefaultPrintColNames();
      double[][] doubleArray1 = new double[7][0];
      doubleArray1[0] = resultMatrixCSV0.m_Counts;
      doubleArray1[1] = resultMatrixCSV0.m_Counts;
      double[] doubleArray2 = new double[9];
      doubleArray2[0] = (double) 1;
      doubleArray2[1] = (double) 0;
      doubleArray2[2] = (double) 0;
      doubleArray2[3] = (double) 0;
      doubleArray2[4] = (double) 0;
      doubleArray2[5] = (double) 2;
      doubleArray2[6] = (double) 1;
      doubleArray2[7] = (double) 0;
      doubleArray2[8] = (double) 0;
      doubleArray1[2] = doubleArray2;
      doubleArray1[3] = resultMatrixCSV0.m_Counts;
      doubleArray1[4] = doubleArray0;
      doubleArray1[5] = doubleArray0;
      doubleArray1[6] = doubleArray0;
      resultMatrixHTML0.m_StdDev = doubleArray1;
      resultMatrixHTML0.listOptions();
      resultMatrixHTML0.getDisplayRow(0);
      resultMatrixCSV0.trimString("Key,\n[1],col0\n", 40);
      assertFalse(resultMatrixCSV0.getRemoveFilterName());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=4.01774621699014
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(9, 9);
      resultMatrixHTML0.getDefaultPrintColNames();
      resultMatrixHTML0.setEnumerateRowNames(false);
      resultMatrixHTML0.addHeader((String) null, (String) null);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(9, 9);
      resultMatrixGnuPlot0.toStringRanking();
      resultMatrixHTML0.getRowOrder();
      String string0 = resultMatrixGnuPlot0.getDisplayName();
      String[] stringArray0 = new String[8];
      resultMatrixGnuPlot0.setPrintRowNames(false);
      stringArray0[0] = "Sl\" ]NM{k[$L2N1c";
      stringArray0[1] = "GNUPlot";
      stringArray0[2] = "(";
      stringArray0[3] = null;
      stringArray0[4] = ")";
      stringArray0[5] = "v";
      stringArray0[6] = "GNUPlot";
      stringArray0[7] = " ";
      ResultMatrixPlainText.main(stringArray0);
      resultMatrixHTML0.toStringRanking();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      String string1 = resultMatrixCSV0.toStringRanking();
      assertFalse(string1.equals((Object)string0));
  }

  /**
  //Test case number: 49
  /*Coverage entropy=3.8752931713105117
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setColNameWidth(0);
      resultMatrixGnuPlot0.m_PrintColNames = false;
      boolean[] booleanArray0 = new boolean[3];
      resultMatrixGnuPlot0.setEnumerateColNames(true);
      booleanArray0[0] = true;
      booleanArray0[1] = false;
      resultMatrixGnuPlot0.m_PrintRowNames = false;
      booleanArray0[2] = false;
      resultMatrixGnuPlot0.m_RowHidden = booleanArray0;
      resultMatrixGnuPlot0.m_ColNameWidth = 1;
      resultMatrixGnuPlot0.getDefaultEnumerateColNames();
      resultMatrixGnuPlot0.getDefaultEnumerateColNames();
      resultMatrixGnuPlot0.getDefaultColNameWidth();
      resultMatrixGnuPlot0.getDefaultColNameWidth();
      resultMatrixGnuPlot0.getColNameWidth();
      resultMatrixGnuPlot0.showStdDevTipText();
      assertTrue(resultMatrixGnuPlot0.getEnumerateColNames());
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setStdDevPrec(2);
      resultMatrixCSV0.m_MeanWidth = 1;
      resultMatrixCSV0.padString("L::)2AYSF OBb%", 1567, true);
      resultMatrixCSV0.setEnumerateRowNames(false);
      resultMatrixCSV0.toStringSummary();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.toString();
      resultMatrixLatex0.getDisplayName();
      resultMatrixCSV0.removeFilterNameTipText();
      resultMatrixLatex0.getCountWidth();
      resultMatrixCSV0.getEnumerateColNames();
      assertEquals(2, resultMatrixCSV0.getDefaultStdDevPrec());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=3.4774071127655453
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 0);
      double[][] doubleArray0 = new double[8][0];
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = (double) 2;
      doubleArray1[1] = (double) 1;
      doubleArray1[2] = (double) 0;
      doubleArray1[3] = (-2281.19398);
      doubleArray1[4] = (double) 0;
      doubleArray1[5] = (double) 0;
      doubleArray1[6] = (double) 0;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[6];
      doubleArray2[0] = (double) 0;
      doubleArray2[1] = (double) 0;
      doubleArray2[2] = (double) 0;
      doubleArray2[3] = (double) 0;
      doubleArray2[4] = (double) 1;
      doubleArray2[5] = (double) 0;
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[5];
      doubleArray3[0] = (double) 1;
      doubleArray3[1] = (double) 0;
      doubleArray3[2] = (double) 1;
      doubleArray3[3] = (-302.223472097248);
      doubleArray3[4] = (double) 1;
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[0];
      doubleArray0[3] = doubleArray4;
      double[] doubleArray5 = new double[2];
      doubleArray5[0] = (-302.223472097248);
      doubleArray5[1] = (double) 2;
      doubleArray0[4] = doubleArray5;
      double[] doubleArray6 = new double[9];
      doubleArray6[0] = (double) 1;
      doubleArray6[1] = (-302.223472097248);
      doubleArray6[2] = (double) 0;
      doubleArray6[3] = (double) 2;
      doubleArray6[4] = (double) 0;
      doubleArray6[5] = (-301.7559543668796);
      doubleArray6[6] = (double) 1;
      doubleArray6[7] = (-302.223472097248);
      doubleArray6[8] = (double) 2;
      doubleArray0[5] = doubleArray6;
      double[] doubleArray7 = new double[8];
      doubleArray7[0] = (-301.7559543668796);
      doubleArray7[1] = 1961.45;
      doubleArray7[2] = 0.0;
      doubleArray7[3] = (double) 2;
      doubleArray7[4] = (double) 2;
      doubleArray7[5] = (double) 0;
      doubleArray7[6] = 0.0;
      doubleArray7[7] = (-302.223472097248);
      doubleArray0[6] = doubleArray7;
      double[] doubleArray8 = new double[5];
      doubleArray8[0] = 0.0;
      doubleArray8[1] = (double) 2;
      doubleArray8[2] = (double) 1;
      doubleArray8[3] = (double) 0;
      doubleArray8[4] = (double) 0;
      doubleArray0[7] = doubleArray8;
      resultMatrixHTML0.m_StdDev = doubleArray0;
      resultMatrixHTML0.setSize(97, 0);
      resultMatrixHTML0.getColName(0);
      resultMatrixHTML0.clearRanking();
      assertEquals(97, resultMatrixHTML0.getVisibleColCount());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=4.011587074885866
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.TIE_STRING = "8w-y]qqb2";
      resultMatrixSignificance0.getRowHidden((-1778));
      resultMatrixSignificance0.getColHidden(2);
      resultMatrixSignificance0.colNameWidthTipText();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "The maximum width of the column names (0 = optimal).";
      stringArray0[1] = "*";
      stringArray0[2] = "*";
      stringArray0[3] = "The maximum width of the column names (0 = optimal).";
      resultMatrixSignificance0.LEFT_PARENTHESES = "*";
      stringArray0[4] = "*";
      stringArray0[5] = "Pv7T_7lMStLbo";
      ResultMatrixLatex.main(stringArray0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      int[][] intArray0 = new int[8][0];
      int[] intArray1 = new int[8];
      intArray1[0] = (-1778);
      intArray1[1] = 0;
      intArray1[2] = 1;
      intArray1[3] = 2;
      intArray1[4] = 2;
      intArray1[5] = 2;
      intArray1[6] = 2;
      intArray1[7] = 2;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[1];
      intArray2[0] = 1;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[8];
      intArray3[0] = 1;
      intArray3[1] = (-1778);
      intArray3[2] = 2;
      intArray3[3] = 2;
      intArray3[4] = 0;
      intArray3[5] = 2;
      intArray3[6] = 2;
      intArray3[7] = 2;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[9];
      intArray4[0] = 0;
      intArray4[1] = 29;
      intArray4[2] = 1;
      intArray4[3] = 1;
      intArray4[4] = 2;
      intArray4[5] = 44;
      intArray4[6] = 1;
      intArray4[7] = 2;
      intArray4[8] = 1;
      intArray0[3] = intArray4;
      int[] intArray5 = new int[4];
      intArray5[0] = 44;
      intArray5[1] = 0;
      intArray5[2] = 29;
      intArray5[3] = 2;
      intArray0[4] = intArray5;
      int[] intArray6 = new int[6];
      intArray6[0] = 44;
      intArray6[1] = 44;
      intArray6[2] = 29;
      intArray6[3] = 1;
      intArray6[4] = 2;
      intArray6[5] = (-1778);
      intArray0[5] = intArray6;
      int[] intArray7 = new int[1];
      intArray7[0] = 2;
      intArray0[6] = intArray7;
      int[] intArray8 = new int[9];
      intArray8[0] = 44;
      intArray8[1] = 2;
      intArray8[2] = 44;
      intArray8[3] = 29;
      intArray8[4] = 29;
      intArray8[5] = 0;
      intArray8[6] = 44;
      intArray8[7] = 0;
      intArray8[8] = 536;
      intArray0[7] = intArray8;
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.setRanking(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=4.09889751582127
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.stdDevWidthTipText();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "(";
      stringArray0[1] = "(";
      stringArray0[2] = " ";
      resultMatrixLatex0.setMeanPrec(0);
      stringArray0[3] = "$circ$";
      stringArray0[4] = "(";
      stringArray0[5] = "$\bullet$";
      stringArray0[6] = ")";
      stringArray0[7] = "$circ$";
      resultMatrixLatex0.setOptions(stringArray0);
      resultMatrixLatex0.clearSummary();
      ResultMatrixLatex.main(stringArray0);
      resultMatrixLatex0.getCount(1);
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (double) 1;
      doubleArray0[1] = (double) 1;
      doubleArray0[2] = (double) 2;
      doubleArray0[3] = 0.0;
      doubleArray0[4] = (double) 0;
      resultMatrixLatex0.m_Counts = doubleArray0;
      resultMatrixLatex0.isAverage(1);
      resultMatrixLatex0.getDefaultSignificanceWidth();
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=3.6184968414746264
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setColNameWidth(0);
      resultMatrixGnuPlot0.m_PrintColNames = false;
      boolean[] booleanArray0 = new boolean[3];
      resultMatrixGnuPlot0.listOptions();
      resultMatrixGnuPlot0.setEnumerateColNames(true);
      booleanArray0[0] = true;
      booleanArray0[1] = false;
      resultMatrixGnuPlot0.m_PrintRowNames = false;
      resultMatrixGnuPlot0.m_RowHidden = booleanArray0;
      resultMatrixGnuPlot0.m_ColNameWidth = 1;
      resultMatrixGnuPlot0.getDefaultEnumerateColNames();
      resultMatrixGnuPlot0.getDefaultEnumerateColNames();
      resultMatrixGnuPlot0.getDefaultColNameWidth();
      resultMatrixGnuPlot0.getDefaultColNameWidth();
      resultMatrixGnuPlot0.getColNameWidth();
      resultMatrixGnuPlot0.showStdDevTipText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setStdDevPrec(2);
      resultMatrixCSV0.m_MeanWidth = 1;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getRowCount();
      resultMatrixGnuPlot0.setMeanPrec(55);
      resultMatrixGnuPlot0.getDefaultColNameWidth();
      assertTrue(resultMatrixGnuPlot0.getEnumerateColNames());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=3.5426668467622404
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(95, 0);
      String[][] stringArray0 = resultMatrixGnuPlot0.toArray();
      assertEquals(2, stringArray0.length);
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      resultMatrixPlainText0.headerKeys();
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertTrue(resultMatrixPlainText0.getPrintRowNames());
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      assertFalse(resultMatrixPlainText0.getEnumerateRowNames());
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
      assertEquals(0, resultMatrixPlainText0.getCountWidth());
      
      resultMatrixGnuPlot0.getShowAverage();
      resultMatrixGnuPlot0.getDefaultEnumerateRowNames();
      assertEquals(50, resultMatrixGnuPlot0.getRowNameWidth());
      assertTrue(resultMatrixGnuPlot0.getDefaultPrintColNames());
      assertFalse(resultMatrixGnuPlot0.getRemoveFilterName());
      assertEquals(95, resultMatrixGnuPlot0.getColCount());
      assertEquals(95, resultMatrixGnuPlot0.getVisibleColCount());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=3.2244075400342926
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setPrintColNames(false);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      int[][] intArray0 = new int[4][5];
      int[] intArray1 = new int[5];
      intArray1[0] = 2;
      intArray1[1] = 0;
      intArray1[2] = 1;
      intArray1[3] = 1;
      intArray1[4] = 2;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[5];
      intArray2[0] = 0;
      intArray2[1] = 2;
      intArray2[2] = 1;
      intArray2[3] = 2;
      intArray2[4] = 2;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[8];
      intArray3[0] = 0;
      intArray3[1] = 1;
      intArray3[2] = 2;
      intArray3[3] = 0;
      intArray3[4] = 0;
      intArray3[5] = 2;
      intArray3[6] = 2;
      intArray3[7] = 2;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[8];
      intArray4[0] = 2;
      intArray4[1] = 2;
      intArray4[2] = 2;
      intArray4[3] = 1;
      intArray4[4] = 1;
      intArray4[5] = 0;
      intArray4[6] = (-692);
      intArray4[7] = 1;
      intArray0[3] = intArray4;
      resultMatrixCSV0.m_NonSigWins = intArray0;
      resultMatrixCSV0.listOptions();
      assertEquals(0, resultMatrixCSV0.getRowNameWidth());
      
      resultMatrixCSV0.clear();
      assertFalse(resultMatrixLatex0.getPrintColNames());
  }
}
