/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 02:33:36 GMT 2019
 */

package umd.cs.shop;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.StreamTokenizer;
import java.io.StringReader;
import java.nio.CharBuffer;
import java.util.function.Consumer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import umd.cs.shop.JSJshopVars;
import umd.cs.shop.JSPredicateForm;
import umd.cs.shop.JSSubstitution;
import umd.cs.shop.JSTerm;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JSPredicateForm_ESTest extends JSPredicateForm_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.7723221396381754
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StringReader stringReader0 = new StringReader("3.0");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSPredicateForm jSPredicateForm0 = jSTerm0.standarizerPredicateForm();
      streamTokenizer0.wordChars((-124357130), (-124357130));
      stringReader0.reset();
      streamTokenizer0.slashSlashComments(true);
      StringReader stringReader1 = new StringReader(",");
      jSPredicateForm0.print();
      streamTokenizer0.wordChars((-1082982695), 3096);
      jSTerm0.isEmpty();
      jSTerm0.parallelStream();
      jSTerm0.add((Object) null);
      jSTerm0.isEmpty();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      // Undeclared exception!
      try { 
        jSTerm0.applySubstitutionPF(jSSubstitution0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.8371446853736637
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StringReader stringReader0 = new StringReader("L~neg= ");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.add((Object) jSTerm0);
      jSTerm0.firstElement();
      JSPredicateForm jSPredicateForm0 = jSTerm0.clonePF();
      jSTerm0.clonePF();
      jSTerm0.equals(jSPredicateForm0);
      JSPredicateForm jSPredicateForm1 = jSTerm0.clonePF();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSPredicateForm0.matches(jSPredicateForm1, jSSubstitution0);
      jSTerm0.setSize(189);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      jSPredicateForm1.forEach(consumer0);
      JSTerm jSTerm1 = new JSTerm();
      // Undeclared exception!
      try { 
        jSTerm1.standarizerPredicateForm();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.3243133842647805
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StringReader stringReader0 = new StringReader("LHn : ");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSPredicateForm jSPredicateForm0 = jSTerm0.standarizerPredicateForm();
      int int0 = (-143);
      streamTokenizer0.wordChars((-143), (-143));
      JSPredicateForm jSPredicateForm1 = jSTerm0.clonePF();
      stringReader0.reset();
      JSPredicateForm jSPredicateForm2 = jSTerm0.clonePF();
      jSPredicateForm0.equals(jSPredicateForm2);
      jSPredicateForm1.toStr();
      String string0 = "(";
      JSPredicateForm jSPredicateForm3 = null;
      try {
        jSPredicateForm3 = new JSPredicateForm("(");
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.1148309362237407
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StringReader stringReader0 = new StringReader("w4}~dGUal;%N_CS2");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.add((Object) jSTerm0);
      jSTerm0.firstElement();
      jSTerm0.makeEval(false);
      jSTerm0.toStr();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      jSTerm0.toStr();
      jSTerm0.iterator();
      jSSubstitution1.trimToSize();
      JSSubstitution jSSubstitution2 = new JSSubstitution();
      JSPredicateForm jSPredicateForm0 = jSTerm0.applySubstitutionPF(jSSubstitution2);
      JSSubstitution jSSubstitution3 = new JSSubstitution();
      JSSubstitution jSSubstitution4 = jSTerm0.matches(jSPredicateForm0, jSSubstitution1);
      assertFalse(jSSubstitution4.fail());
      
      boolean boolean0 = jSTerm0.equals(jSPredicateForm0);
      assertTrue(boolean0);
      
      jSTerm0.clonePF();
      System.setCurrentTimeMillis(1L);
      jSTerm0.standarizerPredicateForm();
      JSPredicateForm jSPredicateForm1 = jSTerm0.standarizerPredicateForm();
      assertTrue(jSPredicateForm1.equals((Object)jSPredicateForm0));
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.9330436228738463
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StringReader stringReader0 = new StringReader("L~ne : ");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.add((Object) jSTerm0);
      jSTerm0.firstElement();
      jSTerm0.makeEval(false);
      StringBuffer stringBuffer0 = jSTerm0.toStr();
      boolean boolean0 = jSTerm0.equals((JSPredicateForm) jSTerm0);
      assertTrue(boolean0);
      
      StringBuffer stringBuffer1 = jSTerm0.toStr();
      jSTerm0.toStr();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSPredicateForm jSPredicateForm0 = jSTerm0.applySubstitutionPF(jSSubstitution0);
      JSPredicateForm jSPredicateForm1 = jSTerm0.clonePF();
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) stringBuffer0;
      objectArray0[1] = (Object) stringBuffer1;
      objectArray0[2] = (Object) streamTokenizer0;
      jSPredicateForm1.toArray(objectArray0);
      StringReader stringReader1 = new StringReader("lne:");
      stringReader0.reset();
      StringBuffer stringBuffer2 = jSPredicateForm1.toStr();
      assertEquals(9, stringBuffer2.length());
      assertTrue(jSPredicateForm1.equals((Object)jSPredicateForm0));
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.12412062657167
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StringReader stringReader0 = new StringReader("LHn : ");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSPredicateForm jSPredicateForm0 = jSTerm0.standarizerPredicateForm();
      streamTokenizer0.wordChars((-143), (-143));
      streamTokenizer0.commentChar((-143));
      JSPredicateForm jSPredicateForm1 = jSPredicateForm0.standarizerPredicateForm();
      stringReader0.reset();
      streamTokenizer0.slashSlashComments(false);
      StringReader stringReader1 = new StringReader("LHn : ");
      jSPredicateForm0.print();
      streamTokenizer0.wordChars((-3), (-1082982695));
      jSPredicateForm1.isEmpty();
      jSPredicateForm0.parallelStream();
      JSPredicateForm jSPredicateForm2 = (JSPredicateForm)jSPredicateForm1.clone();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSPredicateForm jSPredicateForm3 = jSTerm0.applySubstitutionPF(jSSubstitution0);
      jSTerm0.add((Object) jSPredicateForm3);
      jSPredicateForm1.isEmpty();
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      JSPredicateForm jSPredicateForm4 = new JSPredicateForm();
      JSPredicateForm jSPredicateForm5 = jSPredicateForm1.standarizerPredicateForm();
      jSPredicateForm0.equals((JSPredicateForm) jSTerm0);
      JSPredicateForm jSPredicateForm6 = jSPredicateForm5.clonePF();
      JSSubstitution jSSubstitution2 = new JSSubstitution();
      JSPredicateForm jSPredicateForm7 = jSPredicateForm0.applySubstitutionPF(jSSubstitution2);
      JSPredicateForm jSPredicateForm8 = jSPredicateForm2.standarizerPredicateForm();
      jSPredicateForm6.equals(jSPredicateForm8);
      jSTerm0.equals(jSPredicateForm7);
      jSPredicateForm6.clonePF();
      jSPredicateForm5.print();
      assertEquals("[LHn, [LHn]]", jSTerm0.toString());
      assertNotSame(jSPredicateForm0, jSPredicateForm7);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.790024509383223
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StringReader stringReader0 = new StringReader("L~ne : ");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.add((Object) jSTerm0);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSTerm0.print();
      JSPredicateForm jSPredicateForm0 = jSTerm0.clonePF();
      jSTerm0.toStr();
      JSPredicateForm jSPredicateForm1 = jSTerm0.applySubstitutionPF(jSSubstitution0);
      JSPredicateForm jSPredicateForm2 = jSTerm0.standarizerPredicateForm();
      assertTrue(jSPredicateForm2.equals((Object)jSPredicateForm0));
      assertTrue(jSPredicateForm2.equals((Object)jSPredicateForm1));
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.6720963057159326
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StringReader stringReader0 = new StringReader("L~ne : ");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.add((Object) jSTerm0);
      jSTerm0.firstElement();
      jSTerm0.toStr();
      jSTerm0.equals((JSPredicateForm) jSTerm0);
      jSTerm0.toStr();
      jSTerm0.toStr();
      jSTerm0.print();
      JSPredicateForm jSPredicateForm0 = jSTerm0.clonePF();
      jSPredicateForm0.print();
      jSTerm0.toStr();
      // Undeclared exception!
      try { 
        jSTerm0.subList(32, (-2316));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(32) > toIndex(-2316)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.9726640809448295
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StringReader stringReader0 = new StringReader("L~ne : ");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSPredicateForm jSPredicateForm0 = jSTerm0.standarizerPredicateForm();
      JSPredicateForm jSPredicateForm1 = jSPredicateForm0.standarizerPredicateForm();
      jSPredicateForm1.toStr();
      jSPredicateForm1.standarizerPredicateForm();
      jSPredicateForm0.equals(jSPredicateForm1);
      jSTerm0.add((Object) null);
      // Undeclared exception!
      try { 
        jSTerm0.clonePF();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.2162443181522673
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StringReader stringReader0 = new StringReader("L~ne : ");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSPredicateForm jSPredicateForm0 = jSTerm0.standarizerPredicateForm();
      streamTokenizer0.wordChars((-143), (-143));
      JSPredicateForm jSPredicateForm1 = jSTerm0.clonePF();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSPredicateForm jSPredicateForm2 = jSPredicateForm1.applySubstitutionPF(jSSubstitution0);
      JSPredicateForm jSPredicateForm3 = jSPredicateForm1.standarizerPredicateForm();
      jSPredicateForm3.print();
      stringReader0.markSupported();
      jSTerm0.stream();
      jSSubstitution0.add((Object) jSTerm0);
      streamTokenizer0.lowerCaseMode(true);
      // Undeclared exception!
      try { 
        jSPredicateForm2.matches(jSPredicateForm0, jSSubstitution0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // umd.cs.shop.JSTerm cannot be cast to umd.cs.shop.JSPairVarTerm
         //
         verifyException("umd.cs.shop.JSSubstitution", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.8505612088663046
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StringReader stringReader0 = new StringReader("L~ne : ");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      stringReader0.reset();
      jSTerm0.add((Object) null);
      jSTerm0.firstElement();
      jSTerm0.toStr();
      // Undeclared exception!
      try { 
        jSTerm0.equals((JSPredicateForm) jSTerm0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      System.setCurrentTimeMillis(3322L);
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm((StreamTokenizer) null);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StringReader stringReader0 = new StringReader("L~ne : ");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.add((Object) streamTokenizer0);
      Object object0 = jSTerm0.firstElement();
      jSTerm0.add(object0);
      // Undeclared exception!
      try { 
        jSTerm0.toStr();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.io.StreamTokenizer cannot be cast to umd.cs.shop.JSTerm
         //
         verifyException("umd.cs.shop.JSTerm", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.068193745560312
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StringReader stringReader0 = new StringReader("w4}~dGUal;%N_CS2");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.add((Object) jSTerm0);
      jSTerm0.firstElement();
      jSTerm0.makeEval(false);
      jSTerm0.toStr();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      jSTerm0.toStr();
      jSTerm0.iterator();
      jSSubstitution0.trimToSize();
      JSSubstitution jSSubstitution2 = new JSSubstitution();
      JSPredicateForm jSPredicateForm0 = jSTerm0.applySubstitutionPF(jSSubstitution2);
      JSSubstitution jSSubstitution3 = new JSSubstitution();
      JSSubstitution jSSubstitution4 = jSPredicateForm0.matches((JSPredicateForm) jSTerm0, jSSubstitution0);
      assertFalse(jSSubstitution4.fail());
      
      boolean boolean0 = jSTerm0.equals((JSPredicateForm) null);
      assertFalse(boolean0);
      
      JSPredicateForm jSPredicateForm1 = jSPredicateForm0.clonePF();
      assertEquals("[%%%, [%%%]]", jSPredicateForm0.toString());
      assertNotSame(jSPredicateForm0, jSPredicateForm1);
      
      System.setCurrentTimeMillis((-2997));
      JSPredicateForm jSPredicateForm2 = jSTerm0.standarizerPredicateForm();
      JSPredicateForm jSPredicateForm3 = jSTerm0.standarizerPredicateForm();
      assertTrue(jSPredicateForm3.equals((Object)jSPredicateForm1));
      assertNotSame(jSPredicateForm3, jSPredicateForm2);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.099811773199209
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StringReader stringReader0 = new StringReader("L~ne : ");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSPredicateForm jSPredicateForm0 = jSTerm0.standarizerPredicateForm();
      JSPredicateForm jSPredicateForm1 = jSPredicateForm0.standarizerPredicateForm();
      jSTerm0.toStr();
      JSPredicateForm jSPredicateForm2 = jSPredicateForm1.standarizerPredicateForm();
      jSPredicateForm2.equals((JSPredicateForm) jSTerm0);
      jSPredicateForm1.clonePF();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSTerm0.removeAll(jSPredicateForm1);
      jSPredicateForm2.matches(jSPredicateForm1, jSSubstitution0);
      Consumer<Integer> consumer0 = (Consumer<Integer>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      jSPredicateForm0.forEach(consumer0);
      JSPredicateForm jSPredicateForm3 = new JSPredicateForm();
      // Undeclared exception!
      try { 
        jSTerm0.matches(jSPredicateForm3);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.9680111884158085
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StringReader stringReader0 = new StringReader("LHn : ");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSPredicateForm jSPredicateForm0 = jSTerm0.standarizerPredicateForm();
      streamTokenizer0.wordChars(32, 32);
      JSPredicateForm jSPredicateForm1 = jSTerm0.standarizerPredicateForm();
      jSPredicateForm1.equals(jSPredicateForm0);
      JSPredicateForm jSPredicateForm2 = jSPredicateForm1.clonePF();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSPredicateForm2.matches(jSPredicateForm0, jSSubstitution0);
      jSPredicateForm2.setSize(32);
      Consumer<Integer> consumer0 = (Consumer<Integer>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      jSPredicateForm0.forEach(consumer0);
      // Undeclared exception!
      try { 
        jSPredicateForm2.standarizerPredicateForm();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      String string0 = "LHn : ";
      StringReader stringReader0 = new StringReader("LHn : ");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.add((Object) "LHn : ");
      // Undeclared exception!
      try { 
        jSTerm0.standarizerPredicateForm();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to umd.cs.shop.JSTerm
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.9909065731902369
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      StringReader stringReader0 = new StringReader("L~ne : ");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      streamTokenizer0.wordChars((-143), (-143));
      jSTerm0.add((Object) "<}I!4fWRJ");
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      char[] charArray0 = new char[8];
      charArray0[1] = '';
      charArray0[2] = '>';
      charArray0[3] = ')';
      charArray0[4] = '>';
      charArray0[5] = '4';
      charArray0[6] = '|';
      charArray0[7] = '2';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      stringReader0.read(charBuffer0);
      // Undeclared exception!
      try { 
        jSTerm0.clonePF();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to umd.cs.shop.JSTerm
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.2113169331533986
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      StringReader stringReader0 = new StringReader("LHn : ");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm((String) null);
      streamTokenizer0.wordChars(32, 32);
      JSPredicateForm jSPredicateForm1 = jSTerm0.clonePF();
      jSPredicateForm1.equals(jSPredicateForm0);
      JSPredicateForm jSPredicateForm2 = jSPredicateForm1.clonePF();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSPredicateForm2.matches(jSPredicateForm0, jSSubstitution0);
      jSPredicateForm2.setSize(32);
      Consumer<Integer> consumer0 = (Consumer<Integer>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      jSPredicateForm0.forEach(consumer0);
      // Undeclared exception!
      try { 
        jSPredicateForm2.standarizerPredicateForm();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Line : ");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.print();
      JSPredicateForm jSPredicateForm0 = null;
      // Undeclared exception!
      try { 
        jSTerm0.matches((JSPredicateForm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("not");
      StringReader stringReader2 = new StringReader("");
      StringReader stringReader3 = new StringReader(">E3xG,5]&g`=JDq");
      stringReader1.markSupported();
      StringReader stringReader4 = new StringReader("%%%");
      stringReader1.read();
      char[] charArray0 = new char[7];
      charArray0[0] = ':';
      stringReader0.mark(110);
      charArray0[1] = '.';
      charArray0[2] = 'y';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      stringReader3.read(charBuffer0);
      stringReader0.skip((-1936L));
      stringReader3.skip(1L);
      StringBuffer stringBuffer0 = jSPredicateForm0.toStr();
      assertEquals("", stringBuffer0.toString());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      StringReader stringReader0 = new StringReader("L~neg= ");
      StringReader stringReader1 = new StringReader("call");
      StringReader stringReader2 = new StringReader("=q,vkxeQ@\\V2");
      StringReader stringReader3 = new StringReader("not");
      StringReader stringReader4 = new StringReader("=q,vkxeQ@\\V2");
      StringReader stringReader5 = new StringReader("=q,vkxeQ@\\V2");
      stringReader2.skip(1L);
      stringReader2.skip((-2304L));
      JSTerm jSTerm0 = new JSTerm();
      // Undeclared exception!
      try { 
        jSTerm0.toStr();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.9909065731902369
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Line : ");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.firstElement();
      jSTerm0.add((Object) streamTokenizer0);
      // Undeclared exception!
      try { 
        jSTerm0.applySubstitutionPF((JSSubstitution) null);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.io.StreamTokenizer cannot be cast to umd.cs.shop.JSTerm
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.964763373583426
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      String string0 = "";
      jSPredicateForm0.addElement("");
      jSPredicateForm0.trimToSize();
      jSPredicateForm0.print();
      JSPredicateForm jSPredicateForm1 = new JSPredicateForm();
      JSPredicateForm jSPredicateForm2 = jSPredicateForm0.clonePF();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSPredicateForm1.matches(jSPredicateForm2, jSSubstitution0);
      jSPredicateForm2.setSize(2170);
      Consumer<Integer> consumer0 = (Consumer<Integer>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      jSPredicateForm2.forEach(consumer0);
      // Undeclared exception!
      try { 
        jSPredicateForm1.standarizerPredicateForm();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Line : ");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      // Undeclared exception!
      try { 
        jSTerm0.matches((JSPredicateForm) null, jSSubstitution0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      StringReader stringReader0 = new StringReader("");
      char[] charArray0 = new char[2];
      charArray0[0] = '+';
      charArray0[1] = 'h';
      stringReader0.read(charArray0);
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      stringReader0.close();
      // Undeclared exception!
      try { 
        jSPredicateForm0.JSPredicateFormInit(streamTokenizer0);
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.5024394560409373
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      StringReader stringReader0 = new StringReader("L~ne : ");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSPredicateForm jSPredicateForm0 = jSTerm0.standarizerPredicateForm();
      JSPredicateForm jSPredicateForm1 = jSPredicateForm0.standarizerPredicateForm();
      jSTerm0.toStr();
      JSPredicateForm jSPredicateForm2 = jSPredicateForm1.standarizerPredicateForm();
      jSPredicateForm2.equals((JSPredicateForm) jSTerm0);
      jSPredicateForm1.clonePF();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSPredicateForm2.matches(jSPredicateForm1, jSSubstitution0);
      Consumer<Integer> consumer0 = (Consumer<Integer>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      jSPredicateForm0.forEach(consumer0);
      JSPredicateForm jSPredicateForm3 = new JSPredicateForm();
      jSTerm0.matches(jSPredicateForm3);
      JSTerm jSTerm1 = new JSTerm();
      JSPredicateForm jSPredicateForm4 = jSPredicateForm2.applySubstitutionPF(jSSubstitution0);
      jSPredicateForm4.applySubstitutionPF(jSSubstitution0);
      JSPredicateForm jSPredicateForm5 = null;
      try {
        jSPredicateForm5 = new JSPredicateForm(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.430557412932775
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      StringReader stringReader0 = new StringReader("L~ne : ");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSPredicateForm jSPredicateForm0 = jSTerm0.standarizerPredicateForm();
      JSPredicateForm jSPredicateForm1 = jSPredicateForm0.standarizerPredicateForm();
      jSPredicateForm1.toStr();
      JSPredicateForm jSPredicateForm2 = jSPredicateForm1.standarizerPredicateForm();
      JSJshopVars.coma = 32;
      jSPredicateForm0.equals(jSPredicateForm1);
      JSPredicateForm jSPredicateForm3 = jSTerm0.clonePF();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSSubstitution jSSubstitution1 = jSPredicateForm2.matches(jSPredicateForm3, jSSubstitution0);
      Consumer<Integer> consumer0 = (Consumer<Integer>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      jSPredicateForm3.forEach(consumer0);
      JSPredicateForm jSPredicateForm4 = new JSPredicateForm();
      jSTerm0.matches(jSPredicateForm0);
      jSTerm0.applySubstitutionPF(jSSubstitution1);
      // Undeclared exception!
      try { 
        jSPredicateForm4.applySubstitutionPF(jSSubstitution0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Object[] objectArray0 = new Object[8];
      Object object0 = new Object();
      objectArray0[1] = object0;
      System.setCurrentTimeMillis(0L);
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      StringReader stringReader0 = new StringReader("not");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      // Undeclared exception!
      try { 
        jSPredicateForm0.JSPredicateFormInit(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      System.setCurrentTimeMillis(3322L);
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.removeAllElements();
      JSTerm jSTerm1 = new JSTerm();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      // Undeclared exception!
      try { 
        jSTerm0.matches((JSPredicateForm) jSTerm1, jSSubstitution0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      StringReader stringReader0 = new StringReader("L~ne : ");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.add((Object) jSTerm0);
      jSTerm0.firstElement();
      jSTerm0.makeEval(false);
      jSTerm0.toStr();
      // Undeclared exception!
      try { 
        jSTerm0.equals((JSPredicateForm) jSTerm0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // umd.cs.shop.JSTerm cannot be cast to java.lang.String
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.spliterator();
      JSTerm jSTerm1 = new JSTerm();
      jSTerm1.containsAll(jSTerm0);
      jSTerm1.clear();
      jSTerm1.spliterator();
      // Undeclared exception!
      try { 
        jSTerm0.equals((JSPredicateForm) jSTerm1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      JSJshopVars.flagLevel = 0;
      JSJshopVars.backquote = 0;
      jSPredicateForm0.print();
      jSTerm0.isEmpty();
      jSTerm0.removeAllElements();
      JSJshopVars.rightBrac = 0;
      Consumer<Integer> consumer0 = (Consumer<Integer>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      jSPredicateForm0.forEach(consumer0);
      jSTerm0.isEmpty();
      jSPredicateForm0.isEmpty();
      JSJshopVars.rightBrac = 0;
      System.setCurrentTimeMillis(0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Object object0 = new Object();
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = object0;
      objectArray0[1] = object0;
      objectArray0[5] = object0;
      objectArray0[7] = object0;
      System.setCurrentTimeMillis(0L);
      JSTerm jSTerm0 = new JSTerm();
      // Undeclared exception!
      try { 
        jSTerm0.clonePF();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm("#z_hp[S|z=-yMTU");
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm("wFQ<TUn8");
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.6868359830561608
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      String string0 = "(k[emN-`^^5eKGE2.(";
      StringReader stringReader0 = new StringReader("(k[emN-`^^5eKGE2.(");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      JSJshopVars.flagLevel = 0;
      JSJshopVars.backquote = 0;
      // Undeclared exception!
      try { 
        jSTerm0.print();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }
}
