/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 02:59:44 GMT 2019
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileDescriptor;
import java.io.FilterOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.OutputStream;
import java.io.PipedOutputStream;
import java.io.SequenceInputStream;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.1054264953948976
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Player player0 = new Player(256, "", "", 0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      Party party0 = new Party();
      player0.next = party0;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      player0.setDead((-3089L), true);
      player0.setY((-3089L));
      player0.id = (-1608);
      player0.setDead(0L);
      player0.type();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      player0.getStrength();
      player0.setY((-3089L));
      party0.add(player0);
      player0.boss = party0;
      player0.setMoney(0.0F);
      party0.remove(player0);
      player0.getY();
      player0.getName();
      player0.getStrength();
      player0.gangStrength();
      player0.getName();
      player0.pack();
      player0.pack();
      player0.type();
      player0.gangStrength();
      player0.pack();
      assertTrue(player0.isDead());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.5316530014520002
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Player player0 = new Player(3, "0.0.0.0", "0.0.0.0", 3, 3);
      player0.setY(3);
      player0.setZ(520.0F);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "0.0.0.0");
      player0.setDead((long) 3);
      byte[] byteArray0 = player0.pack();
      Player player1 = new Player(1272, "0.0.0.0", "", 0);
      player1.prev = (Party) player0;
      player1.isConnected();
      player1.unpack(byteArray0);
      player0.setX((-1303.5709F));
      player1.id = (int) (short)4919;
      player0.id = (int) (short)4919;
      player0.type();
      player1.isConnected();
      player0.setZ(1272);
      player1.setJoinOK(player0, false);
      player1.getIP();
      player0.setJoinOK(player1, true);
      player0.isJoinOK(player1, true);
      player1.setDead((-1L), false);
      player1.getTimeOfDeath();
      player1.getStrength();
      player1.gangStrength();
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertEquals((-1L), player1.getTimeOfDeath());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.386202823118563
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Player player0 = new Player(3, "0.0.0.0", "0.0.0.0", 3, 3);
      player0.setY(3);
      player0.setDead((long) 3);
      player0.pack();
      player0.isJoinOK(player0, true);
      player0.setX((-1303.5709F));
      player0.id = 1272;
      player0.type();
      player0.isConnected();
      player0.setZ(1272);
      player0.getIP();
      player0.setJoinOK(player0, true);
      player0.isJoinOK(player0, true);
      Player player1 = new Player((-13513));
      Player player2 = new Player((-24815), "0.0.0.0", "0.0.0.0", 5);
      player2.next = (Party) player0;
      player1.setJoinOK(player2, true);
      player0.isJoinOK(player2, false);
      player1.isDead();
      player2.getZ();
      player0.getX();
      assertEquals((-1303.5709F), player0.getX(), 0.01F);
      
      player2.type();
      System.setCurrentTimeMillis((short)4919);
      int int0 = player1.type();
      assertEquals(5, int0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.678706058817701
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Player player0 = new Player(3, "0.0.0.0", "0.0.0.0", 3, 3);
      player0.setY(3);
      player0.setDead((long) 3);
      player0.pack();
      int int0 = 1272;
      int int1 = 0;
      Player player1 = new Player(1272, "0.0.0.0", "", 0);
      player1.prev = (Party) player0;
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      try { 
        player1.pack(dataOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.125827073718919
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Player player0 = new Player(5, "state.Party", 4919);
      player0.setMoney(1.0F);
      player0.getMoney();
      File file0 = MockFile.createTempFile("state.Party", "module.ModuleBrowserDialog$ModuleFilter");
      Player player1 = new Player();
      player0.add(player1);
      MockPrintStream mockPrintStream0 = new MockPrintStream(file0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "state.Party");
      FilterOutputStream filterOutputStream0 = new FilterOutputStream(mockPrintStream0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(filterOutputStream0);
      dataOutputStream0.writeInt((short)4919);
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      mockFileInputStream0.getChannel();
      DataInputStream dataInputStream0 = new DataInputStream(mockFileInputStream0);
      dataInputStream0.readUTF();
      player0.unpack(dataInputStream0);
      player0.setDead(3641L);
      player0.setZ(0.0F);
      player1.getIP();
      player1.setJoinOK(player0, true);
      player1.isJoinOK(player0, false);
      player1.isDead();
      // Undeclared exception!
      try { 
        player1.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.969755134636486
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player();
      Party party0 = new Party();
      party0.boss = (Party) player0;
      player0.setX(0.0F);
      party0.boss = (Party) player0;
      party0.prev = (Party) player0;
      party0.prev.head = party0.boss;
      party0.id = (int) (short)4919;
      party0.prev.remove(party0.boss);
      party0.prev = (Party) player0;
      party0.prev.head = party0.boss;
      party0.prev.next = party0.boss;
      party0.prev.prev = party0.prev;
      party0.boss.next = party0.prev;
      party0.prev.prev.head = party0.boss;
      party0.prev.boss = party0.prev.prev;
      player0.setY(0.0F);
      player0.add(party0);
      player0.setZ(1222.908F);
      player0.setDead(15000L);
      player0.pack();
      player0.setDead(15000L);
      player0.setY(0.0F);
      player0.setMoney((-1.0F));
      player0.getMoney();
      player0.getY();
      float float0 = player0.getY();
      assertEquals(1222.908F, player0.getZ(), 0.01F);
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.881766240540306
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Player player0 = new Player();
      Party party0 = new Party();
      party0.boss = (Party) player0;
      player0.setX(0.0F);
      party0.boss = (Party) player0;
      party0.prev = (Party) player0;
      party0.id = (int) (short)4919;
      party0.prev.add(player0);
      party0.prev.remove(party0.boss);
      party0.prev = (Party) player0;
      party0.prev.head = party0.boss;
      party0.prev.next = party0.boss;
      party0.prev.prev = party0.prev;
      party0.prev.prev.head = party0.boss;
      party0.prev.boss = party0.prev.prev;
      party0.boss = (Party) player0;
      player0.setY(0.0F);
      player0.add(party0);
      player0.setZ(1222.908F);
      player0.setDead(15000L);
      player0.pack();
      player0.setDead(15000L);
      player0.setY(0.0F);
      player0.getZ();
      player0.getY();
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.3039214422364647
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player();
      Party party0 = player0.head;
      player0.head = null;
      Party party1 = new Party();
      party1.boss = (Party) player0;
      player0.setX(0.0F);
      player0.pack();
      Player player1 = new Player(0, "", "", 10);
      player1.isJoinOK(player0, true);
      player1.setX((-1.0F));
      player0.type();
      player1.isConnected();
      player0.setZ((-1.0F));
      Player player2 = new Player(10, ".igmL#Fm`#F;LT(3G", "", (short)4919, 0);
      player2.getIP();
      Player player3 = new Player();
      player1.setJoinOK(player3, false);
      player0.isJoinOK(player1, true);
      player2.isDead();
      player2.gangStrength();
      // Undeclared exception!
      try { 
        player1.unpack((DataInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player(5, "state.Party", 4919);
      player0.setMoney(1.0F);
      player0.getMoney();
      File file0 = MockFile.createTempFile("state.Party", "module.ModuleBrowserDialog$ModuleFilter");
      Player player1 = new Player();
      player0.add(player1);
      MockPrintStream mockPrintStream0 = new MockPrintStream(file0);
      FilterOutputStream filterOutputStream0 = new FilterOutputStream(mockPrintStream0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(filterOutputStream0);
      dataOutputStream0.writeLong((short)4919);
      dataOutputStream0.writeInt((short)4919);
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      mockFileInputStream0.getChannel();
      DataInputStream dataInputStream0 = new DataInputStream(mockFileInputStream0);
      dataInputStream0.readUTF();
      player0.unpack(dataInputStream0);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)82;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-53), (short)4919);
      DataInputStream dataInputStream1 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(6, mockFileInputStream0.available());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Player player0 = new Player(10, "", 10);
      player0.getName();
      player0.getMoney();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)17;
      byteArray0[1] = (byte)50;
      byteArray0[2] = (byte) (-84);
      byteArray0[3] = (byte)5;
      byteArray0[4] = (byte)36;
      byteArray0[5] = (byte) (-21);
      byteArray0[6] = (byte)26;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-84), 1);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Player player0 = new Player(228, "]k(6LcXmPf", 228);
      MockPrintStream mockPrintStream0 = new MockPrintStream("gui.ModuleBrowserDialog$ModuleFilter");
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream0);
      player0.pack(dataOutputStream0);
      byte byte0 = (byte)16;
      byte byte1 = (byte) (-61);
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.1757412430371352
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      Player player0 = new Player(3, "0.0.0.0", (String) null, 3, 3);
      player0.setY(3);
      player0.setDead((long) 3);
      Player player1 = new Player(1272, (String) null, "", 0);
      player1.prev = (Party) player0;
      player0.isJoinOK(player1, true);
      player0.setX((-1303.5709F));
      player0.id = 1272;
      player0.type();
      player1.isConnected();
      player0.setZ(1272);
      player1.getIP();
      player0.getIP();
      player0.gangStrength();
      player0.setX(1662.3F);
      player0.toString();
      Player player2 = new Player(1272, "0.0.0.0", "0.0.0.0", (-24815));
      player2.isJoinOK(player0, true);
      assertEquals(1272.0F, player0.getZ(), 0.01F);
      assertEquals(5, player2.type());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.995915324446307
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Player player0 = new Player();
      Party party0 = new Party();
      party0.boss = (Party) player0;
      player0.setX(0.0F);
      party0.boss = (Party) player0;
      party0.prev = (Party) player0;
      party0.id = (int) (short)4919;
      party0.prev.add(player0);
      party0.prev.remove(party0.boss);
      party0.prev = (Party) player0;
      FileSystemHandling.shouldAllThrowIOExceptions();
      party0.prev.head = party0.boss;
      party0.prev.next = party0.boss;
      party0.prev.prev = party0.prev;
      party0.prev.prev.head = party0.boss;
      party0.prev.boss = party0.prev.prev;
      party0.boss = (Party) player0;
      player0.setY(0.0F);
      player0.add(party0);
      player0.setZ(1222.908F);
      Player player1 = new Player((short)4919, (String) null, (String) null, (short)4919);
      player1.setJoinOK(player0, false);
      player1.isJoinOK(player0, false);
      assertEquals(1222.908F, player0.getZ(), 0.01F);
      
      Player player2 = new Player(4919, "Player.pack(): *** ERROR *** [IO] pack failed! current state is inconsistent: ", "", 4, 4919);
      player1.getZ();
      player1.getX();
      player1.type();
      Player player3 = new Player((short)4919, "", "}S}S !#e^8Sz6L", (-1074));
      boolean boolean0 = player2.isJoinOK(player3, false);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.241862695362889
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)122;
      byteArray0[1] = (byte) (-82);
      byteArray0[2] = (byte)42;
      byteArray0[3] = (byte) (-81);
      byteArray0[4] = (byte)37;
      byteArray0[5] = (byte) (-7);
      byteArray0[6] = (byte)5;
      byteArray0[7] = (byte)0;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Player player0 = new Player((-1650), "", "Player", (-1650));
      player0.gangStrength();
      Player player1 = (Player)player0.gangBoss();
      Party party0 = player0.next;
      player0.remove(player1);
      Player player2 = new Player(0, "\"^pc", (-2910));
      player0.setJoinOK(player1, true);
      player0.setDead(156L, true);
      player0.setMoney((-1646));
      player2.isConnected();
      player0.getPictureId();
      player1.setZ(156L);
      Player player3 = new Player(25600, "", "", 0);
      player1.remove(player0);
      player3.reset(true);
      player2.setJoinOK(player1, true);
      player0.pack();
      player3.setY((short)4919);
      player2.getStrength();
      player2.setJoinOK(player1, true);
      assertEquals((-1646.0F), player1.getMoney(), 0.01F);
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.9687776175299367
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Player player0 = new Player();
      Party party0 = new Party();
      party0.boss = (Party) player0;
      player0.setX(0.0F);
      party0.boss = (Party) player0;
      party0.prev = (Party) player0;
      party0.id = (int) (short)4919;
      party0.prev.add(player0);
      party0.prev.remove(party0.boss);
      party0.prev = (Party) player0;
      party0.prev.head = party0.boss;
      party0.prev.prev = party0.prev;
      party0.prev.prev.head = party0.boss;
      party0.prev.boss = party0.prev.prev;
      player0.setY(0.0F);
      player0.add(party0);
      player0.setZ(1222.908F);
      player0.setDead(15000L);
      player0.pack();
      player0.toString();
      player0.setDead(15000L);
      player0.setY(0.0F);
      player0.reset(false);
      float float0 = player0.getX();
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.417645625673435
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Player player0 = new Player(3, "0.0.0.0", "0.0.0.0", 3, 3);
      player0.setY(3);
      player0.setDead((long) 3);
      player0.pack();
      Player player1 = new Player(0, (String) null, (String) null, 1272);
      player0.isConnected();
      player0.setX((-2740.2007F));
      player1.type();
      player1.isConnected();
      player0.setZ(0.1F);
      player1.getIP();
      Player player2 = new Player((short)4919);
      player1.setJoinOK(player2, true);
      player1.isJoinOK(player0, true);
      player1.isDead();
      player0.gangStrength();
      Player player3 = new Player((short)4919, (String) null, "state.Player", 3);
      // Undeclared exception!
      try { 
        player3.unpack((DataInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.880653893488026
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Player player0 = new Player();
      Party party0 = new Party();
      party0.boss = (Party) player0;
      player0.setX(0.7933059F);
      party0.boss = (Party) player0;
      party0.prev = (Party) player0;
      party0.id = (int) (short)4919;
      party0.prev.add(player0);
      party0.prev.remove(party0.boss);
      party0.prev = (Party) player0;
      party0.prev.head = party0.boss;
      player0.setY((-1.0F));
      player0.add(party0.prev.head);
      player0.setZ((-1.0F));
      player0.setDead(15000L);
      player0.pack();
      player0.setDead((long) 4919);
      player0.setY(15000L);
      player0.getZ();
      float float0 = player0.getY();
      assertEquals(0.7933059F, player0.getX(), 0.01F);
      assertEquals(15000.0F, float0, 0.01F);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.613249311780157
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Player player0 = new Player(3, "0.0.0.0", "0.0.0.0", 3, 3);
      player0.setY(3);
      player0.setDead((long) 3);
      player0.pack();
      Player player1 = new Player(1272, "0.0.0.0", "", 0);
      player1.prev = (Party) player0;
      player0.isJoinOK(player1, true);
      player0.setX((-1303.5709F));
      player0.id = 1272;
      player0.type();
      player1.isConnected();
      player0.setZ(1272);
      player1.toString();
      Player player2 = new Player();
      player2.getTimeOfDeath();
      player1.getTimeOfDeath();
      Player player3 = new Player(866, "`Y+@L'vm^", "state.Party", 1825, (-1182));
      player3.prev = player1.prev;
      player3.getIP();
      player2.gangStrength();
      player3.setX(1272);
      player3.toString();
      player0.setY((-2265.0F));
      player0.getStrength();
      assertEquals((-2265.0F), player0.getY(), 0.01F);
      
      player1.setJoinOK(player2, false);
      float float0 = player1.getY();
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.675485446901437
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Player player0 = new Player((-5914));
      Player player1 = new Player((short)4919, "MMNCFt*KIZ7s", (-5914));
      player0.setZ((short)4919);
      player0.setJoinOK(player1, false);
      player0.setY((-1.0F));
      player0.setY(0.2F);
      player0.toString();
      assertEquals(0.2F, player0.getY(), 0.01F);
      
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)100;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-31);
      byteArray0[3] = (byte) (-109);
      byteArray0[4] = (byte)93;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte) (-75);
      byteArray0[7] = (byte)50;
      player1.unpack(byteArray0);
      assertFalse(player1.isDead());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.8778952727983707
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Player player0 = new Player();
      Party party0 = new Party();
      party0.boss = (Party) player0;
      player0.setX(0.0F);
      party0.boss = (Party) player0;
      party0.prev = (Party) player0;
      party0.id = (int) (short)4919;
      party0.prev.id = 4919;
      party0.prev.add(player0);
      party0.prev.remove(party0.boss);
      party0.prev = (Party) player0;
      FileSystemHandling.shouldAllThrowIOExceptions();
      party0.prev.head = party0.boss;
      party0.prev.next = party0.boss;
      party0.prev.prev = party0.prev;
      party0.prev.prev.head = party0.boss;
      party0.prev.boss = party0.prev.prev;
      party0.boss = (Party) player0;
      player0.setY(0.0F);
      player0.add(party0);
      player0.setZ(1222.908F);
      Player player1 = new Player((short)4919, (String) null, (String) null, (short)4919);
      player1.setJoinOK(player0, true);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      // Undeclared exception!
      try { 
        player1.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.302244293389504
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Player player0 = new Player(5, "state.Party", 4919);
      player0.setMoney(1.0F);
      player0.getMoney();
      File file0 = MockFile.createTempFile("state.Party", "module.ModuleBrowserDialog$ModuleFilter");
      Player player1 = new Player();
      player0.add(player1);
      MockPrintStream mockPrintStream0 = new MockPrintStream(file0);
      FilterOutputStream filterOutputStream0 = new FilterOutputStream(mockPrintStream0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(filterOutputStream0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      dataOutputStream0.writeInt((short)4919);
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      mockFileInputStream0.getChannel();
      DataInputStream dataInputStream0 = new DataInputStream(mockFileInputStream0);
      dataInputStream0.readUTF();
      player0.unpack(dataInputStream0);
      player0.pack(dataOutputStream0);
      player0.getName();
      player0.toString();
      player0.getTimeOfDeath();
      player0.getTimeOfDeath();
      player0.getIP();
      player0.gangStrength();
      player0.setX(5);
      player0.toString();
      player1.getStrength();
      player1.setJoinOK(player0, false);
      assertEquals(1.0F, player0.getMoney(), 0.01F);
      
      float float0 = player1.getZ();
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.301727497523871
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Player player0 = new Player(5, "state.Party", 4919);
      player0.setMoney(1.0F);
      player0.getMoney();
      File file0 = MockFile.createTempFile("state.Party", "module.ModuleBrowserDialog$ModuleFilter");
      Player player1 = new Player();
      player0.add(player1);
      MockPrintStream mockPrintStream0 = new MockPrintStream(file0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "state.Party");
      FilterOutputStream filterOutputStream0 = new FilterOutputStream(mockPrintStream0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(filterOutputStream0);
      dataOutputStream0.writeInt((short)4919);
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      mockFileInputStream0.getChannel();
      DataInputStream dataInputStream0 = new DataInputStream(mockFileInputStream0);
      dataInputStream0.readUTF();
      player0.unpack(dataInputStream0);
      player0.setDead(3641L);
      player0.setZ(0.0F);
      player1.getIP();
      player1.setJoinOK(player0, true);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      player1.isDead();
      player0.getZ();
      player1.unpack(dataInputStream0);
      player0.gangStrength();
      player0.pack();
      assertEquals(3641L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.8827437576468555
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Player player0 = new Player();
      Party party0 = new Party();
      party0.boss = (Party) player0;
      player0.setX(0.0F);
      party0.boss = (Party) player0;
      party0.prev = (Party) player0;
      party0.id = (int) (short)4919;
      party0.prev.add(player0);
      party0.prev.remove(party0.boss);
      party0.prev = (Party) player0;
      party0.prev.getSubparty();
      party0.prev.head = party0.boss;
      party0.prev.prev = party0.prev;
      party0.prev.prev.head = party0.boss;
      party0.prev.boss = party0.prev.prev;
      player0.setY(0.0F);
      player0.add(party0);
      player0.setZ(1222.908F);
      player0.setDead(15000L);
      player0.pack();
      player0.setDead(15000L);
      player0.setY(0.0F);
      player0.setMoney((-1.0F));
      player0.pack();
      long long0 = player0.getTimeOfDeath();
      assertEquals((-1.0F), player0.getMoney(), 0.01F);
      assertEquals(15000L, long0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Player player0 = new Player(827, "state.Player$JoinInfo", 250);
      player0.getSubparty();
      player0.getTimeOfDeath();
      Party party0 = player0.prev;
      player0.next = null;
      player0.getTimeOfDeath();
      System.setCurrentTimeMillis(0L);
      float float0 = player0.getZ();
      assertEquals(0.0F, float0, 0.01F);
      
      float float1 = player0.getY();
      assertEquals(float1, float0, 0.01F);
      assertEquals(0.0F, float1, 0.01F);
      
      System.setCurrentTimeMillis(250);
      long long0 = player0.getTimeOfDeath();
      assertFalse(player0.isDead());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, long0);
      assertTrue(player0.isConnected());
      assertEquals(250, player0.getPictureId());
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.880653893488026
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Party party0 = new Party();
      Player player0 = new Player(0, "", 619);
      player0.setX(0.0F);
      Party party1 = new Party((-56));
      party1.remove(party0);
      player0.setY(619);
      player0.add(party1);
      player0.setZ((-56));
      player0.setDead(2936L);
      player0.pack();
      player0.toString();
      player0.setDead((long) (short)4919);
      player0.setY(2936L);
      player0.reset(false);
      assertEquals(2936.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Player player0 = new Player(10, "", "", (-2877));
      player0.getSubparty();
      player0.getY();
      DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) null);
      // Undeclared exception!
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataOutputStream", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Player player0 = new Player();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      player0.setDead();
      player0.getStrength();
      player0.getStrength();
      Enumeration<ObjectInputStream> enumeration0 = (Enumeration<ObjectInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      int int0 = (-2066);
      BufferedInputStream bufferedInputStream0 = null;
      try {
        bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0, (-2066));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Buffer size <= 0
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.2590752087262675
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Player player0 = new Player();
      Party party0 = new Party();
      party0.boss = (Party) player0;
      player0.setX(0.0F);
      party0.boss = (Party) player0;
      party0.prev = (Party) player0;
      party0.id = (int) (short)4919;
      party0.prev.add(player0);
      party0.prev.remove(party0.boss);
      party0.prev = (Party) player0;
      party0.prev.prev = party0.prev;
      party0.prev.prev.head = party0.boss;
      party0.prev.boss = party0.prev.prev;
      player0.setY(0.0F);
      player0.add(party0);
      player0.setZ(1222.908F);
      player0.setDead(15000L);
      player0.pack();
      player0.toString();
      player0.setDead((-3257L), false);
      player0.getPictureId();
      Player player1 = new Player(2147340491, "", "", (short)4919, (-2026));
      player1.setJoinOK(player0, false);
      assertEquals((-3257L), player0.getTimeOfDeath());
      assertEquals("Player-1", player0.getName());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Player player0 = new Player(1, "0.0.0.0", 5);
      player0.type();
      player0.getPictureId();
      player0.getTimeOfDeath();
      player0.pack();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      ObjectInputStream objectInputStream0 = null;
      try {
        objectInputStream0 = new ObjectInputStream(mockFileInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.NativeMockedIO", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.376742981833967
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Player player0 = new Player();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      player0.id = (-482);
      player0.setZ((-699.9F));
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "iV`3/nyxS{(");
      player0.setZ((-699.9F));
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      player0.reset(true);
      player0.type();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "iV`3/nyxS{(");
      player0.gangStrength();
      long long0 = player0.getTimeOfDeath();
      assertEquals((-699.9F), player0.getZ(), 0.01F);
      assertEquals(0L, long0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Player player0 = new Player();
      player0.setDead((-1L));
      player0.setConnected(false);
      player0.getMoney();
      player0.isConnected();
      player0.setDead(1688L);
      assertEquals(1688L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Player player0 = new Player(0, "", "state.Player", 0);
      float float0 = player0.getMoney();
      assertEquals(0, player0.getPictureId());
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals("", player0.getIP());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.4221006252457893
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Player player0 = new Player(5, "state.Party", 4919);
      player0.setMoney(1.0F);
      player0.getMoney();
      File file0 = MockFile.createTempFile("state.Party", "module.ModuleBrowserDialog$ModuleFilter");
      Player player1 = new Player();
      player0.add(player1);
      assertEquals(1.0F, player0.getMoney(), 0.01F);
      
      MockPrintStream mockPrintStream0 = new MockPrintStream(file0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "state.Party");
      FilterOutputStream filterOutputStream0 = new FilterOutputStream(mockPrintStream0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(filterOutputStream0);
      dataOutputStream0.writeInt((short)4919);
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      mockFileInputStream0.getChannel();
      DataInputStream dataInputStream0 = new DataInputStream(mockFileInputStream0);
      dataInputStream0.readUTF();
      Player player2 = new Player((short)4919, "state.Party", "module.ModuleBrowserDialog$ModuleFilter", 5, (short)4919);
      assertEquals(10.0F, player2.getX(), 0.01F);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Player player0 = new Player(4919, "module.ModuleBrowserDialog$ModuleFilter", "state.Party", 173, (-13513));
      player0.setConnected(false);
      player0.setDead(3151L, false);
      player0.getX();
      float float0 = player0.getZ();
      assertEquals(3151L, player0.getTimeOfDeath());
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.130860608303783
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Player player0 = new Player(3, "0.0.0.0", "0.0.0.0", 3, 3);
      player0.setY(3);
      player0.setDead((long) 3);
      player0.pack();
      Player player1 = new Player(1272, "0.0.0.0", "", 0);
      player1.prev = (Party) player0;
      player1.isConnected();
      player0.setX((-1303.5709F));
      player0.id = (int) (short)4919;
      player0.setY(0.2F);
      Player player2 = new Player(1272);
      player2.add(player1);
      player2.setZ(1724.53F);
      player0.setDead((-2972L));
      player0.pack();
      player0.setDead(0L);
      Player player3 = new Player(4919, "0.0.0.0", (String) null, (-13513), 1);
      player3.setY((-1478.31F));
      player3.getZ();
      assertEquals((-1478.31F), player3.getY(), 0.01F);
      
      float float0 = player1.getY();
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.2654436797543704
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Player player0 = new Player(4919, "module.ModuleBrowserDialog$ModuleFilter", "state.Party", 173, 2147340491);
      assertEquals(2147340491, player0.getStrength());
      assertEquals("module.ModuleBrowserDialog$ModuleFilter", player0.getIP());
      
      System.setCurrentTimeMillis(643L);
      Player player1 = new Player(1411, "state.Party", "state.Party", (-1350));
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)1;
      byteArray0[4] = (byte)30;
      player1.unpack(byteArray0);
      assertTrue(player1.isConnected());
      assertEquals(1, player1.getStrength());
      assertEquals((-1350), player1.getPictureId());
      assertFalse(player1.isDead());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(0.0F, player1.getY(), 0.01F);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.436242257854965
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Player player0 = new Player((-1208), "", "", (-1208), 337);
      player0.setY((-1208));
      player0.setDead((long) (-1208));
      player0.pack();
      Player player1 = new Player(25600, "", "state.Party", (-47));
      player0.isJoinOK(player1, true);
      player0.setX(3);
      player0.type();
      player1.isConnected();
      player0.setZ((-47));
      player1.getIP();
      player0.setJoinOK(player1, false);
      Player player2 = new Player((-47), "", "", 1869, 5);
      player2.setJoinOK(player0, true);
      assertEquals((-47.0F), player0.getZ(), 0.01F);
      
      Player player3 = new Player();
      player1.isJoinOK(player3, false);
      float float0 = player1.getZ();
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Player player0 = new Player((-1277), "", "", 31442);
      player0.pack();
      assertEquals(31442, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.8240859905178586
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Player player0 = new Player();
      Party party0 = new Party();
      party0.boss = (Party) player0;
      player0.setX(0.0F);
      party0.boss = (Party) player0;
      party0.prev = (Party) player0;
      party0.id = (int) (short)4919;
      party0.prev.add(player0);
      party0.prev.remove(party0.boss);
      party0.prev = (Party) player0;
      FileSystemHandling.shouldAllThrowIOExceptions();
      party0.prev.head = party0.boss;
      party0.prev.next = party0.boss;
      party0.prev.prev = party0.prev;
      party0.prev.prev.head = party0.boss;
      party0.prev.boss = party0.prev.prev;
      party0.boss = (Party) player0;
      player0.setY(0.0F);
      player0.add(party0);
      player0.setZ(1222.908F);
      Player player1 = new Player((short)4919, (String) null, (String) null, (short)4919);
      player1.setJoinOK(player0, true);
      player1.isJoinOK(player0, false);
      assertEquals(1222.908F, player0.getZ(), 0.01F);
      
      player1.getZ();
      player1.getX();
      Player player2 = new Player((short)4919, "", "}S}S !#e^8Sz6L", (-1074));
      boolean boolean0 = player1.isJoinOK(player2, false);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Player player0 = new Player();
      Party party0 = new Party((short)4919);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "='>DFo|Y=X");
      player0.add(party0);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      player0.unpack(byteArray0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-1", player0.toString());
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.8827437576468555
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Player player0 = new Player();
      Party party0 = new Party();
      party0.boss = (Party) player0;
      player0.setX(0.0F);
      party0.boss = (Party) player0;
      party0.prev = (Party) player0;
      party0.id = (int) (short)4919;
      party0.prev.add(player0);
      party0.prev.remove(party0.boss);
      party0.prev = (Party) player0;
      party0.prev.head = party0.boss;
      party0.prev.next = party0.boss;
      party0.prev.prev = party0.prev;
      party0.prev.prev.head = party0.boss;
      party0.prev.boss = party0.prev.prev;
      player0.setY(0.0F);
      player0.add(party0);
      player0.setZ(1222.908F);
      player0.setDead(15000L);
      byte[] byteArray0 = player0.pack();
      player0.setDead(15000L);
      player0.setY(0.0F);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
      byteArrayInputStream0.close();
      dataInputStream0.mark((-23));
      player0.unpack(dataInputStream0);
      float float0 = player0.getY();
      assertEquals(15000L, player0.getTimeOfDeath());
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.7874335778425303
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Player player0 = new Player();
      Party party0 = new Party();
      party0.boss = (Party) player0;
      Player player1 = new Player(4919, "d')AvWE0^AM", 2824);
      player1.setX(0.2F);
      player0.add(party0);
      player0.remove(party0);
      player0.setY(4919);
      player1.add((Party) null);
      player1.setZ(0.0F);
      Player player2 = new Player(2824, "d')AvWE0^AM", (String) null, (-1734));
      player0.isJoinOK(player1, false);
      assertEquals(4919.0F, player0.getY(), 0.01F);
      
      player1.getZ();
      player1.getX();
      Player player3 = new Player((-1734), "Player.pack(): *** ERROR *** [IO] pack failed! current state is inconsistent: ", "Player.pack(): *** ERROR *** [IO] pack failed! current state is inconsistent: ", (-1334));
      assertEquals(0L, player3.getTimeOfDeath());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.679983198025875
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Player player0 = new Player(1272, "0.0.0.0", "0.0.0.0", 0);
      player0.isConnected();
      player0.setZ(3488.4094F);
      player0.getIP();
      assertEquals(3488.4094F, player0.getZ(), 0.01F);
      
      Player player1 = new Player(2001);
      Player player2 = new Player(0, "0.0.0.0", "yw(gD(KPx", 759);
      Player player3 = new Player(25600);
      player3.getZ();
      player2.getX();
      int int0 = player1.type();
      assertEquals(5, int0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      Player player0 = new Player(132);
      player0.setMoney(132);
      System.setCurrentTimeMillis(132);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ",WJhY}4/u>!J~0L#");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      Player player0 = new Player((-1), (String) null, "gui.ModuleBrowserDialog$ModuleFilter", (-1), (-1));
      player0.gangStrength();
      System.setCurrentTimeMillis((-1740L));
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.8827437576468555
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Player player0 = new Player((-270));
      player0.setY(1081.3796F);
      Party party0 = player0.next;
      player0.add((Party) null);
      player0.setZ(1081.3796F);
      Player player1 = new Player(1337, (String) null, (String) null, 5056);
      player0.setJoinOK(player1, true);
      player1.isJoinOK(player0, false);
      player0.getZ();
      assertEquals(1081.3796F, player0.getY(), 0.01F);
      
      player1.getX();
      Player player2 = new Player((-9), "2J-%7*kwV1v2", "&E)TWXd`F", 1);
      player1.reset(false);
      boolean boolean0 = player1.isJoinOK(player2, true);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Player player0 = new Player(173, "module.ModuleBrowserDialog$ModuleFilter", "state.Party", 173, 173);
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.879376754279852
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Player player0 = new Player();
      Party party0 = new Party();
      party0.boss = (Party) player0;
      player0.setX(0.0F);
      party0.boss = (Party) player0;
      party0.prev = (Party) player0;
      party0.id = (int) (short)4919;
      party0.prev.add(player0);
      party0.prev.remove(party0.boss);
      party0.prev = (Party) player0;
      party0.prev.head = party0.boss;
      party0.prev.prev = party0.prev;
      party0.prev.prev.head = party0.boss;
      party0.prev.boss = party0.prev.prev;
      player0.setY(0.0F);
      player0.add(party0);
      player0.setZ(1222.908F);
      player0.setDead(15000L);
      player0.pack();
      Player player1 = new Player((short)4919);
      player0.isJoinOK(player1, false);
      player0.isDead();
      player1.setDead(15000L, true);
      assertEquals(15000L, player1.getTimeOfDeath());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.7853437136837007
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Player player0 = new Player();
      Party party0 = new Party();
      party0.boss = (Party) player0;
      player0.setX(0.0F);
      party0.boss = (Party) player0;
      party0.prev = (Party) player0;
      party0.id = (int) (short)4919;
      party0.prev.add(player0);
      party0.prev.remove(party0.boss);
      party0.prev = (Party) player0;
      party0.prev.head = party0.boss;
      party0.prev.next = party0.boss;
      party0.prev.prev = party0.prev;
      party0.prev.prev.head = party0.boss;
      party0.prev.boss = party0.prev.prev;
      party0.boss = (Party) player0;
      player0.setY(0.0F);
      player0.add(party0);
      player0.setZ(1222.908F);
      player0.setDead(15000L);
      player0.pack();
      player0.setDead(15000L);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      player0.setY(0.0F);
      player0.getZ();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      DataInputStream dataInputStream0 = new DataInputStream(mockFileInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(15000L, player0.getTimeOfDeath());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Player player0 = new Player(0, "]g%q`>", "Player.unpack(): *** WARNING *** [EOF] data was incomplete: ", 0, 4178);
      boolean boolean0 = player0.isDead();
      assertFalse(boolean0);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("]g%q`>", player0.getIP());
      assertEquals(4178, player0.getStrength());
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Player player0 = new Player(4919, "module.ModuleBrowserDialog$ModuleFilter", "state.Party", 173, 2147340491);
      Player player1 = new Player();
      player0.boss = (Party) player1;
      player0.setDead(2233L);
      player0.setDead(3151L, false);
      assertEquals(3151L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)2;
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte)1;
      byteArray0[5] = (byte)1;
      byteArray0[6] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-3368), (byte) (-1));
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      DataInputStream dataInputStream1 = new DataInputStream(byteArrayInputStream0);
      dataInputStream1.read();
      Player player0 = new Player((-3368));
      boolean boolean0 = player0.unpack(dataInputStream1);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertFalse(boolean0);
      assertEquals(1, player0.getStrength());
      assertEquals("Player-3368", player0.getName());
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Player player0 = new Player((-2998));
      String string0 = player0.getName();
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player-2998", string0);
      assertEquals(0, player0.getPictureId());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(player0.isConnected());
  }
}
