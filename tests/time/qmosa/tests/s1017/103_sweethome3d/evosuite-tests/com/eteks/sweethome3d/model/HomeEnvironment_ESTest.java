/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 03:08:18 GMT 2019
 */

package com.eteks.sweethome3d.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.eteks.sweethome3d.model.AspectRatio;
import com.eteks.sweethome3d.model.Camera;
import com.eteks.sweethome3d.model.CatalogTexture;
import com.eteks.sweethome3d.model.Content;
import com.eteks.sweethome3d.model.HomeEnvironment;
import com.eteks.sweethome3d.model.HomeTexture;
import com.eteks.sweethome3d.model.TexturesCategory;
import com.eteks.sweethome3d.tools.ResourceURLContent;
import com.eteks.sweethome3d.tools.TemporaryURLContent;
import com.eteks.sweethome3d.tools.URLContent;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeListenerProxy;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLStreamHandler;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HomeEnvironment_ESTest extends HomeEnvironment_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.0871068051485753
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, 0, 1045.6F);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy((String) null, propertyChangeListener0);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment(16, (HomeTexture) null, 16, (-3505), 0.0F);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setPhotoHeight(0);
      homeEnvironment1.setVideoFrameRate(221);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      HomeEnvironment homeEnvironment2 = new HomeEnvironment((-374), (HomeTexture) null, 3, (-3107), (-2053.0F));
      homeEnvironment1.getLightColor();
      homeEnvironment2.setCeillingLightColor(843);
      homeEnvironment0.getPhotoQuality();
      HomeEnvironment homeEnvironment3 = new HomeEnvironment(0, (HomeTexture) null, 0, 1650, 1045.6F);
      HomeEnvironment homeEnvironment4 = homeEnvironment3.clone();
      AspectRatio aspectRatio1 = homeEnvironment4.getPhotoAspectRatio();
      homeEnvironment3.getSkyTexture();
      homeEnvironment4.setPhotoWidth(843);
      System.setCurrentTimeMillis((-374));
      // Undeclared exception!
      try { 
        homeEnvironment4.setVideoAspectRatio(aspectRatio1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unsupported aspect ratio VIEW_3D_RATIO
         //
         verifyException("com.eteks.sweethome3d.model.HomeEnvironment", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.2241439291538465
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, 0, 1045.6F);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy((String) null, propertyChangeListener0);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment(0, (HomeTexture) null, 221, 221, 1045.6F);
      homeEnvironment1.setAllLevelsVisible(true);
      homeEnvironment1.setPhotoHeight(221);
      homeEnvironment0.setVideoFrameRate(0);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment1.setPhotoAspectRatio(aspectRatio0);
      HomeEnvironment homeEnvironment2 = new HomeEnvironment(221, (HomeTexture) null, 221, 843, 0);
      homeEnvironment2.getLightColor();
      homeEnvironment0.setCeillingLightColor(0);
      homeEnvironment0.setGroundTexture((HomeTexture) null);
      homeEnvironment2.getPhotoQuality();
      homeEnvironment0.setVideoQuality(843);
      HomeEnvironment homeEnvironment3 = homeEnvironment0.clone();
      AspectRatio aspectRatio1 = homeEnvironment3.getPhotoAspectRatio();
      homeEnvironment3.getSkyTexture();
      homeEnvironment0.setPhotoWidth((-822));
      System.setCurrentTimeMillis((-1741L));
      // Undeclared exception!
      try { 
        homeEnvironment2.setVideoAspectRatio(aspectRatio1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unsupported aspect ratio VIEW_3D_RATIO
         //
         verifyException("com.eteks.sweethome3d.model.HomeEnvironment", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.1558341755211035
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, 0, 1045.6F);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_16_9;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy((String) null, propertyChangeListener0);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setPhotoHeight(221);
      homeEnvironment0.setVideoFrameRate(0);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment(221, (HomeTexture) null, 221, 843, 0);
      homeEnvironment1.getLightColor();
      homeEnvironment0.setCeillingLightColor(0);
      homeEnvironment1.getPhotoQuality();
      HomeEnvironment homeEnvironment2 = homeEnvironment0.clone();
      AspectRatio aspectRatio1 = homeEnvironment2.getPhotoAspectRatio();
      homeEnvironment2.getSkyTexture();
      homeEnvironment0.setPhotoWidth((-822));
      System.setCurrentTimeMillis((-1736L));
      homeEnvironment1.setVideoAspectRatio(aspectRatio1);
      boolean boolean0 = homeEnvironment0.isAllLevelsVisible();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.2749676065654945
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, 0, 1045.6F);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy((String) null, propertyChangeListener0);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment(0, (HomeTexture) null, 221, 221, 1.5F);
      homeEnvironment1.setAllLevelsVisible(true);
      homeEnvironment1.setPhotoHeight(221);
      homeEnvironment1.setPhotoQuality(410);
      homeEnvironment0.setVideoFrameRate(14);
      AspectRatio aspectRatio0 = AspectRatio.FREE_RATIO;
      homeEnvironment1.setPhotoAspectRatio(aspectRatio0);
      AspectRatio aspectRatio1 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setVideoAspectRatio(aspectRatio1);
      homeEnvironment1.getSkyColor();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_QUALITY;
      homeEnvironment1.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment0.getSkyTexture();
      homeEnvironment1.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment1.setPhotoWidth(5);
      System.setCurrentTimeMillis(0L);
      homeEnvironment0.getVideoAspectRatio();
      boolean boolean0 = homeEnvironment0.isObserverCameraElevationAdjusted();
      assertEquals(14, homeEnvironment0.getVideoFrameRate());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.9248862457686386
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-29), (HomeTexture) null, (-29), (-29), 1045.6F);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy((String) null, propertyChangeListener0);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment((-29), (HomeTexture) null, 221, 221, 1045.6F);
      homeEnvironment1.setAllLevelsVisible(true);
      homeEnvironment1.setPhotoHeight(221);
      homeEnvironment0.setVideoFrameRate((-29));
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment1.setPhotoAspectRatio(aspectRatio0);
      HomeEnvironment homeEnvironment2 = new HomeEnvironment(843, (HomeTexture) null, 843, (HomeTexture) null, 843, 1045.6F);
      homeEnvironment2.getLightColor();
      homeEnvironment0.setCeillingLightColor((-29));
      homeEnvironment2.getPhotoQuality();
      HomeEnvironment homeEnvironment3 = homeEnvironment0.clone();
      homeEnvironment3.setObserverCameraElevationAdjusted(true);
      System.setCurrentTimeMillis(843);
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      assertEquals(AspectRatio.SQUARE_RATIO, homeEnvironment0.getVideoAspectRatio());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.7862471159089246
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, 0, 1045.6F);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy((String) null, propertyChangeListener0);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment(0, (HomeTexture) null, 221, 221, 1.5F);
      homeEnvironment1.setAllLevelsVisible(true);
      homeEnvironment1.setPhotoHeight(221);
      homeEnvironment1.setPhotoQuality(410);
      homeEnvironment0.setVideoFrameRate(14);
      AspectRatio aspectRatio0 = AspectRatio.FREE_RATIO;
      homeEnvironment1.setPhotoAspectRatio(aspectRatio0);
      AspectRatio aspectRatio1 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setVideoAspectRatio(aspectRatio1);
      homeEnvironment1.getSkyColor();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_QUALITY;
      homeEnvironment1.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment1.setObserverCameraElevationAdjusted(false);
      homeEnvironment1.setObserverCameraElevationAdjusted(true);
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Name is null
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.0983891977172062
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, 0, 1045.6F);
      homeEnvironment0.setSubpartSizeUnderLight(1045.6F);
      homeEnvironment0.setSkyColor(0);
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.getVideoCameraPath();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("N8E;v']>hZ$(o[_:", propertyChangeListener0);
      Camera camera0 = new Camera(1045.6F, 1045.6F, 7, 0, 0, 2564.0376F);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(homeEnvironment0, "Mac OS X", camera0, "Mac OS X");
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("N8E;v']>hZ$(o[_:", propertyChangeListenerProxy0);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.OBSERVER_CAMERA_ELEVATION_ADJUSTED;
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setVideoWidth(7);
      homeEnvironment0.setAllLevelsVisible(true);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setGroundColor(7);
      homeEnvironment1.setPhotoHeight(7);
      homeEnvironment0.getVideoAspectRatio();
      int int0 = homeEnvironment1.getVideoFrameRate();
      assertEquals(1045.6F, homeEnvironment0.getSubpartSizeUnderLight(), 0.01F);
      assertEquals(25, int0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.128702289360092
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setPhotoHeight(400);
      homeEnvironment0.setVideoFrameRate(400);
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.setPhotoHeight(10);
      homeEnvironment0.setVideoFrameRate((-1218));
      AspectRatio aspectRatio1 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio1);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment(843, (HomeTexture) null, (-1218), 474, 474);
      homeEnvironment1.setVideoWidth((-1218));
      homeEnvironment1.getLightColor();
      homeEnvironment1.setCeillingLightColor(10);
      homeEnvironment0.getPhotoQuality();
      HomeEnvironment homeEnvironment2 = new HomeEnvironment();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL_AND_OUTLINE;
      homeEnvironment2.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment2.getSkyTexture();
      homeEnvironment2.clone();
      assertEquals(HomeEnvironment.DrawingMode.FILL_AND_OUTLINE, homeEnvironment2.getDrawingMode());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.6422165264472737
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent((URL) null);
      CatalogTexture catalogTexture0 = new CatalogTexture((String) null, temporaryURLContent0, 6, 6, false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(6, homeTexture0, 4538, homeTexture0, (-54), 4538);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      catalogTexture0.getCategory();
      homeEnvironment0.setCeillingLightColor((-54));
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_WIDTH;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("Unsupported aspect ratio ", propertyChangeListener0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      catalogTexture0.setCategory((TexturesCategory) null);
      homeEnvironment1.setAllLevelsVisible(false);
      homeEnvironment1.getCeillingLightColor();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_16_9;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.getSubpartSizeUnderLight();
      homeEnvironment0.getCeillingLightColor();
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment1.getCeillingLightColor();
      Random.setNextRandom(2);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.1034354550763315
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, 0, 1045.6F);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      HomeEnvironment homeEnvironment1 = new HomeEnvironment(0, (HomeTexture) null, 221, 221, 1.5F);
      homeEnvironment1.setGroundTexture((HomeTexture) null);
      homeEnvironment1.setAllLevelsVisible(true);
      homeEnvironment1.setPhotoHeight(221);
      homeEnvironment0.setVideoFrameRate(0);
      AspectRatio aspectRatio0 = AspectRatio.VIEW_3D_RATIO;
      homeEnvironment1.setPhotoAspectRatio(aspectRatio0);
      HomeEnvironment homeEnvironment2 = new HomeEnvironment(221, (HomeTexture) null, 221, 843, (-46.0F));
      homeEnvironment2.getLightColor();
      homeEnvironment0.setCeillingLightColor(0);
      HomeEnvironment homeEnvironment3 = new HomeEnvironment(227, (HomeTexture) null, 1567, 221, (-4847.0F));
      homeEnvironment0.getWallsAlpha();
      homeEnvironment1.getVideoCameraPath();
      assertTrue(homeEnvironment1.isAllLevelsVisible());
      
      int int0 = homeEnvironment0.getVideoHeight();
      assertEquals(240, int0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.786456060735981
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment1.setPhotoAspectRatio(aspectRatio0);
      HomeEnvironment homeEnvironment2 = new HomeEnvironment(843, (HomeTexture) null, (-427), (HomeTexture) null, (-427), (-427));
      homeEnvironment1.getLightColor();
      HomeEnvironment homeEnvironment3 = homeEnvironment2.clone();
      homeEnvironment3.setCeillingLightColor(13684944);
      HomeEnvironment homeEnvironment4 = new HomeEnvironment(1963, (HomeTexture) null, 1963, 1963, (-427));
      homeEnvironment4.getPhotoQuality();
      HomeEnvironment homeEnvironment5 = homeEnvironment1.clone();
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      System.setCurrentTimeMillis(843);
      homeEnvironment5.setVideoAspectRatio(aspectRatio0);
      assertEquals(AspectRatio.RATIO_4_3, homeEnvironment1.getPhotoAspectRatio());
      assertEquals(320, homeEnvironment0.getVideoWidth());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.193764486816496
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, 0, 1045.6F);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy((String) null, propertyChangeListener0);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.SUBPART_SIZE_UNDER_LIGHT;
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setSkyColor(0);
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setPhotoQuality(0);
      homeEnvironment0.getPhotoQuality();
      homeEnvironment0.getSkyColor();
      homeEnvironment0.setCeillingLightColor(0);
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      HomeEnvironment.Property homeEnvironment_Property1 = HomeEnvironment.Property.VIDEO_CAMERA_PATH;
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property1, propertyChangeListenerProxy0);
      homeEnvironment0.getGroundColor();
      homeEnvironment0.setVideoWidth(0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setCeillingLightColor(2);
      homeEnvironment0.setPhotoHeight(0);
      homeEnvironment1.isAllLevelsVisible();
      assertEquals(2, homeEnvironment1.getCeillingLightColor());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.9237738987163584
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, 0, 1045.6F);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy((String) null, propertyChangeListener0);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.SUBPART_SIZE_UNDER_LIGHT;
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setSkyColor(0);
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.getPhotoQuality();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.getSkyColor();
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      propertyChangeListenerProxy1.propertyChange((PropertyChangeEvent) null);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy1);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy1);
      homeEnvironment0.getGroundColor();
      homeEnvironment0.setVideoWidth(0);
      homeEnvironment0.setVideoWidth(0);
      homeEnvironment0.setCeillingLightColor(0);
      assertEquals(AspectRatio.RATIO_3_2, homeEnvironment0.getVideoAspectRatio());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.214534764133424
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, false);
      CatalogTexture catalogTexture0 = new CatalogTexture("eZrFXI.,D M", resourceURLContent0, 1.5F, 1.5F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      int int0 = 0;
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-28), homeTexture0, 0, homeTexture0, (-28), 0);
      homeEnvironment0.setVideoWidth((-28));
      homeEnvironment0.setPhotoHeight(0);
      homeEnvironment0.getVideoFrameRate();
      FileSystemHandling.shouldAllThrowIOExceptions();
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment0.setVideoCameraPath(linkedList0);
      homeEnvironment0.getGroundColor();
      homeEnvironment0.setPhotoHeight((-248));
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("eZrFXI.,D M");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.eZrFXI.,D M
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-54), (HomeTexture) null, (-54), (HomeTexture) null, 300, (-54));
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      AspectRatio aspectRatio1 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setVideoAspectRatio(aspectRatio1);
      homeEnvironment0.getSkyColor();
      PropertyChangeListener propertyChangeListener0 = null;
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("Ld%h=8O.W>;@^", (PropertyChangeListener) null);
      // Undeclared exception!
      try { 
        propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.beans.PropertyChangeListenerProxy", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.6401461330725327
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, (HomeTexture) null, 0, 0);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy((String) null, propertyChangeListener0);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.SUBPART_SIZE_UNDER_LIGHT;
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setSkyColor(0);
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.getPhotoQuality();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      homeEnvironment0.getSkyColor();
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(homeEnvironment_Property0, (String) null, (Object) null, object0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("PHOTO_HEIGHT", propertyChangeListenerProxy0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      propertyChangeListenerProxy1.propertyChange((PropertyChangeEvent) null);
      HomeEnvironment.Property homeEnvironment_Property1 = HomeEnvironment.Property.ALL_LEVELS_VISIBLE;
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property1, propertyChangeListenerProxy1);
      boolean boolean0 = homeEnvironment0.isObserverCameraElevationAdjusted();
      assertEquals(AspectRatio.RATIO_3_2, homeEnvironment0.getVideoAspectRatio());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.372821413206516
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.GROUND_TEXTURE;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("~/^k/uiG=[(CFo", propertyChangeListener0);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(homeEnvironment_Property0, "~/^k/uiG=[(CFo", homeEnvironment1, object0);
      AspectRatio aspectRatio1 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setVideoAspectRatio(aspectRatio1);
      propertyChangeEvent0.setPropagationId(homeEnvironment_Property0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      // Undeclared exception!
      try { 
        homeEnvironment0.removePropertyChangeListener((HomeEnvironment.Property) null, propertyChangeListenerProxy0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.model.HomeEnvironment", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.122928297357194
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, false);
      CatalogTexture catalogTexture0 = new CatalogTexture("eZrFXI.,D M", resourceURLContent0, 1.5F, 1.5F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(13, homeTexture0, 0, homeTexture0, 13, 0);
      homeEnvironment0.setVideoWidth(13);
      homeEnvironment0.setPhotoHeight(0);
      homeEnvironment0.getVideoFrameRate();
      FileSystemHandling.shouldAllThrowIOExceptions();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.SKY_COLOR;
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("eZrFXI.,D M", (PropertyChangeListener) null);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setLightColor(11);
      homeEnvironment0.setCeillingLightColor(0);
      HomeTexture homeTexture1 = new HomeTexture(homeTexture0);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment(25, homeTexture1, (-1482), 13, (-1745.66F));
      homeEnvironment1.setGroundColor((-248));
      homeEnvironment1.setPhotoQuality((-248));
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.getPhotoQuality();
      homeEnvironment1.getVideoWidth();
      int int0 = homeEnvironment0.getPhotoHeight();
      assertEquals(11, homeEnvironment0.getLightColor());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.287874959070954
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.getPhotoAspectRatio();
      homeEnvironment0.getPhotoWidth();
      homeEnvironment1.setAllLevelsVisible(true);
      homeEnvironment1.setPhotoHeight(11);
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment1.setVideoCameraPath(list0);
      homeEnvironment1.getGroundColor();
      homeEnvironment1.setPhotoHeight(400);
      HomeEnvironment.DrawingMode.valueOf("OUTLINE");
      homeEnvironment0.getWallsAlpha();
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment1.setVideoWidth((-725));
      homeEnvironment1.getPhotoAspectRatio();
      HomeEnvironment.DrawingMode.values();
      homeEnvironment0.setPhotoQuality(19);
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      homeEnvironment2.getSkyColor();
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment2.getVideoCameraPath();
      homeEnvironment0.getVideoAspectRatio();
      int int0 = homeEnvironment1.getPhotoWidth();
      assertEquals((-544), homeEnvironment1.getVideoHeight());
      assertEquals(400, int0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.117432843568751
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoQuality((-46));
      homeEnvironment0.setSubpartSizeUnderLight((-46));
      homeEnvironment0.setSkyColor(0);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setSkyColor(7);
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.getPhotoQuality();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.getSkyColor();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.getPhotoAspectRatio();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.getGroundColor();
      homeEnvironment0.getGroundTexture();
      int int0 = homeEnvironment0.getGroundColor();
      assertEquals(HomeEnvironment.DrawingMode.OUTLINE, homeEnvironment0.getDrawingMode());
      assertEquals(11053224, int0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.0831728948417303
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, 0, 1045.6F);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy((String) null, propertyChangeListener0);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.SUBPART_SIZE_UNDER_LIGHT;
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "-y");
      homeEnvironment0.setSkyColor(12);
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.getPhotoQuality();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.getSkyColor();
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      HomeEnvironment.Property homeEnvironment_Property1 = HomeEnvironment.Property.CEILING_LIGHT_COLOR;
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy((String) null, propertyChangeListenerProxy0);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property1, propertyChangeListenerProxy1);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.getPhotoAspectRatio();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.getGroundColor();
      homeEnvironment0.getGroundTexture();
      int int0 = homeEnvironment0.getGroundColor();
      assertEquals(AspectRatio.RATIO_3_2, homeEnvironment0.getVideoAspectRatio());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-103);
      byteArray0[1] = (byte) (-25);
      byteArray0[2] = (byte)23;
      byteArray0[3] = (byte)6;
      byteArray0[4] = (byte) (-109);
      byteArray0[5] = (byte)1;
      byteArray0[6] = (byte) (-4);
      byteArray0[7] = (byte)33;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("temp", propertyChangeListener0);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent("temp", "temp", "temp", (Object) null);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_QUALITY;
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.getPhotoWidth();
      int int0 = 73;
      homeEnvironment0.setVideoWidth((-109));
      homeEnvironment0.setWallsAlpha(652.18F);
      // Undeclared exception!
      try { 
        homeEnvironment0.setVideoAspectRatio((AspectRatio) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.model.HomeEnvironment", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.1868999087330026
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, 0, 1045.6F);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy((String) null, propertyChangeListener0);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment(0, (HomeTexture) null, 221, 221, 1045.6F);
      homeEnvironment1.setAllLevelsVisible(true);
      homeEnvironment1.setPhotoHeight(221);
      homeEnvironment0.setVideoFrameRate(0);
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment1.setPhotoAspectRatio(aspectRatio0);
      HomeEnvironment homeEnvironment2 = new HomeEnvironment(221, (HomeTexture) null, 221, 843, 0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeEnvironment2.getLightColor();
      homeEnvironment0.setCeillingLightColor(0);
      homeEnvironment2.setPhotoHeight(843);
      homeEnvironment2.getPhotoQuality();
      HomeEnvironment homeEnvironment3 = homeEnvironment0.clone();
      AspectRatio aspectRatio1 = homeEnvironment3.getPhotoAspectRatio();
      homeEnvironment3.getSkyTexture();
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment3.setLightColor(11);
      homeEnvironment0.setPhotoWidth((-822));
      System.setCurrentTimeMillis((-1736L));
      AspectRatio aspectRatio2 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setVideoAspectRatio(aspectRatio2);
      // Undeclared exception!
      try { 
        homeEnvironment2.setVideoAspectRatio(aspectRatio1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unsupported aspect ratio VIEW_3D_RATIO
         //
         verifyException("com.eteks.sweethome3d.model.HomeEnvironment", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.8373875876189167
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1, (HomeTexture) null, 1, (HomeTexture) null, 1, 1);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment homeEnvironment2 = new HomeEnvironment();
      List<Camera> list0 = homeEnvironment2.getVideoCameraPath();
      homeEnvironment1.setVideoCameraPath(list0);
      homeEnvironment1.getVideoCameraPath();
      HomeEnvironment homeEnvironment3 = homeEnvironment0.clone();
      homeEnvironment3.setPhotoHeight(1);
      homeEnvironment2.setPhotoHeight(46);
      HomeEnvironment homeEnvironment4 = homeEnvironment1.clone();
      homeEnvironment4.setGroundColor(1);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.SUBPART_SIZE_UNDER_LIGHT;
      homeEnvironment4.removePropertyChangeListener(homeEnvironment_Property0, (PropertyChangeListener) null);
      homeEnvironment4.setLightColor(1);
      homeEnvironment2.setCeillingLightColor(11);
      homeEnvironment2.setGroundColor(11);
      String string0 = null;
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Name is null
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.2842275426575793
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoQuality((-46));
      homeEnvironment0.setSubpartSizeUnderLight((-46));
      homeEnvironment0.setSkyColor(0);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.getVideoCameraPath();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("N8E;v']>hZ$(o[_:", propertyChangeListener0);
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL0 = MockURL.URL("N8E;v']>hZ$(o[_:", "", 7, "", uRLStreamHandler0);
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("", temporaryURLContent0, 7, (-46.0F), false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setSkyTexture(homeTexture0);
      homeEnvironment0.setWallsAlpha(2564.0376F);
      homeEnvironment0.setPhotoHeight((-125));
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment0.setVideoCameraPath(linkedList0);
      homeEnvironment0.getVideoFrameRate();
      homeEnvironment0.setVideoFrameRate(0);
      homeEnvironment0.setLightColor(7);
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.setPhotoWidth(25);
      assertEquals(2564.0376F, homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.1599158081741647
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment0.getPhotoWidth();
      homeEnvironment1.setAllLevelsVisible(false);
      homeEnvironment1.setPhotoHeight(400);
      homeEnvironment0.setVideoFrameRate(400);
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment1.setPhotoHeight(400);
      homeEnvironment0.setVideoFrameRate(11);
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      HomeEnvironment homeEnvironment2 = new HomeEnvironment(400, (HomeTexture) null, 11, 400, 1.7777778F);
      homeEnvironment0.getLightColor();
      HomeEnvironment homeEnvironment3 = new HomeEnvironment();
      homeEnvironment3.getPhotoQuality();
      HomeEnvironment homeEnvironment4 = homeEnvironment0.clone();
      AspectRatio aspectRatio1 = homeEnvironment1.getPhotoAspectRatio();
      homeEnvironment3.getSkyTexture();
      homeEnvironment4.setPhotoWidth((-2237));
      System.setCurrentTimeMillis((-1736L));
      // Undeclared exception!
      try { 
        homeEnvironment3.setVideoAspectRatio(aspectRatio1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unsupported aspect ratio VIEW_3D_RATIO
         //
         verifyException("com.eteks.sweethome3d.model.HomeEnvironment", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.2139224888549767
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setVideoCameraPath((List<Camera>) null);
      HomeEnvironment homeEnvironment2 = homeEnvironment0.clone();
      homeEnvironment2.setSubpartSizeUnderLight(0.0F);
      homeEnvironment2.getVideoCameraPath();
      homeEnvironment0.setSkyColor(2456);
      homeEnvironment1.setAllLevelsVisible(true);
      AspectRatio aspectRatio0 = AspectRatio.VIEW_3D_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment1.getCeillingLightColor();
      homeEnvironment2.setSubpartSizeUnderLight(363.03915F);
      homeEnvironment1.setWallsAlpha(1.0F);
      homeEnvironment0.setPhotoQuality(2456);
      homeEnvironment1.getLightColor();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_WIDTH;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      HomeEnvironment homeEnvironment3 = new HomeEnvironment();
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(homeEnvironment0, "", homeEnvironment3, object0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment1.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      URL uRL0 = MockURL.getFtpExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      CatalogTexture catalogTexture0 = new CatalogTexture("-(~-TkL_2Lc,6", resourceURLContent0, 126.01F, 2456, true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setGroundTexture(homeTexture0);
      assertEquals(2456, homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.2211875359535505
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setLightColor((-3903));
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("Dd VrV8", propertyChangeListener0);
      homeEnvironment0.setSkyColor((-3903));
      Camera camera0 = new Camera((-3903), (-272.1F), (-2613.7932F), 1.7777778F, (-1.0F), 0.0F);
      Camera camera1 = new Camera(0.0F, 1.7777778F, (-2613.7932F), (-1.0F), (-1.0F), 0.0F);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(camera0, "Dd VrV8", camera1, propertyChangeListenerProxy0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.getVideoCameraPath();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment1.setPhotoHeight((-3903));
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.setSubpartSizeUnderLight(2372);
      homeEnvironment1.setObserverCameraElevationAdjusted(false);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.SKY_COLOR;
      homeEnvironment1.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment1.setPhotoWidth((-3903));
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.getDrawingMode();
      assertEquals((-3903), homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoHeight((-877));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment1.clone();
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("GROUND_COLOR");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.GROUND_COLOR
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.1013448627418367
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(2312, (HomeTexture) null, 2312, 2312, 4214.982F);
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment0.setPhotoQuality(51);
      homeEnvironment0.setPhotoHeight((-3903));
      homeEnvironment0.setGroundColor(0);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_WIDTH;
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, (PropertyChangeListener) null);
      homeEnvironment0.setLightColor(11);
      homeEnvironment0.setCeillingLightColor(51);
      homeEnvironment0.setGroundColor(6);
      homeEnvironment0.setPhotoQuality(13);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL_AND_OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.getPhotoQuality();
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.getPhotoHeight();
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, (PropertyChangeListener) null);
      assertEquals(51, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.847642989259894
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyColor(0);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.getVideoCameraPath();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("N8E;v']>hZ$(o[_:", propertyChangeListener0);
      homeEnvironment0.setSkyTexture((HomeTexture) null);
      homeEnvironment0.setWallsAlpha(0);
      homeEnvironment0.setPhotoHeight(7);
      homeEnvironment0.setLightColor(7);
      homeEnvironment0.getSkyTexture();
      System.setCurrentTimeMillis(0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setLightColor((-3903));
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.SKY_COLOR;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("Dd VrV8", propertyChangeListener0);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setSkyColor((-3903));
      assertEquals((-3903), homeEnvironment0.getLightColor());
      
      URL uRL0 = MockURL.getFtpExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("cP#", "Dd VrV8", temporaryURLContent0, 1080.0F, (-1.0F), "Dd VrV8", false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment((-3903), homeTexture0, (-1), homeTexture0, (-3903), (-2613.7932F));
      HomeTexture homeTexture1 = new HomeTexture(homeTexture0);
      homeEnvironment1.setGroundTexture(homeTexture1);
      assertEquals(240, homeEnvironment1.getVideoHeight());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.300534891680103
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment1.setCeillingLightColor(1638);
      homeEnvironment0.getPhotoWidth();
      homeEnvironment1.setAllLevelsVisible(true);
      homeEnvironment1.setPhotoHeight(400);
      homeEnvironment0.setVideoFrameRate(400);
      AspectRatio aspectRatio0 = AspectRatio.FREE_RATIO;
      homeEnvironment1.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment1.setPhotoWidth(400);
      homeEnvironment1.getLightColor();
      homeEnvironment1.setObserverCameraElevationAdjusted(true);
      homeEnvironment1.setCeillingLightColor(400);
      homeEnvironment0.getPhotoQuality();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL_AND_OUTLINE;
      homeEnvironment1.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment1.getWallsAlpha();
      System.setCurrentTimeMillis((-725L));
      homeEnvironment1.clone();
      assertTrue(homeEnvironment1.isAllLevelsVisible());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.8493821196946767
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("temp", propertyChangeListener0);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent("temp", "temp", "temp", (Object) null);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 8, (HomeTexture) null, (-3241), (-3241));
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_QUALITY;
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.setVideoWidth((-109));
      homeEnvironment0.setWallsAlpha(652.18F);
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setPhotoQuality(73);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.getPhotoQuality();
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.getPhotoHeight();
      HomeEnvironment.Property homeEnvironment_Property1 = HomeEnvironment.Property.PHOTO_ASPECT_RATIO;
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property1, propertyChangeListenerProxy0);
      assertEquals(HomeEnvironment.DrawingMode.OUTLINE, homeEnvironment0.getDrawingMode());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.2381531034180036
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("Unsupported aspect ratio ", propertyChangeListenerProxy0);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_HEIGHT;
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy((String) null, propertyChangeListenerProxy0);
      homeEnvironment1.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy2);
      homeEnvironment0.setSkyColor((-337));
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.getPhotoQuality();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      homeEnvironment1.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.getSkyColor();
      propertyChangeListenerProxy1.propertyChange((PropertyChangeEvent) null);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy2);
      homeEnvironment1.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.getPhotoAspectRatio();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      homeEnvironment2.getGroundColor();
      homeEnvironment2.getGroundTexture();
      int int0 = homeEnvironment1.getGroundColor();
      assertEquals(HomeEnvironment.DrawingMode.OUTLINE, homeEnvironment0.getDrawingMode());
      assertEquals(11053224, int0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=3.021517785302462
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment0.getPhotoWidth();
      homeEnvironment1.setAllLevelsVisible(true);
      homeEnvironment1.setPhotoHeight(2369);
      homeEnvironment0.setVideoFrameRate(400);
      AspectRatio aspectRatio1 = AspectRatio.RATIO_4_3;
      homeEnvironment1.setPhotoAspectRatio(aspectRatio1);
      homeEnvironment0.getLightColor();
      homeEnvironment1.setCeillingLightColor(2369);
      homeEnvironment0.getPhotoQuality();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("rE4}e{e2@q:$t");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.rE4}e{e2@q:$t
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-1673), (HomeTexture) null, 0, (HomeTexture) null, (-4190), (-2886.6042F));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.clone();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("Dmw:F8kver`");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.Dmw:F8kver`
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.9440256153973703
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment0.getPhotoWidth();
      homeEnvironment1.setAllLevelsVisible(true);
      homeEnvironment1.setPhotoHeight(11);
      homeEnvironment0.setVideoFrameRate(400);
      AspectRatio aspectRatio1 = AspectRatio.FREE_RATIO;
      homeEnvironment1.setPhotoAspectRatio(aspectRatio1);
      homeEnvironment1.getLightColor();
      homeEnvironment1.setCeillingLightColor(400);
      homeEnvironment0.setVideoWidth(13684944);
      HomeEnvironment homeEnvironment2 = new HomeEnvironment();
      homeEnvironment2.setCeillingLightColor((-620));
      homeEnvironment0.setPhotoHeight(858);
      assertEquals(10263708, homeEnvironment0.getVideoHeight());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.938311329683084
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      Class<HomeEnvironment> class0 = HomeEnvironment.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      resourceURLContent0.getJAREntryURL();
      homeEnvironment0.setLightColor(1471);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setPhotoHeight(10);
      homeEnvironment0.setVideoFrameRate(10);
      AspectRatio aspectRatio0 = AspectRatio.VIEW_3D_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.getLightColor();
      homeEnvironment0.setCeillingLightColor(10);
      homeEnvironment0.getPhotoQuality();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL_AND_OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      assertTrue(homeEnvironment0.isAllLevelsVisible());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.938311329683084
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      MockURL.getFileExample();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setPhotoHeight(13);
      homeEnvironment0.setVideoFrameRate(6);
      AspectRatio aspectRatio1 = AspectRatio.FREE_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio1);
      homeEnvironment0.getLightColor();
      homeEnvironment0.setCeillingLightColor(13684944);
      homeEnvironment0.getPhotoQuality();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL_AND_OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      assertTrue(homeEnvironment0.isAllLevelsVisible());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.3017274975238715
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setLightColor((-3903));
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.SKY_COLOR;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("Dd VrV8", propertyChangeListener0);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment0.setPhotoQuality(3750);
      homeEnvironment0.setPhotoHeight((-725));
      homeEnvironment0.setGroundColor((-3903));
      HomeEnvironment.Property homeEnvironment_Property1 = HomeEnvironment.Property.CEILING_LIGHT_COLOR;
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property1, (PropertyChangeListener) null);
      homeEnvironment0.setLightColor(2527);
      homeEnvironment0.setCeillingLightColor(14);
      homeEnvironment0.setGroundColor(6);
      homeEnvironment0.setPhotoQuality(3);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL_AND_OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.getPhotoQuality();
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.getPhotoHeight();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment.Property homeEnvironment_Property2 = HomeEnvironment.Property.SKY_TEXTURE;
      homeEnvironment1.removePropertyChangeListener(homeEnvironment_Property2, (PropertyChangeListener) null);
      assertEquals(HomeEnvironment.DrawingMode.FILL_AND_OUTLINE, homeEnvironment0.getDrawingMode());
      assertEquals(6, homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, 0, 1045.6F);
      homeEnvironment0.clone();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("GROUND_COLOR");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.GROUND_COLOR
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      int int0 = 0;
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-2491), (HomeTexture) null, 0, (-2491), 0);
      homeEnvironment0.clone();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      boolean boolean0 = true;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      URL uRL0 = MockURL.getHttpExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      try { 
        TemporaryURLContent.copyToTemporaryURLContent(resourceURLContent0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Could not find: www.someFakeButWellFormedURL.org
         //
         verifyException("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, 0, 1045.6F);
      int int0 = homeEnvironment0.getVideoQuality();
      assertEquals(0, int0);
      assertEquals(1045.6F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(0, homeEnvironment0.getSkyColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(0, homeEnvironment0.getGroundColor());
      assertEquals(0, homeEnvironment0.getLightColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.6376398674083723
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment0.getPhotoWidth();
      boolean boolean0 = true;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)2;
      homeEnvironment1.getSubpartSizeUnderLight();
      byteArray0[1] = (byte) (-123);
      byteArray0[2] = (byte)110;
      byteArray0[3] = (byte) (-61);
      byteArray0[4] = (byte)1;
      byteArray0[5] = (byte)76;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      homeEnvironment1.setAllLevelsVisible(true);
      homeEnvironment1.setPhotoHeight(400);
      homeEnvironment0.setVideoFrameRate(400);
      String string0 = "):JqlHV,ii0/B01";
      try { 
        MockURL.URL("):JqlHV,ii0/B01", "):JqlHV,ii0/B01", "):JqlHV,ii0/B01");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // unknown protocol: ):jqlhv,ii0/b01
         //
         verifyException("java.net.URL", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment1.setPhotoAspectRatio(aspectRatio0);
      AspectRatio aspectRatio1 = AspectRatio.RATIO_4_3;
      boolean boolean0 = true;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      String string0 = "7\\T";
      URL uRL0 = MockURL.getHttpExample();
      homeEnvironment0.getVideoCameraPath();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      try { 
        TemporaryURLContent.copyToTemporaryURLContent(resourceURLContent0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Could not find: www.someFakeButWellFormedURL.org
         //
         verifyException("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=3.0983891977172062
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      Class<HomeEnvironment> class0 = HomeEnvironment.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.eteks/sweethome3d/work");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      resourceURLContent0.getJAREntryURL();
      TemporaryURLContent temporaryURLContent0 = TemporaryURLContent.copyToTemporaryURLContent(resourceURLContent0);
      CatalogTexture catalogTexture0 = new CatalogTexture("", "", temporaryURLContent0, 0.10659177F, 0.10659177F, "", true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setSkyTexture(homeTexture0);
      homeEnvironment0.setWallsAlpha((-1.0F));
      homeEnvironment0.setPhotoHeight(0);
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment0.getVideoFrameRate();
      homeEnvironment0.setVideoFrameRate(25);
      homeEnvironment0.setLightColor((-769));
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.setPhotoWidth((-1661));
      int int0 = homeEnvironment0.getVideoWidth();
      assertEquals((-1.0F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(320, int0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.784066574475527
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setVideoFrameRate(667);
      homeEnvironment0.setPhotoQuality(667);
      AspectRatio aspectRatio1 = AspectRatio.FREE_RATIO;
      homeEnvironment1.setPhotoAspectRatio(aspectRatio1);
      HomeEnvironment homeEnvironment2 = new HomeEnvironment(843, (HomeTexture) null, 667, 843, 667);
      homeEnvironment0.getLightColor();
      homeEnvironment0.setCeillingLightColor(843);
      homeEnvironment1.getPhotoQuality();
      homeEnvironment1.clone();
      String string0 = "";
      try { 
        MockURL.URL("SKY_COLOR", "", "");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // unknown protocol: sky_color
         //
         verifyException("java.net.URL", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=3.2755929974347877
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setVideoCameraPath((List<Camera>) null);
      HomeEnvironment homeEnvironment2 = homeEnvironment0.clone();
      homeEnvironment2.setSubpartSizeUnderLight(0.0F);
      homeEnvironment2.getVideoCameraPath();
      homeEnvironment0.setSkyColor(2456);
      homeEnvironment1.setAllLevelsVisible(true);
      AspectRatio aspectRatio0 = AspectRatio.VIEW_3D_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment1.getCeillingLightColor();
      homeEnvironment2.setSubpartSizeUnderLight(363.03915F);
      homeEnvironment1.setWallsAlpha(1.0F);
      homeEnvironment0.setPhotoQuality(2456);
      homeEnvironment1.getLightColor();
      homeEnvironment2.getLightColor();
      homeEnvironment0.setCeillingLightColor(2456);
      homeEnvironment0.getPhotoQuality();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL_AND_OUTLINE;
      homeEnvironment1.setDrawingMode(homeEnvironment_DrawingMode0);
      assertTrue(homeEnvironment1.isAllLevelsVisible());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      int int0 = homeEnvironment0.getVideoHeight();
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(240, int0);
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.5137801058392384
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment0.getPhotoHeight();
      homeEnvironment0.getCeillingLightColor();
      homeEnvironment0.setSubpartSizeUnderLight(1.0F);
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("Super class isn't cloneable");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.Super class isn't cloneable
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.821994252232425
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, 0, 1045.6F);
      homeEnvironment0.setAllLevelsVisible(true);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment1.setVideoAspectRatio(aspectRatio0);
      homeEnvironment1.setPhotoWidth(0);
      homeEnvironment0.setPhotoHeight(0);
      PropertyChangeListener propertyChangeListener1 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener1);
      Camera.Lens camera_Lens0 = Camera.Lens.PINHOLE;
      Camera camera0 = new Camera(1045.6F, 1849.1F, 1849.1F, 1849.1F, 0, 1045.6F, 0, camera_Lens0);
      Camera camera1 = camera0.clone();
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(camera1, "_TlyvW,p0.B3jX.l~E", object0, homeEnvironment1);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.setSubpartSizeUnderLight(1045.6F);
      homeEnvironment1.setObserverCameraElevationAdjusted(false);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.SKY_COLOR;
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListener0);
      homeEnvironment1.setPhotoWidth(1501);
      int int0 = homeEnvironment1.getPhotoWidth();
      assertEquals(AspectRatio.RATIO_2_1, homeEnvironment1.getVideoAspectRatio());
      assertEquals(1501, int0);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=3.103435455076331
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, 0, 1045.6F);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_16_9;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      HomeEnvironment homeEnvironment1 = new HomeEnvironment(0, (HomeTexture) null, 12, 0, 221);
      homeEnvironment1.setAllLevelsVisible(false);
      homeEnvironment1.setPhotoHeight(221);
      homeEnvironment0.setVideoFrameRate((-2613));
      AspectRatio aspectRatio1 = AspectRatio.RATIO_2_1;
      AspectRatio aspectRatio2 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio2);
      HomeEnvironment homeEnvironment2 = new HomeEnvironment(0, (HomeTexture) null, 843, 0, 221);
      homeEnvironment1.getLightColor();
      homeEnvironment1.setCeillingLightColor(221);
      homeEnvironment2.getPhotoQuality();
      HomeEnvironment homeEnvironment3 = homeEnvironment1.clone();
      homeEnvironment2.getPhotoAspectRatio();
      homeEnvironment2.getSkyTexture();
      homeEnvironment3.setPhotoWidth((-3505));
      System.setCurrentTimeMillis(221);
      homeEnvironment2.setVideoAspectRatio(aspectRatio1);
      homeEnvironment2.getPhotoAspectRatio();
      assertEquals(AspectRatio.RATIO_2_1, homeEnvironment2.getVideoAspectRatio());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(200, (HomeTexture) null, (-109), (HomeTexture) null, 716, 900.0F);
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.setPhotoHeight(2910);
      homeEnvironment0.setVideoFrameRate(377);
      try { 
        MockURL.URL("", "", "");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // unknown protocol: 
         //
         verifyException("java.net.URL", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=3.08206054778945
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      AspectRatio aspectRatio1 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio1);
      AspectRatio aspectRatio2 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setVideoAspectRatio(aspectRatio2);
      homeEnvironment1.getSkyColor();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_QUALITY;
      homeEnvironment1.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment1.getSkyTexture();
      homeEnvironment1.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setPhotoWidth(5);
      System.setCurrentTimeMillis(13427964);
      homeEnvironment0.getVideoAspectRatio();
      assertEquals(5, homeEnvironment0.getPhotoWidth());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      int int0 = (-213);
      String string0 = "";
      URL uRL0 = MockURL.getFileExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      boolean boolean0 = true;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      CatalogTexture catalogTexture0 = new CatalogTexture("", uRLContent0, (-213), (-1667.9832F), true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment((-213), homeTexture0, (-213), homeTexture0, 5, 5);
      homeEnvironment1.clone();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      URL uRL1 = MockURL.getHttpExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL1, false);
      try { 
        TemporaryURLContent.copyToTemporaryURLContent(resourceURLContent0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Could not find: www.someFakeButWellFormedURL.org
         //
         verifyException("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.214534764133424
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, false);
      CatalogTexture catalogTexture0 = new CatalogTexture("eZrFXI.,D M", resourceURLContent0, 1.5F, 1.5F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      int int0 = 0;
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(13, homeTexture0, 0, homeTexture0, 13, 0);
      homeEnvironment0.setVideoWidth(13);
      homeEnvironment0.setPhotoHeight(0);
      homeEnvironment0.getVideoFrameRate();
      FileSystemHandling.shouldAllThrowIOExceptions();
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment0.setVideoCameraPath(linkedList0);
      homeEnvironment0.getGroundColor();
      homeEnvironment0.setPhotoHeight((-248));
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("eZrFXI.,D M");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.eZrFXI.,D M
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.6258417525947544
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("m!fTQ\\H@6 ", "PHOTO_WIDTH", (Content) null, 821, 821, "", true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(821, homeTexture0, 821, homeTexture0, 209, (-1694.477F));
      homeEnvironment0.setSkyTexture(homeTexture0);
      homeEnvironment0.setPhotoWidth(0);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.getPhotoAspectRatio();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("m!fTQ\\H@6 ", propertyChangeListener0);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(object0, "V4wPRgd,<s%MiY]", "m!fTQ\\H@6 ", "");
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      Object object1 = new Object();
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent(object1, (String) null, propertyChangeListenerProxy0, (Object) null);
      homeEnvironment0.setSubpartSizeUnderLight(0);
      homeEnvironment0.setSubpartSizeUnderLight((-621.8691F));
      HomeTexture homeTexture1 = homeEnvironment0.getSkyTexture();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.setPhotoHeight(821);
      homeEnvironment1.setSkyTexture(homeTexture1);
      homeEnvironment0.setSkyTexture(homeTexture1);
      assertEquals(0, homeEnvironment0.getPhotoWidth());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, (-3241), (HomeTexture) null, (-109), 0.0F);
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment0.getVideoQuality();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL_AND_OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      assertEquals(HomeEnvironment.DrawingMode.FILL_AND_OUTLINE, homeEnvironment0.getDrawingMode());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=3.021517785302462
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      Class<HomeEnvironment> class0 = HomeEnvironment.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      resourceURLContent0.getJAREntryURL();
      TemporaryURLContent temporaryURLContent0 = TemporaryURLContent.copyToTemporaryURLContent(resourceURLContent0);
      CatalogTexture catalogTexture0 = new CatalogTexture("", "", temporaryURLContent0, 0.0F, 0.0F, "", true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setSkyTexture(homeTexture0);
      homeEnvironment0.setWallsAlpha((-1.0F));
      homeEnvironment0.setPhotoHeight(0);
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment0.getVideoFrameRate();
      homeEnvironment0.setVideoFrameRate(25);
      homeEnvironment0.setLightColor((-742));
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.setPhotoWidth((-1661));
      assertEquals((-1.0F), homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=3.007081920694827
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("m!fTQ\\H@6 ", "PHOTO_WIDTH", (Content) null, 821, 821, "", true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(821, homeTexture0, 821, homeTexture0, 209, (-1694.477F));
      homeEnvironment0.setSkyTexture(homeTexture0);
      homeEnvironment0.setPhotoWidth(0);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.getPhotoAspectRatio();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_HEIGHT;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("m!fTQ\\H@6 ", propertyChangeListener0);
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Camera camera0 = new Camera(0, 821, 0, (-1694.477F), (-1694.477F), 209);
      Camera camera1 = camera0.clone();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(object1, "qD\"{rZ*y1-Wtc*g", object2, camera1);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent(object0, "V4wPRgd,<s%MiY]", "m!fTQ\\H@6 ", "");
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent1);
      Object object3 = new Object();
      PropertyChangeEvent propertyChangeEvent2 = new PropertyChangeEvent(object3, (String) null, propertyChangeListenerProxy0, (Object) null);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent2);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.getPhotoAspectRatio();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL_AND_OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.getGroundColor();
      homeEnvironment0.getGroundTexture();
      homeEnvironment0.getGroundColor();
      int int0 = homeEnvironment0.getVideoHeight();
      assertEquals(HomeEnvironment.DrawingMode.FILL_AND_OUTLINE, homeEnvironment0.getDrawingMode());
      assertEquals(240, int0);
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.6376398674083723
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, 0, 1045.6F);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.getSkyColor();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("tRS@gQ|#\"uh $+", propertyChangeListener0);
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_CAMERA_PATH;
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("tRS@gQ|#\"uh $+", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("tRS@gQ|#\"uh $+", propertyChangeListenerProxy1);
      HomeEnvironment.Property homeEnvironment_Property1 = HomeEnvironment.Property.SUBPART_SIZE_UNDER_LIGHT;
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property1, propertyChangeListenerProxy2);
      homeEnvironment0.getGroundColor();
      homeEnvironment0.setVideoWidth((-2101792505));
      homeEnvironment0.setCeillingLightColor(2671);
      assertTrue(homeEnvironment0.isAllLevelsVisible());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.2240585736572336
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, 0, 1045.6F);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy((String) null, propertyChangeListener0);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.SUBPART_SIZE_UNDER_LIGHT;
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setAllLevelsVisible(true);
      assertTrue(homeEnvironment0.isAllLevelsVisible());
      
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("'.j8>{ybn`M8:", propertyChangeListenerProxy0);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      Object object0 = new Object();
      Object object1 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(propertyChangeListenerProxy0, (String) null, object0, object1);
      propertyChangeEvent0.setPropagationId((Object) null);
      propertyChangeListenerProxy1.propertyChange(propertyChangeEvent0);
      HomeEnvironment homeEnvironment2 = new HomeEnvironment(13684944, (HomeTexture) null, 13684944, 13684944, 0);
      HomeEnvironment.Property homeEnvironment_Property1 = HomeEnvironment.Property.CEILING_LIGHT_COLOR;
      homeEnvironment2.addPropertyChangeListener(homeEnvironment_Property1, propertyChangeListenerProxy1);
      assertEquals(13684944, homeEnvironment2.getLightColor());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("com.eteks.sweethome3d.io.HomeURLContent", "YAW", (Content) null, 1, 1, "IoMkWkU]Kp!", true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1, homeTexture0, (-1441), homeTexture0, 0, (-1441));
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_CAMERA_PATH;
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, (PropertyChangeListener) null);
      homeEnvironment0.setVideoQuality(0);
      homeEnvironment0.getVideoQuality();
      CatalogTexture catalogTexture1 = new CatalogTexture("", (Content) null, 0.0F, 3039.85F, true);
      catalogTexture0.compareTo(catalogTexture1);
      homeEnvironment0.setGroundColor((-5040));
      homeEnvironment0.setPhotoQuality((-617));
      homeEnvironment0.getVideoQuality();
      float float0 = homeEnvironment0.getSubpartSizeUnderLight();
      assertEquals((-617), homeEnvironment0.getPhotoQuality());
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.75012938226178
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor((-1012));
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_FRAME_RATE;
      homeEnvironment0.setVideoQuality((-1012));
      homeEnvironment0.setVideoQuality((-1012));
      homeEnvironment0.setCeillingLightColor((-1012));
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, (PropertyChangeListener) null);
      homeEnvironment0.setLightColor((-1012));
      homeEnvironment0.getPhotoQuality();
      homeEnvironment0.setSubpartSizeUnderLight((-1012));
      assertEquals((-1012), homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, 0, 1045.6F);
      homeEnvironment0.setVideoQuality(0);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.DRAWING_MODE;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("temporarySubFolder", propertyChangeListener0);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      PropertyChangeListener propertyChangeListener1 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy((String) null, propertyChangeListener1);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment(0, (HomeTexture) null, 221, 221, 1.5F);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Name is null
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.9663881312694826
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      homeEnvironment0.setGroundColor((-1028));
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_FRAME_RATE;
      homeEnvironment0.setVideoQuality((-1028));
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("com.eteks.sweethome3d.model.HomeEnvironment$Property", (PropertyChangeListener) null);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setVideoQuality(2);
      homeEnvironment0.setCeillingLightColor((-1028));
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("", (PropertyChangeListener) null);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy1);
      homeEnvironment0.setLightColor(2);
      homeEnvironment0.getPhotoQuality();
      homeEnvironment0.setSubpartSizeUnderLight(2);
      homeEnvironment0.getVideoQuality();
      HomeEnvironment.DrawingMode[] homeEnvironment_DrawingModeArray0 = HomeEnvironment.DrawingMode.values();
      assertEquals(3, homeEnvironment_DrawingModeArray0.length);
  }
}
