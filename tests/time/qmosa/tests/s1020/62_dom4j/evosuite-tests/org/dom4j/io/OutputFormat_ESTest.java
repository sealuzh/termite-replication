/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 04:44:25 GMT 2019
 */

package org.dom4j.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.dom4j.io.OutputFormat;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class OutputFormat_ESTest extends OutputFormat_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.3746284689569945
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setLineSeparator("-expandEmpty");
      outputFormat0.setIndentSize(3079);
      outputFormat0.setIndent("[HW7GDBQN9euA|1");
      outputFormat0.setOmitEncoding(true);
      OutputFormat outputFormat1 = new OutputFormat();
      outputFormat1.setIndent("");
      outputFormat1.setIndent(true);
      outputFormat0.setIndent("-lineSeparaor");
      OutputFormat outputFormat2 = new OutputFormat((String) null, true, "");
      outputFormat0.setLineSeparator((String) null);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "-indent";
      stringArray0[1] = "`}YV):";
      stringArray0[2] = "[HW7GDBQN9euA|1";
      stringArray0[3] = "`}YV):";
      stringArray0[4] = "";
      outputFormat0.parseOptions(stringArray0, 0);
      assertEquals("`}YV):", outputFormat0.getIndent());
      
      OutputFormat outputFormat3 = OutputFormat.createPrettyPrint();
      assertTrue(outputFormat3.isNewlines());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.5776343282378185
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setLineSeparator("j8cB/mD]");
      outputFormat0.setIndentSize(3068);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setIndent("j8cB/mD]");
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setIndent("N:JH=~(Pu%<-@UfJLS");
      outputFormat0.setIndent(false);
      outputFormat0.setIndent("-padText");
      OutputFormat outputFormat1 = new OutputFormat("j8cB/mD]", true, "j8cB/mD]");
      OutputFormat outputFormat2 = new OutputFormat(".{-Q/(6<4`ifr");
      outputFormat2.setNewlines(true);
      outputFormat0.setLineSeparator(".{-Q/(6<4`ifr");
      String[] stringArray0 = new String[2];
      stringArray0[0] = "N:JH=~(Pu%<-@UfJLS";
      stringArray0[1] = "-padText";
      outputFormat1.parseOptions(stringArray0, 1);
      outputFormat2.parseOptions(stringArray0, 11);
      char char0 = outputFormat0.getAttributeQuoteCharacter();
      assertEquals("-padText", outputFormat0.getIndent());
      assertEquals('\"', char0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.729697230978511
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setLineSeparator(":g");
      outputFormat0.setIndentSize(3079);
      outputFormat0.setOmitEncoding(true);
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setIndent((String) null);
      OutputFormat outputFormat2 = new OutputFormat("ujJS", false, ":g");
      outputFormat2.setOmitEncoding(false);
      outputFormat2.setIndent("");
      OutputFormat outputFormat3 = new OutputFormat("-encoding", false);
      outputFormat3.setIndent(false);
      outputFormat3.setIndent("^FO$lcrf(1d");
      OutputFormat outputFormat4 = new OutputFormat("vD$F3-;", false, (String) null);
      outputFormat0.setLineSeparator("`}YV):");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "-encoding";
      stringArray0[1] = "vD$F3-;";
      stringArray0[2] = null;
      stringArray0[3] = null;
      stringArray0[4] = null;
      // Undeclared exception!
      try { 
        outputFormat3.parseOptions(stringArray0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.1816878776451682
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setLineSeparator("-expandEmpty");
      outputFormat0.setIndentSize(3079);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setIndent("");
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setIndent("-expandEmpty");
      outputFormat0.setIndent(true);
      OutputFormat outputFormat1 = new OutputFormat("", true);
      outputFormat1.setIndent("-trimText");
      outputFormat0.setIndent("");
      OutputFormat outputFormat2 = new OutputFormat("", false, "NiA)&gLkZ}@</KT");
      outputFormat2.setLineSeparator("");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-trimText";
      stringArray0[1] = "";
      stringArray0[2] = "";
      int int0 = outputFormat0.parseOptions(stringArray0, 0);
      assertEquals("-expandEmpty", outputFormat0.getLineSeparator());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.5804433332419348
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setLineSeparator("-expandEmpty");
      outputFormat0.setIndentSize(3079);
      outputFormat0.setOmitEncoding(true);
      OutputFormat outputFormat1 = new OutputFormat();
      outputFormat1.setOmitEncoding(true);
      outputFormat1.setIndent("");
      outputFormat1.setOmitEncoding(true);
      outputFormat1.setIndent("-expandEmpty");
      OutputFormat outputFormat2 = new OutputFormat("", false);
      outputFormat2.setIndent("");
      outputFormat0.setIndent(true);
      outputFormat0.setIndent("3QYi)d^a17`");
      OutputFormat outputFormat3 = new OutputFormat("-expandEmpty-trimText", false, (String) null);
      outputFormat2.setLineSeparator("m<Oo3j_ MQ\"CNHEi8O");
      outputFormat0.setLineSeparator("3QYi)d^a17`");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      int int0 = outputFormat2.parseOptions(stringArray0, 1);
      assertEquals("m<Oo3j_ MQ\"CNHEi8O", outputFormat2.getLineSeparator());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.4213147911682307
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "p[>SY5[X9:g^32;zmP";
      stringArray0[1] = "AS'd}OYVE6Iim";
      stringArray0[2] = "AS'd}OYVE6Iim";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setEncoding("AS'd}OYVE6Iim");
      outputFormat0.setLineSeparator("DiALko");
      outputFormat0.setLineSeparator("p[>SY5[X9:g^32;zmP");
      outputFormat0.setNewLineAfterNTags(1);
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.setSuppressDeclaration(true);
      OutputFormat outputFormat1 = new OutputFormat("AS'd}OYVE6Iim", true, "AS'd}OYVE6Iim");
      outputFormat1.setTrimText(false);
      outputFormat0.setLineSeparator((String) null);
      outputFormat0.getNewLineAfterNTags();
      assertTrue(outputFormat0.isSuppressDeclaration());
      
      String string0 = outputFormat1.getEncoding();
      assertEquals("AS'd}OYVE6Iim", string0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.448437455613918
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      outputFormat0.setLineSeparator("");
      outputFormat0.setIndentSize(3079);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setIndent("");
      outputFormat0.setIndent("/");
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.setEncoding((String) null);
      outputFormat0.setExpandEmptyElements(true);
      assertEquals("/", outputFormat0.getIndent());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.2897413271187324
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setPadText(false);
      outputFormat0.setXHTML(true);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "";
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      stringArray0[2] = "";
      stringArray0[3] = "`+#5\"K";
      stringArray0[4] = "6efe1t";
      stringArray0[5] = " ";
      outputFormat0.parseOptions(stringArray0, 532);
      outputFormat1.setAttributeQuoteCharacter('\'');
      outputFormat0.setSuppressDeclaration(false);
      outputFormat1.getLineSeparator();
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      outputFormat2.isOmitEncoding();
      OutputFormat outputFormat3 = new OutputFormat("", false, "");
      outputFormat3.setIndent("`+#5\"K");
      outputFormat0.setNewLineAfterDeclaration(false);
      assertTrue(outputFormat0.isXHTML());
      
      outputFormat2.setIndent(" ");
      assertFalse(outputFormat2.isExpandEmptyElements());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.3095869490918566
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setIndent("-lineSeparaor");
      outputFormat0.setLineSeparator("");
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      stringArray0[1] = "-lineSeparaor";
      outputFormat0.parseOptions(stringArray0, 38);
      outputFormat0.parseOptions(stringArray0, 1070);
      outputFormat0.setEncoding("-lineSeparaor");
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setIndent("");
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat1.isSuppressDeclaration();
      outputFormat1.setOmitEncoding(false);
      outputFormat0.setAttributeQuoteCharacter('\"');
      outputFormat1.setPadText(true);
      OutputFormat outputFormat2 = new OutputFormat("{IJk<", false, ".)78@k{^U\"<chLE");
      OutputFormat.createCompactFormat();
      outputFormat0.isOmitEncoding();
      assertEquals("-lineSeparaor", outputFormat0.getEncoding());
      
      OutputFormat.createCompactFormat();
      OutputFormat.createCompactFormat();
      OutputFormat outputFormat3 = OutputFormat.createCompactFormat();
      assertEquals('\"', outputFormat3.getAttributeQuoteCharacter());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.477470523723265
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.setPadText(false);
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      outputFormat0.setTrimText(false);
      outputFormat0.setXHTML(true);
      OutputFormat outputFormat3 = OutputFormat.createCompactFormat();
      outputFormat3.setIndent("");
      outputFormat3.setIndent("-xhtml");
      outputFormat3.setXHTML(true);
      outputFormat3.getNewLineAfterNTags();
      outputFormat3.setPadText(false);
      outputFormat3.isSuppressDeclaration();
      outputFormat3.isSuppressDeclaration();
      outputFormat2.isTrimText();
      outputFormat3.setIndent("");
      outputFormat3.setOmitEncoding(false);
      outputFormat0.setNewLineAfterNTags((-5961));
      outputFormat3.isExpandEmptyElements();
      outputFormat1.getEncoding();
      outputFormat2.setIndentSize(0);
      outputFormat1.setXHTML(true);
      outputFormat0.getIndent();
      outputFormat2.getAttributeQuoteCharacter();
      outputFormat2.setPadText(false);
      outputFormat2.getEncoding();
      outputFormat1.isXHTML();
      assertEquals("\n", outputFormat1.getLineSeparator());
      
      outputFormat1.setLineSeparator("");
      assertTrue(outputFormat1.isXHTML());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.3171305909712787
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("]S9:|EL{k2", true);
      outputFormat0.setLineSeparator("");
      outputFormat0.setIndentSize(3079);
      outputFormat0.setIndent("");
      outputFormat0.setIndent("");
      OutputFormat outputFormat1 = new OutputFormat("B3t%.[4<cjaq Y*\"rw", false);
      outputFormat0.setIndent("{i.i3@W%&TLYr0gr^");
      outputFormat1.setIndent("B3t%.[4<cjaq Y*\"rw");
      OutputFormat outputFormat2 = new OutputFormat((String) null, true, "-lineSeparao");
      outputFormat2.setLineSeparator((String) null);
      outputFormat2.setLineSeparator("{i.i3@W%&TLYr0gr^");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "Q)";
      stringArray0[1] = "-lineSeparao";
      stringArray0[2] = "";
      stringArray0[3] = "{i.i3@W%&TLYr0gr^";
      stringArray0[4] = "-lineS";
      OutputFormat outputFormat3 = new OutputFormat("", true);
      outputFormat3.parseOptions(stringArray0, 3079);
      outputFormat0.getLineSeparator();
      assertEquals("{i.i3@W%&TLYr0gr^", outputFormat0.getIndent());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.1719330103601107
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setIndentSize(3079);
      outputFormat0.setIndent("");
      outputFormat0.setIndent("-expandEmpty");
      String string0 = "{i.i3@W%&TLYr0gr^";
      outputFormat0.setIndent("{i.i3@W%&TLYr0gr^");
      String string1 = "-lineSeparao";
      OutputFormat outputFormat1 = new OutputFormat("{i.i3@W%&TLYr0gr^", true, "-lineSeparao");
      outputFormat1.setLineSeparator("");
      outputFormat0.setLineSeparator("Q)");
      OutputFormat outputFormat2 = new OutputFormat();
      // Undeclared exception!
      try { 
        outputFormat1.setAttributeQuoteCharacter('!');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (!)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", false);
      String string0 = outputFormat0.getEncoding();
      assertEquals("", outputFormat0.getIndent());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals("UTF-8", string0);
      assertFalse(outputFormat0.isTrimText());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isXHTML());
      assertFalse(outputFormat0.isPadText());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isSuppressDeclaration());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.369743730399664
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      outputFormat0.setLineSeparator("-expandEmpty");
      outputFormat0.setIndentSize(3079);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setIndent("-expandEmpty");
      outputFormat0.setIndent("");
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setIndentSize(4071);
      outputFormat0.setLineSeparator("");
      outputFormat0.setIndent(false);
      outputFormat0.setNewLineAfterNTags(4071);
      outputFormat0.setNewlines(true);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat0.isNewLineAfterDeclaration();
      OutputFormat.createPrettyPrint();
      outputFormat0.setNewlines(true);
      outputFormat0.setXHTML(true);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.isOmitEncoding();
      outputFormat0.setEncoding("");
      assertEquals("", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.525950491234776
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setIndent("");
      outputFormat0.setPadText(true);
      outputFormat0.isNewlines();
      assertFalse(outputFormat0.isNewlines());
      
      outputFormat0.setNewlines(true);
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.4522469794234416
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setLineSeparator("-expandEmpty");
      outputFormat0.setIndentSize(3079);
      outputFormat0.setIndent("");
      outputFormat0.setIndent("-expandEmpty");
      OutputFormat outputFormat1 = new OutputFormat("", false);
      outputFormat0.setIndent(false);
      outputFormat0.setIndent("{i.i3@W%&TLYr0gr^");
      outputFormat1.setIndent("");
      OutputFormat outputFormat2 = new OutputFormat((String) null, false, "8a&n ");
      outputFormat2.setLineSeparator("JZm!xK/{)/rZ$pQP3?g");
      int int0 = outputFormat2.getNewLineAfterNTags();
      assertEquals("JZm!xK/{)/rZ$pQP3?g", outputFormat2.getLineSeparator());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.7894678696691564
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setLineSeparator("-expandEmpty");
      outputFormat0.setIndentSize(3079);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setIndent("");
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setIndent("-expandEmpty");
      outputFormat0.setIndent(true);
      OutputFormat outputFormat1 = new OutputFormat("-xhtml", true);
      outputFormat1.setIndent("");
      outputFormat1.setIndent("");
      OutputFormat outputFormat2 = new OutputFormat("T=M2i*S?Lb[Yt`T(", true, "-xhtml%Dug3W");
      outputFormat0.setLineSeparator("-xhtml%Dug3W");
      OutputFormat outputFormat3 = new OutputFormat("Ym=/Zq/");
      assertFalse(outputFormat3.isXHTML());
      
      String[] stringArray0 = new String[4];
      outputFormat3.setXHTML(true);
      stringArray0[0] = "-expandEmpty";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      int int0 = outputFormat3.parseOptions(stringArray0, 3079);
      assertEquals(3079, int0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.453728460904923
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setLineSeparator("-expandEmpty");
      outputFormat0.setIndentSize(3079);
      outputFormat0.setIndent("");
      outputFormat0.setIndent("-expandEmpty");
      OutputFormat outputFormat1 = new OutputFormat("", false);
      outputFormat0.setIndent(false);
      outputFormat0.setIndent("{i.i3@W%&TLYr0gr^");
      outputFormat1.setIndent("");
      OutputFormat outputFormat2 = new OutputFormat("{i.i3@W%&TLYr0gr^", true, "-lineSeparao");
      outputFormat2.setLineSeparator("");
      outputFormat0.setLineSeparator("Q)");
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1736589545));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1736589545
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.3358420882625257
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setIndent("-lineSeparaor");
      outputFormat0.setLineSeparator("");
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      stringArray0[1] = "-lineSeparaor";
      outputFormat0.parseOptions(stringArray0, 38);
      outputFormat0.setEncoding("^E*_Y)5K%4+5A:tjT");
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setNewLineAfterDeclaration(true);
      outputFormat0.setNewlines(false);
      outputFormat1.setTrimText(true);
      outputFormat1.getIndent();
      outputFormat1.setExpandEmptyElements(true);
      outputFormat0.getAttributeQuoteCharacter();
      String string0 = OutputFormat.STANDARD_INDENT;
      outputFormat0.getLineSeparator();
      assertEquals("-lineSeparaor", outputFormat0.getIndent());
      
      outputFormat1.setAttributeQuoteCharacter('\"');
      assertEquals("UTF-8", outputFormat1.getEncoding());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.3676341587746297
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      outputFormat0.setIndent("");
      outputFormat0.isXHTML();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      stringArray0[1] = "";
      OutputFormat.createCompactFormat();
      stringArray0[2] = "";
      stringArray0[3] = "";
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat1.setEncoding("");
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      outputFormat2.setOmitEncoding(false);
      outputFormat2.setEncoding("");
      outputFormat0.setSuppressDeclaration(false);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-797));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -797
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.054403796163291
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("Jt]G<H&3(|>Jjuaf", true, "");
      outputFormat0.getIndent();
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setIndent(true);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setIndent((String) null);
      outputFormat0.setLineSeparator("Jt]G<H&3(|>Jjuaf");
      outputFormat0.setEncoding("Jt]G<H&3(|>Jjuaf");
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setIndent("v@8M1Jc~I~g<");
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setIndent(true);
      outputFormat0.setIndentSize((-58));
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setLineSeparator("");
      outputFormat0.isNewlines();
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.setEncoding("");
      outputFormat0.getIndent();
      outputFormat0.setXHTML(true);
      assertEquals("", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "]";
      stringArray0[1] = "lP?s`";
      stringArray0[2] = "Jeq,I>/_2g+q";
      stringArray0[3] = "-lineSeparaor";
      stringArray0[4] = " tv";
      stringArray0[5] = "-indent";
      stringArray0[6] = ")";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.214534764133424
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setEncoding("-trimText");
      outputFormat0.setIndent(",iJ ^e6faR>lHM");
      outputFormat0.isPadText();
      outputFormat0.setIndent("-trimText");
      outputFormat0.getEncoding();
      outputFormat0.getLineSeparator();
      assertEquals("-trimText", outputFormat0.getEncoding());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.1034354550763315
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("3i5Yf<6eI?EU9Fi%%n", true, "3i5Yf<6eI?EU9Fi%%n");
      outputFormat0.setOmitEncoding(false);
      OutputFormat outputFormat1 = new OutputFormat("3i5Yf<6eI?EU9Fi%%n", false, "3i5Yf<6eI?EU9Fi%%n");
      outputFormat1.setPadText(false);
      outputFormat0.setPadText(true);
      outputFormat0.setTrimText(false);
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setIndentSize((-1));
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setEncoding("2:?(u`Yl)Wg[8IOp");
      outputFormat0.setIndent("<D/fvr!6;?");
      outputFormat0.setNewlines(false);
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.isPadText();
      outputFormat0.setNewlines(false);
      outputFormat0.isOmitEncoding();
      assertEquals("<D/fvr!6;?", outputFormat0.getIndent());
      
      outputFormat1.setIndent("3i5Yf<6eI?EU9Fi%%n");
      assertFalse(outputFormat1.isSuppressDeclaration());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.0923706867890717
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      assertEquals("\n", outputFormat0.getLineSeparator());
      
      outputFormat0.setLineSeparator("");
      outputFormat0.setIndentSize(3079);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setIndent("");
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setIndent("");
      outputFormat0.setIndent(false);
      outputFormat0.setIndent("");
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      stringArray0[1] = "";
      OutputFormat outputFormat1 = new OutputFormat((String) null, false, "");
      outputFormat0.setNewlines(true);
      outputFormat0.setLineSeparator("");
      String[] stringArray1 = new String[5];
      stringArray1[0] = "`}YV):";
      stringArray1[1] = "";
      stringArray1[2] = "`}YV):";
      stringArray1[3] = null;
      outputFormat0.parseOptions(stringArray1, 0);
      int int0 = outputFormat1.parseOptions(stringArray0, 0);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.788299378708331
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.setEncoding("");
      outputFormat0.setIndent(false);
      assertTrue(outputFormat0.isTrimText());
      
      outputFormat0.setTrimText(false);
      String[] stringArray0 = new String[0];
      outputFormat0.parseOptions(stringArray0, 2042);
      outputFormat0.setPadText(false);
      outputFormat0.setOmitEncoding(false);
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      boolean boolean0 = outputFormat1.isTrimText();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.850863601176158
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      String[] stringArray0 = new String[5];
      stringArray0[0] = ":SVP_RP>Z$=S<|Dkd";
      outputFormat0.setEncoding(":SVP_RP>Z$=S<|Dkd");
      stringArray0[1] = "\"<hGR'],43$c@";
      outputFormat0.setIndent(true);
      stringArray0[2] = "+2fJz|uR(UNo8Q>";
      stringArray0[3] = "";
      stringArray0[4] = "";
      outputFormat0.setTrimText(false);
      outputFormat0.parseOptions(stringArray0, 3757);
      outputFormat0.setPadText(true);
      outputFormat0.setOmitEncoding(false);
      boolean boolean0 = outputFormat0.isTrimText();
      assertEquals(":SVP_RP>Z$=S<|Dkd", outputFormat0.getEncoding());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.1816878776451682
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setLineSeparator("-expandEmpty");
      outputFormat0.setIndentSize(3079);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setIndent("");
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setIndent("-expandEmpty");
      outputFormat0.setIndent(true);
      OutputFormat outputFormat1 = new OutputFormat("{%D.:0o!]ZiCb", true);
      outputFormat1.setIndentSize(2126);
      outputFormat1.setIndent("-trimText");
      outputFormat0.setIndent("");
      OutputFormat outputFormat2 = new OutputFormat("", false, "Ym=/Zq/");
      String[] stringArray0 = new String[4];
      stringArray0[0] = ",Xg>bsh&RgK6x!VI'";
      stringArray0[1] = "-expandEmpty";
      stringArray0[2] = "";
      stringArray0[3] = "";
      int int0 = outputFormat2.parseOptions(stringArray0, 1);
      assertTrue(outputFormat2.isExpandEmptyElements());
      assertEquals(2, int0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.3190211812571495
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "Qx";
      stringArray0[2] = "d]``C $m57WmOlE.";
      stringArray0[3] = "";
      stringArray0[4] = "STgy{*/";
      stringArray0[5] = "O97";
      stringArray0[6] = "-expandEmpty{%D.:0o!]ZiCb";
      stringArray0[7] = "";
      stringArray0[8] = "NRI%Wgne;";
      outputFormat0.parseOptions(stringArray0, 4);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.setLineSeparator("%96GxQpoX");
      outputFormat0.getLineSeparator();
      outputFormat0.getEncoding();
      assertEquals("%96GxQpoX", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.178698947858194
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat0.setOmitEncoding(true);
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      outputFormat2.setSuppressDeclaration(false);
      outputFormat1.setPadText(true);
      outputFormat2.setIndent(false);
      outputFormat0.setTrimText(true);
      outputFormat0.setNewLineAfterDeclaration(true);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      stringArray0[1] = ")";
      stringArray0[2] = "+nMk9|L>zkj1";
      stringArray0[3] = "O5hOm/}-Gk?JAA)PlA+";
      stringArray0[4] = "";
      outputFormat1.parseOptions(stringArray0, 248);
      outputFormat0.setNewlines(false);
      outputFormat0.setPadText(false);
      outputFormat0.setNewLineAfterNTags(3655);
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setIndent(false);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.isSuppressDeclaration();
      outputFormat0.isTrimText();
      assertEquals(3655, outputFormat0.getNewLineAfterNTags());
      
      boolean boolean0 = outputFormat1.isSuppressDeclaration();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-suppressDeclaration");
      String string0 = outputFormat0.getLineSeparator();
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isXHTML());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isPadText());
      assertEquals("-suppressDeclaration", outputFormat0.getIndent());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertEquals("\n", string0);
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isOmitEncoding());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.3158534517631053
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("]S9:|EL{k2", true);
      outputFormat0.setLineSeparator("");
      outputFormat0.setIndentSize(3079);
      outputFormat0.setIndent("");
      outputFormat0.setIndent("");
      OutputFormat outputFormat1 = new OutputFormat("B3t%.[4<cjaq Y*\"rw", false);
      outputFormat0.setIndent("{i.i3@W%&TLYr0gr^");
      outputFormat1.setIndent("B3t%.[4<cjaq Y*\"rw");
      OutputFormat outputFormat2 = new OutputFormat((String) null, true, "");
      outputFormat2.setPadText(true);
      outputFormat2.setLineSeparator((String) null);
      outputFormat2.setLineSeparator("{i.i3@W%&TLYr0gr^");
      assertEquals("{i.i3@W%&TLYr0gr^", outputFormat2.getLineSeparator());
      
      String[] stringArray0 = new String[7];
      stringArray0[0] = "Q)";
      stringArray0[1] = "-lineSeparao";
      stringArray0[2] = "";
      stringArray0[3] = "{i.i3@W%&TLYr0gr^";
      stringArray0[4] = "-lineS";
      stringArray0[5] = "-expandEmpty";
      stringArray0[6] = "]S9:|EL{k2";
      int int0 = outputFormat1.parseOptions(stringArray0, 34);
      assertEquals(34, int0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.4522469794234416
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setTrimText(false);
      outputFormat0.setIndentSize(3079);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setIndent("");
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setIndent("-expandEmpty");
      outputFormat0.setIndent(true);
      outputFormat0.setIndent("");
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-expandEmpty";
      stringArray0[1] = "-expandEmpty";
      outputFormat0.setIndent("");
      outputFormat0.setLineSeparator("-expandEmpty");
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-3398));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3398
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.1180582344380445
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setLineSeparator("-expandEmpty");
      outputFormat0.setIndentSize(3079);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setIndent("");
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setIndent("-expandEmpty");
      outputFormat0.setIndent("");
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.getLineSeparator();
      OutputFormat outputFormat1 = new OutputFormat("F{x\"", true, "");
      outputFormat1.setEncoding("ML(5ai'");
      assertEquals("ML(5ai'", outputFormat1.getEncoding());
      
      OutputFormat outputFormat2 = new OutputFormat();
      outputFormat2.isExpandEmptyElements();
      OutputFormat outputFormat3 = OutputFormat.createCompactFormat();
      assertEquals("UTF-8", outputFormat3.getEncoding());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.8862698694533973
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setLineSeparator("-expandEmpty");
      outputFormat0.setIndentSize(3079);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setIndent("");
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setIndent("-expandEmpty");
      outputFormat0.setIndent(true);
      OutputFormat outputFormat1 = new OutputFormat("", true);
      outputFormat1.setIndent("-trimText");
      outputFormat0.setIndent("");
      assertEquals("-expandEmpty", outputFormat0.getLineSeparator());
      
      OutputFormat outputFormat2 = new OutputFormat("", false, "<zI");
      OutputFormat.createCompactFormat();
      OutputFormat outputFormat3 = new OutputFormat("", false, "");
      OutputFormat outputFormat4 = new OutputFormat("-expandEmptyp[>SY5[X9:g^32;zmP", true, "-expandEmpty");
      outputFormat4.isOmitEncoding();
      OutputFormat.createCompactFormat();
      OutputFormat.createCompactFormat();
      OutputFormat outputFormat5 = OutputFormat.createCompactFormat();
      assertEquals('\"', outputFormat5.getAttributeQuoteCharacter());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.312501962594998
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      OutputFormat outputFormat1 = new OutputFormat();
      OutputFormat outputFormat2 = new OutputFormat();
      outputFormat2.setLineSeparator("-indentSize");
      outputFormat0.setIndentSize((-1));
      outputFormat2.setOmitEncoding(true);
      outputFormat0.setIndent("Jh&a");
      outputFormat0.setOmitEncoding(false);
      outputFormat1.setIndent("Jh&a");
      outputFormat0.setIndent(true);
      outputFormat1.setIndent((String) null);
      outputFormat2.setIndent("nh`e");
      outputFormat2.setLineSeparator("");
      assertEquals("", outputFormat2.getLineSeparator());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.449191882584089
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setIndent("-expandEmpty");
      outputFormat0.setIndent("");
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.getLineSeparator();
      outputFormat0.setNewlines(true);
      outputFormat0.setEncoding("");
      boolean boolean0 = outputFormat0.isExpandEmptyElements();
      assertEquals("", outputFormat0.getEncoding());
      assertTrue(outputFormat0.isNewlines());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.974268351915661
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true);
      outputFormat0.setEncoding("f=P[~#KDc~");
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setEncoding("");
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.isOmitEncoding();
      assertEquals("", outputFormat0.getEncoding());
      
      OutputFormat.createCompactFormat();
      OutputFormat.createCompactFormat();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      assertFalse(outputFormat1.isXHTML());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.4286687697449683
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      OutputFormat.createCompactFormat();
      outputFormat0.setPadText(true);
      assertFalse(outputFormat0.isNewlines());
      
      outputFormat0.setNewlines(true);
      outputFormat0.isNewlines();
      outputFormat0.setNewlines(true);
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("L/Y&*qyV&&>TS<H", false, "");
      String string0 = outputFormat0.getEncoding();
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isPadText());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertFalse(outputFormat0.isXHTML());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertEquals("L/Y&*qyV&&>TS<H", outputFormat0.getIndent());
      assertEquals("", string0);
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isOmitEncoding());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.9740292277908194
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setLineSeparator("");
      outputFormat0.setIndentSize(3079);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setIndent("");
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setIndent("");
      outputFormat0.setIndent(true);
      outputFormat0.setIndent("");
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      stringArray0[1] = "";
      OutputFormat outputFormat1 = new OutputFormat((String) null, true, "");
      outputFormat1.setIndentSize(3079);
      outputFormat0.setLineSeparator("");
      String[] stringArray1 = new String[5];
      stringArray1[0] = "`}YV):";
      stringArray1[1] = "";
      stringArray1[2] = "`}YV):";
      stringArray1[3] = null;
      stringArray1[4] = "`}YV):";
      int int0 = outputFormat0.parseOptions(stringArray1, 0);
      assertTrue(outputFormat0.isOmitEncoding());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.8816171508386506
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setLineSeparator("-expandEmpty");
      outputFormat0.setIndentSize(3079);
      outputFormat0.setIndent("");
      outputFormat0.setIndent("-expandEmpty");
      OutputFormat outputFormat1 = new OutputFormat("", false);
      outputFormat0.setIndent("{i.i3@W%&TLYr0gr^");
      outputFormat1.setIndent("");
      OutputFormat outputFormat2 = new OutputFormat("{i.i3@W%&TLYr0gr^", true, "-lineSeparao");
      outputFormat2.setLineSeparator("");
      outputFormat0.setLineSeparator("Q)");
      assertEquals("Q)", outputFormat0.getLineSeparator());
      
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[1] = "-lineSeparao";
      stringArray0[2] = "{i.i3@W%&TLYr0gr^";
      int int0 = outputFormat2.parseOptions(stringArray0, 1);
      assertEquals(1, int0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String string0 = "-lineS";
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('l');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (l)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.isNewLineAfterDeclaration();
      assertFalse(outputFormat0.isPadText());
      
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[1] = "yxVBcVF2lwar";
      stringArray0[2] = "";
      stringArray0[3] = "";
      outputFormat0.setPadText(true);
      outputFormat0.isNewlines();
      outputFormat0.setNewlines(false);
      assertTrue(outputFormat0.isPadText());
  }
}
