/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 30 07:01:07 GMT 2020
 */

package weka.experiment;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Comparator;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import weka.experiment.ResultMatrix;
import weka.experiment.ResultMatrixCSV;
import weka.experiment.ResultMatrixGnuPlot;
import weka.experiment.ResultMatrixHTML;
import weka.experiment.ResultMatrixLatex;
import weka.experiment.ResultMatrixPlainText;
import weka.experiment.ResultMatrixSignificance;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ResultMatrix_ESTest extends ResultMatrix_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.5366605602869163
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.removeFilterName("BU^5p$eJ-U/!SJ");
      String[] stringArray0 = new String[8];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      resultMatrixGnuPlot0.m_MeanWidth = (-2916);
      resultMatrixGnuPlot0.setSignificanceWidth(0);
      stringArray0[3] = "";
      resultMatrixGnuPlot0.m_StdDevPrec = 393;
      resultMatrixGnuPlot0.getOptions();
      stringArray0[4] = "v";
      resultMatrixGnuPlot0.m_PrintColNames = false;
      resultMatrixGnuPlot0.setStdDevPrec((-1));
      stringArray0[5] = "NC%X@/";
      stringArray0[6] = "";
      resultMatrixGnuPlot0.doubleToString(0, 0);
      stringArray0[7] = "";
      resultMatrixGnuPlot0.listOptions();
      ResultMatrixCSV.main(stringArray0);
      resultMatrixGnuPlot0.toStringRanking();
      resultMatrixGnuPlot0.clearHeader();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 50);
      resultMatrixCSV0.getDefaultRowNameWidth();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixCSV0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      resultMatrixPlainText0.getSummaryTitle(20);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixPlainText0);
      // Undeclared exception!
      try { 
        resultMatrixHTML1.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.758489204029649
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      int[] intArray0 = new int[1];
      int[][] intArray1 = new int[7][9];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      int[] intArray2 = new int[8];
      intArray2[0] = 0;
      intArray2[1] = 2;
      intArray2[4] = 0;
      intArray2[5] = 0;
      intArray2[6] = 2;
      intArray2[7] = 1;
      intArray1[5] = intArray0;
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      resultMatrixPlainText0.setRowName(1, "$\bullet$");
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(26, 3);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixCSV0);
      resultMatrixCSV1.getDefaultRowNameWidth();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixLatex0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixPlainText0);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixPlainText0);
      ResultMatrixHTML resultMatrixHTML2 = new ResultMatrixHTML();
      // Undeclared exception!
      try { 
        resultMatrixHTML2.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.1894573091272505
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(95, 0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      resultMatrixCSV0.setPrintRowNames(true);
      int[] intArray0 = new int[8];
      resultMatrixCSV0.setColOrder(intArray0);
      intArray0[0] = 0;
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      resultMatrixLatex0.setRowOrder(intArray0);
      resultMatrixLatex0.toStringKey();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getSignificance((-1), (-4008));
      resultMatrixCSV0.isStdDev((-866));
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.110608959552884
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(95, 0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      resultMatrixCSV0.setPrintRowNames(true);
      int[] intArray0 = new int[8];
      resultMatrixCSV0.setColOrder((int[]) null);
      intArray0[0] = 0;
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      resultMatrixLatex0.setRowOrder(intArray0);
      resultMatrixLatex0.toStringKey();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getSignificance((-1), (-4008));
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.9681239800897954
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(95, 0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      resultMatrixCSV0.setPrintRowNames(true);
      int[] intArray0 = new int[8];
      intArray0[0] = 0;
      intArray0[1] = 95;
      intArray0[2] = 0;
      intArray0[3] = 2;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      resultMatrixSignificance0.getDefaultPrintColNames();
      resultMatrixSignificance0.setEnumerateRowNames(false);
      resultMatrixSignificance0.setCount(2, 0.0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      resultMatrixHTML0.setColNameWidth(26);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.6316121865953988
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixCSV0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV1);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(193, 2);
      // Undeclared exception!
      try { 
        resultMatrixLatex0.setSummary((int[][]) null, (int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.0335193589394978
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(95, 0);
      resultMatrixGnuPlot0.toStringKey();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[] intArray0 = new int[8];
      intArray0[0] = 2;
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 1;
      intArray0[4] = 0;
      intArray0[5] = 0;
      intArray0[6] = 2;
      intArray0[7] = 2;
      resultMatrixSignificance0.setRowOrder(intArray0);
      resultMatrixSignificance0.setStdDevWidth(0);
      resultMatrixSignificance0.getDefaultPrintColNames();
      resultMatrixSignificance0.clearHeader();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.globalInfo();
      resultMatrixCSV0.toStringKey();
      resultMatrixCSV0.getDefaultRowNameWidth();
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.8023124626719724
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[0] = "e";
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      resultMatrixCSV0.setPrintRowNames(true);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      resultMatrixSignificance0.getDefaultPrintColNames();
      resultMatrixSignificance0.setEnumerateRowNames(false);
      resultMatrixSignificance0.setCount(1, (-557.82122515126));
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      int[][] intArray0 = new int[1][4];
      int[] intArray1 = new int[2];
      intArray1[0] = 1;
      intArray1[1] = 0;
      intArray0[0] = intArray1;
      resultMatrixLatex0.setSummary(intArray0, intArray0);
      resultMatrixCSV0.getDefaultShowAverage();
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.2270050582485554
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixLatex0.setEnumerateColNames(true);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.toArray();
      resultMatrixSignificance0.getDefaultPrintColNames();
      resultMatrixSignificance0.clearHeader();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixLatex0.setRowOrder((int[]) null);
      resultMatrixLatex0.toStringKey();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getSignificance(1, 4);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.845638493134258
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.removeFilterName("BU^5p$eJ-U/!SJ");
      String[] stringArray0 = new String[8];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      resultMatrixGnuPlot0.setSignificanceWidth(0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      resultMatrixSignificance0.getDefaultPrintColNames();
      resultMatrixSignificance0.setEnumerateRowNames(false);
      resultMatrixSignificance0.setCount(0, 0);
      resultMatrixSignificance0.addHeader("pw3W Au=fka@n5Y+D", "pw3W Au=fka@n5Y+D");
      resultMatrixGnuPlot0.getColHidden(0);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = null;
      try {
        resultMatrixGnuPlot1 = new ResultMatrixGnuPlot((-1735), (-1));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.3080391391778052
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixLatex0);
      resultMatrixGnuPlot0.removeFilterName("");
      resultMatrixGnuPlot0.setSignificanceWidth(2156);
      resultMatrixGnuPlot0.getOptions();
      boolean boolean0 = false;
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixLatex0);
      resultMatrixGnuPlot1.removeFilterName("$\bullet$");
      resultMatrixGnuPlot1.setStdDevPrec(2);
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.doubleToString((-520.0), (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.3193883943441285
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(110, 0);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixGnuPlot0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot1);
      resultMatrixPlainText0.toString();
      resultMatrixPlainText0.getColOrder();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      resultMatrixPlainText1.toStringRanking();
      resultMatrixPlainText1.listOptions();
      resultMatrixPlainText1.toStringKey();
      resultMatrixHTML0.setColNameWidth(0);
      resultMatrixPlainText0.addHeader("*", ";)]fJ8#_");
      ResultMatrixGnuPlot resultMatrixGnuPlot2 = new ResultMatrixGnuPlot();
      ResultMatrixGnuPlot resultMatrixGnuPlot3 = new ResultMatrixGnuPlot(26, 4051);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.2569564978206307
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixLatex0.setEnumerateColNames(true);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.toArray();
      resultMatrixSignificance0.getDefaultPrintColNames();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setPrintColNames(false);
      resultMatrixCSV0.globalInfo();
      resultMatrixCSV0.toStringKey();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      resultMatrixPlainText0.setRowName(0, "\tWhether to remove the classname package prefixes from the\n\tfilter names in datasets.\n\t(default: no)");
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(0, 50);
      resultMatrixCSV1.getDefaultRowNameWidth();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixCSV1);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixCSV1);
      ResultMatrixHTML resultMatrixHTML2 = new ResultMatrixHTML(resultMatrixHTML1);
      // Undeclared exception!
      try { 
        resultMatrixHTML2.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.437650933384795
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(28, 28);
      resultMatrixSignificance0.setRowNameWidth(25);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(28, 2);
      resultMatrixSignificance0.m_CountWidth = 2;
      resultMatrixSignificance0.m_PrintRowNames = true;
      resultMatrixSignificance0.m_StdDevPrec = 25;
      resultMatrixLatex0.listOptions();
      resultMatrixSignificance0.m_RowNameWidth = (-2258);
      resultMatrixLatex0.m_ColNameWidth = 2;
      resultMatrixSignificance0.assign(resultMatrixLatex0);
      resultMatrixLatex0.toStringMatrix();
      resultMatrixSignificance0.toString();
      resultMatrixSignificance0.getSignificanceWidth();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(28, 28);
      resultMatrixHTML0.toStringMatrix();
      resultMatrixLatex0.setRowName(6772, ")");
      assertEquals(2, resultMatrixLatex0.getColNameWidth());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.1486514445010547
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      int[] intArray0 = new int[1];
      boolean[] booleanArray0 = new boolean[2];
      int[][] intArray1 = new int[7][9];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      int[] intArray2 = new int[8];
      intArray2[0] = 0;
      intArray2[1] = 1;
      intArray2[2] = 0;
      intArray2[3] = 1;
      intArray2[4] = 0;
      intArray2[5] = 0;
      intArray2[6] = 2;
      intArray2[7] = 1;
      intArray1[4] = intArray2;
      intArray1[5] = intArray0;
      intArray1[6] = intArray0;
      resultMatrixLatex0.m_Significance = intArray1;
      resultMatrixLatex0.m_ColOrder = intArray0;
      booleanArray0[0] = true;
      booleanArray0[1] = false;
      intArray0[0] = 0;
      resultMatrixLatex0.setRowOrder(intArray0);
      resultMatrixLatex0.toStringKey();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.m_PrintRowNames = true;
      resultMatrixPlainText0.getSignificance(378, 1142);
      resultMatrixPlainText0.toStringSummary();
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.277008204734086
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.toStringKey();
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 1;
      doubleArray0[2] = (double) 1;
      doubleArray0[3] = (double) 1;
      doubleArray0[4] = (double) 0;
      doubleArray0[5] = (double) 1;
      resultMatrixGnuPlot0.m_Counts = doubleArray0;
      resultMatrixGnuPlot0.m_Counts = null;
      resultMatrixGnuPlot0.toStringMatrix();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.clearRanking();
      resultMatrixSignificance0.getDefaultPrintColNames();
      resultMatrixSignificance0.setEnumerateRowNames(false);
      resultMatrixSignificance0.setCount(2640, 0.0);
      resultMatrixSignificance0.addHeader("*", "SS)^5lp2~}B#");
      resultMatrixGnuPlot0.getColHidden((-2266));
      resultMatrixGnuPlot0.stdDevPrecTipText();
      ResultMatrixCSV resultMatrixCSV0 = null;
      try {
        resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.4219535088817388
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(28, 28);
      resultMatrixSignificance0.setRowNameWidth(25);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(28, 2);
      resultMatrixSignificance0.m_CountWidth = 2;
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      ResultMatrixLatex resultMatrixLatex2 = new ResultMatrixLatex(resultMatrixLatex1);
      resultMatrixLatex2.toStringRanking();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex2);
      resultMatrixPlainText0.toString();
      resultMatrixPlainText0.getColOrder();
      resultMatrixPlainText0.toStringRanking();
      resultMatrixPlainText0.listOptions();
      resultMatrixPlainText0.toStringKey();
      resultMatrixPlainText0.setPrintRowNames(true);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      resultMatrixCSV0.getDefaultRowNameWidth();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixSignificance0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      // Undeclared exception!
      try { 
        resultMatrixHTML0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.0770349863758657
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(95, 0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      resultMatrixCSV0.setPrintRowNames(true);
      resultMatrixCSV0.m_RankingWins = null;
      int[] intArray0 = new int[8];
      intArray0[0] = 0;
      intArray0[1] = 95;
      intArray0[2] = 0;
      intArray0[3] = 2;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      resultMatrixSignificance0.getDefaultPrintColNames();
      resultMatrixSignificance0.setEnumerateRowNames(false);
      resultMatrixSignificance0.setCount(2, 0.0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      int[][] intArray1 = new int[3][2];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      resultMatrixSignificance0.clearSummary();
      resultMatrixLatex0.setSummary(intArray1, intArray1);
      resultMatrixLatex0.isAverage(1);
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.getHeader("v");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.9154793492940043
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.removeFilterName("2rU2~");
      resultMatrixSignificance0.getRevision();
      resultMatrixSignificance0.m_CountWidth = 536;
      int[] intArray0 = new int[3];
      intArray0[0] = 536;
      intArray0[1] = 2;
      intArray0[2] = 536;
      resultMatrixSignificance0.setColOrder(intArray0);
      resultMatrixSignificance0.setCountWidth(97);
      resultMatrixSignificance0.setSize(2, 97);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "2rU2~";
      stringArray0[1] = " ";
      stringArray0[2] = "0Ww~8fd>x f";
      stringArray0[3] = "2rU2~";
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[][] intArray1 = new int[0][0];
      resultMatrixGnuPlot0.setRanking(intArray1);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixSignificance0);
      resultMatrixSignificance0.showAverageTipText();
      assertEquals(97, resultMatrixSignificance0.getCountWidth());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.3811982410571075
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
      assertEquals(1, resultMatrixPlainText0.getVisibleColCount());
      
      boolean[] booleanArray0 = new boolean[1];
      String string0 = resultMatrixPlainText0.toStringMatrix();
      assertEquals("Dataset                   (1) col0 \n-----------------------------------\nrow0                       (0)    |\n-----------------------------------\n(v/ /*)                           |\n", string0);
      
      booleanArray0[0] = false;
      resultMatrixPlainText0.m_RowHidden = booleanArray0;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      resultMatrixPlainText0.setCountWidth((-1071));
      resultMatrixPlainText0.clearSummary();
      resultMatrixGnuPlot0.m_ShowAverage = false;
      resultMatrixGnuPlot0.getRevision();
      resultMatrixPlainText0.showStdDevTipText();
      resultMatrixGnuPlot0.getRowHidden(2);
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(5, resultMatrixPlainText0.getCountWidth());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.5366605602869163
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.removeFilterName("BU^5p$eJ-U/!SJ");
      String[] stringArray0 = new String[8];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      resultMatrixGnuPlot0.setSignificanceWidth(0);
      stringArray0[3] = "";
      resultMatrixGnuPlot0.m_StdDevPrec = 393;
      resultMatrixGnuPlot0.getOptions();
      stringArray0[4] = "v";
      resultMatrixGnuPlot0.m_PrintColNames = false;
      resultMatrixGnuPlot0.setStdDevPrec((-1));
      stringArray0[5] = "m%X@e";
      stringArray0[6] = "";
      resultMatrixGnuPlot0.doubleToString(0, 0);
      stringArray0[7] = "";
      resultMatrixGnuPlot0.listOptions();
      ResultMatrixCSV.main(stringArray0);
      resultMatrixGnuPlot0.toStringRanking();
      resultMatrixGnuPlot0.clearHeader();
      resultMatrixGnuPlot0.getStdDevWidth();
      resultMatrixGnuPlot0.setEnumerateColNames(false);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setRowNameWidth(2728);
      resultMatrixHTML0.getDefaultRowNameWidth();
      resultMatrixHTML0.toStringSummary();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      resultMatrixCSV0.globalInfo();
      assertEquals(393, resultMatrixGnuPlot0.getStdDevPrec());
      
      resultMatrixHTML0.getVisibleColCount();
      assertEquals(2728, resultMatrixHTML0.getRowNameWidth());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.9681239800897954
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(95, 0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      resultMatrixCSV0.setPrintRowNames(true);
      int[] intArray0 = new int[8];
      intArray0[0] = 0;
      intArray0[1] = 95;
      intArray0[2] = 0;
      intArray0[3] = 0;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      resultMatrixSignificance0.getDefaultPrintColNames();
      resultMatrixSignificance0.setEnumerateRowNames(false);
      resultMatrixSignificance0.setCount(2, 0.0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      int[][] intArray1 = new int[3][2];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      resultMatrixLatex0.setMeanPrec(1);
      assertEquals(1, resultMatrixLatex0.getMeanPrec());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.8682706269970595
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.removeFilterName("2rU2~");
      resultMatrixSignificance0.getRevision();
      resultMatrixSignificance0.m_CountWidth = 536;
      int[] intArray0 = new int[3];
      intArray0[2] = 536;
      intArray0[1] = 2;
      intArray0[2] = 0;
      resultMatrixSignificance0.setColOrder(intArray0);
      resultMatrixSignificance0.setCountWidth(97);
      resultMatrixSignificance0.setSize(2, 97);
      String[][] stringArray0 = new String[1][7];
      String[] stringArray1 = new String[4];
      stringArray1[0] = "2rU2~";
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.getColSize(stringArray0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.41567167298656
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(95, 0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      resultMatrixCSV0.setPrintRowNames(true);
      int[] intArray0 = new int[8];
      intArray0[0] = 0;
      intArray0[1] = 95;
      intArray0[2] = 0;
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixGnuPlot0);
      resultMatrixLatex0.toStringRanking();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixCSV0);
      resultMatrixPlainText0.toString();
      resultMatrixPlainText0.getColOrder();
      resultMatrixPlainText0.toStringRanking();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      resultMatrixPlainText1.listOptions();
      resultMatrixPlainText1.toStringKey();
      resultMatrixPlainText0.setPrintRowNames(false);
      resultMatrixPlainText0.addHeader("nPKL^f#u0", "");
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot();
      int[][] intArray1 = new int[3][4];
      intArray1[0] = intArray0;
      intArray1[1] = null;
      int[] intArray2 = new int[4];
      intArray2[0] = 0;
      intArray2[1] = 76;
      intArray2[2] = 0;
      intArray2[3] = 0;
      intArray1[2] = intArray2;
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot1.setSummary(intArray1, intArray1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.0726737764577483
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(95, 0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      resultMatrixCSV0.setPrintRowNames(true);
      int[] intArray0 = new int[8];
      intArray0[0] = 0;
      intArray0[1] = 95;
      intArray0[2] = 0;
      intArray0[3] = 2;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      resultMatrixSignificance0.getDefaultPrintColNames();
      resultMatrixSignificance0.setEnumerateRowNames(false);
      resultMatrixSignificance0.setCount(2, 0.0);
      resultMatrixSignificance0.addHeader("", "");
      resultMatrixGnuPlot0.getColHidden(1);
      resultMatrixGnuPlot0.stdDevPrecTipText();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixSignificance0);
      ResultMatrixCSV resultMatrixCSV2 = new ResultMatrixCSV();
      resultMatrixCSV2.getRevision();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      int[][] intArray1 = new int[0][4];
      // Undeclared exception!
      try { 
        resultMatrixLatex0.setSummary(intArray1, intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.6969008500088405
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      String string0 = "H?SS1!u]";
      resultMatrixSignificance0.removeFilterName("H?SS1!u]");
      resultMatrixSignificance0.getRevision();
      int[] intArray0 = new int[8];
      intArray0[0] = 2;
      intArray0[1] = 536;
      intArray0[2] = 1;
      intArray0[3] = 2;
      intArray0[4] = 536;
      intArray0[5] = 3;
      intArray0[6] = 536;
      intArray0[7] = 0;
      resultMatrixSignificance0.setColOrder(intArray0);
      resultMatrixSignificance0.setCountWidth((-3346));
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.setSize((-3346), 536);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.6618403890648796
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[][] intArray0 = new int[17][4];
      int[] intArray1 = new int[3];
      intArray1[0] = 1;
      intArray1[2] = 1;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[1];
      intArray2[0] = 1;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[5];
      intArray3[0] = (-993);
      intArray3[1] = 2;
      intArray3[2] = 2;
      intArray3[3] = 1;
      intArray3[4] = 1;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[4];
      intArray4[0] = 137;
      intArray4[1] = 2;
      intArray4[2] = 2;
      intArray4[3] = 2;
      intArray0[3] = intArray4;
      int[] intArray5 = new int[1];
      intArray5[0] = 1;
      intArray0[4] = intArray5;
      int[] intArray6 = new int[8];
      intArray6[0] = 1;
      intArray6[1] = 439;
      intArray6[2] = 1;
      intArray6[3] = 0;
      intArray6[4] = 0;
      intArray6[5] = 137;
      intArray6[6] = 50;
      intArray6[7] = 0;
      intArray0[5] = intArray6;
      int[] intArray7 = new int[4];
      intArray7[0] = 137;
      intArray7[1] = 0;
      intArray7[2] = 2;
      intArray7[3] = 0;
      intArray0[6] = intArray7;
      resultMatrixGnuPlot0.setRanking(intArray0);
      assertTrue(resultMatrixGnuPlot0.getPrintColNames());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.9025538185947704
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      String string0 = "2rU2~";
      resultMatrixSignificance0.removeFilterName("2rU2~");
      int int0 = 536;
      resultMatrixSignificance0.getRevision();
      resultMatrixSignificance0.m_CountWidth = 536;
      resultMatrixSignificance0.getDefaultPrintColNames();
      int[] intArray0 = new int[3];
      intArray0[0] = 536;
      intArray0[1] = 2;
      intArray0[2] = 536;
      resultMatrixSignificance0.setColOrder(intArray0);
      resultMatrixSignificance0.setCountWidth(97);
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.setSize(2, (-6));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.6246344471676064
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.removeFilterName("BU^5p$eJ-U/!SJ");
      String[] stringArray0 = new String[8];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      resultMatrixGnuPlot0.setSignificanceWidth(0);
      stringArray0[3] = "";
      resultMatrixGnuPlot0.m_StdDevPrec = 393;
      String[] stringArray1 = resultMatrixGnuPlot0.getOptions();
      stringArray0[4] = "v";
      resultMatrixGnuPlot0.m_PrintColNames = false;
      resultMatrixGnuPlot0.setStdDevPrec((-1));
      stringArray0[5] = "NC%X@/";
      stringArray0[6] = "";
      resultMatrixGnuPlot0.doubleToString(0, 0);
      stringArray0[7] = "";
      resultMatrixGnuPlot0.listOptions();
      ResultMatrixCSV.main(stringArray0);
      resultMatrixGnuPlot0.toStringRanking();
      resultMatrixGnuPlot0.clearHeader();
      resultMatrixGnuPlot0.toStringMatrix();
      resultMatrixGnuPlot0.getStdDevWidth();
      resultMatrixGnuPlot0.setEnumerateColNames(false);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getDefaultRowNameWidth();
      resultMatrixHTML0.toStringSummary();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      resultMatrixCSV0.globalInfo();
      resultMatrixGnuPlot0.m_RowNameWidth = 397;
      resultMatrixHTML0.getAverage(0);
      resultMatrixHTML0.getColNameWidth();
      ResultMatrixHTML.main(stringArray1);
      assertEquals(393, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.521599192384441
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      resultMatrixGnuPlot0.setSignificanceWidth(0);
      stringArray0[3] = "";
      resultMatrixGnuPlot0.m_StdDevPrec = 393;
      resultMatrixGnuPlot0.getOptions();
      stringArray0[4] = "v";
      resultMatrixGnuPlot0.m_PrintColNames = false;
      stringArray0[5] = "NC%X@/";
      stringArray0[6] = "";
      resultMatrixGnuPlot0.doubleToString(0, 0);
      stringArray0[7] = "";
      resultMatrixGnuPlot0.listOptions();
      ResultMatrixCSV.main(stringArray0);
      resultMatrixGnuPlot0.toStringRanking();
      resultMatrixGnuPlot0.clearHeader();
      resultMatrixGnuPlot0.toStringMatrix();
      resultMatrixGnuPlot0.getStdDevWidth();
      resultMatrixGnuPlot0.setEnumerateColNames(false);
      assertEquals(393, resultMatrixGnuPlot0.getStdDevPrec());
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getDefaultRowNameWidth();
      resultMatrixHTML0.toStringSummary();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      resultMatrixCSV0.globalInfo();
      resultMatrixHTML0.getAverage(393);
      int int0 = resultMatrixHTML0.getColNameWidth();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.8466796372141983
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "kXbG$1|d\"ZW";
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setEnumerateColNames(true);
      resultMatrixLatex0.setMeanPrec(0);
      assertEquals(0, resultMatrixLatex0.getMeanPrec());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.6982155361548723
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(26, 26);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      int[][] intArray0 = new int[1][4];
      int[] intArray1 = new int[5];
      intArray1[0] = 1;
      intArray1[1] = 5;
      intArray1[2] = 2;
      intArray1[3] = 0;
      intArray1[4] = 2;
      intArray0[0] = intArray1;
      resultMatrixCSV0.setSummary(intArray0, intArray0);
      resultMatrixCSV0.getDefaultPrintColNames();
      resultMatrixCSV0.printRowNamesTipText();
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(0, resultMatrixCSV0.getRowNameWidth());
      assertEquals(26, resultMatrixCSV0.getVisibleRowCount());
      assertEquals(26, resultMatrixCSV0.getVisibleColCount());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.7743422201948813
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(13, 95);
      assertEquals(13, resultMatrixGnuPlot0.getColCount());
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      resultMatrixCSV0.setPrintRowNames(false);
      resultMatrixGnuPlot0.m_StdDevPrec = 1;
      resultMatrixCSV0.m_SignificanceWidth = 0;
      resultMatrixCSV0.removeFilterName("SEf");
      resultMatrixGnuPlot0.setCountWidth((-3768));
      resultMatrixCSV0.toStringRanking();
      resultMatrixCSV0.getDefaultPrintColNames();
      assertTrue(resultMatrixCSV0.getEnumerateRowNames());
      
      resultMatrixGnuPlot0.getColNameWidth();
      resultMatrixGnuPlot0.getDefaultStdDevWidth();
      assertEquals(2, resultMatrixGnuPlot0.getDefaultStdDevPrec());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.4037863323394237
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixLatex0.setEnumerateColNames(true);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      String[][] stringArray0 = resultMatrixSignificance0.toArray();
      resultMatrixSignificance0.getDefaultPrintColNames();
      resultMatrixSignificance0.clearHeader();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setPrintColNames(false);
      resultMatrixCSV0.globalInfo();
      String string0 = resultMatrixCSV0.toStringKey();
      assertEquals("Key,\n[1],col0\n", string0);
      assertFalse(resultMatrixCSV0.getPrintColNames());
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      resultMatrixPlainText0.setRowName(0, "\tWhether to remove the classname package prefixes from the\n\tfilter names in datasets.\n\t(default: no)");
      assertEquals(25, resultMatrixPlainText0.getRowNameWidth());
      
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(0, 50);
      resultMatrixCSV1.getDefaultRowNameWidth();
      assertEquals(50, resultMatrixCSV1.getRowCount());
      
      resultMatrixSignificance0.getColSize(stringArray0, 4823);
      assertEquals(3, stringArray0.length);
      
      String[] stringArray1 = resultMatrixSignificance0.getOptions();
      assertEquals(0, resultMatrixSignificance0.getMeanWidth());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertEquals(18, stringArray1.length);
      assertEquals(0, resultMatrixSignificance0.getCountWidth());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.6808649498588037
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setEnumerateColNames(false);
      Vector<String> vector0 = new Vector<String>();
      resultMatrixLatex0.m_HeaderValues = vector0;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      vector0.clone();
      resultMatrixSignificance0.toStringSummary();
      resultMatrixSignificance0.getPrintColNames();
      resultMatrixSignificance0.getDisplayName();
      // Undeclared exception!
      try { 
        vector0.subList((-1205), 2);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // fromIndex = -1205
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.5986051779973063
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(26, 26);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      resultMatrixCSV0.doubleToString(521.944933867539, 2);
      resultMatrixLatex0.m_PrintRowNames = true;
      int[][] intArray0 = new int[1][4];
      int[] intArray1 = new int[3];
      intArray1[0] = 1;
      intArray1[1] = 2;
      intArray1[2] = 559;
      intArray0[0] = intArray1;
      resultMatrixLatex0.m_Significance = intArray0;
      resultMatrixCSV0.m_CountWidth = 559;
      // Undeclared exception!
      try { 
        resultMatrixCSV0.assign(resultMatrixLatex0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.900941868178585
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 2315);
      resultMatrixSignificance0.getMeanPrec();
      resultMatrixSignificance0.getDefaultRowNameWidth();
      resultMatrixSignificance0.getRevision();
      resultMatrixSignificance0.countWidthTipText();
      int[] intArray0 = new int[1];
      intArray0[0] = 40;
      resultMatrixSignificance0.setRowOrder(intArray0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(2315, 325);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.3969509155438105
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.m_RowNameWidth = (-1);
      resultMatrixCSV0.LEFT_PARENTHESES = "}";
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      
      String[] stringArray0 = new String[7];
      stringArray0[0] = "]";
      stringArray0[1] = "v";
      stringArray0[2] = "}";
      stringArray0[3] = " ";
      stringArray0[4] = "}";
      stringArray0[5] = "]";
      stringArray0[6] = "}";
      ResultMatrixCSV.main(stringArray0);
      String string0 = resultMatrixCSV0.removeFilterName("");
      assertEquals("", string0);
      
      resultMatrixCSV0.printRowNamesTipText();
      assertTrue(resultMatrixCSV0.getEnumerateColNames());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(0, resultMatrixCSV0.getColNameWidth());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.7380783554095367
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      Vector<Integer> vector0 = new Vector<Integer>();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      vector0.sort(comparator0);
      resultMatrixHTML0.setRemoveFilterName(true);
      resultMatrixHTML0.m_HeaderKeys = vector0;
      resultMatrixHTML0.toStringSummary();
      boolean boolean0 = resultMatrixHTML0.getDefaultShowStdDev();
      assertFalse(resultMatrixHTML0.getDefaultRemoveFilterName());
      assertTrue(resultMatrixHTML0.getRemoveFilterName());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.8377446685075443
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.removeFilterName("2rU2~");
      resultMatrixSignificance0.getRevision();
      resultMatrixSignificance0.m_CountWidth = 536;
      resultMatrixSignificance0.getDefaultPrintColNames();
      int[] intArray0 = new int[3];
      intArray0[0] = 536;
      intArray0[1] = 2;
      intArray0[2] = 536;
      resultMatrixSignificance0.setColOrder(intArray0);
      resultMatrixSignificance0.setCountWidth(97);
      resultMatrixSignificance0.setSize(2, 0);
      String[][] stringArray0 = new String[8][7];
      String[] stringArray1 = new String[4];
      stringArray1[0] = "2rU2~";
      stringArray1[1] = " ";
      stringArray1[2] = "0Ww~8fd>x f";
      stringArray1[3] = "2rU2~";
      stringArray0[0] = stringArray1;
      String[] stringArray2 = new String[5];
      stringArray2[0] = "2rU2~";
      stringArray2[1] = "PFH&+\"~Na";
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.getColSize(stringArray0, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.7437733554254993
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      String string0 = "2rU2~";
      resultMatrixSignificance0.removeFilterName("2rU2~");
      resultMatrixSignificance0.m_CountWidth = 536;
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixSignificance0);
      resultMatrixSignificance0.getDefaultPrintColNames();
      resultMatrixSignificance0.setEnumerateRowNames(true);
      int[][] intArray0 = new int[6][9];
      int[] intArray1 = new int[7];
      intArray1[0] = 536;
      intArray1[1] = 1;
      intArray1[2] = 2;
      intArray1[3] = 536;
      intArray1[4] = 536;
      intArray1[5] = 0;
      intArray1[6] = 536;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[7];
      intArray2[0] = 2;
      intArray2[1] = 536;
      intArray2[2] = 0;
      intArray2[3] = 0;
      intArray2[4] = 17;
      intArray2[5] = 2;
      intArray2[6] = 2;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[3];
      intArray3[0] = 1;
      intArray3[1] = 0;
      intArray3[2] = 17;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[7];
      intArray4[0] = 1;
      intArray4[1] = 2;
      intArray4[2] = 1;
      intArray4[3] = 2;
      intArray4[4] = 1;
      intArray4[5] = 0;
      intArray4[6] = 2;
      intArray0[3] = intArray4;
      int[] intArray5 = new int[4];
      intArray5[0] = 0;
      intArray5[1] = 0;
      intArray5[2] = 0;
      intArray5[3] = 2;
      intArray0[4] = intArray5;
      int[] intArray6 = new int[9];
      intArray6[0] = 2;
      intArray6[1] = 1;
      intArray6[2] = 0;
      intArray6[3] = 1;
      intArray6[4] = 1;
      intArray6[5] = 0;
      intArray6[6] = 0;
      intArray6[7] = 1;
      intArray6[8] = 1;
      intArray0[5] = intArray6;
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.setSummary(intArray0, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.4355393318232603
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.removeFilterName("2rU2~");
      resultMatrixSignificance0.getRevision();
      resultMatrixSignificance0.m_CountWidth = 536;
      int[] intArray0 = new int[3];
      intArray0[0] = 536;
      intArray0[1] = 2;
      intArray0[2] = 536;
      resultMatrixSignificance0.setColOrder(intArray0);
      resultMatrixSignificance0.setCountWidth(97);
      resultMatrixSignificance0.setSize(2, 97);
      String[][] stringArray0 = new String[8][7];
      String[] stringArray1 = new String[4];
      stringArray1[0] = "2rU2~";
      stringArray1[1] = " ";
      stringArray1[2] = "0Ww~8fd>x f";
      stringArray1[3] = "2rU2~";
      stringArray0[0] = stringArray1;
      String[] stringArray2 = new String[5];
      stringArray2[0] = "2rU2~";
      stringArray2[1] = "PFH&+\"~Na";
      resultMatrixSignificance0.getColSize(stringArray0, 10);
      resultMatrixSignificance0.getOptions();
      assertEquals(97, resultMatrixSignificance0.getRowCount());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.679706038839934
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(50, 50);
      assertEquals(50, resultMatrixGnuPlot0.getColCount());
      
      boolean[] booleanArray0 = new boolean[5];
      booleanArray0[0] = true;
      String[] stringArray0 = new String[9];
      stringArray0[0] = "weka.experiment.ResultMatrixSignificance";
      stringArray0[1] = "*";
      stringArray0[2] = "0O,'lI!?g>v2i\"aN'U8";
      stringArray0[3] = "";
      stringArray0[4] = "*";
      stringArray0[5] = " ";
      stringArray0[6] = " ";
      stringArray0[7] = "";
      stringArray0[8] = "";
      resultMatrixGnuPlot0.m_ColNames = stringArray0;
      booleanArray0[1] = true;
      booleanArray0[2] = true;
      booleanArray0[3] = true;
      booleanArray0[4] = true;
      resultMatrixGnuPlot0.m_ColHidden = booleanArray0;
      resultMatrixGnuPlot0.rowNameWidthTipText();
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=3.476679008223364
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "*";
      resultMatrixCSV0.setOptions(stringArray0);
      resultMatrixCSV0.toStringMatrix();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      resultMatrixGnuPlot0.globalInfo();
      resultMatrixGnuPlot0.setStdDev(0, 97, 100.0);
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = (double) 97;
      doubleArray0[1] = (double) 97;
      doubleArray0[2] = (double) 1;
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixGnuPlot0);
      int[] intArray0 = new int[6];
      intArray0[0] = 54;
      intArray0[1] = 2;
      intArray0[2] = 0;
      intArray0[3] = 1;
      intArray0[4] = 1;
      intArray0[5] = 0;
      resultMatrixLatex0.setRowOrder(intArray0);
      ResultMatrixLatex resultMatrixLatex1 = null;
      try {
        resultMatrixLatex1 = new ResultMatrixLatex(0, (-209));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.6982155361548723
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      double[][] doubleArray0 = new double[0][7];
      resultMatrixLatex1.m_StdDev = doubleArray0;
      resultMatrixLatex1.LEFT_PARENTHESES = "(";
      int int0 = resultMatrixLatex1.getRowNameWidth();
      assertEquals(2, resultMatrixLatex1.getMeanPrec());
      assertTrue(resultMatrixLatex1.getEnumerateColNames());
      assertTrue(resultMatrixLatex1.getPrintRowNames());
      assertEquals(0, resultMatrixLatex1.getMeanWidth());
      assertEquals(0, int0);
      assertEquals(0, resultMatrixLatex1.getCountWidth());
      
      int[][] intArray0 = new int[1][6];
      int[] intArray1 = new int[7];
      intArray1[0] = 2;
      intArray1[1] = 2;
      intArray1[2] = 1;
      intArray1[3] = 2;
      intArray1[4] = 2;
      intArray1[5] = 0;
      intArray1[6] = 2;
      intArray0[0] = intArray1;
      resultMatrixLatex0.setSummary(intArray0, intArray0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 2);
      resultMatrixCSV0.globalInfo();
      assertEquals(2, resultMatrixCSV0.getRowCount());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      
      boolean boolean0 = resultMatrixLatex0.getDefaultRemoveFilterName();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=3.2667024961919
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      String string0 = resultMatrixGnuPlot0.padString("SS)^5lp2~}B#", 1);
      assertEquals("S", string0);
      
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 1;
      doubleArray0[2] = (double) 1;
      doubleArray0[3] = (double) 1;
      doubleArray0[4] = (double) 0;
      doubleArray0[5] = (double) 1;
      resultMatrixGnuPlot0.m_Counts = doubleArray0;
      resultMatrixGnuPlot0.m_Counts = null;
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
      
      String string1 = resultMatrixGnuPlot0.toStringMatrix();
      assertEquals("\n##################\n# file: plot.dat #\n##################\n# generated by WEKA 3.7.7\n# contains the data for the plot\n\n# key for the x-axis\n# 1 - row0\n\n# data for the plot\n1 ''\n#######\n# end #\n#######\n\n##################\n# file: plot.scr #\n##################\n# generated by WEKA 3.7.7\n# script to plot the data\n\n# display it in a window:\nset terminal x11\nset output\n\n# to display all data rows:\nset xrange [0:2]\n\n# axis labels, e.g.:\n#set xlabel \"Datasets\"\n#set ylabel \"Accuracy in %\"\n\n# the plot commands\nplot \"plot.dat\" using 1:2 with lines title \"col0\"\n\n# generate ps:\n#set terminal postscript\n#set output \"plot.ps\"\n#replot\n\n# generate png:\n#set terminal png size 800,600\n#set output \"plot.png\"\n#replot\n\n# wait for user to hit <Return>\npause -1\n#######\n# end #\n#######\n", string1);
      
      resultMatrixGnuPlot0.printColNamesTipText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[][] intArray0 = new int[1][3];
      int[] intArray1 = new int[6];
      intArray1[0] = 1;
      intArray1[1] = 0;
      intArray1[2] = 2;
      intArray1[3] = 2;
      intArray1[4] = 2;
      intArray1[5] = 0;
      intArray0[0] = intArray1;
      resultMatrixCSV0.setSummary(intArray0, intArray0);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      resultMatrixCSV1.getDefaultPrintColNames();
      resultMatrixCSV1.printRowNamesTipText();
      assertEquals(25, resultMatrixCSV1.getRowNameWidth());
      assertTrue(resultMatrixCSV1.getPrintRowNames());
      assertFalse(resultMatrixCSV1.getDefaultRemoveFilterName());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=3.436029062695498
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.removeFilterName("BU^5p$eJ-U/!SJ");
      String[] stringArray0 = new String[8];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      resultMatrixGnuPlot0.setSignificanceWidth(0);
      stringArray0[3] = "";
      resultMatrixGnuPlot0.m_StdDevPrec = 393;
      resultMatrixGnuPlot0.getOptions();
      stringArray0[4] = "v";
      resultMatrixGnuPlot0.m_PrintColNames = false;
      resultMatrixGnuPlot0.setStdDevPrec((-1));
      stringArray0[5] = "m%X@e";
      stringArray0[6] = "";
      resultMatrixGnuPlot0.printColNamesTipText();
      resultMatrixGnuPlot0.setSignificance(11, (-2349), 2784);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.toStringSummary();
      resultMatrixHTML0.clearSummary();
      resultMatrixGnuPlot0.getColName(1111);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      resultMatrixCSV0.getDefaultEnumerateColNames();
      assertFalse(resultMatrixGnuPlot0.getPrintColNames());
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      String string0 = resultMatrixSignificance0.toStringKey();
      assertEquals("Key:\n(1) col0\n", string0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=3.210417863785526
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.toStringRanking();
      double[] doubleArray0 = new double[6];
      doubleArray0[3] = (double) 0;
      doubleArray0[1] = (double) 1;
      doubleArray0[2] = (double) 1;
      doubleArray0[3] = (double) 1;
      doubleArray0[4] = (double) 0;
      doubleArray0[5] = (double) 1;
      resultMatrixGnuPlot0.m_Counts = doubleArray0;
      resultMatrixGnuPlot0.m_Counts = null;
      resultMatrixGnuPlot0.toStringMatrix();
      resultMatrixGnuPlot0.printColNamesTipText();
      resultMatrixGnuPlot0.setSignificance(1, 1, 2784);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.toStringSummary();
      resultMatrixHTML0.clearSummary();
      resultMatrixGnuPlot0.getColName(0);
      ResultMatrixCSV resultMatrixCSV0 = null;
      try {
        resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.9746844484603128
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(26, 26);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      int[] intArray0 = new int[5];
      intArray0[0] = 1;
      intArray0[1] = 5;
      intArray0[2] = 2;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixLatex0);
      resultMatrixGnuPlot0.setSignificance(90, 5, (-1325));
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.toStringSummary();
      resultMatrixHTML0.clearSummary();
      String string0 = resultMatrixGnuPlot0.getColName(2);
      assertEquals("(3)", string0);
      
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixCSV0);
      resultMatrixCSV1.getDefaultEnumerateColNames();
      assertEquals(0, resultMatrixCSV1.getCountWidth());
      assertEquals(0, resultMatrixCSV1.getRowNameWidth());
      assertEquals(0, resultMatrixCSV1.getMeanWidth());
      assertEquals(26, resultMatrixCSV1.getRowCount());
      assertEquals(2, resultMatrixCSV1.getStdDevPrec());
      assertTrue(resultMatrixCSV1.getPrintRowNames());
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      String string1 = resultMatrixSignificance0.toStringKey();
      assertEquals("Key:\n(1) col0\n", string1);
      assertFalse(resultMatrixSignificance0.getShowAverage());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=3.28261535039927
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      String string0 = resultMatrixGnuPlot0.padString("SS)^5lp2~}B#", (-19));
      assertEquals("SS)^5lp2~}B#", string0);
      
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) (-19);
      doubleArray0[2] = (double) (-19);
      doubleArray0[3] = (double) 1;
      doubleArray0[4] = (double) 0;
      doubleArray0[5] = (double) 1;
      resultMatrixGnuPlot0.m_Counts = doubleArray0;
      resultMatrixGnuPlot0.m_Counts = null;
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
      
      String string1 = resultMatrixGnuPlot0.toStringMatrix();
      assertEquals("\n##################\n# file: plot.dat #\n##################\n# generated by WEKA 3.7.7\n# contains the data for the plot\n\n# key for the x-axis\n# 1 - row0\n\n# data for the plot\n1 ''\n#######\n# end #\n#######\n\n##################\n# file: plot.scr #\n##################\n# generated by WEKA 3.7.7\n# script to plot the data\n\n# display it in a window:\nset terminal x11\nset output\n\n# to display all data rows:\nset xrange [0:2]\n\n# axis labels, e.g.:\n#set xlabel \"Datasets\"\n#set ylabel \"Accuracy in %\"\n\n# the plot commands\nplot \"plot.dat\" using 1:2 with lines title \"col0\"\n\n# generate ps:\n#set terminal postscript\n#set output \"plot.ps\"\n#replot\n\n# generate png:\n#set terminal png size 800,600\n#set output \"plot.png\"\n#replot\n\n# wait for user to hit <Return>\npause -1\n#######\n# end #\n#######\n", string1);
      
      resultMatrixGnuPlot0.printColNamesTipText();
      assertEquals(1, resultMatrixGnuPlot0.getVisibleRowCount());
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[][] intArray0 = new int[1][3];
      resultMatrixCSV0.m_CountWidth = (-739);
      int[] intArray1 = new int[6];
      intArray1[0] = 1;
      intArray1[1] = 0;
      intArray1[2] = 2;
      intArray1[3] = 2;
      intArray1[4] = 1;
      intArray1[5] = 0;
      intArray0[0] = intArray1;
      resultMatrixCSV0.setSummary(intArray0, intArray0);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      resultMatrixCSV1.getDefaultPrintColNames();
      resultMatrixCSV1.printRowNamesTipText();
      resultMatrixCSV1.significanceWidthTipText();
      assertEquals(25, resultMatrixCSV1.getRowNameWidth());
      assertEquals(2, resultMatrixCSV1.getMeanPrec());
      assertEquals(0, resultMatrixCSV1.getDefaultMeanWidth());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.743535678836661
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.m_ShowStdDev = true;
      resultMatrixGnuPlot0.m_StdDevPrec = (-3000);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      resultMatrixSignificance0.m_Significance = null;
      int[] intArray0 = new int[4];
      resultMatrixSignificance0.m_NonSigWins = null;
      intArray0[0] = 2;
      intArray0[1] = 2;
      intArray0[2] = 26;
      intArray0[3] = 26;
      resultMatrixGnuPlot0.m_ColNameWidth = (-1);
      resultMatrixGnuPlot0.m_ColOrder = intArray0;
      resultMatrixSignificance0.m_StdDevPrec = 26;
      resultMatrixSignificance0.getDefaultPrintColNames();
      resultMatrixSignificance0.setEnumerateRowNames(false);
      resultMatrixSignificance0.setCount((-1772), 1);
      resultMatrixSignificance0.addHeader("v", "eAbYGT%Rxm(2*VF<");
      resultMatrixGnuPlot0.getColHidden(2612);
      resultMatrixGnuPlot0.stdDevPrecTipText();
      ResultMatrixCSV resultMatrixCSV0 = null;
      try {
        resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixSignificance0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=3.093333797064729
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      int[] intArray0 = new int[1];
      int[][] intArray1 = new int[7][9];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      resultMatrixSignificance0.getDefaultPrintColNames();
      resultMatrixSignificance0.setEnumerateRowNames(false);
      resultMatrixSignificance0.setCount(2, 1);
      resultMatrixSignificance0.addHeader(")", " ");
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      double[][] doubleArray0 = new double[7][4];
      double[] doubleArray1 = new double[4];
      doubleArray1[0] = (double) 0;
      doubleArray1[1] = (double) 1;
      doubleArray1[2] = (double) 2;
      doubleArray1[3] = (double) 1;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[7];
      doubleArray2[0] = (double) 2;
      doubleArray2[1] = (double) 0;
      doubleArray2[2] = (double) 0;
      doubleArray2[3] = (-3684.78);
      doubleArray2[4] = (double) 0;
      doubleArray2[5] = (double) 1;
      doubleArray2[6] = 1738.2926986795;
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[8];
      doubleArray3[0] = (double) 1;
      doubleArray3[1] = 1738.2926986795;
      doubleArray3[2] = (double) 1;
      doubleArray3[3] = (double) 0;
      doubleArray3[4] = (double) 1;
      doubleArray3[5] = (double) 2;
      doubleArray3[6] = (double) 0;
      doubleArray3[7] = 0.0;
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[6];
      doubleArray4[0] = (double) 2;
      doubleArray4[1] = (double) 0;
      doubleArray4[2] = (double) 1;
      doubleArray4[3] = (double) 1;
      doubleArray4[4] = 1738.2926986795;
      doubleArray4[5] = (-3684.78);
      doubleArray0[3] = doubleArray4;
      double[] doubleArray5 = new double[1];
      doubleArray5[0] = (double) 0;
      doubleArray0[4] = doubleArray5;
      double[] doubleArray6 = new double[3];
      doubleArray6[0] = (double) 1;
      doubleArray6[1] = (double) 0;
      doubleArray6[2] = 0.0;
      doubleArray0[5] = doubleArray6;
      double[] doubleArray7 = new double[4];
      doubleArray7[0] = (double) 1;
      doubleArray7[1] = 0.0;
      doubleArray7[2] = (double) 0;
      doubleArray7[3] = (double) 2;
      doubleArray0[6] = doubleArray7;
      resultMatrixLatex0.m_Mean = doubleArray0;
      resultMatrixGnuPlot0.getColHidden((-1087));
      resultMatrixGnuPlot0.stdDevPrecTipText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixSignificance0);
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertFalse(resultMatrixSignificance0.getEnumerateRowNames());
      assertEquals(0, resultMatrixSignificance0.getStdDevWidth());
      assertEquals(0, resultMatrixSignificance0.getCountWidth());
      
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(0, 0);
      resultMatrixLatex0.setRowOrder(intArray0);
      String string0 = resultMatrixLatex0.toStringKey();
      assertEquals("\\begin{table}[thb]\n\\caption{\\label{labelname}Table Caption (Key)}\n\\scriptsize\n{\\centering\n\\begin{tabular}{cl}\\\\\n(1) & col0 \\\\\n\\end{tabular}\n}\n\\end{table}\n", string0);
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getSignificance(1142, 1);
      assertFalse(resultMatrixPlainText0.getRemoveFilterName());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=3.2182952780570027
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.m_StdDevWidth = 0;
      resultMatrixGnuPlot0.toStringMatrix();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 0);
      boolean[] booleanArray0 = new boolean[3];
      resultMatrixLatex0.setPrintColNames(true);
      resultMatrixLatex0.setStdDevPrec(0);
      booleanArray0[0] = false;
      resultMatrixGnuPlot0.m_EnumerateColNames = false;
      booleanArray0[1] = false;
      booleanArray0[2] = false;
      resultMatrixLatex0.m_ColHidden = booleanArray0;
      int[] intArray0 = new int[7];
      intArray0[0] = 0;
      intArray0[1] = 1;
      intArray0[2] = 0;
      intArray0[3] = 2;
      intArray0[4] = 0;
      intArray0[5] = 2;
      intArray0[6] = 2;
      resultMatrixLatex0.m_RankingWins = intArray0;
      resultMatrixLatex0.globalInfo();
      // Undeclared exception!
      try { 
        resultMatrixLatex0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=3.2569564978206307
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixLatex0.setEnumerateColNames(true);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.toArray();
      resultMatrixSignificance0.getDefaultPrintColNames();
      resultMatrixSignificance0.clearHeader();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setPrintColNames(true);
      resultMatrixCSV0.globalInfo();
      resultMatrixCSV0.toStringKey();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      resultMatrixPlainText0.setRowName(0, "\tWhether to remove the classname package prefixes from the\n\tfilter names in datasets.\n\t(default: no)");
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(0, 50);
      resultMatrixCSV1.getDefaultRowNameWidth();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixCSV1);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixCSV1);
      ResultMatrixHTML resultMatrixHTML2 = new ResultMatrixHTML(resultMatrixHTML1);
      // Undeclared exception!
      try { 
        resultMatrixHTML2.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=3.5149064352045754
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.removeFilterName("BU^5p$eJ-U/!SJ");
      String[] stringArray0 = new String[8];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      resultMatrixGnuPlot0.setSignificanceWidth(0);
      stringArray0[3] = "";
      resultMatrixGnuPlot0.m_StdDevPrec = 393;
      resultMatrixGnuPlot0.getOptions();
      assertTrue(resultMatrixGnuPlot0.getPrintColNames());
      
      stringArray0[4] = "v";
      resultMatrixGnuPlot0.m_PrintColNames = false;
      resultMatrixGnuPlot0.setStdDevPrec((-1));
      stringArray0[5] = "m%X@e";
      stringArray0[6] = "";
      resultMatrixGnuPlot0.doubleToString(0, 0);
      stringArray0[7] = "";
      resultMatrixGnuPlot0.listOptions();
      ResultMatrixCSV.main(stringArray0);
      resultMatrixGnuPlot0.toStringRanking();
      resultMatrixGnuPlot0.clearHeader();
      resultMatrixGnuPlot0.toStringMatrix();
      resultMatrixGnuPlot0.getStdDevWidth();
      resultMatrixGnuPlot0.setEnumerateColNames(false);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getDefaultRowNameWidth();
      resultMatrixHTML0.toStringSummary();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      resultMatrixGnuPlot0.getDefaultStdDevWidth();
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=3.54034956264069
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.removeFilterName("BU^5p$eJ-U/!SJ");
      String[] stringArray0 = new String[8];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      resultMatrixGnuPlot0.setSignificanceWidth(0);
      stringArray0[3] = "";
      resultMatrixGnuPlot0.m_StdDevPrec = 393;
      resultMatrixGnuPlot0.getOptions();
      stringArray0[4] = "v";
      resultMatrixGnuPlot0.m_PrintColNames = false;
      resultMatrixGnuPlot0.setStdDevPrec(8);
      stringArray0[5] = "m%X@e";
      stringArray0[6] = "";
      resultMatrixGnuPlot0.doubleToString(0, 0);
      stringArray0[7] = "";
      resultMatrixGnuPlot0.listOptions();
      ResultMatrixCSV.main(stringArray0);
      resultMatrixGnuPlot0.toStringRanking();
      resultMatrixGnuPlot0.toStringMatrix();
      resultMatrixGnuPlot0.getStdDevWidth();
      resultMatrixGnuPlot0.setEnumerateColNames(false);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      resultMatrixCSV0.globalInfo();
      resultMatrixHTML0.getAverage(3);
      resultMatrixHTML0.getStdDev(1, 8);
      resultMatrixHTML0.getRowHidden(2);
      resultMatrixCSV0.getDisplayName();
      assertEquals(8, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(50, resultMatrixGnuPlot0.getColNameWidth());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=3.5150881403366387
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.removeFilterName("BU^5p$eJ-U/!SJ");
      String[] stringArray0 = new String[8];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      resultMatrixGnuPlot0.setSignificanceWidth(0);
      resultMatrixGnuPlot0.m_StdDevPrec = 393;
      resultMatrixGnuPlot0.getOptions();
      stringArray0[4] = "v";
      resultMatrixGnuPlot0.m_PrintColNames = false;
      resultMatrixGnuPlot0.setStdDevPrec((-1));
      resultMatrixGnuPlot0.toStringRanking();
      resultMatrixGnuPlot0.doubleToString(0.0, 375);
      resultMatrixGnuPlot0.listOptions();
      ResultMatrixCSV.main((String[]) null);
      resultMatrixGnuPlot0.toStringRanking();
      resultMatrixGnuPlot0.clearHeader();
      resultMatrixGnuPlot0.toStringMatrix();
      resultMatrixGnuPlot0.getStdDevWidth();
      resultMatrixGnuPlot0.setEnumerateColNames(true);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.toStringSummary();
      resultMatrixHTML0.getDefaultRowNameWidth();
      resultMatrixHTML0.toStringSummary();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      resultMatrixGnuPlot0.getDefaultStdDevWidth();
      assertTrue(resultMatrixGnuPlot0.getEnumerateColNames());
      
      resultMatrixHTML0.getRowName(803);
      assertEquals(0, resultMatrixHTML0.getColNameWidth());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=3.54034956264069
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.removeFilterName("BU^5p$eJ-U/!SJ");
      String[] stringArray0 = new String[8];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      resultMatrixGnuPlot0.setSignificanceWidth(0);
      stringArray0[3] = "";
      resultMatrixGnuPlot0.m_StdDevPrec = 393;
      resultMatrixGnuPlot0.getOptions();
      stringArray0[4] = "v";
      resultMatrixGnuPlot0.m_PrintColNames = false;
      resultMatrixGnuPlot0.setStdDevPrec((-1));
      stringArray0[5] = "m%X@e";
      stringArray0[6] = "";
      resultMatrixGnuPlot0.doubleToString(0, 0);
      stringArray0[7] = "";
      resultMatrixGnuPlot0.listOptions();
      ResultMatrixCSV.main(stringArray0);
      resultMatrixGnuPlot0.toStringRanking();
      resultMatrixGnuPlot0.toStringMatrix();
      resultMatrixGnuPlot0.getStdDevWidth();
      resultMatrixGnuPlot0.setEnumerateColNames(false);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getDefaultRowNameWidth();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      resultMatrixCSV0.globalInfo();
      assertEquals(393, resultMatrixGnuPlot0.getStdDevPrec());
      
      resultMatrixHTML0.getAverage(3);
      resultMatrixHTML0.getStdDev(1, (-1));
      resultMatrixHTML0.getRowHidden(2);
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.861566251045369
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixHTML0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML1);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      resultMatrixLatex0.setStdDevPrec(1);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixLatex0);
      resultMatrixSignificance0.m_EnumerateRowNames = false;
      resultMatrixGnuPlot0.getRowName(2148);
      resultMatrixGnuPlot0.globalInfo();
      resultMatrixHTML1.setEnumerateRowNames(false);
      resultMatrixGnuPlot0.doubleToString(0.0, 2);
      resultMatrixGnuPlot0.getRevision();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDefaultPrintColNames();
      resultMatrixHTML1.getDisplayName();
      double[][] doubleArray0 = new double[3][1];
      double[] doubleArray1 = new double[8];
      doubleArray1[0] = (double) 1;
      doubleArray1[1] = (double) 0;
      doubleArray1[2] = (double) 2;
      doubleArray1[3] = (double) 0;
      doubleArray1[4] = (double) 0;
      doubleArray1[5] = (double) 1;
      doubleArray1[6] = (double) 2;
      doubleArray1[7] = (double) 1;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[0];
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[9];
      doubleArray3[0] = (double) 0;
      doubleArray3[1] = (double) 0;
      doubleArray3[2] = (double) 2;
      doubleArray3[3] = (double) 2;
      doubleArray3[4] = (double) 0;
      doubleArray3[5] = 0.0;
      doubleArray3[6] = (double) 0;
      doubleArray3[7] = (double) 0;
      doubleArray3[8] = (double) 1;
      doubleArray0[2] = doubleArray3;
      resultMatrixHTML1.m_Mean = doubleArray0;
      resultMatrixLatex0.getDisplayRow((-1362));
      resultMatrixLatex0.getStdDev(2148, 1137);
      assertEquals(1, resultMatrixLatex0.getStdDevPrec());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=3.52471735629616
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      ResultMatrixPlainText.main((String[]) null);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      resultMatrixPlainText0.getRowName(1);
      resultMatrixCSV0.RIGHT_PARENTHESES = "2$8%Lsw/E;]m/,JHF";
      resultMatrixCSV0.setPrintRowNames(false);
      int[] intArray0 = null;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      resultMatrixSignificance0.getDefaultPrintColNames();
      resultMatrixSignificance0.setEnumerateRowNames(true);
      resultMatrixSignificance0.setCount(2, 502.31119);
      ResultMatrixLatex resultMatrixLatex0 = null;
      try {
        resultMatrixLatex0 = new ResultMatrixLatex((ResultMatrix) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=3.638028532098047
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getDefaultPrintColNames();
      resultMatrixPlainText0.padString(">Jjuaf8Ij\"M]", (-84), true);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixPlainText0);
      resultMatrixPlainText0.setOptions((String[]) null);
      int[] intArray0 = new int[9];
      intArray0[0] = 0;
      intArray0[1] = 1;
      intArray0[2] = 0;
      intArray0[3] = 0;
      intArray0[4] = 2;
      intArray0[5] = 0;
      intArray0[6] = 97;
      intArray0[7] = 0;
      intArray0[8] = 0;
      resultMatrixPlainText1.m_ColOrder = intArray0;
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText1);
      resultMatrixLatex0.m_ColNames = null;
      resultMatrixLatex0.m_MeanWidth = 2;
      String[] stringArray0 = new String[0];
      resultMatrixLatex0.m_ColNames = stringArray0;
      resultMatrixLatex0.toStringRanking();
      resultMatrixPlainText0.toString();
      resultMatrixPlainText1.getColOrder();
      resultMatrixPlainText1.toStringRanking();
      resultMatrixPlainText0.listOptions();
      resultMatrixPlainText1.toStringKey();
      resultMatrixPlainText0.setPrintRowNames(false);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText1);
      resultMatrixCSV0.getDefaultRowNameWidth();
      ResultMatrixPlainText resultMatrixPlainText2 = new ResultMatrixPlainText(resultMatrixPlainText1);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      // Undeclared exception!
      try { 
        resultMatrixHTML0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.5805376244873655
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixCSV0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV1);
      resultMatrixHTML0.setColNameWidth((-1601));
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
      assertEquals(25, resultMatrixCSV1.getRowNameWidth());
      assertTrue(resultMatrixHTML0.getPrintRowNames());
      assertEquals(0, resultMatrixHTML0.getColNameWidth());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(1, resultMatrixCSV0.getRowCount());
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
      assertFalse(resultMatrixHTML0.getEnumerateRowNames());
      assertEquals(0, resultMatrixHTML0.getCountWidth());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=3.250941040667677
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getDefaultPrintColNames();
      resultMatrixPlainText0.padString(">Jjuaf8Ij\"M]", (-84), true);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixPlainText0);
      resultMatrixPlainText0.setOptions((String[]) null);
      assertFalse(resultMatrixPlainText0.getPrintRowNames());
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setEnumerateColNames(true);
      resultMatrixLatex0.setMeanPrec((-1676));
      assertEquals(1, resultMatrixLatex0.getRowCount());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=3.4812329012959573
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      ResultMatrixPlainText.main((String[]) null);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getDefaultPrintColNames();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setPrintColNames(false);
      resultMatrixCSV0.globalInfo();
      ResultMatrixCSV resultMatrixCSV1 = null;
      try {
        resultMatrixCSV1 = new ResultMatrixCSV(0, (-1518));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=3.4344363793870207
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getDefaultPrintColNames();
      resultMatrixPlainText0.padString(">Jjuaf8Ij\"M]", (-84), true);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixPlainText0);
      resultMatrixPlainText0.setOptions((String[]) null);
      int[] intArray0 = new int[9];
      intArray0[0] = 0;
      intArray0[1] = 1;
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setPrintRowNames(true);
      int[] intArray1 = new int[8];
      intArray1[0] = 26;
      intArray1[1] = 2;
      intArray1[2] = (-84);
      intArray1[3] = 2;
      intArray1[4] = 2;
      intArray1[5] = 2;
      intArray1[6] = 2;
      intArray1[7] = 0;
      resultMatrixCSV0.setColOrder(intArray1);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      resultMatrixLatex0.setRowOrder(intArray1);
      resultMatrixLatex0.toStringKey();
      ResultMatrixPlainText resultMatrixPlainText2 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getSignificance((-124), 0);
      resultMatrixLatex0.getSummaryTitle((-990));
      resultMatrixLatex0.toStringRanking();
      assertFalse(resultMatrixPlainText0.getPrintColNames());
      
      resultMatrixCSV0.getDisplayName();
      assertTrue(resultMatrixCSV0.getPrintRowNames());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.6794136984246846
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getRevision();
      resultMatrixLatex0.m_CountWidth = 0;
      resultMatrixLatex0.setShowAverage(true);
      assertTrue(resultMatrixLatex0.getShowAverage());
      
      resultMatrixLatex0.clear();
      String[][] stringArray0 = new String[2][3];
      String[] stringArray1 = new String[7];
      stringArray1[0] = " ";
      stringArray1[1] = " ";
      stringArray1[2] = " ";
      stringArray1[3] = "$\bullet$";
      stringArray1[4] = "ud/LII=S5C`";
      stringArray1[5] = "(";
      stringArray1[6] = "$\bullet$";
      stringArray0[0] = stringArray1;
      String[] stringArray2 = new String[1];
      stringArray2[0] = "ud/LII=S5C`";
      stringArray0[1] = stringArray2;
      int int0 = resultMatrixLatex0.getColSize(stringArray0, 0, true, true);
      assertFalse(resultMatrixLatex0.getDefaultShowAverage());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=3.153681727554905
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      assertEquals(1, resultMatrixPlainText0.getRowCount());
      
      resultMatrixPlainText0.toArray();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixPlainText0);
      resultMatrixHTML0.toStringRanking();
      assertEquals(5, resultMatrixHTML0.getCountWidth());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixHTML0.clear();
      resultMatrixGnuPlot0.toStringRanking();
      resultMatrixHTML0.getDisplayName();
      resultMatrixPlainText0.getShowStdDev();
      assertFalse(resultMatrixPlainText0.getDefaultShowAverage());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=3.4803098493482962
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(2, 5);
      String[] stringArray0 = new String[8];
      resultMatrixCSV0.listOptions();
      stringArray0[0] = "]";
      stringArray0[1] = "*";
      stringArray0[2] = "[";
      double[] doubleArray0 = new double[0];
      resultMatrixCSV0.m_Counts = doubleArray0;
      stringArray0[3] = "[";
      resultMatrixCSV0.setMeanWidth(7);
      resultMatrixCSV0.toStringSummary();
      stringArray0[5] = " ";
      stringArray0[6] = "[";
      stringArray0[7] = "]";
      ResultMatrixCSV.main(stringArray0);
      resultMatrixCSV0.setStdDevPrec(5);
      assertEquals(7, resultMatrixCSV0.getMeanWidth());
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setCountWidth(0);
      resultMatrixSignificance0.getRevision();
      resultMatrixSignificance0.significanceWidthTipText();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getDefaultRowNameWidth();
      assertTrue(resultMatrixPlainText0.getDefaultPrintRowNames());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=3.0860070518148177
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      int int0 = 0;
      int int1 = 479;
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 479);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixPlainText0);
      // Undeclared exception!
      try { 
        resultMatrixHTML0.toArray();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=3.4109540750269924
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(28, 28);
      resultMatrixSignificance0.setRowNameWidth(25);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(28, 2);
      resultMatrixSignificance0.m_CountWidth = 2;
      resultMatrixSignificance0.m_PrintRowNames = true;
      resultMatrixSignificance0.m_StdDevPrec = 25;
      resultMatrixLatex0.listOptions();
      resultMatrixSignificance0.m_RowNameWidth = 28;
      resultMatrixLatex0.m_ColNameWidth = 2;
      resultMatrixSignificance0.assign(resultMatrixLatex0);
      resultMatrixLatex0.toStringMatrix();
      resultMatrixSignificance0.toString();
      resultMatrixSignificance0.getSignificanceWidth();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDefaultRowNameWidth();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixSignificance0);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixPlainText0);
      // Undeclared exception!
      try { 
        resultMatrixHTML0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=3.4265561992264773
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "kXbG$1|d\"ZW";
      stringArray0[3] = "jN!}(2)xvwzZ2/E";
      stringArray0[4] = "BM=C%+tOqu";
      stringArray0[5] = "";
      stringArray0[6] = "-unsupervised..*";
      stringArray0[7] = "zs!VINSL8an2K4-p";
      ResultMatrixCSV.main(stringArray0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[][] intArray0 = new int[7][4];
      int[] intArray1 = new int[3];
      intArray1[0] = 1;
      intArray1[1] = (-993);
      intArray1[2] = 1;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[1];
      intArray2[0] = 1;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[5];
      intArray3[0] = (-993);
      intArray3[1] = 2;
      intArray3[2] = 2;
      intArray3[3] = 1;
      intArray3[4] = 1;
      intArray0[3] = intArray3;
      int[] intArray4 = new int[4];
      intArray4[0] = 137;
      intArray4[1] = 2;
      intArray4[2] = 2;
      intArray4[3] = 2;
      intArray0[3] = intArray4;
      int[] intArray5 = new int[1];
      intArray5[0] = 1;
      intArray0[4] = intArray5;
      int[] intArray6 = new int[8];
      intArray6[0] = 1;
      intArray6[1] = 439;
      intArray6[2] = 1;
      intArray6[3] = 0;
      intArray6[4] = 0;
      intArray6[5] = 137;
      intArray6[6] = 50;
      intArray6[7] = 0;
      intArray0[5] = intArray6;
      int[] intArray7 = new int[4];
      intArray7[0] = 137;
      intArray7[1] = 0;
      intArray7[2] = 2;
      intArray7[3] = 0;
      intArray0[6] = intArray7;
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.setRanking(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=3.2946188000713654
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      int int0 = 50;
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(50, 50);
      resultMatrixCSV0.meanPrecTipText();
      // Undeclared exception!
      resultMatrixCSV0.toArray();
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.8332133440562166
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      int[] intArray0 = new int[1];
      boolean[] booleanArray0 = new boolean[2];
      int[][] intArray1 = new int[7][9];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      int[] intArray2 = new int[8];
      intArray2[0] = 0;
      intArray2[1] = 1;
      intArray2[2] = 0;
      intArray2[3] = 1;
      intArray2[4] = 0;
      intArray2[5] = 0;
      intArray2[6] = 2;
      intArray2[7] = 1;
      intArray1[4] = intArray2;
      intArray1[5] = intArray0;
      intArray1[6] = intArray0;
      resultMatrixLatex0.m_Significance = intArray1;
      resultMatrixLatex0.m_ColOrder = intArray0;
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
      
      booleanArray0[0] = true;
      booleanArray0[1] = false;
      resultMatrixLatex0.m_ColHidden = booleanArray0;
      intArray0[0] = 0;
      resultMatrixLatex0.setRowOrder(intArray0);
      resultMatrixLatex0.toStringKey();
      resultMatrixLatex0.getDisplayName();
      assertEquals(0, resultMatrixLatex0.getVisibleColCount());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=3.0592794887184103
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      int[] intArray0 = new int[1];
      boolean[] booleanArray0 = new boolean[2];
      int[][] intArray1 = new int[7][9];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      int[] intArray2 = new int[8];
      intArray2[0] = 0;
      intArray2[1] = 2;
      intArray2[2] = 0;
      intArray2[3] = 1;
      intArray2[4] = 0;
      intArray2[5] = 0;
      intArray2[7] = 1;
      intArray1[4] = intArray2;
      intArray1[5] = intArray0;
      intArray1[6] = intArray0;
      resultMatrixLatex0.m_Significance = intArray1;
      resultMatrixLatex0.m_ColOrder = intArray0;
      booleanArray0[0] = true;
      booleanArray0[1] = false;
      intArray0[0] = 0;
      resultMatrixLatex0.setRowOrder(intArray0);
      String string0 = resultMatrixLatex0.toStringKey();
      assertEquals("\\begin{table}[thb]\n\\caption{\\label{labelname}Table Caption (Key)}\n\\scriptsize\n{\\centering\n\\begin{tabular}{cl}\\\\\n(1) & col0 \\\\\n\\end{tabular}\n}\n\\end{table}\n", string0);
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      int int0 = resultMatrixPlainText0.getSignificance((-1), 0);
      assertEquals(0, int0);
      assertTrue(resultMatrixPlainText0.getDefaultPrintColNames());
      
      resultMatrixLatex0.getRevision();
      assertEquals(1, resultMatrixLatex0.getColCount());
      assertFalse(resultMatrixLatex0.getEnumerateRowNames());
      assertEquals(0, resultMatrixLatex0.getDefaultRowNameWidth());
      assertEquals(0, resultMatrixLatex0.getDefaultCountWidth());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=3.468508456904889
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixLatex0.toStringRanking();
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      assertEquals(1, resultMatrixPlainText0.getVisibleColCount());
      
      String string0 = resultMatrixPlainText0.toString();
      assertEquals("Dataset                   (1) col0 \n-----------------------------------\nrow0                       (0)    |\n-----------------------------------\n(v/ /*)                           |\n", string0);
      
      resultMatrixPlainText0.getColOrder();
      resultMatrixPlainText0.toStringRanking();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(1, 0);
      resultMatrixPlainText1.listOptions();
      resultMatrixPlainText1.toStringKey();
      resultMatrixPlainText1.setPrintRowNames(false);
      resultMatrixPlainText0.addHeader("v", "Dataset                   (1) col0 \n-----------------------------------\nrow0                       (0)    |\n-----------------------------------\n(v/ /*)                           |\n");
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getRevision();
      resultMatrixPlainText1.getSignificance(719, 10);
      assertEquals(2, resultMatrixPlainText1.getMeanPrec());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=3.702504385259857
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getDefaultPrintColNames();
      resultMatrixPlainText0.padString(">Jjuaf8Ij\"M]", (-84), true);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixPlainText0);
      resultMatrixPlainText0.setOptions((String[]) null);
      int[] intArray0 = new int[9];
      intArray0[0] = 0;
      intArray0[1] = 1;
      intArray0[2] = 0;
      intArray0[3] = 0;
      intArray0[4] = 2;
      intArray0[5] = 0;
      intArray0[6] = 97;
      intArray0[7] = 0;
      intArray0[8] = 0;
      resultMatrixPlainText1.m_ColOrder = intArray0;
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText1);
      resultMatrixLatex0.m_ColNames = null;
      resultMatrixLatex0.m_MeanWidth = 2;
      String[] stringArray0 = new String[0];
      resultMatrixLatex0.m_ColNames = stringArray0;
      resultMatrixPlainText0.toString();
      resultMatrixPlainText1.getColOrder();
      resultMatrixPlainText1.toStringRanking();
      resultMatrixPlainText0.listOptions();
      resultMatrixPlainText1.toStringKey();
      resultMatrixPlainText0.setPrintRowNames(false);
      resultMatrixPlainText1.addHeader("v", (String) null);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getRevision();
      resultMatrixPlainText0.getSignificance(0, 1);
      resultMatrixPlainText1.setMean(0, 1, 0);
      assertFalse(resultMatrixPlainText0.getPrintColNames());
      assertEquals(5, resultMatrixPlainText0.getStdDevPrec());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=3.426399288996367
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(95, 0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      resultMatrixCSV0.setPrintRowNames(true);
      resultMatrixCSV0.m_RankingWins = null;
      int[] intArray0 = new int[8];
      intArray0[0] = 0;
      intArray0[1] = 95;
      intArray0[2] = 0;
      intArray0[3] = 2;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      resultMatrixSignificance0.getDefaultPrintColNames();
      resultMatrixSignificance0.setEnumerateRowNames(false);
      resultMatrixSignificance0.setCount(2, 0.0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(95, resultMatrixLatex0.getVisibleColCount());
      
      ResultMatrixGnuPlot.main((String[]) null);
      resultMatrixCSV0.getEnumerateRowNames();
      assertFalse(resultMatrixCSV0.getEnumerateColNames());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(0, resultMatrixCSV0.getDefaultMeanWidth());
      assertEquals(0, resultMatrixCSV0.getRowCount());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=3.382610567754935
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(95, 0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      resultMatrixCSV0.setPrintRowNames(false);
      resultMatrixCSV0.m_RankingWins = null;
      int[] intArray0 = new int[8];
      intArray0[0] = 0;
      intArray0[1] = 95;
      intArray0[2] = 95;
      intArray0[3] = 2;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      resultMatrixSignificance0.getDefaultPrintColNames();
      resultMatrixSignificance0.setEnumerateRowNames(false);
      resultMatrixSignificance0.setCount(2, 0.0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      int[][] intArray1 = new int[3][2];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(920, 0);
      // Undeclared exception!
      resultMatrixHTML0.toStringMatrix();
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.7725887222397807
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(2, 2);
      int[][] intArray0 = new int[8][2];
      int[] intArray1 = new int[9];
      intArray1[0] = 2;
      intArray1[1] = 1;
      intArray1[2] = 1930;
      intArray1[3] = 2;
      intArray1[4] = 2;
      intArray1[5] = 0;
      intArray1[6] = 0;
      intArray1[7] = 0;
      intArray1[8] = 0;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[8];
      intArray2[0] = 0;
      intArray2[1] = 0;
      intArray2[2] = 2;
      intArray2[3] = 2;
      intArray2[4] = 2;
      intArray2[5] = 2;
      intArray2[6] = 2;
      intArray2[7] = 0;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[4];
      intArray3[0] = 2;
      intArray3[1] = 2;
      intArray3[2] = 0;
      intArray3[3] = 0;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[8];
      intArray4[0] = 0;
      intArray4[1] = 1;
      intArray4[2] = 2;
      intArray4[3] = 2;
      intArray4[4] = 2;
      intArray4[5] = 1930;
      intArray4[6] = 0;
      intArray4[7] = (-2737);
      intArray0[3] = intArray4;
      int[] intArray5 = new int[7];
      intArray5[0] = 2;
      intArray5[1] = 2;
      intArray5[2] = 2;
      intArray5[3] = 0;
      intArray5[4] = 1930;
      intArray5[5] = 50;
      intArray5[6] = 2;
      intArray0[4] = intArray5;
      int[] intArray6 = new int[8];
      intArray6[0] = 0;
      intArray6[1] = (-2737);
      intArray6[2] = (-2737);
      intArray6[3] = 1930;
      intArray6[4] = 2;
      intArray6[5] = 657;
      intArray6[6] = 0;
      intArray6[7] = 1930;
      intArray0[5] = intArray6;
      int[] intArray7 = new int[4];
      intArray7[0] = (-2737);
      intArray7[1] = 0;
      intArray7[2] = (-2737);
      intArray7[3] = 582;
      intArray0[6] = intArray7;
      int[] intArray8 = new int[7];
      intArray8[0] = 841;
      intArray8[1] = 1;
      intArray8[2] = 0;
      intArray8[3] = 0;
      intArray8[4] = 2;
      intArray8[5] = 657;
      intArray8[6] = 0;
      intArray0[7] = intArray8;
      // Undeclared exception!
      try { 
        resultMatrixLatex0.setSummary(intArray0, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }
}
