/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 05:11:57 GMT 2019
 */

package weka.experiment;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Comparator;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import weka.experiment.ResultMatrixCSV;
import weka.experiment.ResultMatrixGnuPlot;
import weka.experiment.ResultMatrixHTML;
import weka.experiment.ResultMatrixLatex;
import weka.experiment.ResultMatrixPlainText;
import weka.experiment.ResultMatrixSignificance;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ResultMatrix_ESTest extends ResultMatrix_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.337588728123289
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(50, 50);
      boolean[] booleanArray0 = new boolean[5];
      booleanArray0[0] = true;
      resultMatrixGnuPlot0.getSummaryTitle(50);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "weka.experiment.ResultMatrixSignificance";
      stringArray0[1] = "*";
      stringArray0[2] = "0O,'lI!?g>v2i\"aN'U8";
      stringArray0[3] = "";
      stringArray0[4] = "*";
      stringArray0[6] = " ";
      stringArray0[7] = "";
      stringArray0[8] = "";
      resultMatrixGnuPlot0.m_ColNames = stringArray0;
      booleanArray0[1] = true;
      booleanArray0[2] = true;
      booleanArray0[3] = true;
      booleanArray0[4] = true;
      resultMatrixGnuPlot0.rowNameWidthTipText();
      resultMatrixGnuPlot0.removeFilterName("enum-row-names");
  }

  /**
  //Test case number: 1
  /*Coverage entropy=4.054601851557586
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(39, 39);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = ")";
      stringArray0[1] = "$circ$";
      stringArray0[2] = "$\bullet$";
      stringArray0[3] = " ";
      ResultMatrixPlainText.main(stringArray0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixCSV0);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(1, 2);
      resultMatrixPlainText0.addHeader("*", (String) null);
      resultMatrixPlainText1.setStdDevPrec(1);
      resultMatrixPlainText1.isStdDev(3646);
      resultMatrixPlainText0.removeFilterName("K(w^[T$V}W55");
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.9717703228185575
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(26, 26);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      int[] intArray0 = new int[5];
      intArray0[0] = 1;
      intArray0[1] = 5;
      String[] stringArray0 = new String[1];
      stringArray0[0] = ")";
      ResultMatrixCSV.main(stringArray0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[][] intArray1 = new int[0][3];
      resultMatrixGnuPlot0.setRanking(intArray1);
      resultMatrixCSV0.isSignificance(1196);
      resultMatrixCSV0.toStringSummary();
      resultMatrixGnuPlot0.getCount(1);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.4360112919435664
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(1353, 2);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      resultMatrixCSV0.doubleToString(1353, 1);
      resultMatrixCSV0.assign(resultMatrixSignificance0);
      resultMatrixLatex0.setCount(1, Double.NaN);
      resultMatrixCSV0.setColNameWidth(2);
      resultMatrixLatex0.countWidthTipText();
      resultMatrixLatex0.getColName(0);
      resultMatrixLatex0.clearSummary();
      resultMatrixCSV0.getDefaultPrintRowNames();
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      
      resultMatrixSignificance0.getColCount();
      assertEquals(2, resultMatrixSignificance0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=4.185930104035927
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.removeFilterName("2rU2~");
      resultMatrixSignificance0.getRevision();
      resultMatrixSignificance0.m_CountWidth = 536;
      resultMatrixSignificance0.getDefaultPrintColNames();
      int[] intArray0 = new int[3];
      intArray0[0] = 536;
      intArray0[1] = 2;
      intArray0[2] = 536;
      resultMatrixSignificance0.setColOrder(intArray0);
      resultMatrixSignificance0.setCountWidth(97);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setOptions((String[]) null);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      resultMatrixLatex0.toStringRanking();
      resultMatrixPlainText0.toString();
      resultMatrixPlainText0.getColOrder();
      resultMatrixPlainText0.toStringRanking();
      resultMatrixPlainText0.listOptions();
      resultMatrixPlainText0.toStringKey();
      resultMatrixPlainText0.setPrintRowNames(false);
      resultMatrixSignificance0.m_RankingLosses = intArray0;
      resultMatrixPlainText0.addHeader("2rU2~", "-ranking data not set-");
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getRevision();
      ResultMatrixPlainText resultMatrixPlainText1 = null;
      try {
        resultMatrixPlainText1 = new ResultMatrixPlainText(0, (-3383));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.586573974723776
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(95, 0);
      assertEquals(0, resultMatrixGnuPlot0.getRowCount());
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      resultMatrixCSV0.setPrintRowNames(true);
      int[] intArray0 = new int[8];
      intArray0[0] = 0;
      intArray0[1] = 95;
      intArray0[2] = 0;
      intArray0[4] = 95;
      intArray0[5] = 1;
      String string0 = resultMatrixCSV0.removeFilterName("+|0K!#v,T|;I@");
      assertEquals("+|0K!#v,T|;I@", string0);
      
      intArray0[6] = 95;
      resultMatrixGnuPlot0.setCountWidth(0);
      intArray0[7] = 0;
      resultMatrixGnuPlot0.setShowStdDev(false);
      resultMatrixCSV0.m_RowOrder = intArray0;
      resultMatrixGnuPlot0.m_PrintColNames = true;
      resultMatrixCSV0.toStringRanking();
      resultMatrixCSV0.getDefaultPrintColNames();
      resultMatrixGnuPlot0.m_ShowStdDev = false;
      int int0 = resultMatrixGnuPlot0.getColNameWidth();
      assertEquals(50, int0);
      
      resultMatrixGnuPlot0.getDefaultStdDevWidth();
      resultMatrixCSV0.isMean(1);
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertTrue(resultMatrixCSV0.getPrintColNames());
      assertFalse(resultMatrixCSV0.getRemoveFilterName());
      assertFalse(resultMatrixCSV0.getEnumerateRowNames());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(95, resultMatrixGnuPlot0.getColCount());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
      assertEquals(50, resultMatrixCSV0.getRowNameWidth());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.7527723393903885
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      double[] doubleArray0 = new double[6];
      resultMatrixGnuPlot0.setShowStdDev(true);
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 1610;
      doubleArray0[2] = (double) 1610;
      doubleArray0[3] = (double) 1;
      doubleArray0[4] = (double) 0;
      doubleArray0[5] = (double) 1;
      resultMatrixGnuPlot0.m_Counts = doubleArray0;
      resultMatrixGnuPlot0.m_Counts = null;
      resultMatrixGnuPlot0.toStringMatrix();
      resultMatrixGnuPlot0.printColNamesTipText();
      resultMatrixGnuPlot0.setSignificance(1610, 1610, 2784);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.padString("", 0);
      resultMatrixHTML0.toStringSummary();
      resultMatrixHTML0.clearSummary();
      resultMatrixGnuPlot0.getColName(0);
      ResultMatrixCSV resultMatrixCSV0 = null;
      try {
        resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.541410614094962
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(95, 0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(1, 1);
      resultMatrixCSV0.setPrintRowNames(true);
      int[] intArray0 = new int[8];
      intArray0[0] = 0;
      intArray0[1] = 95;
      intArray0[2] = 0;
      intArray0[3] = 2;
      intArray0[4] = 95;
      intArray0[5] = 1;
      resultMatrixCSV0.removeFilterName("+|0K!#v,T|;I@");
      intArray0[6] = 95;
      intArray0[7] = 0;
      resultMatrixCSV0.m_RowOrder = intArray0;
      resultMatrixGnuPlot0.m_PrintColNames = true;
      resultMatrixCSV0.toStringRanking();
      resultMatrixCSV0.getDefaultPrintColNames();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      assertEquals(0, resultMatrixSignificance0.getStdDevWidth());
      
      resultMatrixSignificance0.m_StdDevWidth = (-1);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      resultMatrixLatex0.setRowOrder(resultMatrixCSV0.m_RowOrder);
      resultMatrixLatex0.toStringKey();
      resultMatrixLatex0.getDisplayName();
      resultMatrixSignificance0.setColName(1, "}#|Cr-J{5[(wk");
      assertEquals(0, resultMatrixSignificance0.getCountWidth());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.7296099511771965
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      String string0 = resultMatrixSignificance0.toStringMatrix();
      assertEquals("Dataset (1)\n-----------\nrow0       \n", string0);
      
      resultMatrixSignificance0.getColCount();
      boolean boolean0 = resultMatrixSignificance0.getDefaultEnumerateRowNames();
      assertEquals(0, resultMatrixSignificance0.getColNameWidth());
      assertEquals(1, resultMatrixSignificance0.getVisibleColCount());
      assertEquals(40, resultMatrixSignificance0.getRowNameWidth());
      assertEquals(0, resultMatrixSignificance0.getMeanWidth());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.299907461977713
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixCSV0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV1);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      resultMatrixSignificance0.setCount(1, 0);
      resultMatrixSignificance0.addHeader("v", "-col-name-width");
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[3];
      intArray0[0] = 1;
      intArray0[1] = 1;
      intArray0[2] = 2;
      resultMatrixGnuPlot0.m_RowOrder = intArray0;
      resultMatrixGnuPlot0.getColHidden(1);
      String string0 = resultMatrixGnuPlot0.stdDevPrecTipText();
      assertEquals("The number of decimals after the decimal point for the standard deviation.", string0);
      
      ResultMatrixCSV resultMatrixCSV2 = new ResultMatrixCSV(resultMatrixHTML0);
      resultMatrixCSV0.getRevision();
      resultMatrixSignificance0.clearSummary();
      resultMatrixSignificance0.addHeader("", "]");
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertEquals(0, resultMatrixSignificance0.getStdDevWidth());
      assertEquals(25, resultMatrixSignificance0.getRowNameWidth());
      assertEquals(0, resultMatrixSignificance0.getSignificanceWidth());
      assertTrue(resultMatrixSignificance0.getPrintRowNames());
      assertFalse(resultMatrixSignificance0.getRemoveFilterName());
      assertEquals(0, resultMatrixSignificance0.getMeanWidth());
      assertEquals(1, resultMatrixSignificance0.getColCount());
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.193716136633044
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixCSV0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      resultMatrixSignificance0.getDefaultPrintColNames();
      resultMatrixSignificance0.setEnumerateRowNames(true);
      resultMatrixSignificance0.setCount(1312, 1312);
      resultMatrixSignificance0.addHeader("v", "[");
      ResultMatrixCSV resultMatrixCSV2 = new ResultMatrixCSV();
      resultMatrixCSV2.globalInfo();
      ResultMatrixCSV resultMatrixCSV3 = new ResultMatrixCSV(resultMatrixCSV0);
      resultMatrixCSV0.getRevision();
      resultMatrixSignificance0.clearSummary();
      resultMatrixSignificance0.addHeader((String) null, "*");
      assertTrue(resultMatrixSignificance0.getEnumerateRowNames());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.4702633695061764
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(95, 0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      resultMatrixCSV0.setPrintRowNames(true);
      assertEquals(50, resultMatrixCSV0.getRowNameWidth());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertFalse(resultMatrixCSV0.getEnumerateColNames());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      
      int[] intArray0 = new int[8];
      intArray0[0] = 0;
      intArray0[1] = 95;
      intArray0[2] = 0;
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 71);
      resultMatrixLatex0.setRowOrder(intArray0);
      resultMatrixLatex0.toStringKey();
      resultMatrixLatex0.getDisplayName();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(1357, 0);
      resultMatrixSignificance0.clearRanking();
      resultMatrixSignificance0.getDefaultPrintColNames();
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertEquals(0, resultMatrixSignificance0.getRowCount());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.0213463113353973
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.m_ShowStdDev = true;
      resultMatrixGnuPlot0.m_StdDevPrec = (-3000);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      resultMatrixSignificance0.m_Significance = null;
      int[] intArray0 = new int[4];
      resultMatrixSignificance0.m_NonSigWins = null;
      intArray0[0] = 2;
      intArray0[1] = 2;
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixGnuPlot0);
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot1.setRanking((int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=4.0166361427496495
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.removeFilterName("BU^5p$eJ-U/!SJ");
      String[] stringArray0 = new String[8];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      resultMatrixGnuPlot0.setSignificanceWidth(0);
      stringArray0[3] = "";
      resultMatrixGnuPlot0.m_StdDevPrec = 393;
      resultMatrixGnuPlot0.getOptions();
      assertTrue(resultMatrixGnuPlot0.getPrintColNames());
      
      stringArray0[4] = "v";
      resultMatrixGnuPlot0.m_PrintColNames = false;
      resultMatrixGnuPlot0.setStdDevPrec((-1));
      stringArray0[5] = "NC%X@/";
      stringArray0[6] = "";
      resultMatrixGnuPlot0.doubleToString(0, 0);
      stringArray0[7] = "";
      resultMatrixGnuPlot0.listOptions();
      ResultMatrixCSV.main(stringArray0);
      resultMatrixGnuPlot0.toStringRanking();
      resultMatrixGnuPlot0.clearHeader();
      resultMatrixGnuPlot0.toStringMatrix();
      resultMatrixGnuPlot0.getStdDevWidth();
      resultMatrixGnuPlot0.setEnumerateColNames(false);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getDefaultRowNameWidth();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      resultMatrixCSV0.globalInfo();
      resultMatrixCSV0.getDisplayName();
      double double0 = resultMatrixGnuPlot0.getMean((-612), 2);
      assertEquals(0.0, double0, 0.01);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.174015634790311
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(50, 50);
      resultMatrixLatex0.m_StdDevWidth = 0;
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) 2;
      doubleArray0[3] = (double) 0;
      doubleArray0[4] = (double) 50;
      doubleArray0[5] = (double) 0;
      doubleArray0[6] = (double) 0;
      doubleArray0[7] = (double) 0;
      doubleArray0[8] = (double) 0;
      resultMatrixLatex0.m_Counts = doubleArray0;
      resultMatrixCSV0.setCountWidth(896);
      resultMatrixLatex0.getDisplayName();
      resultMatrixLatex0.m_StdDevWidth = 10;
      resultMatrixCSV0.getDefaultShowStdDev();
      assertEquals(896, resultMatrixCSV0.getCountWidth());
      
      resultMatrixLatex0.getPrintColNames();
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.073074937920201
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixLatex0.setMeanPrec(0);
      assertEquals(0, resultMatrixLatex0.getMeanPrec());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.3417291421646933
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      int[] intArray0 = new int[1];
      boolean[] booleanArray0 = new boolean[2];
      int[][] intArray1 = new int[7][9];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      int[] intArray2 = new int[8];
      intArray2[0] = 0;
      intArray2[1] = 1;
      intArray2[2] = 0;
      intArray2[3] = 1;
      intArray2[4] = 0;
      intArray2[5] = 0;
      intArray2[6] = 2;
      intArray2[7] = 1;
      intArray1[4] = intArray2;
      intArray1[5] = intArray0;
      intArray1[6] = intArray0;
      resultMatrixLatex0.m_Significance = intArray1;
      resultMatrixLatex0.m_ColOrder = intArray0;
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
      
      booleanArray0[0] = true;
      booleanArray0[1] = false;
      resultMatrixLatex0.m_ColHidden = booleanArray0;
      intArray0[0] = 0;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getColNameWidth();
      resultMatrixGnuPlot0.getDefaultStdDevWidth();
      assertEquals(0, resultMatrixGnuPlot0.getDefaultMeanWidth());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.4761317588767007
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixLatex0.setEnumerateColNames(true);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(1, 11);
      resultMatrixCSV0.toStringKey();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      int[] intArray0 = new int[6];
      intArray0[0] = 1750;
      intArray0[1] = 2;
      intArray0[2] = 0;
      intArray0[3] = 0;
      intArray0[4] = 1;
      intArray0[5] = 2;
      resultMatrixPlainText0.m_RankingLosses = intArray0;
      resultMatrixPlainText0.setRowName(940, " ");
      resultMatrixCSV0.getDefaultRowNameWidth();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixHTML1);
      ResultMatrixHTML resultMatrixHTML2 = new ResultMatrixHTML(resultMatrixLatex0);
      // Undeclared exception!
      try { 
        resultMatrixHTML0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.2842228217416776
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      String string0 = resultMatrixPlainText0.meanWidthTipText();
      assertEquals("The width of the mean (0 = optimal).", string0);
      
      resultMatrixPlainText0.toStringSummary();
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(0, resultMatrixPlainText0.getColNameWidth());
      assertEquals(2, resultMatrixPlainText0.getDefaultMeanPrec());
      assertTrue(resultMatrixPlainText0.getPrintColNames());
      assertFalse(resultMatrixPlainText0.getShowAverage());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=4.014836865147528
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.removeFilterName("BU^5p$eJ-U/!SJ");
      String[] stringArray0 = new String[8];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      resultMatrixGnuPlot0.setSignificanceWidth(0);
      stringArray0[3] = "";
      resultMatrixGnuPlot0.m_StdDevPrec = 393;
      resultMatrixGnuPlot0.getOptions();
      stringArray0[4] = "v";
      resultMatrixGnuPlot0.m_PrintColNames = false;
      resultMatrixGnuPlot0.setStdDevPrec((-1));
      stringArray0[5] = "m%X@e";
      stringArray0[6] = "";
      resultMatrixGnuPlot0.doubleToString(0, 0);
      stringArray0[7] = "";
      resultMatrixGnuPlot0.listOptions();
      ResultMatrixCSV.main(stringArray0);
      resultMatrixGnuPlot0.toStringRanking();
      resultMatrixGnuPlot0.clearHeader();
      resultMatrixGnuPlot0.toStringMatrix();
      resultMatrixGnuPlot0.getStdDevWidth();
      resultMatrixGnuPlot0.setEnumerateColNames(false);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getDefaultRowNameWidth();
      resultMatrixHTML0.toStringSummary();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      resultMatrixCSV0.globalInfo();
      assertEquals(393, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.0924323384911334
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(26, 26);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      resultMatrixCSV0.doubleToString(521.944933867539, 2);
      resultMatrixLatex0.m_PrintRowNames = true;
      int[][] intArray0 = new int[1][4];
      int[] intArray1 = new int[3];
      intArray1[0] = 1;
      intArray1[1] = 2;
      intArray1[2] = 559;
      intArray0[0] = intArray1;
      resultMatrixLatex0.m_Significance = intArray0;
      resultMatrixCSV0.m_CountWidth = 559;
      // Undeclared exception!
      try { 
        resultMatrixCSV0.assign(resultMatrixLatex0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.393005360242077
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 2315);
      resultMatrixSignificance0.getMeanPrec();
      resultMatrixSignificance0.getDefaultRowNameWidth();
      resultMatrixSignificance0.getRevision();
      resultMatrixSignificance0.countWidthTipText();
      int[] intArray0 = new int[1];
      intArray0[0] = 40;
      resultMatrixSignificance0.setRowOrder(intArray0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(2315, 325);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.3961599788409003
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      resultMatrixHTML0.setStdDevPrec(19);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      int[] intArray0 = new int[0];
      resultMatrixLatex0.setRowOrder(intArray0);
      resultMatrixLatex0.toStringKey();
      resultMatrixLatex0.getDisplayName();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      resultMatrixSignificance0.setColName(2, "*");
      assertEquals(1, resultMatrixPlainText0.getColCount());
      assertEquals(19, resultMatrixHTML0.getStdDevPrec());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.586715066353091
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.removeFilterName("2rU2~");
      resultMatrixSignificance0.getRevision();
      resultMatrixSignificance0.m_CountWidth = 536;
      resultMatrixSignificance0.getDefaultPrintColNames();
      int[] intArray0 = new int[3];
      intArray0[0] = 536;
      intArray0[1] = 2;
      intArray0[2] = 536;
      resultMatrixSignificance0.setColOrder(intArray0);
      resultMatrixSignificance0.setCountWidth(97);
      resultMatrixSignificance0.setSize(2, 0);
      assertEquals(0, resultMatrixSignificance0.getRowCount());
      
      String[][] stringArray0 = new String[8][7];
      String[] stringArray1 = new String[4];
      stringArray1[0] = "2rU2~";
      stringArray1[1] = " ";
      stringArray1[2] = "0Ww~8fd>x f";
      stringArray1[3] = "2rU2~";
      stringArray0[0] = stringArray1;
      String[] stringArray2 = new String[5];
      stringArray2[0] = "2rU2~";
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setRowOrder(intArray0);
      resultMatrixLatex0.toStringKey();
      resultMatrixLatex0.getDisplayName();
      assertTrue(resultMatrixLatex0.getPrintRowNames());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.174198283192137
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      int[] intArray0 = new int[1];
      int[][] intArray1 = new int[7][9];
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      int[] intArray2 = new int[8];
      intArray2[0] = 0;
      intArray2[1] = 1;
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      resultMatrixCSV0.removeFilterName("");
      int int0 = 1198;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(1198, 87);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.5859853946051325
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      int int0 = 0;
      int int1 = 479;
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 479);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixPlainText0);
      // Undeclared exception!
      try { 
        resultMatrixHTML0.toArray();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.4939810019729647
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.removeFilterName("2rU2~");
      resultMatrixSignificance0.getRevision();
      resultMatrixSignificance0.m_CountWidth = 536;
      resultMatrixSignificance0.getDefaultPrintColNames();
      int[] intArray0 = new int[3];
      intArray0[0] = 536;
      intArray0[1] = 2;
      intArray0[2] = 536;
      resultMatrixSignificance0.setColOrder(intArray0);
      resultMatrixSignificance0.setCountWidth(97);
      resultMatrixSignificance0.setSize(2, 0);
      String[][] stringArray0 = new String[8][7];
      String[] stringArray1 = new String[4];
      stringArray1[0] = "2rU2~";
      stringArray1[1] = " ";
      stringArray1[2] = "0Ww~8fd>x f";
      stringArray1[3] = "2rU2~";
      stringArray0[0] = stringArray1;
      String[] stringArray2 = new String[5];
      stringArray2[0] = "2rU2~";
      stringArray2[1] = "PFH&+\"~Na";
      stringArray2[2] = " ";
      stringArray2[3] = "0Ww~8fd>x f";
      stringArray2[4] = ")";
      stringArray0[1] = stringArray2;
      String[] stringArray3 = new String[3];
      stringArray3[0] = "0Ww~8fd>x f";
      stringArray3[1] = "0Ww~8fd>x f";
      stringArray3[2] = "2rU2~";
      stringArray0[2] = stringArray3;
      String[] stringArray4 = new String[6];
      stringArray4[0] = "";
      stringArray4[1] = "end{table}\n";
      stringArray4[2] = "0Ww~8fd>x f";
      stringArray4[3] = "8034";
      stringArray4[4] = " ";
      stringArray4[5] = "$93W&5O]?;KzZ";
      stringArray0[3] = stringArray4;
      String[] stringArray5 = new String[5];
      stringArray5[0] = ")";
      stringArray5[1] = ")";
      stringArray5[2] = " ";
      stringArray5[3] = "*";
      stringArray5[4] = "PFH&+\"~Na";
      stringArray0[4] = stringArray5;
      String[] stringArray6 = new String[5];
      stringArray6[0] = "v";
      stringArray6[1] = "";
      stringArray6[2] = "0Ww~8fd>x f";
      stringArray6[3] = "$93W&5O]?;KzZ";
      stringArray6[4] = " ";
      stringArray0[5] = stringArray6;
      String[] stringArray7 = new String[6];
      stringArray7[0] = "end{table}\n";
      stringArray7[1] = "0Ww~8fd>x f";
      stringArray7[2] = "8034";
      stringArray7[3] = "(";
      stringArray7[4] = "$93W&5O]?;KzZ";
      stringArray7[5] = "0Ww~8fd>x f";
      stringArray0[6] = stringArray7;
      String[] stringArray8 = new String[8];
      stringArray8[0] = "$93W&5O]?;KzZ";
      stringArray8[1] = "\n6. mean prec to 3\n";
      stringArray8[2] = ")";
      stringArray8[3] = "";
      stringArray8[4] = "XEnC>i";
      stringArray8[5] = "end{table}\n";
      stringArray8[6] = "(";
      stringArray8[7] = "so6q6E~@X'm;fYM";
      stringArray0[7] = stringArray8;
      int int0 = resultMatrixSignificance0.getColSize(stringArray0, 536);
      assertEquals(97, resultMatrixSignificance0.getCountWidth());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.46969835055888
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      int[] intArray0 = new int[1];
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setColOrder(intArray0);
      resultMatrixSignificance0.setCountWidth((-2867));
      resultMatrixSignificance0.setSize(1344, 0);
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.getColSize((String[][]) null, 97);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.9920920524114467
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "*";
      resultMatrixCSV0.setOptions(stringArray0);
      resultMatrixCSV0.toStringMatrix();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      resultMatrixGnuPlot0.globalInfo();
      int int0 = 97;
      resultMatrixGnuPlot0.setStdDev(0, 97, 100.0);
      double[][] doubleArray0 = new double[3][6];
      double[] doubleArray1 = new double[9];
      doubleArray1[0] = (double) 97;
      doubleArray1[1] = (double) 97;
      doubleArray1[2] = (double) 1;
      doubleArray1[3] = 10.0;
      doubleArray1[4] = (double) 2;
      doubleArray1[5] = (-1610.827);
      doubleArray1[6] = (double) 2;
      doubleArray1[7] = (double) 1;
      doubleArray1[8] = (double) 2;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[8];
      doubleArray2[0] = (double) 0;
      doubleArray2[1] = 10.0;
      doubleArray2[2] = (double) 2;
      doubleArray2[3] = (-1610.827);
      doubleArray2[4] = (double) 97;
      doubleArray2[5] = (double) 0;
      doubleArray2[6] = (double) 0;
      doubleArray2[7] = (double) 0;
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[5];
      doubleArray3[0] = (double) 1;
      doubleArray3[1] = (-1610.827);
      doubleArray3[2] = 10.0;
      doubleArray3[3] = (double) 2;
      doubleArray3[4] = (-1569.581453);
      doubleArray0[2] = doubleArray3;
      resultMatrixCSV0.m_StdDev = doubleArray0;
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.811963655491563
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixCSV0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV1);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV1);
      int int0 = resultMatrixLatex0.getDisplayRow(0);
      assertEquals(0, int0);
      
      resultMatrixLatex0.getStdDev(2184, 2);
      resultMatrixCSV1.getDefaultRemoveFilterName();
      assertEquals(0, resultMatrixCSV1.getStdDevWidth());
      assertEquals(25, resultMatrixCSV1.getRowNameWidth());
      assertEquals(0, resultMatrixCSV1.getMeanWidth());
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      assertEquals(1, resultMatrixSignificance0.getVisibleColCount());
      
      String string0 = resultMatrixSignificance0.toStringMatrix();
      assertEquals("Dataset (1)\n-----------\nrow0       \n", string0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=3.1940833047499138
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      double[][] doubleArray0 = new double[0][7];
      resultMatrixLatex1.m_StdDev = doubleArray0;
      resultMatrixLatex1.LEFT_PARENTHESES = "(";
      int int0 = resultMatrixLatex1.getRowNameWidth();
      assertEquals(0, resultMatrixLatex1.getCountWidth());
      assertTrue(resultMatrixLatex1.getEnumerateColNames());
      assertEquals(2, resultMatrixLatex1.getMeanPrec());
      assertEquals(2, resultMatrixLatex1.getStdDevPrec());
      assertEquals(0, int0);
      assertEquals(0, resultMatrixLatex1.getStdDevWidth());
      assertEquals(0, resultMatrixLatex1.getSignificanceWidth());
      assertTrue(resultMatrixLatex1.getPrintRowNames());
      
      int[][] intArray0 = new int[1][6];
      int[] intArray1 = new int[7];
      intArray1[0] = 2;
      intArray1[1] = 2;
      intArray1[2] = 1;
      intArray1[3] = 2;
      intArray1[4] = 2;
      intArray1[5] = 0;
      intArray1[6] = 2;
      intArray0[0] = intArray1;
      resultMatrixLatex0.setSummary(intArray0, intArray0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 2);
      resultMatrixCSV0.globalInfo();
      assertEquals(2, resultMatrixCSV0.getRowCount());
      
      resultMatrixLatex0.getDefaultRemoveFilterName();
      assertEquals(1, resultMatrixLatex0.getColCount());
      assertFalse(resultMatrixLatex0.getShowStdDev());
      assertEquals(1, resultMatrixLatex0.getRowCount());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=3.1911732826337453
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(26, 26);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      int[][] intArray0 = new int[1][4];
      int[] intArray1 = new int[5];
      intArray1[0] = 1;
      intArray1[1] = 5;
      intArray1[2] = 2;
      intArray1[3] = 0;
      intArray1[4] = 2;
      intArray0[0] = intArray1;
      resultMatrixCSV0.setSummary(intArray0, intArray0);
      resultMatrixCSV0.getDefaultPrintColNames();
      resultMatrixCSV0.printRowNamesTipText();
      assertEquals(26, resultMatrixCSV0.getColCount());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertEquals(26, resultMatrixCSV0.getRowCount());
      assertEquals(0, resultMatrixCSV0.getDefaultColNameWidth());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(0, resultMatrixCSV0.getRowNameWidth());
      assertTrue(resultMatrixCSV0.getEnumerateColNames());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.891665385107469
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.padString("SS)^5lp2~}B#", 1);
      resultMatrixGnuPlot0.setSignificanceWidth(1);
      resultMatrixGnuPlot0.getOptions();
      boolean boolean0 = false;
      resultMatrixGnuPlot0.setStdDevPrec(393);
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.doubleToString(393, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.7828098764231677
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.padString("SS)^5lp2~}B#", 1);
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 1;
      doubleArray0[2] = (double) 1;
      doubleArray0[3] = (double) 1;
      doubleArray0[4] = (double) 0;
      doubleArray0[5] = (double) 1;
      resultMatrixGnuPlot0.m_Counts = doubleArray0;
      resultMatrixGnuPlot0.m_Counts = null;
      resultMatrixGnuPlot0.toStringMatrix();
      resultMatrixGnuPlot0.printColNamesTipText();
      resultMatrixGnuPlot0.setSignificance(1, 1, 2784);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.toStringSummary();
      resultMatrixHTML0.clearSummary();
      resultMatrixGnuPlot0.getColName(0);
      ResultMatrixCSV resultMatrixCSV0 = null;
      try {
        resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.779197430095805
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.removeFilterName("BU^5p$eJ-U/!SJ");
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = "";
      stringArray0[1] = "";
      String string0 = resultMatrixGnuPlot0.toStringMatrix();
      assertEquals("\n##################\n# file: plot.dat #\n##################\n# generated by WEKA 3.7.7\n# contains the data for the plot\n\n# key for the x-axis\n# 1 - row0\n\n# data for the plot\n1 ''\n#######\n# end #\n#######\n\n##################\n# file: plot.scr #\n##################\n# generated by WEKA 3.7.7\n# script to plot the data\n\n# display it in a window:\nset terminal x11\nset output\n\n# to display all data rows:\nset xrange [0:2]\n\n# axis labels, e.g.:\n#set xlabel \"Datasets\"\n#set ylabel \"Accuracy in %\"\n\n# the plot commands\nplot \"plot.dat\" using 1:2 with lines title \"col0\"\n\n# generate ps:\n#set terminal postscript\n#set output \"plot.ps\"\n#replot\n\n# generate png:\n#set terminal png size 800,600\n#set output \"plot.png\"\n#replot\n\n# wait for user to hit <Return>\npause -1\n#######\n# end #\n#######\n", string0);
      
      resultMatrixGnuPlot0.printColNamesTipText();
      resultMatrixGnuPlot0.setSignificance((-284), 2784, (-284));
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.toStringSummary();
      resultMatrixHTML0.clearSummary();
      resultMatrixGnuPlot0.getColName(0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      resultMatrixCSV0.getDefaultEnumerateColNames();
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.padString(")", 2784);
      String string1 = resultMatrixSignificance0.toStringKey();
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertEquals("Key:\n(1) col0\n", string1);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=3.2532260461349125
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(26, 26);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      int[] intArray0 = new int[5];
      intArray0[0] = 1;
      resultMatrixCSV0.assign(resultMatrixLatex0);
      resultMatrixLatex0.setCount(0, 1774.0);
      resultMatrixLatex0.countWidthTipText();
      String string0 = resultMatrixLatex0.getColName(1342);
      assertNull(string0);
      
      resultMatrixLatex0.clearSummary();
      resultMatrixCSV0.getDefaultPrintRowNames();
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertTrue(resultMatrixCSV0.getEnumerateColNames());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertFalse(resultMatrixCSV0.getShowStdDev());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertFalse(resultMatrixCSV0.getDefaultShowAverage());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.8405584616179933
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.m_ShowStdDev = true;
      resultMatrixGnuPlot0.m_StdDevPrec = (-3000);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      resultMatrixSignificance0.m_Significance = null;
      int[] intArray0 = new int[4];
      resultMatrixSignificance0.m_NonSigWins = null;
      intArray0[0] = 2;
      intArray0[1] = 2;
      intArray0[2] = 26;
      intArray0[3] = 26;
      resultMatrixGnuPlot0.m_ColNameWidth = (-1);
      resultMatrixGnuPlot0.m_ColOrder = intArray0;
      resultMatrixSignificance0.m_StdDevPrec = 26;
      resultMatrixSignificance0.getDefaultPrintColNames();
      resultMatrixSignificance0.setEnumerateRowNames(false);
      resultMatrixSignificance0.setCount((-1772), 1);
      resultMatrixSignificance0.addHeader("v", "eAbYGT%Rxm(2*VF<");
      resultMatrixGnuPlot0.getColHidden(2612);
      resultMatrixGnuPlot0.stdDevPrecTipText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getOptions();
      resultMatrixCSV0.globalInfo();
      resultMatrixGnuPlot0.setSize(0, 742);
      ResultMatrixCSV resultMatrixCSV1 = null;
      try {
        resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixSignificance0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.585607774538988
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(26, 26);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      int[] intArray0 = new int[5];
      intArray0[0] = 1;
      intArray0[1] = 5;
      intArray0[2] = 2;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(26, 1);
      resultMatrixSignificance0.getDefaultPrintColNames();
      resultMatrixSignificance0.clearHeader();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      resultMatrixCSV1.setPrintColNames(false);
      resultMatrixCSV0.globalInfo();
      ResultMatrixCSV resultMatrixCSV2 = new ResultMatrixCSV();
      resultMatrixCSV2.toStringKey();
      resultMatrixCSV2.setRemoveFilterName(false);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setRowName(0, "");
      resultMatrixCSV1.getDefaultRowNameWidth();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixSignificance0);
      resultMatrixLatex0.m_RemoveFilterName = false;
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      // Undeclared exception!
      try { 
        resultMatrixHTML0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.447953969046343
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(1353, 2);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      String string0 = resultMatrixCSV0.doubleToString(1353, 1);
      assertEquals("1353.0", string0);
      
      resultMatrixLatex0.setCount(1, Double.NaN);
      resultMatrixLatex0.countWidthTipText();
      String string1 = resultMatrixLatex0.getColName(0);
      assertEquals("[1]", string1);
      
      resultMatrixLatex0.clearSummary();
      resultMatrixCSV0.getDefaultPrintRowNames();
      resultMatrixLatex0.getDefaultColNameWidth();
      resultMatrixLatex0.getCount(1353);
      assertEquals(1353, resultMatrixLatex0.getColCount());
      assertEquals(25, resultMatrixLatex0.getRowNameWidth());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertFalse(resultMatrixLatex0.getEnumerateRowNames());
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=3.358741392288307
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixHTML0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML1);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      resultMatrixLatex0.setStdDevPrec(1);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixLatex0);
      resultMatrixSignificance0.m_EnumerateRowNames = false;
      resultMatrixGnuPlot0.getRowName(2148);
      resultMatrixGnuPlot0.globalInfo();
      resultMatrixHTML1.setEnumerateRowNames(false);
      resultMatrixGnuPlot0.doubleToString(0.0, 2);
      resultMatrixGnuPlot0.getRevision();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDefaultPrintColNames();
      resultMatrixHTML1.getDisplayName();
      double[][] doubleArray0 = new double[3][1];
      double[] doubleArray1 = new double[8];
      doubleArray1[0] = (double) 1;
      doubleArray1[1] = (double) 0;
      doubleArray1[2] = (double) 2;
      doubleArray1[3] = (double) 0;
      doubleArray1[4] = (double) 0;
      doubleArray1[5] = (double) 1;
      doubleArray1[6] = (double) 2;
      doubleArray1[7] = (double) 1;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[0];
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[9];
      doubleArray3[0] = (double) 0;
      doubleArray3[1] = (double) 0;
      doubleArray3[2] = (double) 2;
      doubleArray3[3] = (double) 2;
      doubleArray3[4] = (double) 0;
      doubleArray3[5] = 0.0;
      doubleArray3[6] = (double) 0;
      doubleArray3[7] = (double) 0;
      doubleArray3[8] = (double) 1;
      doubleArray0[2] = doubleArray3;
      resultMatrixHTML1.m_Mean = doubleArray0;
      resultMatrixLatex0.getDisplayRow((-1362));
      resultMatrixLatex0.getStdDev(2148, 1137);
      assertEquals(1, resultMatrixLatex0.getStdDevPrec());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.192768618603882
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getDefaultPrintColNames();
      String string0 = ">Jjuaf8Ij\"M]";
      resultMatrixPlainText0.padString(">Jjuaf8Ij\"M]", (-84), true);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixPlainText0);
      String[] stringArray0 = null;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 2);
      int int0 = (-3249);
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.setSize((-3249), (-3249));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.716846002694684
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.m_StdDevWidth = 0;
      resultMatrixGnuPlot0.toStringMatrix();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 0);
      boolean[] booleanArray0 = new boolean[3];
      resultMatrixLatex0.setPrintColNames(true);
      resultMatrixLatex0.setStdDevPrec(0);
      booleanArray0[0] = false;
      resultMatrixGnuPlot0.m_EnumerateColNames = false;
      booleanArray0[1] = false;
      booleanArray0[2] = false;
      resultMatrixLatex0.m_ColHidden = booleanArray0;
      int[] intArray0 = new int[7];
      intArray0[0] = 0;
      intArray0[1] = 1;
      intArray0[2] = 0;
      intArray0[3] = 2;
      intArray0[4] = 0;
      intArray0[5] = 2;
      intArray0[6] = 2;
      resultMatrixLatex0.m_RankingWins = intArray0;
      resultMatrixLatex0.globalInfo();
      // Undeclared exception!
      try { 
        resultMatrixLatex0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=3.174150540529948
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getRevision();
      resultMatrixLatex0.m_CountWidth = 0;
      resultMatrixLatex0.setShowAverage(true);
      assertTrue(resultMatrixLatex0.getShowAverage());
      
      resultMatrixLatex0.clear();
      String[][] stringArray0 = new String[2][3];
      String[] stringArray1 = new String[7];
      stringArray1[0] = " ";
      stringArray1[1] = " ";
      stringArray1[2] = " ";
      stringArray1[3] = "$\bullet$";
      stringArray1[4] = "ud/LII=S5C`";
      stringArray1[5] = "(";
      stringArray1[6] = "$\bullet$";
      stringArray0[0] = stringArray1;
      String[] stringArray2 = new String[1];
      stringArray2[0] = "ud/LII=S5C`";
      stringArray0[1] = stringArray2;
      int int0 = resultMatrixLatex0.getColSize(stringArray0, 0, true, true);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=3.2286443931453856
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      Vector<Integer> vector0 = new Vector<Integer>();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      vector0.sort(comparator0);
      resultMatrixHTML0.setRemoveFilterName(true);
      resultMatrixHTML0.m_HeaderKeys = vector0;
      resultMatrixHTML0.toStringSummary();
      boolean boolean0 = resultMatrixHTML0.getDefaultShowStdDev();
      assertTrue(resultMatrixHTML0.getRemoveFilterName());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=3.3786938278101784
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getRevision();
      resultMatrixLatex0.m_CountWidth = 0;
      resultMatrixLatex0.setShowAverage(true);
      assertTrue(resultMatrixLatex0.getShowAverage());
      
      resultMatrixLatex0.clear();
      String[][] stringArray0 = new String[2][3];
      String[] stringArray1 = new String[7];
      stringArray1[0] = " ";
      stringArray1[1] = " ";
      stringArray1[2] = " ";
      stringArray1[3] = "$\bullet$";
      stringArray1[4] = "ud/LII=S5C`";
      stringArray1[5] = "(";
      stringArray1[6] = "$\bullet$";
      stringArray0[0] = stringArray1;
      String[] stringArray2 = new String[1];
      stringArray2[0] = "ud/LII=S5C`";
      resultMatrixLatex0.getColHidden(0);
      resultMatrixLatex0.getStdDev(0, 0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 39);
      resultMatrixHTML0.getDefaultRowNameWidth();
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=3.1257298336542223
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      resultMatrixHTML0.setColNameWidth(0);
      assertEquals(5, resultMatrixHTML0.getCountWidth());
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
      assertTrue(resultMatrixHTML0.getPrintColNames());
      assertFalse(resultMatrixHTML0.getDefaultRemoveFilterName());
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
      assertEquals(1, resultMatrixHTML0.getRowCount());
      assertTrue(resultMatrixHTML0.getEnumerateColNames());
      assertEquals(25, resultMatrixHTML0.getRowNameWidth());
      assertTrue(resultMatrixHTML0.getPrintRowNames());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=3.5143431803221823
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(95, 0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(1, 1);
      resultMatrixCSV0.setPrintRowNames(true);
      int[] intArray0 = new int[8];
      intArray0[0] = 0;
      intArray0[1] = 95;
      intArray0[2] = 0;
      intArray0[3] = 2;
      intArray0[4] = 95;
      intArray0[5] = 1;
      resultMatrixCSV0.removeFilterName("+|0K!#v,T|;I@");
      intArray0[6] = 95;
      intArray0[7] = 0;
      resultMatrixCSV0.m_RowOrder = intArray0;
      resultMatrixGnuPlot0.m_PrintColNames = true;
      assertEquals(0, resultMatrixGnuPlot0.getRowCount());
      assertEquals(95, resultMatrixGnuPlot0.getColCount());
      
      resultMatrixCSV0.toStringRanking();
      resultMatrixCSV0.getDefaultPrintColNames();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      resultMatrixSignificance0.m_StdDevWidth = (-1);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setMeanWidth(2);
      resultMatrixPlainText0.getShowStdDev();
      assertEquals(2, resultMatrixPlainText0.getMeanWidth());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=3.3946173106582624
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(26, 26);
      resultMatrixSignificance0.removeFilterName("2rU2~");
      resultMatrixSignificance0.getRevision();
      resultMatrixSignificance0.getDefaultPrintColNames();
      int[] intArray0 = new int[4];
      intArray0[0] = 1;
      intArray0[1] = 26;
      intArray0[2] = 26;
      intArray0[3] = 0;
      resultMatrixSignificance0.setColOrder(intArray0);
      resultMatrixSignificance0.LOSS_STRING = "\begin{tabular}{l";
      resultMatrixSignificance0.setCountWidth(0);
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.setSize(1, (-2316));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=3.074513528101823
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      assertEquals(1, resultMatrixCSV0.getRowCount());
      
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixCSV0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV1);
      resultMatrixHTML0.setColNameWidth((-1601));
      assertTrue(resultMatrixHTML0.getEnumerateColNames());
      assertEquals(0, resultMatrixHTML0.getColNameWidth());
      assertEquals(0, resultMatrixHTML0.getDefaultMeanWidth());
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
      assertTrue(resultMatrixHTML0.getPrintRowNames());
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(0, resultMatrixHTML0.getCountWidth());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertFalse(resultMatrixHTML0.getEnumerateRowNames());
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
      assertEquals(25, resultMatrixHTML0.getRowNameWidth());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=3.020272774029976
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.m_ShowStdDev = true;
      resultMatrixGnuPlot0.m_StdDevPrec = (-3000);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      resultMatrixSignificance0.m_Significance = null;
      int[] intArray0 = new int[4];
      resultMatrixSignificance0.m_NonSigWins = null;
      intArray0[0] = 2;
      intArray0[1] = 2;
      intArray0[2] = 26;
      intArray0[3] = 26;
      resultMatrixGnuPlot0.m_ColNameWidth = (-1);
      resultMatrixGnuPlot0.m_ColOrder = intArray0;
      resultMatrixSignificance0.m_StdDevPrec = 26;
      resultMatrixSignificance0.getDefaultPrintColNames();
      resultMatrixGnuPlot0.setCountWidth(40);
      ResultMatrixCSV resultMatrixCSV0 = null;
      try {
        resultMatrixCSV0 = new ResultMatrixCSV(26, (-1));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=3.9528893738291297
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(2, 5);
      String[] stringArray0 = new String[8];
      resultMatrixCSV0.listOptions();
      stringArray0[0] = "]";
      stringArray0[1] = "*";
      stringArray0[2] = "[";
      double[] doubleArray0 = new double[0];
      resultMatrixCSV0.m_Counts = doubleArray0;
      stringArray0[3] = "[";
      stringArray0[4] = "v";
      resultMatrixCSV0.toStringSummary();
      stringArray0[5] = " ";
      stringArray0[6] = "[";
      stringArray0[7] = "]";
      ResultMatrixCSV.main(stringArray0);
      resultMatrixCSV0.setStdDevPrec(5);
      assertEquals(5, resultMatrixCSV0.getStdDevPrec());
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.m_SignificanceWidth = (-2599);
      resultMatrixSignificance0.setCountWidth(0);
      resultMatrixSignificance0.getRevision();
      resultMatrixSignificance0.significanceWidthTipText();
      assertTrue(resultMatrixSignificance0.getPrintRowNames());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=3.2227895625062026
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      resultMatrixHTML0.setStdDevPrec(19);
      assertEquals(19, resultMatrixHTML0.getStdDevPrec());
      
      resultMatrixPlainText0.setMeanWidth(0);
      resultMatrixPlainText0.getShowStdDev();
      assertEquals(2, resultMatrixPlainText0.getDefaultStdDevPrec());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=3.613237470520887
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      assertEquals(1, resultMatrixSignificance0.getVisibleColCount());
      
      String[][] stringArray0 = resultMatrixSignificance0.toArray();
      assertTrue(resultMatrixSignificance0.getPrintRowNames());
      assertEquals(0, resultMatrixSignificance0.getSignificanceWidth());
      assertEquals(3, stringArray0.length);
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(0, resultMatrixSignificance0.getRowNameWidth());
      assertEquals(0, resultMatrixSignificance0.getColNameWidth());
      assertFalse(resultMatrixSignificance0.getRemoveFilterName());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=3.794609276080432
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      int int0 = 50;
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(50, 50);
      resultMatrixCSV0.meanPrecTipText();
      // Undeclared exception!
      resultMatrixCSV0.toArray();
  }

  /**
  //Test case number: 54
  /*Coverage entropy=4.037068342552734
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      int[] intArray0 = new int[1];
      boolean[] booleanArray0 = new boolean[2];
      int[][] intArray1 = new int[7][9];
      intArray1[0] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      int[] intArray2 = new int[8];
      intArray2[0] = 0;
      intArray2[1] = 1;
      intArray2[2] = 0;
      intArray2[3] = 1;
      intArray2[4] = 0;
      intArray2[5] = 0;
      intArray2[6] = 2;
      intArray2[7] = 1;
      intArray1[4] = intArray2;
      intArray1[5] = intArray0;
      intArray1[6] = intArray0;
      resultMatrixLatex0.m_Significance = intArray1;
      booleanArray0[1] = false;
      intArray0[0] = 0;
      resultMatrixLatex0.setRowOrder(intArray0);
      resultMatrixLatex0.toStringKey();
      resultMatrixLatex0.getDisplayName();
      assertTrue(resultMatrixLatex0.getEnumerateColNames());
      
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[1] = "\"3Ncs1cgk)Lpt^3I";
      stringArray0[2] = " ";
      resultMatrixLatex0.setOptions(stringArray0);
      String string0 = resultMatrixLatex0.toString();
      assertEquals("\\begin{table}[thb]\n\\caption{\\label{labelname}Table Caption}\n\\footnotesize\n{\\centering \\begin{tabular}{lr}\n\\\\\n\\hline\nDataset & \\\\\n\\hline\n & \\\\\n\\hline\n\\multicolumn{2}{c}{$\\circ$, $\\bullet$ statistically significant improvement or degradation}\\\\\n\\end{tabular} \\footnotesize \\par}\n\\end{table}\n", string0);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=4.1767442169063
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getDefaultPrintColNames();
      resultMatrixPlainText0.padString(">Jjuaf8Ij\"M]", (-84), true);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixPlainText0);
      resultMatrixPlainText0.setOptions((String[]) null);
      int[] intArray0 = new int[9];
      intArray0[0] = 0;
      intArray0[1] = 1;
      intArray0[2] = 0;
      intArray0[3] = 0;
      intArray0[4] = 2;
      intArray0[5] = 0;
      intArray0[6] = 97;
      intArray0[7] = 0;
      intArray0[8] = 0;
      resultMatrixPlainText1.m_ColOrder = intArray0;
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText1);
      resultMatrixLatex0.m_ColNames = null;
      resultMatrixLatex0.m_MeanWidth = 2;
      String[] stringArray0 = new String[0];
      resultMatrixLatex0.m_ColNames = stringArray0;
      resultMatrixLatex0.toStringRanking();
      resultMatrixPlainText0.toString();
      resultMatrixPlainText1.getColOrder();
      resultMatrixPlainText1.toStringRanking();
      resultMatrixPlainText0.listOptions();
      resultMatrixPlainText1.toStringKey();
      resultMatrixPlainText0.setPrintRowNames(false);
      resultMatrixPlainText1.addHeader("v", (String) null);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getRevision();
      resultMatrixPlainText0.getSignificance(0, 1);
      assertTrue(resultMatrixPlainText0.getEnumerateRowNames());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=3.9264830249252918
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "kXbG$1|d\"ZW";
      stringArray0[3] = "jN!}(2)xvwzZ2/E";
      stringArray0[4] = "BM=C%+tOqu";
      stringArray0[5] = "";
      stringArray0[6] = "-unsupervised..*";
      stringArray0[7] = "zs!VINSL8an2K4-p";
      ResultMatrixCSV.main(stringArray0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[][] intArray0 = new int[7][4];
      int[] intArray1 = new int[3];
      intArray1[0] = 1;
      intArray1[1] = (-993);
      intArray1[2] = 1;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[1];
      intArray2[0] = 1;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[5];
      intArray3[0] = (-993);
      intArray3[1] = 2;
      intArray3[2] = 2;
      intArray3[3] = 1;
      intArray3[4] = 1;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[4];
      intArray4[0] = 137;
      intArray4[1] = 2;
      intArray4[2] = 2;
      intArray4[3] = 2;
      intArray0[3] = intArray4;
      int[] intArray5 = new int[1];
      intArray5[0] = 1;
      intArray0[4] = intArray5;
      int[] intArray6 = new int[8];
      intArray6[0] = 1;
      intArray6[1] = 439;
      intArray6[3] = 0;
      intArray6[4] = 0;
      intArray6[5] = 137;
      intArray6[6] = 50;
      intArray6[7] = 0;
      intArray0[5] = intArray6;
      int[] intArray7 = new int[4];
      intArray7[0] = 137;
      intArray7[1] = 0;
      intArray7[2] = 2;
      intArray7[3] = 0;
      intArray0[6] = intArray7;
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.setRanking(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=3.2631547599756296
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(2, 2);
      int[][] intArray0 = new int[8][2];
      int[] intArray1 = new int[9];
      intArray1[0] = 2;
      intArray1[1] = 1;
      intArray1[2] = 1930;
      intArray1[3] = 2;
      intArray1[4] = 2;
      intArray1[5] = 0;
      intArray1[6] = 0;
      intArray1[7] = 0;
      intArray1[8] = 0;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[8];
      intArray2[0] = 0;
      intArray2[1] = 0;
      intArray2[2] = 2;
      intArray2[3] = 2;
      intArray2[4] = 2;
      intArray2[5] = 2;
      intArray2[6] = 2;
      intArray2[7] = 0;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[4];
      intArray3[0] = 2;
      intArray3[1] = 2;
      intArray3[2] = 0;
      intArray3[3] = 0;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[8];
      intArray4[0] = 0;
      intArray4[1] = 1;
      intArray4[2] = 2;
      intArray4[3] = 2;
      intArray4[4] = 2;
      intArray4[5] = 1930;
      intArray4[6] = 0;
      intArray4[7] = (-2737);
      intArray0[3] = intArray4;
      int[] intArray5 = new int[7];
      intArray5[0] = 2;
      intArray5[1] = 2;
      intArray5[2] = 2;
      intArray5[3] = 0;
      intArray5[4] = 1930;
      intArray5[5] = 50;
      intArray5[6] = 2;
      intArray0[4] = intArray5;
      int[] intArray6 = new int[8];
      intArray6[0] = 0;
      intArray6[1] = (-2737);
      intArray6[2] = (-2737);
      intArray6[3] = 1930;
      intArray6[4] = 2;
      intArray6[5] = 657;
      intArray6[6] = 0;
      intArray6[7] = 1930;
      intArray0[5] = intArray6;
      int[] intArray7 = new int[4];
      intArray7[0] = (-2737);
      intArray7[1] = 0;
      intArray7[2] = (-2737);
      intArray7[3] = 582;
      intArray0[6] = intArray7;
      int[] intArray8 = new int[7];
      intArray8[0] = 841;
      intArray8[1] = 1;
      intArray8[2] = 0;
      intArray8[3] = 0;
      intArray8[4] = 2;
      intArray8[5] = 657;
      intArray8[6] = 0;
      intArray0[7] = intArray8;
      // Undeclared exception!
      try { 
        resultMatrixLatex0.setSummary(intArray0, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }
}
