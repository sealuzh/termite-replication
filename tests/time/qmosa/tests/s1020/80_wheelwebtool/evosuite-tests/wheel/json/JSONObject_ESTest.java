/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 04:59:45 GMT 2019
 */

package wheel.json;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.StringWriter;
import java.io.Writer;
import java.nio.CharBuffer;
import java.util.Collection;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.Map;
import java.util.function.BiFunction;
import java.util.function.Function;
import java.util.function.UnaryOperator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import wheel.json.JSONArray;
import wheel.json.JSONObject;
import wheel.json.JSONTokener;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JSONObject_ESTest extends JSONObject_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.6514337777188417
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Short short0 = new Short((short) (-527));
      Short.toUnsignedLong((short) (-527));
      Object object0 = new Object();
      String[] stringArray0 = new String[0];
      JSONObject jSONObject0 = new JSONObject(object0, stringArray0);
      JSONObject jSONObject1 = jSONObject0.putOpt("isdoubleToLongBits", short0);
      JSONObject jSONObject2 = jSONObject1.put("6r?/aqBOpMe", (long) (short) (-527));
      jSONObject0.toString((int) (short) (-527), 47);
      jSONObject2.isNull("isdoubleToLongBits");
      Boolean boolean0 = new Boolean("\"Oj\"'eH%2zMKt");
      JSONObject.quote("6r?/aqBOpMe");
      Byte byte0 = new Byte((byte)43);
      Float float0 = new Float((double) (short) (-1782));
      JSONObject jSONObject3 = jSONObject1.put("", (Object) float0);
      int int0 = jSONObject3.length();
      assertEquals(3, int0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.0127684575109313
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Short short0 = new Short((short)571);
      Short.toUnsignedLong((short)571);
      JSONObject jSONObject0 = new JSONObject();
      JSONObject.numberToString(short0);
      JSONObject.getNames((Object) null);
      jSONObject0.remove("java.lang.Short@0000000002");
      JSONObject.getNames(jSONObject0);
      jSONObject0.length();
      jSONObject0.remove("isvalueOf");
      JSONObject jSONObject1 = jSONObject0.put("k[g<JY!7OYs7>,", false);
      jSONObject0.optInt("Bad value from toJSONString: ", 2680);
      jSONObject1.keys();
      HashMap<Integer, Boolean> hashMap0 = new HashMap<Integer, Boolean>();
      jSONObject0.put("k[g<JY!7OYs7>,", (Map) hashMap0);
      jSONObject1.optLong("h1k=rGbRC4");
      Double double0 = new Double(2680);
      JSONObject jSONObject2 = jSONObject0.accumulate("h1k=rGbRC4", "isvalueOf");
      try { 
        jSONObject2.getLong("k[g<JY!7OYs7>,");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"k[g<JY!7OYs7>,\"] is not a number.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.815684185222237
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Double.max(0.0, 0.0);
      Double.max((-1543.9), 0.0);
      JSONObject jSONObject0 = new JSONObject((Object) "b");
      Boolean boolean0 = new Boolean(" 9]W<zzNJb");
      JSONObject jSONObject1 = jSONObject0.putOpt(" 9]W<zzNJb", boolean0);
      JSONObject jSONObject2 = jSONObject0.put("isparseShort", 0L);
      jSONObject1.toString(10, 7);
      jSONObject0.isNull("in");
      Boolean boolean1 = new Boolean(" 9]W<zzNJb");
      JSONObject.valueToString(jSONObject2);
      Byte byte0 = new Byte((byte) (-66));
      String string0 = ".w|R9R@CkEb__5S";
      JSONTokener jSONTokener0 = new JSONTokener("isparseShort");
      JSONObject jSONObject3 = null;
      try {
        jSONObject3 = new JSONObject(jSONTokener0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must begin with '{' at character 1 of isparseShort
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.8270287590697714
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Double double0 = new Double((-0.5652034380649087));
      Double.max((-0.5652034380649087), (-0.5652034380649087));
      JSONObject jSONObject0 = new JSONObject(double0);
      JSONObject jSONObject1 = jSONObject0.putOpt("", double0);
      LinkedList<Short> linkedList0 = new LinkedList<Short>();
      jSONObject1.put("ONtSPZ3#{V7", (Collection) linkedList0);
      Byte byte0 = new Byte((byte)34);
      Byte.compare((byte) (-25), (byte)123);
      JSONObject jSONObject2 = jSONObject0.put("#`%sejTz0lSLU*`", true);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "#`%sejTz0lSLU*`";
      jSONObject0.optInt("#`%sejTz0lSLU*`", 59);
      jSONObject2.keys();
      HashMap<Integer, Boolean> hashMap0 = new HashMap<Integer, Boolean>();
      JSONObject jSONObject3 = new JSONObject(jSONObject0, stringArray0);
      HashMap<Float, Boolean> hashMap1 = new HashMap<Float, Boolean>();
      jSONObject3.put("#`%sejTz0lSLU*`", (Map) hashMap1);
      JSONObject jSONObject4 = new JSONObject(jSONObject3);
      JSONObject jSONObject5 = jSONObject4.put("#`%sejTz0lSLU*`", (long) (byte)34);
      String[] stringArray1 = new String[2];
      stringArray1[0] = "";
      stringArray1[1] = "";
      JSONObject jSONObject6 = new JSONObject("", stringArray1);
      JSONObject jSONObject7 = new JSONObject(jSONObject6, stringArray1);
      JSONObject.quote("#`%sejTz0lSLU*`");
      LinkedList<JSONObject> linkedList1 = new LinkedList<JSONObject>();
      linkedList1.toArray(stringArray0);
      jSONObject2.put("ONtSPZ3#{V7", (Collection) linkedList0);
      int int0 = jSONObject5.getInt("#`%sejTz0lSLU*`");
      assertEquals(6, jSONObject0.length());
      assertEquals(34, int0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.095526157211886
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Double double0 = new Double((-0.5652034380649087));
      Double.max((-0.5652034380649087), (-0.5652034380649087));
      JSONObject jSONObject0 = new JSONObject(double0);
      JSONObject jSONObject1 = jSONObject0.putOpt("", double0);
      LinkedList<Short> linkedList0 = new LinkedList<Short>();
      jSONObject1.put("ONtSPZ3#{V7", (Collection) linkedList0);
      Byte byte0 = new Byte((byte)34);
      Byte.compare((byte) (-25), (byte)123);
      JSONObject jSONObject2 = jSONObject0.put("#`%sejTz0lSLU*`", true);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "#`%sejTz0lSLU*`";
      jSONObject0.optInt("#`%sejTz0lSLU*`", 59);
      jSONObject2.keys();
      HashMap<Integer, Boolean> hashMap0 = new HashMap<Integer, Boolean>();
      JSONObject jSONObject3 = new JSONObject(jSONObject0, stringArray0);
      HashMap<Float, Boolean> hashMap1 = new HashMap<Float, Boolean>();
      jSONObject3.put("#`%sejTz0lSLU*`", (Map) hashMap1);
      JSONObject jSONObject4 = new JSONObject(jSONObject3);
      jSONObject4.put("#`%sejTz0lSLU*`", (long) (byte)34);
      assertEquals(6, jSONObject0.length());
      
      String[] stringArray1 = new String[2];
      stringArray1[0] = "";
      stringArray1[1] = "";
      JSONObject jSONObject5 = new JSONObject("", stringArray1);
      JSONObject jSONObject6 = new JSONObject(jSONObject5, stringArray1);
      JSONObject.quote("#`%sejTz0lSLU*`");
      jSONObject6.isNull((String) null);
      JSONObject.valueToString("Dm|;.A{#rjMj,}");
      boolean boolean0 = jSONObject5.optBoolean("isvalueOf");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.8513814365569754
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      HashMap<String, Boolean> hashMap0 = new HashMap<String, Boolean>();
      JSONObject jSONObject0 = new JSONObject();
      Byte byte0 = new Byte((byte)0);
      JSONObject.quote("m$lon`@OKE2XBRd");
      Double.sum((byte)0, (-809.0));
      jSONObject0.isNull("!iw[3L^\u0003=V");
      JSONObject jSONObject1 = jSONObject0.append("m$lon`@OKE2XBRd", "get");
      jSONObject1.remove("A JSONArray text must start with '['");
      jSONObject1.length();
      JSONObject jSONObject2 = jSONObject1.put("", (-1480));
      jSONObject2.optLong("Null key.", (long) (-1480));
      jSONObject0.put("\"m$lon`@OKE2XBRd\"", (Object) "A JSONArray text must start with '['");
      jSONObject1.optLong("getnotifyAll", 0L);
      jSONObject2.opt("getnotifyAll");
      JSONObject jSONObject3 = jSONObject0.putOpt("A JSONArray text must start with '['", jSONObject2);
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append(',');
      // Undeclared exception!
      jSONObject3.write(stringWriter1);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.3299797233901924
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      JSONObject jSONObject0 = new JSONObject();
      Boolean.compare(false, false);
      JSONObject.valueToString(boolean0);
      jSONObject0.isNull("java.lang.Boolean@0000000002");
      JSONObject jSONObject1 = new JSONObject();
      jSONObject0.length();
      jSONObject0.put("V#WSf", 3883);
      String string0 = "Su'\"@>UQAapWhkBA";
      try { 
        jSONObject0.getJSONObject("V#WSf");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"V#WSf\"] is not a JSONObject.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.9401618922511923
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Short short0 = new Short((short) (-527));
      Short.toUnsignedLong((short) (-527));
      Short.toUnsignedInt((short) (-527));
      String[] stringArray0 = new String[6];
      stringArray0[0] = "Hg1";
      stringArray0[1] = "/rK0`eLz";
      stringArray0[2] = "] is not a JSONObject.";
      stringArray0[3] = "}>yv%guF/";
      stringArray0[4] = "getlogicalAnd";
      stringArray0[5] = "5*.?plF_Y6]IDxtwX^";
      JSONObject jSONObject0 = new JSONObject(short0, stringArray0);
      jSONObject0.put("] is not a JSONObject.", 65009);
      Byte byte0 = new Byte((byte)0);
      Short.toUnsignedInt((byte)0);
      Object object0 = new Object();
      JSONObject jSONObject1 = new JSONObject((Object) "5*.?plF_Y6]IDxtwX^");
      String string0 = "getkeySet";
      try { 
        jSONObject0.put((String) null, 0L);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.7942456596617538
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Short short0 = new Short((short) (-527));
      Short.toUnsignedLong((short) (-527));
      Object object0 = new Object();
      String[] stringArray0 = new String[0];
      JSONObject jSONObject0 = new JSONObject(object0, stringArray0);
      JSONObject jSONObject1 = jSONObject0.putOpt("isdoubleToLongBits", short0);
      JSONObject jSONObject2 = jSONObject1.put("6r?/aqBOpMe", (long) (short) (-527));
      jSONObject0.toString((int) (short) (-527), 47);
      jSONObject2.isNull("isdoubleToLongBits");
      Boolean boolean0 = new Boolean("\"Oj\"'eH%2zMKt");
      JSONObject.valueToString("isdoubleToLongBits");
      Byte byte0 = new Byte((byte)43);
      Float float0 = new Float((double) (short) (-1782));
      JSONObject jSONObject3 = jSONObject1.put("", (Object) float0);
      int int0 = jSONObject3.length();
      assertEquals(3, int0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.746780514709521
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      JSONObject.doubleToString(1928.9251135934321);
      Byte byte0 = new Byte((byte)48);
      JSONObject jSONObject0 = new JSONObject((Object) "isparseBoolean");
      JSONObject jSONObject1 = jSONObject0.putOpt("isparseBoolean", byte0);
      Double.sum((-809.0), 0.0);
      jSONObject1.isNull("' and instead saw '");
      jSONObject0.append("Expected a ':' after a key", (Object) null);
      jSONObject0.remove("' and instead saw '");
      jSONObject1.length();
      JSONObject jSONObject2 = jSONObject1.put("isparseBoolean", (-660));
      jSONObject1.optLong("' and instead saw '", (-2834L));
      jSONObject2.optLong((String) null, (long) 5);
      jSONObject2.opt((String) null);
      try { 
        jSONObject1.getJSONArray("kAi4X+oROC|rX;mV");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"kAi4X+oROC|rX;mV\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.52192800698243
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      HashMap<String, Boolean> hashMap0 = new HashMap<String, Boolean>();
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = jSONObject0.put("m$lon`@OKE2XBRd", 2128);
      Byte byte0 = new Byte((byte)0);
      jSONObject1.toString((int) (byte)0);
      Short.toUnsignedInt((byte)0);
      Object object0 = new Object();
      JSONObject jSONObject2 = new JSONObject(object0);
      JSONTokener jSONTokener0 = new JSONTokener("0@Hm");
      JSONObject jSONObject3 = new JSONObject();
      Long long0 = new Long(2128);
      Object object1 = JSONObject.NULL;
      JSONObject.valueToString(object1, 160, 10);
      JSONArray jSONArray0 = null;
      try {
        jSONArray0 = new JSONArray(byte0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONArray initial value should be a string or collection or array.
         //
         verifyException("wheel.json.JSONArray", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.124446118206127
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Double double0 = new Double((-0.5652034380649087));
      Double.max((-0.5652034380649087), (-0.5652034380649087));
      JSONObject jSONObject0 = new JSONObject(double0);
      String string0 = "";
      JSONObject jSONObject1 = jSONObject0.putOpt("", double0);
      Byte byte0 = new Byte((byte)34);
      Byte byte1 = new Byte((byte)90);
      Byte.toUnsignedLong((byte)34);
      Byte.compare((byte)90, (byte)123);
      Byte.compare((byte) (-95), (byte) (-25));
      Byte.toUnsignedInt((byte)123);
      Integer.sum((byte)123, (byte) (-58));
      JSONTokener jSONTokener0 = new JSONTokener("");
      Byte.toUnsignedLong((byte)34);
      JSONObject jSONObject2 = new JSONObject();
      try { 
        jSONObject1.getInt("isintValue");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"isintValue\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.3814371849350118
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      HashMap<Boolean, Integer> hashMap0 = new HashMap<Boolean, Integer>();
      Integer integer0 = new Integer((-732));
      Short.toUnsignedInt((short) (-1979));
      Integer integer1 = new Integer((-965));
      JSONObject jSONObject1 = new JSONObject(integer1);
      jSONObject0.optJSONArray("[]");
      jSONObject1.optInt("'");
      JSONObject.doubleToString(Double.NaN);
      String string0 = ".V:3SU (Un.";
      try { 
        jSONObject1.getString("[]");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"[]\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.580402617098127
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Double double0 = new Double((-1.0));
      Double.max((-1.0), (-1.0));
      JSONObject jSONObject0 = new JSONObject(double0);
      JSONObject jSONObject1 = jSONObject0.putOpt("", double0);
      Double.sum(2006.6138068361, 2006.6138068361);
      jSONObject1.isNull("get");
      JSONObject jSONObject2 = jSONObject0.append("get", "");
      jSONObject0.remove("get");
      jSONObject2.length();
      JSONObject jSONObject3 = jSONObject2.put("get", 4);
      jSONObject3.optLong("Null key.", 0L);
      jSONObject0.optLong("H1'ja[M(q", (long) 4);
      jSONObject2.opt("get");
      assertEquals(5, jSONObject2.length());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.0771990323406926
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      JSONObject jSONObject0 = new JSONObject(boolean0);
      Boolean.compare(false, false);
      jSONObject0.toString();
      jSONObject0.isNull("{\"java.lang.String@0000000002\":\"java.lang.Class@0000000003\"}");
      JSONObject jSONObject1 = jSONObject0.append("{\"java.lang.String@0000000002\":\"java.lang.Class@0000000003\"}", boolean0);
      JSONTokener jSONTokener0 = new JSONTokener("{\"java.lang.String@0000000002\":\"java.lang.Class@0000000003\"}");
      JSONObject jSONObject2 = new JSONObject(jSONTokener0);
      JSONObject jSONObject3 = jSONObject2.put("{\"java.lang.String@0000000002\":\"java.lang.Class@0000000003\"}", false);
      jSONObject1.remove("xfTOpK=ipWm+Sf$rpX");
      JSONObject jSONObject4 = jSONObject2.put("iscompareTo", true);
      jSONObject2.optInt("Bad value from toJSONString: ", 2680);
      jSONObject0.keys();
      HashMap<Integer, Boolean> hashMap0 = new HashMap<Integer, Boolean>();
      jSONObject4.put(":y X0Vgt:.DS6Gz&", (Map) hashMap0);
      jSONObject0.optLong(":y X0Vgt:.DS6Gz&");
      Double double0 = new Double(0.0);
      JSONObject jSONObject5 = jSONObject3.accumulate("iscompareTo", double0);
      try { 
        jSONObject5.getLong("getmin");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"getmin\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.2880457195839967
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      HashMap<Object, Boolean> hashMap0 = new HashMap<Object, Boolean>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      Boolean.getBoolean("Ctb|ksf6P");
      HashMap<Object, String> hashMap1 = new HashMap<Object, String>();
      JSONObject jSONObject1 = jSONObject0.put(")Ws", (Map) hashMap1);
      boolean boolean0 = new Boolean("Ctb|ksf6P");
      jSONObject0.optString(")Ws");
      JSONObject.valueToString(jSONObject0);
      hashMap1.put(jSONObject0, "Ctb|ksf6P");
      Byte byte0 = new Byte((byte)75);
      Byte.toUnsignedInt((byte)75);
      jSONObject1.put("wheel.json.JSONObject@0000000002", (Object) byte0);
      assertEquals(2, jSONObject1.length());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.799632467438123
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Double double0 = new Double((-1.0));
      Double.max((-1.0), (-1.0));
      JSONObject jSONObject0 = new JSONObject(double0);
      JSONObject jSONObject1 = jSONObject0.putOpt("", double0);
      jSONObject1.put("", 0L);
      jSONObject1.toString(82, 82);
      jSONObject1.isNull("{\n                                                                                                                                                                    \"java.lang.String@0000000008\": java.lang.Long@000000001,\n                                                                                                                                                                    \"java.lang.String@0000000002\": java.lang.Boolean@0000000003,\n                                                                                                                                                                    \"java.lang.String@0000000004\": java.lang.Boolean@0000000005,\n                                                                                                                                                                    \"java.lang.String@0000000006\": \"java.lang.Class@0000000007\"\n                                                                                  }");
      Boolean boolean0 = new Boolean("[j[0 ~HI\"EZwt}");
      JSONObject.valueToString(boolean0);
      Byte byte0 = new Byte((byte) (-66));
      jSONObject1.put("", (Object) double0);
      assertEquals(4, jSONObject0.length());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.668116727639184
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      HashMap<String, Boolean> hashMap0 = new HashMap<String, Boolean>();
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = jSONObject0.put("m$lon`@OKE2XBRd", 2128);
      Byte byte0 = new Byte((byte)0);
      jSONObject1.optInt("6r?/aqBOpMe", (int) (byte)0);
      HashMap<Long, String> hashMap1 = new HashMap<Long, String>();
      HashMap<Long, String> hashMap2 = new HashMap<Long, String>();
      Function<Object, String> function0 = (Function<Object, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(function0).apply(any());
      hashMap2.computeIfAbsent((Long) null, function0);
      JSONObject jSONObject2 = new JSONObject((Map) hashMap1);
      jSONObject2.put("6r?/aqBOpMe", (Map) hashMap0);
      jSONObject2.toString(2, (int) (byte)0);
      JSONObject jSONObject3 = new JSONObject();
      jSONObject1.optBoolean("{\"java.lang.String@0000000007\": {}}");
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      assertEquals(0, linkedList0.size());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.663577192350398
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Short short0 = new Short((short) (-527));
      Short.toUnsignedLong((short) (-527));
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.optInt("6r?/aqBOpMe", (int) (short) (-1782));
      HashMap<Long, String> hashMap0 = new HashMap<Long, String>();
      HashMap<Long, String> hashMap1 = new HashMap<Long, String>();
      Long long0 = Long.valueOf((-1070L));
      UnaryOperator<String> unaryOperator0 = UnaryOperator.identity();
      Function<Object, String> function0 = (Function<Object, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(function0).apply(any());
      Function<Long, String> function1 = unaryOperator0.compose((Function<? super Long, ? extends String>) function0);
      hashMap0.computeIfAbsent(long0, function1);
      JSONObject jSONObject1 = new JSONObject((Map) hashMap1);
      jSONObject0.put("6r?/aqBOpMe", (Map) hashMap1);
      JSONObject jSONObject2 = new JSONObject();
      jSONObject2.toString((int) (short) (-1782), 95);
      JSONObject jSONObject3 = new JSONObject();
      Object object0 = new Object();
      JSONObject jSONObject4 = new JSONObject(object0);
      jSONObject4.optBoolean("6r?/aqBOpMe");
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      jSONObject0.toJSONArray(jSONArray0);
      JSONObject jSONObject5 = jSONObject0.accumulate("6r?/aqBOpMe", unaryOperator0);
      assertFalse(jSONObject5.equals((Object)jSONObject3));
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.7106780824052636
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Short short0 = new Short((short) (-527));
      Short.toUnsignedLong((short) (-527));
      Short.toUnsignedInt((short) (-1782));
      JSONObject jSONObject0 = new JSONObject(short0);
      JSONObject jSONObject1 = jSONObject0.put("", 65009L);
      JSONObject.getNames(jSONObject0);
      Byte byte0 = new Byte((byte)69);
      JSONObject jSONObject2 = jSONObject0.append("9@[,qqosh1A@", byte0);
      jSONObject2.optInt("");
      jSONObject1.append("9@[,qqosh1A@", jSONObject0);
      JSONObject.getNames(jSONObject1);
      assertEquals(3, jSONObject1.length());
      assertEquals(3, jSONObject0.length());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.217074320606876
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Double double0 = new Double((-1.0));
      Double.max((-1.0), (-1.0));
      JSONObject jSONObject0 = new JSONObject(double0);
      JSONObject jSONObject1 = new JSONObject();
      jSONObject0.optInt("m$=#VGGzbyn|", 1706);
      HashMap<Long, String> hashMap0 = new HashMap<Long, String>();
      HashMap<Long, String> hashMap1 = new HashMap<Long, String>();
      Long.valueOf(0L);
      UnaryOperator<String> unaryOperator0 = UnaryOperator.identity();
      Function<Object, String> function0 = (Function<Object, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(function0).apply(any());
      Function<Long, String> function1 = unaryOperator0.compose((Function<? super Long, ? extends String>) function0);
      Long long0 = new Long(1706);
      hashMap1.computeIfAbsent(long0, function1);
      JSONObject jSONObject2 = new JSONObject((Map) hashMap1);
      try { 
        jSONObject1.put((String) null, (Map) hashMap1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.0670039424224256
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.put("@K7q!pv'rk", (-1406.1898247));
      jSONObject0.put("true", 275L);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      jSONObject0.put("):G-qu(oA'Tu#xm`L`(", (Collection) linkedList0);
      StringWriter stringWriter0 = new StringWriter(61);
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      JSONObject.valueToString(jSONArray0);
      // Undeclared exception!
      try { 
        stringWriter0.append((CharSequence) "):G-qu(oA'Tu#xm`L`(", (-215), 61);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.0899415007470776
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Object object0 = new Object();
      JSONObject jSONObject0 = new JSONObject(object0);
      String string0 = "";
      JSONObject.quote("");
      try { 
        jSONObject0.getJSONArray("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.497704681720643
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Integer integer0 = new Integer(0);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "z_9:O+\"";
      JSONObject jSONObject0 = new JSONObject();
      JSONObject.quote((String) null);
      jSONObject0.putOpt("z_9:O+\"", "z_9:O+\"");
      double double0 = Double.sum(2006.6138068361, (-809.0));
      JSONObject jSONObject1 = new JSONObject();
      JSONObject jSONObject2 = jSONObject1.put("z_9:O+\"", (Collection) null);
      jSONObject2.put("", 2856.861);
      jSONObject0.optBoolean("iscompare", false);
      JSONObject.doubleToString(2006.6138068361);
      JSONObject.getNames((Object) "");
      Double double1 = new Double(3691.03649609519);
      JSONObject.testValidity(double1);
      assertNotEquals((double)double1, (double)double0, 0.01);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.9840624260346147
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      JSONObject.quote("b");
      String[] stringArray0 = new String[4];
      stringArray0[0] = "isequals";
      stringArray0[1] = "\"b\"";
      stringArray0[2] = "\"b\"";
      stringArray0[3] = "\"b\"";
      JSONObject jSONObject0 = new JSONObject("\"b\"", stringArray0);
      JSONObject jSONObject1 = new JSONObject(jSONObject0, stringArray0);
      jSONObject1.optInt("Q<k)8O5FCn", 731);
      HashMap<Long, String> hashMap0 = new HashMap<Long, String>();
      Long long0 = new Long(731);
      try { 
        jSONObject0.getJSONObject("/rLT{+D4 5}");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"/rLT{+D4 5}\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.9018956404837546
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Double double0 = new Double((-1.0));
      Double.max((-1.0), (-1.0));
      JSONObject jSONObject0 = new JSONObject(double0);
      Long long0 = new Long(0L);
      String[] stringArray0 = new String[2];
      stringArray0[1] = "()M?,2>Ue(e/6eS";
      JSONObject jSONObject1 = new JSONObject(long0, stringArray0);
      double double1 = jSONObject0.optDouble(stringArray0[0], 1.0);
      assertEquals(3, jSONObject0.length());
      assertEquals(1.0, double1, 0.01);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.2567891722220974
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Short short0 = new Short((short) (-527));
      Short.toUnsignedLong((short) (-527));
      String string0 = "6r?/aqBOpMe";
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.optInt("6r?/aqBOpMe", (int) (short) (-1782));
      HashMap<Long, String> hashMap0 = new HashMap<Long, String>();
      HashMap<Long, String> hashMap1 = new HashMap<Long, String>();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "6r?/aqBOpMe";
      stringArray0[1] = "6r?/aqBOpMe";
      JSONObject jSONObject1 = new JSONObject((Object) jSONObject0, stringArray0);
      jSONObject1.optJSONArray("S~2D?9twe<Q|");
      String string1 = "";
      jSONObject1.optInt("6r?/aqBOpMe");
      JSONObject.doubleToString(0);
      jSONObject0.has("6r?/aqBOpMe");
      jSONObject0.optDouble("0", 1574.91821);
      try { 
        jSONObject1.getDouble("6r?/aqBOpMe");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"6r?/aqBOpMe\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.988705778771733
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      Short.toUnsignedLong((short)97);
      Short short0 = new Short((short) (-1782));
      Boolean boolean0 = Boolean.valueOf(false);
      JSONObject jSONObject1 = new JSONObject(boolean0);
      JSONObject jSONObject2 = jSONObject0.put(":Bj~ts:jD \"Q:A9o/", (long) short0);
      jSONObject1.optDouble("$V}W55\"Y'\":5");
      JSONObject jSONObject3 = new JSONObject();
      JSONObject jSONObject4 = jSONObject3.putOpt("5m6*H^R9*m", jSONObject1);
      JSONObject.getNames(jSONObject2);
      Byte byte0 = new Byte((byte)69);
      JSONObject jSONObject5 = new JSONObject();
      jSONObject3.accumulate(" )(MD$rF0^6U$tkiP,", ":Bj~ts:jD \"Q:A9o/");
      jSONObject2.optLong("n9UG_");
      jSONObject3.toString(118);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      try { 
        jSONObject4.put((String) null, (Collection) linkedList0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.27974010720644
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Double double0 = new Double((-1.0));
      Double.max((-1.0), (-1.0));
      JSONObject jSONObject0 = new JSONObject();
      Long.divideUnsigned(323L, (-1L));
      String string0 = jSONObject0.toString(201, (-2518));
      assertEquals("{}", string0);
      
      boolean boolean0 = jSONObject0.isNull("Expected a ',' or '}'");
      Object object0 = JSONObject.NULL;
      String string1 = JSONObject.valueToString(object0);
      assertEquals("null", string1);
      
      String[] stringArray0 = new String[10];
      stringArray0[0] = "{}";
      stringArray0[1] = "Expected a ',' or '}'";
      stringArray0[2] = "{}";
      stringArray0[3] = "";
      stringArray0[4] = "Missing value";
      stringArray0[5] = "{}";
      stringArray0[6] = "{}";
      JSONObject jSONObject1 = new JSONObject(double0, stringArray0);
      jSONObject1.optBoolean("");
      boolean boolean1 = jSONObject1.optBoolean("{}");
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.6769415858632386
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      JSONObject jSONObject0 = new JSONObject(boolean0);
      jSONObject0.toString();
      jSONObject0.isNull("K>Oc~412tW3x^\"W%+BBn");
      JSONObject jSONObject1 = jSONObject0.append("istoQString", "K>Oc~412tW3x^\"W%+BBn");
      jSONObject1.length();
      jSONObject1.optLong("K>Oc~412tW3x^\"W%+BBn", 1L);
      Double double0 = new Double(Double.NaN);
      try { 
        JSONObject.numberToString(double0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSON does not allow non-finite numbers.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.4937776452442324
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Double double0 = new Double((-1.0));
      Double.max((-1.0), (-1.0));
      JSONObject jSONObject0 = new JSONObject(double0);
      JSONObject jSONObject1 = jSONObject0.putOpt("", double0);
      Boolean boolean0 = Boolean.valueOf(false);
      JSONObject jSONObject2 = jSONObject0.append("is", boolean0);
      jSONObject0.remove("getparseShort");
      jSONObject0.length();
      jSONObject1.put("/.E9k:_", 5);
      jSONObject2.optLong("", (-1L));
      jSONObject1.optLong("k>", 0L);
      jSONObject1.opt("");
      assertEquals(6, jSONObject1.length());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.6601439551844055
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Double double0 = new Double((-1.0));
      Double.max((-1.0), (-1.0));
      JSONObject jSONObject0 = new JSONObject(double0);
      JSONObject jSONObject1 = jSONObject0.putOpt("", double0);
      JSONObject jSONObject2 = jSONObject1.put("", 0L);
      jSONObject1.toString(82, 82);
      String string0 = null;
      try { 
        jSONObject2.put((String) null, true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.5166180782770726
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Double double0 = new Double((-0.5652034380649087));
      Double.max((-0.5652034380649087), (-0.5652034380649087));
      JSONObject jSONObject0 = new JSONObject(double0);
      JSONObject jSONObject1 = jSONObject0.putOpt("", double0);
      String string0 = "ONtSPZ3#{V7";
      LinkedList<Short> linkedList0 = new LinkedList<Short>();
      JSONObject jSONObject2 = jSONObject1.put("ONtSPZ3#{V7", (Collection) linkedList0);
      Byte byte0 = new Byte((byte)34);
      Byte.compare((byte) (-25), (byte)123);
      HashMap<Long, String> hashMap0 = new HashMap<Long, String>();
      Long long0 = new Long((byte)34);
      Long long1 = new Long((byte)34);
      Double double1 = new Double(786.172839);
      JSONObject.valueToString(double1, 66, (byte)34);
      UnaryOperator.identity();
      jSONObject2.put("isshortValue", 50);
      try { 
        jSONObject0.getJSONObject("issplit");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"issplit\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.073275891661276
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      HashMap<String, Boolean> hashMap0 = new HashMap<String, Boolean>();
      JSONObject jSONObject0 = new JSONObject();
      Float float0 = new Float((float) 2128);
      JSONObject jSONObject1 = new JSONObject(float0);
      jSONObject0.put("y$y8goc`", 2161L);
      int int0 = 8448;
      // Undeclared exception!
      jSONObject1.toString(8448, 2128);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Short short0 = new Short((short) (-527));
      Short.toUnsignedLong((short) (-527));
      String string0 = "getlogicalAnd";
      Integer integer0 = new Integer((short) (-527));
      Integer.getInteger("getlogicalAnd", integer0);
      HashMap<Boolean, Integer> hashMap0 = new HashMap<Boolean, Integer>();
      Boolean boolean0 = Boolean.FALSE;
      Integer integer1 = new Integer(2113);
      hashMap0.put(boolean0, integer1);
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      // Undeclared exception!
      try { 
        JSONObject.getNames(jSONObject0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Boolean cannot be cast to java.lang.String
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.923708706617926
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      HashMap<Boolean, Integer> hashMap0 = new HashMap<Boolean, Integer>();
      Integer integer0 = new Integer((-732));
      Short.toUnsignedInt((short) (-1979));
      Integer integer1 = new Integer((-965));
      JSONObject jSONObject1 = new JSONObject(integer1);
      JSONObject jSONObject2 = jSONObject0.put("Expected a ',' or '}'", (long) 63557);
      jSONObject0.putOpt("Expected a ',' or '}'", jSONObject2);
      JSONObject.getNames(jSONObject2);
      Byte byte0 = new Byte((byte) (-39));
      jSONObject0.append("9OX`#c>LvUUb.1", (Object) null);
      jSONObject2.optLong("9OX`#c>LvUUb.1");
      // Undeclared exception!
      jSONObject0.toString((int) (byte)69);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.1719330103601107
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      HashMap<Boolean, Integer> hashMap0 = new HashMap<Boolean, Integer>();
      String string0 = "";
      int int0 = (-732);
      Integer integer0 = new Integer((-732));
      Integer integer1 = Integer.getInteger("", integer0);
      hashMap0.put((Boolean) null, integer1);
      JSONObject jSONObject1 = new JSONObject((Map) hashMap0);
      jSONObject0.put("", false);
      jSONObject0.put("", true);
      JSONTokener jSONTokener0 = new JSONTokener((String) null);
      JSONObject jSONObject2 = null;
      try {
        jSONObject2 = new JSONObject((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      String string0 = JSONObject.valueToString((Object) null);
      assertEquals("null", string0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.3877863052222565
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Double double0 = new Double((-1.0));
      JSONObject jSONObject0 = new JSONObject(double0);
      jSONObject0.toJSONArray((JSONArray) null);
      jSONObject0.toString(28, (-3218));
      jSONObject0.put("mi", (-3218));
      String string0 = "Kx5Z+@WTjevX'";
      HashMap<Long, String> hashMap0 = new HashMap<Long, String>();
      Long long0 = new Long((-4548L));
      hashMap0.put(long0, "_WF:ElKj>u((<S%ZqH");
      UnaryOperator<String> unaryOperator0 = UnaryOperator.identity();
      // Undeclared exception!
      try { 
        unaryOperator0.compose((Function<? super Long, ? extends String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.2135762348012538
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Short short0 = new Short((short) (-527));
      Short.toUnsignedLong((short) (-527));
      Short.toUnsignedInt((short) (-1782));
      JSONObject jSONObject0 = new JSONObject(short0);
      JSONObject jSONObject1 = jSONObject0.put("", 65009L);
      Boolean.getBoolean(":xxR<");
      jSONObject1.optString("\b");
      JSONTokener jSONTokener0 = new JSONTokener(":xxR<");
      JSONObject jSONObject2 = new JSONObject();
      Long long0 = new Long((-118L));
      JSONObject.valueToString((Object) null, (-735), 63754);
      try { 
        jSONObject1.get("min");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"min\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.860379976657041
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Double double0 = new Double((-1.0));
      Double.max((-1.0), (-1.0));
      JSONObject jSONObject0 = new JSONObject(double0);
      JSONObject jSONObject1 = jSONObject0.putOpt("", double0);
      jSONObject0.remove("o\"7Y?1C>n^*wi.");
      JSONObject jSONObject2 = jSONObject1.put("3xW(\"aX3] U:\"A", true);
      jSONObject1.optInt("[", 1839);
      JSONTokener jSONTokener0 = new JSONTokener("");
      JSONObject jSONObject3 = new JSONObject();
      Long long0 = new Long(1834L);
      JSONObject.valueToString(jSONObject1, (-3131), 2049);
      jSONObject0.get("");
      jSONObject2.optString("3xW(\"aX3] U:\"A");
      assertEquals(5, jSONObject1.length());
      assertEquals(5, jSONObject0.length());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.022038509604628
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Short short0 = new Short((short) (-527));
      Short.toUnsignedLong((short) (-527));
      Short.toUnsignedInt((short) (-1782));
      JSONObject jSONObject0 = new JSONObject(short0);
      JSONObject jSONObject1 = jSONObject0.put("", 65009L);
      jSONObject1.toString((int) (short) (-1782), (int) (short) (-1782));
      jSONObject0.isNull("[j[0 ~HI\"EZwt}");
      JSONObject.valueToString("");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "";
      stringArray0[1] = "{\n\"java.lang.String@0000000004\": java.lang.Long@0000000005,\n\"java.lang.String@0000000002\": \"java.lang.Class@0000000003\"\n}";
      stringArray0[2] = "kkYAcPt7hb|Mb~&";
      stringArray0[3] = "[j[0 ~HI\"EZwt}";
      stringArray0[4] = "\"java.lang.String@0000000004\"";
      stringArray0[5] = "is";
      JSONObject jSONObject2 = new JSONObject(jSONObject0, stringArray0);
      JSONObject jSONObject3 = jSONObject2.append("false", "");
      LinkedList<Float> linkedList0 = new LinkedList<Float>();
      jSONObject3.put("false", (Collection) linkedList0);
      Integer integer0 = new Integer(2264);
      String string0 = " of ";
      JSONObject jSONObject4 = new JSONObject(short0);
      JSONObject jSONObject5 = new JSONObject(jSONObject4, stringArray0);
      try { 
        jSONObject5.getDouble("false");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"false\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.451583197525698
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      HashMap<String, Boolean> hashMap0 = new HashMap<String, Boolean>();
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = jSONObject0.put("m$lon`@OKE2XBRd", 2128);
      jSONObject1.toString(1353);
      Byte byte0 = new Byte((byte)0);
      Short.toUnsignedInt((byte)0);
      Object object0 = new Object();
      JSONObject jSONObject2 = new JSONObject(object0);
      String string0 = "getkeySet";
      Integer integer0 = new Integer(2128);
      JSONArray jSONArray0 = new JSONArray();
      JSONArray jSONArray1 = null;
      try {
        jSONArray1 = new JSONArray(",");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONArray text must start with '[' at character 1 of ,
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.5952629603288853
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      JSONObject jSONObject0 = new JSONObject(boolean0);
      jSONObject0.length();
      JSONObject jSONObject1 = null;
      try {
        jSONObject1 = new JSONObject((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.6888985808962285
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      HashMap<Boolean, Integer> hashMap0 = new HashMap<Boolean, Integer>();
      Integer integer0 = new Integer((-732));
      Short.toUnsignedInt((short) (-1979));
      Integer integer1 = new Integer((-965));
      JSONObject jSONObject1 = new JSONObject(integer1);
      JSONObject jSONObject2 = jSONObject0.put("Expected a ',' or '}'", (long) 63557);
      jSONObject0.putOpt("Expected a ',' or '}'", jSONObject2);
      JSONObject.getNames(jSONObject2);
      Byte byte0 = new Byte((byte) (-39));
      jSONObject0.append("9OX`#c>LvUUb.1", (Object) null);
      jSONObject2.optLong("9OX`#c>LvUUb.1");
      JSONObject jSONObject3 = jSONObject2.append("VL(Ood", "VL(Ood");
      jSONObject3.keys();
      assertEquals(3, jSONObject2.length());
      assertEquals(3, jSONObject0.length());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.108401378854188
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Byte byte0 = new Byte((byte)10);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "Z8v;)fn";
      stringArray0[1] = "\r";
      stringArray0[2] = "";
      String[] stringArray1 = new String[4];
      stringArray1[0] = "sg_I|'>*~4";
      stringArray1[1] = "Z8v;)fn";
      stringArray1[2] = "";
      stringArray1[3] = "Z8v;)fn";
      JSONObject jSONObject0 = new JSONObject("Z8v;)fn", stringArray1);
      jSONObject0.append("JSONObject[", (Object) null);
      assertEquals(1, jSONObject0.length());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.5918633433820255
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Double double0 = new Double((-1.0));
      Double.max((-1.0), (-1.0));
      JSONObject jSONObject0 = new JSONObject(double0);
      jSONObject0.putOpt("", double0);
      JSONObject.numberToString(double0);
      JSONObject.getNames((Object) "");
      jSONObject0.remove("");
      Boolean boolean0 = Boolean.TRUE;
      JSONObject jSONObject1 = new JSONObject(boolean0);
      JSONObject.getNames(jSONObject1);
      jSONObject1.length();
      try { 
        jSONObject0.put((String) null, 1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.7945152921012495
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Short short0 = new Short((short) (-527));
      Short.toUnsignedLong((short) (-527));
      Short.toUnsignedInt((short) (-527));
      JSONObject jSONObject0 = new JSONObject(short0);
      JSONObject jSONObject1 = jSONObject0.put("", 65009L);
      jSONObject1.toString((int) (short) (-527), (int) (short) (-527));
      jSONObject0.isNull("[j[0 ~HI\"EZwt}");
      JSONObject jSONObject2 = new JSONObject(jSONObject0);
      JSONObject jSONObject3 = jSONObject2.append("is", "{\n\"java.lang.String@0000000004\": java.lang.Long@0000000005,\n\"java.lang.String@0000000002\": \"java.lang.Class@0000000003\"\n}");
      Integer integer0 = new Integer((short) (-527));
      JSONObject jSONObject4 = jSONObject1.putOpt((String) null, "is");
      jSONObject4.optJSONObject("");
      jSONObject1.append("is", "[j[0 ~HI\"EZwt}");
      jSONObject3.optDouble("{\n\"java.lang.String@0000000004\": java.lang.Long@0000000005,\n\"java.lang.String@0000000002\": \"java.lang.Class@0000000003\"\n}", 0.0);
      assertEquals(3, jSONObject0.length());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.7068564921190186
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Short short0 = new Short((short)571);
      Short.toUnsignedLong((short)571);
      JSONObject jSONObject0 = new JSONObject();
      JSONObject.numberToString(short0);
      JSONObject.getNames((Object) null);
      Object object0 = JSONObject.NULL;
      JSONObject.getNames(jSONObject0);
      jSONObject0.length();
      JSONObject jSONObject1 = jSONObject0.put("V#WSf", (-110));
      try { 
        jSONObject1.getJSONObject((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.138994517512322
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Object object0 = new Object();
      JSONObject jSONObject0 = new JSONObject(object0);
      jSONObject0.put("RN?`X-N", false);
      String string0 = "!gV!O-LW2<=Xbk";
      JSONObject jSONObject1 = jSONObject0.put("!gV!O-LW2<=Xbk", true);
      jSONObject1.put("", 39);
      try { 
        jSONObject0.getJSONObject("u'\"@>UQAapWhkBA");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"u'\\\"@>UQAapWhkBA\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.3278366977307745
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Double double0 = new Double((-1.0));
      Double.max((-1.0), (-1.0));
      JSONObject jSONObject0 = new JSONObject(double0);
      String string0 = "";
      JSONObject jSONObject1 = jSONObject0.putOpt("", double0);
      Double.sum(2006.6138068361, (-809.0));
      jSONObject1.isNull("get");
      jSONObject0.append("get", "");
      jSONObject0.remove("get");
      JSONObject jSONObject2 = null;
      try {
        jSONObject2 = new JSONObject(jSONObject0, (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.448437455613918
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      HashMap<Object, Boolean> hashMap0 = new HashMap<Object, Boolean>();
      Short short0 = new Short((short)19);
      Boolean boolean0 = Boolean.FALSE;
      hashMap0.put(short0, boolean0);
      Double double0 = new Double(258.78363923664955);
      Boolean boolean1 = Boolean.valueOf((String) null);
      Boolean.logicalAnd(true, false);
      hashMap0.put(double0, boolean1);
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      Boolean.getBoolean("Ctb|ksf6P");
      HashMap<Object, String> hashMap1 = new HashMap<Object, String>();
      jSONObject0.put(")Ws", (Map) hashMap1);
      Boolean.getBoolean("Ctb|ksf6P");
      jSONObject0.optString(")Ws");
      LinkedList<JSONObject> linkedList0 = new LinkedList<JSONObject>();
      jSONObject0.optJSONObject("6e01;!Z`\"']IGcm9");
      assertEquals(3, jSONObject0.length());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.291174362569147
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Short short0 = new Short((short) (-527));
      Short.toUnsignedLong((short) (-527));
      Short.toUnsignedInt((short) (-1782));
      JSONObject jSONObject0 = new JSONObject(short0);
      jSONObject0.put("", 65009L);
      JSONObject jSONObject1 = jSONObject0.put("true", true);
      int int0 = 39;
      jSONObject1.put("true", 39);
      jSONObject1.getString("");
      try { 
        jSONObject1.getJSONObject("true");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"true\"] is not a JSONObject.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.7261723355364587
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Short short0 = new Short((short) (-527));
      Short.toUnsignedLong((short) (-527));
      Short.toUnsignedInt((short) (-527));
      Short short1 = new Short((short) (-527));
      JSONObject jSONObject0 = new JSONObject(short1);
      JSONObject jSONObject1 = jSONObject0.put(",:]}/\"[{;=#", 161L);
      jSONObject1.toString((-23), 958);
      jSONObject1.isNull(",:]}/\"[{;=#");
      Object object0 = new Object();
      JSONObject jSONObject2 = new JSONObject(object0);
      try { 
        jSONObject0.append(",:]}/\"[{;=#", (Object) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[,:]}/\"[{;=#] is not a JSONArray.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject((JSONTokener) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.863952790576757
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Double double0 = new Double((-0.5652034380649087));
      Double.max((-0.5652034380649087), (-0.5652034380649087));
      JSONObject jSONObject0 = new JSONObject(double0);
      jSONObject0.putOpt("", double0);
      Byte byte0 = new Byte((byte)34);
      Byte.compare((byte) (-25), (byte)123);
      JSONObject jSONObject1 = jSONObject0.put("#`%sejTz0lSLU*`", true);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "#`%sejTz0lSLU*`";
      jSONObject0.optInt("#`%sejTz0lSLU*`", 59);
      jSONObject1.keys();
      HashMap<Integer, Boolean> hashMap0 = new HashMap<Integer, Boolean>();
      JSONObject jSONObject2 = new JSONObject(jSONObject0, stringArray0);
      HashMap<Float, Boolean> hashMap1 = new HashMap<Float, Boolean>();
      JSONObject jSONObject3 = jSONObject2.put("#`%sejTz0lSLU*`", (Map) hashMap1);
      Integer integer0 = new Integer((-1328));
      jSONObject3.putOpt("g/o#2q':~+883raa8", integer0);
      jSONObject3.optLong("max");
      JSONObject jSONObject4 = new JSONObject((Object) "isisNaN");
      jSONObject4.accumulate("getmin", jSONObject2);
      try { 
        jSONObject2.getLong("getsum");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"getsum\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.843007812423571
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Double double0 = new Double((-1.0));
      Double.max((-1.0), (-1.0));
      JSONObject jSONObject0 = new JSONObject(double0);
      JSONObject jSONObject1 = jSONObject0.putOpt("", double0);
      Double.sum(2006.6138068361, (-809.0));
      jSONObject1.isNull("get");
      JSONObject jSONObject2 = jSONObject0.append("get", "");
      jSONObject0.remove("get");
      jSONObject2.length();
      jSONObject0.optDouble("get");
      JSONObject jSONObject3 = jSONObject2.put("Jex93;Sa@4\"c#[!", 4);
      jSONObject3.optLong("Null key.", 0L);
      jSONObject0.optLong("H1'ja[M(q", (long) 4);
      jSONObject2.opt("get");
      boolean boolean0 = jSONObject0.optBoolean("get");
      assertEquals(5, jSONObject0.length());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.821124207620846
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Short short0 = new Short((short) (-527));
      Short.toUnsignedLong((short) (-527));
      Short.toUnsignedInt((short) (-1782));
      JSONObject jSONObject0 = new JSONObject(short0);
      JSONObject jSONObject1 = jSONObject0.put("", 65009L);
      jSONObject1.optLong("");
      Boolean.getBoolean(":xxR<");
      jSONObject0.optInt("] is not a number.");
      Short.toUnsignedInt((short)3);
      jSONObject1.isNull((String) null);
      Boolean boolean0 = new Boolean("[j[0 ~HI\"EZwt}");
      JSONObject.valueToString("[j[0 ~HI\"EZwt}");
      Byte byte0 = new Byte((byte)105);
      JSONObject jSONObject2 = jSONObject0.put("(P", (Object) null);
      jSONObject2.optJSONArray("");
      jSONObject2.put("", (Object) "");
      assertEquals(2, jSONObject0.length());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.6401461330725327
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Long long0 = new Long((-1049L));
      JSONObject jSONObject0 = new JSONObject();
      Long.divideUnsigned(218, 1334L);
      jSONObject0.toString(218, 218);
      jSONObject0.isNull("");
      try { 
        jSONObject0.getJSONObject("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Object object0 = new Object();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "par";
      stringArray0[1] = "getvalueOf";
      stringArray0[2] = "] is not a number.";
      stringArray0[3] = "islongBitsToDouble";
      stringArray0[4] = "wheel.json.JSONTokener";
      stringArray0[5] = "N)a0M)(pA$4^7";
      stringArray0[6] = "h7w";
      stringArray0[7] = "h.X/`CWy";
      stringArray0[8] = "`XiA)<'v0YOOJ~~vh0";
      JSONObject jSONObject0 = new JSONObject(object0, stringArray0);
      String string0 = jSONObject0.optString("JSONObject[");
      assertEquals("", string0);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.6772034292819802
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      JSONObject jSONObject0 = new JSONObject(object0);
      jSONObject0.put("", (-1.0));
      assertEquals(2, jSONObject0.length());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.0448524921636255
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Double double0 = new Double((-1.0));
      Double.max((-1.0), (-1.0));
      JSONObject jSONObject0 = new JSONObject(double0);
      JSONObject jSONObject1 = jSONObject0.putOpt("", double0);
      Double.sum(2006.6138068361, (-809.0));
      jSONObject1.put("", (Collection) null);
      JSONObject jSONObject2 = null;
      try {
        jSONObject2 = new JSONObject("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must begin with '{' at character 0 of 
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.4381851867454667
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      HashMap<String, Boolean> hashMap0 = new HashMap<String, Boolean>();
      Byte byte0 = new Byte((byte)0);
      Double double0 = new Double(2128);
      Double.sum(0.0, 0.0);
      JSONObject.doubleToString(0.0);
      Float float0 = new Float((-1440.9102671));
      Float.min((-3690.0F), 0.0F);
      JSONObject.getNames((Object) float0);
      Integer integer0 = new Integer(2128);
      Integer.toUnsignedString((int) (byte)0);
      JSONObject.testValidity(integer0);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.3346417310983085
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      Double double0 = new Double((-0.5652034380649087));
      Double.max((-0.5652034380649087), (-0.5652034380649087));
      JSONObject jSONObject0 = new JSONObject(double0);
      JSONObject jSONObject1 = jSONObject0.putOpt("", double0);
      Byte byte0 = new Byte((byte)34);
      byte byte1 = (byte)123;
      Byte.compare((byte) (-25), (byte)123);
      jSONObject0.put("#`%sejTz0lSLU*`", true);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "#`%sejTz0lSLU*`";
      stringArray0[1] = "#`%sejTz0lSLU*`";
      stringArray0[2] = "#`%sejTz0lSLU*`";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "#`%sejTz0lSLU*`";
      JSONObject jSONObject2 = new JSONObject(double0, stringArray0);
      jSONObject2.put("Unterminated string", (-1371));
      try { 
        jSONObject1.getJSONObject("#`%sejTz0lSLU*`");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"#`%sejTz0lSLU*`\"] is not a JSONObject.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.3003987414821485
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      JSONObject.doubleToString(1928.9251135934321);
      byte byte0 = (byte)48;
      Byte byte1 = new Byte((byte)48);
      String[] stringArray0 = new String[2];
      Byte.toUnsignedLong((byte)99);
      Byte.compare((byte)48, (byte)9);
      stringArray0[0] = "`h3ltOteLuF";
      stringArray0[1] = "1928.9251135934321";
      JSONObject jSONObject0 = new JSONObject(byte1, stringArray0);
      jSONObject0.optJSONArray("`h3ltOteLuF");
      jSONObject0.optInt("");
      JSONObject.doubleToString(0.0);
      jSONObject0.has("1928.9251135934321");
      jSONObject0.optDouble("opDkJIs53,,\";@3Eup", (double) (byte)9);
      try { 
        jSONObject0.getDouble("0");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"0\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      Long long0 = new Long(671L);
      Long.compareUnsigned(671L, 1L);
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject(long0, (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      Object object0 = new Object();
      JSONObject jSONObject0 = new JSONObject();
      String string0 = "";
      try { 
        jSONObject0.getJSONArray("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.2675632284814613
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      String string0 = "{";
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject("{");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must end with '}' at character 1 of {
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.4986122886681095
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      String[] stringArray0 = new String[7];
      boolean boolean0 = false;
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject("mF$");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must begin with '{' at character 1 of mF$
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.138526235860879
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      Byte byte0 = new Byte((byte)10);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "Z8v;)fn";
      stringArray0[1] = "\r";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "G@\"a";
      stringArray0[5] = "M1.#C)rq /Rn:[0nB";
      stringArray0[6] = "{}";
      stringArray0[7] = "-8+";
      stringArray0[8] = ")U5xq:UR|SEJME^";
      Byte.toUnsignedInt((byte)10);
      JSONObject jSONObject0 = new JSONObject(byte0, stringArray0);
      try { 
        jSONObject0.append((String) null, "");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.557702411245053
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      HashMap<JSONObject, Boolean> hashMap0 = new HashMap<JSONObject, Boolean>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      BiFunction<JSONObject, Boolean, Boolean> biFunction0 = (BiFunction<JSONObject, Boolean, Boolean>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      hashMap0.replaceAll(biFunction0);
      String string0 = null;
      jSONObject0.optLong((String) null);
      try { 
        jSONObject0.getString((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.935775846440674
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      Short short0 = new Short((short) (-527));
      Short.toUnsignedLong((short) (-527));
      Short.toUnsignedInt((short) (-527));
      JSONObject jSONObject0 = new JSONObject(short0);
      JSONObject jSONObject1 = jSONObject0.put("", 65009L);
      jSONObject1.optInt("", 65009);
      jSONObject1.toString((int) (short) (-527), (int) (short) (-527));
      jSONObject0.isNull("[j[0 ~HI\"EZwt}");
      JSONObject jSONObject2 = new JSONObject(jSONObject0);
      jSONObject2.append("is", "{\n\"java.lang.String@0000000004\": java.lang.Long@0000000005,\n\"java.lang.String@0000000002\": \"java.lang.Class@0000000003\"\n}");
      Integer integer0 = new Integer((short) (-527));
      JSONObject jSONObject3 = jSONObject1.putOpt((String) null, "is");
      jSONObject3.optJSONObject("");
      jSONObject3.accumulate("G@AFxCq:/Df^8$s", integer0);
      assertEquals(3, jSONObject1.length());
      assertEquals(3, jSONObject0.length());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.8874514199142034
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      Long long0 = new Long((-1049L));
      JSONObject jSONObject0 = new JSONObject(long0);
      int int0 = 218;
      Long.divideUnsigned(0L, 1334L);
      jSONObject0.toString(218, 218);
      jSONObject0.isNull("");
      jSONObject0.putOpt("] is not a number.", "");
      jSONObject0.optLong("");
      JSONObject.valueToString(long0);
      try { 
        jSONObject0.getDouble("{\"java.lang.String@0000000002\": \"java.lang.Class@0000000003\"}");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"{\\\"java.lang.String@0000000002\\\": \\\"java.lang.Class@0000000003\\\"}\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.3589202207983737
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      Double double0 = new Double((-0.5652034380649087));
      Double.max((-0.5652034380649087), (-0.5652034380649087));
      JSONObject jSONObject0 = new JSONObject(double0);
      JSONObject jSONObject1 = jSONObject0.putOpt("", double0);
      Byte byte0 = new Byte((byte)34);
      Byte.compare((byte) (-25), (byte)123);
      Byte.toUnsignedInt((byte) (-58));
      Integer.sum(99, (byte)123);
      JSONTokener jSONTokener0 = new JSONTokener("to");
      JSONObject jSONObject2 = new JSONObject();
      JSONObject.valueToString(jSONObject2, (byte)123, (-1299));
      try { 
        jSONObject1.get("#&vAR'yY");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"#&vAR'yY\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.6959944906365267
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      Double double0 = new Double((-1.0));
      Double.max((-1.0), (-1.0));
      JSONObject jSONObject0 = new JSONObject(double0);
      JSONObject jSONObject1 = jSONObject0.putOpt("", double0);
      Double.sum(2006.6138068361, (-809.0));
      JSONObject jSONObject2 = jSONObject1.put("", (Collection) null);
      jSONObject1.optBoolean("", false);
      // Undeclared exception!
      JSONObject.valueToString(jSONObject2, 4106, 3);
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.060649125069464
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      HashMap<Object, Boolean> hashMap0 = new HashMap<Object, Boolean>();
      Short short0 = new Short((short)19);
      Boolean boolean0 = Boolean.FALSE;
      hashMap0.put(short0, boolean0);
      Double double0 = new Double(258.78363923664955);
      Boolean boolean1 = Boolean.valueOf((String) null);
      Boolean.logicalAnd(true, false);
      hashMap0.put(double0, boolean1);
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      String string0 = "Ctb|ksf6P";
      Boolean.getBoolean("Ctb|ksf6P");
      HashMap<Object, String> hashMap1 = new HashMap<Object, String>();
      JSONObject jSONObject1 = jSONObject0.put(")Ws", (Map) hashMap1);
      Boolean.getBoolean("Ctb|ksf6P");
      jSONObject0.optString(")Ws");
      LinkedList<JSONObject> linkedList0 = new LinkedList<JSONObject>();
      try { 
        jSONObject1.getLong("Ctb|ksf6P");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"Ctb|ksf6P\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=2.00684403947552
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      JSONObject jSONObject0 = new JSONObject(object0);
      boolean boolean0 = jSONObject0.optBoolean("?=q7aRN q_epV\"(", true);
      assertEquals(1, jSONObject0.length());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.249170976253119
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      HashMap<Object, Boolean> hashMap0 = new HashMap<Object, Boolean>(45);
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      Boolean.getBoolean("Ctb|ksf6P");
      HashMap<Object, String> hashMap1 = new HashMap<Object, String>();
      JSONObject jSONObject1 = jSONObject0.put(")Ws", (Map) hashMap1);
      Boolean.getBoolean("Ctb|ksf6P");
      jSONObject0.optString(")Ws");
      LinkedList<JSONObject> linkedList0 = new LinkedList<JSONObject>();
      boolean boolean0 = jSONObject1.optBoolean("Ctb|ksf6P");
      assertEquals(1, jSONObject0.length());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.060680845233058
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      Short short0 = new Short((short)571);
      Short.toUnsignedLong((short)571);
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.optInt("6r?/aqBOpMe", (int) (short)571);
      HashMap<Long, String> hashMap0 = new HashMap<Long, String>();
      HashMap<Long, String> hashMap1 = new HashMap<Long, String>();
      Function<Object, String> function0 = (Function<Object, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      jSONObject0.optDouble("opDkJIs53,,\";@3Eup", (-1777.7696729349882));
      JSONObject jSONObject1 = new JSONObject((Object) "opDkJIs53,,\";@3Eup");
      JSONArray jSONArray0 = null;
      try {
        jSONArray0 = new JSONArray(jSONObject1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONArray initial value should be a string or collection or array.
         //
         verifyException("wheel.json.JSONArray", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.5174714039166524
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      Byte byte0 = new Byte((byte)91);
      String string0 = JSONObject.valueToString(byte0);
      assertNotNull(string0);
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.739142941570191
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      JSONObject jSONObject0 = new JSONObject(boolean0);
      Boolean.compare(false, false);
      jSONObject0.toString();
      jSONObject0.isNull("{\"java.lang.String@0000000002\":\"java.lang.Class@0000000003\"}");
      jSONObject0.append("{\"java.lang.String@0000000002\":\"java.lang.Class@0000000003\"}", boolean0);
      JSONTokener jSONTokener0 = new JSONTokener("{\"java.lang.String@0000000002\":\"java.lang.Class@0000000003\"}");
      JSONObject jSONObject1 = new JSONObject(jSONTokener0);
      JSONObject jSONObject2 = jSONObject1.put("{\"java.lang.String@0000000002\":\"java.lang.Class@0000000003\"}", false);
      String string0 = "iscompareTo";
      jSONObject0.put("iscompareTo", (-2523));
      try { 
        jSONObject2.getJSONObject("iscompareTo");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"iscompareTo\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.5880588147135972
  */
  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      Byte byte0 = new Byte((byte)10);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "Z8v;)fn";
      stringArray0[1] = "\r";
      stringArray0[2] = "";
      JSONObject jSONObject0 = new JSONObject("G@\"a", stringArray0);
      Integer integer0 = new Integer(128);
      JSONObject jSONObject1 = new JSONObject(integer0, stringArray0);
      Integer integer1 = new Integer(336);
      jSONObject1.append("] is not a JSONArray.", integer1);
      try { 
        jSONObject0.getDouble("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.1193782217962913
  */
  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      Double.max(0.0, 0.0);
      String string0 = "null";
      Boolean.valueOf("null");
      JSONObject jSONObject0 = new JSONObject((Object) "null");
      JSONObject jSONObject1 = jSONObject0.put("", false);
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.append(':');
      JSONObject jSONObject2 = new JSONObject();
      jSONObject2.put("null", 125);
      jSONObject2.put("b", false);
      jSONObject0.put("?)%R<(HPd", 120);
      try { 
        jSONObject1.getJSONObject("null");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"null\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.2322067503076204
  */
  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      HashMap<Byte, String> hashMap0 = new HashMap<Byte, String>();
      HashMap<Byte, String> hashMap1 = new HashMap<Byte, String>(hashMap0);
      JSONObject jSONObject0 = new JSONObject((Map) hashMap1);
      try { 
        jSONObject0.getBoolean("kBg|");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"kBg|\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      // Undeclared exception!
      try { 
        jSONObject0.write((Writer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.786724494755577
  */
  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject.getNames(jSONObject0);
      Byte byte0 = new Byte((byte)47);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "wheel.json.JSONException";
      JSONObject jSONObject1 = new JSONObject(byte0, stringArray0);
      Integer integer0 = new Integer(1766);
      Boolean boolean0 = new Boolean(true);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 86
  /*Coverage entropy=2.5772741550641127
  */
  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      String string0 = "b";
      Double.max(0.0, 0.0);
      Boolean.valueOf("null");
      JSONObject jSONObject0 = new JSONObject((Object) "null");
      jSONObject0.put("", false);
      StringWriter stringWriter0 = new StringWriter();
      CharBuffer charBuffer0 = CharBuffer.allocate(2938);
      StringWriter stringWriter1 = stringWriter0.append(':');
      StringWriter stringWriter2 = stringWriter1.append((CharSequence) charBuffer0, 2938, 2938);
      jSONObject0.write(stringWriter2);
      JSONObject jSONObject1 = new JSONObject();
      int int0 = 125;
      jSONObject1.put("null", 125);
      try { 
        jSONObject1.getJSONObject("?)%R<(HPd");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"?)%R<(HPd\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      Short.toUnsignedInt((short) (-1782));
      Byte byte0 = new Byte((byte)69);
      HashMap<Object, String> hashMap0 = new HashMap<Object, String>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      String string0 = jSONObject0.toString();
      assertEquals("{}", string0);
      assertNotNull(string0);
  }
}
