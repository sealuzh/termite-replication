/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 04:57:45 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JJTJavaParserState;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import com.soops.CEN4010.JMCA.JParser.JavaParser;
import com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager;
import com.soops.CEN4010.JMCA.JParser.Node;
import com.soops.CEN4010.JMCA.JParser.SimpleNode;
import java.io.FileDescriptor;
import java.io.FilterInputStream;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.io.StringWriter;
import java.io.SyncFailedException;
import java.io.Writer;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockRandomAccessFile;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimpleNode_ESTest extends SimpleNode_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.7915867636131378
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      SimpleNode simpleNode0 = new SimpleNode(27);
      simpleNode0.setIdentifier(">=");
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.close();
      simpleNode0.setIdentifier("         java JavaParser < inputfile");
      simpleNode0.dump("         java JavaParser < inputfile", stringWriter0);
      JavaParser javaParser0 = new JavaParser("         java JavaParser < inputfile");
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      SimpleNode simpleNode1 = new SimpleNode(2592);
      SimpleNode simpleNode2 = new SimpleNode(27);
      simpleNode2.setIdentifier("}");
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringWriter stringWriter1 = new StringWriter();
      simpleNode1.dump("/", stringWriter0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      simpleNode2.setIdentifier("z<=");
      simpleNode2.dump(">>", stringWriter0);
      boolean boolean1 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertFalse(boolean1 == boolean0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.8172513212853555
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      SimpleNode simpleNode0 = new SimpleNode(27);
      simpleNode0.setIdentifier(">=");
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append('*');
      stringWriter0.close();
      simpleNode0.setIdentifier("{#");
      simpleNode0.dump("         java JavaParser < inputfile", stringWriter1);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      simpleNode0.setIdentifier(";");
      simpleNode0.dump("EyO3/Zj", stringWriter1);
      boolean boolean1 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertFalse(boolean1 == boolean0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.9920480917684886
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(20);
      simpleNode0.toString();
      simpleNode0.setIdentifier("");
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter();
      simpleNode0.dump("fUCz Mnr-]!J9", stringWriter0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String string0 = "&&";
      simpleNode0.setIdentifier("&&");
      simpleNode0.dump("<", stringWriter1);
      JavaParser javaParser0 = new JavaParser("<");
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      MockFileInputStream mockFileInputStream1 = new MockFileInputStream(fileDescriptor0);
      int int0 = 10;
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(mockFileInputStream0, 10);
      PushbackInputStream pushbackInputStream1 = new PushbackInputStream(pushbackInputStream0);
      MockRandomAccessFile mockRandomAccessFile0 = null;
      try {
        mockRandomAccessFile0 = new MockRandomAccessFile("fUCz Mnr-]!J9", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal mode \"\" must be one of \"r\", \"rw\", \"rws\", or \"rwd\"
         //
         verifyException("java.io.RandomAccessFile", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.8120939218445867
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      SimpleNode simpleNode0 = new SimpleNode(27);
      simpleNode0.setIdentifier(">=");
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append('*');
      stringWriter0.close();
      simpleNode0.setIdentifier("{");
      simpleNode0.dump("         java JavaParser < inputfile", stringWriter1);
      JavaParser javaParser0 = new JavaParser("         java JavaParser < inputfile");
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      MockFileInputStream mockFileInputStream1 = new MockFileInputStream(fileDescriptor0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(mockFileInputStream1, 2592);
      PushbackInputStream pushbackInputStream1 = new PushbackInputStream(mockFileInputStream1);
      String string0 = "Synchr@nizedStatement";
      MockRandomAccessFile mockRandomAccessFile0 = null;
      try {
        mockRandomAccessFile0 = new MockRandomAccessFile("         java JavaParser < inputfile", ">=");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal mode \">=\" must be one of \"r\", \"rw\", \"rws\", or \"rwd\"
         //
         verifyException("java.io.RandomAccessFile", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.2650145598352225
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      int int0 = 0;
      SimpleNode simpleNode0 = new SimpleNode(0);
      String string0 = "Literal";
      simpleNode0.toString("Literal");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Literal");
      simpleNode0.jjtAddChild(simpleNode0, 711);
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.write((-303));
      simpleNode0.setIdentifier(">=");
      // Undeclared exception!
      simpleNode0.dump("&&", stringWriter0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.0510518225749257
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.jjtGetParent();
      simpleNode0.toString();
      simpleNode0.jjtGetParent();
      simpleNode0.jjtAddChild((Node) null, 0);
      simpleNode0.toString();
      simpleNode0.jjtAddChild((Node) null, 0);
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtGetChild(0);
      simpleNode0.jjtGetNumChildren();
      simpleNode0.toString("CompilationUnit");
      simpleNode0.jjtAddChild((Node) null, 1);
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.write((-1994927155));
      simpleNode0.dump("CompilationUnitCompilationUnit", stringWriter0);
      simpleNode0.jjtAddChild((Node) null, 55);
      assertEquals(56, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.394714983677679
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JavaParser javaParser0 = new JavaParser(stringReader0);
      int int0 = 1886;
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 1886);
      SimpleNode simpleNode1 = (SimpleNode)javaParser0.currNode;
      simpleNode0.jjtAddChild(simpleNode1, 1886);
      char[] charArray0 = new char[6];
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringWriter stringWriter0 = new StringWriter(1886);
      stringWriter0.write(charArray0);
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild(simpleNode1, (-1554));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1554
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.6969987794394545
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StringReader stringReader0 = new StringReader("*gt");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 1886);
      SimpleNode simpleNode1 = (SimpleNode)javaParser0.currNode;
      simpleNode0.jjtAddChild(simpleNode1, 1886);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0);
      JavaParser javaParser1 = new JavaParser(pipedInputStream0);
      simpleNode0.jjtGetChild(677);
      Node node0 = simpleNode0.parent;
      simpleNode0.jjtAddChild((Node) null, 0);
      assertEquals(1887, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.4841652152843623
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser(";");
      StringReader stringReader0 = new StringReader("mNA#`UF>TRDd([!us");
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 10);
      int int0 = 1286;
      SimpleNode simpleNode1 = new SimpleNode(1286);
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild(simpleNode1, (-1124));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.9909065731902369
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0);
      JavaParser javaParser0 = new JavaParser(pushbackInputStream0);
      SimpleNode simpleNode0 = new SimpleNode((-1103100070));
      Node node0 = javaParser0.currNode;
      simpleNode0.jjtAddChild((Node) null, 8);
      simpleNode0.jjtAddChild((Node) null, 1847);
      assertEquals(1848, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.6969987794394545
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 1886);
      SimpleNode simpleNode1 = (SimpleNode)javaParser0.currNode;
      simpleNode0.jjtAddChild(simpleNode1, 1886);
      char[] charArray0 = new char[6];
      charArray0[0] = 'I';
      charArray0[1] = 'y';
      charArray0[2] = '2';
      charArray0[3] = 'A';
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      Node node0 = simpleNode0.jjtGetChild(1886);
      simpleNode0.jjtAddChild(node0, 1886);
      assertEquals(1887, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StringReader stringReader0 = new StringReader("0|fe/z");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      int int0 = 1886;
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, (-926));
      simpleNode0.jjtAddChild(simpleNode0, 1886);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0);
      JavaParser javaParser1 = new JavaParser(pushbackInputStream0);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild((-926));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -926
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.6437233479037756
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.jjtGetParent();
      StringWriter stringWriter0 = new StringWriter();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      simpleNode0.jjtGetNumChildren();
      simpleNode0.dump("Mk9|L>zkj1!d{O5hOm", stringWriter0);
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtGetParent();
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtGetParent();
      simpleNode0.jjtAddChild((Node) null, 3141);
      simpleNode0.jjtAddChild((Node) null, 107);
      simpleNode0.dump("UjqoLXT!]w+n3", stringWriter0);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild((-1103981311));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1103981311
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.1501058308407441
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      int int0 = 0;
      SimpleNode simpleNode0 = new SimpleNode(0);
      int int1 = 0;
      String string0 = "AnnotationTypeDeclaration";
      JavaParser javaParser0 = new JavaParser("AnnotationTypeDeclaration");
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 0);
      simpleNode0.jjtAddChild(simpleNode1, 0);
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter();
      simpleNode0.dump("AnnotationTypeDeclaration", stringWriter0);
      char[] charArray0 = new char[9];
      charArray0[0] = 'G';
      charArray0[1] = 's';
      charArray0[2] = '3';
      PipedInputStream pipedInputStream0 = new PipedInputStream(1662);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream1 = null;
      try {
        pipedInputStream1 = new PipedInputStream(pipedOutputStream0, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.6631578398506526
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      SimpleNode simpleNode1 = new SimpleNode(0);
      simpleNode0.jjtSetParent(simpleNode1);
      Node node0 = simpleNode0.jjtGetParent();
      simpleNode0.jjtAddChild(node0, 0);
      StringWriter stringWriter0 = new StringWriter();
      char[] charArray0 = new char[4];
      charArray0[1] = 'b';
      charArray0[2] = 'A';
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      simpleNode0.jjtGetNumChildren();
      charArray0[3] = 'P';
      stringWriter0.write(charArray0, 0, 0);
      simpleNode0.dump("Mk9|L>zkj1!d{O5hOm", stringWriter0);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild('b');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 98
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser(";");
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 0);
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 0);
      simpleNode0.jjtSetParent(simpleNode1);
      assertFalse(simpleNode1.equals((Object)simpleNode0));
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      int int0 = 14;
      SimpleNode simpleNode0 = new SimpleNode(14);
      simpleNode0.setIdentifier("J<");
      StringWriter stringWriter0 = new StringWriter();
      // Undeclared exception!
      try { 
        simpleNode0.dump((String) null, (Writer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.4841652152843623
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      SimpleNode simpleNode0 = new SimpleNode((-193));
      String string0 = "<=";
      simpleNode0.setIdentifier((String) null);
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.close();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      simpleNode0.setIdentifier("<=");
      // Undeclared exception!
      try { 
        simpleNode0.dump("*ge", stringWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.087302357535235
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(14);
      simpleNode0.setIdentifier("<");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("<", stringWriter0);
      StringBuffer stringBuffer0 = new StringBuffer();
      String string0 = "!\\s}M9sEDqL?Hh";
      stringBuffer0.append("!s}M9sEDqL?Hh");
      // Undeclared exception!
      try { 
        stringWriter0.append((CharSequence) "!s}M9sEDqL?Hh", 14, 14);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.157677035511023
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.toString("CompilationUnit");
      String string0 = "";
      simpleNode0.setIdentifier("CompilationUnitCompilationUnit");
      JavaParser javaParser0 = new JavaParser("");
      Node node0 = javaParser0.currNode;
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "X_,rqvQ$QM<}DaIP");
      simpleNode0.dump("fUClz Mnr-]!J9", stringWriter1);
      StringWriter stringWriter2 = new StringWriter();
      // Undeclared exception!
      try { 
        stringWriter2.append((CharSequence) "", 3430, 0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.9946571675310574
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      StringWriter stringWriter0 = new StringWriter();
      int int0 = 10;
      StringWriter stringWriter1 = new StringWriter(10);
      stringWriter0.append('g');
      stringWriter1.append('g');
      StringBuffer stringBuffer0 = new StringBuffer();
      stringWriter1.close();
      simpleNode0.setIdentifier("");
      simpleNode0.dump("2'cpF}_6", stringWriter0);
      MockRandomAccessFile mockRandomAccessFile0 = null;
      try {
        mockRandomAccessFile0 = new MockRandomAccessFile("v", "{");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal mode \"{\" must be one of \"r\", \"rw\", \"rws\", or \"rwd\"
         //
         verifyException("java.io.RandomAccessFile", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.8090776470490244
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      SimpleNode simpleNode0 = new SimpleNode(23);
      simpleNode0.setIdentifier("x");
      StringWriter stringWriter0 = new StringWriter(0);
      simpleNode0.dump("{", stringWriter0);
      stringWriter0.write("{");
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      MockRandomAccessFile mockRandomAccessFile0 = null;
      try {
        mockRandomAccessFile0 = new MockRandomAccessFile("xo0", "&&");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal mode \"&&\" must be one of \"r\", \"rw\", \"rws\", or \"rwd\"
         //
         verifyException("java.io.RandomAccessFile", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.2438228280066395
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      int int0 = 7;
      SimpleNode simpleNode0 = new SimpleNode(7);
      simpleNode0.setIdentifier("<=");
      StringWriter stringWriter0 = new StringWriter(7);
      simpleNode0.dump((String) null, stringWriter0);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      simpleNode0.toString((String) null);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(mockFileInputStream0);
      try { 
        fileDescriptor0.sync();
        fail("Expecting exception: SyncFailedException");
      
      } catch(SyncFailedException e) {
         //
         // sync failed
         //
         verifyException("java.io.FileDescriptor", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 41);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(1887);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.323230114698323
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.setIdentifier("");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("", stringWriter0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      simpleNode0.setIdentifier("/");
      simpleNode0.dump("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", stringWriter0);
      JavaParser javaParser0 = new JavaParser((JavaParserTokenManager) null);
      simpleNode0.setIdentifier("3$U6x");
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      MockFileInputStream mockFileInputStream1 = new MockFileInputStream(fileDescriptor0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(mockFileInputStream1);
      Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      // Undeclared exception!
      try { 
        javaParser0.EmptyStatement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      StringReader stringReader0 = new StringReader("VariableDeclaratorId");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, (-148226986));
      // Undeclared exception!
      try { 
        simpleNode0.toString("VariableDeclaratorId");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -148226986
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      char[] charArray0 = new char[4];
      charArray0[1] = 'b';
      charArray0[2] = 'A';
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      charArray0[3] = 'P';
      stringWriter0.write(charArray0, 0, 0);
      SimpleNode simpleNode0 = new SimpleNode(107);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(107);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 291);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager((JavaCharStream) null);
      JavaParser javaParser1 = new JavaParser(javaParserTokenManager1);
      simpleNode0.parser = javaParser1;
      simpleNode0.jjtGetParent();
      simpleNode0.parent = null;
      simpleNode0.setIdentifier("{");
      javaParserTokenManager1.debugStream = javaParserTokenManager0.debugStream;
      JJTJavaParserState jJTJavaParserState0 = new JJTJavaParserState();
      javaParserTokenManager1.defaultLexState = 291;
      javaParser0.jjtree = jJTJavaParserState0;
      javaParserTokenManager0.MoreLexicalActions();
      simpleNode0.setIdentifier((String) null);
      simpleNode0.jjtOpen();
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtClose();
      // Undeclared exception!
      try { 
        simpleNode0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 291
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      int int0 = 0;
      String string0 = "";
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter(0);
      StringWriter stringWriter2 = stringWriter1.append('g');
      stringWriter1.append('Y');
      StringBuffer stringBuffer0 = new StringBuffer();
      stringWriter2.append((CharSequence) stringBuffer0);
      stringWriter1.append('Y');
      int int1 = 1446;
      SimpleNode simpleNode0 = null;
      try {
        simpleNode0 = new SimpleNode((JavaParser) null, 1446);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }
}
