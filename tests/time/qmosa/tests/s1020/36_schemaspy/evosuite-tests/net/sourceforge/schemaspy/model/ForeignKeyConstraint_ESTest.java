/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 04:49:05 GMT 2019
 */

package net.sourceforge.schemaspy.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.sql.Connection;
import java.sql.DatabaseMetaData;
import java.util.List;
import net.sourceforge.schemaspy.Config;
import net.sourceforge.schemaspy.model.ForeignKeyConstraint;
import net.sourceforge.schemaspy.model.Table;
import net.sourceforge.schemaspy.model.TableColumn;
import net.sourceforge.schemaspy.model.xml.SchemaMeta;
import net.sourceforge.schemaspy.model.xml.TableColumnMeta;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ForeignKeyConstraint_ESTest extends ForeignKeyConstraint_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "o");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      System.setCurrentTimeMillis((-8L));
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "'$&W]", (-2684), 0);
      boolean boolean0 = foreignKeyConstraint0.isCascadeOnDelete();
      assertTrue(boolean0);
      
      foreignKeyConstraint0.getParentColumns();
      foreignKeyConstraint0.getDeleteRule();
      foreignKeyConstraint0.getChildColumns();
      assertEquals((-2684), foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.4979067443811425
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, " via ", 2, 2);
      foreignKeyConstraint0.isRestrictDelete();
      String string0 = foreignKeyConstraint0.getDeleteRuleAlias();
      assertEquals("N", string0);
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = " via ";
      stringArray0[1] = "I-Tn";
      stringArray0[2] = "-LbqBsrR";
      stringArray0[3] = "N";
      String string1 = foreignKeyConstraint0.getDeleteRuleName();
      assertEquals("Null on delete", string1);
      
      Config.getInstance();
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "", 2, 3);
      boolean boolean0 = foreignKeyConstraint1.isReal();
      assertTrue(boolean0);
      
      boolean boolean1 = foreignKeyConstraint0.isRestrictDelete();
      String string2 = foreignKeyConstraint1.getDeleteRuleAlias();
      assertEquals("R", string2);
      
      String string3 = foreignKeyConstraint1.getDeleteRuleDescription();
      assertEquals("Restrict delete:\n Parent cannot be deleted if children exist", string3);
      
      int int0 = foreignKeyConstraint1.compareTo(foreignKeyConstraint0);
      assertEquals((-5), int0);
      
      boolean boolean2 = foreignKeyConstraint1.isCascadeOnDelete();
      assertTrue(boolean2 == boolean1);
      
      foreignKeyConstraint1.getName();
      assertEquals(2, foreignKeyConstraint1.getUpdateRule());
      assertTrue(foreignKeyConstraint1.isRestrictDelete());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.6301144065669297
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "bE;wW%DP2Dmvg^gg", (-676), 0);
      foreignKeyConstraint0.getChildColumns();
      List<TableColumn> list0 = foreignKeyConstraint0.getChildColumns();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-69);
      ForeignKeyConstraint.toString(list0);
      foreignKeyConstraint0.getDeleteRuleName();
      Config.getInstance();
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "Null on delete:\n Foreign key to parent set to NULL when parent deleted", (-1935), 0);
      foreignKeyConstraint1.isRestrictDelete();
      foreignKeyConstraint1.getParentColumns();
      foreignKeyConstraint0.getDeleteRuleAlias();
      foreignKeyConstraint0.getDeleteRuleDescription();
      int int0 = (-2600);
      ForeignKeyConstraint foreignKeyConstraint2 = new ForeignKeyConstraint((Table) null, "bE;wW%DP2Dmvg^gg", (-6), 1382);
      // Undeclared exception!
      try { 
        foreignKeyConstraint0.compareTo(foreignKeyConstraint2);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.7646308653001808
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "hUdFU*");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "hUdFU*");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "%!Y)z2ciz}+$!lR.0qE");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "hUdFU*");
      byte[] byteArray0 = new byte[19];
      byteArray0[9] = (byte)113;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArray0[3] = (byte) (-96);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "m");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "m");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "$O8#m", (-693), 78);
      boolean boolean0 = foreignKeyConstraint0.isCascadeOnDelete();
      assertFalse(boolean0);
      
      int int0 = foreignKeyConstraint0.getUpdateRule();
      assertEquals((-693), int0);
      
      foreignKeyConstraint0.getDeleteRuleName();
      assertEquals(78, foreignKeyConstraint0.getDeleteRule());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.9631430312600742
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "=f=", 3, 3);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      boolean boolean0 = foreignKeyConstraint0.isCascadeOnDelete();
      boolean boolean1 = foreignKeyConstraint0.isRestrictDelete();
      assertFalse(boolean1 == boolean0);
      
      String string0 = foreignKeyConstraint0.getDeleteRuleAlias();
      assertEquals("R", string0);
      
      String string1 = foreignKeyConstraint0.getDeleteRuleName();
      assertEquals(3, foreignKeyConstraint0.getUpdateRule());
      assertEquals("Restrict delete", string1);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.5280883009539779
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, " via ", 2, 2);
      foreignKeyConstraint0.isNullOnDelete();
      foreignKeyConstraint0.getDeleteRuleAlias();
      DatabaseMetaData databaseMetaData0 = null;
      String[] stringArray0 = new String[8];
      stringArray0[0] = " via ";
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("Null on delete");
      FileSystemHandling.createFolder(evoSuiteFile0);
      stringArray0[1] = "I-Tn";
      stringArray0[2] = "-LbqBsrR";
      stringArray0[3] = "N";
      stringArray0[5] = "jHxPcI";
      stringArray0[6] = " via ";
      stringArray0[7] = "N";
      Config config0 = null;
      try {
        config0 = new Config(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.Config", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.718488503189934
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      int int0 = (-676);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "L-|t(%dd;j 5S", (-676), (-676));
      foreignKeyConstraint0.getChildColumns();
      foreignKeyConstraint0.getChildColumns();
      foreignKeyConstraint0.isRestrictDelete();
      foreignKeyConstraint0.getDeleteRuleName();
      Config.getInstance();
      foreignKeyConstraint0.addParentColumn((TableColumn) null);
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "", (-1), 3);
      foreignKeyConstraint1.isRestrictDelete();
      foreignKeyConstraint1.getParentColumns();
      foreignKeyConstraint0.getDeleteRuleAlias();
      foreignKeyConstraint0.getDeleteRuleDescription();
      foreignKeyConstraint0.compareTo(foreignKeyConstraint1);
      ForeignKeyConstraint foreignKeyConstraint2 = new ForeignKeyConstraint((Table) null, "`lcQ{EM-$**npu ", 1, (-2600));
      foreignKeyConstraint0.compareTo(foreignKeyConstraint2);
      // Undeclared exception!
      try { 
        foreignKeyConstraint2.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.ForeignKeyConstraint", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.053882356878545
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      int int0 = 6;
      Table table0 = null;
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta0).getComments();
      doReturn((String) null).when(tableColumnMeta0).getDefaultValue();
      doReturn(0).when(tableColumnMeta0).getDigits();
      doReturn((String) null).when(tableColumnMeta0).getId();
      doReturn((String) null).when(tableColumnMeta0).getName();
      doReturn(0).when(tableColumnMeta0).getSize();
      doReturn((String) null).when(tableColumnMeta0).getType();
      doReturn(false).when(tableColumnMeta0).isAutoUpdated();
      doReturn(false).when(tableColumnMeta0).isNullable();
      TableColumn tableColumn0 = new TableColumn((Table) null, tableColumnMeta0);
      tableColumn0.unlinkChildren();
      ForeignKeyConstraint foreignKeyConstraint0 = null;
      try {
        foreignKeyConstraint0 = new ForeignKeyConstraint((TableColumn) null, tableColumn0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.TableColumn", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "bE;wW%DP2Dmvg^gg", 2, 2);
      foreignKeyConstraint0.getChildColumns();
      foreignKeyConstraint0.getChildColumns();
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, " via ", 1983, 1983);
      boolean boolean0 = foreignKeyConstraint0.isCascadeOnDelete();
      assertTrue(foreignKeyConstraint0.isNullOnDelete());
      
      boolean boolean1 = foreignKeyConstraint1.isNullOnDelete();
      assertTrue(boolean1 == boolean0);
      assertEquals(1983, foreignKeyConstraint1.getUpdateRule());
      assertFalse(boolean1);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String string0 = " via ";
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, " via ", 0, 0);
      foreignKeyConstraint0.isReal();
      String[] stringArray0 = new String[6];
      foreignKeyConstraint0.isNullOnDelete();
      foreignKeyConstraint0.isImplied();
      stringArray0[0] = "g**)x5N9";
      stringArray0[1] = "Assuming ";
      Config config0 = null;
      try {
        config0 = new Config(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.Config", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "o");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      System.setCurrentTimeMillis((-8L));
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "'$&W]", (-2684), (-1));
      boolean boolean0 = foreignKeyConstraint0.isCascadeOnDelete();
      assertFalse(boolean0);
      
      foreignKeyConstraint0.getParentColumns();
      int int0 = foreignKeyConstraint0.getDeleteRule();
      assertEquals((-1), int0);
      
      foreignKeyConstraint0.getChildColumns();
      assertEquals((-2684), foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.4777818157748137
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "bE;wW%DP2Dmvg^gg", (-676), 1);
      foreignKeyConstraint0.getChildColumns();
      List<TableColumn> list0 = foreignKeyConstraint0.getChildColumns();
      foreignKeyConstraint0.isRestrictDelete();
      ForeignKeyConstraint.toString(list0);
      foreignKeyConstraint0.getDeleteRuleName();
      Config.getInstance();
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "Null on delete:\n Foreign key to parent set to NULL when parent deleted", (-1935), 2885);
      ForeignKeyConstraint foreignKeyConstraint2 = new ForeignKeyConstraint((Table) null, (String) null, 14, 14);
      foreignKeyConstraint2.isRestrictDelete();
      foreignKeyConstraint2.getDeleteRuleAlias();
      foreignKeyConstraint2.getDeleteRuleDescription();
      foreignKeyConstraint2.getDeleteRuleName();
      // Undeclared exception!
      try { 
        foreignKeyConstraint2.compareTo(foreignKeyConstraint1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.ForeignKeyConstraint", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.507162153252891
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "Assuming ", (-6), 1);
      foreignKeyConstraint0.getChildColumns();
      foreignKeyConstraint0.getChildColumns();
      foreignKeyConstraint0.isRestrictDelete();
      Config.getInstance();
      foreignKeyConstraint0.isReal();
      foreignKeyConstraint0.getParentColumns();
      foreignKeyConstraint0.getDeleteRuleAlias();
      foreignKeyConstraint0.getDeleteRuleDescription();
      foreignKeyConstraint0.compareTo(foreignKeyConstraint0);
      foreignKeyConstraint0.getChildTable();
      System.setCurrentTimeMillis(3);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.9631430312600742
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, (String) null, 3, 3);
      boolean boolean0 = foreignKeyConstraint0.isReal();
      boolean boolean1 = foreignKeyConstraint0.isRestrictDelete();
      assertTrue(boolean1 == boolean0);
      assertEquals(3, foreignKeyConstraint0.getUpdateRule());
      
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, (String) null, 0, 0);
      String string0 = foreignKeyConstraint1.getDeleteRuleAlias();
      assertEquals("C", string0);
      
      String string1 = foreignKeyConstraint1.getDeleteRuleDescription();
      assertEquals("Cascade on delete:\n Deletion of parent deletes child", string1);
      assertFalse(foreignKeyConstraint1.isRestrictDelete());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.158307498963693
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, " viP ", 2, 2);
      boolean boolean0 = foreignKeyConstraint0.isRestrictDelete();
      assertFalse(boolean0);
      
      String string0 = foreignKeyConstraint0.getDeleteRuleAlias();
      assertEquals("N", string0);
      
      foreignKeyConstraint0.getParentColumns();
      String string1 = foreignKeyConstraint0.getDeleteRuleName();
      assertEquals("Null on delete", string1);
      
      foreignKeyConstraint0.getName();
      foreignKeyConstraint0.getName();
      assertEquals(2, foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "X3B-g|\"lLw");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", 3799, 1);
      int int0 = foreignKeyConstraint0.getUpdateRule();
      assertEquals(3799, int0);
      assertEquals("Restrict delete", foreignKeyConstraint0.getDeleteRuleName());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", 3, 3);
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "", (-106), 178);
      assertEquals(178, foreignKeyConstraint1.getDeleteRule());
      assertEquals((-106), foreignKeyConstraint1.getUpdateRule());
      
      int int0 = foreignKeyConstraint0.getDeleteRule();
      assertEquals(3, int0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.6294890156976365
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "bE;wW%DP2Dmvg^gg", 2, 2);
      foreignKeyConstraint0.getChildColumns();
      foreignKeyConstraint0.getChildColumns();
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "", 1983, 566);
      boolean boolean0 = foreignKeyConstraint1.isRestrictDelete();
      assertFalse(boolean0);
      
      foreignKeyConstraint1.getParentColumns();
      foreignKeyConstraint1.getDeleteRuleAlias();
      foreignKeyConstraint1.getDeleteRuleDescription();
      ForeignKeyConstraint foreignKeyConstraint2 = new ForeignKeyConstraint((Table) null, "Null on delete:\n Foreign key to parent set to NULL when parent deleted", (-564), 1382);
      int int0 = foreignKeyConstraint0.compareTo(foreignKeyConstraint1);
      assertEquals(16, int0);
      
      foreignKeyConstraint0.getChildTable();
      assertFalse(foreignKeyConstraint0.isRestrictDelete());
      
      System.setCurrentTimeMillis(0L);
      foreignKeyConstraint2.getDeleteRuleName();
      assertEquals(1382, foreignKeyConstraint2.getDeleteRule());
      assertEquals((-564), foreignKeyConstraint2.getUpdateRule());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.467632371682306
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "bE;wW%DP2Dmvg^gg", (-676), 1);
      foreignKeyConstraint0.getChildColumns();
      foreignKeyConstraint0.getChildColumns();
      foreignKeyConstraint0.isRestrictDelete();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-60);
      foreignKeyConstraint0.getDeleteRuleName();
      Config.getInstance();
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "bE;wW%DP2Dmvg^gg", (-1905), 1);
      foreignKeyConstraint1.isRestrictDelete();
      ForeignKeyConstraint foreignKeyConstraint2 = new ForeignKeyConstraint((Table) null, "UTF-8", 1, 1382);
      foreignKeyConstraint1.compareTo(foreignKeyConstraint2);
      foreignKeyConstraint0.getDeleteRuleAlias();
      foreignKeyConstraint0.getDeleteRuleDescription();
      foreignKeyConstraint0.getDeleteRuleName();
      // Undeclared exception!
      try { 
        foreignKeyConstraint0.compareTo(foreignKeyConstraint1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "hUdFU*");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "hUdFU*");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "%!Y)z2ciz}+$!lR.0qE");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "hUdFU*");
      byte[] byteArray0 = new byte[19];
      byteArray0[9] = (byte)113;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArray0[3] = (byte) (-79);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "m");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "$O8#m", (-693), 78);
      List<TableColumn> list0 = foreignKeyConstraint0.getParentColumns();
      ForeignKeyConstraint.toString(list0);
      boolean boolean0 = foreignKeyConstraint0.isCascadeOnDelete();
      assertFalse(boolean0);
      
      foreignKeyConstraint0.getParentTable();
      assertEquals((-693), foreignKeyConstraint0.getUpdateRule());
      assertEquals(78, foreignKeyConstraint0.getDeleteRule());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      Config config0 = new Config();
      DatabaseMetaData databaseMetaData0 = mock(DatabaseMetaData.class, new ViolatedAssumptionAnswer());
      List<TableColumn> list0 = null;
      // Undeclared exception!
      try { 
        ForeignKeyConstraint.toString((List<TableColumn>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.ForeignKeyConstraint", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "X3B-g|\"lLw");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      System.setCurrentTimeMillis((-8L));
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", 3799, 1);
      foreignKeyConstraint0.addChildColumn((TableColumn) null);
      foreignKeyConstraint0.addParentColumn((TableColumn) null);
      boolean boolean0 = foreignKeyConstraint0.isCascadeOnDelete();
      assertEquals(3799, foreignKeyConstraint0.getUpdateRule());
      assertFalse(boolean0);
      assertEquals("R", foreignKeyConstraint0.getDeleteRuleAlias());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.2831993027119695
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "bE;wW%DP2Dmvg^gg", 2018, 2018);
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta0).getComments();
      doReturn((String) null).when(tableColumnMeta0).getDefaultValue();
      doReturn(0).when(tableColumnMeta0).getDigits();
      doReturn((String) null).when(tableColumnMeta0).getId();
      doReturn((String) null).when(tableColumnMeta0).getName();
      doReturn(0).when(tableColumnMeta0).getSize();
      doReturn((String) null).when(tableColumnMeta0).getType();
      doReturn(false).when(tableColumnMeta0).isAutoUpdated();
      doReturn(false).when(tableColumnMeta0).isNullable();
      TableColumn tableColumn0 = new TableColumn((Table) null, tableColumnMeta0);
      foreignKeyConstraint0.addChildColumn(tableColumn0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      List<TableColumn> list0 = foreignKeyConstraint0.getChildColumns();
      boolean boolean0 = foreignKeyConstraint0.isRestrictDelete();
      assertFalse(boolean0);
      
      String string0 = ForeignKeyConstraint.toString(list0);
      assertNull(string0);
      
      foreignKeyConstraint0.getDeleteRuleName();
      foreignKeyConstraint0.getDeleteRuleDescription();
      assertEquals(2018, foreignKeyConstraint0.getDeleteRule());
      assertEquals(2018, foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.8610260302335981
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      String string0 = " via ";
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, " via ", 2, 2);
      foreignKeyConstraint0.isRestrictDelete();
      foreignKeyConstraint0.getDeleteRuleAlias();
      DatabaseMetaData databaseMetaData0 = null;
      String[] stringArray0 = new String[8];
      stringArray0[0] = " via ";
      stringArray0[1] = "I-Tn";
      stringArray0[2] = "-LbqBsrR";
      stringArray0[3] = "N";
      stringArray0[4] = "I-Tn";
      stringArray0[5] = "jHxPcI";
      stringArray0[6] = " via ";
      stringArray0[7] = "N";
      Config config0 = new Config(stringArray0);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      foreignKeyConstraint0.getDeleteRuleDescription();
      String string1 = "parameter_name";
      String string2 = "56^G";
      SchemaMeta schemaMeta0 = null;
      try {
        schemaMeta0 = new SchemaMeta("", ":Xk\"QI:O5:d2<|!!cIS", (String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Meta directory \"\" must contain a file named \":Xk\"QI:O5:d2<|!!cIS.meta.xml\"
         //
         verifyException("net.sourceforge.schemaspy.model.xml.SchemaMeta", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.2508570947192674
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, (String) null, (-896), (-1));
      foreignKeyConstraint0.getDeleteRuleDescription();
      foreignKeyConstraint0.getDeleteRuleDescription();
      assertEquals((-896), foreignKeyConstraint0.getUpdateRule());
      assertEquals((-1), foreignKeyConstraint0.getDeleteRule());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = null;
      try {
        foreignKeyConstraint0 = new ForeignKeyConstraint((TableColumn) null, (TableColumn) null, 6, (-2839));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.ForeignKeyConstraint", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.053882356878545
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta0).getComments();
      doReturn((String) null).when(tableColumnMeta0).getDefaultValue();
      doReturn(0).when(tableColumnMeta0).getDigits();
      doReturn((String) null).when(tableColumnMeta0).getId();
      doReturn((String) null).when(tableColumnMeta0).getName();
      doReturn(0).when(tableColumnMeta0).getSize();
      doReturn((String) null).when(tableColumnMeta0).getType();
      doReturn(false).when(tableColumnMeta0).isAutoUpdated();
      doReturn(false).when(tableColumnMeta0).isNullable();
      TableColumn tableColumn0 = new TableColumn((Table) null, tableColumnMeta0);
      ForeignKeyConstraint foreignKeyConstraint0 = null;
      try {
        foreignKeyConstraint0 = new ForeignKeyConstraint(tableColumn0, tableColumn0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.TableColumn", e);
      }
  }
}
