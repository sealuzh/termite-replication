/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 05:14:21 GMT 2019
 */


import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Services_ESTest extends Services_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      System.setCurrentTimeMillis((-3272L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(1050L);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("200.42.42.0", 2333);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      System.setCurrentTimeMillis((-3227L));
      System.setCurrentTimeMillis(0);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-1857L));
      System.setCurrentTimeMillis(0L);
      Services.testPOP3("u\";~asZ&\"uy9W;J{", 2333);
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.530996748593901
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("https://R$&$b4^6+vW\\Eo:1898");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "R$&$b4^6+vWEo");
      EvoSuiteLocalAddress evoSuiteLocalAddress0 = new EvoSuiteLocalAddress("192.168.1.42", 40002);
      NetworkHandling.sendMessageOnTcp(evoSuiteLocalAddress0, "");
      Services.testHTTPS("R$&$b4^6+vWEo", 1898);
      Services.testHTTP("**Erreur d'E/S** (", (-1));
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "");
      Services.testSMTP("QUIT\r\n", 3000);
      Services.testHTTPS("&3 P_pEXq~LJh(f-hSY", 0);
      Services.testHTTPS("**Erreur d'E/S** (org.evosuite.runtime.mock.java.lang.MockThrowable: Could not find: &3 P_pEXq~LJh(f-hSY) **", 3000);
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTPS("", 0);
      assertEquals(0L, services_HTTP_Result0.time);
      assertEquals(0, services_HTTP_Result0.page_weight);
      assertEquals(0, services_HTTP_Result0.code);
      assertFalse(services_HTTP_Result0.works);
      
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testPOP3(">", 0);
      assertFalse(services_SIMPLE_Result0.works);
      assertEquals(0L, services_SIMPLE_Result0.time);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.0389712786066236
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTPS("A/3", 0);
      Services.HTTP_Result services_HTTP_Result1 = new Services.HTTP_Result();
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://Hy{#DQ:105");
      services_HTTP_Result1.Error = "y/<)w':Bv";
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "**Erreur d'E/S** (org.evosuite.runtime.mock.java.lang.MockThrowable: Could not find: A/3) **");
      String string0 = services_HTTP_Result1.toString();
      assertEquals("**** Resultat : \n** Fonctionnement : false\n** Temps : 0 ms\n** Poid de la page : 0 octets\n** Code de page : 0\n** Erreur g\u00E9n\u00E9r\u00E9e : y/<)w':Bv.\n****", string0);
      
      String string1 = services_HTTP_Result0.toString();
      assertEquals("**** Resultat : \n** Fonctionnement : false\n** Temps : 0 ms\n** Poid de la page : 0 octets\n** Code de page : 0\n** Erreur g\u00E9n\u00E9r\u00E9e : **Erreur d'E/S** (org.evosuite.runtime.mock.java.lang.MockThrowable: Could not find: A/3) **.\n****", string1);
      
      services_HTTP_Result1.reset();
      services_HTTP_Result1.toString();
      services_HTTP_Result1.toString();
      Services.HTTP_Result services_HTTP_Result2 = Services.testHTTP("Hy{#DQ", 105);
      assertTrue(services_HTTP_Result2.works);
      assertEquals(93, services_HTTP_Result2.page_weight);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      System.setCurrentTimeMillis((-17L));
      System.setCurrentTimeMillis((-17L));
      System.setCurrentTimeMillis(2134);
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTPS((String) null, 2547);
      assertEquals(0L, services_HTTP_Result0.time);
      assertEquals(0, services_HTTP_Result0.code);
      assertEquals(0, services_HTTP_Result0.page_weight);
      assertFalse(services_HTTP_Result0.works);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTP("", (-3334));
      assertFalse(services_HTTP_Result0.works);
      assertEquals(0, services_HTTP_Result0.page_weight);
      assertEquals(0, services_HTTP_Result0.code);
      assertEquals(0L, services_HTTP_Result0.time);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("200.42.42.0", 93);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testSMTP("Dxm*s4,", 93);
      assertEquals(0L, services_SIMPLE_Result0.time);
      assertFalse(services_SIMPLE_Result0.works);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testSMTP("y2j", 1325);
      services_SIMPLE_Result0.works = true;
      services_SIMPLE_Result0.toString();
      services_SIMPLE_Result0.Error = "y2j";
      services_SIMPLE_Result0.works = false;
      services_SIMPLE_Result0.reset();
      assertFalse(services_SIMPLE_Result0.works);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = new Services.HTTP_Result();
      String string0 = services_HTTP_Result0.toString();
      assertEquals("**** Resultat : \n** Fonctionnement : false\n** Temps : 0 ms\n** Poid de la page : 0 octets\n** Code de page : 0\n** Erreur g\u00E9n\u00E9r\u00E9e : .\n****", string0);
      
      Services.HTTP_Result services_HTTP_Result1 = Services.testHTTP((String) null, 0);
      services_HTTP_Result0.reset();
      String string1 = services_HTTP_Result1.Error;
      assertEquals("**Erreur : java.lang.NullPointerException**", string1);
      
      String string2 = services_HTTP_Result0.toString();
      assertEquals("**** Resultat : \n** Fonctionnement : false\n** Temps : 0 ms\n** Poid de la page : 0 octets\n** Code de page : 0\n** Erreur g\u00E9n\u00E9r\u00E9e : .\n****", string2);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testPOP3("Y5pHmmn~zEo^d!'$&W]", (-61));
      assertFalse(services_SIMPLE_Result0.works);
      assertEquals(0L, services_SIMPLE_Result0.time);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTPS("yk0&83z@MJs1m`,", (-3446));
      assertEquals(0L, services_HTTP_Result0.time);
      assertEquals(0, services_HTTP_Result0.page_weight);
      assertEquals(0, services_HTTP_Result0.code);
      assertFalse(services_HTTP_Result0.works);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.5633125094217712
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = new Services.HTTP_Result();
      services_HTTP_Result0.page_weight = (-2095);
      services_HTTP_Result0.Error = "";
      services_HTTP_Result0.Error = "";
      services_HTTP_Result0.toString();
      Services.SIMPLE_Result services_SIMPLE_Result0 = new Services.SIMPLE_Result();
      assertEquals(0L, services_SIMPLE_Result0.time);
      
      services_HTTP_Result0.toString();
      services_SIMPLE_Result0.time = (long) (-2095);
      Services services0 = new Services();
      services_SIMPLE_Result0.toString();
      services_SIMPLE_Result0.toString();
      Services.SIMPLE_Result services_SIMPLE_Result1 = Services.testPOP3("+RES}=}J", 0);
      Services.SIMPLE_Result services_SIMPLE_Result2 = Services.testSMTP("**Erreur d'E/S** (java.io.IOException: Remote address/port is not opened: org.evosuite.runtime.vnet.EndPointInfo@71a1b6f9) **", (-2095));
      services_SIMPLE_Result1.Error = "";
      services_SIMPLE_Result2.reset();
      services_SIMPLE_Result2.reset();
      assertEquals(0L, services_SIMPLE_Result2.time);
  }
}
