/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 05:05:03 GMT 2019
 */

package org.databene.jdbacl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintWriter;
import java.io.StreamTokenizer;
import java.io.StringWriter;
import java.util.List;
import java.util.Locale;
import java.util.Properties;
import java.util.Vector;
import org.apache.derby.iapi.services.context.ContextService;
import org.apache.derby.iapi.sql.dictionary.ConstraintDescriptorList;
import org.apache.derby.iapi.sql.dictionary.GenericDescriptorList;
import org.apache.derby.iapi.store.raw.ContainerKey;
import org.apache.derby.iapi.store.raw.xact.RawTransaction;
import org.apache.derby.impl.services.uuid.BasicUUID;
import org.apache.derby.impl.sql.catalog.DataDictionaryImpl;
import org.apache.derby.impl.sql.compile.FromVTI;
import org.apache.derby.impl.store.raw.data.BaseDataFileFactory;
import org.apache.derby.impl.store.raw.xact.TransactionTable;
import org.databene.commons.version.VersionNumber;
import org.databene.jdbacl.NameSpec;
import org.databene.jdbacl.SQLUtil;
import org.databene.jdbacl.model.CompositeDBObject;
import org.databene.jdbacl.model.DBCatalog;
import org.databene.jdbacl.model.DBCheckConstraint;
import org.databene.jdbacl.model.DBColumn;
import org.databene.jdbacl.model.DBConstraint;
import org.databene.jdbacl.model.DBDataType;
import org.databene.jdbacl.model.DBForeignKeyConstraint;
import org.databene.jdbacl.model.DBNonUniqueIndex;
import org.databene.jdbacl.model.DBObject;
import org.databene.jdbacl.model.DBPackage;
import org.databene.jdbacl.model.DBPrimaryKeyConstraint;
import org.databene.jdbacl.model.DBSchema;
import org.databene.jdbacl.model.DBTable;
import org.databene.jdbacl.model.DBUniqueConstraint;
import org.databene.jdbacl.model.DBUniqueIndex;
import org.databene.jdbacl.model.DefaultDBColumn;
import org.databene.jdbacl.model.DefaultDBTable;
import org.databene.jdbacl.model.DefaultDatabase;
import org.databene.jdbacl.model.TableContainer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.h2.jdbc.JdbcConnection;
import org.h2.jdbcx.JdbcConnectionPool;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SQLUtil_ESTest extends SQLUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.1060573301823664
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = "wHVXTq#e}-tC/g>Ounj";
      String[] stringArray0 = new String[2];
      stringArray0[0] = "wHVXTq#e}-tC/g>Ounj";
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      SQLUtil.normalize("wHVXTq#e}-tC/g>Ounj = 'wHVXTq#e}-tC/g>Ounj' AND null = null", false);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("wHVXTq#e}-tC/g>Ounj = 'wHVXTq#e}-tC/g>Ounj' AND null = null");
      DBCheckConstraint dBCheckConstraint0 = null;
      try {
        dBCheckConstraint0 = new DBCheckConstraint(" x:YJYC<aFQ$", true, "xJ%,8L6/~f", "wHVXTq#e}-tC/g>Ounj = 'wHVXTq#e}-tC/g>Ounj' AND null = null");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Error parsing SQL
         //
         verifyException("org.databene.jdbacl.sql.SQLParserUtil", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.567944147734173
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = "U+\\Sz,0/SV/RY<";
      DBCatalog dBCatalog0 = new DBCatalog("U+Sz,0/SV/RY<");
      SQLUtil sQLUtil0 = new SQLUtil();
      SQLUtil.normalize("U+Sz,0/SV/RY<", true);
      TransactionTable transactionTable0 = null;
      try {
        transactionTable0 = new TransactionTable();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.derby.impl.store.raw.xact.TransactionTable", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DBColumn[] dBColumnArray0 = new DBColumn[0];
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames(dBColumnArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String[] stringArray0 = new String[8];
      String string0 = "XhrVxu4;i/.33";
      stringArray0[1] = "/*";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("XhrVxu4;i/.33");
      String string1 = "create t";
      defaultDBTable0.setName("XhrVxu4;i/.33");
      // Undeclared exception!
      SQLUtil.isQuery("/*");
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.7834884952192693
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SQLUtil.isDML("create table ");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "create table ";
      stringArray0[1] = "create table ";
      stringArray0[2] = "create table ";
      stringArray0[3] = "create table ";
      stringArray0[4] = "CASCADE";
      stringArray0[5] = "create table ";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "create table ", true, stringArray0);
      dBPrimaryKeyConstraint0.setDoc("3sw%w;Rtlkg_Xo~qM");
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      SQLUtil.pkSpec(dBPrimaryKeyConstraint0, nameSpec0);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("", defaultDBTable0, (-2), "RA");
      DBColumn[] dBColumnArray0 = new DBColumn[1];
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      SQLUtil.renderColumnNames(dBColumnArray0);
      SQLUtil.removeComments("22020");
      // Undeclared exception!
      try { 
        SQLUtil.isProcedureCall((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.474871833584328
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String string0 = "jIzK|8U\"v5F";
      SQLUtil.isProcedureCall("jIzK|8U\"v5F");
      SQLUtil.mutatesStructure("jIzK|8U\"v5F");
      SQLUtil.isProcedureCall("CARDINALITY INT");
      String string1 = "<~w]IlKC";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("<~w]IlKC");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "create unique index";
      SQLUtil.renderColumnNames(stringArray0);
      SQLUtil.innerJoin("v-", stringArray0, "execbp h~h?p1q", "v-", stringArray0);
      SQLUtil.mutatesDataOrStructure("create materialized viewrefqerenes as execbp h~h?p1q on . = execbp h~h?p1q. and .null = execbp h~h?p1q.null and . = execbp h~h?p1q. and . = execbp h~h?p1q. and . = execbp h~h?p1q. and . = execbp h~h?p1q. and .truncate = execbp h~h?p1q.truncate");
      SQLUtil.leftJoin("drop indexgetsqlallowed", stringArray0, "drop indexgetsqlallowed", "execbp h~h?p1q", stringArray0);
      StringBuilder stringBuilder0 = null;
      DBCheckConstraint dBCheckConstraint0 = null;
      try {
        dBCheckConstraint0 = new DBCheckConstraint("`k~]G+_", true, "drop indexgetsqlallowed", "create unique index");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Syntax error at the beginning 
         //
         verifyException("org.databene.jdbacl.sql.SQLParserUtil", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      List<DBColumn> list0 = null;
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.704539126692962
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SQLUtil.removeComments("");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "truncate";
      SQLUtil.removeComments("");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      SQLUtil.innerJoin("", stringArray0, " REFERENCES ", "execbp h~h?p1q", stringArray0);
      SQLUtil.mutatesDataOrStructure(" REFERENCES  as execbp h~h?p1q on . = execbp h~h?p1q. and . = execbp h~h?p1q. and . = execbp h~h?p1q. and . = execbp h~h?p1q. and . = execbp h~h?p1q. and . = execbp h~h?p1q. and .truncate = execbp h~h?p1q.truncate");
      SQLUtil.isDML("");
      String[] stringArray1 = new String[5];
      stringArray1[0] = "";
      SQLUtil.mutatesStructure("insert42509");
      SQLUtil.removeComments("truncate");
      DataDictionaryImpl dataDictionaryImpl0 = new DataDictionaryImpl();
      BaseDataFileFactory baseDataFileFactory0 = new BaseDataFileFactory();
      SQLUtil.isProcedureCall("DECRYPT");
      DBSchema dBSchema0 = new DBSchema("truncate");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("AI?@~(^5[[OJ:wTDJ2", dBSchema0);
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "truncate");
      defaultDBTable0.getUniqueConstraint(stringArray1);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.constraintSpec((DBConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.7566062195365775
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[0] = "XhrVxu4;i/.33";
      stringArray0[1] = "/*";
      stringArray0[2] = "B?<P%cF";
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      stringArray0[3] = " on ";
      SQLUtil.innerJoin("@2t#}n!AGSc", stringArray0, "select into", (String) null, stringArray0);
      SQLUtil.mutatesDataOrStructure("7Z@R'7M");
      SQLUtil.mutatesStructure(" on ");
      SQLUtil.removeComments("B?<P%cF");
      DataDictionaryImpl dataDictionaryImpl0 = new DataDictionaryImpl();
      BaseDataFileFactory baseDataFileFactory0 = new BaseDataFileFactory();
      SQLUtil.isProcedureCall("execjizk|8u\"v5f");
      // Undeclared exception!
      try { 
        SQLUtil.substituteMarkers((String) null, "B?<P%cF", "/*");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.325342919442848
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String string0 = "UPDATE INFORMATION_SCHEMA.LOBS SET TABLE = ? WHERE ID = ?";
      SQLUtil.mutatesDataOrStructure("UPDATE INFORMATION_SCHEMA.LOBS SET TABLE = ? WHERE ID = ?");
      SQLUtil.isDML("UPDATE INFORMATION_SCHEMA.LOBS SET TABLE = ? WHERE ID = ?");
      DefaultDatabase defaultDatabase0 = new DefaultDatabase("UPDATE INFORMATION_SCHEMA.LOBS SET TABLE = ? WHERE ID = ?", "49_\u0002Rg(6&P][4*", (VersionNumber) null);
      String string1 = "2-coaCwhU[";
      // Undeclared exception!
      try { 
        defaultDatabase0.getTable("2-coaCwhU[", true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Table '2-coaCwhU['
         //
         verifyException("org.databene.jdbacl.model.DefaultDatabase", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.680280834353128
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String[] stringArray0 = new String[8];
      String[] stringArray1 = new String[2];
      stringArray1[0] = "truncate";
      stringArray1[1] = "TYPE_NAME";
      SQLUtil.renderColumnNames(stringArray1);
      SQLUtil.innerJoin("HL<,\"htK1qxm", stringArray0, " REFqERENES ", "TYPE_NAME", stringArray0);
      SQLUtil.mutatesDataOrStructure("truncate");
      String string0 = "w2hnK=MHHW";
      SQLUtil.mutatesStructure("qW?.yam");
      // Undeclared exception!
      try { 
        SQLUtil.removeComments((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.3733156320812214
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String string0 = "jIzK|8U\"v5F";
      SQLUtil.isProcedureCall("jIzK|8U\"v5F");
      SQLUtil.mutatesStructure("jIzK|8U\"v5F");
      SQLUtil.isProcedureCall("CARDINALITY INT");
      String string1 = "<~w]IlKC";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("<~w]IlKC");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "CARDINALITY INT";
      stringArray0[1] = "CASCADE";
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "org.antlr.runtime.tree.BaseTreeAdaptor");
      SQLUtil.renderColumnNames(stringArray0);
      String string2 = " REFqERENES ";
      String string3 = "9p`d$^9s[-sU5Uk!}8";
      String[] stringArray1 = new String[1];
      stringArray1[0] = "9p`d$^9s[-sU5Uk!}8";
      SQLUtil.innerJoin("9p`d$^9s[-sU5Uk!}8", stringArray1, " REFqERENES ", "pNL0Mp$P|", stringArray0);
      // Undeclared exception!
      try { 
        SQLUtil.mutatesDataOrStructure((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.normalize((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.8566236880317835
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Boolean boolean0 = new Boolean("jIzK|8U\"v5F");
      SQLUtil.mutatesStructure("jIzK|8U\"v5F");
      SQLUtil.isProcedureCall("jIzK|8U\"v5F");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("<~w]IlKC");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "jIzK|8U\"v5F";
      stringArray0[1] = "CASCADE";
      stringArray0[2] = "org.antlr.runtime.tree.BaseTreeAdaptor";
      stringArray0[3] = "jIzK|8U\"v5F";
      stringArray0[4] = "jIzK|8U\"v5F";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "org.antlr.runtime.tree.BaseTreeAdaptor", true, stringArray0);
      dBPrimaryKeyConstraint0.setDoc("<~w]IlKC");
      NameSpec nameSpec0 = NameSpec.NEVER;
      SQLUtil.pkSpec(dBPrimaryKeyConstraint0, nameSpec0);
      String string0 = "create t";
      defaultDBTable0.setName("create t");
      SQLUtil.isQuery("jIzK|8U\"v5F");
      SQLUtil.mutatesStructure("create unique index");
      String string1 = null;
      SQLUtil.leftJoin((String) null, stringArray0, "CASCADE", "<'.xdJ>NG", stringArray0);
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) dBPrimaryKeyConstraint0, (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.6321594102050287
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SQLUtil.isProcedureCall("jIzK|8U\"v5F");
      SQLUtil.mutatesStructure("jIzK|8U\"v5F");
      SQLUtil.isProcedureCall("CARDINALITY INT");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("<~w]IlKC");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "create unique index";
      SQLUtil.renderColumnNames(stringArray0);
      String string0 = "v-";
      SQLUtil.innerJoin("v-", stringArray0, "<~w]IlKC", "v-", stringArray0);
      SQLUtil.mutatesDataOrStructure("getSQLAllowed");
      // Undeclared exception!
      try { 
        SQLUtil.innerJoin("create unique index", (String[]) null, "callnot", "zF;;2'R{Y@4", stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.1641933683302232
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SQLUtil.removeComments("");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      String[] stringArray1 = new String[2];
      stringArray1[0] = "";
      stringArray1[1] = "";
      String string0 = null;
      String[] stringArray2 = new String[1];
      stringArray2[0] = "";
      // Undeclared exception!
      try { 
        SQLUtil.leftJoin("", stringArray1, "", (String) null, stringArray2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.8313841408723746
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[1] = "truncate";
      stringArray0[2] = "$nh{0";
      stringArray0[3] = "";
      String string0 = SQLUtil.renderColumnNames(stringArray0);
      assertEquals("(, truncate, $nh{0, )", string0);
      
      String string1 = SQLUtil.innerJoin("}C#W,Wv$ Z", stringArray0, "<*Q'nSmO", "$nh{0", stringArray0);
      assertEquals("<*Q'nSmO as $nh{0 on }C#W,Wv$ Z. = $nh{0. and }C#W,Wv$ Z.truncate = $nh{0.truncate and }C#W,Wv$ Z.$nh{0 = $nh{0.$nh{0 and }C#W,Wv$ Z. = $nh{0.", string1);
      
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("#`n5W#BI=J%B");
      assertNull(boolean0);
      
      SQLUtil.mutatesStructure("PiCj-OV-n2");
      SQLUtil.removeComments("^3/Z%GWrH.miafZ");
      DataDictionaryImpl dataDictionaryImpl0 = new DataDictionaryImpl();
      BaseDataFileFactory baseDataFileFactory0 = new BaseDataFileFactory();
      boolean boolean1 = SQLUtil.isProcedureCall("(z3*>8S`Gm> PUo<}");
      assertFalse(boolean1);
      
      String string2 = SQLUtil.renderColumnListWithTableName("^3/Z%GWrH.miafZ", stringArray0);
      assertEquals("^3/Z%GWrH.miafZ., ^3/Z%GWrH.miafZ.truncate, ^3/Z%GWrH.miafZ.$nh{0, ^3/Z%GWrH.miafZ.", string2);
      
      String[] stringArray1 = new String[9];
      stringArray1[0] = "#`n5W#BI=J%B";
      stringArray1[1] = "xP^t=b9(";
      stringArray1[2] = "(, truncate, $nh{0, )";
      stringArray1[3] = "43Y19.U";
      stringArray1[4] = "(, truncate, $nh{0, )";
      stringArray1[5] = "$nh{0";
      stringArray1[6] = "^3/Z%GWrH.miafZ., ^3/Z%GWrH.miafZ.truncate, ^3/Z%GWrH.miafZ.$nh{0, ^3/Z%GWrH.miafZ.";
      stringArray1[7] = "^3/Z%GWrH.miafZ";
      stringArray1[8] = "org.";
      String string3 = SQLUtil.leftJoin("}C#W,Wv$ Z", stringArray0, "xP^t=b9(", "#`n5W#BI=J%B", stringArray1);
      assertEquals("left join xP^t=b9( as #`n5W#BI=J%B on }C#W,Wv$ Z. = #`n5W#BI=J%B.#`n5W#BI=J%B and }C#W,Wv$ Z.truncate = #`n5W#BI=J%B.xP^t=b9( and }C#W,Wv$ Z.$nh{0 = #`n5W#BI=J%B.(, truncate, $nh{0, ) and }C#W,Wv$ Z. = #`n5W#BI=J%B.43Y19.U", string3);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.4471627089619605
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "9b41-";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "";
      stringArray0[7] = "";
      String string0 = SQLUtil.leftJoin("", stringArray0, "9b41-", "", stringArray0);
      assertEquals("left join 9b41- as  on . = . and . = . and .9b41- = .9b41- and . = . and . = . and . = . and . = . and . = .", string0);
      
      ConstraintDescriptorList constraintDescriptorList0 = new ConstraintDescriptorList();
      DataDictionaryImpl dataDictionaryImpl0 = new DataDictionaryImpl();
      dataDictionaryImpl0.getDataDescriptorGenerator();
      BasicUUID basicUUID0 = new BasicUUID((-5633L), (-692L), 189);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("w5xndk");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("", defaultDBTable0, 189, "drop table");
      String string1 = SQLUtil.ownerDotComponent(defaultDBColumn0);
      assertEquals("w5xndk.", string1);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.402886181440778
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[0] = "hrVxu4=i/.33";
      stringArray0[1] = "/*";
      stringArray0[2] = "B?<P%cF";
      stringArray0[3] = " on ";
      stringArray0[4] = "|7re?`^KX#ZX;]^n";
      stringArray0[5] = "org.h2.tools.TriggerAdapter";
      stringArray0[6] = "shutdown";
      SQLUtil.renderColumnListWithTableName("B?<P%cF", stringArray0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "B?<P%cF.hrVxu4=i/.33, B?<P%cF./*, B?<P%cF.B?<P%cF, B?<P%cF. on , B?<P%cF.|7re?`^KX#ZX;]^n, B?<P%cF.org.h2.tools.TriggerAdapter, B?<P%cF.shutdown, B?<P%cF.null", true, stringArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      StringBuilder stringBuilder0 = SQLUtil.createConstraintSpecBuilder(dBPrimaryKeyConstraint0, nameSpec0);
      // Undeclared exception!
      try { 
        stringBuilder0.insert(4, true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 4
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      String[] stringArray0 = new String[11];
      stringArray0[0] = "XhrVxu4;i/.33";
      stringArray0[1] = "/*";
      stringArray0[2] = "B?<P%cF";
      stringArray0[3] = " on ";
      StringBuilder stringBuilder0 = new StringBuilder(2440);
      StringBuilder stringBuilder1 = SQLUtil.addRequiredCondition("{,|k9kH:", stringBuilder0);
      int int0 = (-925);
      int int1 = 13;
      char[] charArray0 = new char[7];
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnTypeWithSize((DBColumn) null, stringBuilder1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.5981863871455344
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[0] = "hrVxu4=i/.33";
      stringArray0[1] = "/*";
      stringArray0[2] = "B?<P%cF";
      stringArray0[3] = " on ";
      stringArray0[4] = "|7re?`^KX#ZX;]^n";
      stringArray0[5] = "org.h2.tools.TriggerAdapter";
      stringArray0[6] = "shutdown";
      SQLUtil.renderColumnListWithTableName("B?<P%cF", stringArray0);
      System.setCurrentTimeMillis(0L);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.pkSpec((DBPrimaryKeyConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.184587612973726
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SQLUtil.normalize("org.apache.derby.impl.store.raw.data.ContainerHandleActionOnCommit", true);
      String string0 = SQLUtil.normalize("org.apache.derby.impl.store.raw.data.ContainerHandleActionOnCommit", true);
      assertEquals("org.apache.derby.impl.store.raw.data.ContainerHandleActionOnCommit", string0);
      
      boolean boolean0 = SQLUtil.isQuery("org.apache.derby.impl.store.raw.data.ContainerHandleActionOnCommit");
      assertFalse(boolean0);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "alter table";
      String string1 = SQLUtil.join("w;", "\"~Na,Z(qCt", stringArray0, "", "<\"D#ox0$|cvne9e", stringArray0);
      assertEquals("w; join  as <\"D#ox0$|cvne9e on \"~Na,Z(qCt.alter table = <\"D#ox0$|cvne9e.alter table", string1);
      
      boolean boolean1 = SQLUtil.isDML("\"~Na,Z(qCt");
      StringBuilder stringBuilder0 = new StringBuilder();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-109);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      StringBuilder stringBuilder1 = stringBuilder0.reverse();
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      stringBuilder0.append(stringBuffer0);
      StringBuilder stringBuilder2 = stringBuilder1.append("");
      stringBuilder1.insert(0, ",");
      SQLUtil.addOptionalCondition("w; join  as <\"D#ox0$|cvne9e on \"~Na,Z(qCt.alter table = <\"D#ox0$|cvne9e.alter table", stringBuilder2);
      boolean boolean2 = SQLUtil.isDDL("org.apache.derby.impl.store.raw.data.ContainerHandleActionOnCommit");
      assertTrue(boolean2 == boolean1);
      
      SQLUtil.normalize(",", false);
      DBDataType dBDataType0 = DBDataType.getInstance(1356, ")z");
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      Integer integer1 = RawTransaction.LOCK_ESCALATE;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("org.apache.derby.impl.store.raw.data.ContainerHandleActionOnCommit", (DBTable) null, dBDataType0, integer0, integer1);
      String string2 = SQLUtil.substituteMarkers(",", "18`0+>UY^j r(h", defaultDBColumn0);
      assertEquals(",", string2);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.765546593450912
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SQLUtil.removeComments("");
      SQLUtil.isDDL("");
      SQLUtil.parseColumnTypeAndSize("");
      String[] stringArray0 = new String[12];
      stringArray0[0] = "WRITE";
      stringArray0[1] = "";
      SQLUtil.join("WRITE", "\"~Na,Z(qCt", stringArray0, "", "", stringArray0);
      SQLUtil.isDML("WRITE");
      SQLUtil.innerJoin("drop tablenestedrawreadonlyusertransaction", stringArray0, "drop tablenestedrawreadonlyusertransaction", "ClassFactoryContext", stringArray0);
      SQLUtil.normalize("", true);
      SQLUtil.join("6vELo=v+Qe0+", "Z=~1Qg]", stringArray0, "create materialized view", ", ", stringArray0);
      SQLUtil.mutatesDataOrStructure("Z=~1Qg]");
      FromVTI fromVTI0 = new FromVTI();
      fromVTI0.getProperties();
      JdbcConnection jdbcConnection0 = null;
      try {
        jdbcConnection0 = new JdbcConnection("", (Properties) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid value  for parameter \"url\" [90008-136]
         //
         verifyException("org.h2.message.DbException", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.8816064979261793
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CompositeDBObject<DBUniqueConstraint> compositeDBObject0 = (CompositeDBObject<DBUniqueConstraint>) mock(CompositeDBObject.class, new ViolatedAssumptionAnswer());
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "LKp+u3R,B<";
      stringArray0[1] = "LKp+u3R,B<";
      stringArray0[2] = "3kyN9w40Czc @gD";
      stringArray0[3] = "3kyN9w40Czc @gD";
      stringArray0[4] = "LKp+u3R,B<";
      stringArray0[5] = "3kyN9w40Czc @gD";
      stringArray0[6] = "LKp+u3R,B<";
      stringArray0[7] = "LKp+u3R,B<";
      stringArray0[8] = "3kyN9w40Czc @gD";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "3kyN9w40Czc @gD", true, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("3kyN9w40Czc @gD", true, dBPrimaryKeyConstraint0);
      DBTable dBTable0 = dBUniqueIndex0.getTable();
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint1 = new DBPrimaryKeyConstraint(dBTable0, "LKp+u3R,B<", true, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String string0 = SQLUtil.pkSpec(dBPrimaryKeyConstraint1, nameSpec0);
      assertEquals("CONSTRAINT LKp+u3R,B< PRIMARY KEY (LKp+u3R,B<, LKp+u3R,B<, 3kyN9w40Czc @gD, 3kyN9w40Czc @gD, LKp+u3R,B<, 3kyN9w40Czc @gD, LKp+u3R,B<, LKp+u3R,B<, 3kyN9w40Czc @gD)", string0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("delete");
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("Pc38w]z");
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable1, "kDhflR7?cs", false, (String[]) null);
      dBPrimaryKeyConstraint0.setDoc("'");
      defaultDBTable1.setName("ZsZ]PlbUw?vV6dsZy;*");
      // Undeclared exception!
      try { 
        SQLUtil.mutatesStructure((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.180741921457773
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SQLUtil.isQuery("jIzK|8U\"v5F");
      SQLUtil.mutatesStructure("jIzK|8U\"v5F");
      SQLUtil.isDDL("jIzK|8U\"v5F");
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("{H0XL?mp.X}c5*&($J");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal column type format: {H0XL?mp.X}c5*&($J
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.6849091321632477
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      String string0 = "";
      SQLUtil.removeComments("");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "truncate";
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      SQLUtil.renderColumnNames(stringArray0);
      SQLUtil.innerJoin("", stringArray0, " REFERENCES ", "execbp h~h?p1q", stringArray0);
      SQLUtil.mutatesDataOrStructure(" REFERENCES  as execbp h~h?p1q on . = execbp h~h?p1q. and . = execbp h~h?p1q. and . = execbp h~h?p1q. and . = execbp h~h?p1q. and . = execbp h~h?p1q. and . = execbp h~h?p1q. and .truncate = execbp h~h?p1q.truncate");
      SQLUtil.isDML("");
      String[] stringArray1 = new String[5];
      stringArray1[0] = "";
      stringArray1[1] = "nW";
      stringArray1[2] = "drop tablenestedrawreadonlyusertransaction";
      // Undeclared exception!
      try { 
        SQLUtil.innerJoin("", stringArray0, "alter index", "IDvyt}N2z':A08srn", stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.577109631504228
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SQLUtil.isProcedureCall("jIzK|8U\"v5F");
      SQLUtil.mutatesStructure("jIzK|8U\"v5F");
      SQLUtil.isDDL("jIzK|8U\"v5F");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "`lcd";
      stringArray0[1] = "jIzK|8U\"v5F";
      stringArray0[3] = "Y`m;?N_Nw#R&[m7+CpZ";
      stringArray0[4] = "jIzK|8U\"v5F";
      stringArray0[5] = "jIzK|8U\"v5F";
      stringArray0[6] = "jIzK|8U\"v5F";
      SQLUtil.renderColumnNames(stringArray0);
      SQLUtil.innerJoin("jIzK|8U\"v5F", stringArray0, "`lcd", "jIzK|8U\"v5F", stringArray0);
      SQLUtil.mutatesDataOrStructure(" join ");
      SQLUtil.join((String) null, " =8_,1", stringArray0, "`lcd as jIzK|8U\"v5F on jIzK|8U\"v5F.`lcd = jIzK|8U\"v5F.`lcd and jIzK|8U\"v5F.jIzK|8U\"v5F = jIzK|8U\"v5F.jIzK|8U\"v5F and jIzK|8U\"v5F.null = jIzK|8U\"v5F.null and jIzK|8U\"v5F.Y`m;?N_Nw#R&[m7+CpZ = jIzK|8U\"v5F.Y`m;?N_Nw#R&[m7+CpZ and jIzK|8U\"v5F.jIzK|8U\"v5F = jIzK|8U\"v5F.jIzK|8U\"v5F and jIzK|8U\"v5F.jIzK|8U\"v5F = jIzK|8U\"v5F.jIzK|8U\"v5F and jIzK|8U\"v5F.jIzK|8U\"v5F = jIzK|8U\"v5F.jIzK|8U\"v5F", stringArray0[2], stringArray0);
      DataDictionaryImpl dataDictionaryImpl0 = new DataDictionaryImpl();
      BaseDataFileFactory baseDataFileFactory0 = new BaseDataFileFactory();
      baseDataFileFactory0.getIdentifier();
      ContainerKey containerKey0 = new ContainerKey(1149L, 1149L);
      // Undeclared exception!
      try { 
        baseDataFileFactory0.getContainerPath(containerKey0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.derby.impl.store.raw.data.BaseDataFileFactory", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.6991552455693384
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[0] = "NestedRawReadOnlyUserTansactin";
      String string0 = SQLUtil.renderWhereClause(stringArray0, stringArray0);
      String string1 = SQLUtil.normalize("NestedRawReadOnlyUserTansactin = 'NestedRawReadOnlyUserTansactin' AND null = null", false);
      assertTrue(string1.equals((Object)string0));
      
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("NestedRawReadOnlyUserTansactin = 'NestedRawReadOnlyUserTansactin' AND null = null");
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint(" x:YJYC<aFQ$", true, "card", "NestedRawReadOnlyUserTansactin = 'NestedRawReadOnlyUserTansactin' AND null = null");
      defaultDBTable0.addCheckConstraint(dBCheckConstraint0);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("NestedRawReadOnlyUserTansactin", defaultDBTable0, (-2673), "NestedRawReadOnlyUserTansactin");
      DBDataType dBDataType0 = DBDataType.getInstance((-2673), "?9O");
      defaultDBColumn0.setType(dBDataType0);
      String string2 = SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      assertEquals("?9O", string2);
      
      String[] stringArray1 = new String[2];
      stringArray1[0] = "NestedRawReadOnlyUserTansactin";
      stringArray1[1] = "insertr45_ruks|dmze=";
      DBNonUniqueIndex dBNonUniqueIndex0 = new DBNonUniqueIndex(" x:YJYC<aFQ$", true, defaultDBTable0, stringArray1);
      defaultDBTable0.addIndex(dBNonUniqueIndex0);
      defaultDBTable0.setDoc("insertr45_ruks|dmze=");
      defaultDBTable0.getPrimaryKeyConstraint();
      DefaultDBColumn defaultDBColumn1 = new DefaultDBColumn("insertr45_ruks|dmze=", defaultDBTable0, (-814), "insertr45_ruks|dmze=");
      DBColumn[] dBColumnArray0 = new DBColumn[7];
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[1] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[2] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[3] = (DBColumn) defaultDBColumn1;
      dBColumnArray0[4] = (DBColumn) defaultDBColumn1;
      dBColumnArray0[5] = (DBColumn) defaultDBColumn0;
      DBDataType dBDataType1 = DBDataType.getInstance((-814), "card");
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      DefaultDBColumn defaultDBColumn2 = new DefaultDBColumn("NestedRawReadOnlyUserTansactin", defaultDBTable0, dBDataType1, integer0, integer0);
      dBColumnArray0[6] = (DBColumn) defaultDBColumn2;
      String string3 = SQLUtil.renderColumnNames(dBColumnArray0);
      assertEquals("NestedRawReadOnlyUserTansactin, NestedRawReadOnlyUserTansactin, NestedRawReadOnlyUserTansactin, insertr45_ruks|dmze=, insertr45_ruks|dmze=, NestedRawReadOnlyUserTansactin, NestedRawReadOnlyUserTansactin", string3);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.148815922340797
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("org.ap:che.derby.iapiZsql.execute.EKecutiongontext");
      SQLUtil.mutatesStructure("org.antlr.runtime.tree.RewriteEmptyStreamException");
      SQLUtil.isProcedureCall("alter materialized view");
      SQLUtil.isQuery("alter materialized view");
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.7214787039105834
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Boolean boolean0 = Boolean.valueOf("jizk");
      BaseDataFileFactory baseDataFileFactory0 = new BaseDataFileFactory();
      Boolean.logicalOr(true, true);
      boolean boolean1 = SQLUtil.isProcedureCall("create table");
      assertFalse(boolean1);
      
      String string0 = SQLUtil.substituteMarkers("jizk", "create table", boolean0);
      assertEquals("jizk", string0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DBColumn[] dBColumnArray0 = new DBColumn[2];
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames(dBColumnArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[0] = "XhrVxu4;i/.33";
      stringArray0[1] = "/*";
      stringArray0[2] = "B?<P%cF";
      stringArray0[3] = " on ";
      TableContainer tableContainer0 = new TableContainer("updatewrite");
      tableContainer0.getTable("XhrVxu4;i/.33");
      Vector<DBColumn> vector0 = new Vector<DBColumn>();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) vector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      String string0 = "'";
      String[] stringArray0 = new String[8];
      DBSchema dBSchema0 = new DBSchema("~x5");
      DBPackage dBPackage0 = new DBPackage("~x5", dBSchema0);
      dBSchema0.addPackage(dBPackage0);
      dBSchema0.getTable("~x5");
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.renderCreateTable((DBTable) null, false, nameSpec0, (PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("delete");
      NameSpec nameSpec0 = NameSpec.NEVER;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("delete");
      Locale locale0 = Locale.UK;
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) defaultDBTable0;
      objectArray0[1] = (Object) defaultDBTable0;
      objectArray0[2] = (Object) locale0;
      PrintWriter printWriter0 = mockPrintWriter0.printf(locale0, "delete", objectArray0);
      SQLUtil.renderCreateTable(defaultDBTable0, true, nameSpec0, printWriter0);
      assertSame(mockPrintWriter0, printWriter0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      CompositeDBObject<DBUniqueConstraint> compositeDBObject0 = (CompositeDBObject<DBUniqueConstraint>) mock(CompositeDBObject.class, new ViolatedAssumptionAnswer());
      String[] stringArray0 = new String[9];
      stringArray0[0] = "LKp+u3R,B<";
      stringArray0[2] = "LKp+u3R,B<";
      stringArray0[3] = "LKp+u3R,B<";
      stringArray0[4] = "LKp+u3R,B<";
      stringArray0[5] = "<BNTmy";
      stringArray0[6] = "LKp+u3R,B<";
      stringArray0[7] = "LKp+u3R,B<";
      stringArray0[8] = "LKp+u3R,B<";
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) "LKp+u3R,B<";
      stringArray0[3] = "LKp+u3R,B<";
      objectArray0[2] = (Object) "<BNTmy";
      objectArray0[3] = (Object) "<BNTmy";
      objectArray0[4] = (Object) "LKp+u3R,B<";
      Object object0 = new Object();
      objectArray0[5] = object0;
      // Undeclared exception!
      try { 
        SQLUtil.renderQuery((DBTable) null, stringArray0, objectArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      String string0 = "'wQT";
      // Undeclared exception!
      try { 
        SQLUtil.addRequiredCondition("'wQT", (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      String[] stringArray0 = null;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause((String[]) null, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.710027779724208
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      SQLUtil.isProcedureCall("BP h~h?p1Q");
      SQLUtil.isDDL("alter materialized view");
      Object[] objectArray0 = SQLUtil.parseColumnTypeAndSize("derby.database.fullAccessUsers");
      assertEquals(1, objectArray0.length);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("x=&,Xbg5VGv)A%T)");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "x=&,Xbg5VGv)A%T)";
      String string0 = null;
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("&", true, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      defaultDBTable0.addForeignKey(dBForeignKeyConstraint0);
      defaultDBTable0.setDoc((String) null);
      stringArray0[1] = null;
      defaultDBTable0.getColumns();
      String string1 = "&HE}Xn/v_5R";
      DBCatalog dBCatalog0 = new DBCatalog("&HE}Xn/v_5R");
      dBCatalog0.getSchema("x=&,Xbg5VGv)A%T)");
      defaultDBTable0.setSchema((DBSchema) null);
      stringArray0[2] = null;
      DBForeignKeyConstraint dBForeignKeyConstraint1 = new DBForeignKeyConstraint((String) null, true, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      dBForeignKeyConstraint1.setOwner(dBCatalog0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      SQLUtil.fkSpec(dBForeignKeyConstraint1, nameSpec0);
      // Undeclared exception!
      try { 
        SQLUtil.isDML(stringArray0[2]);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.8816064979261793
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      CompositeDBObject<DBUniqueConstraint> compositeDBObject0 = (CompositeDBObject<DBUniqueConstraint>) mock(CompositeDBObject.class, new ViolatedAssumptionAnswer());
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "LKp+u3R,B<";
      stringArray0[1] = "LKp+u3R,B<";
      stringArray0[2] = "3kyN9w40Czc @gD";
      stringArray0[3] = "3kyN9w40Czc @gD";
      stringArray0[4] = "LKp+u3R,B<";
      stringArray0[5] = "3kyN9w40Czc @gD";
      stringArray0[6] = "LKp+u3R,B<";
      stringArray0[7] = "LKp+u3R,B<";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "3kyN9w40Czc @gD", true, stringArray0);
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint1 = new DBPrimaryKeyConstraint(defaultDBTable0, " NOT", true, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("3kyN9w40Czc @gD", true, dBPrimaryKeyConstraint1);
      DBTable dBTable0 = dBUniqueIndex0.getTable();
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint2 = new DBPrimaryKeyConstraint(dBTable0, "3kyN9w40Czc @gD", true, stringArray0);
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint3 = defaultDBTable0.getPrimaryKeyConstraint();
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String string0 = SQLUtil.pkSpec(dBPrimaryKeyConstraint3, nameSpec0);
      assertEquals("CONSTRAINT \"3kyN9w40Czc @gD\" PRIMARY KEY (LKp+u3R,B<, LKp+u3R,B<, 3kyN9w40Czc @gD, 3kyN9w40Czc @gD, LKp+u3R,B<, 3kyN9w40Czc @gD, LKp+u3R,B<, LKp+u3R,B<, )", string0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.0730116670092564
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      String string0 = "JAVA_CLASS";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("JAVA_CLASS");
      String[] stringArray0 = new String[3];
      String string1 = "lI\\Yy-:BY?h~[yL6b.*";
      stringArray0[0] = "lIYy-:BY?h~[yL6b.*";
      stringArray0[1] = "]&u";
      stringArray0[2] = "JAVA_CLASS";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "]&u", true, stringArray0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) dBUniqueConstraint0, (StringBuilder) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      String string0 = "delete";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("delete");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("delete");
      Locale locale0 = Locale.UK;
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) defaultDBTable0;
      boolean boolean0 = true;
      String[] stringArray0 = new String[6];
      stringArray0[0] = "delete";
      stringArray0[1] = null;
      stringArray0[2] = "delete";
      stringArray0[3] = "delete";
      stringArray0[4] = "delete";
      stringArray0[5] = "delete";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, (String) null, true, stringArray0);
      StringBuilder stringBuilder0 = new StringBuilder();
      StringBuilder stringBuilder1 = SQLUtil.addOptionalCondition("y0DMOCET", stringBuilder0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      stringBuilder1.chars();
      SQLUtil.appendConstraintName((DBConstraint) dBUniqueConstraint0, stringBuilder1, nameSpec0);
      StringBuffer stringBuffer0 = null;
      // Undeclared exception!
      try { 
        stringBuilder0.insert((-238046427), (CharSequence) null, (-1105), 267);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // dstOffset -238046427
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      int int0 = 2440;
      StringBuilder stringBuilder0 = new StringBuilder(2440);
      StringBuilder stringBuilder1 = stringBuilder0.append((String) null);
      SQLUtil.addRequiredCondition(" on ", stringBuilder1);
      // Undeclared exception!
      try { 
        stringBuilder1.insert(2440, (long) 2440);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2440
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      String string0 = null;
      Integer integer0 = new Integer(2295);
      // Undeclared exception!
      try { 
        SQLUtil.substituteMarkers((String) null, "create unique indexon", integer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.353363451324745
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("delete");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("delete");
      Locale locale0 = Locale.UK;
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) defaultDBTable0;
      objectArray0[1] = (Object) defaultDBTable0;
      objectArray0[2] = (Object) locale0;
      Vector<DBColumn> vector0 = new Vector<DBColumn>();
      GenericDescriptorList genericDescriptorList0 = new GenericDescriptorList();
      DBDataType dBDataType0 = DBDataType.getInstance((-1091598173), "delete");
      Integer integer0 = RawTransaction.ABORT;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("delete", (DBTable) null, dBDataType0, integer0, integer0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = ">S<|oq";
      stringArray0[1] = "updateNCharacterStream(int, Reader, long)";
      stringArray0[2] = "org.apache.derby.iapi.types.J2SEDataValueFactory";
      stringArray0[3] = "?[>m@#h`M%ZV@E&";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "?[>m@#h`M%ZV@E&", true, stringArray0);
      String string0 = SQLUtil.substituteMarkers("delete", "delete", dBUniqueConstraint0);
      assertEquals("CONSTRAINT ?[>m@#h`M%ZV@E& UNIQUE (>S<|oq, updateNCharacterStream(int, Reader, long), org.apache.derby.iapi.types.J2SEDataValueFactory, ?[>m@#h`M%ZV@E&)", string0);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.394714983677679
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema("~x5");
      SQLUtil.isProcedureCall("):G-qu(oA'Tu#xm`L`(");
      // Undeclared exception!
      try { 
        SQLUtil.isDDL((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("JAVA_CLASS");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "lIYy-:BY?h~[yL6b.*";
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.fkSpec((DBForeignKeyConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.432813901625505
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      SQLUtil.isProcedureCall("jIzK|8U\"v5F");
      String string0 = "CONSTRAINT ";
      String string1 = ".&}[C{v&+%";
      // Undeclared exception!
      try { 
        SQLUtil.join("jIzK|8U\"v5F", "jIzK|8U\"v5F", (String[]) null, (String) null, ".&}[C{v&+%", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.constraintName((DBConstraint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.0605706572811844
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      DBCatalog dBCatalog0 = new DBCatalog("W8!w^xpz~");
      SQLUtil.typeAndName(dBCatalog0);
      SQLUtil sQLUtil0 = new SQLUtil();
      boolean boolean0 = true;
      SQLUtil.normalize("W8!w^xpz~", true);
      String string0 = "acjIkIfq7{|44B9";
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "W8!w^xpz~");
      SQLUtil.addOptionalCondition("acjIkIfq7{|44B9", stringBuilder0);
      // Undeclared exception!
      try { 
        SQLUtil.addOptionalCondition("A*R-)XJ", (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      System.setCurrentTimeMillis(2837L);
      String string0 = "p";
      SQLUtil.parseColumnTypeAndSize("p");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "p";
      stringArray0[1] = "=?";
      stringArray0[2] = "drop materialized view";
      stringArray0[3] = "p";
      stringArray0[4] = "drop materialized view";
      stringArray0[5] = "drop materialized view";
      stringArray0[6] = "drop materialized view";
      stringArray0[7] = "drop materialized view";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "drop materialized view", false, stringArray0);
      SQLUtil.typeAndName(dBPrimaryKeyConstraint0);
      StringBuilder stringBuilder0 = new StringBuilder("UNIQUE ");
      StringBuilder stringBuilder1 = stringBuilder0.reverse();
      StringBuilder stringBuilder2 = stringBuilder1.append((Object) "p");
      // Undeclared exception!
      try { 
        stringBuilder2.deleteCharAt(4118);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 4118
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.5985152433458726
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      SQLUtil.normalize("org.apache.derby.impl.store.raw.data.ContainerHandleActionOnCommit", true);
      Boolean boolean0 = new Boolean("org.apache.derby.impl.sql.compile.RowOrderingImpl");
      // Undeclared exception!
      try { 
        SQLUtil.renderNumber((StreamTokenizer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.9582149311117809
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      String string0 = "W8!w^xpz~";
      DBCatalog dBCatalog0 = new DBCatalog();
      SQLUtil.typeAndName(dBCatalog0);
      SQLUtil sQLUtil0 = new SQLUtil();
      SQLUtil.normalize("W8!w^xpz~", true);
      TransactionTable transactionTable0 = null;
      try {
        transactionTable0 = new TransactionTable();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.derby.impl.store.raw.xact.TransactionTable", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      SQLUtil.typeAndName((DBObject) null);
      TableContainer tableContainer0 = new TableContainer((String) null);
      tableContainer0.getTable((String) null);
      // Undeclared exception!
      try { 
        DBDataType.getInstance("drop indexr45_ruks|dmze=");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.model.DBDataType", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      String string0 = null;
      StringBuilder stringBuilder0 = new StringBuilder("u\"lR>,*-okLM");
      StringBuilder stringBuilder1 = SQLUtil.addRequiredCondition("u\"lR>,*-okLM", stringBuilder0);
      stringBuilder0.append((String) null);
      StringBuilder stringBuilder2 = SQLUtil.addOptionalCondition((String) null, stringBuilder1);
      int int0 = 1300;
      stringBuilder0.codePoints();
      // Undeclared exception!
      try { 
        stringBuilder2.insert(1300, "u\"lR>,*-okLM");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1300
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.0741666991180168
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      String string0 = "";
      SQLUtil.isDML("");
      SQLUtil.renderValue("");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "''";
      stringArray0[1] = "";
      stringArray0[2] = "''";
      stringArray0[3] = "''";
      stringArray0[4] = "''";
      String string1 = "W<;Xt^9KS_lj@#g[";
      stringArray0[5] = "W<;Xt^9KS_lj@#g[";
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      DBConstraint dBConstraint0 = null;
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.createConstraintSpecBuilder((DBConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.7214787039105834
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      String string0 = "W8!w^xpz~";
      DBCatalog dBCatalog0 = new DBCatalog();
      SQLUtil.typeAndName(dBCatalog0);
      dBCatalog0.getSchemas();
      SQLUtil sQLUtil0 = new SQLUtil();
      SQLUtil.removeComments("catalog null");
      SQLUtil.renderValue(dBCatalog0);
      TransactionTable transactionTable0 = null;
      try {
        transactionTable0 = new TransactionTable();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.derby.impl.store.raw.xact.TransactionTable", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=0.913675928962369
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      SQLUtil.removeComments("execute");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Character character0 = Character.valueOf('!');
      Character.highSurrogate(Integer.MIN_VALUE);
      String string0 = SQLUtil.renderValue(character0);
      assertEquals("'!'", string0);
      
      String string1 = SQLUtil.normalize("create materialized view", false);
      assertEquals("create materialized view", string1);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "d*qFE~%";
      stringArray0[1] = "";
      stringArray0[3] = "~x5";
      stringArray0[4] = "~x5";
      stringArray0[5] = "d*qFE~%";
      DBCatalog dBCatalog0 = new DBCatalog("+#");
      DBSchema dBSchema0 = new DBSchema("alter index", dBCatalog0);
      dBSchema0.toString();
      NameSpec nameSpec0 = NameSpec.NEVER;
      // Undeclared exception!
      try { 
        SQLUtil.ukSpec((DBUniqueConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.3120076729259056
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("org.apache.derby.iapi.sql.execute.ExecutionContext");
      CompositeDBObject<DBForeignKeyConstraint> compositeDBObject0 = (CompositeDBObject<DBForeignKeyConstraint>) mock(CompositeDBObject.class, new ViolatedAssumptionAnswer());
      TableContainer tableContainer0 = new TableContainer(", ", compositeDBObject0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = ", ";
      stringArray0[1] = "org.apache.derby.iapi.sql.execute.ExecutionContext";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, ", ", true, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("org.apache.derby.iapi.sql.execute.ExecutionContext", true, dBPrimaryKeyConstraint0);
      DBUniqueIndex dBUniqueIndex1 = new DBUniqueIndex("", true, dBPrimaryKeyConstraint0);
      DBTable dBTable0 = dBUniqueIndex1.getTable();
      String[] stringArray1 = new String[7];
      stringArray1[0] = "delete";
      stringArray1[1] = ", ";
      stringArray1[2] = "org.apache.derby.iapi.sql.execute.ExecutionContext";
      stringArray1[3] = ":charLength=";
      String string0 = SQLUtil.renderQuery(dBTable0, stringArray0, stringArray1);
      assertEquals("SELECT * FROM org.apache.derby.iapi.sql.execute.ExecutionContext WHERE ,  = 'delete' AND org.apache.derby.iapi.sql.execute.ExecutionContext = ', '", string0);
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[2] = "d*qFE~%";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "~x5";
      stringArray0[4] = "~x5";
      CompositeDBObject<DBPrimaryKeyConstraint> compositeDBObject0 = (CompositeDBObject<DBPrimaryKeyConstraint>) mock(CompositeDBObject.class, new ViolatedAssumptionAnswer());
      TableContainer tableContainer0 = new TableContainer("~x5", compositeDBObject0);
      tableContainer0.getTable("poN=m!vRY'EP<");
      // Undeclared exception!
      try { 
        SQLUtil.ownerDotComponent((DBObject) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.1049561813316413
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      String string0 = "";
      SQLUtil.removeComments("");
      SQLUtil.isDDL("");
      SQLUtil.parseColumnTypeAndSize("");
      String string1 = "\"~Na,Z\\(qCt";
      String string2 = "DgDRm&d';}OfA";
      String[] stringArray0 = null;
      String string3 = "providerName";
      // Undeclared exception!
      try { 
        SQLUtil.leftJoin("DkHXg+qF", (String[]) null, "DgDRm&d';}OfA", "xP{;}.>/`W", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      VersionNumber versionNumber0 = VersionNumber.valueOf("c-4\u0001");
      DefaultDatabase defaultDatabase0 = new DefaultDatabase("{O<9wK!", " NULL", versionNumber0);
      defaultDatabase0.getTable("ending transaction xid = ", false);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("ending transaction xid = ", (DBTable) null, (-252566213), "{O<9wK!");
      String string0 = SQLUtil.ownerDotComponent(defaultDBColumn0);
      assertEquals("ending transaction xid = ", string0);
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.1641933683302232
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      String[] stringArray0 = new String[6];
      stringArray0[0] = "9b41-";
      stringArray0[1] = "select intoreferences as execbp h~h?p1q on . = execbp h~h?p1q. and . = execbp h~h?p1q. and . = execbp h~h?p1q. and . = execbp h~h?p1q. and . = execbp h~h?p1q. and . = execbp h~h?p1q. and .truncate = execbp h~h?p1q.truncate";
      stringArray0[2] = "(zRV5;   P`K]XF:'m8";
      stringArray0[3] = "9b41-";
      stringArray0[4] = "9b41-";
      stringArray0[5] = "(zRV5;   P`K]XF:'m8";
      SQLUtil.leftJoin("9b41-", stringArray0, "select intoreferences as execbp h~h?p1q on . = execbp h~h?p1q. and . = execbp h~h?p1q. and . = execbp h~h?p1q. and . = execbp h~h?p1q. and . = execbp h~h?p1q. and . = execbp h~h?p1q. and .truncate = execbp h~h?p1q.truncate", "9b41-", stringArray0);
      ConstraintDescriptorList constraintDescriptorList0 = new ConstraintDescriptorList();
      DataDictionaryImpl dataDictionaryImpl0 = new DataDictionaryImpl();
      dataDictionaryImpl0.getDataDescriptorGenerator();
      BasicUUID basicUUID0 = new BasicUUID((-5633L), 1L, (-1227));
      Vector<DBColumn> vector0 = new Vector<DBColumn>();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) constraintDescriptorList0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.6854770775933767
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      String[] stringArray0 = new String[6];
      stringArray0[0] = "NestedRawReadOnlyUserTransaction";
      SQLUtil.isProcedureCall("NestedRawReadOnlyUserTransaction");
      SQLUtil.join("79j3<3&d2", "NestedRawReadOnlyUserTransaction", stringArray0, "U", "79j3<3&d2", stringArray0);
      SQLUtil.isDML("r45_,uk");
      StringBuilder stringBuilder0 = new StringBuilder();
      stringBuilder0.reverse();
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.getBuffer();
      ContextService contextService0 = null;
      try {
        contextService0 = new ContextService();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.derby.iapi.services.monitor.Monitor", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[6];
      stringArray0[4] = "CASCADE";
      defaultDBTable0.setName("ZsZ]PlbUw?vV6dsZy;*");
      // Undeclared exception!
      try { 
        SQLUtil.isQuery(stringArray0[0]);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.78446788862603
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      String string0 = "#Fb6vq;H+y%a\\w7(";
      SQLUtil.isProcedureCall("#Fb6vq;H+y%aw7(");
      SQLUtil.mutatesStructure("#Fb6vq;H+y%aw7(");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      // Undeclared exception!
      try { 
        SQLUtil.isProcedureCall((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.329702497769252
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      Boolean boolean0 = new Boolean("jIzK|8U\"v5F");
      SQLUtil.mutatesStructure("jIzK|8U\"v5F");
      SQLUtil.isProcedureCall("jIzK|8U\"v5F");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("<~w]IlKC");
      defaultDBTable0.setName("create t");
      SQLUtil.isQuery("<~w]IlKC");
      SQLUtil.mutatesStructure("create unique index");
      JdbcConnectionPool jdbcConnectionPool0 = JdbcConnectionPool.create("drop materialized view", "create t", (String) null);
      jdbcConnectionPool0.getLogWriter();
      Boolean boolean1 = SQLUtil.mutatesDataOrStructure("jIzK|8U\"v5F");
      assertNull(boolean1);
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.5981863871455344
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[0];
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, ", ", false, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex(", ", false, dBPrimaryKeyConstraint0);
      dBUniqueIndex0.getTable();
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint1 = new DBPrimaryKeyConstraint(defaultDBTable0, ", ", true, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String string0 = SQLUtil.pkSpec(dBPrimaryKeyConstraint0, nameSpec0);
      assertEquals("PRIMARY KEY ()", string0);
  }
}
