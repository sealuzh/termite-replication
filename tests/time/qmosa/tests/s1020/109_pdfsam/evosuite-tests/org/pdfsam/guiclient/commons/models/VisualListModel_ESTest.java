/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 04:58:22 GMT 2019
 */

package org.pdfsam.guiclient.commons.models;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.RenderingHints;
import java.awt.event.ActionEvent;
import java.awt.event.FocusEvent;
import java.awt.geom.AffineTransform;
import java.awt.image.AffineTransformOp;
import java.awt.image.BufferedImage;
import java.awt.image.ByteLookupTable;
import java.awt.image.ConvolveOp;
import java.awt.image.Kernel;
import java.awt.image.LookupOp;
import java.awt.image.ShortLookupTable;
import java.io.PipedInputStream;
import java.util.Collection;
import java.util.ConcurrentModificationException;
import java.util.HashSet;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.Stack;
import java.util.Vector;
import java.util.function.BiFunction;
import javax.media.jai.operator.FPXDescriptor;
import javax.media.jai.operator.IIPResolutionDescriptor;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JLayeredPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.DefaultCaret;
import javax.swing.text.DefaultEditorKit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.pdfsam.guiclient.commons.models.VisualListModel;
import org.pdfsam.guiclient.dto.VisualPageListItem;
import sun.awt.SunHints;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class VisualListModel_ESTest extends VisualListModel_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.559315995941662
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[23];
      visualListModel0.rotateClockwiseElements(intArray0);
      intArray0[0] = 7;
      visualListModel0.moveUpIndex(7);
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = (-52);
      intArray0[4] = 0;
      intArray0[5] = (-52);
      intArray0[6] = (-556);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.clearData();
      visualListModel0.clearData();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.prependAllElements(vector0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.reverseElements(intArray0);
      vector0.listIterator();
      Collection<VisualPageListItem> collection0 = visualListModel0.subList(0, 0, true);
      assertNotNull(collection0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.286742642027288
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 26;
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      VisualPageListItem visualPageListItem0 = null;
      stack0.add((VisualPageListItem) null);
      visualListModel0.updateElementAt(26, (VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
      VisualPageListItem[] visualPageListItemArray0 = visualListModel0.getElements();
      stack0.add((VisualPageListItem) null);
      Integer[] integerArray0 = new Integer[7];
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      integerArray0[3] = integer0;
      Integer integer1 = JLayeredPane.FRAME_CONTENT_LAYER;
      integerArray0[1] = integer1;
      Integer integer2 = IIPResolutionDescriptor.MAX_RESOLUTION;
      integerArray0[2] = integer2;
      Integer integer3 = JLayeredPane.DEFAULT_LAYER;
      integerArray0[3] = integer3;
      Integer integer4 = JLayeredPane.POPUP_LAYER;
      visualListModel0.prependAllElements(stack0);
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      Vector<VisualPageListItem> vector1 = visualListModel0.data;
      visualListModel0.setData(visualPageListItemArray0);
      VisualPageListItem visualPageListItem1 = null;
      try {
        visualPageListItem1 = new VisualPageListItem(50);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.data = null;
      int int0 = 26;
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      VisualPageListItem visualPageListItem0 = null;
      stack0.add((VisualPageListItem) null);
      // Undeclared exception!
      try { 
        visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.922685393561663
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex(26);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
      visualListModel0.getElements();
      int[] intArray0 = new int[1];
      Integer[] integerArray0 = new Integer[10];
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      integerArray0[3] = integer0;
      Integer integer1 = JLayeredPane.FRAME_CONTENT_LAYER;
      integerArray0[1] = integer1;
      Integer.compareUnsigned(2571, (int) integerArray0[3]);
      Integer integer2 = JLayeredPane.POPUP_LAYER;
      integerArray0[2] = integer2;
      Integer integer3 = JLayeredPane.DEFAULT_LAYER;
      Integer integer4 = JLayeredPane.POPUP_LAYER;
      integerArray0[4] = integer4;
      Integer integer5 = JLayeredPane.MODAL_LAYER;
      integerArray0[5] = integer5;
      Integer integer6 = new Integer((int) integerArray0[4]);
      integerArray0[6] = integer6;
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(integerArray0);
      intArray0[0] = 26;
      try { 
        visualListModel0.reverseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 26
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.0473092967465583
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 26;
      visualListModel0.moveDownIndex(26);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      VisualPageListItem visualPageListItem0 = null;
      stack0.add((VisualPageListItem) null);
      visualListModel0.updateElementAt(26, (VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
      visualListModel0.getElements();
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer integer1 = JLayeredPane.POPUP_LAYER;
      int[] intArray0 = new int[1];
      intArray0[0] = 26;
      try { 
        visualListModel0.removeElements(intArray0, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 26
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.282697641452146
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex(26);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.updateElementAt(26, (VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
      visualListModel0.getElements();
      int[] intArray0 = new int[1];
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
      visualListModel0.getElements();
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer integer1 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer integer2 = JLayeredPane.POPUP_LAYER;
      visualListModel0.removeElements(intArray0, true);
      visualListModel0.updateElementAt(2167, (VisualPageListItem) null);
      // Undeclared exception!
      try { 
        visualListModel0.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.0941693886928134
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex(26);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.updateElementAt(26, (VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
      visualListModel0.getElements();
      int[] intArray0 = new int[1];
      Integer[] integerArray0 = new Integer[7];
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      integerArray0[3] = integer0;
      Integer integer1 = JLayeredPane.FRAME_CONTENT_LAYER;
      integerArray0[1] = integer1;
      Integer integer2 = JLayeredPane.POPUP_LAYER;
      integerArray0[2] = integer2;
      Integer integer3 = JLayeredPane.DEFAULT_LAYER;
      Integer integer4 = JLayeredPane.POPUP_LAYER;
      integerArray0[4] = integer4;
      Integer integer5 = JLayeredPane.MODAL_LAYER;
      integerArray0[5] = integer5;
      Integer integer6 = new Integer((int) integerArray0[4]);
      Integer.getInteger("", (-2069));
      integerArray0[6] = integer6;
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(integerArray0);
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.2879917301334416
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = (-1);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.data = (Vector<VisualPageListItem>) stack0;
      VisualPageListItem visualPageListItem0 = null;
      visualListModel0.removeElements((-1), (-1), false);
      visualListModel0.getElements();
      visualListModel0.updateElementAt((-1), (VisualPageListItem) null);
      visualListModel0.elementsChanged();
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      visualListModel0.clearData();
      int int1 = 0;
      stack0.add((VisualPageListItem) null);
      // Undeclared exception!
      try { 
        visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) stack0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Vector$Itr", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.1916014530643806
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex(26);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      visualListModel0.updateElementAt(26, (VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
      visualListModel0.getElements();
      int[] intArray0 = new int[1];
      Integer[] integerArray0 = new Integer[7];
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      integerArray0[0] = integer0;
      Integer integer1 = JLayeredPane.FRAME_CONTENT_LAYER;
      integerArray0[1] = integer1;
      Integer integer2 = JLayeredPane.POPUP_LAYER;
      integerArray0[2] = integer2;
      Integer integer3 = JLayeredPane.DEFAULT_LAYER;
      integerArray0[3] = integer3;
      Integer integer4 = JLayeredPane.POPUP_LAYER;
      integerArray0[4] = integer4;
      Integer integer5 = JLayeredPane.MODAL_LAYER;
      integerArray0[5] = integer5;
      Integer integer6 = new Integer((-1078));
      Integer.compareUnsigned((int) integerArray0[3], (int) integerArray0[5]);
      Integer.getInteger("org.pdfsam.guiclient.commons.models.VisualListModel");
      integerArray0[6] = integer6;
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(integerArray0);
      visualListModel0.addListDataListener(jComboBox0);
      visualListModel0.reverseElements(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.2761809225159486
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex(26);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.updateElementAt(26, (VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
      visualListModel0.getElements();
      int[] intArray0 = new int[1];
      Integer[] integerArray0 = new Integer[7];
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      integerArray0[3] = integer0;
      Integer integer1 = JLayeredPane.FRAME_CONTENT_LAYER;
      integerArray0[1] = integer1;
      Integer integer2 = JLayeredPane.POPUP_LAYER;
      integerArray0[2] = integer2;
      Integer integer3 = JLayeredPane.DEFAULT_LAYER;
      visualListModel0.moveDownIndexes(intArray0);
      Integer integer4 = JLayeredPane.POPUP_LAYER;
      integerArray0[4] = integer4;
      Integer integer5 = JLayeredPane.MODAL_LAYER;
      integerArray0[5] = integer5;
      Integer integer6 = new Integer((int) integerArray0[4]);
      integerArray0[6] = integer6;
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(integerArray0);
      intArray0[0] = 26;
      int[] intArray1 = new int[7];
      intArray1[0] = (int) integerArray0[4];
      try { 
        visualListModel0.removeElements(intArray0, true);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // toIndex = 27
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.998260930975681
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex(26);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.updateElementAt(26, (VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
      visualListModel0.getElements();
      int[] intArray0 = new int[1];
      Integer[] integerArray0 = new Integer[7];
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      integerArray0[3] = integer0;
      Integer integer1 = JLayeredPane.FRAME_CONTENT_LAYER;
      integerArray0[1] = integer1;
      Integer integer2 = JLayeredPane.POPUP_LAYER;
      integerArray0[2] = integer2;
      Integer integer3 = JLayeredPane.DEFAULT_LAYER;
      Integer integer4 = JLayeredPane.POPUP_LAYER;
      integerArray0[4] = integer4;
      Integer integer5 = JLayeredPane.MODAL_LAYER;
      integerArray0[5] = integer5;
      Integer integer6 = new Integer((int) integerArray0[4]);
      Integer.getInteger("", (-2069));
      integerArray0[6] = integer6;
      visualListModel0.reverseElements(intArray0);
      assertArrayEquals(new int[] {0}, intArray0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.5743631318055766
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex(26);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.updateElementAt(26, (VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
      visualListModel0.getElements();
      int[] intArray0 = new int[1];
      Integer[] integerArray0 = new Integer[7];
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      integerArray0[3] = integer0;
      Integer integer1 = JLayeredPane.FRAME_CONTENT_LAYER;
      integerArray0[1] = integer1;
      Integer integer2 = JLayeredPane.POPUP_LAYER;
      integerArray0[2] = integer2;
      Integer integer3 = JLayeredPane.DEFAULT_LAYER;
      integerArray0[3] = integer3;
      Integer integer4 = JLayeredPane.POPUP_LAYER;
      integerArray0[4] = integer4;
      Integer integer5 = JLayeredPane.MODAL_LAYER;
      integerArray0[5] = integer5;
      Integer integer6 = new Integer((-1078));
      Integer.max((int) integerArray0[4], (-1178));
      integerArray0[6] = integerArray0[2];
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(integerArray0);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      FocusEvent focusEvent0 = new FocusEvent(jComboBox0, 0);
      defaultCaret0.focusLost(focusEvent0);
      jComboBox0.removeMouseMotionListener(defaultCaret0);
      visualListModel0.removeElements(intArray0, true);
      visualListModel0.addListDataListener(jComboBox0);
      intArray0[0] = 26;
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.getValidElements();
      Object object0 = visualListModel0.getElementAt(1);
      assertNull(object0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.5743631318055766
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex(26);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      VisualPageListItem visualPageListItem0 = null;
      stack0.add((VisualPageListItem) null);
      visualListModel0.updateElementAt(26, (VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
      VisualPageListItem[] visualPageListItemArray0 = visualListModel0.getElements();
      int[] intArray0 = new int[1];
      Integer[] integerArray0 = new Integer[7];
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      integerArray0[3] = integer0;
      Integer integer1 = JLayeredPane.FRAME_CONTENT_LAYER;
      integerArray0[1] = integer1;
      Integer integer2 = JLayeredPane.POPUP_LAYER;
      int[] intArray1 = new int[6];
      intArray1[0] = (int) integerArray0[3];
      intArray1[1] = (int) integerArray0[3];
      intArray1[2] = 2830;
      intArray1[3] = (int) integerArray0[1];
      intArray1[4] = (-1363);
      intArray1[5] = (-659);
      visualListModel0.undeleteElements(intArray1);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.setData(visualPageListItemArray0);
      VisualPageListItem visualPageListItem1 = null;
      try {
        visualPageListItem1 = new VisualPageListItem((-30000));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      HashSet<Object> hashSet0 = new HashSet<Object>();
      visualListModel0.clearData();
      int[] intArray0 = new int[0];
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      Object object0 = new Object();
      vector0.remove(object0);
      Vector<VisualPageListItem> vector1 = visualListModel0.data;
      visualListModel0.rotateClockwiseElements(intArray0);
      int[] intArray1 = new int[6];
      intArray1[0] = 2332;
      intArray1[1] = 1;
      intArray1[2] = 737;
      intArray1[3] = 1;
      intArray1[4] = 841;
      intArray1[5] = 1339;
      visualListModel0.reverseElements(intArray1);
      assertArrayEquals(new int[] {2332, 1, 737, 1, 841, 1339}, intArray1);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.576408258700284
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex((-1));
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.updateElementAt((-1), (VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
      visualListModel0.appendAllElements(stack0);
      visualListModel0.getElements();
      int[] intArray0 = new int[5];
      intArray0[0] = (-1);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.removeElements(intArray0, false);
      visualListModel0.rotateClockwiseElements(intArray0);
      stack0.clone();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_STROKE_CONTROL;
      DefaultEditorKit.InsertContentAction defaultEditorKit_InsertContentAction0 = new DefaultEditorKit.InsertContentAction();
      RenderingHints renderingHints0 = new RenderingHints(sunHints_Key0, defaultEditorKit_InsertContentAction0);
      visualListModel0.removeElementAt(1, true);
      assertEquals(1, visualListModel0.getSize());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.0941693886928134
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex(26);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.updateElementAt(26, (VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
      visualListModel0.getElements();
      int[] intArray0 = new int[1];
      Integer[] integerArray0 = new Integer[7];
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      integerArray0[0] = integer0;
      Integer integer1 = JLayeredPane.FRAME_CONTENT_LAYER;
      integerArray0[1] = integer1;
      Integer integer2 = JLayeredPane.POPUP_LAYER;
      integerArray0[2] = integer2;
      Integer integer3 = JLayeredPane.DEFAULT_LAYER;
      integerArray0[3] = integer3;
      Integer integer4 = JLayeredPane.POPUP_LAYER;
      integerArray0[4] = integer4;
      Integer integer5 = JLayeredPane.MODAL_LAYER;
      integerArray0[5] = integer5;
      Integer integer6 = new Integer((-1078));
      integerArray0[6] = integerArray0[3];
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(integerArray0);
      visualListModel0.addListDataListener(jComboBox0);
      // Undeclared exception!
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.5574502480119636
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex(26);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      VisualPageListItem visualPageListItem0 = null;
      stack0.add((VisualPageListItem) null);
      visualListModel0.updateElementAt(26, (VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
      VisualPageListItem[] visualPageListItemArray0 = visualListModel0.getElements();
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.moveUpIndex(26);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_STROKE_CONTROL;
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      RenderingHints renderingHints0 = new RenderingHints(sunHints_Key0, integer0);
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      Integer integer1 = JLayeredPane.POPUP_LAYER;
      Integer.max(7, 7);
      RenderingHints renderingHints1 = new RenderingHints(sunHints_Key0, integer1);
      visualListModel0.setData(visualPageListItemArray0);
      VisualPageListItem visualPageListItem1 = null;
      try {
        visualPageListItem1 = new VisualPageListItem(455);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.3597473990481395
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.elementChanged((VisualPageListItem) null);
      visualListModel0.elementsChanged();
      visualListModel0.getSize();
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.moveUpIndex(1);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_STROKE_CONTROL;
      RenderingHints renderingHints0 = new RenderingHints(sunHints_Key0, sunHints_Key0);
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      RenderingHints renderingHints1 = new RenderingHints(sunHints_Key1, sunHints_Key0);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)96;
      byteArray0[1] = (byte)2;
      byteArray0[2] = (byte) (-95);
      ByteLookupTable byteLookupTable0 = new ByteLookupTable(998, byteArray0);
      RenderingHints renderingHints2 = new RenderingHints(sunHints_Key1, renderingHints0);
      LookupOp lookupOp0 = new LookupOp(byteLookupTable0, renderingHints1);
      visualListModel0.moveDownIndex((byte)96);
      int int0 = visualListModel0.getSize();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.0941693886928134
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex(26);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.updateElementAt(26, (VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
      visualListModel0.getElements();
      int[] intArray0 = new int[1];
      Integer[] integerArray0 = new Integer[7];
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      integerArray0[3] = integer0;
      Integer integer1 = JLayeredPane.FRAME_CONTENT_LAYER;
      integerArray0[1] = integer1;
      Integer.toUnsignedLong(1879);
      Integer integer2 = JLayeredPane.POPUP_LAYER;
      integerArray0[2] = integer2;
      Integer integer3 = JLayeredPane.DEFAULT_LAYER;
      Integer integer4 = JLayeredPane.POPUP_LAYER;
      Integer integer5 = JLayeredPane.DEFAULT_LAYER;
      Integer integer6 = JLayeredPane.POPUP_LAYER;
      Integer integer7 = new Integer(0);
      Integer integer8 = new Integer(1272);
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(integerArray0);
      // Undeclared exception!
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      int int0 = 1964;
      int int1 = (-1900);
      HashSet<Object> hashSet0 = new HashSet<Object>();
      LinkedList<VisualPageListItem> linkedList1 = new LinkedList<VisualPageListItem>();
      linkedList1.retainAll(linkedList0);
      int int2 = 0;
      int int3 = 21;
      int[] intArray0 = null;
      // Undeclared exception!
      try { 
        visualListModel0.moveDownIndexes((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.218743692541794
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = (-1);
      visualListModel0.moveDownIndex((-1));
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      VisualPageListItem visualPageListItem0 = null;
      stack0.add((VisualPageListItem) null);
      visualListModel0.updateElementAt((-1), (VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
      visualListModel0.appendAllElements(stack0);
      visualListModel0.getElements();
      int[] intArray0 = new int[1];
      intArray0[0] = (-1);
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.922685393561663
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex(26);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
      visualListModel0.getElements();
      int[] intArray0 = new int[1];
      Integer[] integerArray0 = new Integer[10];
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      integerArray0[3] = integer0;
      Integer integer1 = JLayeredPane.FRAME_CONTENT_LAYER;
      integerArray0[1] = integer1;
      Integer.compareUnsigned(2571, (int) integerArray0[3]);
      Integer integer2 = JLayeredPane.POPUP_LAYER;
      integerArray0[2] = integer2;
      Integer integer3 = JLayeredPane.DEFAULT_LAYER;
      Integer integer4 = JLayeredPane.POPUP_LAYER;
      integerArray0[4] = integer4;
      Integer integer5 = JLayeredPane.MODAL_LAYER;
      integerArray0[5] = integer5;
      Integer integer6 = new Integer((int) integerArray0[4]);
      integerArray0[6] = integer6;
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(integerArray0);
      intArray0[0] = 26;
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 26
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.4528887279606404
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex(26);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.updateElementAt(26, (VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
      visualListModel0.getElements();
      int[] intArray0 = new int[1];
      Integer[] integerArray0 = new Integer[7];
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      integerArray0[3] = integer0;
      Integer integer1 = JLayeredPane.FRAME_CONTENT_LAYER;
      integerArray0[1] = integer1;
      Integer integer2 = JLayeredPane.POPUP_LAYER;
      integerArray0[2] = integer2;
      Integer integer3 = JLayeredPane.DEFAULT_LAYER;
      visualListModel0.moveDownIndexes(intArray0);
      Integer integer4 = JLayeredPane.POPUP_LAYER;
      integerArray0[4] = integer4;
      Integer integer5 = JLayeredPane.MODAL_LAYER;
      Integer.remainderUnsigned((int) integerArray0[2], 1);
      integerArray0[5] = integer5;
      Integer integer6 = new Integer((int) integerArray0[4]);
      integerArray0[6] = integer6;
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(integerArray0);
      intArray0[0] = 26;
      int[] intArray1 = new int[7];
      intArray1[0] = (int) integerArray0[4];
      intArray1[1] = 737;
      intArray1[2] = (int) integerArray0[2];
      intArray1[3] = 26;
      intArray1[4] = (int) integerArray0[3];
      intArray1[5] = (int) integerArray0[6];
      intArray1[6] = (int) integerArray0[2];
      visualListModel0.moveDownIndexes(intArray1);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      assertEquals(1, visualListModel0.getSize());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.372821413206516
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<Object> linkedHashSet0 = new LinkedHashSet<Object>();
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      linkedList0.retainAll(linkedHashSet0);
      visualListModel0.clearData();
      int[] intArray0 = new int[0];
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      int[] intArray1 = new int[9];
      intArray1[0] = 1317;
      intArray1[1] = 1883;
      intArray1[2] = 7;
      intArray1[3] = 26;
      intArray1[4] = 765;
      intArray1[5] = 2151;
      intArray1[6] = 4;
      intArray1[7] = 1;
      intArray1[8] = 2322;
      visualListModel0.rotateClockwiseElements(intArray1);
      assertFalse(intArray1.equals((Object)intArray0));
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.1348406386640635
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = (-1);
      visualListModel0.moveDownIndex((-1));
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.updateElementAt((-1), (VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      visualListModel0.elementsChanged();
      visualListModel0.clearData();
      int int1 = 0;
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) stack0);
      // Undeclared exception!
      try { 
        visualListModel0.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.5137801058392384
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem visualPageListItem0 = null;
      visualListModel0.elementChanged((VisualPageListItem) null);
      visualListModel0.elementsChanged();
      visualListModel0.getSize();
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.moveUpIndex(1);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_STROKE_CONTROL;
      RenderingHints renderingHints0 = new RenderingHints(sunHints_Key0, sunHints_Key0);
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      RenderingHints renderingHints1 = new RenderingHints(sunHints_Key1, sunHints_Key0);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)96;
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[0];
      visualListModel0.setData(visualPageListItemArray0);
      VisualPageListItem visualPageListItem1 = null;
      try {
        visualPageListItem1 = new VisualPageListItem((byte)96);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.1411461439556105
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex((-1));
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.updateElementAt(1203, (VisualPageListItem) null);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.addElement((VisualPageListItem) null);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.clone();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel1.moveDownIndex((-1));
      VisualListModel visualListModel2 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[4];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualListModel0.setData(visualPageListItemArray0);
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem((-247));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.1411461439556105
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex((-1));
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.data = (Vector<VisualPageListItem>) stack0;
      visualListModel0.updateElementAt(1203, (VisualPageListItem) null);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.addElement((VisualPageListItem) null);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.clone();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel1.moveDownIndex((-1));
      VisualListModel visualListModel2 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[4];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualListModel0.setData(visualPageListItemArray0);
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem((-247));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.4841652152843623
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer integer1 = JLayeredPane.POPUP_LAYER;
      VisualListModel visualListModel1 = new VisualListModel();
      int[] intArray0 = new int[9];
      intArray0[0] = (-659);
      intArray0[1] = (-2797);
      intArray0[2] = (-659);
      intArray0[3] = 2830;
      intArray0[4] = 2830;
      intArray0[5] = (-2797);
      intArray0[6] = (-2797);
      intArray0[7] = (-2797);
      intArray0[8] = (-659);
      visualListModel1.undeleteElements(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.moveUpIndexes((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.376742981833967
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem visualPageListItem0 = null;
      visualListModel0.removeElements(65535, 65535, false);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.getElements();
      visualListModel1.updateElementAt(65535, (VisualPageListItem) null);
      visualListModel1.elementsChanged();
      Vector<VisualPageListItem> vector0 = null;
      // Undeclared exception!
      try { 
        visualListModel0.setData((Vector<VisualPageListItem>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.286742642027288
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      VisualPageListItem visualPageListItem0 = null;
      stack0.add((VisualPageListItem) null);
      visualListModel0.updateElementAt(26, (VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
      VisualPageListItem[] visualPageListItemArray0 = visualListModel0.getElements();
      Integer[] integerArray0 = new Integer[7];
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      integerArray0[3] = integer0;
      Integer integer1 = JLayeredPane.FRAME_CONTENT_LAYER;
      integerArray0[1] = integer1;
      Integer integer2 = IIPResolutionDescriptor.MAX_RESOLUTION;
      integerArray0[2] = integer2;
      Integer integer3 = JLayeredPane.DEFAULT_LAYER;
      integerArray0[3] = integer3;
      Integer integer4 = JLayeredPane.POPUP_LAYER;
      visualListModel0.prependAllElements(stack0);
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      Vector<VisualPageListItem> vector1 = visualListModel0.data;
      visualListModel0.setData(visualPageListItemArray0);
      VisualPageListItem visualPageListItem1 = null;
      try {
        visualPageListItem1 = new VisualPageListItem(50);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.612726894621007
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      VisualPageListItem visualPageListItem0 = null;
      stack0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
      visualListModel0.getElements();
      int[] intArray0 = new int[1];
      Integer[] integerArray0 = new Integer[7];
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      integerArray0[3] = integer0;
      Integer integer1 = JLayeredPane.FRAME_CONTENT_LAYER;
      integerArray0[1] = integer1;
      Integer integer2 = JLayeredPane.POPUP_LAYER;
      integerArray0[2] = integer2;
      Integer integer3 = JLayeredPane.DEFAULT_LAYER;
      Integer integer4 = JLayeredPane.POPUP_LAYER;
      integerArray0[4] = integer4;
      Integer integer5 = JLayeredPane.MODAL_LAYER;
      // Undeclared exception!
      try { 
        visualListModel0.removeElements(intArray0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.6855983590263937
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex((-1));
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.updateElementAt((-9), (VisualPageListItem) null);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.elementsChanged();
      visualListModel1.clearData();
      visualListModel1.addAllElements(3121, (Collection<VisualPageListItem>) stack0);
      visualListModel0.getValidElements();
      visualListModel0.updateElementAt(0, (VisualPageListItem) null);
      visualListModel1.addElement((VisualPageListItem) null);
      stack0.clone();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_STROKE_CONTROL;
      visualListModel0.getElementAt(0);
      RenderingHints renderingHints0 = new RenderingHints(sunHints_Key0, (Object) null);
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt((-9), true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -9
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.data = null;
      int[] intArray0 = new int[0];
      visualListModel0.reverseElements(intArray0);
      visualListModel0.data = null;
      // Undeclared exception!
      try { 
        visualListModel0.clearData();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.786724494755577
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualListModel visualListModel1 = new VisualListModel();
      int[] intArray0 = new int[5];
      visualListModel0.moveUpIndex(0);
      intArray0[0] = 0;
      intArray0[1] = 0;
      visualListModel0.moveDownIndex(0);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      RenderingHints renderingHints0 = new RenderingHints(sunHints_Key0, visualListModel0);
      byte[] byteArray0 = new byte[11];
      byteArray0[0] = (byte)36;
      byteArray0[1] = (byte)96;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-95);
      ByteLookupTable byteLookupTable0 = new ByteLookupTable(0, byteArray0);
      RenderingHints renderingHints1 = new RenderingHints(sunHints_Key0, byteLookupTable0);
      LookupOp lookupOp0 = new LookupOp(byteLookupTable0, renderingHints1);
      visualListModel1.removeElements((int) (byte) (-95), 0, false);
      assertFalse(visualListModel1.equals((Object)visualListModel0));
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.461934648705106
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex(26);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.updateElementAt(26, (VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
      visualListModel0.getElements();
      Integer[] integerArray0 = new Integer[7];
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      integerArray0[3] = integer0;
      Integer integer1 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer integer2 = JLayeredPane.POPUP_LAYER;
      integerArray0[2] = integer2;
      Integer integer3 = JLayeredPane.DEFAULT_LAYER;
      Integer integer4 = JLayeredPane.POPUP_LAYER;
      integerArray0[4] = integer4;
      Integer integer5 = JLayeredPane.MODAL_LAYER;
      Integer.divideUnsigned((-3500), (int) integerArray0[3]);
      integerArray0[5] = integer5;
      visualListModel0.addAllElements((int) integerArray0[4], (Collection<VisualPageListItem>) stack0);
      visualListModel0.removeElements(35, 1879, true);
      visualListModel0.prependAllElements(stack0);
      assertEquals(2, visualListModel0.getSize());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.605922509654955
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.data = (Vector<VisualPageListItem>) stack0;
      visualListModel0.removeElements(Integer.MAX_VALUE, (-2004), false);
      visualListModel0.getElements();
      visualListModel0.updateElementAt((-1434), (VisualPageListItem) null);
      visualListModel0.elementsChanged();
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      visualListModel0.clearData();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel0.addAllElements((-1), (Collection<VisualPageListItem>) vector0);
      visualListModel0.getValidElements();
      visualListModel0.updateElementAt((-2792), (VisualPageListItem) null);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.removeElements(Integer.MAX_VALUE, (-2792), false);
      visualListModel0.getElements();
      visualListModel1.addAllElements(1, (Collection<VisualPageListItem>) stack0);
      visualListModel1.removeElements(Integer.MAX_VALUE, 0, false);
      visualListModel1.prependAllElements(stack0);
      assertEquals(10, stack0.capacity());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.5754832761243973
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      Integer integer0 = FPXDescriptor.MAX_RESOLUTION;
      linkedList0.removeLastOccurrence(integer0);
      visualListModel0.addAllElements((-2811), (Collection<VisualPageListItem>) linkedList0);
      visualListModel0.getSize();
      int[] intArray0 = new int[1];
      intArray0[0] = 0;
      int int0 = (-556);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.clearData();
      visualListModel0.clearData();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.prependAllElements(vector0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.reverseElements(intArray0);
      vector0.listIterator();
      // Undeclared exception!
      try { 
        visualListModel0.subList(7, (-2811), false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(7) > toIndex(-2811)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel0.moveDownIndex((-242));
      // Undeclared exception!
      try { 
        visualListModel0.setData((VisualPageListItem[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.6195259631210703
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.elementChanged((VisualPageListItem) null);
      visualListModel0.elementsChanged();
      visualListModel0.getSize();
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.moveUpIndex(1);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_STROKE_CONTROL;
      RenderingHints renderingHints0 = new RenderingHints(sunHints_Key0, sunHints_Key0);
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      RenderingHints renderingHints1 = new RenderingHints(sunHints_Key1, sunHints_Key0);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)96;
      visualListModel0.removeElements(11, (int) (byte)2, false);
      visualListModel0.getElements();
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) null);
      assertEquals(1, visualListModel0.getSize());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.831673301904631
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex((-1));
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.updateElementAt((-1), (VisualPageListItem) null);
      visualListModel0.elementsChanged();
      visualListModel0.addAllElements((-1), (Collection<VisualPageListItem>) stack0);
      visualListModel0.getValidElements();
      visualListModel0.addElementAt((VisualPageListItem) null, (-1));
      visualListModel0.updateElementAt((-1), (VisualPageListItem) null);
      visualListModel0.addElement((VisualPageListItem) null);
      stack0.clone();
      visualListModel0.moveUpIndex((-242));
      visualListModel0.getElementAt(466);
      visualListModel0.clearData();
      int[] intArray0 = new int[9];
      intArray0[0] = (-1);
      intArray0[1] = (-1);
      intArray0[2] = (-1);
      intArray0[3] = (-242);
      intArray0[4] = 0;
      intArray0[5] = 466;
      ShortLookupTable shortLookupTable0 = null;
      try {
        shortLookupTable0 = new ShortLookupTable((-9), (short[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.image.ShortLookupTable", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.2344281389559963
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex((-1));
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.data = (Vector<VisualPageListItem>) stack0;
      stack0.add((VisualPageListItem) null);
      visualListModel0.updateElementAt((-1), (VisualPageListItem) null);
      visualListModel0.elementsChanged();
      visualListModel0.clearData();
      int int0 = 0;
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) stack0);
      visualListModel0.getValidElements();
      AffineTransform affineTransform0 = AffineTransform.getRotateInstance(1994.03, 782.125277425, 1.0);
      AffineTransformOp affineTransformOp0 = null;
      try {
        affineTransformOp0 = new AffineTransformOp(affineTransform0, (-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown interpolation type: -1
         //
         verifyException("java.awt.image.AffineTransformOp", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.5420948718731027
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.data = (Vector<VisualPageListItem>) stack0;
      visualListModel0.removeElements((-1), (-1), false);
      visualListModel0.getElements();
      visualListModel0.updateElementAt((-1), (VisualPageListItem) null);
      visualListModel0.elementsChanged();
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      visualListModel0.clearData();
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) stack0);
      visualListModel0.getValidElements();
      visualListModel0.updateElementAt((-1), (VisualPageListItem) null);
      visualListModel0.removeElements(1, (-1), false);
      visualListModel0.getElements();
      visualListModel0.addAllElements(1, (Collection<VisualPageListItem>) stack0);
      stack0.add((VisualPageListItem) null);
      visualListModel0.addElementAt((VisualPageListItem) null, 51);
      assertEquals(1, visualListModel0.getSize());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.1348406386640635
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = (-1);
      visualListModel0.moveDownIndex((-1));
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      VisualPageListItem visualPageListItem0 = null;
      stack0.add((VisualPageListItem) null);
      visualListModel0.updateElementAt((-1), (VisualPageListItem) null);
      visualListModel0.elementsChanged();
      visualListModel0.clearData();
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) stack0);
      // Undeclared exception!
      try { 
        visualListModel0.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.272336416778445
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex((-1));
      visualListModel0.elementsChanged();
      visualListModel0.updateElementAt((-1), (VisualPageListItem) null);
      visualListModel0.addElement((VisualPageListItem) null);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      LinkedHashSet<VisualPageListItem> linkedHashSet1 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet1.add((VisualPageListItem) null);
      linkedHashSet1.clone();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel0.moveDownIndex(0);
      VisualListModel visualListModel1 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[8];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[5] = null;
      visualPageListItemArray0[7] = null;
      visualListModel0.setData(visualPageListItemArray0);
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem((-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.reverseElements((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      DefaultEditorKit.InsertContentAction defaultEditorKit_InsertContentAction0 = new DefaultEditorKit.InsertContentAction();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      ActionEvent actionEvent0 = new ActionEvent(pipedInputStream0, 0, "", 1048576L, (-1));
      defaultEditorKit_InsertContentAction0.actionPerformed(actionEvent0);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_ALPHA_INTERPOLATION;
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.getElementAt((-1164));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 849;
      int int1 = 0;
      // Undeclared exception!
      try { 
        visualListModel0.subList(849, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(849) > toIndex(0)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      HashSet<Object> hashSet0 = new HashSet<Object>();
      VisualListModel visualListModel1 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.removeElements(intArray0, false);
      assertEquals(0, intArray0.length);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      HashSet<Object> hashSet0 = new HashSet<Object>();
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      linkedList0.retainAll(hashSet0);
      visualListModel0.clearData();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      vector0.remove((Object) linkedList0);
      visualListModel0.setData(vector0);
      assertEquals("[]", vector0.toString());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.978644858599489
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[3];
      visualListModel0.removeElements(0, 1581, true);
      intArray0[0] = 0;
      Stack<DefaultTableModel> stack0 = new Stack<DefaultTableModel>();
      DefaultComboBoxModel<DefaultTableModel> defaultComboBoxModel0 = new DefaultComboBoxModel<DefaultTableModel>(stack0);
      JComboBox<DefaultTableModel> jComboBox0 = new JComboBox<DefaultTableModel>(defaultComboBoxModel0);
      jComboBox0.getSelectedItem();
      visualListModel0.removeListDataListener(jComboBox0);
      int int0 = (-1608);
      intArray0[1] = (-1608);
      visualListModel0.removeElements(intArray0, true);
      intArray0[2] = 1333;
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.removeElements((-1), 0, true);
      // Undeclared exception!
      try { 
        visualListModel0.subList(65535, (-467), true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(65535) > toIndex(-467)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.596398700131146
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[23];
      visualListModel0.rotateClockwiseElements(intArray0);
      intArray0[0] = 7;
      visualListModel0.moveUpIndex(7);
      intArray0[1] = 0;
      intArray0[2] = (-1548);
      int int0 = (-52);
      intArray0[3] = (-52);
      intArray0[4] = 0;
      intArray0[5] = (-52);
      intArray0[6] = (-556);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.clearData();
      visualListModel0.clearData();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.prependAllElements(vector0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.reverseElements(intArray0);
      vector0.listIterator();
      // Undeclared exception!
      try { 
        visualListModel0.subList(0, (-1548), true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(0) > toIndex(-1548)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      Integer[] integerArray0 = new Integer[7];
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      integerArray0[3] = integer0;
      Integer integer1 = JLayeredPane.FRAME_CONTENT_LAYER;
      integerArray0[1] = integer1;
      Integer integer2 = JLayeredPane.POPUP_LAYER;
      integerArray0[2] = integer2;
      Integer integer3 = JLayeredPane.DEFAULT_LAYER;
      Integer integer4 = JLayeredPane.POPUP_LAYER;
      integerArray0[4] = integer4;
      Integer integer5 = JLayeredPane.MODAL_LAYER;
      integerArray0[5] = integer5;
      Integer integer6 = new Integer((int) integerArray0[4]);
      Integer.getInteger("", (-2069));
      integerArray0[6] = integer6;
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.prependAllElements((Collection<VisualPageListItem>) null);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.455848709151796
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex(26);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.moveUpIndex(26);
      visualListModel0.moveDownIndex((-1473));
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_TEXT_ANTIALIASING;
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(stack0, stack0);
      RenderingHints renderingHints0 = new RenderingHints(sunHints_Key1, defaultTableModel0);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-95);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)36;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte) (-95);
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)96;
      ByteLookupTable byteLookupTable0 = null;
      try {
        byteLookupTable0 = new ByteLookupTable((byte) (-95), byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Offset must be greater than 0
         //
         verifyException("java.awt.image.LookupTable", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      HashSet<Object> hashSet0 = new HashSet<Object>();
      visualListModel0.subList((-1089), (-1184), true);
      visualListModel0.addAllElements((-1184), (Collection<VisualPageListItem>) null);
      int[] intArray0 = new int[0];
      VisualPageListItem[] visualPageListItemArray0 = visualListModel0.getElements();
      assertEquals(0, visualPageListItemArray0.length);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.subList(1059, 1787, true);
      visualListModel0.moveUpIndex((-3092));
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.786724494755577
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualListModel visualListModel1 = new VisualListModel();
      int[] intArray0 = new int[8];
      intArray0[0] = 0;
      intArray0[1] = 0;
      visualListModel0.moveDownIndex(0);
      Collection<VisualPageListItem> collection0 = visualListModel1.subList((-601), 0);
      assertNull(collection0);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.143654440989084
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualListModel visualListModel1 = new VisualListModel();
      int[] intArray0 = new int[5];
      visualListModel0.moveUpIndex(0);
      intArray0[0] = 0;
      intArray0[1] = 0;
      visualListModel0.moveDownIndex(0);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      RenderingHints renderingHints0 = new RenderingHints(sunHints_Key0, visualListModel0);
      visualListModel0.subList(0, 0);
      byte[] byteArray0 = new byte[11];
      byteArray0[0] = (byte)36;
      byteArray0[1] = (byte)96;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-95);
      ByteLookupTable byteLookupTable0 = new ByteLookupTable(0, byteArray0);
      RenderingHints renderingHints1 = new RenderingHints(sunHints_Key0, byteLookupTable0);
      visualListModel0.getElementAt(9999);
      BiFunction<Object, Object, String> biFunction0 = (BiFunction<Object, Object, String>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(biFunction0).apply(any() , any());
      renderingHints1.compute((Object) null, biFunction0);
      LookupOp lookupOp0 = new LookupOp(byteLookupTable0, renderingHints1);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      HashSet<Object> hashSet0 = new HashSet<Object>();
      linkedList0.retainAll(hashSet0);
      visualListModel0.appendAllElements(linkedList0);
      visualListModel0.elementsChanged();
      float[] floatArray0 = new float[2];
      floatArray0[0] = (float) 0;
      Kernel kernel0 = new Kernel((-1900), 0, floatArray0);
      kernel0.clone();
      ConvolveOp convolveOp0 = new ConvolveOp(kernel0);
      assertEquals(0, convolveOp0.getEdgeCondition());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = (-1);
      int int1 = (-23);
      visualListModel0.getValidElements();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) null);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_TEXT_ANTIALIASING;
      RenderingHints renderingHints0 = new RenderingHints(sunHints_Key0, (Object) null);
      int int2 = (-1269);
      int int3 = (-1008);
      BufferedImage bufferedImage0 = null;
      try {
        bufferedImage0 = new BufferedImage(711, (-1008), (-23));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown image type -23
         //
         verifyException("java.awt.image.BufferedImage", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_STROKE_CONTROL;
      DefaultEditorKit.InsertContentAction defaultEditorKit_InsertContentAction0 = new DefaultEditorKit.InsertContentAction();
      RenderingHints renderingHints0 = new RenderingHints(sunHints_Key0, defaultEditorKit_InsertContentAction0);
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt((-2085), false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.3957094260849354
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[6];
      intArray0[0] = 1;
      intArray0[1] = 1;
      intArray0[2] = 0;
      intArray0[3] = 1;
      intArray0[4] = 5;
      intArray0[5] = 1;
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.removeElements(1072, 1, true);
      visualListModel0.removeElements(1, 665, true);
      visualListModel0.moveUpIndexes(intArray0);
      assertEquals(0, visualListModel0.getSize());
  }
}
