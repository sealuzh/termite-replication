/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 30 06:36:37 GMT 2020
 */

package umd.cs.shop;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.StreamTokenizer;
import java.io.StringReader;
import java.nio.CharBuffer;
import java.util.Collection;
import java.util.Comparator;
import java.util.function.Predicate;
import java.util.stream.Stream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import umd.cs.shop.JSJshopVars;
import umd.cs.shop.JSPredicateForm;
import umd.cs.shop.JSSubstitution;
import umd.cs.shop.JSTerm;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JSPredicateForm_ESTest extends JSPredicateForm_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.6730116670092565
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = "(";
      StringReader stringReader0 = new StringReader("(");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm("(");
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.34883209584303193
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = "(gAN";
      StringReader stringReader0 = new StringReader("(gAN");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.resetSyntax();
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.630959968481805
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.add((Object) "%zw");
      JSTerm jSTerm1 = (JSTerm)jSTerm0.clone();
      jSTerm0.add((Object) jSTerm1);
      JSPredicateForm jSPredicateForm0 = jSTerm0.standarizerPredicateForm();
      System.setCurrentTimeMillis(0);
      System.setCurrentTimeMillis(0);
      JSPredicateForm jSPredicateForm1 = jSTerm0.clonePF();
      jSPredicateForm1.retainAll(jSTerm0);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      boolean boolean0 = jSTerm0.equals(jSPredicateForm0);
      assertTrue(boolean0);
      
      System.setCurrentTimeMillis(917L);
      System.setCurrentTimeMillis(0);
      System.setCurrentTimeMillis(0);
      System.setCurrentTimeMillis((-24L));
      System.setCurrentTimeMillis((-24L));
      System.setCurrentTimeMillis(0L);
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      JSPredicateForm jSPredicateForm2 = jSTerm0.applySubstitutionPF(jSSubstitution0);
      JSPredicateForm jSPredicateForm3 = jSTerm0.clonePF();
      JSSubstitution jSSubstitution2 = jSTerm0.matches(jSPredicateForm2, jSSubstitution0);
      JSSubstitution jSSubstitution3 = new JSSubstitution();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) jSSubstitution2);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.and(predicate1);
      Predicate<Object> predicate3 = predicate0.or(predicate2);
      jSSubstitution2.removeIf(predicate3);
      jSSubstitution3.ensureCapacity((-2022337822));
      jSPredicateForm3.matches(jSPredicateForm0, jSSubstitution3);
      jSTerm0.matches(jSPredicateForm3, jSSubstitution2);
      assertFalse(jSSubstitution2.fail());
      
      JSSubstitution jSSubstitution4 = new JSSubstitution();
      JSSubstitution jSSubstitution5 = jSPredicateForm0.matches((JSPredicateForm) jSTerm1, jSSubstitution4);
      assertTrue(jSSubstitution5.fail());
      
      JSSubstitution jSSubstitution6 = new JSSubstitution();
      JSPredicateForm jSPredicateForm4 = jSPredicateForm3.applySubstitutionPF(jSSubstitution6);
      assertNotSame(jSPredicateForm3, jSPredicateForm4);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.6333960726341687
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.add((Object) "%zw");
      Object object0 = jSTerm0.clone();
      jSTerm0.add(object0);
      JSPredicateForm jSPredicateForm0 = jSTerm0.standarizerPredicateForm();
      jSPredicateForm0.print();
      JSJshopVars.rightBrac = 0;
      System.setCurrentTimeMillis(0);
      System.setCurrentTimeMillis(0);
      JSPredicateForm jSPredicateForm1 = jSTerm0.clonePF();
      jSPredicateForm1.equals((JSPredicateForm) jSTerm0);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSPredicateForm jSPredicateForm2 = jSPredicateForm0.applySubstitutionPF(jSSubstitution0);
      jSTerm0.equals(jSPredicateForm2);
      System.setCurrentTimeMillis((-24L));
      System.setCurrentTimeMillis(0);
      System.setCurrentTimeMillis(0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.3208883431493221
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StringReader stringReader0 = new StringReader("!1q,xkSgcZL[6\"qc br.");
      stringReader0.mark(9);
      stringReader0.reset();
      stringReader0.reset();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.ttype = 9;
      streamTokenizer0.lowerCaseMode(true);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      streamTokenizer1.slashSlashComments(true);
      streamTokenizer1.nextToken();
      StreamTokenizer streamTokenizer2 = new StreamTokenizer(stringReader0);
      StreamTokenizer streamTokenizer3 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer3);
      streamTokenizer1.parseNumbers();
      streamTokenizer1.ordinaryChars((-4), (-4));
      JSPredicateForm jSPredicateForm0 = jSTerm0.clonePF();
      streamTokenizer3.nval = (-648.386334);
      streamTokenizer1.ordinaryChar(9);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSTerm0.applySubstitutionPF(jSSubstitution0);
      JSJshopVars.verticalL = (-1797);
      stringReader0.reset();
      // Undeclared exception!
      try { 
        jSTerm0.matches(jSPredicateForm0, (JSSubstitution) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.add((Object) "%%w");
      StringReader stringReader0 = new StringReader("%%w");
      char[] charArray0 = new char[4];
      jSTerm0.firstElement();
      jSTerm0.add((Object) "%%w");
      charArray0[0] = 'g';
      charArray0[2] = 'S';
      charArray0[3] = '+';
      Comparator<Integer> comparator0 = (Comparator<Integer>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(comparator0).compare(anyInt() , anyInt());
      jSTerm0.sort(comparator0);
      stringReader0.read(charArray0);
      stringReader0.skip(2106L);
      stringReader0.read();
      stringReader0.mark(47);
      stringReader0.reset();
      StringReader stringReader1 = new StringReader("%%w");
      StringReader stringReader2 = new StringReader("%%w");
      stringReader2.reset();
      stringReader0.reset();
      stringReader0.markSupported();
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      // Undeclared exception!
      try { 
        jSTerm0.toStr();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to umd.cs.shop.JSTerm
         //
         verifyException("umd.cs.shop.JSTerm", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.add((Object) "%%w");
      jSTerm0.setSize(964);
      StringReader stringReader0 = new StringReader("%%w");
      stringReader0.skip((-17L));
      stringReader0.read();
      stringReader0.mark(0);
      stringReader0.reset();
      stringReader0.ready();
      StringReader stringReader1 = new StringReader("-(M%~>W.<4uY");
      StringReader stringReader2 = new StringReader("q,xksgczl[6\"qc");
      stringReader2.mark(0);
      stringReader0.reset();
      stringReader1.reset();
      stringReader0.markSupported();
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      // Undeclared exception!
      try { 
        jSTerm0.toStr();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSTerm", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.2945451658448959
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.add((Object) "%zw");
      JSTerm jSTerm1 = (JSTerm)jSTerm0.clone();
      jSTerm0.add((Object) jSTerm1);
      JSPredicateForm jSPredicateForm0 = jSTerm0.standarizerPredicateForm();
      System.setCurrentTimeMillis(0);
      jSTerm0.clonePF();
      jSPredicateForm0.toStr();
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0);
      System.setCurrentTimeMillis(3422L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-419L));
      System.setCurrentTimeMillis((-2775L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      jSTerm1.clonePF();
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.add((Object) "%zw");
      int int0 = 964;
      jSTerm0.setSize(964);
      JSTerm jSTerm1 = new JSTerm();
      Object[] objectArray0 = new Object[6];
      jSTerm0.add((Object) "%zw");
      objectArray0[0] = (Object) "%zw";
      objectArray0[1] = (Object) jSTerm0;
      objectArray0[2] = (Object) jSTerm1;
      objectArray0[3] = (Object) jSTerm1;
      objectArray0[4] = (Object) jSTerm1;
      objectArray0[5] = (Object) jSTerm0;
      jSTerm1.toArray(objectArray0);
      jSTerm0.addAll((Collection) jSTerm1);
      // Undeclared exception!
      try { 
        jSTerm0.print();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSTerm", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StringReader stringReader0 = new StringReader("PredicateforK.print(): 0 elements");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSTerm jSTerm1 = new JSTerm();
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      streamTokenizer0.lowerCaseMode(false);
      streamTokenizer1.nextToken();
      streamTokenizer1.wordChars(41, 41);
      JSTerm jSTerm2 = new JSTerm(streamTokenizer1);
      streamTokenizer0.parseNumbers();
      jSTerm0.makeVariable();
      jSTerm0.add((Object) null);
      jSTerm0.makeVariable();
      jSTerm2.makeConstant();
      streamTokenizer1.ordinaryChar(58);
      jSTerm2.isGround();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      // Undeclared exception!
      try { 
        jSTerm0.clonePF();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StringReader stringReader0 = new StringReader("PredicateforK.print(): 0 elements");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSTerm jSTerm1 = new JSTerm();
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      streamTokenizer0.lowerCaseMode(false);
      streamTokenizer1.nextToken();
      streamTokenizer1.wordChars(41, 41);
      JSTerm jSTerm2 = new JSTerm(streamTokenizer1);
      streamTokenizer0.parseNumbers();
      jSTerm0.makeVariable();
      jSTerm0.add((Object) null);
      jSTerm2.makeConstant();
      streamTokenizer1.ordinaryChar(58);
      jSTerm2.isGround();
      streamTokenizer0.nval = (double) 58;
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      // Undeclared exception!
      try { 
        jSTerm0.standarizerPredicateForm();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StringReader stringReader0 = new StringReader("PredicateforK.print(): 0 elements");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSTerm jSTerm1 = new JSTerm();
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      streamTokenizer0.lowerCaseMode(true);
      streamTokenizer1.nextToken();
      streamTokenizer1.wordChars(41, 41);
      JSTerm jSTerm2 = new JSTerm(streamTokenizer1);
      streamTokenizer0.parseNumbers();
      jSTerm2.makeVariable();
      jSTerm1.add((Object) jSTerm2);
      jSTerm0.makeConstant();
      streamTokenizer1.ordinaryChar((-1933373733));
      jSTerm0.isGround();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      // Undeclared exception!
      try { 
        jSTerm2.equals((JSPredicateForm) jSTerm1);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // umd.cs.shop.JSTerm cannot be cast to java.lang.String
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Predicaeform.print(): 0 elemens");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSTerm jSTerm1 = new JSTerm();
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      streamTokenizer1.parseNumbers();
      streamTokenizer0.lowerCaseMode(false);
      streamTokenizer1.nextToken();
      jSTerm1.removeAllElements();
      streamTokenizer1.wordChars(41, 41);
      JSTerm jSTerm2 = new JSTerm(streamTokenizer1);
      streamTokenizer0.parseNumbers();
      jSTerm0.makeVariable();
      jSTerm1.makeVariable();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSTerm0.add((Object) null);
      jSTerm0.makeVariable();
      streamTokenizer1.ordinaryChar(58);
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      jSSubstitution1.add((Object) "Predicaeform.print(): 0 elemens");
      JSSubstitution jSSubstitution2 = new JSSubstitution();
      JSSubstitution jSSubstitution3 = new JSSubstitution();
      // Undeclared exception!
      try { 
        jSTerm0.applySubstitutionPF(jSSubstitution2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0549201679861442
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Predicateform.print(): 0 elements");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSTerm jSTerm1 = new JSTerm();
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      streamTokenizer0.lowerCaseMode(false);
      streamTokenizer1.nextToken();
      streamTokenizer1.wordChars(41, 41);
      JSTerm jSTerm2 = new JSTerm(streamTokenizer1);
      streamTokenizer0.parseNumbers();
      jSTerm0.makeVariable();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSTerm0.add((Object) null);
      jSTerm0.makeVariable();
      streamTokenizer1.ordinaryChar(58);
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      jSTerm2.isGround();
      jSSubstitution1.add((Object) "Predicateform.print(): 0 elements");
      jSSubstitution0.addElements(jSSubstitution1);
      jSSubstitution0.add((Object) jSTerm1);
      JSSubstitution jSSubstitution2 = new JSSubstitution();
      jSTerm2.applySubstitutionPF(jSSubstitution0);
      JSTerm jSTerm3 = new JSTerm(streamTokenizer1);
      jSTerm3.add((Object) streamTokenizer1);
      jSTerm3.makeVariable();
      jSTerm2.equals((JSPredicateForm) jSTerm3);
      stringReader0.reset();
      JSTerm jSTerm4 = new JSTerm();
      // Undeclared exception!
      try { 
        jSTerm4.applySubstitutionPF(jSSubstitution0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      int int0 = 0;
      JSTerm jSTerm0 = new JSTerm();
      long long0 = 19L;
      long long1 = 0L;
      System.setCurrentTimeMillis(0L);
      jSTerm0.makeEval(false);
      long long2 = 0L;
      long long3 = 401L;
      // Undeclared exception!
      try { 
        jSTerm0.JSPredicateFormInit((StreamTokenizer) null);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      String string0 = "(gAN";
      StringReader stringReader0 = new StringReader("(gAN");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      stringReader0.close();
      streamTokenizer0.ttype = 40;
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm(streamTokenizer0);
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      StringReader stringReader0 = new StringReader("!1q,xksgzl[6\"qc \r.");
      stringReader0.mark(9);
      stringReader0.reset();
      stringReader0.reset();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.ttype = 9;
      streamTokenizer0.lowerCaseMode(true);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      streamTokenizer0.slashSlashComments(false);
      streamTokenizer0.nextToken();
      StreamTokenizer streamTokenizer2 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer2);
      jSTerm0.add((Object) streamTokenizer0);
      streamTokenizer1.ordinaryChar(33);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      // Undeclared exception!
      try { 
        jSTerm0.applySubstitutionPF(jSSubstitution1);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.io.StreamTokenizer cannot be cast to umd.cs.shop.JSTerm
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      StringReader stringReader0 = new StringReader("1/MpM3[l9%`m'wsl:!t");
      stringReader0.ready();
      StringReader stringReader1 = new StringReader("!1q,xksgzl[6\"qc \r.");
      stringReader0.reset();
      stringReader0.reset();
      stringReader0.markSupported();
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      jSPredicateForm0.equals((JSPredicateForm) null);
      // Undeclared exception!
      try { 
        jSPredicateForm0.clonePF();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.4677339293271525
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Predicateform.print(): 0 elements");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.clonePF();
      stringReader0.reset();
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      streamTokenizer1.lowerCaseMode(false);
      streamTokenizer1.slashSlashComments(false);
      streamTokenizer0.nextToken();
      JSTerm jSTerm1 = new JSTerm(streamTokenizer1);
      streamTokenizer1.parseNumbers();
      jSTerm1.clonePF();
      streamTokenizer0.ordinaryChar(0);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSPredicateForm jSPredicateForm0 = jSTerm0.applySubstitutionPF(jSSubstitution0);
      boolean boolean0 = jSTerm0.equals((JSPredicateForm) jSTerm1);
      assertTrue(boolean0);
      
      stringReader0.reset();
      JSTerm jSTerm2 = new JSTerm();
      JSPredicateForm jSPredicateForm1 = jSPredicateForm0.standarizerPredicateForm();
      assertNotSame(jSPredicateForm0, jSPredicateForm1);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      int int0 = 0;
      JSTerm jSTerm0 = new JSTerm();
      Object object0 = jSTerm0.clone();
      jSTerm0.add(object0);
      jSTerm0.clone();
      jSTerm0.add((Object) null);
      // Undeclared exception!
      try { 
        jSTerm0.standarizerPredicateForm();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // umd.cs.shop.JSTerm cannot be cast to java.lang.String
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.3208883431493221
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      StringReader stringReader0 = new StringReader("!1q,xkSgcZL[6\"qc br.");
      stringReader0.mark(9);
      stringReader0.reset();
      stringReader0.reset();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.ttype = 9;
      streamTokenizer0.lowerCaseMode(true);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      streamTokenizer1.slashSlashComments(true);
      streamTokenizer1.nextToken();
      StreamTokenizer streamTokenizer2 = new StreamTokenizer(stringReader0);
      StreamTokenizer streamTokenizer3 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer3);
      streamTokenizer1.parseNumbers();
      streamTokenizer1.ordinaryChars((-4), (-4));
      JSPredicateForm jSPredicateForm0 = jSTerm0.clonePF();
      streamTokenizer1.ordinaryChar(9);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSTerm0.applySubstitutionPF(jSSubstitution0);
      streamTokenizer3.ordinaryChar(33);
      StringReader stringReader1 = new StringReader("!");
      stringReader1.markSupported();
      jSPredicateForm0.toStr();
      System.setCurrentTimeMillis((-2));
      System.setCurrentTimeMillis(1L);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm((StreamTokenizer) null);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      // Undeclared exception!
      try { 
        jSTerm0.toStr();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      StringReader stringReader0 = new StringReader("PredicateforK.print(): 0 elements");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSTerm jSTerm1 = new JSTerm();
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      streamTokenizer0.lowerCaseMode(true);
      streamTokenizer1.nextToken();
      streamTokenizer1.wordChars(41, 41);
      JSTerm jSTerm2 = new JSTerm(streamTokenizer1);
      streamTokenizer0.parseNumbers();
      jSTerm0.makeVariable();
      jSTerm0.add((Object) null);
      jSTerm2.makeConstant();
      streamTokenizer1.ordinaryChar(58);
      jSTerm2.isGround();
      JSTerm jSTerm3 = new JSTerm();
      jSTerm2.equals((JSPredicateForm) jSTerm3);
      streamTokenizer1.parseNumbers();
      Stream stream0 = jSTerm0.parallelStream();
      assertNotNull(stream0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.add((Object) jSTerm0);
      StringReader stringReader0 = new StringReader(">F>Sb%DbUEc~O.X");
      stringReader0.reset();
      StringReader stringReader1 = new StringReader("1/MM3[]l9,`m'ws:t");
      stringReader0.ready();
      StringReader stringReader2 = new StringReader("PlanningDomain: error");
      stringReader0.reset();
      StringReader stringReader3 = new StringReader(">F>Sb%DbUEc~O.X");
      stringReader3.close();
      stringReader3.markSupported();
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      StringBuffer stringBuffer0 = jSTerm0.toStr();
      assertEquals("([(this Collection)] )", stringBuffer0.toString());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Predicateform.print(): 0 elements");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSPredicateForm jSPredicateForm0 = jSTerm0.clonePF();
      CharBuffer charBuffer0 = CharBuffer.allocate(41);
      jSTerm0.spliterator();
      stringReader0.read(charBuffer0);
      stringReader0.close();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      Comparator<String> comparator0 = (Comparator<String>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      jSPredicateForm0.add((Object) "Predicateform.print(): 0 elements");
      jSSubstitution0.sort(comparator0);
      jSSubstitution0.add((Object) streamTokenizer0);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      streamTokenizer0.wordChars(12, 2);
      // Undeclared exception!
      try { 
        jSPredicateForm0.JSPredicateFormInit(streamTokenizer1);
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      StringReader stringReader0 = new StringReader("#C/oF");
      stringReader0.mark(0);
      stringReader0.reset();
      stringReader0.reset();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.lowerCaseMode(false);
      streamTokenizer0.nextToken();
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      streamTokenizer0.parseNumbers();
      jSTerm0.makeVariable();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      streamTokenizer0.ordinaryChar(2200);
      jSSubstitution0.add((Object) jSTerm0);
      jSTerm0.parallelStream();
      // Undeclared exception!
      try { 
        jSTerm0.matches((JSPredicateForm) null, jSSubstitution0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      JSJshopVars.leftPar = (-2047);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.makeConstant();
      StringReader stringReader0 = new StringReader("%%%");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.ordinaryChar(473);
      jSSubstitution0.add((Object) streamTokenizer0);
      jSPredicateForm0.parallelStream();
      // Undeclared exception!
      try { 
        jSTerm0.matches((JSPredicateForm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      StringReader stringReader0 = new StringReader("PredicateforK.print(): 0 elements");
      StringReader stringReader1 = new StringReader(")");
      StringReader stringReader2 = new StringReader("PredicateforK.print(): 0 elements");
      stringReader1.skip(631L);
      StringReader stringReader3 = new StringReader("%%%");
      stringReader0.ready();
      StringReader stringReader4 = new StringReader(")");
      stringReader2.reset();
      StringReader stringReader5 = new StringReader("call");
      stringReader3.reset();
      stringReader3.ready();
      StringReader stringReader6 = new StringReader("predicatefork.print(");
      stringReader3.mark(2691);
      StringReader stringReader7 = new StringReader("!H}?((b'N{{M1$");
      StringReader stringReader8 = new StringReader(";");
      StringReader stringReader9 = new StringReader("PredicateforK.print(): 0 elements");
      StringReader stringReader10 = new StringReader("not");
      stringReader10.markSupported();
      stringReader4.reset();
      StringReader stringReader11 = new StringReader("!H}?((b'N{{M1$");
      stringReader4.reset();
      stringReader1.markSupported();
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      StringBuffer stringBuffer0 = jSPredicateForm0.toStr();
      assertEquals("", stringBuffer0.toString());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      JSJshopVars.backquote = 1794;
      System.setCurrentTimeMillis(19L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-481L));
      System.setCurrentTimeMillis(2277L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis((-2051L));
      JSTerm jSTerm0 = new JSTerm();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      // Undeclared exception!
      try { 
        jSPredicateForm0.matches((JSPredicateForm) jSTerm0, jSSubstitution0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.5571130980576458
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.add((Object) "%zw");
      jSTerm0.clone();
      JSPredicateForm jSPredicateForm0 = jSTerm0.standarizerPredicateForm();
      jSPredicateForm0.print();
      System.setCurrentTimeMillis(0);
      System.setCurrentTimeMillis(0);
      System.setCurrentTimeMillis(0);
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis(1701L);
      System.setCurrentTimeMillis(0);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSPredicateForm jSPredicateForm1 = jSTerm0.applySubstitutionPF(jSSubstitution0);
      System.setCurrentTimeMillis((-2831L));
      System.setCurrentTimeMillis((-4148L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis((-4148L));
      System.setCurrentTimeMillis(0L);
      JSPredicateForm jSPredicateForm2 = jSPredicateForm1.clonePF();
      assertNotSame(jSPredicateForm1, jSPredicateForm2);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      long long0 = (-481L);
      long long1 = 19L;
      Object object0 = new Object();
      jSPredicateForm0.add(object0);
      System.setCurrentTimeMillis(19L);
      System.setCurrentTimeMillis((-481L));
      // Undeclared exception!
      try { 
        jSPredicateForm0.print();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Object cannot be cast to java.lang.String
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Predicateform.print(): 0 elements");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSTerm jSTerm1 = new JSTerm();
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      streamTokenizer0.lowerCaseMode(false);
      streamTokenizer1.nextToken();
      streamTokenizer1.wordChars(41, 41);
      JSTerm jSTerm2 = new JSTerm(streamTokenizer1);
      streamTokenizer0.parseNumbers();
      jSTerm0.makeVariable();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSTerm0.makeVariable();
      streamTokenizer1.ordinaryChar(58);
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      jSSubstitution0.addElements(jSSubstitution1);
      jSTerm1.makeVariable();
      JSSubstitution jSSubstitution2 = new JSSubstitution();
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      JSSubstitution jSSubstitution3 = new JSSubstitution();
      jSSubstitution3.add((Object) jSSubstitution1);
      jSTerm0.parallelStream();
      JSSubstitution jSSubstitution4 = jSTerm1.matches((JSPredicateForm) jSTerm2, jSSubstitution0);
      assertTrue(jSSubstitution4.fail());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      Comparator<String> comparator0 = (Comparator<String>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      jSPredicateForm0.sort(comparator0);
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.add((Object) "#C/oF");
      JSSubstitution jSSubstitution1 = jSTerm0.matches(jSPredicateForm0);
      assertTrue(jSSubstitution1.fail());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.0388550509975096
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Predicateform.print(): 0 elements");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSPredicateForm jSPredicateForm0 = jSTerm0.clonePF();
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      stringReader0.read();
      JSPredicateForm jSPredicateForm1 = jSTerm0.standarizerPredicateForm();
      JSSubstitution jSSubstitution0 = jSPredicateForm1.matches((JSPredicateForm) jSTerm0);
      jSPredicateForm1.equals((JSPredicateForm) jSTerm0);
      JSPredicateForm jSPredicateForm2 = jSTerm0.applySubstitutionPF(jSSubstitution0);
      jSPredicateForm0.removeElement((Object) null);
      JSSubstitution jSSubstitution1 = jSTerm0.matches(jSPredicateForm1, jSSubstitution0);
      jSPredicateForm1.clonePF();
      streamTokenizer1.ordinaryChar((-2022119361));
      streamTokenizer1.ordinaryChar((-122));
      JSPredicateForm jSPredicateForm3 = new JSPredicateForm();
      JSPredicateForm jSPredicateForm4 = jSPredicateForm1.applySubstitutionPF(jSSubstitution0);
      jSPredicateForm4.trimToSize();
      JSPredicateForm jSPredicateForm5 = jSPredicateForm1.standarizerPredicateForm();
      jSPredicateForm5.clonePF();
      jSSubstitution0.add((Object) jSPredicateForm3);
      jSPredicateForm4.standarizerPredicateForm();
      jSPredicateForm1.parallelStream();
      jSPredicateForm5.standarizerPredicateForm();
      jSPredicateForm2.matches(jSPredicateForm0, jSSubstitution1);
      JSPredicateForm jSPredicateForm6 = null;
      try {
        jSPredicateForm6 = new JSPredicateForm(streamTokenizer1);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      StringReader stringReader0 = new StringReader("PredicateforK.print(): 0 elements");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSTerm jSTerm1 = new JSTerm();
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      streamTokenizer0.lowerCaseMode(true);
      streamTokenizer1.nextToken();
      streamTokenizer1.wordChars(41, 41);
      JSTerm jSTerm2 = new JSTerm(streamTokenizer1);
      streamTokenizer0.parseNumbers();
      jSTerm0.makeVariable();
      jSTerm0.add((Object) null);
      jSTerm2.makeConstant();
      streamTokenizer1.ordinaryChar(58);
      jSTerm2.isGround();
      JSTerm jSTerm3 = new JSTerm(streamTokenizer1);
      jSTerm2.equals((JSPredicateForm) jSTerm3);
      streamTokenizer1.parseNumbers();
      Stream stream0 = jSTerm0.parallelStream();
      assertNotNull(stream0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      jSSubstitution0.add((Object) jSPredicateForm0);
      JSPredicateForm jSPredicateForm1 = new JSPredicateForm();
      // Undeclared exception!
      try { 
        jSPredicateForm0.equals(jSPredicateForm1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      StringReader stringReader0 = new StringReader("!1q,xksgzl[6\"qc \r.");
      stringReader0.read();
      StringReader stringReader1 = new StringReader("LIQg&Jw8'");
      stringReader0.markSupported();
      stringReader0.mark(582);
      stringReader1.mark(33);
      stringReader0.reset();
      StringReader stringReader2 = new StringReader("LIQg&Jw8'");
      StringReader stringReader3 = new StringReader("!1q,xksgzl[6\"qc \r.");
      stringReader3.skip(582);
      stringReader3.reset();
      stringReader0.ready();
      StringReader stringReader4 = new StringReader("LIQg&Jw8'");
      stringReader4.ready();
      StringReader stringReader5 = new StringReader("!1q,xksgzl[6\"qc \r.");
      stringReader5.mark(3428);
      StringReader stringReader6 = new StringReader("Operator name expected");
      stringReader6.markSupported();
      stringReader6.reset();
      StringReader stringReader7 = new StringReader("lrm!0AD69 ");
      JSTerm jSTerm0 = new JSTerm();
      JSSubstitution jSSubstitution0 = null;
      // Undeclared exception!
      try { 
        jSTerm0.applySubstitutionPF((JSSubstitution) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      StringReader stringReader0 = new StringReader("!1q,xkSgcZL[6\"qc br.");
      stringReader0.reset();
      stringReader0.reset();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.lowerCaseMode(true);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      streamTokenizer1.slashSlashComments(true);
      streamTokenizer1.nextToken();
      StreamTokenizer streamTokenizer2 = new StreamTokenizer(stringReader0);
      StreamTokenizer streamTokenizer3 = new StreamTokenizer(stringReader0);
      streamTokenizer1.parseNumbers();
      streamTokenizer1.ordinaryChars((-4), (-4));
      streamTokenizer3.eolIsSignificant(true);
      streamTokenizer3.nval = (-648.386334);
      streamTokenizer1.ordinaryChar((-4));
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSJshopVars.verticalL = (-1797);
      streamTokenizer3.ordinaryChar(33);
      StringReader stringReader1 = new StringReader("!");
      System.setCurrentTimeMillis((-4));
      System.setCurrentTimeMillis(1L);
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      // Undeclared exception!
      try { 
        jSPredicateForm0.JSPredicateFormInit(streamTokenizer3);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.5004024235381879
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      StringReader stringReader0 = new StringReader("#C/oPF");
      stringReader0.reset();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.lowerCaseMode(false);
      streamTokenizer0.nextToken();
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      streamTokenizer0.parseNumbers();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSSubstitution0.add((Object) "#C/oPF");
      streamTokenizer0.ordinaryChar(2200);
      jSTerm0.parallelStream();
      // Undeclared exception!
      try { 
        jSTerm0.matches((JSPredicateForm) jSTerm0, jSSubstitution0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to umd.cs.shop.JSPairVarTerm
         //
         verifyException("umd.cs.shop.JSSubstitution", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      StringReader stringReader0 = new StringReader("PredicateforK.print(): 0 elements");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSTerm jSTerm1 = new JSTerm();
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      streamTokenizer0.lowerCaseMode(false);
      streamTokenizer1.nextToken();
      streamTokenizer1.wordChars(41, 41);
      JSTerm jSTerm2 = new JSTerm(streamTokenizer1);
      streamTokenizer0.parseNumbers();
      jSTerm0.makeVariable();
      StreamTokenizer streamTokenizer2 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm3 = new JSTerm(streamTokenizer2);
      streamTokenizer1.parseNumbers();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      streamTokenizer1.ordinaryChar(58);
      jSTerm3.parallelStream();
      JSSubstitution jSSubstitution1 = jSTerm3.matches((JSPredicateForm) jSTerm0, jSSubstitution0);
      assertTrue(jSSubstitution1.fail());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      Comparator<String> comparator0 = (Comparator<String>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      jSPredicateForm0.sort(comparator0);
      JSTerm jSTerm0 = new JSTerm();
      // Undeclared exception!
      try { 
        jSTerm0.matches(jSPredicateForm0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      // Undeclared exception!
      try { 
        jSTerm0.applySubstitutionPF(jSSubstitution0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      // Undeclared exception!
      try { 
        jSPredicateForm0.standarizerPredicateForm();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      StringReader stringReader0 = new StringReader("!1q,xkSgcZL[6\"qc br.");
      stringReader0.mark(9);
      stringReader0.reset();
      stringReader0.reset();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.ttype = 9;
      streamTokenizer0.lowerCaseMode(true);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      streamTokenizer1.slashSlashComments(true);
      streamTokenizer1.nextToken();
      StreamTokenizer streamTokenizer2 = new StreamTokenizer(stringReader0);
      System.setCurrentTimeMillis(9);
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm((String) null);
      jSPredicateForm0.print();
      System.setCurrentTimeMillis((-4));
      System.setCurrentTimeMillis(2231L);
      System.setCurrentTimeMillis(9);
      System.setCurrentTimeMillis(33);
      jSPredicateForm0.print();
      assertTrue(jSPredicateForm0.isEmpty());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.2868359830561607
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      String string0 = "(PANL";
      StringReader stringReader0 = new StringReader("(PANL");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.makeVariable();
      Object object0 = new Object();
      Object object1 = new Object();
      jSTerm0.add(object1);
      jSTerm0.isGround();
      jSTerm0.add(object0);
      // Undeclared exception!
      try { 
        jSTerm0.clonePF();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Object cannot be cast to java.lang.String
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      int int0 = 0;
      JSTerm jSTerm0 = new JSTerm();
      long long0 = 19L;
      long long1 = 0L;
      System.setCurrentTimeMillis(0L);
      long long2 = 0L;
      System.setCurrentTimeMillis(401L);
      // Undeclared exception!
      try { 
        jSTerm0.print();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      System.setCurrentTimeMillis(19L);
      System.setCurrentTimeMillis(0L);
      jSPredicateForm0.print();
      System.setCurrentTimeMillis((-481L));
      System.setCurrentTimeMillis(2277L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-481L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(2277L);
      System.setCurrentTimeMillis(19L);
      System.setCurrentTimeMillis((-1375L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-889L));
      System.setCurrentTimeMillis(19L);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      StringReader stringReader0 = new StringReader("!1q,xksg5l[6\"qc \r.");
      stringReader0.read();
      StringReader stringReader1 = new StringReader("LIQg&Jw8'");
      stringReader0.markSupported();
      stringReader0.mark(33);
      stringReader1.mark(33);
      stringReader0.reset();
      StringReader stringReader2 = new StringReader("LIQg&Jw8'");
      StringReader stringReader3 = new StringReader("!1q,xksg5l[6\"qc \r.");
      stringReader3.skip(33);
      stringReader3.reset();
      stringReader0.ready();
      StringReader stringReader4 = new StringReader("LIQg&Jw8'");
      char[] charArray0 = new char[6];
      charArray0[0] = 'I';
      charArray0[1] = '+';
      charArray0[3] = '{';
      charArray0[4] = 'q';
      stringReader4.read(charArray0);
      stringReader4.ready();
      StringReader stringReader5 = new StringReader("!1q,xksg5l[6\"qc \r.");
      stringReader5.mark(3428);
      StringReader stringReader6 = new StringReader("Opert name (kpected");
      stringReader6.markSupported();
      stringReader6.reset();
      StringReader stringReader7 = new StringReader("lrm!0AD69 ");
      stringReader7.reset();
      stringReader5.markSupported();
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      StringBuffer stringBuffer0 = jSPredicateForm0.toStr();
      assertEquals(0, stringBuffer0.length());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm("%9PBu._b~$6%'EK,");
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.4293230219306162
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      String string0 = "(gAN";
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm("(gAN");
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }
}
