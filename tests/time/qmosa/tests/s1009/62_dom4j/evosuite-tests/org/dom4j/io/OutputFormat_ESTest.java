/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 21:02:28 GMT 2019
 */

package org.dom4j.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.dom4j.io.OutputFormat;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class OutputFormat_ESTest extends OutputFormat_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.457848345704652
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-padText");
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-padText";
      stringArray0[1] = "-padText";
      outputFormat0.setEncoding("-indent");
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.parseOptions(stringArray0, 2);
      outputFormat0.getNewLineAfterNTags();
      assertEquals("-indent", outputFormat0.getEncoding());
      
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      outputFormat2.getNewLineAfterNTags();
      String string0 = outputFormat1.getLineSeparator();
      assertEquals("\n", string0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.6969987794394548
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = "Invalid attribute quote character (";
      boolean boolean0 = false;
      OutputFormat outputFormat0 = new OutputFormat("Invalid attribute quote character (", false, "Invalid attribute quote character (");
      String string1 = ">_bei\\bt65!(";
      outputFormat0.setAttributeQuoteCharacter('\'');
      outputFormat0.setIndent(true);
      outputFormat0.setNewlines(false);
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('S');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (S)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      boolean boolean0 = false;
      OutputFormat outputFormat0 = new OutputFormat("Invalid attribute quote character (", false, "Invalid attribute quote character (");
      String string0 = ">_be{6bthp;<!(";
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('\u001D');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (\u001D)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.7332480062953453
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.setTrimText(false);
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.setXHTML(true);
      outputFormat0.setNewlines(false);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "YrLZj UK";
      stringArray0[1] = "YrLZj UK";
      stringArray0[2] = "YrLZj UK";
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.setLineSeparator((String) null);
      outputFormat0.setPadText(false);
      outputFormat0.setOmitEncoding(false);
      OutputFormat outputFormat1 = new OutputFormat("gZ E%qCZddxPp", false, "YrLZj UK");
      outputFormat0.setEncoding((String) null);
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      outputFormat0.getLineSeparator();
      assertTrue(outputFormat0.isXHTML());
      
      outputFormat1.setEncoding("YrLZj UK");
      outputFormat2.setNewlines(true);
      assertFalse(outputFormat2.isXHTML());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.170793809518273
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", false, "");
      outputFormat0.setIndent("");
      outputFormat0.getIndent();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setExpandEmptyElements(true);
      outputFormat1.setTrimText(true);
      outputFormat1.setLineSeparator((String) null);
      outputFormat1.isPadText();
      outputFormat1.isXHTML();
      outputFormat1.isExpandEmptyElements();
      OutputFormat outputFormat2 = new OutputFormat("-padText", true);
      outputFormat2.setIndentSize(0);
      assertEquals("", outputFormat2.getIndent());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.0376694645874416
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String string0 = "`VUBK$eddgxeSy$";
      OutputFormat outputFormat0 = new OutputFormat("`VUBK$eddgxeSy$", false);
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat0.setEncoding("`VUBK$eddgxeSy$");
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.setLineSeparator("-expandEmptygZ E%qCZddxPp");
      outputFormat0.setXHTML(true);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "-encoding";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.885074759977858
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", false, "");
      outputFormat0.getIndent();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      boolean boolean0 = true;
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      boolean boolean1 = false;
      outputFormat2.setPadText(false);
      outputFormat0.setIndent(false);
      outputFormat1.setExpandEmptyElements(true);
      outputFormat1.setTrimText(true);
      outputFormat1.setLineSeparator((String) null);
      outputFormat1.isPadText();
      String string0 = "-padText";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions((String[]) null, 39);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.075752649861605
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("U^LN]H&pr9");
      outputFormat0.setSuppressDeclaration(false);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "U^LN]H&pr9";
      String[] stringArray1 = new String[8];
      stringArray1[0] = "r'O#Q'";
      stringArray1[1] = "U^LN]H&pr9";
      stringArray1[2] = "c/nP{wn\"fO";
      stringArray1[3] = ">_be{6bt;5!(T";
      stringArray1[4] = "";
      stringArray1[5] = "";
      stringArray1[7] = "";
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setIndent("^M!YeiI&qC!~");
      outputFormat0.isSuppressDeclaration();
      OutputFormat outputFormat1 = new OutputFormat("", true);
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      outputFormat2.setNewlines(false);
      OutputFormat outputFormat3 = OutputFormat.createPrettyPrint();
      // Undeclared exception!
      try { 
        outputFormat3.setAttributeQuoteCharacter('8');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (8)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.444469130672163
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setIndent(true);
      outputFormat0.setOmitEncoding(true);
      String[] stringArray0 = new String[0];
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setIndentSize(0);
      outputFormat0.setEncoding("-encoding");
      outputFormat0.isOmitEncoding();
      outputFormat0.setLineSeparator("");
      outputFormat0.setXHTML(true);
      outputFormat0.setIndent("");
      outputFormat0.isExpandEmptyElements();
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setIndent(false);
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.isXHTML();
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.isExpandEmptyElements();
      boolean boolean0 = outputFormat0.isTrimText();
      assertEquals("-encoding", outputFormat0.getEncoding());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.0186566024982118
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setXHTML(false);
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.isExpandEmptyElements();
      outputFormat0.setNewlines(true);
      outputFormat0.setIndentSize(0);
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat0.setNewLineAfterDeclaration(true);
      OutputFormat outputFormat2 = new OutputFormat("h");
      outputFormat2.setIndentSize(2172);
      outputFormat2.setIndent("-indentSize");
      outputFormat2.setLineSeparator("h");
      outputFormat2.setExpandEmptyElements(true);
      outputFormat0.setNewlines(true);
      outputFormat2.getEncoding();
      outputFormat1.isExpandEmptyElements();
      outputFormat2.setIndentSize(2199);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-indentSize";
      stringArray0[1] = "h";
      // Undeclared exception!
      try { 
        outputFormat2.parseOptions(stringArray0, 0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"h\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("h0q9N;6+!~qEh.");
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[1] = "^M!YeiI&qC!~";
      stringArray0[2] = "-expandEmptyU^LN]H&pr9";
      stringArray0[3] = "-expandEmptyU^LN]H&pr9";
      outputFormat0.getNewLineAfterNTags();
      OutputFormat outputFormat1 = new OutputFormat("Vm1MD;wv._Y", false);
      outputFormat1.setNewLineAfterNTags((-128));
      outputFormat1.getNewLineAfterNTags();
      outputFormat0.getLineSeparator();
      String string0 = OutputFormat.STANDARD_INDENT;
      outputFormat1.getLineSeparator();
      assertEquals((-128), outputFormat1.getNewLineAfterNTags());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.1606859275426658
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("TLFfO-2HK_ZKyIl2G", false, "^M!YeiI&qC!~");
      outputFormat0.setIndent("C2dj*`u~!w}jw>Y98");
      outputFormat0.getIndent();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      outputFormat2.setIndent(false);
      outputFormat1.setExpandEmptyElements(false);
      OutputFormat outputFormat3 = new OutputFormat("C2dj*`u~!w}jw>Y98");
      outputFormat3.setTrimText(false);
      outputFormat2.setLineSeparator("");
      OutputFormat outputFormat4 = OutputFormat.createCompactFormat();
      outputFormat4.isPadText();
      // Undeclared exception!
      try { 
        outputFormat4.parseOptions((String[]) null, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.2235185382845533
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true, "");
      outputFormat0.setIndent(true);
      outputFormat0.setOmitEncoding(true);
      String[] stringArray0 = new String[0];
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setIndentSize(0);
      outputFormat0.setEncoding("-encoding");
      outputFormat0.isOmitEncoding();
      outputFormat0.setXHTML(true);
      outputFormat0.setIndent("");
      outputFormat0.isExpandEmptyElements();
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setIndent(false);
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.isXHTML();
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.isExpandEmptyElements();
      outputFormat0.isTrimText();
      outputFormat0.getEncoding();
      assertEquals("-encoding", outputFormat0.getEncoding());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.0995015447694865
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true, "");
      outputFormat0.setIndent(true);
      outputFormat0.setOmitEncoding(true);
      String[] stringArray0 = new String[0];
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setIndentSize(0);
      outputFormat0.setEncoding("-encoding");
      outputFormat0.isOmitEncoding();
      outputFormat0.setLineSeparator("");
      outputFormat0.setXHTML(true);
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.setIndent("-encoding");
      outputFormat0.isSuppressDeclaration();
      outputFormat0.setTrimText(true);
      outputFormat0.setLineSeparator("e}codin4g");
      assertEquals("-encoding", outputFormat0.getIndent());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.8532851225497633
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      outputFormat0.parseOptions(stringArray0, 0);
      String[] stringArray1 = new String[8];
      stringArray1[0] = "";
      stringArray1[1] = "";
      outputFormat0.parseOptions(stringArray0, 0);
      assertEquals("\n", outputFormat0.getLineSeparator());
      
      outputFormat0.setLineSeparator("");
      OutputFormat outputFormat1 = new OutputFormat("Ol", false, "");
      outputFormat0.setEncoding((String) null);
      OutputFormat outputFormat2 = new OutputFormat();
      outputFormat2.setOmitEncoding(true);
      outputFormat2.setOmitEncoding(true);
      outputFormat1.getEncoding();
      String string0 = outputFormat1.getEncoding();
      assertEquals("", string0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.9366147725931562
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("^M!YeiI&qC!~", false);
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat0.setAttributeQuoteCharacter('\"');
      outputFormat0.getNewLineAfterNTags();
      OutputFormat outputFormat1 = new OutputFormat();
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('Y');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (Y)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("Invalid attribute quote character (", false, "Invalid attribute quote character (");
      OutputFormat outputFormat1 = new OutputFormat("[^:f{", false);
      outputFormat1.getAttributeQuoteCharacter();
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('`');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (`)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.241028319059176
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.setLineSeparator("");
      outputFormat0.setNewLineAfterNTags((-1410));
      outputFormat0.isOmitEncoding();
      outputFormat0.isNewlines();
      outputFormat0.setIndent(false);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.setTrimText(false);
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat0.isPadText();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setNewlines(false);
      boolean boolean0 = outputFormat0.isTrimText();
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.847642989259894
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("uNU!1<LQW|R7,=|Wt", true, "uNU!1<LQW|R7,=|Wt");
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setPadText(true);
      outputFormat0.setIndentSize(40);
      outputFormat0.setTrimText(false);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.setIndent(true);
      outputFormat0.isSuppressDeclaration();
      outputFormat0.isNewlines();
      outputFormat0.getEncoding();
      assertEquals("  ", outputFormat0.getIndent());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.7099578008946406
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      outputFormat0.parseOptions(stringArray0, 0);
      String[] stringArray1 = new String[8];
      stringArray1[0] = "r'O#Q'";
      stringArray1[1] = "";
      outputFormat0.parseOptions(stringArray1, 0);
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setLineSeparator("");
      OutputFormat outputFormat1 = new OutputFormat("", true, "");
      outputFormat1.setEncoding(">>9ea}m?z");
      outputFormat0.setOmitEncoding(true);
      outputFormat0.getEncoding();
      outputFormat0.getEncoding();
      assertTrue(outputFormat0.isOmitEncoding());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      boolean boolean0 = outputFormat0.isXHTML();
      assertFalse(boolean0);
      assertFalse(outputFormat0.isOmitEncoding());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isPadText());
      assertFalse(outputFormat0.isTrimText());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isNewlines());
      assertEquals("", outputFormat0.getIndent());
      assertEquals("\n", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("Qp{VKz(%F]WC#~,0Q`", false);
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      // Undeclared exception!
      try { 
        outputFormat1.parseOptions((String[]) null, 2147);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.1645693257162542
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      int int0 = outputFormat0.parseOptions(stringArray0, 0);
      assertEquals(0, int0);
      assertEquals("", outputFormat0.getIndent());
      
      OutputFormat outputFormat1 = new OutputFormat("", false, "rb");
      assertEquals('\"', outputFormat1.getAttributeQuoteCharacter());
      assertEquals(0, outputFormat1.getNewLineAfterNTags());
      assertFalse(outputFormat1.isPadText());
      assertFalse(outputFormat1.isOmitEncoding());
      assertEquals("rb", outputFormat1.getEncoding());
      assertEquals("", outputFormat1.getIndent());
      assertTrue(outputFormat1.isNewLineAfterDeclaration());
      assertFalse(outputFormat1.isXHTML());
      assertFalse(outputFormat1.isExpandEmptyElements());
      assertFalse(outputFormat1.isSuppressDeclaration());
      assertFalse(outputFormat1.isTrimText());
      assertFalse(outputFormat1.isNewlines());
      assertEquals("\n", outputFormat1.getLineSeparator());
      
      outputFormat0.setIndent((String) null);
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertFalse(outputFormat0.isXHTML());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isPadText());
      assertFalse(outputFormat0.isOmitEncoding());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isExpandEmptyElements());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.365643118456063
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("`VUBK$eddgxeSy$", false);
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat0.setEncoding("`VUBK$eddgxeSy$");
      outputFormat0.setSuppressDeclaration(false);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "`VUBK$eddgxeSy$";
      stringArray0[1] = "YrLZj UK";
      outputFormat0.setIndent("YrLZj UK");
      stringArray0[2] = "^M!YeiI&qC!~";
      stringArray0[3] = "c/nP{w;f ";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setLineSeparator("Xyb0JaR0oKn;))45z");
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.isPadText();
      outputFormat0.setLineSeparator("YrLZj UK");
      outputFormat0.setLineSeparator("Xyb0JaR0oKn;))45z");
      outputFormat0.setPadText(false);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setEncoding("YrLZj UK");
      outputFormat0.setOmitEncoding(true);
      outputFormat0.getEncoding();
      outputFormat0.getEncoding();
      assertEquals("Xyb0JaR0oKn;))45z", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.1737502027185687
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("Q> AUeMm*K'zO~:l");
      outputFormat0.getLineSeparator();
      outputFormat0.isOmitEncoding();
      outputFormat0.getNewLineAfterNTags();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat0.setLineSeparator("\n");
      outputFormat0.setIndentSize(1);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.setIndentSize(0);
      outputFormat0.isPadText();
      outputFormat0.setIndentSize(1);
      outputFormat0.getEncoding();
      outputFormat0.getLineSeparator();
      assertEquals(" ", outputFormat0.getIndent());
      
      String string0 = outputFormat1.getEncoding();
      assertEquals("UTF-8", string0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.5168760810714366
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "}b)uf";
      stringArray0[1] = "-newlines";
      outputFormat0.setPadText(true);
      outputFormat0.setIndent(true);
      stringArray0[2] = "-trimText";
      stringArray0[3] = "G-Tat/Mq;Aug>o`pS=";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "gm&l#";
      stringArray0[7] = "-lineSeparator";
      stringArray0[8] = "-xhtmlnKkgxKDq";
      int int0 = outputFormat0.parseOptions(stringArray0, 1325);
      assertTrue(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isOmitEncoding());
      assertEquals(1325, int0);
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isXHTML());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("  ", outputFormat0.getIndent());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertTrue(outputFormat0.isPadText());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertTrue(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isExpandEmptyElements());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.8606101898701155
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.getIndent();
      OutputFormat.createCompactFormat();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setIndent(false);
      OutputFormat outputFormat2 = new OutputFormat();
      outputFormat2.setExpandEmptyElements(true);
      outputFormat0.setTrimText(true);
      String string0 = null;
      OutputFormat outputFormat3 = OutputFormat.createPrettyPrint();
      outputFormat3.isPadText();
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions((String[]) null, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("M", false, "M");
      outputFormat0.isOmitEncoding();
      outputFormat0.setSuppressDeclaration(false);
      boolean boolean0 = outputFormat0.isExpandEmptyElements();
      assertFalse(boolean0);
      
      outputFormat0.setOmitEncoding(false);
      outputFormat0.isSuppressDeclaration();
      String string0 = outputFormat0.getLineSeparator();
      assertEquals("\n", string0);
      
      outputFormat0.setEncoding("M");
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertEquals("M", outputFormat0.getIndent());
      assertEquals("M", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isXHTML());
      assertFalse(outputFormat0.isOmitEncoding());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isPadText());
      assertFalse(outputFormat0.isNewlines());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.1475837365690835
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      outputFormat0.setLineSeparator("");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[1] = "-expandEmptyU^LN]H&pr9";
      stringArray0[2] = "-expandEmptyU^LN]H&pr9";
      outputFormat0.parseOptions(stringArray0, 1);
      OutputFormat outputFormat1 = new OutputFormat("-xhtmlInvalid attribute quote character (", false);
      outputFormat1.getNewLineAfterNTags();
      OutputFormat outputFormat2 = new OutputFormat("", false);
      OutputFormat outputFormat3 = new OutputFormat("t'H+");
      outputFormat0.setNewLineAfterNTags(2);
      outputFormat1.getNewLineAfterNTags();
      outputFormat0.getLineSeparator();
      assertEquals(2, outputFormat0.getNewLineAfterNTags());
      
      String string0 = OutputFormat.STANDARD_INDENT;
      String string1 = outputFormat1.getLineSeparator();
      assertEquals("\n", string1);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "9}C";
      stringArray0[1] = "yO_hqS7`lSC";
      stringArray0[2] = "W ):u$7<__";
      stringArray0[3] = "YrLZj UK";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "";
      stringArray0[7] = "hIQ+bv`Qn, (D\\'db";
      int int0 = outputFormat0.parseOptions(stringArray0, 4508);
      assertFalse(outputFormat0.isNewlines());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals(4508, int0);
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isXHTML());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isPadText());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isSuppressDeclaration());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setXHTML(true);
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.isNewLineAfterDeclaration();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "8W+B69pL>+\"ca&";
      stringArray0[1] = "";
      stringArray0[2] = "QuG(K!}s?";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "";
      stringArray0[7] = ">nx$/=2";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-940));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -940
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      String string0 = "Qp{VKz(%F]WC#~,0QV`";
      OutputFormat outputFormat0 = new OutputFormat("Qp{VKz(%F]WC#~,0QV`");
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setLineSeparator("F?9RiHyAAH");
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions((String[]) null, 34);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", false, "");
      char char0 = 'H';
      String[] stringArray0 = new String[2];
      outputFormat0.setIndent(false);
      stringArray0[0] = "";
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setEncoding("");
      stringArray0[1] = "";
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('>');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (>)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.946116207731865
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      OutputFormat.createCompactFormat();
      outputFormat1.setSuppressDeclaration(true);
      assertTrue(outputFormat1.isSuppressDeclaration());
      
      outputFormat0.isXHTML();
      boolean boolean0 = outputFormat0.isSuppressDeclaration();
      assertFalse(boolean0);
      
      boolean boolean1 = outputFormat0.isExpandEmptyElements();
      assertFalse(boolean1);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null);
      outputFormat0.setXHTML(false);
      outputFormat0.setIndent(false);
      String string0 = outputFormat0.getIndent();
      assertNull(string0);
      
      boolean boolean0 = outputFormat0.isSuppressDeclaration();
      assertFalse(boolean0);
      
      outputFormat0.setOmitEncoding(false);
      assertFalse(outputFormat0.isNewlines());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isXHTML());
      assertFalse(outputFormat0.isOmitEncoding());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isPadText());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isTrimText());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setTrimText(false);
      outputFormat0.isTrimText();
      outputFormat0.setXHTML(false);
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('9');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (9)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.7518685126965625
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setIndent("@qc[;{");
      outputFormat0.setNewLineAfterNTags((-3019));
      outputFormat0.setPadText(false);
      outputFormat0.setNewLineAfterNTags((-3019));
      outputFormat0.setPadText(false);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setNewlines(true);
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setLineSeparator("");
      outputFormat0.setIndentSize((-854));
      outputFormat0.setNewLineAfterDeclaration(false);
      assertEquals((-3019), outputFormat0.getNewLineAfterNTags());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.0368226330707406
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("Qp{VKz(%F]WC#~,0Q`");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "Qp{VKz(%F]WC#~,0Q`";
      stringArray0[1] = "Qp{VKz(%F]WC#~,0Q`";
      stringArray0[2] = "-expandEmptyU^LN]H&pr9";
      stringArray0[3] = "Qp{VKz(%F]WC#~,0Q`";
      stringArray0[4] = "`VUBK$eddg";
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.setLineSeparator(")");
      outputFormat0.setPadText(true);
      outputFormat0.setIndentSize(1);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setEncoding("`VUBK$eddg");
      outputFormat0.setNewlines(false);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.getEncoding();
      outputFormat0.getEncoding();
      assertEquals(")", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.9503897887244912
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      outputFormat0.parseOptions(stringArray0, 0);
      String[] stringArray1 = new String[8];
      stringArray1[0] = "r'O#Q'";
      stringArray1[1] = "";
      outputFormat0.parseOptions(stringArray1, 0);
      outputFormat0.setLineSeparator("");
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setXHTML(false);
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.setIndent("");
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.getLineSeparator();
      outputFormat0.setIndent("x\")]1[~T Z");
      assertEquals("x\")]1[~T Z", outputFormat0.getIndent());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("Q");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Q";
      outputFormat0.setIndentSize((-1));
      assertEquals("", outputFormat0.getIndent());
      
      OutputFormat outputFormat1 = new OutputFormat("", true, "");
      outputFormat1.setExpandEmptyElements(false);
      outputFormat0.setIndent("");
      assertEquals("\n", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.5594415416798357
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("Invalid attribute quote character (", true, "Invalid attribute quote character (");
      outputFormat0.setTrimText(true);
      outputFormat0.setEncoding("");
      outputFormat0.setTrimText(false);
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.setLineSeparator("-expandEmptyU^LN]H&pr9");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-expandEmptyU^LN]H&pr9";
      stringArray0[1] = "Invalid attribute quote character (";
      stringArray0[2] = ">_be{6";
      stringArray0[3] = "-expandEmptyU^LN]H&pr9";
      stringArray0[4] = "Invalid attribute quote character (";
      stringArray0[5] = "-expandEmptyU^LN]H&pr9";
      OutputFormat outputFormat1 = new OutputFormat("-expandEmptyU^LN]H&pr9", true, ">_be{6");
      outputFormat0.setEncoding(";6vn]]");
      outputFormat1.setOmitEncoding(false);
      outputFormat0.getEncoding();
      outputFormat0.getEncoding();
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-5040));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -5040
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("Qp{VKz(%F]WC#~,0Q`");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "Qp{VKz(%F]WC#~,0Q`";
      stringArray0[1] = "Qp{VKz(%F]WC#~,0Q`";
      boolean boolean0 = true;
      outputFormat0.setNewlines(true);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-192));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -192
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("Qp{VKz(%F]WC#~,0QV`");
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.setNewLineAfterNTags(2);
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.getLineSeparator();
      String string0 = OutputFormat.STANDARD_INDENT;
      outputFormat0.getLineSeparator();
      assertEquals(2, outputFormat0.getNewLineAfterNTags());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.1431128238477373
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      int int0 = 1;
      OutputFormat outputFormat0 = new OutputFormat("");
      outputFormat0.setLineSeparator("");
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[1] = "-xhtmlnKkgxDKDq";
      stringArray0[2] = "xwd*9Od'";
      stringArray0[3] = "";
      outputFormat0.parseOptions(stringArray0, 1);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }
}
