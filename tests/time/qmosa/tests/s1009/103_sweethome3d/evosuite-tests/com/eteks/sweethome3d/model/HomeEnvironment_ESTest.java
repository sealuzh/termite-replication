/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 20:31:04 GMT 2019
 */

package com.eteks.sweethome3d.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.eteks.sweethome3d.model.AspectRatio;
import com.eteks.sweethome3d.model.Camera;
import com.eteks.sweethome3d.model.CatalogTexture;
import com.eteks.sweethome3d.model.Content;
import com.eteks.sweethome3d.model.HomeEnvironment;
import com.eteks.sweethome3d.model.HomeTexture;
import com.eteks.sweethome3d.model.TextureImage;
import com.eteks.sweethome3d.model.TexturesCategory;
import com.eteks.sweethome3d.tools.ResourceURLContent;
import com.eteks.sweethome3d.tools.TemporaryURLContent;
import com.eteks.sweethome3d.tools.URLContent;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeListenerProxy;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLStreamHandler;
import java.util.LinkedList;
import java.util.List;
import java.util.NoSuchElementException;
import java.util.function.Consumer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HomeEnvironment_ESTest extends HomeEnvironment_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.1013448627418367
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      int int0 = 3524;
      int int1 = (-3397);
      HomeEnvironment homeEnvironment2 = new HomeEnvironment(425, (HomeTexture) null, 3524, (HomeTexture) null, (-3397), 3524);
      homeEnvironment2.setVideoWidth(425);
      homeEnvironment2.setCeillingLightColor((-3397));
      HomeEnvironment homeEnvironment3 = homeEnvironment1.clone();
      homeEnvironment3.getGroundTexture();
      homeEnvironment3.setSubpartSizeUnderLight(1.0F);
      homeEnvironment3.setGroundColor((-579));
      homeEnvironment3.setAllLevelsVisible(true);
      homeEnvironment3.getVideoAspectRatio();
      homeEnvironment3.setPhotoHeight(425);
      float float0 = 2.0F;
      homeEnvironment2.setWallsAlpha(2.0F);
      String string0 = null;
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      homeEnvironment1.setVideoWidth((-579));
      homeEnvironment1.getVideoWidth();
      ResourceURLContent resourceURLContent0 = null;
      try {
        resourceURLContent0 = new ResourceURLContent(classLoader0, "JV\u0007@8v#7o9xp-");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown resource JV\u0007@8v#7o9xp-
         //
         verifyException("com.eteks.sweethome3d.tools.ResourceURLContent", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.10451946591644
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment homeEnvironment2 = new HomeEnvironment(460, (HomeTexture) null, 3524, (HomeTexture) null, (-3397), 3524);
      homeEnvironment2.setVideoWidth(460);
      homeEnvironment2.setCeillingLightColor((-3397));
      HomeEnvironment homeEnvironment3 = homeEnvironment1.clone();
      homeEnvironment3.setSubpartSizeUnderLight(1.0F);
      homeEnvironment3.setGroundColor((-579));
      homeEnvironment3.setAllLevelsVisible(true);
      homeEnvironment0.setGroundColor(3524);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment1.setPhotoHeight(2972);
      HomeEnvironment homeEnvironment4 = new HomeEnvironment();
      homeEnvironment4.setWallsAlpha(2972);
      homeEnvironment1.setPhotoQuality((-3397));
      HomeEnvironment.Property.values();
      HomeEnvironment.Property.values();
      HomeEnvironment homeEnvironment5 = homeEnvironment2.clone();
      HomeEnvironment.Property.values();
      int int0 = homeEnvironment5.getLightColor();
      assertEquals((-3397), homeEnvironment2.getCeillingLightColor());
      assertEquals((-3397), int0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.259345973978942
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeTexture homeTexture0 = null;
      HomeEnvironment homeEnvironment2 = new HomeEnvironment(425, (HomeTexture) null, 3524, (HomeTexture) null, (-3397), 3524);
      homeEnvironment2.setVideoWidth(425);
      homeEnvironment2.setCeillingLightColor((-3397));
      HomeEnvironment homeEnvironment3 = homeEnvironment1.clone();
      homeEnvironment3.getGroundTexture();
      homeEnvironment3.setSubpartSizeUnderLight(1.0F);
      homeEnvironment3.setGroundColor((-579));
      homeEnvironment3.setAllLevelsVisible(true);
      homeEnvironment3.getVideoAspectRatio();
      homeEnvironment3.setPhotoHeight(425);
      homeEnvironment2.setWallsAlpha(0.0F);
      ClassLoader.getSystemClassLoader();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      homeEnvironment1.getPhotoHeight();
      homeEnvironment0.setVideoFrameRate(425);
      homeEnvironment3.setAllLevelsVisible(false);
      homeEnvironment1.getVideoWidth();
      homeEnvironment3.getVideoFrameRate();
      HomeEnvironment.Property.values();
      homeEnvironment2.getVideoAspectRatio();
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("RrRnPUm");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.RrRnPUm
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.1958550791509905
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.setPhotoWidth((-4789));
      homeEnvironment0.getVideoHeight();
      URL uRL0 = MockURL.getHttpExample();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      homeEnvironment1.setVideoFrameRate((-1));
      homeEnvironment1.setSkyColor(2146);
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      CatalogTexture catalogTexture0 = new CatalogTexture("06=CQ;T88&4z[$$", resourceURLContent0, 2146, (-1), false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment2 = new HomeEnvironment();
      HomeEnvironment homeEnvironment3 = new HomeEnvironment(554, homeTexture0, 2146, (-1), (-413.54788F));
      homeEnvironment3.setPhotoQuality((-4789));
      homeEnvironment3.setPhotoHeight((-1781));
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      homeEnvironment2.setAllLevelsVisible(false);
      homeEnvironment1.getPhotoWidth();
      homeEnvironment3.getGroundTexture();
      assertEquals((-4789), homeEnvironment3.getPhotoQuality());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.153990857548753
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "FILL_AND_OUTLINE");
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-33);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "FILL_AND_OUTLINE");
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.LIGHT_COLOR;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListener propertyChangeListener1 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("FILL_AND_OUTLINE", propertyChangeListener1);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      AspectRatio aspectRatio1 = AspectRatio.FREE_RATIO;
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(homeEnvironment0, "FILL_AND_OUTLINE", "", object0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.setPhotoAspectRatio(aspectRatio1);
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent(object0, "", object0, "FILL_AND_OUTLINE");
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent1);
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.getPhotoHeight();
      homeEnvironment0.setVideoFrameRate(300);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.getVideoFrameRate();
      HomeEnvironment.Property.values();
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.getGroundColor();
      boolean boolean0 = homeEnvironment0.isAllLevelsVisible();
      assertEquals(AspectRatio.RATIO_3_2, homeEnvironment0.getVideoAspectRatio());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.022248870579868
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Random.setNextRandom(20);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoFrameRate(20);
      homeEnvironment0.clone();
      homeEnvironment0.setVideoFrameRate(20);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      // Undeclared exception!
      try { 
        linkedList0.remove();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Random.setNextRandom(15);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.setVideoWidth(320);
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(2759, (HomeTexture) null, 2759, 0, 0.60640514F);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      Random.setNextRandom(2759);
      Object object0 = new Object();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.ALL_LEVELS_VISIBLE;
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.setPhotoWidth(400);
      assertTrue(homeEnvironment0.isAllLevelsVisible());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.5015166969605436
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "FILL_AND_OUTLINE");
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-33);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.LIGHT_COLOR;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListener propertyChangeListener1 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("Zds%}A_", propertyChangeListener1);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("FILL_AND_OUTLINE", propertyChangeListener0);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(homeEnvironment0, "FILL_AND_OUTLINE", "", object0);
      propertyChangeEvent0.toString();
      propertyChangeListenerProxy1.propertyChange(propertyChangeEvent0);
      homeEnvironment0.setCeillingLightColor((byte) (-33));
      homeEnvironment0.getPhotoQuality();
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.setCeillingLightColor((byte) (-33));
      HomeTexture homeTexture0 = null;
      try {
        homeTexture0 = new HomeTexture((TextureImage) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.model.HomeTexture", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.784066574475527
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      URL uRL0 = MockURL.getHttpExample();
      URL uRL1 = MockURL.URL(uRL0, "");
      URLContent uRLContent0 = new URLContent(uRL1);
      homeEnvironment0.setVideoWidth(2621);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setVideoFrameRate(2621);
      homeEnvironment1.setVideoWidth((-538));
      homeEnvironment1.getDrawingMode();
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment1.getVideoQuality();
      System.setCurrentTimeMillis((-538));
      homeEnvironment1.clone();
      homeEnvironment0.setAllLevelsVisible(false);
      assertEquals(1966, homeEnvironment0.getVideoHeight());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(2759, (HomeTexture) null, 2759, 0, 1.0F);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_QUALITY;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      Camera camera0 = new Camera(2304.2432F, (-173.65201F), (-1099.0F), 1.0F, (-0.5013307F), (-0.5013307F));
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(object0, "B-`5)O", (Object) null, "B-`5)O");
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      Camera camera1 = new Camera(0.0F, (-1736.8F), 1.0F, 0.0F, 2269.2F, 2269.2F);
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent(camera0, "~8!VS!*wI&Arrnl", camera1, propertyChangeListenerProxy0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent1);
      PropertyChangeEvent propertyChangeEvent2 = new PropertyChangeEvent(propertyChangeListenerProxy0, "SKY_TEXTURE", (Object) null, propertyChangeListenerProxy0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent2);
      PropertyChangeEvent propertyChangeEvent3 = new PropertyChangeEvent(homeEnvironment0, "rE2H59g%vD", (Object) null, "");
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent3);
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setAllLevelsVisible(true);
      System.setCurrentTimeMillis(0);
      homeEnvironment0.clone();
      assertTrue(homeEnvironment0.isAllLevelsVisible());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.0497978423100225
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setGroundColor(740);
      homeEnvironment0.setPhotoHeight(0);
      homeEnvironment0.setCeillingLightColor((-1));
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "PHOTO_QUALITY");
      homeEnvironment0.getSkyColor();
      homeEnvironment0.getPhotoHeight();
      Object object0 = new Object();
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      Camera camera0 = new Camera((-1088.5995F), (-505.13757F), 0.0F, 1670.1F, 480.2105F, (-1088.5995F));
      Camera camera1 = camera0.clone();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent("LIGHT_COLOR", "LIGHT_COLOR", homeEnvironment1, camera1);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("G\\ed?V_VWLA[boMdI'", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("TIME", propertyChangeListenerProxy0);
      propertyChangeListenerProxy1.propertyChange(propertyChangeEvent0);
      propertyChangeListenerProxy1.propertyChange(propertyChangeEvent0);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.CEILING_LIGHT_COLOR;
      homeEnvironment1.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy1);
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment1.getVideoWidth();
      boolean boolean0 = homeEnvironment0.isObserverCameraElevationAdjusted();
      assertEquals(AspectRatio.RATIO_4_3, homeEnvironment0.getPhotoAspectRatio());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.124771615329544
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      HomeEnvironment.DrawingMode.values();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      homeEnvironment0.setGroundColor(36);
      homeEnvironment0.setPhotoWidth(36);
      homeEnvironment0.setPhotoHeight(1728);
      homeEnvironment0.setPhotoHeight((-2485));
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      homeEnvironment0.setCeillingLightColor((-1888));
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "TIME");
      homeEnvironment0.getSkyColor();
      homeEnvironment0.getPhotoHeight();
      CatalogTexture catalogTexture0 = new CatalogTexture("TIME", (Content) null, 36, (-780.509F));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment((-1888), homeTexture0, 36, homeTexture0, 2067, (-1888));
      homeEnvironment1.isAllLevelsVisible();
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.getCeillingLightColor();
      homeEnvironment1.setCeillingLightColor(386);
      homeEnvironment0.getDrawingMode();
      homeEnvironment1.getSkyTexture();
      assertEquals(386, homeEnvironment1.getCeillingLightColor());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.046430838943019
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      HomeEnvironment.DrawingMode.values();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      URL uRL0 = MockURL.getHttpExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy((String) null, propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy((String) null, propertyChangeListenerProxy0);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_WIDTH;
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy1);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("3700-", propertyChangeListenerProxy1);
      Object object0 = new Object();
      Object object1 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(object1, (String) null, propertyChangeListenerProxy2, "3700-");
      propertyChangeListenerProxy1.propertyChange(propertyChangeEvent0);
      Object object2 = new Object();
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent(propertyChangeEvent0, "", object2, propertyChangeListenerProxy0);
      propertyChangeListenerProxy1.propertyChange(propertyChangeEvent1);
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy1);
      homeEnvironment0.setVideoFrameRate((-1559));
      homeEnvironment0.setVideoWidth(2143960930);
      homeEnvironment0.getDrawingMode();
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.getVideoQuality();
      System.setCurrentTimeMillis(600000L);
      homeEnvironment0.getVideoAspectRatio();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.getGroundTexture();
      assertEquals(1607970688, homeEnvironment0.getVideoHeight());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.236515101780002
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-33);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setPhotoQuality(1717986918);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.LIGHT_COLOR;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListener propertyChangeListener1 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("bik\b$/_>", propertyChangeListener1);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("FILL_AND_OUTLINE", propertyChangeListener0);
      AspectRatio aspectRatio1 = AspectRatio.FREE_RATIO;
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(homeEnvironment0, "FILL_AND_OUTLINE", "", object0);
      propertyChangeListenerProxy1.propertyChange(propertyChangeEvent0);
      homeEnvironment0.setPhotoAspectRatio(aspectRatio1);
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent(object0, "", object0, "FILL_AND_OUTLINE");
      propertyChangeListenerProxy1.propertyChange(propertyChangeEvent1);
      propertyChangeListenerProxy1.propertyChange((PropertyChangeEvent) null);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy1);
      homeEnvironment0.getPhotoHeight();
      homeEnvironment0.setVideoFrameRate(300);
      homeEnvironment0.setVideoWidth(300);
      homeEnvironment0.getDrawingMode();
      homeEnvironment0.getVideoQuality();
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.setPhotoWidth(300);
      homeEnvironment0.clone();
      assertEquals(300, homeEnvironment0.getVideoWidth());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.218456332760875
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL0 = MockURL.URL("com.eteks.sweethome3d.model.HomeEnvironment", "LIGHT_COLOR", 740, "LIGHT_COLOR", uRLStreamHandler0);
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("com.eteks.sweethome3d.model.HomeEnvironment", uRLContent0, 740, 740, false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeTexture homeTexture1 = new HomeTexture(homeTexture0);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment((-1), homeTexture1, 1101, 4331, 19);
      homeEnvironment0.clone();
      assertEquals(AspectRatio.RATIO_4_3, homeEnvironment0.getPhotoAspectRatio());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.9648040053930025
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setGroundColor(740);
      HomeEnvironment.Property.valueOf("LIGHT_COLOR");
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      HomeEnvironment.DrawingMode.values();
      homeEnvironment0.setCeillingLightColor(2865);
      homeEnvironment0.setVideoWidth((-2485));
      CatalogTexture catalogTexture0 = new CatalogTexture(".dnHR,1')/zh%=", "", (Content) null, 1170.0F, 1501, (String) null, false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setGroundTexture(homeTexture0);
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.isObserverCameraElevationAdjusted();
      homeEnvironment0.getPhotoAspectRatio();
      HomeEnvironment.Property.values();
      homeEnvironment0.setGroundColor(824);
      assertEquals(AspectRatio.RATIO_4_3, homeEnvironment0.getPhotoAspectRatio());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.75012938226178
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      HomeEnvironment.DrawingMode.values();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor(25);
      homeEnvironment0.setPhotoWidth(25);
      int int0 = 1728;
      homeEnvironment0.setPhotoHeight(1728);
      homeEnvironment0.setPhotoHeight(1728);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setCeillingLightColor(25);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "TIME");
      homeEnvironment0.getSkyColor();
      homeEnvironment0.getPhotoHeight();
      String string0 = null;
      try { 
        MockURL.URL("peQ9bg3X6(S>u~", "TIME", "peQ9bg3X6(S>u~");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // unknown protocol: peq9bg3x6(s>u~
         //
         verifyException("java.net.URL", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.318927629770502
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      homeEnvironment0.setVideoFrameRate(320);
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setSkyColor((-15));
      AspectRatio aspectRatio0 = AspectRatio.RATIO_16_9;
      homeEnvironment0.setSubpartSizeUnderLight((-1.0F));
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.getVideoFrameRate();
      homeEnvironment0.getLightColor();
      homeEnvironment0.getGroundTexture();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.getDrawingMode();
      homeEnvironment0.setWallsAlpha((-1.0F));
      homeEnvironment1.getPhotoAspectRatio();
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment1.setVideoWidth(13684944);
      assertEquals((-1.0F), homeEnvironment0.getSubpartSizeUnderLight(), 0.01F);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.1013448627418363
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "FILL_AND_OUTLINE");
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-33);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "FILL_AND_OUTLINE");
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.getGroundTexture();
      homeEnvironment1.setSubpartSizeUnderLight(3799.4F);
      homeEnvironment1.setGroundColor((byte) (-33));
      homeEnvironment1.setAllLevelsVisible(false);
      homeEnvironment1.getVideoAspectRatio();
      homeEnvironment1.setPhotoHeight((byte) (-33));
      homeEnvironment0.setWallsAlpha((byte) (-33));
      homeEnvironment0.getPhotoAspectRatio();
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      homeEnvironment0.setCeillingLightColor((-579));
      homeEnvironment0.setWallsAlpha(2125.0F);
      homeEnvironment2.getPhotoAspectRatio();
      HomeEnvironment.Property[] homeEnvironment_PropertyArray0 = HomeEnvironment.Property.values();
      assertEquals(20, homeEnvironment_PropertyArray0.length);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Random.setNextRandom(20);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setLightColor(1711);
      homeEnvironment0.setPhotoQuality((-1071));
      homeEnvironment0.clone();
      HomeEnvironment.Property[] homeEnvironment_PropertyArray0 = HomeEnvironment.Property.values();
      HomeEnvironment.Property[] homeEnvironment_PropertyArray1 = HomeEnvironment.Property.values();
      assertNotSame(homeEnvironment_PropertyArray1, homeEnvironment_PropertyArray0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.0215177853024624
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "FILL_AND_OUTLINE");
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-33);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.LIGHT_COLOR;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListener propertyChangeListener1 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("Zds%}A_", propertyChangeListener1);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      AspectRatio aspectRatio1 = AspectRatio.FREE_RATIO;
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(homeEnvironment0, "FILL_AND_OUTLINE", "", object0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.setPhotoAspectRatio(aspectRatio1);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "FILL_AND_OUTLINE");
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent(object0, "", object0, "FILL_AND_OUTLINE");
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent1);
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.getPhotoHeight();
      homeEnvironment0.setVideoFrameRate(300);
      homeEnvironment0.setVideoWidth(300);
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.getVideoQuality();
      homeEnvironment0.setPhotoWidth(426);
      assertEquals(AspectRatio.RATIO_3_2, homeEnvironment0.getVideoAspectRatio());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("", uRLContent0, 2287.0F, 2217.5247F, true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("13mEcj7';L", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("editorSubFolder.Windows", propertyChangeListenerProxy0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(15, homeTexture0, 15, 195, 1.0F);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_WIDTH;
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy1);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setLightColor(195);
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("7oGOiNR(g|-,G>fgr");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.7oGOiNR(g|-,G>fgr
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.126862207664039
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.setPhotoWidth((-4789));
      homeEnvironment0.getVideoHeight();
      URL uRL0 = MockURL.getHttpExample();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      homeEnvironment1.setVideoFrameRate(129);
      homeEnvironment1.setSkyColor(2135);
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      CatalogTexture catalogTexture0 = new CatalogTexture("06=CQ;T88&4z[$$", resourceURLContent0, 2135, 129, false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment2 = new HomeEnvironment(129, homeTexture0, 2577, (-4789), 1.0F);
      HomeEnvironment homeEnvironment3 = new HomeEnvironment(554, homeTexture0, 2135, 129, (-413.3F));
      homeEnvironment3.getDrawingMode();
      homeEnvironment2.setAllLevelsVisible(false);
      homeEnvironment1.getVideoQuality();
      homeEnvironment1.getPhotoWidth();
      homeEnvironment0.setPhotoWidth((-1781));
      homeEnvironment0.clone();
      assertEquals((-1781), homeEnvironment0.getPhotoWidth());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.236515101780002
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "FILL_AND_OUTLINE");
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-33);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setPhotoQuality(1717986918);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.LIGHT_COLOR;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListener propertyChangeListener1 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("Zds%}A_", propertyChangeListener1);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      AspectRatio aspectRatio1 = AspectRatio.FREE_RATIO;
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(homeEnvironment0, "FILL_AND_OUTLINE", "", object0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.setPhotoAspectRatio(aspectRatio1);
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent(object0, "", object0, "FILL_AND_OUTLINE");
      homeEnvironment0.setVideoQuality((byte) (-33));
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent1);
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.getPhotoHeight();
      homeEnvironment0.setVideoFrameRate(300);
      homeEnvironment0.setVideoWidth(300);
      homeEnvironment0.getDrawingMode();
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.getVideoQuality();
      System.setCurrentTimeMillis(2097L);
      homeEnvironment0.getVideoAspectRatio();
      assertEquals(300, homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.925863762875188
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoFrameRate(1609);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment0.setGroundColor(1609);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      linkedList0.forEach(consumer0);
      homeEnvironment0.setVideoCameraPath(linkedList0);
      homeEnvironment0.setVideoQuality((-129));
      homeEnvironment0.getVideoQuality();
      homeEnvironment0.getWallsAlpha();
      HomeEnvironment.DrawingMode.values();
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment0.setCeillingLightColor((-129));
      homeEnvironment0.setGroundColor((-129));
      homeEnvironment0.getVideoQuality();
      homeEnvironment0.setGroundColor((-129));
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.isAllLevelsVisible();
      assertEquals((-129), homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.6401461330725327
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      URL uRL0 = MockURL.getHttpExample();
      URL uRL1 = MockURL.URL(uRL0, "");
      URLContent uRLContent0 = new URLContent(uRL1);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      homeEnvironment0.setVideoFrameRate(2634);
      homeEnvironment0.setSkyColor(2634);
      homeEnvironment0.setWallsAlpha((-1.0F));
      homeEnvironment0.setSkyColor(2634);
      homeEnvironment0.getVideoWidth();
      int int0 = homeEnvironment0.getPhotoWidth();
      assertEquals(2634, homeEnvironment0.getSkyColor());
      assertEquals(400, int0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-2911), (HomeTexture) null, 2759, (-2911), 0);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setGroundColor(740);
      HomeEnvironment.Property.valueOf("LIGHT_COLOR");
      homeEnvironment0.setCeillingLightColor((-2911));
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", (PropertyChangeListener) null);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      homeEnvironment0.setPhotoQuality(1833);
      homeEnvironment0.getPhotoAspectRatio();
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy3 = new PropertyChangeListenerProxy("LIGHT_COLOR", propertyChangeListenerProxy2);
      assertFalse(propertyChangeListenerProxy3.equals((Object)propertyChangeListenerProxy0));
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.1698162924117232
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "FILL_AND_OUTLINE");
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-33);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setPhotoQuality(1717986918);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.LIGHT_COLOR;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListener propertyChangeListener1 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("Zds%}A_", propertyChangeListener1);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("FILL_AND_OUTLINE", propertyChangeListener0);
      AspectRatio aspectRatio1 = AspectRatio.FREE_RATIO;
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(homeEnvironment0, "FILL_AND_OUTLINE", "", object0);
      propertyChangeListenerProxy1.propertyChange(propertyChangeEvent0);
      homeEnvironment0.setPhotoAspectRatio(aspectRatio1);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "`yX`R7pu");
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent(object0, "", object0, "FILL_AND_OUTLINE");
      propertyChangeListenerProxy1.propertyChange(propertyChangeEvent1);
      propertyChangeListenerProxy1.propertyChange((PropertyChangeEvent) null);
      homeEnvironment0.setSubpartSizeUnderLight(2010.8F);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy1);
      homeEnvironment0.setVideoFrameRate((byte) (-33));
      homeEnvironment0.setVideoWidth((byte) (-33));
      homeEnvironment0.getDrawingMode();
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.getVideoQuality();
      System.setCurrentTimeMillis(2097L);
      homeEnvironment0.getVideoAspectRatio();
      assertEquals(AspectRatio.RATIO_3_2, homeEnvironment0.getVideoAspectRatio());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.2509874143254396
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment homeEnvironment2 = new HomeEnvironment(425, (HomeTexture) null, 3524, (HomeTexture) null, (-3397), 3524);
      homeEnvironment2.setVideoWidth(425);
      HomeEnvironment homeEnvironment3 = homeEnvironment1.clone();
      homeEnvironment3.setObserverCameraElevationAdjusted(false);
      homeEnvironment2.setAllLevelsVisible(false);
      homeEnvironment3.getGroundTexture();
      homeEnvironment3.setSubpartSizeUnderLight(1.0F);
      homeEnvironment3.setGroundColor((-579));
      homeEnvironment3.setAllLevelsVisible(true);
      homeEnvironment1.clone();
      homeEnvironment3.getVideoAspectRatio();
      homeEnvironment3.setPhotoHeight(425);
      homeEnvironment1.setGroundTexture((HomeTexture) null);
      homeEnvironment2.setWallsAlpha(0.0F);
      homeEnvironment1.setPhotoQuality((-2271));
      homeEnvironment1.getPhotoAspectRatio();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      HomeEnvironment homeEnvironment4 = homeEnvironment1.clone();
      homeEnvironment4.setCeillingLightColor((-3860));
      homeEnvironment1.setWallsAlpha((-1490.0F));
      Random.setNextRandom((-2271));
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.7787755691845217
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      URL uRL0 = MockURL.getHttpExample();
      URL uRL1 = MockURL.URL(uRL0, "");
      URLContent uRLContent0 = new URLContent(uRL1);
      homeEnvironment0.setVideoWidth(2621);
      CatalogTexture catalogTexture0 = new CatalogTexture("VIDEO_ASPECT_RATIO", uRLContent0, (-1.0F), (-1.0F));
      catalogTexture0.setCategory((TexturesCategory) null);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      CatalogTexture catalogTexture1 = new CatalogTexture("VIDEO_ASPECT_RATIO", "VIDEO_ASPECT_RATIO", uRLContent0, (-1.0F), 3136.2F, "");
      catalogTexture0.compareTo(catalogTexture1);
      homeEnvironment0.setSkyTexture(homeTexture0);
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setSkyColor(0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setWallsAlpha(531.6685F);
      assertEquals(531.6685F, homeEnvironment1.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(2759, (HomeTexture) null, 2759, (-8), 1.0F);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      Camera camera0 = new Camera(1.0F, 192.7627F, (-1099.0F), 1.0F, (-1.0F), (-1.0F));
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(object0, "B-`5)O", (Object) null, "B-`5)O");
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      Camera camera1 = new Camera(0.0F, (-1736.8F), 1.0F, 0.0F, 2269.2F, 2269.2F);
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent(camera0, "~8!VS!*wI&Arrnl", camera1, propertyChangeListenerProxy0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent1);
      PropertyChangeEvent propertyChangeEvent2 = new PropertyChangeEvent(propertyChangeListenerProxy0, "SKY_TEXTURE", (Object) null, propertyChangeListenerProxy0);
      Camera camera2 = camera1.clone();
      propertyChangeEvent2.setPropagationId(camera2);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent2);
      PropertyChangeEvent propertyChangeEvent3 = new PropertyChangeEvent(homeEnvironment0, "rE2H59g%vD", (Object) null, "");
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent3);
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment(2759, (HomeTexture) null, 2759, (-8), 531.6685F);
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      assertTrue(homeEnvironment2.isObserverCameraElevationAdjusted());
      assertEquals(2759, homeEnvironment2.getGroundColor());
      assertEquals((-8), homeEnvironment2.getLightColor());
      assertEquals(25, homeEnvironment2.getVideoFrameRate());
      assertEquals(13684944, homeEnvironment2.getCeillingLightColor());
      assertEquals(2759, homeEnvironment2.getSkyColor());
      assertEquals(300, homeEnvironment2.getPhotoHeight());
      assertNotSame(homeEnvironment2, homeEnvironment1);
      assertEquals(531.6685F, homeEnvironment2.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment2.getPhotoWidth());
      assertEquals(240, homeEnvironment2.getVideoHeight());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.8493821196946767
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_16_9;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      CatalogTexture catalogTexture0 = new CatalogTexture("Unknown resource ", "Unknown resource ", (Content) null, (-759.7F), (-759.7F), "Unknown resource ", false);
      TexturesCategory texturesCategory0 = new TexturesCategory("Unknown resource ");
      CatalogTexture catalogTexture1 = new CatalogTexture("+-eli[\"_&*7d(0LII", (Content) null, 0.0F, 0.0F);
      texturesCategory0.getIndexOfTexture(catalogTexture1);
      catalogTexture0.setCategory(texturesCategory0);
      CatalogTexture catalogTexture2 = new CatalogTexture("NAME", "", (Content) null, (-759.7F), (-759.7F), "FILL_AND_OUTLINE");
      catalogTexture0.compareTo(catalogTexture2);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setGroundTexture(homeTexture0);
      homeEnvironment0.setSubpartSizeUnderLight((-3803.3928F));
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.SUBPART_SIZE_UNDER_LIGHT;
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("Unknown resource ", (PropertyChangeListener) null);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.getSkyColor();
      homeEnvironment0.getPhotoHeight();
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      HomeTexture homeTexture1 = new HomeTexture(catalogTexture0);
      // Undeclared exception!
      try { 
        homeEnvironment0.setGroundTexture(homeTexture1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.model.HomeTexture", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      HomeTexture homeTexture0 = null;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "W/RS%eg9x=j\"'f");
      int int0 = 9;
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-1), (HomeTexture) null, (-1), 9, (-1));
      AspectRatio aspectRatio0 = AspectRatio.FREE_RATIO;
      // Undeclared exception!
      try { 
        homeEnvironment0.setVideoAspectRatio(aspectRatio0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unsupported aspect ratio FREE_RATIO
         //
         verifyException("com.eteks.sweethome3d.model.HomeEnvironment", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.1716596103840735
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "FILL_AND_OUTLINE");
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-33);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.LIGHT_COLOR;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      PropertyChangeListener propertyChangeListener1 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("Zds%}A_", propertyChangeListener1);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("FILL_AND_OUTLINE", propertyChangeListener0);
      AspectRatio aspectRatio1 = AspectRatio.VIEW_3D_RATIO;
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(homeEnvironment0, "FILL_AND_OUTLINE", "", object0);
      propertyChangeEvent0.toString();
      propertyChangeListenerProxy1.propertyChange(propertyChangeEvent0);
      homeEnvironment0.setPhotoAspectRatio(aspectRatio1);
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent(object0, "", object0, "FILL_AND_OUTLINE");
      propertyChangeListenerProxy1.propertyChange(propertyChangeEvent1);
      propertyChangeListenerProxy1.propertyChange((PropertyChangeEvent) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Zds%}A_");
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy1);
      homeEnvironment0.setVideoFrameRate((byte) (-33));
      homeEnvironment0.setVideoWidth((byte) (-33));
      homeEnvironment0.getDrawingMode();
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.getVideoQuality();
      System.setCurrentTimeMillis(2097L);
      homeEnvironment0.getVideoAspectRatio();
      int int0 = homeEnvironment0.getVideoHeight();
      assertEquals(AspectRatio.RATIO_3_2, homeEnvironment0.getVideoAspectRatio());
      assertEquals((-22), int0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=3.2381531034180036
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.getGroundTexture();
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.setCeillingLightColor(3413);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.getLightColor();
      homeEnvironment0.getSkyColor();
      homeEnvironment0.getSubpartSizeUnderLight();
      homeEnvironment0.getPhotoQuality();
      homeEnvironment0.setLightColor(0);
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.getSkyColor();
      homeEnvironment0.getSkyTexture();
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment0.setVideoCameraPath(linkedList0);
      int int0 = homeEnvironment0.getPhotoWidth();
      assertEquals(0, homeEnvironment0.getLightColor());
      assertEquals(400, int0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.6772245773362195
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1, (HomeTexture) null, 0, (HomeTexture) null, 1, 0);
      homeEnvironment0.setCeillingLightColor(1);
      homeEnvironment0.getGroundTexture();
      homeEnvironment0.setSubpartSizeUnderLight(0);
      homeEnvironment0.setGroundColor(0);
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.setPhotoHeight((-643));
      HomeEnvironment homeEnvironment1 = new HomeEnvironment((-643), (HomeTexture) null, (-432), (HomeTexture) null, 0, (-4.5184F));
      homeEnvironment1.clone();
      homeEnvironment1.setPhotoHeight(0);
      homeEnvironment1.clone();
      homeEnvironment1.setVideoFrameRate((-2978));
      assertEquals((-2978), homeEnvironment1.getVideoFrameRate());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.1239058144637433
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.setPhotoWidth((-4789));
      homeEnvironment0.getVideoHeight();
      homeEnvironment1.getPhotoAspectRatio();
      HomeEnvironment.DrawingMode.values();
      homeEnvironment0.setWallsAlpha((-4789));
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.setVideoQuality(8192);
      homeEnvironment0.setSkyColor((-4789));
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      homeEnvironment0.clone();
      homeEnvironment0.getGroundColor();
      CatalogTexture catalogTexture0 = new CatalogTexture("Y", "", (Content) null, 320, 1.0F, "?7oSG)Q", false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setGroundTexture(homeTexture0);
      assertEquals((-4789.0F), homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.8778952727983707
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.setPhotoWidth((-4789));
      homeEnvironment0.getVideoHeight();
      URL uRL0 = MockURL.getFileExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      homeEnvironment0.setPhotoHeight((-1));
      homeEnvironment1.getPhotoHeight();
      homeEnvironment0.getVideoFrameRate();
      int int0 = homeEnvironment0.getVideoFrameRate();
      assertEquals((-4789), homeEnvironment0.getPhotoWidth());
      assertEquals(25, int0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.6401461330725327
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      URL uRL0 = MockURL.getHttpExample();
      URL uRL1 = MockURL.URL(uRL0, "");
      URLContent uRLContent0 = new URLContent(uRL1);
      homeEnvironment0.setVideoWidth(2621);
      CatalogTexture catalogTexture0 = new CatalogTexture("VIDEO_ASPECT_RATIO", uRLContent0, (-1.0F), (-1.0F));
      CatalogTexture catalogTexture1 = new CatalogTexture("VIDEO_ASPECT_RATIO", "VIDEO_ASPECT_RATIO", uRLContent0, (-1.0F), (-1.0F), "");
      catalogTexture0.compareTo(catalogTexture1);
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      HomeEnvironment.DrawingMode.values();
      homeEnvironment0.setWallsAlpha(0);
      homeEnvironment0.getVideoCameraPath();
      int int0 = homeEnvironment0.getGroundColor();
      assertEquals(1966, homeEnvironment0.getVideoHeight());
      assertEquals(11053224, int0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.748058988887039
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      URL uRL0 = MockURL.getHttpExample();
      URL uRL1 = MockURL.URL(uRL0, "");
      URLContent uRLContent0 = new URLContent(uRL1);
      homeEnvironment0.setVideoWidth(2621);
      CatalogTexture catalogTexture0 = new CatalogTexture("VIDEO_ASPECT_RATIO", uRLContent0, (-1.0F), (-1.0F));
      catalogTexture0.setCategory((TexturesCategory) null);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      CatalogTexture catalogTexture1 = new CatalogTexture("VIDEO_ASPECT_RATIO", "VIDEO_ASPECT_RATIO", uRLContent0, (-1.0F), (-1.0F), "");
      catalogTexture0.compareTo(catalogTexture1);
      homeEnvironment0.setSkyTexture(homeTexture0);
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      HomeEnvironment.DrawingMode.values();
      homeEnvironment0.setWallsAlpha(0);
      int int0 = homeEnvironment0.getCeillingLightColor();
      assertEquals(1966, homeEnvironment0.getVideoHeight());
      assertEquals(13684944, int0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.007081920694827
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      URL uRL0 = MockURL.getHttpExample();
      URL uRL1 = MockURL.URL(uRL0, "");
      URLContent uRLContent0 = new URLContent(uRL1);
      homeEnvironment0.setVideoWidth(2621);
      CatalogTexture catalogTexture0 = new CatalogTexture("VIDEO_ASPECT_RATIO", uRLContent0, (-1.0F), (-1.0F));
      catalogTexture0.setCategory((TexturesCategory) null);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      CatalogTexture catalogTexture1 = new CatalogTexture("VIDEO_ASPECT_RATIO", "VIDEO_ASPECT_RATIO", uRLContent0, (-1.0F), (-337.5078F), "");
      catalogTexture0.compareTo(catalogTexture1);
      homeEnvironment0.setSkyTexture(homeTexture0);
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      HomeEnvironment.DrawingMode.values();
      homeEnvironment0.setCeillingLightColor(17);
      homeEnvironment0.setVideoWidth(1501);
      homeEnvironment0.setGroundTexture(homeTexture0);
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.isObserverCameraElevationAdjusted();
      homeEnvironment0.getPhotoAspectRatio();
      HomeEnvironment.Property[] homeEnvironment_PropertyArray0 = HomeEnvironment.Property.values();
      assertEquals(20, homeEnvironment_PropertyArray0.length);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      Camera camera0 = new Camera(1.0F, 192.7627F, (-1099.0F), 0.60640514F, (-1.0F), (-1.0F));
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(object0, "B-`5)g", (Object) null, "B-`5)g");
      Camera camera1 = new Camera(0.0F, 524.567F, 0.60640514F, 0.0F, 2269.2F, 2269.2F);
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent(camera0, "@N.iRauy7", camera1, propertyChangeListenerProxy0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent1);
      PropertyChangeEvent propertyChangeEvent2 = new PropertyChangeEvent(propertyChangeListenerProxy0, "SKY_TEXTURE", (Object) null, propertyChangeListenerProxy0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent2);
      homeEnvironment0.setSkyTexture((HomeTexture) null);
      homeEnvironment0.getVideoCameraPath();
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment0.setVideoCameraPath(linkedList0);
      HomeEnvironment.DrawingMode[] homeEnvironment_DrawingModeArray0 = HomeEnvironment.DrawingMode.values();
      assertEquals(3, homeEnvironment_DrawingModeArray0.length);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.9687776175299367
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      HomeEnvironment.DrawingMode.values();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor(25);
      homeEnvironment0.setPhotoWidth(25);
      homeEnvironment0.setPhotoHeight(1728);
      homeEnvironment0.setPhotoHeight((-2485));
      homeEnvironment0.setCeillingLightColor((-1888));
      homeEnvironment0.setCeillingLightColor(25);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "TIME");
      homeEnvironment0.getSkyColor();
      homeEnvironment0.getPhotoHeight();
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment0.setAllLevelsVisible(false);
      assertEquals((-2485), homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.8299341714698483
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      URL uRL0 = MockURL.getHttpExample();
      URL uRL1 = MockURL.URL(uRL0, "");
      URLContent uRLContent0 = new URLContent(uRL1);
      homeEnvironment0.setVideoWidth(2621);
      CatalogTexture catalogTexture0 = new CatalogTexture("VIDEO_ASPECT_RATIO", uRLContent0, (-1.0F), (-1.0F));
      catalogTexture0.setCategory((TexturesCategory) null);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      CatalogTexture catalogTexture1 = new CatalogTexture("VIDEO_ASPECT_RATIO", "VIDEO_ASPECT_RATIO", uRLContent0, (-1.0F), (-337.5078F), "");
      catalogTexture0.compareTo(catalogTexture1);
      homeEnvironment0.setSkyTexture(homeTexture0);
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      HomeEnvironment.DrawingMode.values();
      homeEnvironment0.setCeillingLightColor(17);
      homeEnvironment0.setWallsAlpha(0);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      assertEquals(17, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.setVideoWidth(15);
      homeEnvironment0.getPhotoAspectRatio();
      assertEquals(11, homeEnvironment0.getVideoHeight());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.5137801058392384
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "FILL_AND_OUTLINE");
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-33);
      homeEnvironment0.setPhotoQuality(1717986918);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListener propertyChangeListener1 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener1);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("FILL_AND_OUTLINE", propertyChangeListener0);
      AspectRatio aspectRatio0 = AspectRatio.FREE_RATIO;
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(homeEnvironment0, "FILL_AND_OUTLINE", "", object0);
      propertyChangeListenerProxy1.propertyChange(propertyChangeEvent0);
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent(object0, "", object0, "FILL_AND_OUTLINE");
      propertyChangeListenerProxy1.propertyChange(propertyChangeEvent1);
      propertyChangeListenerProxy1.propertyChange((PropertyChangeEvent) null);
      homeEnvironment0.getPhotoHeight();
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      HomeEnvironment.DrawingMode[] homeEnvironment_DrawingModeArray0 = HomeEnvironment.DrawingMode.values();
      assertEquals(3, homeEnvironment_DrawingModeArray0.length);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=3.098389197717206
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "FILL_AND_OUTLINE");
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-33);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.LIGHT_COLOR;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListener propertyChangeListener1 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("Zds%}A_", propertyChangeListener1);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      AspectRatio aspectRatio1 = AspectRatio.FREE_RATIO;
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(homeEnvironment0, "FILL_AND_OUTLINE", "", object0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.setPhotoAspectRatio(aspectRatio1);
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent(object0, "", object0, "FILL_AND_OUTLINE");
      propertyChangeEvent1.toString();
      propertyChangeEvent1.toString();
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent1);
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.getPhotoHeight();
      homeEnvironment0.setVideoFrameRate(300);
      homeEnvironment0.setVideoWidth(300);
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.getVideoQuality();
      System.setCurrentTimeMillis(2097L);
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.isAllLevelsVisible();
      assertEquals(AspectRatio.FREE_RATIO, homeEnvironment0.getPhotoAspectRatio());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture((String) null, temporaryURLContent0, 1, 157.0F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1, homeTexture0, 33, 33, 0.0F);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      assertEquals(AspectRatio.RATIO_2_1, homeEnvironment0.getVideoAspectRatio());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      HomeEnvironment.DrawingMode.values();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      URL uRL0 = MockURL.getHttpExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      CatalogTexture catalogTexture0 = new CatalogTexture("u;lD69<b\"n&kQHozf+>", uRLContent0, 2.0F, (-1559), false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment(415, homeTexture0, (-1559), 2546, 2009);
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      assertEquals(13684944, homeEnvironment2.getCeillingLightColor());
      assertEquals(2009.0F, homeEnvironment2.getWallsAlpha(), 0.01F);
      assertTrue(homeEnvironment2.isObserverCameraElevationAdjusted());
      assertEquals(240, homeEnvironment2.getVideoHeight());
      assertEquals(25, homeEnvironment2.getVideoFrameRate());
      assertEquals(300, homeEnvironment2.getPhotoHeight());
      assertEquals(2546, homeEnvironment2.getLightColor());
      assertNotSame(homeEnvironment2, homeEnvironment1);
      assertEquals((-1559), homeEnvironment2.getSkyColor());
      assertEquals(415, homeEnvironment2.getGroundColor());
      assertEquals(400, homeEnvironment2.getPhotoWidth());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=3.08206054778945
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "FILL_AND_OUTLINE");
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-33);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setPhotoQuality(1717986918);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.LIGHT_COLOR;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListener propertyChangeListener1 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("bik\b$/_>", propertyChangeListener1);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("FILL_AND_OUTLINE", propertyChangeListener0);
      AspectRatio aspectRatio1 = AspectRatio.FREE_RATIO;
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(homeEnvironment0, "FILL_AND_OUTLINE", "", object0);
      Object object1 = new Object();
      propertyChangeEvent0.setPropagationId(object1);
      propertyChangeListenerProxy1.propertyChange(propertyChangeEvent0);
      homeEnvironment0.setPhotoAspectRatio(aspectRatio1);
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent(object0, "", object0, "FILL_AND_OUTLINE");
      propertyChangeListenerProxy1.propertyChange(propertyChangeEvent1);
      propertyChangeListenerProxy1.propertyChange((PropertyChangeEvent) null);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy1);
      homeEnvironment0.getPhotoHeight();
      homeEnvironment0.setVideoFrameRate(300);
      homeEnvironment0.setVideoWidth(300);
      homeEnvironment0.getDrawingMode();
      homeEnvironment0.setVideoCameraPath((List<Camera>) null);
      HomeEnvironment.DrawingMode.values();
      homeEnvironment0.setWallsAlpha((byte) (-33));
      homeEnvironment0.setPhotoWidth(3567);
      assertEquals((-33.0F), homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("VIDEO_ASPECT_RATIO", "VIDEO_ASPECT_RATIO", uRLContent0, 15, 15, "VIDEO_ASPECT_RATIO", false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(15, homeTexture0, 0, 15, 0.0F);
      homeEnvironment0.setSkyColor(1504);
      assertEquals(1504, homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.679983198025875
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      HomeEnvironment.DrawingMode.values();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      homeEnvironment0.setGroundColor(36);
      homeEnvironment0.setPhotoWidth(36);
      homeEnvironment0.setPhotoHeight(1728);
      homeEnvironment0.setPhotoHeight((-2485));
      homeEnvironment0.setCeillingLightColor((-1888));
      homeEnvironment0.getPhotoQuality();
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      homeEnvironment1.getSkyTexture();
      homeEnvironment0.setCeillingLightColor(25);
      HomeTexture homeTexture0 = null;
      try {
        homeTexture0 = new HomeTexture((TextureImage) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.model.HomeTexture", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=3.0248847886694654
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setPhotoQuality(0);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_QUALITY;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("Y", propertyChangeListener0);
      homeEnvironment0.setAllLevelsVisible(true);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent("Y", "Y", "", object0);
      propertyChangeEvent0.setPropagationId("");
      propertyChangeEvent0.setPropagationId(homeEnvironment1);
      propertyChangeEvent0.toString();
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment1.setPhotoHeight(46);
      homeEnvironment1.getVideoQuality();
      homeEnvironment1.getPhotoHeight();
      HomeEnvironment.Property homeEnvironment_Property1 = HomeEnvironment.Property.PHOTO_ASPECT_RATIO;
      PropertyChangeListener propertyChangeListener1 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("com.eteks.sweethome3d.tools.ResourceURLContent", propertyChangeListener1);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property1, propertyChangeListenerProxy1);
      HomeEnvironment.Property homeEnvironment_Property2 = HomeEnvironment.Property.CEILING_LIGHT_COLOR;
      homeEnvironment1.addPropertyChangeListener(homeEnvironment_Property2, propertyChangeListenerProxy1);
      HomeEnvironment.Property homeEnvironment_Property3 = HomeEnvironment.Property.SUBPART_SIZE_UNDER_LIGHT;
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property3, propertyChangeListenerProxy0);
      homeEnvironment1.isAllLevelsVisible();
      homeEnvironment0.setVideoQuality(0);
      HomeTexture homeTexture0 = null;
      try {
        homeTexture0 = new HomeTexture((TextureImage) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.model.HomeTexture", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=3.1716596103840735
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "FILL_AND_OUTLINE");
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-33);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.LIGHT_COLOR;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListener propertyChangeListener1 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("Zds%}A_", propertyChangeListener1);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("FILL_AND_OUTLINE", propertyChangeListener0);
      AspectRatio aspectRatio1 = AspectRatio.FREE_RATIO;
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(homeEnvironment0, "FILL_AND_OUTLINE", "", object0);
      propertyChangeEvent0.toString();
      propertyChangeListenerProxy1.propertyChange(propertyChangeEvent0);
      homeEnvironment0.setPhotoAspectRatio(aspectRatio1);
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent(object0, "", object0, "FILL_AND_OUTLINE");
      propertyChangeListenerProxy1.propertyChange(propertyChangeEvent1);
      propertyChangeListenerProxy1.propertyChange((PropertyChangeEvent) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Zds%}A_");
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy1);
      homeEnvironment0.setVideoFrameRate((byte) (-33));
      homeEnvironment0.setVideoWidth((byte) (-33));
      homeEnvironment0.getDrawingMode();
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.getVideoQuality();
      System.setCurrentTimeMillis(2097L);
      homeEnvironment0.getVideoAspectRatio();
      int int0 = homeEnvironment0.getVideoHeight();
      assertEquals(AspectRatio.RATIO_3_2, homeEnvironment0.getVideoAspectRatio());
      assertEquals((-22), int0);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("", uRLContent0, 2287.0F, 2217.5247F, true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(15, homeTexture0, 1, homeTexture0, 195, 195);
      assertEquals(195, homeEnvironment0.getLightColor());
      
      homeEnvironment0.setLightColor(15);
      assertEquals(15, homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=3.1558341755211035
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-33);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.LIGHT_COLOR;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListener propertyChangeListener1 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("Zds%}A_", propertyChangeListener1);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("FILL_AND_OUTLINE", propertyChangeListener0);
      AspectRatio aspectRatio1 = AspectRatio.FREE_RATIO;
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(homeEnvironment0, "FILL_AND_OUTLINE", "", object0);
      propertyChangeEvent0.toString();
      propertyChangeListenerProxy1.propertyChange(propertyChangeEvent0);
      homeEnvironment0.setPhotoAspectRatio(aspectRatio1);
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent(object0, "", object0, "FILL_AND_OUTLINE");
      propertyChangeListenerProxy1.propertyChange(propertyChangeEvent1);
      propertyChangeListenerProxy1.propertyChange((PropertyChangeEvent) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Zds%}A_");
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy1);
      homeEnvironment0.setVideoWidth((byte) (-33));
      homeEnvironment0.getDrawingMode();
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.getVideoQuality();
      System.setCurrentTimeMillis(2097L);
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.getVideoHeight();
      Class<HomeEnvironment> class0 = HomeEnvironment.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogTexture catalogTexture0 = new CatalogTexture("Z*OHdLK':KCI\u0006*R", resourceURLContent0, 2736.0F, (byte) (-33));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setGroundTexture(homeTexture0);
      assertEquals(AspectRatio.FREE_RATIO, homeEnvironment0.getPhotoAspectRatio());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL0 = MockURL.URL("Y0'F_ip|t_", "5}gdx9", 2802, "Y0'F_ip|t_", uRLStreamHandler0);
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      CatalogTexture catalogTexture0 = new CatalogTexture("5}gdx9", resourceURLContent0, (-2714.3618F), 912.42F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-755), homeTexture0, (-2110), homeTexture0, (-1217), (-2341.7537F));
      homeEnvironment0.setLightColor(15);
      assertEquals(15, homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.8778952727983707
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoFrameRate(300);
      homeEnvironment0.setCeillingLightColor(300);
      homeEnvironment0.getPhotoQuality();
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.setCeillingLightColor(13427964);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("Z <", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("Z <", propertyChangeListenerProxy0);
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      homeEnvironment0.setPhotoQuality(0);
      homeEnvironment0.getPhotoAspectRatio();
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("uZ@I=*s!kL", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy3 = new PropertyChangeListenerProxy("{k5^*a7)9", propertyChangeListenerProxy1);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.WALLS_ALPHA;
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      assertEquals(300, homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      CatalogTexture catalogTexture0 = new CatalogTexture("", uRLContent0, (-1559), 19, false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(19, homeTexture0, 19, 19, 0.0F);
      homeEnvironment0.getVideoAspectRatio();
      assertEquals(19, homeEnvironment0.getSkyColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(19, homeEnvironment0.getGroundColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(19, homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Random.setNextRandom(20);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoHeight(2491);
      homeEnvironment0.setLightColor(20);
      homeEnvironment0.setPhotoQuality((-1071));
      HomeEnvironment.Property.values();
      int int0 = homeEnvironment0.getPhotoQuality();
      assertEquals(20, homeEnvironment0.getLightColor());
      assertEquals((-1071), int0);
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(2759, (HomeTexture) null, 2759, 0, 1.0F);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      Camera camera0 = new Camera(1.0F, 192.7627F, (-1099.0F), 1.0F, (-1.0F), (-1.0F));
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(object0, "B-`5)O", (Object) null, "B-`5)O");
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      Camera camera1 = new Camera(0.0F, (-1736.8F), 1.0F, 0.0F, 2269.2F, 2269.2F);
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent(camera0, "~8!VS!*wI&Arrnl", camera1, propertyChangeListenerProxy0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent1);
      PropertyChangeEvent propertyChangeEvent2 = new PropertyChangeEvent(propertyChangeListenerProxy0, "SKY_TEXTURE", (Object) null, propertyChangeListenerProxy0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent2);
      homeEnvironment0.setSkyTexture((HomeTexture) null);
      homeEnvironment0.getVideoCameraPath();
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment0.setVideoCameraPath(linkedList0);
      HomeEnvironment.DrawingMode.values();
      homeEnvironment0.setWallsAlpha(0.0F);
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(2759, (HomeTexture) null, 2759, 0, 1.0F);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_QUALITY;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent("", "", (Object) null, (Object) null);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      Camera camera0 = new Camera(1.0F, 192.7627F, (-1099.0F), 1.0F, (-1.0F), (-1.0F));
      Object object0 = new Object();
      Object object1 = new Object();
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent(homeEnvironment_Property0, "", object1, (Object) null);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent1);
      PropertyChangeEvent propertyChangeEvent2 = new PropertyChangeEvent(object0, "B-`5)O", (Object) null, "B-`5)O");
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent2);
      Camera camera1 = new Camera(0.0F, (-1736.8F), 1.0F, 0.0F, 2269.2F, 2269.2F);
      PropertyChangeEvent propertyChangeEvent3 = new PropertyChangeEvent(camera0, "~8!VS!*wI&Arrnl", camera1, propertyChangeListenerProxy0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent3);
      PropertyChangeEvent propertyChangeEvent4 = new PropertyChangeEvent(propertyChangeListenerProxy0, "SKY_TEXTURE", (Object) null, propertyChangeListenerProxy0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent4);
      PropertyChangeEvent propertyChangeEvent5 = new PropertyChangeEvent(homeEnvironment0, "rE2H59g%vD", (Object) null, "");
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      HomeEnvironment.DrawingMode.values();
      homeEnvironment0.getGroundTexture();
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(2759, homeEnvironment0.getSkyColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(1.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(0, homeEnvironment0.getLightColor());
      assertEquals(2759, homeEnvironment0.getGroundColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(2759, (HomeTexture) null, 2759, 0, 1.0F);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      Camera camera0 = new Camera(1.0F, 192.7627F, (-1099.0F), 1.0F, (-1.0F), (-1.0F));
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(object0, "B-`5)O", (Object) null, "B-`5)O");
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      Camera camera1 = new Camera(0.0F, (-1736.8F), 1.0F, 0.0F, 2269.2F, 2269.2F);
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent(camera0, "~8!VS!*wI&Arrnl", camera1, propertyChangeListenerProxy0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent1);
      PropertyChangeEvent propertyChangeEvent2 = new PropertyChangeEvent(propertyChangeListenerProxy0, "SKY_TEXTURE", (Object) null, propertyChangeListenerProxy0);
      Camera camera2 = camera1.clone();
      propertyChangeEvent2.setPropagationId(camera2);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent2);
      PropertyChangeEvent propertyChangeEvent3 = new PropertyChangeEvent(homeEnvironment0, "rE2H59g%vD", (Object) null, "");
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent3);
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment(2759, (HomeTexture) null, 2759, 0, 531.6685F);
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      assertEquals(2759, homeEnvironment2.getGroundColor());
      assertEquals(2759, homeEnvironment2.getSkyColor());
      assertNotSame(homeEnvironment2, homeEnvironment1);
      assertTrue(homeEnvironment2.isObserverCameraElevationAdjusted());
      assertEquals(25, homeEnvironment2.getVideoFrameRate());
      assertEquals(240, homeEnvironment2.getVideoHeight());
      assertEquals(0, homeEnvironment2.getLightColor());
      assertEquals(300, homeEnvironment2.getPhotoHeight());
      assertEquals(400, homeEnvironment2.getPhotoWidth());
      assertEquals(531.6685F, homeEnvironment2.getWallsAlpha(), 0.01F);
      assertEquals(13684944, homeEnvironment2.getCeillingLightColor());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.75012938226178
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("", uRLContent0, 19, 19, false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(19, homeTexture0, 19, 61, 19);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment1.setVideoCameraPath(linkedList0);
      AspectRatio aspectRatio0 = AspectRatio.FREE_RATIO;
      homeEnvironment1.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment1.setGroundColor((-1559));
      homeEnvironment1.getWallsAlpha();
      homeEnvironment0.setVideoCameraPath(linkedList0);
      HomeEnvironment.DrawingMode.values();
      homeEnvironment1.setCeillingLightColor(19);
      homeEnvironment0.setWallsAlpha(2010.8F);
      int int0 = homeEnvironment1.getLightColor();
      assertEquals(19, homeEnvironment1.getCeillingLightColor());
      assertEquals(61, int0);
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.876156142363588
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoQuality((-1));
      homeEnvironment0.setWallsAlpha(608.61F);
      homeEnvironment0.setPhotoQuality((-1));
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.setSubpartSizeUnderLight((-1));
      HomeEnvironment.DrawingMode.values();
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.setVideoWidth((-1));
      HomeEnvironment.Property[] homeEnvironment_PropertyArray0 = HomeEnvironment.Property.values();
      assertEquals(20, homeEnvironment_PropertyArray0.length);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("VIDEO_ASPECT_RATIO", "VIDEO_ASPECT_RATIO", uRLContent0, 15, 15, "VIDEO_ASPECT_RATIO", false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(15, homeTexture0, 0, 15, 0.0F);
      homeEnvironment0.setPhotoHeight((-1118));
      assertEquals((-1118), homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.876156142363588
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      URL uRL0 = MockURL.getHttpExample();
      URL uRL1 = MockURL.URL(uRL0, "");
      URLContent uRLContent0 = new URLContent(uRL1);
      homeEnvironment0.setVideoWidth(2621);
      CatalogTexture catalogTexture0 = new CatalogTexture("VIDEO_ASPECT_RATIO", uRLContent0, (-1.0F), (-1.0F));
      catalogTexture0.setCategory((TexturesCategory) null);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      CatalogTexture catalogTexture1 = new CatalogTexture("VIDEO_ASPECT_RATIO", "VIDEO_ASPECT_RATIO", uRLContent0, (-1.0F), (-337.5078F), "");
      catalogTexture0.compareTo(catalogTexture1);
      homeEnvironment0.setSkyTexture(homeTexture0);
      homeEnvironment0.setVideoQuality(436);
      homeEnvironment0.setPhotoHeight(436);
      homeEnvironment0.setAllLevelsVisible(false);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL_AND_OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.setPhotoWidth(0);
      assertEquals(HomeEnvironment.DrawingMode.FILL_AND_OUTLINE, homeEnvironment0.getDrawingMode());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=3.099501544769486
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      URL uRL0 = MockURL.getHttpExample();
      URL uRL1 = MockURL.URL(uRL0, "");
      URLContent uRLContent0 = new URLContent(uRL1);
      homeEnvironment0.setVideoWidth(2621);
      CatalogTexture catalogTexture0 = new CatalogTexture("VIDEO_ASPECT_RATIO", uRLContent0, (-1.0F), (-1.0F));
      catalogTexture0.setCategory((TexturesCategory) null);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      CatalogTexture catalogTexture1 = new CatalogTexture("VIDEO_ASPECT_RATIO", "VIDEO_ASPECT_RATIO", uRLContent0, (-1.0F), (-337.5078F), "");
      catalogTexture0.compareTo(catalogTexture1);
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      HomeEnvironment.DrawingMode.values();
      homeEnvironment0.getWallsAlpha();
      homeEnvironment0.setVideoQuality(3357);
      homeEnvironment0.setPhotoHeight(3);
      homeEnvironment0.setAllLevelsVisible(false);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL_AND_OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.setPhotoWidth(17);
      homeEnvironment0.getVideoQuality();
      homeEnvironment0.setVideoWidth(17);
      assertEquals(HomeEnvironment.DrawingMode.FILL_AND_OUTLINE, homeEnvironment0.getDrawingMode());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setGroundColor(740);
      HomeEnvironment.Property.valueOf("LIGHT_COLOR");
      homeEnvironment0.setCeillingLightColor(740);
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", (PropertyChangeListener) null);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      homeEnvironment0.setPhotoQuality(740);
      homeEnvironment0.getPhotoAspectRatio();
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy(";", (PropertyChangeListener) null);
      PropertyChangeListenerProxy propertyChangeListenerProxy3 = new PropertyChangeListenerProxy("bv-?=T-{l[", (PropertyChangeListener) null);
      assertFalse(propertyChangeListenerProxy3.equals((Object)propertyChangeListenerProxy0));
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(2759, (HomeTexture) null, 2759, 0, 1.0F);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_QUALITY;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      Camera camera0 = new Camera(1.0F, 192.7627F, (-1099.0F), 1.0F, (-1.0F), (-1.0F));
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(object0, "B-`5)O", (Object) null, "B-`5)O");
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      Camera camera1 = new Camera(0.0F, (-1736.8F), 1.0F, 0.0F, 2269.2F, 2269.2F);
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent(camera0, "~8!VS!*wI&Arrnl", camera1, propertyChangeListenerProxy0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent1);
      PropertyChangeEvent propertyChangeEvent2 = new PropertyChangeEvent(propertyChangeListenerProxy0, "SKY_TEXTURE", (Object) null, propertyChangeListenerProxy0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent2);
      PropertyChangeEvent propertyChangeEvent3 = new PropertyChangeEvent(homeEnvironment0, "rE2H59g%vD", (Object) null, "");
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent3);
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.setPhotoWidth(0);
      assertTrue(homeEnvironment0.isAllLevelsVisible());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=3.1698162924117232
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "FILL_AND_OUTLINE");
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-33);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setPhotoQuality(1717986918);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.LIGHT_COLOR;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListener propertyChangeListener1 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("bik\b$/_>", propertyChangeListener1);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("FILL_AND_OUTLINE", propertyChangeListener0);
      AspectRatio aspectRatio1 = AspectRatio.FREE_RATIO;
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(homeEnvironment0, "FILL_AND_OUTLINE", "", object0);
      propertyChangeListenerProxy1.propertyChange(propertyChangeEvent0);
      homeEnvironment0.setPhotoAspectRatio(aspectRatio1);
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent(object0, "", object0, "FILL_AND_OUTLINE");
      propertyChangeListenerProxy1.propertyChange(propertyChangeEvent1);
      propertyChangeListenerProxy1.propertyChange((PropertyChangeEvent) null);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy1);
      homeEnvironment0.getPhotoHeight();
      homeEnvironment0.setVideoFrameRate(300);
      homeEnvironment0.setVideoWidth(300);
      homeEnvironment0.setPhotoHeight((byte) (-33));
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.getVideoWidth();
      boolean boolean0 = homeEnvironment0.isObserverCameraElevationAdjusted();
      assertEquals(AspectRatio.FREE_RATIO, homeEnvironment0.getPhotoAspectRatio());
      assertTrue(boolean0);
  }
}
