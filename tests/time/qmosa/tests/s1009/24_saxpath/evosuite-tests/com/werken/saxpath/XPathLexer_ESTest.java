/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 20:41:01 GMT 2019
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.9487463588875167
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.star();
      assertEquals(20, token0.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.colon();
      xPathLexer0.colon();
      xPathLexer0.literal();
      xPathLexer0.setXPath("sIO=J0$ES_f");
      xPathLexer0.identifierOrOperatorName();
      Token token2 = xPathLexer0.comma();
      assertEquals("=", token2.getTokenText());
      assertEquals(32, token2.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token3 = xPathLexer0.minus();
      assertEquals("J", token3.getTokenText());
      
      Token token4 = xPathLexer0.pipe();
      assertEquals("0", token4.getTokenText());
      assertEquals(17, token4.getTokenType());
      
      xPathLexer0.leftBracket();
      xPathLexer0.setPreviousToken(token1);
      assertEquals(18, token1.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("ES_f", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
      
      Token token6 = xPathLexer0.not();
      assertEquals(23, token6.getTokenType());
      
      Token token7 = xPathLexer0.literal();
      assertNull(token7);
      
      Token token8 = xPathLexer0.minus();
      assertEquals(6, token8.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("-v");
      Token token9 = xPathLexer1.leftBracket();
      assertEquals("-", token9.getTokenText());
      assertEquals(3, token9.getTokenType());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.9565093337690183
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("SNc!'c+dIB");
      xPathLexer0.leftBracket();
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer("?^1; 8cwO=:x<Y'\u0002*");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("!", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer1.consume(0);
      xPathLexer0.setXPath("3:Z0PFQVJ-");
      Token token1 = xPathLexer0.nextToken();
      assertEquals(30, token1.getTokenType());
      
      xPathLexer0.setPreviousToken((Token) null);
      Token token2 = xPathLexer1.leftBracket();
      assertEquals(3, token2.getTokenType());
      
      xPathLexer1.operatorName();
      Token token3 = xPathLexer1.minus();
      assertEquals("^", token3.getTokenText());
      assertEquals(6, token3.getTokenType());
      
      Token token4 = xPathLexer0.star();
      assertEquals(20, token4.getTokenType());
      assertEquals(":", token4.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.or();
      Token token5 = xPathLexer2.at();
      assertEquals(16, token5.getTokenType());
      
      Token token6 = xPathLexer0.identifierOrOperatorName();
      assertEquals("Z0PFQVJ-", token6.getTokenText());
      assertEquals(15, token6.getTokenType());
      
      Token token7 = xPathLexer1.dots();
      assertEquals("1", token7.getTokenText());
      assertEquals(13, token7.getTokenType());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.4597063351822035
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("SNc!'c+dIB");
      xPathLexer0.dots();
      xPathLexer0.dollar();
      xPathLexer0.pipe();
      xPathLexer0.equals();
      xPathLexer0.star();
      xPathLexer0.comma();
      xPathLexer0.number();
      xPathLexer0.consume(0);
      xPathLexer0.nextToken();
      xPathLexer0.consume((-4067));
      // Undeclared exception!
      try { 
        xPathLexer0.number();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.5816128380074104
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.leftParen();
      xPathLexer0.comma();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer("O");
      xPathLexer0.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer("O");
      xPathLexer2.relationalOperator();
      xPathLexer0.consume((-792));
      xPathLexer1.setXPath("");
      xPathLexer2.nextToken();
      xPathLexer0.leftBracket();
      xPathLexer2.comma();
      // Undeclared exception!
      try { 
        xPathLexer0.or();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.4917929621254686
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      xPathLexer0.div();
      Token token0 = xPathLexer0.dollar();
      assertEquals(26, token0.getTokenType());
      assertEquals("[", token0.getTokenText());
      
      xPathLexer0.mod();
      xPathLexer0.div();
      Token token1 = xPathLexer0.slashes();
      xPathLexer0.or();
      xPathLexer0.setXPath("");
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.setPreviousToken(token1);
      assertEquals(" ", token1.getTokenText());
      
      xPathLexer1.leftBracket();
      Token token3 = xPathLexer1.not();
      assertEquals(23, token3.getTokenType());
      
      Token token4 = xPathLexer1.literal();
      assertNull(token4);
      
      Token token5 = xPathLexer0.slashes();
      assertEquals(11, token5.getTokenType());
      
      Token token6 = xPathLexer1.rightParen();
      assertEquals(2, token6.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.and();
      Token token7 = xPathLexer2.at();
      assertEquals(16, token7.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("[ (");
      Token token8 = xPathLexer3.nextToken();
      assertEquals("[", token8.getTokenText());
      assertEquals(3, token8.getTokenType());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.3929982850356653
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">ODI pwgwR:9");
      char char0 = xPathLexer0.LA(1961);
      assertEquals('\uFFFF', char0);
      
      Token token0 = xPathLexer0.relationalOperator();
      assertEquals(">", token0.getTokenText());
      assertNotNull(token0);
      assertEquals(9, token0.getTokenType());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.42426627804811
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.star();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.at();
      xPathLexer0.colon();
      xPathLexer0.colon();
      xPathLexer0.literal();
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      xPathLexer0.consume((-616));
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.setXPath("3:Z0PFQVJ-");
      // Undeclared exception!
      try { 
        xPathLexer0.nextToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.83711249575954
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      xPathLexer0.div();
      Token token0 = xPathLexer0.dollar();
      assertEquals("[", token0.getTokenText());
      assertEquals(26, token0.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.div();
      Token token1 = xPathLexer0.slashes();
      xPathLexer0.or();
      xPathLexer0.setXPath("");
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.setPreviousToken(token1);
      assertEquals(" ", token1.getTokenText());
      
      Token token3 = xPathLexer1.leftBracket();
      assertEquals(3, token3.getTokenType());
      
      Token token4 = xPathLexer1.not();
      assertEquals(23, token4.getTokenType());
      
      Token token5 = xPathLexer1.literal();
      assertNull(token5);
      
      Token token6 = xPathLexer0.slashes();
      assertEquals(11, token6.getTokenType());
      
      xPathLexer0.isIdentifierChar('r');
      Token token7 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token7.getTokenType());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0541358924062953
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      xPathLexer0.consume((-623));
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer();
      // Undeclared exception!
      try { 
        xPathLexer0.literal();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.8891693642528402
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer("smLpXPwthU=");
      Token token0 = xPathLexer1.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("s", token0.getTokenText());
      
      Token token1 = xPathLexer1.dollar();
      assertEquals("", token1.getTokenText());
      assertEquals(26, token1.getTokenType());
      
      xPathLexer0.star();
      Token token2 = xPathLexer1.comma();
      assertEquals(32, token2.getTokenType());
      assertEquals("m", token2.getTokenText());
      
      Token token3 = xPathLexer1.number();
      assertEquals(30, token3.getTokenType());
      assertEquals("", token3.getTokenText());
      
      Token token4 = xPathLexer1.star();
      assertEquals("L", token4.getTokenText());
      
      xPathLexer0.consume(0);
      Token token5 = xPathLexer1.nextToken();
      assertEquals("pXPwthU", token5.getTokenText());
      
      Token token6 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token6.getTokenType());
      
      xPathLexer0.isIdentifierChar('C');
      Token token7 = xPathLexer0.minus();
      assertEquals(6, token7.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.hasMoreChars();
      xPathLexer0.consume(0);
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token8 = xPathLexer1.equals();
      assertEquals("=", token8.getTokenText());
      assertEquals(21, token8.getTokenType());
      
      Token token9 = xPathLexer2.star();
      assertEquals(20, token9.getTokenType());
      
      xPathLexer0.or();
      Token token10 = xPathLexer3.rightParen();
      assertEquals(2, token10.getTokenType());
      
      Token token11 = xPathLexer1.at();
      assertEquals(16, token11.getTokenType());
      
      Token token12 = xPathLexer2.nextToken();
      assertEquals((-1), token12.getTokenType());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.570070003698123
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("SNc!'c+dIB");
      xPathLexer0.leftBracket();
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer("?^1; 8cwO=:x<Y'\u0002*");
      XPathLexer xPathLexer2 = new XPathLexer("/v~)be?");
      xPathLexer0.nextToken();
      xPathLexer2.relationalOperator();
      xPathLexer0.consume(123);
      xPathLexer0.setXPath("SNc!'c+dIB");
      xPathLexer2.nextToken();
      xPathLexer2.setPreviousToken((Token) null);
      xPathLexer1.leftBracket();
      xPathLexer0.not();
      xPathLexer2.literal();
      xPathLexer2.slashes();
      XPathLexer xPathLexer3 = new XPathLexer("?^1; 8cwO=:x<Y'\u0002*");
      assertEquals("?^1; 8cwO=:x<Y'\u0002*", xPathLexer3.getXPath());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.7742524509753805
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("~S&IWn.w");
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      assertEquals("~", token0.getTokenText());
      
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("&IWn.w", token2.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer(") (");
      xPathLexer1.relationalOperator();
      xPathLexer0.consume(0);
      XPathLexer xPathLexer2 = new XPathLexer("a!`cl#HEuIx4Z~go>R");
      xPathLexer2.setXPath(") (");
      Token token3 = xPathLexer2.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.setPreviousToken(token3);
      assertEquals(")", token3.getTokenText());
      assertEquals(2, token3.getTokenType());
      
      Token token4 = xPathLexer0.leftBracket();
      assertEquals(3, token4.getTokenType());
      assertEquals("&", token4.getTokenText());
      
      xPathLexer0.operatorName();
      Token token5 = xPathLexer0.minus();
      assertEquals("I", token5.getTokenText());
      assertEquals(6, token5.getTokenType());
      
      Token token6 = xPathLexer3.star();
      assertEquals(20, token6.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.or();
      Token token7 = xPathLexer2.at();
      assertEquals(16, token7.getTokenType());
      assertEquals(" ", token7.getTokenText());
      
      Token token8 = xPathLexer1.colon();
      assertEquals(")", token8.getTokenText());
      assertEquals(18, token8.getTokenType());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.181531634190664
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("~S&IWn.w");
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      assertEquals("~", token0.getTokenText());
      
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      xPathLexer0.star();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("IWn.w", token2.getTokenText());
      
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertNull(token3);
      
      xPathLexer0.isIdentifierChar('C');
      XPathLexer xPathLexer1 = new XPathLexer("~S&IWn.w");
      Token token4 = xPathLexer1.minus();
      assertEquals("~", token4.getTokenText());
      assertEquals(6, token4.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.consume(11);
      XPathLexer xPathLexer3 = new XPathLexer("");
      xPathLexer3.hasMoreChars();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.consume(2801);
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token5 = xPathLexer3.equals();
      assertEquals(21, token5.getTokenType());
      
      Token token6 = xPathLexer1.star();
      assertEquals("S", token6.getTokenText());
      assertEquals(20, token6.getTokenType());
      
      xPathLexer5.or();
      Token token7 = xPathLexer3.at();
      assertEquals(16, token7.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer("0S");
      Token token8 = xPathLexer6.pipe();
      assertEquals("0", token8.getTokenText());
      assertEquals(17, token8.getTokenType());
      
      Token token9 = xPathLexer3.nextToken();
      assertEquals((-1), token9.getTokenType());
      
      Token token10 = xPathLexer5.colon();
      assertEquals(18, token10.getTokenType());
      
      Token token11 = xPathLexer1.identifierOrOperatorName();
      assertEquals(15, token11.getTokenType());
      
      Token token12 = xPathLexer5.dots();
      assertEquals(13, token12.getTokenType());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.159260960354913
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("R?k?");
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("R", token0.getTokenText());
      
      Token token1 = xPathLexer0.dollar();
      assertEquals(26, token1.getTokenType());
      assertEquals("?", token1.getTokenText());
      
      Token token2 = xPathLexer0.star();
      assertEquals("k", token2.getTokenText());
      
      Token token3 = xPathLexer0.comma();
      assertEquals(32, token3.getTokenType());
      
      Token token4 = xPathLexer0.number();
      assertEquals(30, token4.getTokenType());
      
      xPathLexer0.star();
      Token token5 = xPathLexer0.nextToken();
      assertEquals((-1), token5.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.isIdentifierChar('C');
      XPathLexer xPathLexer1 = new XPathLexer("r^`erY;fjzS");
      Token token6 = xPathLexer1.minus();
      assertEquals("r", token6.getTokenText());
      assertEquals(6, token6.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.consume(1);
      xPathLexer1.hasMoreChars();
      xPathLexer1.consume(1477);
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token7 = xPathLexer0.equals();
      assertEquals(21, token7.getTokenType());
      
      Token token8 = xPathLexer3.star();
      assertEquals(20, token8.getTokenType());
      
      xPathLexer1.or();
      xPathLexer1.at();
      XPathLexer xPathLexer4 = new XPathLexer("r^`erY;fjzS");
      Token token9 = xPathLexer4.nextToken();
      assertEquals("r", token9.getTokenText());
      assertEquals(15, token9.getTokenType());
      
      Token token10 = xPathLexer0.colon();
      assertEquals(18, token10.getTokenType());
      
      Token token11 = xPathLexer3.identifierOrOperatorName();
      assertEquals(15, token11.getTokenType());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.475971998878931
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.endPosition();
      xPathLexer0.plus();
      xPathLexer0.rightBracket();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.notEquals();
      xPathLexer0.nextToken();
      xPathLexer1.slashes();
      // Undeclared exception!
      try { 
        xPathLexer0.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.746980286548899
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("SNc!'c+dIB");
      xPathLexer0.star();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.at();
      xPathLexer0.colon();
      xPathLexer0.colon();
      xPathLexer0.literal();
      xPathLexer0.setXPath("SNc!'c+dIB");
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.minus();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.relationalOperator();
      xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken(token0);
      XPathLexer xPathLexer2 = new XPathLexer("qwdJ/--LV");
      xPathLexer1.leftBracket();
      xPathLexer2.not();
      xPathLexer1.literal();
      xPathLexer0.slashes();
      xPathLexer0.isIdentifierChar('?');
      xPathLexer2.identifierOrOperatorName();
      Token token1 = xPathLexer2.div();
      assertNull(token1);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.467116233340706
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("R?k?");
      xPathLexer0.leftBracket();
      xPathLexer0.star();
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      xPathLexer0.consume((-4981));
      // Undeclared exception!
      try { 
        xPathLexer0.slashes();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.143950237703821
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("R?k?");
      Token token0 = xPathLexer0.dots();
      assertEquals("R", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token1 = xPathLexer1.nextToken();
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer("R?k?");
      xPathLexer2.consume((-1345));
      xPathLexer1.setXPath("R?k?");
      xPathLexer0.and();
      XPathLexer xPathLexer3 = new XPathLexer("R?k?");
      xPathLexer1.setPreviousToken(token1);
      assertEquals((-1), token1.getTokenType());
      
      xPathLexer1.nextToken();
      XPathLexer xPathLexer4 = new XPathLexer("u");
      Token token2 = xPathLexer2.not();
      assertEquals(23, token2.getTokenType());
      
      Token token3 = xPathLexer0.literal();
      assertEquals(27, token3.getTokenType());
      assertEquals("k", token3.getTokenText());
      assertNotNull(token3);
      
      Token token4 = xPathLexer3.slashes();
      assertEquals("R", token4.getTokenText());
      assertEquals(11, token4.getTokenType());
      
      Token token5 = xPathLexer4.identifierOrOperatorName();
      assertEquals(15, token5.getTokenType());
      assertEquals("u", token5.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer("W{R}*70");
      Token token6 = xPathLexer5.equals();
      assertEquals("W", token6.getTokenText());
      assertEquals(21, token6.getTokenType());
      
      xPathLexer5.div();
      xPathLexer0.literal();
      Token token7 = xPathLexer5.comma();
      assertEquals(32, token7.getTokenType());
      assertEquals("{", token7.getTokenText());
      
      Token token8 = xPathLexer4.whitespace();
      assertEquals((-2), token8.getTokenType());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.884381759284857
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.dollar();
      xPathLexer0.comma();
      xPathLexer0.consume((-1395));
      // Undeclared exception!
      try { 
        xPathLexer0.nextToken();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.9697747715595697
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("~S&IWn.w");
      Token token0 = xPathLexer0.not();
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      token1.toString();
      token1.toString();
      token1.toString();
      token0.toString();
      token0.toString();
      token1.toString();
      token0.toString();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.dots();
      xPathLexer0.at();
      xPathLexer0.leftParen();
      xPathLexer0.nextToken();
      xPathLexer0.LA(400);
      xPathLexer0.setXPath("[ (23) (~)");
      xPathLexer0.rightParen();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.isIdentifierChar('\uFFFF');
      xPathLexer0.getPreviousToken();
      xPathLexer0.hasMoreChars();
      xPathLexer0.minus();
      xPathLexer0.star();
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer("fc1nD}&'xFBh2]");
      xPathLexer1.consume();
      xPathLexer0.div();
      xPathLexer1.rightBracket();
      Token token2 = xPathLexer1.and();
      assertNull(token2);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.738880354164156
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("SNc!'c+dIB");
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("S", token0.getTokenText());
      
      Token token1 = xPathLexer0.dollar();
      assertEquals("N", token1.getTokenText());
      assertEquals(26, token1.getTokenType());
      
      Token token2 = xPathLexer0.whitespace();
      assertEquals("", token2.getTokenText());
      assertEquals((-2), token2.getTokenType());
      
      Token token3 = xPathLexer0.comma();
      assertEquals("!", token3.getTokenText());
      assertEquals(32, token3.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("SNc!'c+dIB");
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.consume(843);
      XPathLexer xPathLexer4 = new XPathLexer();
      XPathLexer xPathLexer5 = new XPathLexer("");
      Token token4 = xPathLexer5.equals();
      assertEquals(21, token4.getTokenType());
      
      Token token5 = xPathLexer2.star();
      assertEquals(20, token5.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer("SNc!'c+dIB");
      xPathLexer3.or();
      Token token6 = xPathLexer6.at();
      assertEquals("S", token6.getTokenText());
      assertEquals(16, token6.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer(")");
      Token token7 = xPathLexer4.nextToken();
      assertEquals((-1), token7.getTokenType());
      
      XPathLexer xPathLexer8 = new XPathLexer("{&/uwKZI=O");
      Token token8 = xPathLexer8.colon();
      assertEquals(18, token8.getTokenType());
      
      Token token9 = xPathLexer8.identifierOrOperatorName();
      assertEquals(15, token9.getTokenType());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.0002722587565556
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("R?k?");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals("R", token0.getTokenText());
      
      Token token1 = xPathLexer0.star();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token3 = xPathLexer0.leftBracket();
      assertEquals(3, token3.getTokenType());
      assertEquals("?", token3.getTokenText());
      
      xPathLexer0.consume((-4981));
      xPathLexer0.setXPath(".Jfs5MG-");
      xPathLexer0.and();
      xPathLexer0.setPreviousToken(token1);
      assertEquals("?", token1.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(".", token4.getTokenText());
      assertEquals(13, token4.getTokenType());
      
      Token token5 = xPathLexer0.not();
      assertEquals(23, token5.getTokenType());
      assertEquals("J", token5.getTokenText());
      
      Token token6 = xPathLexer0.literal();
      assertNull(token6);
      
      Token token7 = xPathLexer0.slashes();
      assertEquals(11, token7.getTokenType());
      
      xPathLexer0.identifier();
      xPathLexer0.isIdentifierChar('g');
      xPathLexer0.identifierOrOperatorName();
      Token token8 = xPathLexer0.star();
      assertEquals(20, token8.getTokenType());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.186565209989566
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.identifier();
      Token token0 = xPathLexer0.comma();
      assertEquals(32, token0.getTokenType());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals(22, token1.getTokenType());
      
      xPathLexer0.div();
      Token token2 = xPathLexer0.equals();
      assertEquals(21, token2.getTokenType());
      
      xPathLexer0.setXPath("&jLgkB9*L&d%*M");
      Token token3 = xPathLexer0.number();
      assertEquals(30, token3.getTokenType());
      
      Token token4 = xPathLexer0.rightBracket();
      assertEquals(4, token4.getTokenType());
      assertEquals("&", token4.getTokenText());
      
      Token token5 = xPathLexer0.not();
      assertEquals("j", token5.getTokenText());
      assertEquals(23, token5.getTokenType());
      
      Token token6 = xPathLexer0.literal();
      assertEquals(27, token6.getTokenType());
      assertNotNull(token6);
      assertEquals("gkB9*", token6.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token7 = xPathLexer1.slashes();
      assertEquals(11, token7.getTokenType());
      
      xPathLexer0.isIdentifierChar('n');
      Token token8 = xPathLexer1.identifierOrOperatorName();
      assertEquals(15, token8.getTokenType());
      
      xPathLexer1.leftParen();
      Token token9 = xPathLexer1.pipe();
      assertEquals(17, token9.getTokenType());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.072572677012188
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.identifier();
      xPathLexer0.consume(0);
      xPathLexer0.comma();
      xPathLexer0.setXPath("`D4sS9xl)->dp^Y");
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.comma();
      xPathLexer0.relationalOperator();
      // Undeclared exception!
      try { 
        xPathLexer0.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.635909684158669
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.minus();
      assertEquals("[", token0.getTokenText());
      
      Token token1 = xPathLexer0.dots();
      assertEquals(" ", token1.getTokenText());
      assertEquals(13, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("^PAP.l?05P@jb,.Jp");
      Token token2 = xPathLexer1.equals();
      assertEquals(21, token2.getTokenType());
      assertEquals("^", token2.getTokenText());
      
      xPathLexer1.star();
      xPathLexer1.minus();
      Token token3 = xPathLexer1.number();
      assertEquals(30, token3.getTokenType());
      assertEquals("", token3.getTokenText());
      
      xPathLexer1.star();
      XPathLexer xPathLexer2 = new XPathLexer(";]:x8tc\b'W1c~RFA1Y");
      Token token4 = xPathLexer1.number();
      assertEquals(31, token4.getTokenType());
      assertEquals(".", token4.getTokenText());
      
      xPathLexer2.relationalOperator();
      Token token5 = xPathLexer2.slashes();
      assertEquals(11, token5.getTokenType());
      assertEquals(";", token5.getTokenText());
      
      boolean boolean0 = xPathLexer1.hasMoreChars();
      assertTrue(boolean0);
      
      Token token6 = xPathLexer2.minus();
      assertEquals(6, token6.getTokenType());
      
      Token token7 = xPathLexer2.star();
      assertEquals(20, token7.getTokenType());
      assertEquals(":", token7.getTokenText());
      
      xPathLexer0.or();
      Token token8 = xPathLexer0.at();
      assertEquals("(", token8.getTokenText());
      assertEquals(16, token8.getTokenType());
      
      char char0 = xPathLexer0.LA(1);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.8757123848979842
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("SNc!'c+dIB");
      xPathLexer0.leftBracket();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("?^1; 8cwO=:x<Y'\u0002*");
      Token token1 = xPathLexer0.nextToken();
      assertEquals(23, token1.getTokenType());
      assertEquals("!", token1.getTokenText());
      
      xPathLexer0.relationalOperator();
      xPathLexer1.consume(0);
      xPathLexer0.setXPath("3:Z0PFQVJ-");
      Token token2 = xPathLexer0.nextToken();
      assertEquals(30, token2.getTokenType());
      assertEquals("3", token2.getTokenText());
      
      xPathLexer0.setPreviousToken((Token) null);
      Token token3 = xPathLexer1.leftBracket();
      assertEquals(3, token3.getTokenType());
      assertEquals("?", token3.getTokenText());
      
      xPathLexer1.operatorName();
      Token token4 = xPathLexer1.minus();
      assertEquals("^", token4.getTokenText());
      assertEquals(6, token4.getTokenType());
      
      Token token5 = xPathLexer0.star();
      assertEquals(":", token5.getTokenText());
      assertEquals(20, token5.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.or();
      Token token6 = xPathLexer2.at();
      assertEquals(16, token6.getTokenType());
      
      Token token7 = xPathLexer0.colon();
      assertEquals(18, token7.getTokenType());
      assertEquals("Z", token7.getTokenText());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.9443828455443062
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("~S&IWn.w");
      Token token0 = xPathLexer0.not();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      token1.toString();
      token1.toString();
      token1.toString();
      token0.toString();
      token1.toString();
      String string0 = token0.toString();
      assertEquals("[ (23) (~)", string0);
      
      token1.toString();
      token1.toString();
      token1.toString();
      token1.toString();
      token1.toString();
      token1.toString();
      String string1 = token1.toString();
      assertEquals("[ (15) (S)", string1);
      
      xPathLexer0.setPreviousToken(token1);
      Token token2 = xPathLexer0.dots();
      assertEquals("&", token2.getTokenText());
      assertEquals(13, token2.getTokenType());
      
      Token token3 = xPathLexer0.at();
      assertEquals("I", token3.getTokenText());
      assertEquals(16, token3.getTokenType());
      
      Token token4 = xPathLexer0.leftParen();
      assertEquals("W", token4.getTokenText());
      
      xPathLexer0.nextToken();
      char char0 = xPathLexer0.LA(4831);
      assertEquals('\uFFFF', char0);
      
      xPathLexer0.setXPath("Jk");
      Token token5 = xPathLexer0.rightParen();
      assertEquals(2, token5.getTokenType());
      assertEquals("", token5.getTokenText());
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.isIdentifierChar('w');
      Token token6 = xPathLexer0.getPreviousToken();
      assertEquals("n.w", token6.getTokenText());
      
      xPathLexer0.hasMoreChars();
      Token token7 = xPathLexer0.minus();
      assertEquals(6, token7.getTokenType());
      assertEquals("J", token7.getTokenText());
      
      Token token8 = xPathLexer0.star();
      assertEquals("k", token8.getTokenText());
      assertEquals(20, token8.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.consume();
      xPathLexer1.div();
      Token token9 = xPathLexer0.colon();
      assertEquals(18, token9.getTokenType());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.9254708414453219
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("~S&IWn.w");
      xPathLexer0.not();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.not();
      assertEquals("&", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      xPathLexer0.literal();
      xPathLexer0.setXPath("FM0iByrRu6Uw");
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals("FM0iByrRu6Uw", token1.getTokenText());
      
      Token token2 = xPathLexer0.comma();
      assertEquals(32, token2.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.setXPath("~S&IWn.w");
      Token token3 = xPathLexer0.minus();
      assertEquals("~", token3.getTokenText());
      
      Token token4 = xPathLexer0.pipe();
      assertEquals(17, token4.getTokenType());
      assertEquals("S", token4.getTokenText());
      
      Token token5 = xPathLexer0.leftBracket();
      assertEquals(3, token5.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.and();
      xPathLexer1.slashes();
      Token token6 = xPathLexer0.colon();
      assertEquals(18, token6.getTokenType());
      assertEquals("I", token6.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token7 = xPathLexer1.slashes();
      assertEquals(11, token7.getTokenType());
      
      xPathLexer1.hasMoreChars();
      Token token8 = xPathLexer1.minus();
      assertEquals(6, token8.getTokenType());
      
      xPathLexer1.star();
      xPathLexer1.or();
      XPathLexer xPathLexer2 = new XPathLexer("@e.wH}%");
      Token token9 = xPathLexer0.at();
      assertEquals(16, token9.getTokenType());
      assertEquals("W", token9.getTokenText());
      
      xPathLexer0.nextToken();
      Token token10 = xPathLexer0.getPreviousToken();
      assertEquals(15, token10.getTokenType());
      assertEquals("n.w", token10.getTokenText());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.007688981340303
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("R?k?");
      Token token0 = xPathLexer0.star();
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      xPathLexer0.consume((-4981));
      xPathLexer0.setXPath("R?k?");
      xPathLexer0.and();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.nextToken();
      xPathLexer0.not();
      xPathLexer0.literal();
      xPathLexer0.slashes();
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.div();
      assertNull(token1);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.687979188031807
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      xPathLexer0.consume((-412));
      xPathLexer0.at();
      // Undeclared exception!
      try { 
        xPathLexer0.identifier();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.853489209058491
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.star();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.at();
      assertEquals(16, token0.getTokenType());
      
      xPathLexer0.colon();
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      
      xPathLexer0.literal();
      xPathLexer0.setXPath("sIO=J0$ES_f");
      Token token2 = xPathLexer0.identifierOrOperatorName();
      Token token3 = xPathLexer0.comma();
      assertEquals(32, token3.getTokenType());
      assertEquals("=", token3.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token4 = xPathLexer0.nextToken();
      assertEquals("J0", token4.getTokenText());
      
      xPathLexer0.setPreviousToken(token2);
      assertEquals(15, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("sIO=J0$ES_f");
      Token token5 = xPathLexer1.leftBracket();
      assertEquals("s", token5.getTokenText());
      assertEquals(3, token5.getTokenType());
      
      Token token6 = xPathLexer1.not();
      assertEquals(23, token6.getTokenType());
      assertEquals("I", token6.getTokenText());
      
      Token token7 = xPathLexer0.literal();
      assertNull(token7);
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token8 = xPathLexer2.minus();
      assertEquals(6, token8.getTokenType());
      
      Token token9 = xPathLexer1.star();
      assertEquals(20, token9.getTokenType());
      assertEquals("O", token9.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer2.or();
      Token token10 = xPathLexer1.dots();
      assertEquals("=", token10.getTokenText());
      assertEquals(13, token10.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token11 = xPathLexer0.plus();
      assertEquals(5, token11.getTokenType());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.734350731495169
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("R?k?");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals("R", token0.getTokenText());
      
      Token token1 = xPathLexer0.star();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("k", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.consume((-4981));
      xPathLexer0.setXPath(".Jfs5MG-");
      xPathLexer0.and();
      xPathLexer0.setPreviousToken(token1);
      assertEquals("?", token1.getTokenText());
      assertEquals(20, token1.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(".", token3.getTokenText());
      assertEquals(13, token3.getTokenType());
      
      Token token4 = xPathLexer0.not();
      assertEquals(23, token4.getTokenType());
      assertEquals("J", token4.getTokenText());
      
      Token token5 = xPathLexer0.literal();
      assertNull(token5);
      
      Token token6 = xPathLexer0.slashes();
      assertEquals(11, token6.getTokenType());
      
      xPathLexer0.div();
      Token token7 = xPathLexer0.leftBracket();
      assertEquals(3, token7.getTokenType());
      
      Token token8 = xPathLexer0.plus();
      assertEquals(5, token8.getTokenType());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.9197812626159572
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      xPathLexer0.consume((-412));
      xPathLexer0.setXPath("@J");
      Token token0 = xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.leftBracket();
      xPathLexer0.not();
      xPathLexer0.literal();
      xPathLexer0.slashes();
      xPathLexer0.isIdentifierChar('1');
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.div();
      assertNull(token1);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.011361623427664
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.star();
      assertEquals(20, token0.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.at();
      xPathLexer0.colon();
      Token token2 = xPathLexer0.colon();
      assertEquals(18, token2.getTokenType());
      
      xPathLexer0.literal();
      xPathLexer0.setXPath("sIO=J0$ES_f");
      xPathLexer0.identifierOrOperatorName();
      Token token3 = xPathLexer0.comma();
      assertEquals(32, token3.getTokenType());
      assertEquals("=", token3.getTokenText());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.nextToken();
      Token token4 = xPathLexer0.nextToken();
      assertEquals("$", token4.getTokenText());
      assertEquals(26, token4.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.setPreviousToken(token1);
      assertEquals(16, token1.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token5 = xPathLexer2.leftBracket();
      assertEquals(3, token5.getTokenType());
      
      Token token6 = xPathLexer2.not();
      assertEquals(23, token6.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.Token");
      Token token7 = xPathLexer3.literal();
      assertNull(token7);
      
      Token token8 = xPathLexer3.slashes();
      assertEquals(11, token8.getTokenType());
      
      xPathLexer0.isIdentifierChar('r');
      Token token9 = xPathLexer0.identifierOrOperatorName();
      assertEquals("ES_f", token9.getTokenText());
      assertEquals(15, token9.getTokenType());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.1202920984924516
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("64hMBxqU");
      xPathLexer0.endPosition();
      Token token0 = xPathLexer0.rightBracket();
      Token token1 = xPathLexer0.notEquals();
      assertEquals("4h", token1.getTokenText());
      assertEquals(22, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("MBxqU", token2.getTokenText());
      
      String string0 = token0.toString();
      assertEquals("[ (4) (6)", string0);
      
      Token token3 = xPathLexer0.slashes();
      assertEquals(11, token3.getTokenType());
      
      xPathLexer0.setXPath("@J");
      xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken(token0);
      Token token4 = xPathLexer0.leftBracket();
      assertEquals("J", token4.getTokenText());
      assertEquals(3, token4.getTokenType());
      
      Token token5 = xPathLexer0.not();
      assertEquals(23, token5.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      Token token6 = xPathLexer0.star();
      assertEquals(20, token6.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer("[ (4) (6)");
      Token token7 = xPathLexer2.at();
      assertEquals(16, token7.getTokenType());
      assertEquals("[", token7.getTokenText());
      
      Token token8 = xPathLexer1.colon();
      assertEquals(18, token8.getTokenType());
      
      Token token9 = xPathLexer1.number();
      assertEquals(30, token9.getTokenType());
      
      Token token10 = xPathLexer0.plus();
      assertEquals(5, token10.getTokenType());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.122244580215557
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("SNc!'c+dIB");
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("S", token0.getTokenText());
      
      Token token1 = xPathLexer0.dollar();
      assertEquals("N", token1.getTokenText());
      assertEquals(26, token1.getTokenType());
      
      Token token2 = xPathLexer0.pipe();
      assertEquals("c", token2.getTokenText());
      assertEquals(17, token2.getTokenType());
      
      xPathLexer0.star();
      Token token3 = xPathLexer0.comma();
      assertEquals(32, token3.getTokenType());
      assertEquals("'", token3.getTokenText());
      
      xPathLexer0.number();
      xPathLexer0.identifier();
      Token token4 = xPathLexer0.star();
      assertEquals("+", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("dIB", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
      
      Token token6 = xPathLexer0.number();
      assertEquals(30, token6.getTokenType());
      assertEquals("", token6.getTokenText());
      
      xPathLexer0.mod();
      xPathLexer0.identifierOrOperatorName();
      Token token7 = xPathLexer0.equals();
      assertEquals(21, token7.getTokenType());
      
      xPathLexer0.star();
      xPathLexer0.or();
      xPathLexer0.isIdentifierChar('r');
      Token token8 = xPathLexer0.identifierOrOperatorName();
      assertNull(token8);
      
      Token token9 = xPathLexer0.plus();
      assertEquals(5, token9.getTokenType());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.211127849968881
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("R?k?");
      xPathLexer0.leftBracket();
      xPathLexer0.consume();
      xPathLexer0.getXPath();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.dollar();
      assertEquals("k", token0.getTokenText());
      assertEquals(26, token0.getTokenType());
      
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(19, token1.getTokenType());
      
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
      
      xPathLexer0.identifier();
      xPathLexer0.literal();
      xPathLexer0.and();
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(4, token3.getTokenType());
      
      Token token4 = xPathLexer0.whitespace();
      assertEquals((-2), token4.getTokenType());
      assertEquals("", token4.getTokenText());
      
      Token token5 = xPathLexer0.plus();
      assertEquals(5, token5.getTokenType());
      
      xPathLexer0.identifier();
      xPathLexer0.div();
      Token token6 = xPathLexer0.leftParen();
      assertEquals(1, token6.getTokenType());
      
      Token token7 = xPathLexer0.number();
      assertEquals(30, token7.getTokenType());
      
      Token token8 = xPathLexer0.leftBracket();
      assertEquals(3, token8.getTokenType());
      
      Token token9 = xPathLexer0.notEquals();
      assertEquals(22, token9.getTokenType());
      
      Token token10 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token10.getTokenType());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.2460486394034267
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.doubleColon();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.notEquals();
      xPathLexer0.and();
      xPathLexer0.minus();
      xPathLexer0.pipe();
      xPathLexer0.at();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-585));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.443830771502009
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.or();
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      
      xPathLexer0.div();
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
      
      xPathLexer0.doubleColon();
      Token token3 = xPathLexer0.doubleColon();
      assertEquals(19, token3.getTokenType());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(0, int0);
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.star();
      Token token4 = xPathLexer0.whitespace();
      assertEquals((-2), token4.getTokenType());
      
      xPathLexer0.consume();
      Token token5 = xPathLexer0.dollar();
      assertEquals(26, token5.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.leftParen();
      xPathLexer0.identifier();
      Token token6 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token6.getTokenType());
      
      Token token7 = xPathLexer0.star();
      assertEquals(20, token7.getTokenType());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=3.3922762213034967
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.slashes();
      xPathLexer0.or();
      xPathLexer0.mod();
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.at();
      assertEquals(16, token0.getTokenType());
      
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      
      Token token2 = xPathLexer0.dollar();
      assertEquals(26, token2.getTokenType());
      
      xPathLexer0.star();
      Token token3 = xPathLexer0.slashes();
      assertEquals(11, token3.getTokenType());
      
      xPathLexer0.star();
      Token token4 = xPathLexer0.star();
      assertEquals(20, token4.getTokenType());
      
      xPathLexer0.getXPath();
      Token token5 = xPathLexer0.minus();
      assertEquals(6, token5.getTokenType());
      
      xPathLexer0.div();
      xPathLexer0.leftParen();
      xPathLexer0.endPosition();
      xPathLexer0.getXPath();
      xPathLexer0.div();
      Token token6 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token6.getTokenType());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.currentPosition();
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.427339320468022
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("~S&IWn.w");
      xPathLexer0.not();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.dots();
      xPathLexer0.at();
      xPathLexer0.pipe();
      xPathLexer0.leftBracket();
      xPathLexer0.LA(4831);
      xPathLexer0.leftBracket();
      xPathLexer0.relationalOperator();
      xPathLexer0.consume((-476));
      // Undeclared exception!
      try { 
        xPathLexer0.mod();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.5774876682173042
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$M");
      Token token0 = xPathLexer0.identifier();
      assertEquals(15, token0.getTokenType());
      assertEquals("", token0.getTokenText());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.5683304305687247
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.leftParen();
      assertEquals(1, token0.getTokenType());
      
      Token token1 = xPathLexer0.comma();
      assertEquals(32, token1.getTokenType());
      
      Token token2 = xPathLexer0.plus();
      assertEquals(5, token2.getTokenType());
      
      int int0 = xPathLexer0.currentPosition();
      assertEquals(3, int0);
      
      Token token3 = xPathLexer0.colon();
      assertEquals(18, token3.getTokenType());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=3.68744617346859
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.rightBracket();
      xPathLexer0.minus();
      xPathLexer0.doubleColon();
      xPathLexer0.notEquals();
      xPathLexer0.dots();
      xPathLexer0.rightBracket();
      xPathLexer0.star();
      xPathLexer0.div();
      xPathLexer0.consume();
      xPathLexer0.or();
      xPathLexer0.plus();
      xPathLexer0.whitespace();
      xPathLexer0.star();
      xPathLexer0.colon();
      xPathLexer0.relationalOperator();
      xPathLexer0.literal();
      xPathLexer0.rightBracket();
      xPathLexer0.minus();
      xPathLexer0.leftBracket();
      xPathLexer0.div();
      xPathLexer0.or();
      xPathLexer0.pipe();
      xPathLexer0.or();
      xPathLexer0.consume(679);
      xPathLexer0.and();
      xPathLexer0.isIdentifierStartChar(')');
      xPathLexer0.consume((-2443));
      xPathLexer0.at();
      // Undeclared exception!
      try { 
        xPathLexer0.or();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=3.284138484349511
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.minus();
      assertEquals("[", token0.getTokenText());
      
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      assertEquals(" ", token1.getTokenText());
      
      xPathLexer0.whitespace();
      Token token2 = xPathLexer0.comma();
      assertEquals(32, token2.getTokenType());
      
      xPathLexer0.minus();
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('Q');
      assertTrue(boolean0);
      
      Token token3 = xPathLexer0.notEquals();
      assertEquals(22, token3.getTokenType());
      
      Token token4 = xPathLexer0.whitespace();
      assertEquals("", token4.getTokenText());
      assertEquals((-2), token4.getTokenType());
      
      xPathLexer0.rightBracket();
      Token token5 = xPathLexer0.rightBracket();
      assertEquals(4, token5.getTokenType());
      
      Token token6 = xPathLexer0.minus();
      assertEquals(6, token6.getTokenType());
      
      xPathLexer0.div();
      Token token7 = xPathLexer0.colon();
      assertEquals(18, token7.getTokenType());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.7995967813684508
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[(");
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.dollar();
      assertEquals(26, token0.getTokenType());
      assertEquals("[", token0.getTokenText());
      
      xPathLexer0.mod();
      xPathLexer0.getPreviousToken();
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals("(", token1.getTokenText());
      
      xPathLexer0.or();
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
      
      Token token3 = xPathLexer0.rightParen();
      assertEquals(2, token3.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.mod();
      Token token4 = xPathLexer0.at();
      assertEquals(16, token4.getTokenType());
      
      Token token5 = xPathLexer0.colon();
      assertEquals(18, token5.getTokenType());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=3.2946372879510464
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.rightParen();
      assertEquals(2, token0.getTokenType());
      
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(19, token1.getTokenType());
      
      xPathLexer0.plus();
      xPathLexer0.mod();
      xPathLexer0.slashes();
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      
      Token token3 = xPathLexer0.whitespace();
      assertEquals((-2), token3.getTokenType());
      
      Token token4 = xPathLexer0.plus();
      assertEquals(5, token4.getTokenType());
      
      Token token5 = xPathLexer0.slashes();
      assertEquals(11, token5.getTokenType());
      
      Token token6 = xPathLexer0.at();
      assertEquals(16, token6.getTokenType());
      
      Token token7 = xPathLexer0.notEquals();
      assertEquals(22, token7.getTokenType());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.5179872908529677
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=3.7295172648952795
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.leftParen();
      xPathLexer0.comma();
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      
      Token token1 = xPathLexer0.literal();
      assertNull(token1);
      
      xPathLexer0.setXPath("m}wcpjxO;kK");
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token2.getTokenType());
      assertEquals("m", token2.getTokenText());
      
      Token token3 = xPathLexer0.comma();
      assertEquals("}", token3.getTokenText());
      assertEquals(32, token3.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.setXPath("m}wcpjxO;kK");
      xPathLexer0.minus();
      Token token4 = xPathLexer0.pipe();
      assertEquals("}", token4.getTokenText());
      assertEquals(17, token4.getTokenType());
      
      Token token5 = xPathLexer0.leftBracket();
      assertEquals("w", token5.getTokenText());
      assertEquals(3, token5.getTokenType());
      
      xPathLexer0.and();
      Token token6 = xPathLexer0.colon();
      assertEquals("c", token6.getTokenText());
      assertEquals(18, token6.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token7 = xPathLexer0.slashes();
      assertEquals(11, token7.getTokenType());
      
      xPathLexer0.hasMoreChars();
      Token token8 = xPathLexer0.minus();
      assertEquals(6, token8.getTokenType());
      assertEquals("j", token8.getTokenText());
      
      Token token9 = xPathLexer0.star();
      assertEquals(20, token9.getTokenType());
      assertEquals("x", token9.getTokenText());
      
      xPathLexer0.or();
      XPathLexer xPathLexer1 = new XPathLexer("@e.wH}%");
      Token token10 = xPathLexer1.at();
      assertEquals(16, token10.getTokenType());
      assertEquals("@", token10.getTokenText());
      
      Token token11 = xPathLexer0.equals();
      assertEquals("O", token11.getTokenText());
      assertEquals(21, token11.getTokenType());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.102891256914312
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("SNc!'c+dIB");
      xPathLexer0.dots();
      xPathLexer0.dollar();
      xPathLexer0.star();
      xPathLexer0.comma();
      xPathLexer0.number();
      xPathLexer0.star();
      xPathLexer0.consume(0);
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.minus();
      xPathLexer0.slashes();
      xPathLexer0.leftBracket();
      xPathLexer0.slashes();
      xPathLexer0.hasMoreChars();
      XPathLexer xPathLexer1 = null;
      try {
        xPathLexer1 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=3.2441789454180703
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.identifier();
      xPathLexer0.getXPath();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.dollar();
      assertEquals(26, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token1 = xPathLexer1.doubleColon();
      assertEquals(19, token1.getTokenType());
      
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
      
      xPathLexer1.identifier();
      xPathLexer1.literal();
      xPathLexer1.and();
      xPathLexer0.rightBracket();
      Token token3 = xPathLexer0.whitespace();
      assertEquals((-2), token3.getTokenType());
      
      Token token4 = xPathLexer0.plus();
      assertEquals(5, token4.getTokenType());
      
      xPathLexer1.identifier();
      xPathLexer1.div();
      Token token5 = xPathLexer0.leftParen();
      assertEquals(1, token5.getTokenType());
      
      Token token6 = xPathLexer0.number();
      assertEquals(30, token6.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token7 = xPathLexer2.leftBracket();
      assertEquals(3, token7.getTokenType());
      
      Token token8 = xPathLexer1.notEquals();
      assertEquals(22, token8.getTokenType());
      
      Token token9 = xPathLexer2.identifierOrOperatorName();
      assertEquals(15, token9.getTokenType());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.7997955377152293
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftParen();
      assertEquals(1, token1.getTokenType());
      
      Token token2 = xPathLexer0.doubleColon();
      assertEquals(19, token2.getTokenType());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.5678136347030915
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.rightParen();
      assertEquals(2, token0.getTokenType());
      
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      
      Token token2 = xPathLexer0.leftBracket();
      assertEquals(3, token2.getTokenType());
      
      Token token3 = xPathLexer0.minus();
      assertEquals(6, token3.getTokenType());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.3973593790781256
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("~S&IWn.w");
      xPathLexer0.not();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      XPathLexer xPathLexer1 = new XPathLexer("[ (15) (S)");
      xPathLexer0.nextToken();
      xPathLexer1.relationalOperator();
      xPathLexer1.consume(0);
      XPathLexer xPathLexer2 = null;
      try {
        xPathLexer2 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=3.6273179481322737
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("~S&IWn.w");
      Token token0 = xPathLexer0.not();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      token1.toString();
      token1.toString();
      token1.toString();
      token1.toString();
      token1.toString();
      token1.toString();
      token1.toString();
      token1.toString();
      xPathLexer0.setPreviousToken(token1);
      xPathLexer0.dots();
      Token token2 = xPathLexer0.at();
      Token token3 = xPathLexer0.pipe();
      xPathLexer0.leftBracket();
      token0.toString();
      token2.toString();
      xPathLexer0.setPreviousToken(token3);
      xPathLexer0.notEquals();
      xPathLexer0.setXPath("");
      Token token4 = xPathLexer0.dollar();
      xPathLexer0.getPreviousToken();
      xPathLexer0.or();
      xPathLexer0.consume();
      xPathLexer0.doubleColon();
      xPathLexer0.whitespace();
      xPathLexer0.rightParen();
      xPathLexer0.LA(102);
      xPathLexer0.setPreviousToken(token4);
      xPathLexer0.rightParen();
      Token token5 = xPathLexer0.div();
      assertNull(token5);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.9078300726970245
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.star();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.at();
      xPathLexer0.colon();
      xPathLexer0.colon();
      xPathLexer0.plus();
      xPathLexer0.div();
      xPathLexer0.nextToken();
      xPathLexer0.comma();
      xPathLexer0.doubleColon();
      xPathLexer0.equals();
      xPathLexer0.dots();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.equals();
      xPathLexer0.div();
      xPathLexer0.star();
      xPathLexer0.operatorName();
      xPathLexer0.identifier();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.consume(5721);
      xPathLexer0.not();
      xPathLexer0.setXPath("");
      xPathLexer0.endPosition();
      xPathLexer0.notEquals();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=3.4481427587190536
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("~S&IWn.w");
      xPathLexer0.not();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (15) (S)", string0);
      
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.dots();
      assertEquals("&", token1.getTokenText());
      assertEquals(13, token1.getTokenType());
      
      Token token2 = xPathLexer0.at();
      Token token3 = xPathLexer0.leftParen();
      assertEquals(1, token3.getTokenType());
      assertEquals("W", token3.getTokenText());
      
      Token token4 = xPathLexer0.minus();
      assertEquals(6, token4.getTokenType());
      assertEquals("n", token4.getTokenText());
      
      xPathLexer0.setPreviousToken(token2);
      assertEquals(16, token2.getTokenType());
      assertEquals("I", token2.getTokenText());
      
      Token token5 = xPathLexer0.leftBracket();
      assertEquals(".", token5.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("iO!A|=A&mbt");
      Token token6 = xPathLexer1.not();
      assertEquals("i", token6.getTokenText());
      assertEquals(23, token6.getTokenType());
      
      xPathLexer0.literal();
      Token token7 = xPathLexer0.slashes();
      assertEquals(11, token7.getTokenType());
      
      xPathLexer0.isIdentifierChar('g');
      Token token8 = xPathLexer1.identifierOrOperatorName();
      assertEquals(15, token8.getTokenType());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=3.24640345903678
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("g|");
      xPathLexer0.and();
      xPathLexer0.doubleColon();
      xPathLexer0.rightParen();
      xPathLexer0.star();
      xPathLexer0.notEquals();
      xPathLexer0.whitespace();
      xPathLexer0.at();
      xPathLexer0.or();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-1697));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.2120137857899431
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.identifier();
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.comma();
      assertEquals(32, token1.getTokenType());
      
      xPathLexer0.notEquals();
      Token token2 = xPathLexer0.equals();
      assertEquals(21, token2.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.consume();
      xPathLexer0.notEquals();
      Token token3 = xPathLexer0.nextToken();
      assertEquals((-1), token3.getTokenType());
      
      Token token4 = xPathLexer0.notEquals();
      assertEquals(22, token4.getTokenType());
      
      Token token5 = xPathLexer0.dollar();
      assertEquals(26, token5.getTokenType());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.01398032448576
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("SNc!'c+dIB");
      xPathLexer0.dots();
      xPathLexer0.dollar();
      xPathLexer0.pipe();
      xPathLexer0.pipe();
      xPathLexer0.star();
      xPathLexer0.comma();
      xPathLexer0.number();
      xPathLexer0.star();
      xPathLexer0.consume(114);
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer(",aS{Pd");
      xPathLexer1.number();
      xPathLexer0.mod();
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer2 = new XPathLexer("SNc!'c+dIB");
      XPathLexer xPathLexer3 = new XPathLexer("");
      xPathLexer3.notEquals();
      xPathLexer0.dollar();
      xPathLexer0.star();
      xPathLexer1.plus();
      Token token0 = xPathLexer3.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.1421966448710172
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("SNc!'c+dIB");
      xPathLexer0.dots();
      xPathLexer0.dollar();
      xPathLexer0.pipe();
      xPathLexer0.equals();
      xPathLexer0.star();
      xPathLexer0.comma();
      xPathLexer0.number();
      xPathLexer0.star();
      xPathLexer0.consume(0);
      xPathLexer0.nextToken();
      xPathLexer0.number();
      xPathLexer0.isIdentifierChar('k');
      xPathLexer0.literal();
      xPathLexer0.slashes();
      xPathLexer0.isIdentifierChar(':');
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 62
  /*Coverage entropy=3.6460609540323783
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("~S&IWn.w");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (15) ()", string0);
      
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      assertEquals("~", token1.getTokenText());
      
      Token token2 = xPathLexer0.at();
      Token token3 = xPathLexer0.pipe();
      Token token4 = xPathLexer0.leftBracket();
      assertEquals(3, token4.getTokenType());
      assertEquals("I", token4.getTokenText());
      
      String string1 = token2.toString();
      assertEquals("[ (16) (S)", string1);
      
      xPathLexer0.setPreviousToken(token3);
      Token token5 = xPathLexer0.notEquals();
      assertEquals(22, token5.getTokenType());
      assertEquals("Wn", token5.getTokenText());
      
      xPathLexer0.setXPath("");
      Token token6 = xPathLexer0.dollar();
      Token token7 = xPathLexer0.getPreviousToken();
      assertEquals(17, token7.getTokenType());
      assertEquals("&", token7.getTokenText());
      
      xPathLexer0.or();
      Token token8 = xPathLexer0.doubleColon();
      assertEquals(19, token8.getTokenType());
      
      Token token9 = xPathLexer0.whitespace();
      assertEquals((-2), token9.getTokenType());
      
      xPathLexer0.rightParen();
      char char0 = xPathLexer0.LA(102);
      assertEquals('\uFFFF', char0);
      
      xPathLexer0.setPreviousToken(token6);
      assertEquals(26, token6.getTokenType());
      
      Token token10 = xPathLexer0.rightParen();
      assertEquals(2, token10.getTokenType());
      
      xPathLexer0.div();
      Token token11 = xPathLexer0.minus();
      assertEquals(6, token11.getTokenType());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.9813694027638364
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("64hMBxqU");
      xPathLexer0.endPosition();
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      assertEquals("6", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      
      Token token2 = xPathLexer0.notEquals();
      assertEquals(22, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("BxqU", token3.getTokenText());
      
      xPathLexer0.slashes();
      xPathLexer0.colon();
      Token token4 = xPathLexer0.pipe();
      assertEquals(17, token4.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.and();
      Token token5 = xPathLexer0.colon();
      assertEquals(18, token5.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.div();
      xPathLexer0.consume();
      Token token6 = xPathLexer0.slashes();
      assertEquals(11, token6.getTokenType());
      
      Token token7 = xPathLexer0.number();
      assertEquals(30, token7.getTokenType());
      
      Token token8 = xPathLexer0.identifier();
      assertEquals(15, token8.getTokenType());
      
      int int0 = xPathLexer0.currentPosition();
      assertEquals(14, int0);
      
      Token token9 = xPathLexer0.minus();
      assertEquals(6, token9.getTokenType());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=3.2569219996241396
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":X7to^Siyv7");
      xPathLexer0.notEquals();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.colon();
      assertEquals("7", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
      
      xPathLexer0.div();
      Token token1 = xPathLexer0.plus();
      assertEquals("t", token1.getTokenText());
      
      Token token2 = xPathLexer0.pipe();
      assertEquals("o", token2.getTokenText());
      assertEquals(17, token2.getTokenType());
      
      xPathLexer0.consume(60);
      xPathLexer0.mod();
      Token token3 = xPathLexer0.dots();
      assertEquals(13, token3.getTokenType());
      
      xPathLexer0.getPreviousToken();
      xPathLexer0.identifier();
      Token token4 = xPathLexer0.literal();
      assertNull(token4);
      
      xPathLexer0.and();
      Token token5 = xPathLexer0.rightBracket();
      assertEquals(4, token5.getTokenType());
      
      Token token6 = xPathLexer0.whitespace();
      assertEquals("", token6.getTokenText());
      assertEquals((-2), token6.getTokenType());
      
      Token token7 = xPathLexer0.plus();
      assertEquals(5, token7.getTokenType());
      
      xPathLexer0.identifier();
      xPathLexer0.div();
      xPathLexer0.leftParen();
      Token token8 = xPathLexer0.number();
      assertEquals(30, token8.getTokenType());
      
      Token token9 = xPathLexer0.leftBracket();
      assertEquals(3, token9.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer(":X7to^Siyv7");
      Token token10 = xPathLexer1.notEquals();
      assertEquals(":X", token10.getTokenText());
      assertEquals(22, token10.getTokenType());
      
      Token token11 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token11.getTokenType());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.2904979957976015
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.notEquals();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.681095545078155
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      
      xPathLexer0.or();
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=3.179403504147509
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("~S&IWn.w");
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      assertEquals("~", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNotNull(token1);
      
      token1.toString();
      token1.toString();
      token1.toString();
      token1.toString();
      token1.toString();
      token1.toString();
      token1.toString();
      token1.toString();
      String string0 = token1.toString();
      assertEquals("[ (15) (S)", string0);
      
      Token token2 = xPathLexer0.equals();
      assertEquals("&", token2.getTokenText());
      assertEquals(21, token2.getTokenType());
      
      Token token3 = xPathLexer0.star();
      assertEquals(20, token3.getTokenType());
      assertEquals("I", token3.getTokenText());
      
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertEquals("Wn.w", token4.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token5 = xPathLexer1.comma();
      assertEquals(32, token5.getTokenType());
      
      Token token6 = xPathLexer0.at();
      assertEquals(16, token6.getTokenType());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.8625121275562304
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("SNc!'c+dIB");
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.dollar();
      assertEquals("N", token1.getTokenText());
      assertEquals(26, token1.getTokenType());
      
      Token token2 = xPathLexer0.equals();
      assertEquals(21, token2.getTokenType());
      assertEquals("c", token2.getTokenText());
      
      xPathLexer0.star();
      xPathLexer0.minus();
      xPathLexer0.number();
      Token token3 = xPathLexer0.star();
      assertEquals("c", token3.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("SNc!'c+dIB");
      Token token4 = xPathLexer1.nextToken();
      assertEquals(15, token4.getTokenType());
      
      Token token5 = xPathLexer0.number();
      assertEquals(30, token5.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token6 = xPathLexer1.slashes();
      assertEquals("!", token6.getTokenText());
      assertEquals(11, token6.getTokenType());
      
      xPathLexer1.hasMoreChars();
      Token token7 = xPathLexer0.minus();
      assertEquals(6, token7.getTokenType());
      assertEquals("+", token7.getTokenText());
      
      Token token8 = xPathLexer0.star();
      assertEquals(20, token8.getTokenType());
      
      xPathLexer1.or();
      Token token9 = xPathLexer0.at();
      assertEquals(16, token9.getTokenType());
      assertEquals("I", token9.getTokenText());
      
      char char0 = xPathLexer1.LA(32);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.063217416244005
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("SNc!'c+dIB");
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("S", token0.getTokenText());
      
      Token token1 = xPathLexer0.dollar();
      assertEquals("N", token1.getTokenText());
      assertEquals(26, token1.getTokenType());
      
      Token token2 = xPathLexer0.pipe();
      assertEquals(17, token2.getTokenType());
      assertEquals("c", token2.getTokenText());
      
      xPathLexer0.star();
      Token token3 = xPathLexer0.comma();
      assertEquals("'", token3.getTokenText());
      assertEquals(32, token3.getTokenType());
      
      xPathLexer0.number();
      Token token4 = xPathLexer0.star();
      assertEquals("c", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(5, token5.getTokenType());
      assertEquals("+", token5.getTokenText());
      
      Token token6 = xPathLexer0.number();
      assertEquals(30, token6.getTokenType());
      assertEquals("", token6.getTokenText());
      
      xPathLexer0.mod();
      Token token7 = xPathLexer0.identifierOrOperatorName();
      assertEquals("dIB", token7.getTokenText());
      assertEquals(15, token7.getTokenType());
      
      Token token8 = xPathLexer0.equals();
      assertEquals(21, token8.getTokenType());
      
      Token token9 = xPathLexer0.star();
      assertEquals(20, token9.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.rightParen();
      Token token10 = xPathLexer0.at();
      assertEquals(16, token10.getTokenType());
      
      Token token11 = xPathLexer0.nextToken();
      assertEquals((-1), token11.getTokenType());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.7403016826352156
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      xPathLexer0.div();
      Token token0 = xPathLexer0.dollar();
      assertEquals(26, token0.getTokenType());
      assertEquals("[", token0.getTokenText());
      
      xPathLexer0.mod();
      xPathLexer0.div();
      Token token1 = xPathLexer0.slashes();
      assertEquals(" ", token1.getTokenText());
      
      xPathLexer0.or();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(1, token2.getTokenType());
      assertEquals("(", token2.getTokenText());
      
      Token token3 = xPathLexer0.slashes();
      assertEquals(11, token3.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token4.getTokenType());
      
      xPathLexer0.mod();
      Token token5 = xPathLexer0.dots();
      assertEquals(13, token5.getTokenType());
  }
}
