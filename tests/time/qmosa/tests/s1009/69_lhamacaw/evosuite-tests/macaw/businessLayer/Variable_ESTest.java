/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 20:30:22 GMT 2019
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.ConcurrentModificationException;
import java.util.function.Predicate;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.businessLayer.VariableSummary;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.2255729160547477
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getFilePath();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      User user1 = new User();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm.detectFieldChanges(user1, ontologyTerm0, ontologyTerm1);
      ontologyTerm1.setNameSpace("%Z<6");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.getDisplayName();
      derivedVariable0.setIdentifier(0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable1.setAlternativeVariable(rawVariable0);
      derivedVariable0.createVariableSummary();
      derivedVariable1.setName("");
      boolean boolean0 = derivedVariable2.isNewRecord();
      assertFalse(boolean0);
      
      ArrayList<OntologyTerm> arrayList0 = derivedVariable2.getOntologyTerms();
      RawVariable rawVariable2 = new RawVariable();
      RawVariable rawVariable3 = new RawVariable();
      rawVariable0.removeOntologyTerms(arrayList0);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      rawVariable1.removeSupportingDocuments(arrayList1);
      RawVariable rawVariable4 = new RawVariable();
      ArrayList<MacawChangeEvent> arrayList2 = Variable.detectFieldChanges(user0, rawVariable0, rawVariable4);
      assertEquals(0, arrayList2.size());
      
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm1);
      assertEquals(0, derivedVariable0.getIdentifier());
      
      rawVariable2.removeOntologyTerms(arrayList0);
      assertEquals("Unknown", derivedVariable2.getAvailability());
      assertEquals("Unknown", derivedVariable2.getCategory());
      assertEquals("Unknown", derivedVariable2.getCleaningStatus());
      assertFalse(derivedVariable2.isCoded());
      assertEquals("Unknown", rawVariable2.getCategory());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.1231409223126283
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getFilePath();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      User user1 = new User();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm.detectFieldChanges(user1, ontologyTerm0, ontologyTerm1);
      ontologyTerm1.setNameSpace("%Z<6");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.getDisplayName();
      derivedVariable0.setIdentifier(0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable1.setAlternativeVariable(rawVariable0);
      derivedVariable0.createVariableSummary();
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      derivedVariable1.containsSupportingDocument(supportingDocument1);
      derivedVariable1.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable1.getOntologyTerms();
      arrayList0.listIterator();
      User user2 = new User("?&z]~M<~Y)GOMyo182", "");
      DerivedVariable derivedVariable3 = new DerivedVariable();
      ArrayList<MacawChangeEvent> arrayList1 = Variable.detectFieldChanges(user2, rawVariable1, derivedVariable3);
      assertEquals(0, arrayList1.size());
      
      User user3 = new User((String) null, "");
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user1, derivedVariable1, derivedVariable3);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertNotNull(macawChangeEvent0);
      assertEquals(0, macawChangeEvent0.getChangedObjectIdentifier());
      
      rawVariable0.createVariableSummary();
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnStart("bLJF=`<>m>Y0wj");
      derivedVariable0.setName("bLJF=`<>m>Y0wj");
      derivedVariable0.createVariableSummary();
      derivedVariable0.getQuestionNumber();
      derivedVariable0.getSourceVariables();
      assertEquals("bLJF=`<>m>Y0wj", derivedVariable0.getDisplayName());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.712223686045861
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      User user0 = new User((String) null, "");
      RawVariable rawVariable0 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      User user1 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("aPQPnSZ|Q1:Q<\"");
      Variable.detectFieldChanges(user1, derivedVariable0, rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.getQuestionNumber();
      derivedVariable0.getName();
      assertEquals("aPQPnSZ|Q1:Q<\"", derivedVariable0.getDisplayName());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.7531595468318217
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.questionNumber = "variable.label.label";
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("|SS");
      User user0 = new User((String) null, "UN;+J&o5PP");
      derivedVariable0.containsSourceVariable(rawVariable0);
      user0.setAddressLine2("UNABLE_TO_CREATE_CATEGORY");
      user0.setEmail("UNABLE_TO_CREATE_CATEGORY");
      user0.setAffiliation((String) null);
      User user1 = new User();
      RawVariable.detectFieldChanges(user1, rawVariable0, rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      derivedVariable0.getOntologyTerms();
      derivedVariable0.isNewRecord();
      derivedVariable0.setNotes("variable.label.label");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      derivedVariable0.cloneAttributes(rawVariable0);
      derivedVariable0.getNotes();
      assertEquals("variable.label.label", derivedVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.809331468164991
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm1, ontologyTerm0);
      ontologyTerm1.setNameSpace("UNABLE_TO_DISASSOCIATE_ONTOLOGY_TERM");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm1);
      derivedVariable0.setForm("*");
      derivedVariable0.getDisplayName();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.validateFields(valueLabel0);
      derivedVariable0.removeValueLabel(valueLabel0);
      derivedVariable0.setName("");
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.isNewRecord();
      derivedVariable0.setNotes("e");
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.cloneAttributes(rawVariable0);
      assertEquals("*", derivedVariable0.getForm());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.807808761841862
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.columnEnd = "UNABLE_TO_DISASSOCIATE_ONTOLOGY_TERM";
      derivedVariable0.setFilePath("aOQPE");
      derivedVariable1.setQuestionNumber("aOQPE");
      derivedVariable0.cloneAttributes(derivedVariable1);
      derivedVariable0.clone();
      derivedVariable1.codeBookNumber = "UNABLE_TO_CHECK_ONTOLOGY_TERM_EXISTS";
      derivedVariable1.clone();
      derivedVariable0.getIdentifier();
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      rawVariable0.setSupportingDocuments(arrayList0);
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      derivedVariable1.isCleaned();
      derivedVariable0.getDisplayName();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("");
      arrayList1.add(0, ontologyTerm0);
      rawVariable0.removeOntologyTerms(arrayList1);
      derivedVariable1.getAvailability();
      derivedVariable0.addSourceVariable(rawVariable0);
      rawVariable0.getYear();
      rawVariable0.isCoded();
      rawVariable0.getLabel();
      derivedVariable0.containsSourceVariable(derivedVariable1);
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      rawVariable0.getSupportingDocuments();
      // Undeclared exception!
      try { 
        derivedVariable0.addSourceVariables((ArrayList<Variable>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.8827437576468555
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.questionNumber = "variable.label.label";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace("%Z<6");
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.getDisplayName();
      derivedVariable0.setIdentifier(0);
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.removeOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.clear();
      rawVariable0.removeOntologyTerms(arrayList0);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>(arrayList1);
      arrayList1.retainAll(arrayList0);
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.removeSupportingDocuments(arrayList2);
      RawVariable rawVariable3 = new RawVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setName((String) null);
      // Undeclared exception!
      try { 
        derivedVariable0.containsOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.8795954065707257
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm1, ontologyTerm0);
      ontologyTerm0.setNameSpace("variable.availability.label");
      ontologyTerm1.setNameSpace("UNABLE_TO_DISASSOCIATE_ONTOLOGY_TERM");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm1);
      derivedVariable1.setForm("UNABLE_TO_DISASSOCIATE_ONTOLOGY_TERM");
      derivedVariable0.getDisplayName();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.validateFields(valueLabel0);
      derivedVariable0.removeValueLabel(valueLabel0);
      derivedVariable0.setName("");
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      derivedVariable0.isNewRecord();
      derivedVariable0.setNotes("|SS");
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.cloneAttributes(derivedVariable1);
      derivedVariable0.clone();
      derivedVariable1.getValueLabels();
      derivedVariable0.getAlternativeVariable();
      assertEquals("|SS", derivedVariable0.getNotes());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.38615474653985
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getFilePath();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      User user1 = new User();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm.detectFieldChanges(user1, ontologyTerm0, ontologyTerm1);
      ontologyTerm1.setNameSpace("%Z<6");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument1);
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      arrayList1.listIterator();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm0.getDisplayName();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      arrayList0.add(ontologyTerm2);
      ArrayList<OntologyTerm> arrayList2 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      arrayList3.add(ontologyTerm3);
      derivedVariable0.addOntologyTerms(arrayList2);
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      boolean boolean1 = derivedVariable0.containsOntologyTerm(ontologyTerm5);
      assertFalse(boolean1 == boolean0);
      
      rawVariable0.getOntologyTerms();
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.94402561539737
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("|SS");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm1);
      ontologyTerm1.setNameSpace((String) null);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.getDisplayName();
      derivedVariable0.setIdentifier(53);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setAlternativeVariable(derivedVariable0);
      derivedVariable0.createVariableSummary();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      arrayList0.listIterator();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm0.getDisplayName();
      arrayList0.add(ontologyTerm2);
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList2 = rawVariable0.getOntologyTerms();
      arrayList2.add(ontologyTerm0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.addOntologyTerms(arrayList1);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm2);
      assertEquals("53", derivedVariable0.getDisplayItemIdentifier());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.927751717328591
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      user0.setAddressLine1("(=IJS(OHdJu7(k!:W");
      RawVariable rawVariable1 = new RawVariable();
      User user1 = new User("variable.label.label", "(=IJS(OHdJu7(k!:W");
      user1.setPhone((String) null);
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable1, rawVariable0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertNotNull(macawChangeEvent0);
      
      ArrayList<String> arrayList0 = Variable.validateFields(rawVariable1);
      assertEquals(1, arrayList0.size());
      
      User user2 = new User((String) null, "~");
      RawVariable rawVariable2 = new RawVariable();
      ArrayList<MacawChangeEvent> arrayList1 = Variable.detectFieldChanges(user2, rawVariable0, rawVariable1);
      assertEquals(0, arrayList1.size());
      
      int int0 = rawVariable2.getIdentifier();
      assertEquals(0, int0);
      
      String string0 = rawVariable1.getDisplayItemIdentifier();
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("0", string0);
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertFalse(rawVariable1.isCoded());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.935756706421919
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("|SS");
      User user0 = new User((String) null, "UN;+J&o5PP");
      user0.setAddressLine2("UNABLE_TO_CREATE_CATEGORY");
      user0.setEmail("UNABLE_TO_CREATE_CATEGORY");
      user0.setAffiliation((String) null);
      User user1 = new User();
      RawVariable.detectFieldChanges(user1, rawVariable0, rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      arrayList0.clear();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      arrayList1.trimToSize();
      rawVariable0.removeSupportingDocuments(arrayList1);
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertEquals("|SS", rawVariable0.getLabel());
      
      arrayList0.spliterator();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable1.removeOntologyTerms(arrayList0);
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.9012019772988467
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("|SS");
      User user0 = new User((String) null, (String) null);
      user0.setAddressLine2("UNABLE_TO_CREATE_CATEGORY");
      user0.setEmail("UNABLE_TO_CREATE_CATEGORY");
      user0.setAffiliation((String) null);
      User user1 = new User();
      user1.setEmail((String) null);
      RawVariable.detectFieldChanges(user1, rawVariable0, rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.clear();
      rawVariable0.removeOntologyTerms(arrayList0);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      rawVariable0.removeSupportingDocuments(arrayList1);
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("UNABLE_TO_CREATE_CATEGORY");
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      RawVariable.detectFieldChanges(user1, rawVariable0, rawVariable0);
      assertEquals("|SS", rawVariable0.getLabel());
      
      rawVariable1.getDisplayName();
      assertEquals("Unknown", rawVariable1.getAvailability());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.2209804825722603
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user1 = new User();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      ontologyTerm0.setNameSpace("UNABLE_TO_ASSOCIATE_ONTOLOGY_TERM");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.setForm("UNABLE_TO_DISASSOCIATE_ONTOLOGY_TERM");
      derivedVariable0.getDisplayName();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.removeValueLabel(valueLabel0);
      derivedVariable0.setName("UNABLE_TO_CHECK_ONTOLOGY_TERM_EXISTS");
      derivedVariable0.isNewRecord();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeOntologyTerms(arrayList0);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      rawVariable0.removeSupportingDocuments(arrayList1);
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable1, derivedVariable0);
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.removeOntologyTerms(arrayList0);
      assertFalse(arrayList0.contains(ontologyTerm0));
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.9175426508896702
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.questionNumber = "variable.label.label";
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("|SS");
      User user0 = new User((String) null, "UN;+J&o5PP");
      user0.setAddressLine2("UNABLE_TO_CREATE_CATEGORY");
      user0.setEmail("UNABLE_TO_CREATE_CATEGORY");
      user0.setAffiliation((String) null);
      User user1 = new User();
      RawVariable.detectFieldChanges(user1, rawVariable0, rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      arrayList0.clear();
      rawVariable0.removeOntologyTerms(arrayList0);
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setName((String) null);
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user1, derivedVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.65197988225953
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      User user0 = new User((String) null, "");
      RawVariable rawVariable0 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      User user1 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("aPQ%PnSZ|Q1:Q<\"");
      Variable.detectFieldChanges(user1, derivedVariable0, rawVariable0);
      RawVariable rawVariable1 = new RawVariable();
      User user2 = new User("aPQ%PnSZ|Q1:Q<\"", "Ky8'9PY~lUd=JXF^");
      Variable.detectFieldChanges(user2, rawVariable0, derivedVariable0);
      assertEquals("aPQ%PnSZ|Q1:Q<\"", derivedVariable0.getName());
      assertEquals("Unknown", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.6206220186660607
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.questionNumber = "variable.label.label";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      ontologyTerm0.setNameSpace("%Z<6");
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user1 = new User();
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument0);
      supportingDocument0.setDocumentCode((String) null);
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("variable.label.label", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.0708634063315143
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.questionNumber = "variable.label.label";
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("|SS");
      User user0 = new User((String) null, "UN;+J&o5PP");
      user0.setAddressLine2("UNABLE_TO_CREATE_CATEGORY");
      user0.setEmail("UNABLE_TO_CREATE_CATEGORY");
      user0.setAffiliation((String) null);
      User user1 = new User();
      derivedVariable0.setName("(=IJS(OHdJu7(k!:W");
      derivedVariable0.isNewRecord();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.removeOntologyTerms(arrayList0);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      rawVariable1.removeSupportingDocuments(arrayList1);
      RawVariable rawVariable3 = new RawVariable();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable2.removeOntologyTerms(arrayList0);
      assertEquals("|SS", rawVariable0.getLabel());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCategory("'&TC");
      derivedVariable0.getLabel();
      assertEquals("'&TC", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.8752709189593038
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      User user0 = new User();
      user0.setAddressLine1("(=IJS(OHdJu7(k!:W");
      RawVariable rawVariable0 = new RawVariable();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      Variable.validateFields(rawVariable0);
      rawVariable0.setColumnStart("");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.containsSourceVariable(rawVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user1 = new User();
      User user2 = new User();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = null;
      arrayList0.add((OntologyTerm) null);
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCategory((String) null);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFileName("");
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.getNotes();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setNotes("D@X3UE");
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.setSourceVariables(arrayList0);
      assertEquals("D@X3UE", derivedVariable0.getNotes());
      
      rawVariable0.setCleaned(false);
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.58181914612868
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      String string0 = "";
      derivedVariable0.setLabel("");
      Object object0 = derivedVariable0.clone();
      Predicate.isEqual(object0);
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, rawVariable0, derivedVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.5819853473450114
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("");
      rawVariable0.getForm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnEnd("UuoJ");
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.removeSourceVariables(arrayList0);
      derivedVariable0.setCoded(false);
      derivedVariable0.clone();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      try { 
        SupportingDocument.validateFields(supportingDocument0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.797421115446744
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm1, ontologyTerm0);
      ontologyTerm1.setNameSpace("UNABLE_TO_DISASSOCIATE_ONTOLOGY_TERM");
      derivedVariable0.clone();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm1);
      derivedVariable1.setForm("UNABLE_TO_DISASSOCIATE_ONTOLOGY_TERM");
      derivedVariable0.getDisplayName();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.validateFields(valueLabel0);
      derivedVariable0.removeValueLabel(valueLabel0);
      derivedVariable0.setName("");
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      ontologyTerm0.setNewRecord(true);
      derivedVariable0.isNewRecord();
      derivedVariable0.setNotes("|SS");
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      derivedVariable1.containsOntologyTerm(ontologyTerm2);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.cloneAttributes(derivedVariable1);
      System.setCurrentTimeMillis(1403L);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.825650646494866
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      User user0 = new User();
      String string0 = "(=IJS(OHdJu7(k!:W";
      RawVariable rawVariable0 = new RawVariable();
      user0.setPhone("(=IJS(OHdJu7(k!:W");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      Variable.validateFields(rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.clear();
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      arrayList1.add(ontologyTerm0);
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.632256556410929
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("hnL>~B eVpMk-");
      derivedVariable0.setCleaningStatus("hnL>~B eVpMk-");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      arrayList0.add((Variable) derivedVariable0);
      arrayList0.add((Variable) derivedVariable1);
      derivedVariable1.addSourceVariables(arrayList0);
      derivedVariable0.cloneAttributes(derivedVariable1);
      User user0 = new User("", "\"sEcLLi p47t");
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      derivedVariable1.setIsNewRecord(false);
      derivedVariable1.setAvailability("hnL>~B eVpMk-");
      derivedVariable0.getValueLabels();
      derivedVariable0.setQuestionNumber("^wJ+tXHz3pv@");
      assertEquals("hnL>~B eVpMk-", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.879452755934022
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      user0.setPhone("(=IJS(OHdJu7(k!:W");
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      
      ArrayList<String> arrayList0 = Variable.validateFields(rawVariable0);
      assertEquals(1, arrayList0.size());
      
      User user1 = new User("(=IJS(OHdJu7(k!:W", (String) null);
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<MacawChangeEvent> arrayList1 = Variable.detectFieldChanges(user1, rawVariable0, rawVariable0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.hasSameDisplayName(rawVariable0);
      ArrayList<MacawChangeEvent> arrayList2 = RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      assertEquals("Unknown", rawVariable1.getCategory());
      assertFalse(rawVariable1.isCleaned());
      assertTrue(arrayList2.equals((Object)arrayList1));
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertFalse(rawVariable1.isCoded());
      assertFalse(rawVariable1.isNewRecord());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.9358605449875625
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("|SS");
      User user0 = new User((String) null, "UN;+J&o5PP");
      user0.setAffiliation((String) null);
      RawVariable rawVariable1 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      assertEquals("|SS", rawVariable0.getLabel());
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.removeOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = rawVariable1.getOntologyTerms();
      arrayList0.clear();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      rawVariable1.removeOntologyTerms(arrayList1);
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      rawVariable1.removeSupportingDocuments(arrayList2);
      RawVariable rawVariable3 = new RawVariable();
      RawVariable rawVariable4 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable1, rawVariable4);
      rawVariable2.getColumnStart();
      assertEquals("0", rawVariable2.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.125827073718918
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaningStatus("-L");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addSourceVariable(rawVariable0);
      rawVariable0.setAvailability("");
      ValueLabel valueLabel0 = new ValueLabel();
      User user0 = new User();
      derivedVariable0.setCodeBookNumber("-L");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ValueLabel.detectFieldChanges(user0, derivedVariable1, valueLabel0, valueLabel0);
      Variable.validateFields(rawVariable0);
      rawVariable0.removeValueLabel(valueLabel0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.remove((Object) user0);
      arrayList0.add((OntologyTerm) null);
      derivedVariable0.addOntologyTerms(arrayList0);
      rawVariable0.getCleaningDescription();
      derivedVariable1.getSupportingDocuments();
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=3.3815998280716038
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable((Variable) null);
      derivedVariable0.setCoded(true);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.addSourceVariable(derivedVariable1);
      derivedVariable0.setCleaningDescription("-p\"e[4repzgg?3");
      derivedVariable0.createVariableSummary();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.clone();
      supportingDocument0.setIdentifier(417);
      supportingDocument0.getDisplayName();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      derivedVariable0.setFilePath("-p\"e[4repzgg?3");
      derivedVariable0.getDisplayName();
      derivedVariable0.setIdentifier(0);
      derivedVariable0.setAlternativeVariable((Variable) null);
      derivedVariable0.createVariableSummary();
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable2.getSupportingDocuments();
      rawVariable0.removeSupportingDocuments(arrayList0);
      rawVariable0.getColumnStart();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      rawVariable0.removeOntologyTerms(arrayList1);
      rawVariable0.removeOntologyTerms(arrayList1);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.isCleaned();
      rawVariable0.setCleaningStatus("");
      DerivedVariable derivedVariable3 = new DerivedVariable();
      derivedVariable1.hasSameDisplayName(rawVariable1);
      derivedVariable1.setNotes("R");
      assertEquals("R", derivedVariable1.getNotes());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCoded(false);
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      rawVariable0.setSupportingDocuments(arrayList0);
      rawVariable0.getAlias();
      rawVariable0.setCodeBookNumber("");
      String string0 = rawVariable0.getCleaningStatus();
      assertEquals("Unknown", string0);
      
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable1);
      assertFalse(rawVariable1.isNewRecord());
      assertFalse(rawVariable1.isCleaned());
      assertEquals(0, rawVariable1.getIdentifier());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.8624599234428953
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.questionNumber = "variable.label.label";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      ontologyTerm0.setNameSpace("%Z<6");
      RawVariable rawVariable0 = new RawVariable();
      User user1 = new User("variable.label.label", (String) null);
      RawVariable.detectFieldChanges(user1, rawVariable0, rawVariable0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.removeOntologyTerm(ontologyTerm1);
      ArrayList<OntologyTerm> arrayList0 = rawVariable1.getOntologyTerms();
      arrayList0.clear();
      ArrayList<OntologyTerm> arrayList1 = rawVariable1.getOntologyTerms();
      rawVariable0.removeOntologyTerms(arrayList1);
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      rawVariable0.removeSupportingDocuments(arrayList2);
      RawVariable rawVariable2 = new RawVariable();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges((User) null, rawVariable1, rawVariable2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.322575046183876
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getFilePath();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace("8kWsd;jr 9Ww_(6PW");
      User user0 = new User();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.getDisplayName();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm1, ontologyTerm0);
      rawVariable0.getCodeBookNumber();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getDisplayName();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setIdentifier((-2286));
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.setAlternativeVariable(derivedVariable0);
      DerivedVariable derivedVariable3 = new DerivedVariable();
      derivedVariable3.createVariableSummary();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable2.containsSupportingDocument(supportingDocument0);
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm1);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList1.listIterator();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm1.getDisplayName();
      arrayList0.add(ontologyTerm2);
      ArrayList<OntologyTerm> arrayList2 = rawVariable0.getOntologyTerms();
      arrayList2.add(ontologyTerm1);
      derivedVariable3.setOntologyTerms(arrayList1);
      derivedVariable3.addOntologyTerms(arrayList2);
      OntologyTerm.detectFieldChanges(user0, ontologyTerm2, ontologyTerm0);
      derivedVariable3.isNewRecord();
      derivedVariable3.setNotes("");
      DerivedVariable derivedVariable4 = new DerivedVariable();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      derivedVariable1.containsOntologyTerm(ontologyTerm3);
      assertEquals((-2286), derivedVariable1.getIdentifier());
      
      derivedVariable4.containsSourceVariable(derivedVariable0);
      boolean boolean0 = derivedVariable4.isCleaned();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnStart("");
      derivedVariable0.getColumnEnd();
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.9954171502194566
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.questionNumber = "variable.label.label";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      ontologyTerm0.setNameSpace("%Z<6");
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.setForm("%Z<6");
      derivedVariable0.getDisplayName();
      ontologyTerm0.clone();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.removeValueLabel(valueLabel0);
      derivedVariable0.setName("");
      derivedVariable0.isNewRecord();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      derivedVariable0.isNewRecord();
      derivedVariable0.setNotes("");
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.getNotes();
      assertEquals("%Z<6", derivedVariable0.getForm());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.036397585646833
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user1 = new User();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      ontologyTerm0.setNameSpace("UNABLE_TO_ASSOCIATE_ONTOLOGY_TERM");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.setForm("UNABLE_TO_DISASSOCIATE_ONTOLOGY_TERM");
      derivedVariable0.getDisplayName();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.removeValueLabel(valueLabel0);
      RawVariable rawVariable0 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable1.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList1 = rawVariable1.getOntologyTerms();
      arrayList1.clear();
      rawVariable0.removeOntologyTerms(arrayList0);
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      rawVariable0.removeSupportingDocuments(arrayList2);
      RawVariable rawVariable2 = new RawVariable();
      RawVariable rawVariable3 = new RawVariable();
      Variable.detectFieldChanges(user1, rawVariable2, derivedVariable0);
      assertEquals("UNABLE_TO_DISASSOCIATE_ONTOLOGY_TERM", derivedVariable0.getForm());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.724232061207118
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      RawVariable rawVariable0 = new RawVariable();
      arrayList0.remove((Object) rawVariable0);
      derivedVariable0.setOntologyTerms(arrayList0);
      derivedVariable0.createVariableSummary();
      derivedVariable0.setNotes((String) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      derivedVariable1.removeSupportingDocument(supportingDocument1);
      derivedVariable0.hasSameDisplayName(derivedVariable1);
      derivedVariable1.clone();
      derivedVariable0.getDisplayName();
      rawVariable0.getColumnEnd();
      String string0 = "macaw.businessLayer.OntologyTerm";
      User user0 = new User("user.status.saveChanges", "macaw.businessLayer.OntologyTerm");
      User user1 = new User((String) null, (String) null);
      User.detectFieldChanges(user1, user0, user0);
      user0.setFirstName("K_v~xKoz YAjGt5");
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.1077270832809765
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm1, ontologyTerm0);
      ontologyTerm1.setNameSpace("UNABLE_TO_DISASSOCIATE_ONTOLOGY_TERM");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm1);
      derivedVariable1.setForm("UNABLE_TO_DISASSOCIATE_ONTOLOGY_TERM");
      derivedVariable0.getDisplayName();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.validateFields(valueLabel0);
      derivedVariable0.removeValueLabel(valueLabel0);
      derivedVariable0.setName("");
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      derivedVariable0.isNewRecord();
      derivedVariable0.setNotes("|SS");
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals("UNABLE_TO_DISASSOCIATE_ONTOLOGY_TERM", derivedVariable1.getForm());
      assertEquals(2, arrayList0.size());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setYear("");
      rawVariable0.setIdentifier((-2184));
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIsNewRecord(true);
      rawVariable0.addSupportingDocument(supportingDocument0);
      rawVariable0.setNotes("1(,4DfAT");
      rawVariable0.getName();
      assertEquals("1(,4DfAT", rawVariable0.getNotes());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(false);
      String string0 = "";
      derivedVariable0.setLabel("");
      // Undeclared exception!
      try { 
        derivedVariable0.addSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.691641587685945
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      
      ArrayList<String> arrayList0 = Variable.validateFields(rawVariable0);
      assertEquals(1, arrayList0.size());
      
      User user1 = new User("(=IJS(OHdJu7(k!:W", (String) null);
      RawVariable rawVariable1 = new RawVariable();
      User user2 = new User((String) null, "(=IJS(OHdJu7(k!:W");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.getDisplayName();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList1 = rawVariable1.getOntologyTerms();
      arrayList1.add(ontologyTerm1);
      rawVariable1.getOntologyTerms();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      arrayList1.add(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerms(arrayList2);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm2);
      assertFalse(boolean0);
      
      rawVariable0.getOntologyTerms();
      derivedVariable0.getName();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=3.9056548687726744
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDocumentCode("");
      supportingDocument0.setIsNewRecord(false);
      supportingDocument0.setIsNewRecord(true);
      supportingDocument0.setFileName("");
      arrayList0.add(supportingDocument0);
      derivedVariable0.setSupportingDocuments(arrayList0);
      derivedVariable0.setYear("");
      derivedVariable0.getName();
      derivedVariable0.getName();
      derivedVariable0.addSupportingDocuments(arrayList0);
      derivedVariable0.setAlias("A{xVOrlHr");
      Variable.validateFields(derivedVariable0);
      assertEquals("A{xVOrlHr", derivedVariable0.getAlias());
      
      derivedVariable0.setAlias("");
      derivedVariable0.getYear();
      derivedVariable0.getCleaningDescription();
      derivedVariable0.getCategory();
      derivedVariable0.clone();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      derivedVariable0.setFilePath("");
      User user0 = new User(":xmRrOp", "");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable1);
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.8646515541531206
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = "~";
      rawVariable0.getCleaningStatus();
      rawVariable0.getCleaningDescription();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.setCategory("]AON");
      arrayList0.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList0.add(supportingDocument1);
      rawVariable0.addSupportingDocuments(arrayList0);
      rawVariable0.setCoded(true);
      User user0 = new User("Unknown", "]AON");
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      User user1 = new User();
      user1.clone();
      Variable.detectFieldChanges(user1, rawVariable0, rawVariable0);
      rawVariable0.setQuestionNumber(" |uq7];1zBm*Z1k0(");
      assertEquals(" |uq7];1zBm*Z1k0(", rawVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.994140011011283
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user1 = new User();
      OntologyTerm.detectFieldChanges(user1, ontologyTerm0, ontologyTerm0);
      ontologyTerm0.setNameSpace("(=IJS(OHdJu7(k!:W");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.setAvailability("u4yFz;A");
      derivedVariable0.setForm("UNABLE_TO_DISASSOCIATE_ONTOLOGY_TERM");
      derivedVariable0.getDisplayName();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.removeValueLabel(valueLabel0);
      derivedVariable0.setName("");
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.isNewRecord();
      derivedVariable0.setNotes("qw$j{Pc99$\"9_^");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertEquals("u4yFz;A", derivedVariable0.getAvailability());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=3.6713209098976862
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.clone();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) derivedVariable0);
      predicate0.negate();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      arrayList0.removeIf(predicate0);
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      arrayList0.add(valueLabel1);
      arrayList0.add(valueLabel0);
      ArrayList<ValueLabel> arrayList1 = derivedVariable0.getValueLabels();
      derivedVariable0.setValueLabels(arrayList1);
      assertFalse(derivedVariable0.isCleaned());
      
      derivedVariable0.setCleaned(true);
      derivedVariable0.getValueLabels();
      derivedVariable0.getQuestionNumber();
      derivedVariable0.clone();
      assertTrue(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=3.6676082383884046
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("");
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      Object object0 = derivedVariable0.clone();
      Predicate<Object> predicate0 = Predicate.isEqual(object0);
      arrayList0.removeIf(predicate0);
      arrayList0.add((ValueLabel) null);
      derivedVariable0.setValueLabels(arrayList0);
      derivedVariable0.setCleaned(false);
      derivedVariable0.getValueLabels();
      derivedVariable0.getQuestionNumber();
      assertEquals("", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=3.9919134749411125
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm1, ontologyTerm0);
      String string0 = "$3o\\u;^ 1vgJ";
      ontologyTerm1.setNameSpace(string0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.addOntologyTerm(ontologyTerm0);
      derivedVariable0.setForm("UNABLE_TO_DISASSOCIATE_ONTOLOGY_TERM");
      derivedVariable0.getDisplayName();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setIdentifier(0);
      ValueLabel.validateFields(valueLabel0);
      derivedVariable0.removeValueLabel(valueLabel0);
      derivedVariable0.setName(string0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      ontologyTerm0.setNewRecord(true);
      derivedVariable0.isNewRecord();
      ArrayList<ValueLabel> arrayList0 = derivedVariable0.getValueLabels();
      derivedVariable0.setValueLabels(arrayList0);
      derivedVariable1.setNotes(string0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm2);
      derivedVariable0.cloneAttributes(derivedVariable1);
      System.setCurrentTimeMillis(1403L);
      DerivedVariable.validateFields(derivedVariable0);
      assertEquals("UNABLE_TO_DISASSOCIATE_ONTOLOGY_TERM", derivedVariable0.getForm());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.9720861369674885
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      User user1 = new User();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm1, ontologyTerm1);
      ontologyTerm0.setNameSpace("%Z<6");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable1.getDisplayName();
      derivedVariable1.setIdentifier(0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable1.setAlias("*^Qv&zrn7c");
      derivedVariable2.setAlternativeVariable(derivedVariable0);
      derivedVariable1.createVariableSummary();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      derivedVariable1.containsSupportingDocument(supportingDocument1);
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList1.listIterator();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm0.getDisplayName();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      arrayList1.add(ontologyTerm1);
      derivedVariable2.getOntologyTerms();
      arrayList0.add(ontologyTerm0);
      derivedVariable1.addOntologyTerms(arrayList0);
      assertEquals("*^Qv&zrn7c", derivedVariable1.getAlias());
      
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      derivedVariable3.containsOntologyTerm(ontologyTerm1);
      rawVariable0.getOntologyTerms();
      derivedVariable2.getName();
      assertFalse(derivedVariable2.isCoded());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=3.6678860933481157
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = "s";
      derivedVariable0.columnEnd = "s";
      derivedVariable0.setLabel("ad");
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      Object object0 = derivedVariable0.clone();
      Predicate<Object> predicate0 = Predicate.isEqual(object0);
      arrayList0.removeIf(predicate0);
      ValueLabel valueLabel0 = new ValueLabel();
      arrayList0.add(valueLabel0);
      derivedVariable0.setValueLabels(arrayList0);
      derivedVariable0.setCleaned(true);
      assertTrue(derivedVariable0.isCleaned());
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.getValueLabels();
      derivedVariable1.getQuestionNumber();
      assertEquals(0, derivedVariable1.getIdentifier());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=3.8824872677291986
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.questionNumber = "variable.label.label";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      ontologyTerm0.setNameSpace("%Z<6");
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.getDisplayName();
      derivedVariable0.setIdentifier(0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(derivedVariable1);
      derivedVariable0.createVariableSummary();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      ArrayList<OntologyTerm> arrayList0 = derivedVariable1.getOntologyTerms();
      arrayList0.listIterator();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.getDisplayName();
      arrayList0.add(ontologyTerm1);
      ArrayList<OntologyTerm> arrayList1 = derivedVariable1.getOntologyTerms();
      arrayList1.add(ontologyTerm1);
      derivedVariable0.addOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      derivedVariable1.containsOntologyTerm(ontologyTerm2);
      derivedVariable1.getAvailability();
      derivedVariable1.cloneAttributes(derivedVariable0);
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.673415053526696
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("|SS");
      User user0 = new User((String) null, (String) null);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      ontologyTerm0.setNameSpace("UNABLE_TO_GET_ONTOLOGY_TERM_IDENTIFIER");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm1 = null;
      derivedVariable0.addOntologyTerm((OntologyTerm) null);
      derivedVariable0.setForm((String) null);
      derivedVariable0.getDisplayName();
      derivedVariable0.setName((String) null);
      // Undeclared exception!
      try { 
        derivedVariable0.updateOntologyTerm(ontologyTerm0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.addValueLabel((ValueLabel) null);
      rawVariable0.addValueLabel((ValueLabel) null);
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.9280403176171914
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      user0.setPhone("(=IJS(OHdJu7(k!:W");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      ArrayList<String> arrayList0 = Variable.validateFields(rawVariable0);
      assertEquals(1, arrayList0.size());
      
      User user1 = new User("(=IJS(OHdJu7(k!:W", (String) null);
      RawVariable rawVariable1 = new RawVariable();
      User user2 = new User((String) null, "(=IJS(OHdJu7(k!:W");
      ArrayList<MacawChangeEvent> arrayList1 = Variable.detectFieldChanges(user2, rawVariable0, rawVariable0);
      assertTrue(arrayList1.isEmpty());
      
      User user3 = new User("", "");
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user3, rawVariable0, rawVariable1);
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      
      VariableSummary variableSummary0 = rawVariable1.createVariableSummary();
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.9446228076224052
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("|SS");
      User user0 = new User((String) null, (String) null);
      user0.setAddressLine2("UNABLE_TO_CREATE_CATEGORY");
      user0.setEmail("UNABLE_TO_CREATE_CATEGORY");
      user0.setAffiliation((String) null);
      User user1 = new User();
      user1.setEmail((String) null);
      User user2 = new User();
      RawVariable rawVariable1 = new RawVariable();
      User user3 = new User("UNABLE_TO_CREATE_CATEGORY", "u#X");
      Variable.detectFieldChanges(user3, rawVariable0, rawVariable1);
      rawVariable0.setForm("u#X");
      User user4 = new User("UNABLE_TO_DISASSOCIATE_ONTOLOGY_TERM", "UNABLE_TO_GET_ORIGINAL_AVAILABILITY_STATE");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable(user4, rawVariable0, derivedVariable0);
      assertEquals("u#X", rawVariable0.getForm());
      
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.createVariableSummary();
      assertEquals("Unknown", rawVariable2.getCategory());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=3.1013448627418363
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.questionNumber = "variable.label.label";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      ontologyTerm0.setNameSpace("%Z<6");
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.getDisplayName();
      derivedVariable0.setIdentifier(0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(derivedVariable1);
      derivedVariable0.createVariableSummary();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      arrayList0.listIterator();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.getDisplayName();
      arrayList0.add(ontologyTerm0);
      derivedVariable1.getOntologyTerms();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList0.add(ontologyTerm2);
      derivedVariable1.addOntologyTerms(arrayList0);
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm2);
      derivedVariable1.setCoded(true);
      derivedVariable1.isNewRecord();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.setNotes("1xI'f[");
      assertFalse(derivedVariable2.isCoded());
      
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      boolean boolean0 = derivedVariable1.containsOntologyTerm(ontologyTerm3);
      assertTrue(derivedVariable1.isCoded());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.3511604142318068
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      User user1 = (User)user0.clone();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.setCodeBookNumber("user.addressLine2.saveChanges");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable(user1, derivedVariable0, derivedVariable1);
      // Undeclared exception!
      try { 
        derivedVariable0.updateOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.9721956207160196
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("variable.alternativeVariable.label");
      rawVariable0.setLabel("+dB,5E`iRc`iP~r");
      User user0 = new User("+dB,5E`iRc`iP~r", "");
      user0.setAddressLine2("");
      user0.setEmail("+dB,5E`iRc`iP~r");
      user0.setAffiliation("variable.alternativeVariable.label");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.clear();
      rawVariable0.removeOntologyTerms(arrayList0);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      rawVariable0.removeSupportingDocuments(arrayList1);
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.isCoded();
      assertEquals("+dB,5E`iRc`iP~r", rawVariable0.getLabel());
      
      rawVariable1.getDisplayName();
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=3.6001529103340366
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.codeBookNumber = "ontologyTerm.description.saveChanges";
      derivedVariable0.clone();
      User user0 = new User();
      user0.setPhone("variable.cleaningStatus.label");
      derivedVariable0.setAvailability("ontologyTerm.description.saveChanges");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.getDisplayName();
      derivedVariable0.setName("s2p&@2C:EZRH");
      assertEquals("ontologyTerm.description.saveChanges", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=3.070417415786514
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("variable.alternativeVariable.label");
      rawVariable0.setLabel("+dB,5E`iRc`iP~r");
      User user0 = new User("+dB,5E`iRc`iP~r", "");
      user0.setAddressLine2("");
      user0.setEmail("+dB,5E`iRc`iP~r");
      user0.setAffiliation("variable.alternativeVariable.label");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm[] ontologyTermArray0 = new OntologyTerm[8];
      ontologyTermArray0[0] = ontologyTerm0;
      ontologyTermArray0[1] = ontologyTerm0;
      ontologyTermArray0[2] = ontologyTerm0;
      ontologyTermArray0[3] = ontologyTerm0;
      ontologyTermArray0[4] = ontologyTerm0;
      ontologyTermArray0[5] = ontologyTerm0;
      ontologyTermArray0[6] = ontologyTerm0;
      ontologyTermArray0[7] = ontologyTerm0;
      arrayList0.toArray(ontologyTermArray0);
      arrayList0.clear();
      rawVariable0.removeOntologyTerms(arrayList0);
      assertEquals("variable.alternativeVariable.label", rawVariable0.getDisplayName());
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.isNewRecord();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.isNewRecord();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setNotes((String) null);
      derivedVariable1.getQuestionNumber();
      assertEquals("Unknown", derivedVariable1.getCategory());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      // Undeclared exception!
      try { 
        rawVariable0.removeSupportingDocuments(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.0980120874752637
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setMissingValue(true);
      derivedVariable0.addValueLabel(valueLabel0);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.clone();
      arrayList0.add(supportingDocument0);
      arrayList0.add((SupportingDocument) null);
      derivedVariable0.removeSupportingDocuments(arrayList0);
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=3.7478641359161475
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart("");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<ValueLabel> arrayList1 = derivedVariable0.getValueLabels();
      rawVariable0.setValueLabels(arrayList1);
      derivedVariable1.setCleaningStatus((String) null);
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      derivedVariable1.setYear("");
      derivedVariable0.removeSupportingDocuments(arrayList2);
      rawVariable0.cloneAttributes(derivedVariable1);
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertFalse(derivedVariable1.isCleaned());
      
      rawVariable0.setIsNewRecord(false);
      derivedVariable0.addSourceVariable(rawVariable0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable0.removeSupportingDocument(supportingDocument1);
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      rawVariable0.removeOntologyTerms(arrayList3);
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.726634037681537
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      ArrayList<String> arrayList1 = Variable.validateFields(rawVariable0);
      assertEquals(1, arrayList1.size());
      
      rawVariable0.setColumnStart("");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User();
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument0);
      supportingDocument0.setDocumentCode((String) null);
      ArrayList<MacawChangeEvent> arrayList2 = Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals(0, arrayList2.size());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart("");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<ValueLabel> arrayList0 = derivedVariable0.getValueLabels();
      rawVariable0.setValueLabels(arrayList0);
      derivedVariable0.setCleaningStatus("");
      rawVariable0.setColumnStart("ur4)+'<!;(2\"b");
      derivedVariable0.containsSourceVariable(rawVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User();
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument0);
      supportingDocument0.setDocumentCode("ur4)+'<!;(2\"b");
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      try { 
        SupportingDocument.validateFields(supportingDocument0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=3.6673108848350298
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.questionNumber = "variable.label.label";
      derivedVariable0.clone();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) "%Z<6");
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      arrayList0.removeIf(predicate0);
      ValueLabel valueLabel0 = new ValueLabel();
      arrayList0.add(valueLabel0);
      arrayList0.add((ValueLabel) null);
      derivedVariable0.setValueLabels(arrayList0);
      derivedVariable0.setCleaned(false);
      derivedVariable0.getValueLabels();
      derivedVariable0.getQuestionNumber();
      assertEquals("variable.label.label", derivedVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.6900035860479434
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      User user0 = new User();
      user0.setAddressLine1("(=IJS(OHdJu7(k!:W");
      RawVariable rawVariable0 = new RawVariable();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      Variable.validateFields(rawVariable0);
      rawVariable0.setYear("pN/^ks_wK");
      rawVariable0.setColumnStart("");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.containsSourceVariable(rawVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user1 = new User();
      SupportingDocument.detectFieldChanges(user1, supportingDocument0, supportingDocument0);
      supportingDocument0.setDocumentCode((String) null);
      int int0 = 463;
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.containsSupportingDocument(supportingDocument0);
      // Undeclared exception!
      try { 
        SupportingDocument.validateFields(supportingDocument0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=3.850263756379731
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm1, ontologyTerm0);
      ontologyTerm1.setNameSpace("UNABLE_TO_DISASSOCIATE_ONTOLOGY_TERM");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.addOntologyTerm(ontologyTerm1);
      derivedVariable0.setForm("UNABLE_TO_DISASSOCIATE_ONTOLOGY_TERM");
      derivedVariable1.getDisplayName();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel.validateFields(valueLabel1);
      derivedVariable0.removeValueLabel(valueLabel0);
      derivedVariable0.setName("");
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      ontologyTerm0.setNewRecord(true);
      derivedVariable1.isNewRecord();
      derivedVariable1.setNotes("!il#B`g*x|5");
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      derivedVariable1.containsOntologyTerm(ontologyTerm2);
      derivedVariable0.cloneAttributes(derivedVariable1);
      System.setCurrentTimeMillis(1403L);
  }

  /**
  //Test case number: 68
  /*Coverage entropy=3.706021474403863
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.NEW;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      rawVariable0.setOntologyTerms((ArrayList<OntologyTerm>) null);
      ArrayList<SupportingDocument> arrayList1 = rawVariable0.getSupportingDocuments();
      User user0 = new User("?DZhyc_", "?DZhyc_");
      ValueLabel.detectFieldChanges(user0, rawVariable0, valueLabel0, valueLabel0);
      rawVariable0.setSupportingDocuments(arrayList1);
      arrayList0.add(valueLabel0);
      ArrayList<Integer> arrayList2 = new ArrayList<Integer>();
      Integer integer0 = new Integer(0);
      arrayList2.add(integer0);
      Integer integer1 = new Integer((-3904));
      arrayList2.add(integer1);
      arrayList0.retainAll(arrayList2);
      rawVariable0.setValueLabels(arrayList0);
      rawVariable0.columnEnd = "";
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnEnd(":Kxp|eeyXS>k");
      // Undeclared exception!
      try { 
        rawVariable0.cloneAttributes(derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.887918971251146
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user1 = new User();
      Predicate.isEqual((Object) "(=IJS(OHdJu7(k!:W");
      User user2 = new User("UNABLE_TO_DISASSOCIATE_ONTOLOGY_TERM", "UNABLE_TO_CHECK_ALIAS_FILE_PATH_DUPLICATE");
      user2.setAffiliation("(=IJS(OHdJu7(k!:W");
      RawVariable rawVariable0 = new RawVariable();
      RawVariable.detectFieldChanges(user1, rawVariable0, rawVariable0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.clear();
      rawVariable1.getOntologyTerms();
      arrayList0.add(ontologyTerm0);
      rawVariable1.removeOntologyTerms(arrayList0);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      rawVariable0.removeSupportingDocuments(arrayList2);
      RawVariable rawVariable2 = new RawVariable();
      ArrayList<MacawChangeEvent> arrayList3 = Variable.detectFieldChanges(user1, rawVariable0, rawVariable2);
      assertFalse(rawVariable0.isCleaned());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, arrayList3.size());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=3.6673108848350298
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.questionNumber = "variable.label.label";
      derivedVariable0.removeSupportingDocument((SupportingDocument) null);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) "%Z<6");
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      arrayList0.removeIf(predicate0);
      ValueLabel valueLabel0 = new ValueLabel();
      arrayList0.add(valueLabel0);
      arrayList0.add((ValueLabel) null);
      derivedVariable0.setValueLabels(arrayList0);
      derivedVariable1.setCleaned(true);
      ArrayList<ValueLabel> arrayList1 = new ArrayList<ValueLabel>();
      derivedVariable0.getQuestionNumber();
      assertEquals("variable.label.label", derivedVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) ontologyTerm0);
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      arrayList0.removeIf(predicate0);
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      arrayList0.add(valueLabel1);
      arrayList0.add(valueLabel0);
      derivedVariable0.getValueLabels();
      derivedVariable0.setValueLabels(arrayList0);
      assertFalse(derivedVariable0.isCleaned());
      
      derivedVariable0.setCleaned(true);
      derivedVariable0.getValueLabels();
      derivedVariable0.getQuestionNumber();
      assertTrue(derivedVariable0.isCleaned());
  }
}
