/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 20:29:20 GMT 2019
 */

package org.quickserver.net.server;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.channels.SocketChannel;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.net.MockSocket;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;
import org.quickserver.net.qsadmin.CommandHandler;
import org.quickserver.net.qsadmin.Data;
import org.quickserver.net.server.Authenticator;
import org.quickserver.net.server.ClientAuthenticationHandler;
import org.quickserver.net.server.ClientBinaryHandler;
import org.quickserver.net.server.ClientCommandHandler;
import org.quickserver.net.server.ClientData;
import org.quickserver.net.server.ClientEvent;
import org.quickserver.net.server.ClientExtendedEventHandler;
import org.quickserver.net.server.ClientHandler;
import org.quickserver.net.server.ClientObjectHandler;
import org.quickserver.net.server.ClientWriteHandler;
import org.quickserver.net.server.QuickServer;
import org.quickserver.net.server.TheClient;
import org.quickserver.net.server.impl.DefaultClientEventHandler;
import org.quickserver.net.server.impl.NonBlockingClientHandler;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TheClient_ESTest extends TheClient_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.9747025681553483
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      QuickServer quickServer0 = new QuickServer();
      quickServer0.setCommunicationLogging(false);
      theClient0.setServer(quickServer0);
      QuickServer quickServer1 = theClient0.getServer();
      theClient0.setServer(quickServer1);
      theClient0.getSocketChannel();
      theClient0.toString();
      theClient0.getClientBinaryHandler();
      theClient0.getSocketChannel();
      theClient0.setTimeout((-1233));
      theClient0.getClientExtendedEventHandler();
      theClient0.setTimeoutMsg("");
      theClient0.getClientObjectHandler();
      theClient0.getSocket();
      theClient0.getSocketChannel();
      theClient0.getSocketChannel();
      theClient0.getServer();
      theClient0.getClientBinaryHandler();
      theClient0.getServer();
      theClient0.getSocket();
      theClient0.getServer();
      theClient0.setTimeoutMsg("2e");
      theClient0.toString();
      theClient0.getClientExtendedEventHandler();
      theClient0.getClientWriteHandler();
      assertEquals((-1233), theClient0.getTimeout());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.047707978151193
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getAuthenticator();
      theClient0.setAuthenticator((Authenticator) null);
      theClient0.setMaxAuthTry(0);
      assertFalse(theClient0.getTrusted());
      
      theClient0.setTrusted(true);
      theClient0.getClientCommandHandler();
      theClient0.setTimeoutMsg("");
      theClient0.setMaxAuthTryMsg(":TSI+qBboW,Pg");
      theClient0.getClientObjectHandler();
      theClient0.setTrusted(true);
      theClient0.getTimeoutMsg();
      theClient0.toString();
      theClient0.getClientEventHandler();
      theClient0.getClientWriteHandler();
      assertTrue(theClient0.getTrusted());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)47;
      byte[] byteArray1 = new byte[6];
      byteArray1[0] = (byte)47;
      byteArray1[1] = (byte)25;
      byteArray1[2] = (byte)81;
      byteArray1[3] = (byte)47;
      byteArray1[4] = (byte)0;
      byteArray1[5] = (byte)0;
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray1);
      byteArray0[3] = (byte)0;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      TheClient theClient0 = new TheClient();
      MockSocket mockSocket0 = new MockSocket();
      theClient0.setSocket(mockSocket0);
      theClient0.toString();
      String string0 = theClient0.toString();
      assertEquals("{TheClient Socket[unconnected], Event: (ClientEvent-Run Blocking)}", string0);
      
      theClient0.getSocket();
      assertTrue(theClient0.getCommunicationLogging());
      assertFalse(theClient0.getTrusted());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.2590752087262675
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getClientExtendedEventHandler();
      theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient0.getClientBinaryHandler();
      theClient0.setClientBinaryHandler((ClientBinaryHandler) null);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)60;
      byteArray0[2] = (byte) (-25);
      byteArray0[3] = (byte)126;
      byteArray0[4] = (byte)3;
      CommandHandler commandHandler0 = new CommandHandler();
      theClient0.setClientEventHandler(commandHandler0);
      theClient0.getServer();
      theClient0.toString();
      theClient0.getClientCommandHandler();
      theClient0.setMaxAuthTry((byte)3);
      theClient0.setMaxAuthTryMsg("{TheClient no socket, Event: (ClientEvent-Run Blocking)}");
      theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient0.setMaxConnectionMsg("s}K1uJ(tyc+<i$=KVZ");
      theClient0.getTimeout();
      theClient0.getSocketChannel();
      theClient0.toString();
      theClient0.getMaxAuthTry();
      theClient0.getTimeoutMsg();
      assertEquals(3, theClient0.getMaxAuthTry());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.5360478614522353
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      CommandHandler commandHandler0 = new CommandHandler();
      theClient0.setClientCommandHandler(commandHandler0);
      theClient0.getAuthenticator();
      theClient0.setTrusted(true);
      theClient0.setAuthenticator((Authenticator) null);
      theClient0.getClientEvent();
      ClientCommandHandler clientCommandHandler0 = theClient0.getClientCommandHandler();
      theClient0.setClientCommandHandler(clientCommandHandler0);
      theClient0.setCommunicationLogging(false);
      theClient0.getClientExtendedEventHandler();
      theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient0.getClientWriteHandler();
      theClient0.setClientWriteHandler((ClientWriteHandler) null);
      theClient0.setCommunicationLogging(false);
      TheClient theClient1 = new TheClient();
      theClient1.setClientEventHandler(commandHandler0);
      theClient0.getServer();
      theClient0.toString();
      theClient0.getClientCommandHandler();
      theClient1.setMaxAuthTry((-948));
      theClient1.setMaxAuthTryMsg("");
      theClient0.getTimeoutMsg();
      theClient0.getClientObjectHandler();
      theClient1.getClientEvent();
      theClient1.getMaxAuthTryMsg();
      assertEquals((-948), theClient1.getMaxAuthTry());
      
      theClient0.getAuthenticator();
      theClient0.getAuthenticator();
      theClient0.getMaxConnectionMsg();
      String string0 = theClient0.toString();
      assertEquals("{TheClient no socket, Event: (ClientEvent-Run Blocking)}", string0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      CommandHandler commandHandler0 = new CommandHandler();
      theClient0.setClientCommandHandler(commandHandler0);
      theClient0.getClientBinaryHandler();
      ClientEvent clientEvent0 = ClientEvent.RUN_BLOCKING;
      theClient0.setClientEvent((ClientEvent) null);
      theClient0.toString();
      theClient0.getTrusted();
      theClient0.getClientEvent();
      org.quickserver.net.qsadmin.Authenticator authenticator0 = new org.quickserver.net.qsadmin.Authenticator();
      // Undeclared exception!
      try { 
        authenticator0.askAuthentication((ClientHandler) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.quickserver.net.qsadmin.Authenticator", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      DefaultClientEventHandler defaultClientEventHandler0 = new DefaultClientEventHandler();
      theClient0.setClientEventHandler(defaultClientEventHandler0);
      theClient0.setTimeout((-1));
      int int0 = theClient0.getTimeout();
      assertEquals((-1), int0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("ClassNotFoundException : ", 1000);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      TheClient theClient0 = new TheClient();
      theClient0.setMaxAuthTryMsg("OXaxDE%/a +d%:YoH");
      theClient0.getMaxAuthTryMsg();
      theClient0.getTimeoutMsg();
      assertFalse(theClient0.getTrusted());
      assertTrue(theClient0.getCommunicationLogging());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.8778952727983707
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      TheClient theClient1 = new TheClient();
      theClient1.setMaxAuthTryMsg("{TheClient ");
      theClient0.getClientExtendedEventHandler();
      theClient1.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient1.setMaxConnectionMsg("");
      int int0 = theClient1.getTimeout();
      assertEquals(0, int0);
      
      theClient1.getSocketChannel();
      String string0 = theClient0.toString();
      assertEquals("{TheClient no socket, Event: (ClientEvent-Run Blocking)}", string0);
      
      theClient1.getMaxConnectionMsg();
      theClient0.getClientEvent();
      theClient0.getTimeoutMsg();
      assertTrue(theClient0.getCommunicationLogging());
      assertFalse(theClient0.getTrusted());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.setMaxAuthTryMsg("");
      theClient0.getClientExtendedEventHandler();
      theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient0.setMaxConnectionMsg("xdkJm['wy3.MWvZ");
      theClient0.getMaxConnectionMsg();
      theClient0.getMaxConnectionMsg();
      theClient0.getClientEvent();
      assertFalse(theClient0.getTrusted());
      assertTrue(theClient0.getCommunicationLogging());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.6270196396579633
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      CommandHandler commandHandler0 = new CommandHandler();
      theClient0.setClientCommandHandler(commandHandler0);
      theClient0.getAuthenticator();
      theClient0.setTrusted(true);
      theClient0.setAuthenticator((Authenticator) null);
      theClient0.getClientObjectHandler();
      theClient0.setClientObjectHandler((ClientObjectHandler) null);
      theClient0.getClientEvent();
      ClientCommandHandler clientCommandHandler0 = theClient0.getClientCommandHandler();
      theClient0.setClientCommandHandler(clientCommandHandler0);
      theClient0.setCommunicationLogging(true);
      theClient0.getClientExtendedEventHandler();
      theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient0.getClientWriteHandler();
      theClient0.setClientWriteHandler((ClientWriteHandler) null);
      theClient0.setCommunicationLogging(true);
      CommandHandler commandHandler1 = new CommandHandler();
      theClient0.setClientEventHandler(commandHandler1);
      TheClient theClient1 = new TheClient();
      theClient1.getServer();
      theClient1.toString();
      theClient0.getClientCommandHandler();
      theClient0.setMaxAuthTry((-948));
      theClient1.setMaxAuthTryMsg("");
      theClient1.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient1.setMaxConnectionMsg("{TheClient no socket, Event: (ClientEvent-Run Blocking)}");
      theClient1.getTimeout();
      theClient1.getSocketChannel();
      theClient1.toString();
      int int0 = theClient0.getMaxAuthTry();
      assertEquals((-948), int0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.626722286104588
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      CommandHandler commandHandler0 = new CommandHandler();
      theClient0.setClientCommandHandler(commandHandler0);
      theClient0.getAuthenticator();
      theClient0.setTrusted(true);
      theClient0.setAuthenticator((Authenticator) null);
      theClient0.getClientEvent();
      theClient0.getClientCommandHandler();
      theClient0.setClientCommandHandler(commandHandler0);
      theClient0.setCommunicationLogging(false);
      theClient0.getClientExtendedEventHandler();
      theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient0.setTimeoutMsg("JQ;W=:");
      theClient0.getClientWriteHandler();
      theClient0.setClientWriteHandler((ClientWriteHandler) null);
      theClient0.setCommunicationLogging(false);
      theClient0.setClientEventHandler(commandHandler0);
      theClient0.getServer();
      theClient0.toString();
      theClient0.getClientCommandHandler();
      theClient0.setMaxAuthTry((-948));
      theClient0.setMaxAuthTryMsg("");
      theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient0.setMaxConnectionMsg("xdkJm['wy3.MWvZ");
      theClient0.getTimeout();
      theClient0.getSocketChannel();
      theClient0.toString();
      theClient0.getMaxAuthTry();
      theClient0.getTimeoutMsg();
      assertEquals((-948), theClient0.getMaxAuthTry());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.125543816101745
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getClientExtendedEventHandler();
      theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient0.getClientBinaryHandler();
      theClient0.setClientBinaryHandler((ClientBinaryHandler) null);
      TheClient theClient1 = new TheClient();
      theClient1.getClientObjectHandler();
      theClient1.setClientObjectHandler((ClientObjectHandler) null);
      QuickServer quickServer0 = new QuickServer("L[#");
      theClient0.setServer(quickServer0);
      theClient1.setClientCommandHandler((ClientCommandHandler) null);
      theClient1.getClientBinaryHandler();
      ClientEvent clientEvent0 = ClientEvent.RUN_BLOCKING;
      theClient0.setClientEvent(clientEvent0);
      TheClient theClient2 = new TheClient();
      theClient2.setClientAuthenticationHandler((ClientAuthenticationHandler) null);
      theClient0.setClientEvent(clientEvent0);
      String string0 = theClient1.toString();
      assertEquals("{TheClient no socket, Event: (ClientEvent-Run Blocking)}", string0);
      
      theClient0.getMaxConnectionMsg();
      theClient0.getServer();
      assertTrue(theClient0.getCommunicationLogging());
      assertFalse(theClient0.getTrusted());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.4850939756816506
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      Data data0 = new Data();
      data0.setUsername("]/0q^;$z688DQ~+");
      data0.setLastAsked("");
      theClient0.setClientData(data0);
      theClient0.setTrusted(true);
      theClient0.setTimeout((-1));
      theClient0.getServer();
      theClient0.getMaxAuthTry();
      theClient0.getAuthenticator();
      theClient0.setAuthenticator((Authenticator) null);
      ClientEvent clientEvent0 = theClient0.getClientEvent();
      theClient0.setClientEvent(clientEvent0);
      theClient0.setCommunicationLogging(false);
      theClient0.getClientWriteHandler();
      theClient0.setAuthenticator((Authenticator) null);
      CommandHandler commandHandler0 = new CommandHandler();
      theClient0.setClientEventHandler(commandHandler0);
      theClient0.getSocket();
      theClient0.getClientBinaryHandler();
      theClient0.getClientData();
      theClient0.getCommunicationLogging();
      theClient0.setMaxConnectionMsg((String) null);
      theClient0.getCommunicationLogging();
      theClient0.getClientBinaryHandler();
      theClient0.setClientBinaryHandler((ClientBinaryHandler) null);
      theClient0.getClientExtendedEventHandler();
      assertEquals((-1), theClient0.getTimeout());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.2603936002885616
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      CommandHandler commandHandler0 = new CommandHandler();
      theClient0.setClientCommandHandler(commandHandler0);
      theClient0.getAuthenticator();
      theClient0.setTrusted(true);
      theClient0.setAuthenticator((Authenticator) null);
      ClientEvent clientEvent0 = ClientEvent.MAX_CON;
      theClient0.getClientCommandHandler();
      theClient0.setClientCommandHandler(commandHandler0);
      theClient0.setCommunicationLogging(false);
      theClient0.getClientExtendedEventHandler();
      theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient0.getClientWriteHandler();
      theClient0.setClientWriteHandler((ClientWriteHandler) null);
      theClient0.setCommunicationLogging(false);
      theClient0.setClientEventHandler(commandHandler0);
      theClient0.getCommunicationLogging();
      theClient0.toString();
      assertFalse(theClient0.getCommunicationLogging());
      
      TheClient theClient1 = new TheClient();
      theClient1.getClientBinaryHandler();
      theClient1.getClientEventHandler();
      theClient1.getClientBinaryHandler();
      assertTrue(theClient1.getCommunicationLogging());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.124771615329544
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getClientExtendedEventHandler();
      theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient0.getClientBinaryHandler();
      theClient0.setClientBinaryHandler((ClientBinaryHandler) null);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)60;
      byteArray0[2] = (byte) (-25);
      byteArray0[3] = (byte)126;
      byteArray0[4] = (byte)3;
      byteArray0[5] = (byte) (-1);
      TheClient theClient1 = new TheClient();
      theClient1.getClientAuthenticationHandler();
      theClient1.setClientAuthenticationHandler((ClientAuthenticationHandler) null);
      CommandHandler commandHandler0 = new CommandHandler();
      TheClient theClient2 = new TheClient();
      theClient2.setClientEventHandler(commandHandler0);
      boolean boolean0 = theClient0.getCommunicationLogging();
      assertTrue(boolean0);
      
      String string0 = theClient2.toString();
      assertEquals("{TheClient no socket, Event: (ClientEvent-Run Blocking)}", string0);
      
      theClient1.setServer((QuickServer) null);
      theClient1.getTimeoutMsg();
      theClient2.getClientBinaryHandler();
      theClient2.getClientEventHandler();
      theClient0.getClientObjectHandler();
      assertFalse(theClient0.getTrusted());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.9663881312694826
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.setMaxConnectionMsg("+OK INIT");
      theClient0.setTimeout(2158);
      theClient0.getTimeoutMsg();
      theClient0.getClientData();
      theClient0.getClientExtendedEventHandler();
      theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient0.getAuthenticator();
      theClient0.setAuthenticator((Authenticator) null);
      theClient0.getClientExtendedEventHandler();
      theClient0.getTimeout();
      theClient0.getClientAuthenticationHandler();
      theClient0.getClientWriteHandler();
      assertEquals(2158, theClient0.getTimeout());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      CommandHandler commandHandler0 = new CommandHandler();
      QuickServer quickServer0 = new QuickServer("y");
      org.quickserver.net.qsadmin.Authenticator authenticator0 = new org.quickserver.net.qsadmin.Authenticator();
      NonBlockingClientHandler nonBlockingClientHandler0 = new NonBlockingClientHandler((-2511));
      assertEquals("<ClientHandler-Pool#-2511-ID:1>", nonBlockingClientHandler0.getName());
      
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-111);
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte)1;
      theClient0.getSocketChannel();
      theClient0.setSocketChannel((SocketChannel) null);
      byteArray0[3] = (byte)5;
      byteArray0[2] = (byte)5;
      byteArray0[5] = (byte)0;
      String string0 = theClient0.toString();
      assertEquals("{TheClient no socket, Event: (ClientEvent-Run Blocking)}", string0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("Running in non-secure mode", 2);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)0;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "%3Ws{M}h");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "v|p(s(\"f{");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      TheClient theClient0 = new TheClient();
      theClient0.getMaxAuthTryMsg();
      assertFalse(theClient0.getTrusted());
      assertTrue(theClient0.getCommunicationLogging());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.784066574475527
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      CommandHandler commandHandler0 = new CommandHandler();
      theClient0.setClientCommandHandler(commandHandler0);
      theClient0.getAuthenticator();
      theClient0.setTrusted(true);
      theClient0.setAuthenticator((Authenticator) null);
      ClientCommandHandler clientCommandHandler0 = theClient0.getClientCommandHandler();
      theClient0.setClientCommandHandler(commandHandler0);
      theClient0.setClientCommandHandler(clientCommandHandler0);
      theClient0.getClientBinaryHandler();
      ClientEvent clientEvent0 = ClientEvent.RUN_BLOCKING;
      theClient0.toString();
      theClient0.getTrusted();
      TheClient theClient1 = new TheClient();
      theClient1.getClientEvent();
      org.quickserver.net.qsadmin.Authenticator authenticator0 = new org.quickserver.net.qsadmin.Authenticator();
      // Undeclared exception!
      try { 
        authenticator0.askAuthentication((ClientHandler) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.quickserver.net.qsadmin.Authenticator", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getClientObjectHandler();
      theClient0.setClientCommandHandler((ClientCommandHandler) null);
      theClient0.getClientBinaryHandler();
      theClient0.getClientObjectHandler();
      assertFalse(theClient0.getTrusted());
      
      theClient0.setTrusted(true);
      theClient0.getClientEventHandler();
      assertTrue(theClient0.getTrusted());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)0;
      byteArray0[3] = (byte)1;
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      TheClient theClient0 = new TheClient();
      theClient0.getClientData();
      theClient0.setClientData((ClientData) null);
      theClient0.getClientObjectHandler();
      assertTrue(theClient0.getCommunicationLogging());
      assertFalse(theClient0.getTrusted());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      org.quickserver.net.qsadmin.Authenticator authenticator0 = new org.quickserver.net.qsadmin.Authenticator();
      theClient0.getAuthenticator();
      theClient0.setAuthenticator((Authenticator) null);
      theClient0.setClientAuthenticationHandler(authenticator0);
      theClient0.getClientAuthenticationHandler();
      ClientEvent clientEvent0 = ClientEvent.WRITE;
      theClient0.setClientEvent(clientEvent0);
      assertTrue(theClient0.getCommunicationLogging());
      assertFalse(theClient0.getTrusted());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.9676652704776565
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getClientExtendedEventHandler();
      theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient0.getClientBinaryHandler();
      theClient0.setTimeout((-1132));
      theClient0.setClientBinaryHandler((ClientBinaryHandler) null);
      TheClient theClient1 = new TheClient();
      theClient1.getClientObjectHandler();
      theClient1.setClientObjectHandler((ClientObjectHandler) null);
      QuickServer quickServer0 = new QuickServer("L[#");
      theClient0.setServer(quickServer0);
      theClient1.setClientCommandHandler((ClientCommandHandler) null);
      theClient1.getClientBinaryHandler();
      ClientEvent clientEvent0 = ClientEvent.RUN_BLOCKING;
      theClient0.setClientEvent(clientEvent0);
      theClient0.toString();
      assertEquals((-1132), theClient0.getTimeout());
  }
}
