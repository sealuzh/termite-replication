/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 21:08:02 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.io.SyncFailedException;
import java.net.URISyntaxException;
import java.nio.CharBuffer;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockRandomAccessFile;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JavaCharStream_ESTest extends JavaCharStream_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.641289979222368
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".");
      StringReader stringReader1 = new StringReader("(%+I");
      stringReader1.skip(1L);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (byte)114, (byte)0);
      javaCharStream0.ReadByte();
      javaCharStream0.readChar();
      JavaCharStream.hexval('7');
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "(%+I");
      javaCharStream0.adjustBeginLineColumn((-462), 15);
      javaCharStream0.getBeginLine();
      JavaCharStream javaCharStream1 = null;
      try {
        javaCharStream1 = new JavaCharStream(stringReader0, 1, 1, (-462));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.3620935311979725
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)114;
      StringReader stringReader0 = new StringReader("ea$!\"}");
      stringReader0.skip(0L);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)114, (-415));
      javaCharStream0.ReadByte();
      javaCharStream0.readChar();
      int int0 = JavaCharStream.hexval('a');
      assertEquals(10, int0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.3841798401441419
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StringReader stringReader0 = new StringReader("IVeJl(sq),x3>f");
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-53);
      byteArray0[1] = (byte)74;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-1482), (-1482), 732);
      javaCharStream1.readChar();
      StringReader stringReader1 = new StringReader("");
      try { 
        JavaCharStream.hexval('I');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StringReader stringReader0 = new StringReader("IVeJl(sq),x3>f");
      StringReader stringReader1 = new StringReader("IVeJl(sq),x3>f");
      int int0 = JavaCharStream.hexval('0');
      assertEquals(0, int0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byte byte0 = (byte)0;
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)114;
      StringReader stringReader0 = new StringReader("ea$!\"}");
      try { 
        JavaCharStream.hexval('^');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      try { 
        JavaCharStream.hexval('Z');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.4434606788422253
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-85);
      byteArray0[1] = (byte)46;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      javaCharStream0.backup((-1));
      javaCharStream0.readChar();
      StringReader stringReader0 = new StringReader("");
      try { 
        JavaCharStream.hexval('Q');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0534664986218596
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)114;
      StringReader stringReader0 = new StringReader("ea$!\"}");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " Kug,X>b#");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 59, (byte)114);
      javaCharStream0.adjustBeginLineColumn((byte)114, (byte)114);
      javaCharStream0.getBeginLine();
      javaCharStream0.getBeginLine();
      try { 
        JavaCharStream.hexval('?');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.5059175398784443
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)46;
      byteArray0[4] = (byte) (-62);
      byteArray0[5] = (byte) (-62);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      Enumeration<PipedInputStream> enumeration0 = (Enumeration<PipedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.backup(180);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (byte) (-62), (byte)0);
      javaCharStream1.readChar();
      StringReader stringReader1 = new StringReader(".");
      try { 
        JavaCharStream.hexval('U');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)114;
      StringReader stringReader0 = new StringReader("ea$!\"}");
      StringReader stringReader1 = new StringReader("ea$!\"}");
      try { 
        JavaCharStream.hexval('W');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.510415291002882
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".");
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)46;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      Enumeration<PipedInputStream> enumeration0 = (Enumeration<PipedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.FillBuff();
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, (-2840), 2565, 2747);
      StringReader stringReader1 = new StringReader("@U.S|xVm");
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0);
      javaCharStream2.BeginToken();
      try { 
        JavaCharStream.hexval('S');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      StringReader stringReader1 = new StringReader("");
      try { 
        JavaCharStream.hexval('O');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.1772441448668025
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byte byte0 = (byte)0;
      byteArray0[0] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-2840), (byte)0, (byte)0);
      boolean boolean0 = false;
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.bufcolumn = null;
      StringReader stringReader0 = new StringReader("S\"'");
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.298647162695711
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-2840), (byte)0, (byte)0);
      byteArrayInputStream0.skip((-2840));
      StringReader stringReader0 = new StringReader(",H{J8~m~.qw$j{Pc9");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      javaCharStream1.available = (-166);
      javaCharStream0.BeginToken();
      assertEquals(0, byteArrayInputStream0.available());
      
      javaCharStream1.GetSuffix(3747);
      assertEquals((-1), javaCharStream1.bufpos);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.4884371339023172
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".");
      byte[] byteArray0 = new byte[2];
      stringReader0.reset();
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)46;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      Enumeration<PipedInputStream> enumeration0 = (Enumeration<PipedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      javaCharStream1.backup(5);
      javaCharStream0.readChar();
      StringReader stringReader1 = new StringReader("");
      JavaCharStream.hexval('5');
      try { 
        JavaCharStream.hexval('\uFFFD');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-60);
      byteArray0[1] = (byte)67;
      byteArray0[2] = (byte)93;
      byteArray0[3] = (byte) (-35);
      byteArray0[4] = (byte) (-82);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.bufsize = (-1);
      // Undeclared exception!
      try { 
        javaCharStream0.GetImage();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.9305117329982587
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)52;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-62);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)9;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)46;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.available = (-1);
      byteArrayInputStream0.close();
      JavaCharStream.hexval('9');
      StringReader stringReader0 = new StringReader("");
      javaCharStream0.ReInit((Reader) stringReader0, 4136, 4078, (int) (byte)0);
      // Undeclared exception!
      try { 
        javaCharStream0.getBeginLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.4964759689724327
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)114;
      StringReader stringReader0 = new StringReader("ea$!\"}");
      stringReader0.skip(0L);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)114, (-415));
      javaCharStream0.ReadByte();
      javaCharStream0.readChar();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 951, (-415));
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, 519, 4096);
      javaCharStream0.ExpandBuff(true);
      assertEquals((-415), javaCharStream0.getBeginColumn());
      
      JavaCharStream javaCharStream2 = new JavaCharStream(pushbackInputStream0, (byte)114, (byte)114);
      javaCharStream2.adjustBeginLineColumn((-1), 519);
      javaCharStream1.getBeginLine();
      int int0 = javaCharStream2.getBeginLine();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.3558258304206885
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)52;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-62);
      byteArray0[3] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.backup((-4877));
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4877
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.4013116669812944
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".");
      FileSystemHandling.shouldAllThrowIOExceptions();
      stringReader0.skip((-717L));
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2261, 3248);
      javaCharStream0.ReadByte();
      javaCharStream0.ReInit((Reader) stringReader0, 2261, 2261);
      javaCharStream0.ExpandBuff(false);
      int int0 = 1809;
      javaCharStream0.tokenBegin = (-1442);
      javaCharStream0.backup(1809);
      stringReader0.skip((-1L));
      int[] intArray0 = new int[2];
      intArray0[0] = 3248;
      intArray0[1] = (int) '.';
      javaCharStream0.bufline = intArray0;
      int int1 = 11;
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      try { 
        JavaCharStream.hexval('_');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.4853632216887713
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byteArray0[0] = (byte)52;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-62);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)9;
      String string0 = "@cdEPF}";
      StringReader stringReader0 = new StringReader("@cdEPF}");
      int int0 = 75;
      int int1 = 69;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 75, 69);
      javaCharStream0.ReadByte();
      javaCharStream0.readChar();
      javaCharStream0.getLine();
      javaCharStream0.getColumn();
      try { 
        JavaCharStream.hexval('@');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.074066392358617
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      Enumeration<PipedInputStream> enumeration0 = (Enumeration<PipedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      byteArrayInputStream0.read();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      javaCharStream0.backup(93);
      javaCharStream0.readChar();
      javaCharStream0.line = 0;
      StringReader stringReader0 = new StringReader("");
      JavaCharStream.hexval('4');
      JavaCharStream.hexval('d');
      javaCharStream0.getColumn();
      int int0 = javaCharStream0.getLine();
      assertEquals(8, byteArrayInputStream0.available());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.5760898974011934
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader(".");
      javaCharStream0.ReInit((Reader) stringReader1);
      javaCharStream0.GetImage();
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)46;
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream1 = new JavaCharStream(sequenceInputStream0, 6109, (byte)46, 0);
      StringReader stringReader2 = new StringReader("TA{[P1kd@8o'x);S");
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0);
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.8193532513470827
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-2840), (byte)0, (byte)0);
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.AdjustBuffSize();
      StringReader stringReader0 = new StringReader("S\"'");
      StringReader stringReader1 = new StringReader("bOdnf:P|");
      stringReader1.reset();
      javaCharStream0.ReInit((Reader) stringReader1);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0, 939);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-1), (-2840));
      javaCharStream1.BeginToken();
      javaCharStream1.GetSuffix(2411);
      javaCharStream0.readChar();
      assertEquals(1, javaCharStream0.getBeginColumn());
      
      String string0 = javaCharStream1.GetImage();
      assertEquals("S", string0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Enumeration<PipedInputStream> enumeration0 = (Enumeration<PipedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0, (-395), 2253);
      // Undeclared exception!
      try { 
        javaCharStream0.GetSuffix((-395));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.555360096334817
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)52;
      byteArray0[1] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.backup((-1427));
      javaCharStream0.readChar();
      StringReader stringReader0 = new StringReader("+W(~]c(?\"}");
      javaCharStream0.adjustBeginLineColumn((byte)0, (byte)52);
      javaCharStream0.ReInit((Reader) stringReader0);
      byteArrayInputStream0.read(byteArray0);
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('{');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.6327342776897575
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("wUhf=1U@>]");
      StringReader stringReader2 = new StringReader(" column ");
      javaCharStream0.ReInit((Reader) stringReader2);
      javaCharStream0.GetImage();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader2);
      javaCharStream1.BeginToken();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0, 2303);
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0, (-1), 1198);
      JavaCharStream javaCharStream3 = new JavaCharStream(stringReader0, (-1307), 89);
      javaCharStream3.backup((-1));
      try { 
        javaCharStream3.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)46;
      byteArray0[4] = (byte) (-62);
      byteArray0[5] = (byte) (-62);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      StringReader stringReader1 = new StringReader(".");
      try { 
        JavaCharStream.hexval('J');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.1775863850904327
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      StringReader stringReader0 = new StringReader("G<$Jb(E.~)");
      stringReader0.skip((-717L));
      char[] charArray0 = new char[2];
      charArray0[0] = '^';
      charArray0[1] = '%';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 3248, 2261);
      javaCharStream0.ReadByte();
      javaCharStream0.readChar();
      StringReader stringReader1 = new StringReader("");
      javaCharStream0.ReInit((Reader) stringReader1, (int) 'J', 2261, (int) 'J');
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.464373031209679
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)114;
      StringReader stringReader0 = new StringReader("ea$!\"}");
      stringReader0.skip(0L);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)114, (-415));
      javaCharStream0.ReadByte();
      javaCharStream0.readChar();
      assertEquals(0, javaCharStream0.bufpos);
      
      JavaCharStream.hexval('9');
      StringReader stringReader1 = new StringReader("");
      javaCharStream0.ReInit((Reader) stringReader0, 9, 12, 2048);
      assertEquals(0, javaCharStream0.getBeginLine());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)114;
      StringReader stringReader0 = new StringReader("ea$!\"}");
      stringReader0.skip(0L);
      try { 
        JavaCharStream.hexval('=');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.8472883508124011
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)114;
      StringReader stringReader0 = new StringReader("ea$!\"}");
      stringReader0.skip(0L);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)114, (-415));
      javaCharStream0.ReadByte();
      try { 
        JavaCharStream.hexval('r');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.948720592834763
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)2;
      StringReader stringReader0 = new StringReader("ea$!\"}");
      stringReader0.skip(1227L);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)2, 32);
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.8472225767603416
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-2840), (byte)0, (byte)0);
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.AdjustBuffSize();
      StringReader stringReader0 = new StringReader("S\"'");
      stringReader0.reset();
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, 117, (byte)0, 117);
      StringReader stringReader1 = new StringReader("Nh0>HMluH");
      javaCharStream1.ReInit((Reader) stringReader1);
      javaCharStream0.GetImage();
      javaCharStream1.getBeginColumn();
      JavaCharStream javaCharStream2 = new JavaCharStream(byteArrayInputStream0, 4088, 2487, 12);
      javaCharStream2.FillBuff();
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.5601507502065712
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)95;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "_yA&cKDNX3/RU(Il^x");
      byteArrayInputStream0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedInputStream0, (byte)95, 0, (-1264));
      javaCharStream0.getBeginColumn();
      javaCharStream0.getBeginColumn();
      javaCharStream0.adjustBeginLineColumn((byte)95, 0);
      assertEquals(96, javaCharStream0.getBeginLine());
      
      javaCharStream0.Done();
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      int int0 = JavaCharStream.hexval('e');
      assertEquals(14, int0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null, 1, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.6817888352168695
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".");
      FileSystemHandling.shouldAllThrowIOExceptions();
      stringReader0.skip((-717L));
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2261, 3248);
      javaCharStream0.ReadByte();
      javaCharStream0.ReInit((Reader) stringReader0, 2261, 2261);
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.tokenBegin = (-1442);
      javaCharStream0.backup(1809);
      stringReader0.skip((-1L));
      int[] intArray0 = new int[2];
      intArray0[0] = 3248;
      intArray0[1] = (int) '.';
      javaCharStream0.bufline = intArray0;
      javaCharStream0.inputStream = (Reader) stringReader0;
      javaCharStream0.bufpos = 46;
      javaCharStream0.getEndColumn();
      // Undeclared exception!
      try { 
        javaCharStream0.adjustBeginLineColumn(1809, 11);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1442
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.077275581771515
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)52;
      byteArray0[1] = (byte)52;
      byteArray0[2] = (byte) (-62);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)9;
      byteArray0[5] = (byte) (-62);
      byteArray0[6] = (byte)46;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.prevCharIsCR = true;
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, 4, (byte)52);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream1);
      JavaCharStream javaCharStream1 = new JavaCharStream(pushbackInputStream0, (byte) (-62), 4233);
      javaCharStream0.ExpandBuff(false);
      javaCharStream1.adjustBeginLineColumn((byte)52, (byte)52);
      javaCharStream0.getBeginLine();
      javaCharStream0.getBeginLine();
      // Undeclared exception!
      try { 
        javaCharStream1.getEndColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.464373031209679
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".");
      StringReader stringReader1 = new StringReader("(%+I");
      stringReader1.skip(1L);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (byte)114, (byte)0);
      javaCharStream0.ReadByte();
      javaCharStream0.readChar();
      JavaCharStream.hexval('7');
      StringReader stringReader2 = new StringReader("GF5746-p\"kyAZG");
      javaCharStream0.ReInit((Reader) stringReader2, 12, 0, (int) (byte)0);
      assertNotSame(stringReader2, stringReader1);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.1048429952501797
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-20);
      byteArray0[1] = (byte) (-21);
      byteArray0[2] = (byte)53;
      byteArray0[3] = (byte)13;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.backup((-519));
      StringReader stringReader0 = new StringReader("A:ok;");
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, 8, 1105, (byte)13);
      javaCharStream1.adjustBeginLineColumn(210, 15);
      javaCharStream1.ReInit((Reader) stringReader0);
      byteArrayInputStream0.read(byteArray0);
      javaCharStream0.UpdateLineColumn('V');
      assertEquals(518, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.5568415778162983
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.backup((byte) (-82));
      javaCharStream0.readChar();
      StringReader stringReader0 = new StringReader("");
      int int0 = 74;
      javaCharStream0.adjustBeginLineColumn((byte) (-60), 74);
      javaCharStream0.ReInit((Reader) stringReader0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream1.read(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 711, (byte) (-60), (byte)52);
      // Undeclared exception!
      try { 
        javaCharStream1.UpdateLineColumn('c');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=3.086809570546633
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-2840), (byte)0, (byte)0);
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.AdjustBuffSize();
      StringReader stringReader0 = new StringReader("S\"'");
      StringReader stringReader1 = new StringReader("bOdnf:P.");
      stringReader1.reset();
      javaCharStream0.ReInit((Reader) stringReader1);
      javaCharStream0.GetImage();
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(dataInputStream0);
      javaCharStream1.getBeginColumn();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream2 = new JavaCharStream(pipedInputStream0, (byte)0, (byte)0, 4080);
      javaCharStream0.BeginToken();
      javaCharStream0.ReInit((InputStream) pipedInputStream0);
      javaCharStream1.BeginToken();
      javaCharStream1.backup(0);
      int int0 = javaCharStream1.getEndLine();
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.3842713196839629
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 3248, 3248, 3248);
      StringReader stringReader1 = new StringReader("j#Z=d+Dod6J3:[!");
      javaCharStream0.ReInit((Reader) stringReader1, 1537, 448, 0);
      // Undeclared exception!
      try { 
        javaCharStream0.adjustBeginLineColumn(0, 448);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.2309753068751434
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)114;
      StringReader stringReader0 = new StringReader("ea$!\"}");
      stringReader0.skip(0L);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 4515, (byte)0, (byte)114);
      javaCharStream0.GetImage();
      javaCharStream0.BeginToken();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0, 1);
      StringReader stringReader1 = new StringReader(" column ");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, (-2672), 4065);
      char char0 = javaCharStream0.BeginToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('a', char0);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.9269954962744
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".");
      byte[] byteArray0 = new byte[6];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, 1, (byte)0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream1);
      PushbackInputStream pushbackInputStream1 = new PushbackInputStream(byteArrayInputStream1, (byte)123);
      JavaCharStream javaCharStream1 = new JavaCharStream(pushbackInputStream1, (byte)0, 4448);
      javaCharStream1.ExpandBuff(false);
      javaCharStream0.adjustBeginLineColumn((-1), (-320));
      assertEquals((-320), javaCharStream0.getBeginColumn());
      
      javaCharStream1.getBeginLine();
      javaCharStream1.getBeginLine();
      assertEquals((-1), javaCharStream1.bufpos);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.0520105900354446
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.backup(6122);
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      javaCharStream0.adjustBeginLineColumn((byte) (-62), (byte)0);
      javaCharStream0.ReInit((Reader) stringReader0);
      byteArrayInputStream0.read(byteArray0);
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('|');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.6511278177287596
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      byte[] byteArray0 = new byte[18];
      StringReader stringReader0 = new StringReader("Po/(/'*o}3F");
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.backup((byte)0);
      javaCharStream0.readChar();
      StringReader stringReader1 = new StringReader("+W(~]c(?\"}");
      javaCharStream0.adjustBeginLineColumn((byte)46, (byte)0);
      javaCharStream0.ReInit((Reader) stringReader0);
      byteArrayInputStream0.read(byteArray0);
      StringReader stringReader2 = new StringReader("%k|m8I");
      javaCharStream0.ReInit((Reader) stringReader2, 448, 0, 63);
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('_');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".");
      byte[] byteArray0 = new byte[2];
      stringReader0.reset();
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)46;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      Reader reader0 = null;
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 9, (byte) (-1));
      // Undeclared exception!
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.skip((-329L));
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 757, 0, 0);
      // Undeclared exception!
      try { 
        javaCharStream0.getEndLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.786724494755577
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)37;
      byteArray0[1] = (byte)79;
      byteArray0[2] = (byte)56;
      byteArray0[3] = (byte) (-1);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 92, (byte)79);
      StringReader stringReader0 = new StringReader("7OI4y6fZc\"@>2");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1022, 15);
      javaCharStream0.ReInit((Reader) stringReader0, 495, (int) (byte)56, 1);
      javaCharStream0.ReInit((Reader) stringReader0);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.1944064129383247
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Reader reader0 = null;
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.9732617547983051
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      int int0 = 2015;
      String string0 = javaCharStream0.GetImage();
      javaCharStream0.adjustBeginLineColumn(2015, 12);
      String string1 = "";
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)101;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)111;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      javaCharStream0.ReInit((InputStream) sequenceInputStream0, 12, 2891);
      javaCharStream0.prevCharIsCR = false;
      try { 
        MockURI.URI("", "]/0q^;$z688DQ~+", "", 2891, "", "", string0);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Expected scheme name at index 0: ://%5D%2F0q%5E;$z688DQ~
         //
         verifyException("java.net.URI$Parser", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null, 1, 1075, 1075);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.8937277100473913
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".");
      String string0 = " column ";
      StringReader stringReader1 = new StringReader(" column ");
      int int0 = (-1869);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-4484), 1170);
      javaCharStream0.tokenBegin = 1170;
      javaCharStream0.ReadByte();
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.204663562047517
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-2840), (byte)0, (byte)0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, 59, 59);
      javaCharStream1.BeginToken();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      try { 
        javaCharStream1.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Enumeration<PipedInputStream> enumeration0 = (Enumeration<PipedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.skip(0L);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      javaCharStream0.ReInit((InputStream) sequenceInputStream0, 0, (-1130), (-1130));
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)115;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-19);
      byteArray0[3] = (byte) (-15);
      sequenceInputStream0.read(byteArray0, 2034, (-1130));
      // Undeclared exception!
      try { 
        javaCharStream0.getLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 4177, 4177, 0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      javaCharStream0.ReInit((InputStream) pipedInputStream0);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)6;
      byteArray0[1] = (byte)11;
      byteArray0[2] = (byte)26;
      byteArray0[3] = (byte) (-76);
      StringReader stringReader0 = new StringReader("gx_NynF6w$O_m(j1");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2, (-618), 2714);
      // Undeclared exception!
      try { 
        javaCharStream0.getLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 4095);
      byteArrayInputStream0.close();
      byteArrayInputStream0.mark(1);
      byteArrayInputStream0.skip(1);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 4095, 1, 1);
      javaCharStream0.line = 1;
      // Undeclared exception!
      try { 
        javaCharStream0.getColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.8760707436641795
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".");
      stringReader0.skip((-717L));
      int int0 = 3248;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2261, 3248);
      javaCharStream0.ReadByte();
      javaCharStream0.ReInit((Reader) stringReader0, 2261, 2261);
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.backup(1809);
      javaCharStream0.AdjustBuffSize();
      StringReader stringReader1 = new StringReader(".");
      stringReader0.reset();
      javaCharStream0.ReInit((Reader) stringReader1);
      javaCharStream0.GetImage();
      javaCharStream0.getBeginColumn();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      try { 
        fileDescriptor0.sync();
        fail("Expecting exception: SyncFailedException");
      
      } catch(SyncFailedException e) {
         //
         // sync failed
         //
         verifyException("java.io.FileDescriptor", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.2247368157899348
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-60);
      byteArray0[1] = (byte)67;
      byteArray0[2] = (byte)93;
      byteArray0[3] = (byte) (-35);
      byteArray0[4] = (byte) (-82);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.backup(2);
      javaCharStream0.readChar();
      StringReader stringReader1 = new StringReader("");
      javaCharStream0.adjustBeginLineColumn(6, 9);
      javaCharStream0.ReInit((Reader) stringReader1);
      byteArrayInputStream0.read(byteArray0);
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('t');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.1425230615188013
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)52;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-62);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)9;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)46;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.prevCharIsCR = true;
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, 4, (byte)0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream1);
      JavaCharStream javaCharStream1 = new JavaCharStream(pushbackInputStream0, (byte) (-62), 4233);
      javaCharStream0.ExpandBuff(false);
      javaCharStream1.adjustBeginLineColumn((byte)0, (byte)52);
      int int0 = javaCharStream0.getBeginLine();
      int int1 = javaCharStream0.getBeginLine();
      assertTrue(int1 == int0);
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.9672348114402194
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader(".");
      javaCharStream0.ReInit((Reader) stringReader1);
      javaCharStream0.GetImage();
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)46;
      byteArray0[1] = (byte)46;
      byteArray0[2] = (byte)46;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-300), (-1691));
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, 83, (byte)46);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream2 = new JavaCharStream(dataInputStream0, (-1691), (byte)46);
      JavaCharStream javaCharStream3 = new JavaCharStream(stringReader0, 67, (-505));
      javaCharStream3.ExpandBuff(false);
      javaCharStream0.adjustBeginLineColumn((-631), 55);
      int int0 = javaCharStream1.getBeginLine();
      int int1 = javaCharStream1.getBeginLine();
      assertTrue(int1 == int0);
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.7519596907867663
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)52;
      byteArray0[1] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, 266, (byte)0);
      PushbackInputStream pushbackInputStream1 = new PushbackInputStream(byteArrayInputStream0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream1, pushbackInputStream1);
      byteArrayInputStream1.read(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0, 2679, 2);
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.adjustBeginLineColumn(2, (-1));
      javaCharStream0.getBeginLine();
      int int0 = javaCharStream0.getBeginLine();
      assertEquals((-1), javaCharStream0.getBeginColumn());
      assertEquals(3, int0);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      JavaCharStream.hexval('b');
      String string0 = "";
      MockFile mockFile0 = new MockFile("", "");
      MockRandomAccessFile mockRandomAccessFile0 = null;
      try {
        mockRandomAccessFile0 = new MockRandomAccessFile(mockFile0, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal mode \"\" must be one of \"r\", \"rw\", \"rws\", or \"rwd\"
         //
         verifyException("java.io.RandomAccessFile", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.9296217656001493
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)37;
      byteArray0[1] = (byte)79;
      byteArray0[2] = (byte)56;
      byteArray0[3] = (byte) (-1);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 92, (byte)79);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)6;
      byteArray0[1] = (byte)11;
      byteArray0[2] = (byte)26;
      byteArray0[3] = (byte) (-76);
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)1;
      StringReader stringReader0 = new StringReader("j#Z=d+Dod6J3:[!");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("");
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((Reader) stringReader1, (int) (byte)26, (int) (byte)26, (int) (byte) (-76));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1983), (-1983));
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 0, 14, 0);
      // Undeclared exception!
      try { 
        javaCharStream0.getLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.8806857776840964
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-529), (-529), (-1233));
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.AdjustBuffSize();
      StringReader stringReader0 = new StringReader("");
      stringReader0.reset();
      StringReader stringReader1 = new StringReader("");
      javaCharStream0.ReInit((Reader) stringReader1);
      javaCharStream0.GetImage();
      javaCharStream0.getBeginColumn();
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 3248, 2, 2);
      StringReader stringReader1 = new StringReader("j#Z=d+Dod6J3:[!");
      javaCharStream0.ReInit((Reader) stringReader1, 1537, 448, 0);
      assertNotSame(stringReader0, stringReader1);
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.045899801278006
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("f");
      stringReader0.skip(0L);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1902), 6, 7);
      javaCharStream0.BeginToken();
      int int0 = javaCharStream0.getBeginColumn();
      assertEquals((-1902), javaCharStream0.getBeginLine());
      assertEquals(6, int0);
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.1944064129383247
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)83;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)34;
      byteArray0[3] = (byte)71;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-530), 2048);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 12);
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0, 2048, 1);
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.045899801278006
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      StringReader stringReader0 = new StringReader("{j1|");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char char0 = javaCharStream0.BeginToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('{', char0);
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)6;
      byteArray0[1] = (byte)11;
      byteArray0[2] = (byte)26;
      byteArray0[3] = (byte) (-76);
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)1;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, 0, (byte)26);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pushbackInputStream0, byteArrayInputStream1);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)0;
      char[] charArray0 = new char[4];
      charArray0[0] = '+';
      charArray0[1] = '';
      charArray0[2] = 'I';
      stringReader0.ready();
      charArray0[3] = '0';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      stringReader0.read(charBuffer0);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, (byte)0, (byte)0);
      StringReader stringReader1 = new StringReader(".");
      StringReader stringReader2 = new StringReader("j0R~%*C7>k({x");
      javaCharStream0.ReInit((Reader) stringReader2, (int) (byte) (-62), 3248, (int) (byte)0);
      assertEquals((-1), javaCharStream0.bufpos);
  }
}
