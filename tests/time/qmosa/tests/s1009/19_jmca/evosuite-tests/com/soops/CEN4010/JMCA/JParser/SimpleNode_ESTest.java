/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 20:54:35 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import com.soops.CEN4010.JMCA.JParser.JavaParser;
import com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager;
import com.soops.CEN4010.JMCA.JParser.Node;
import com.soops.CEN4010.JMCA.JParser.SimpleNode;
import java.io.BufferedInputStream;
import java.io.FileDescriptor;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.Reader;
import java.io.StringReader;
import java.io.StringWriter;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Comparator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimpleNode_ESTest extends SimpleNode_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.6139986353734384
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.setIdentifier(":");
      simpleNode0.jjtAddChild(simpleNode0, 0);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add(">>");
      arrayList0.spliterator();
      StringWriter stringWriter0 = new StringWriter(0);
      StringWriter stringWriter1 = new StringWriter();
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtGetParent();
      simpleNode0.jjtSetParent(simpleNode0);
      simpleNode0.setIdentifier((String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "StatementExpressionList");
      simpleNode0.jjtOpen();
      simpleNode0.jjtSetParent((Node) null);
      // Undeclared exception!
      try { 
        simpleNode0.dump((String) null, stringWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.2283766931186737
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.setIdentifier("<");
      simpleNode0.setIdentifier(";");
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("<");
      StringWriter stringWriter0 = new StringWriter();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "r D~I'OQr3K%G+LeR");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Fwm@`%+#+x1C^#c6");
      StringWriter stringWriter1 = new StringWriter(125);
      stringWriter1.write(4850);
      simpleNode0.dump("r D~I'OQr3K%G+LeR", stringWriter0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "r D~I'OQr3K%G+LeR");
      simpleNode0.toString();
      int int0 = 200;
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(200);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0783934585517456
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1);
      simpleNode0.setIdentifier("h");
      simpleNode0.setIdentifier("&");
      ArrayList<String> arrayList0 = new ArrayList<String>();
      arrayList0.spliterator();
      StringReader stringReader0 = new StringReader(".rCJ[E0D9 22#wZ3K]");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager((JavaCharStream) null);
      char[] charArray0 = new char[7];
      charArray0[0] = '$';
      charArray0[1] = 'T';
      charArray0[2] = 'F';
      charArray0[2] = '6';
      charArray0[4] = ' ';
      charArray0[5] = '(';
      charArray0[6] = 'J';
      javaCharStream0.buffer = charArray0;
      javaCharStream0.ReadByte();
      JavaParser javaParser0 = new JavaParser("o'S&");
      JavaParser javaParser1 = new JavaParser(javaParserTokenManager0);
      StringWriter stringWriter0 = new StringWriter(965);
      simpleNode0.dump("O*E;r=)rQ/m'A'Q", stringWriter0);
      assertEquals("<PackageDeclaration>\n  <identifier>h</identifier>\n  <identifier>*amp</identifier>\n</PackageDeclaration>\n", stringWriter0.toString());
      
      String string0 = simpleNode0.toString();
      assertEquals("PackageDeclaration : h : &", string0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.2508158349996463
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1);
      simpleNode0.setIdentifier("{");
      simpleNode0.setIdentifier("&");
      ArrayList<String> arrayList0 = new ArrayList<String>();
      arrayList0.spliterator();
      StringWriter stringWriter0 = new StringWriter();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "&");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "- 6<+Jbl");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      simpleNode0.dump("- 6<+Jbl", stringWriter0);
      assertEquals("<PackageDeclaration>\n  <identifier>*amp</identifier>\n</PackageDeclaration>\n", stringWriter0.toString());
      
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SystemInUtil.addInputLine("<");
      String string0 = simpleNode0.toString("import");
      assertEquals("importPackageDeclaration : { : &", string0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0974033676362451
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.setIdentifier("<<");
      ArrayList<String> arrayList0 = new ArrayList<String>();
      arrayList0.trimToSize();
      arrayList0.spliterator();
      StringWriter stringWriter0 = new StringWriter();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Fwm@`%+#+x1C^#c6");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "3eq");
      StringWriter stringWriter1 = new StringWriter();
      stringWriter0.write(4850);
      simpleNode0.dump("3eq", stringWriter0);
      assertEquals("\u12F2<CompilationUnit>\n  <identifier>*lshft</identifier>\n</CompilationUnit>\n", stringWriter0.toString());
      
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "n.Q$XTH~}BOKGxP-");
      simpleNode0.toString();
      String string0 = simpleNode0.toString();
      assertEquals("CompilationUnit : <<", string0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.2559440401278517
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.setIdentifier("<");
      ArrayList<String> arrayList0 = new ArrayList<String>();
      StringReader stringReader0 = new StringReader(")r(:U2Z1BgL;oN>|(]w");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager((JavaCharStream) null);
      javaCharStream0.ReadByte();
      JavaParser javaParser0 = new JavaParser(")r(:U2Z1BgL;oN>|(]w");
      javaCharStream0.ReadByte();
      JavaParser javaParser1 = new JavaParser(javaParserTokenManager2);
      StringWriter stringWriter0 = new StringWriter(0);
      StringWriter stringWriter1 = new StringWriter();
      simpleNode0.dump("<", stringWriter1);
      assertEquals("<CompilationUnit>\n  <identifier>*lt</identifier>\n</CompilationUnit>\n", stringWriter1.toString());
      
      simpleNode0.toString();
      simpleNode0.toString();
      String string0 = simpleNode0.toString("PackageDeclaration");
      assertEquals("PackageDeclarationCompilationUnit : <", string0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.58208024436458
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      simpleNode0.setIdentifier("{");
      ArrayList<String> arrayList1 = new ArrayList<String>();
      arrayList0.spliterator();
      arrayList1.spliterator();
      StringWriter stringWriter0 = new StringWriter();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "  <identifier>");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "6");
      simpleNode0.dump("6", stringWriter0);
      assertEquals("<PackageDeclaration>\n</PackageDeclaration>\n", stringWriter0.toString());
      
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "\"^\"");
      SystemInUtil.addInputLine("6");
      String string0 = simpleNode0.toString("  <identifier>");
      assertEquals("  <identifier>PackageDeclaration : {", string0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.7159101836184667
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      int int0 = 1;
      SimpleNode simpleNode0 = new SimpleNode(1);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      simpleNode0.jjtAddChild((Node) null, 1);
      arrayList0.spliterator();
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtSetParent(simpleNode0);
      simpleNode0.setIdentifier(".&");
      simpleNode0.jjtOpen();
      simpleNode0.jjtSetParent(simpleNode0);
      simpleNode0.dump(".&", stringWriter0);
      simpleNode0.jjtGetParent();
      simpleNode0.jjtAddChild(simpleNode0, 1);
      int int1 = 4683;
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.setIdentifier((String) null);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      arrayList0.spliterator();
      StringWriter stringWriter0 = new StringWriter();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Fwm@`%+#+x1C^#c6");
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "3eq");
      StringWriter stringWriter1 = new StringWriter();
      stringWriter0.write(4850);
      // Undeclared exception!
      try { 
        simpleNode0.dump("3eq", stringWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.9404234004015197
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(24);
      simpleNode0.toString();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      arrayList0.listIterator();
      simpleNode0.setIdentifier("7sz2sVIG@*81}dq ");
      arrayList0.spliterator();
      arrayList0.add("FormalParameter");
      simpleNode0.parent = (Node) simpleNode0;
      arrayList0.addAll(1, (Collection<? extends String>) simpleNode0.identifiers);
      arrayList0.addAll(1, (Collection<? extends String>) simpleNode0.identifiers);
      simpleNode0.setIdentifier("");
      simpleNode0.jjtSetParent((Node) null);
      simpleNode0.jjtGetParent();
      simpleNode0.jjtAddChild((Node) null, 1);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      simpleNode0.jjtSetParent((Node) null);
      simpleNode0.toString("7sz2sVIG@*81}dq ");
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtGetParent();
      simpleNode0.jjtSetParent((Node) null);
      simpleNode0.setIdentifier("7sz2sVIG@*81}dq ");
      simpleNode0.jjtOpen();
      simpleNode0.jjtSetParent((Node) null);
      simpleNode0.toString("");
      simpleNode0.jjtSetParent((Node) null);
      simpleNode0.toString();
      StringWriter stringWriter0 = new StringWriter(718);
      simpleNode0.dump("", stringWriter0);
      simpleNode0.toString();
      simpleNode0.dump("FormalParameter : 7sz2sVIG@*81}dq  :  : 7sz2sVIG@*81}dq ", stringWriter0);
      simpleNode0.jjtAddChild(simpleNode0, 2);
      simpleNode0.jjtGetChild(2);
      assertEquals(3, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.2654436797543704
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(24);
      simpleNode0.toString();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      simpleNode0.setIdentifier("7sz2sVIG@*81}dq ");
      arrayList0.spliterator();
      arrayList0.add("FormalParameter");
      simpleNode0.parent = (Node) simpleNode0;
      arrayList0.addAll(1, (Collection<? extends String>) simpleNode0.identifiers);
      arrayList0.addAll(1, (Collection<? extends String>) simpleNode0.identifiers);
      simpleNode0.setIdentifier("");
      Node node0 = simpleNode0.jjtGetParent();
      simpleNode0.jjtSetParent(node0);
      simpleNode0.setIdentifier("FormalParameter");
      simpleNode0.jjtOpen();
      simpleNode0.jjtSetParent(node0);
      StringWriter stringWriter0 = null;
      try {
        stringWriter0 = new StringWriter((-681));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative buffer size
         //
         verifyException("java.io.StringWriter", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.4497544252414523
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.toString();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      ArrayList<String> arrayList1 = new ArrayList<String>();
      arrayList1.listIterator();
      simpleNode0.setIdentifier("}");
      ArrayList<String> arrayList2 = new ArrayList<String>();
      ArrayList<String> arrayList3 = simpleNode0.identifiers;
      arrayList3.spliterator();
      StringReader stringReader0 = new StringReader("kg@uW*[F");
      StringWriter stringWriter0 = new StringWriter(0);
      StringWriter stringWriter1 = new StringWriter();
      stringWriter1.write((-1));
      simpleNode0.dump("0]{+Y=#^A%N~", stringWriter1);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "}");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "}");
      StringWriter stringWriter2 = new StringWriter();
      stringWriter2.write(0);
      StringWriter stringWriter3 = stringWriter1.append('D');
      simpleNode0.dump("z", stringWriter3);
      assertEquals("\uFFFF<CompilationUnit>\n</CompilationUnit>\nD<CompilationUnit>\n</CompilationUnit>\n", stringWriter1.toString());
      
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "-5$Oyueq?wA$[ZT");
      simpleNode0.toString();
      String string0 = simpleNode0.toString();
      assertEquals("CompilationUnit : }", string0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.822961708220049
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      int int0 = 29;
      SimpleNode simpleNode0 = new SimpleNode(29);
      Node node0 = null;
      simpleNode0.toString();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      arrayList0.listIterator();
      simpleNode0.identifiers = arrayList0;
      simpleNode0.setIdentifier("}");
      arrayList0.spliterator();
      simpleNode0.parent = (Node) simpleNode0;
      arrayList0.addAll(1, (Collection<? extends String>) simpleNode0.identifiers);
      arrayList0.addAll(1, (Collection<? extends String>) simpleNode0.identifiers);
      simpleNode0.setIdentifier(">=");
      Node[] nodeArray0 = new Node[6];
      nodeArray0[0] = null;
      nodeArray0[1] = simpleNode0.parent;
      nodeArray0[2] = (Node) simpleNode0;
      nodeArray0[3] = null;
      nodeArray0[4] = simpleNode0.parent;
      nodeArray0[5] = null;
      simpleNode0.children = nodeArray0;
      simpleNode0.jjtSetParent((Node) null);
      simpleNode0.jjtGetParent();
      simpleNode0.jjtAddChild((Node) null, 1);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      simpleNode0.jjtSetParent((Node) null);
      simpleNode0.toString("}");
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtGetParent();
      simpleNode0.jjtSetParent((Node) null);
      simpleNode0.setIdentifier("}");
      simpleNode0.jjtOpen();
      simpleNode0.jjtSetParent((Node) null);
      simpleNode0.toString("|+((-0R0t+:xAu_L*)A");
      simpleNode0.jjtSetParent((Node) null);
      simpleNode0.toString();
      StringWriter stringWriter0 = new StringWriter(718);
      // Undeclared exception!
      try { 
        simpleNode0.dump("|+((-0R0t+:xAu_L*)A", stringWriter0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0974033676362451
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1);
      simpleNode0.setIdentifier("");
      simpleNode0.setIdentifier("&");
      ArrayList<String> arrayList0 = new ArrayList<String>();
      arrayList0.spliterator();
      StringReader stringReader0 = new StringReader(".rCJ[E0D9 22#wZ3K]");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager((JavaCharStream) null);
      javaCharStream0.ReadByte();
      JavaParser javaParser0 = new JavaParser("o'S&");
      JavaParser javaParser1 = new JavaParser(javaParserTokenManager0);
      StringWriter stringWriter0 = new StringWriter(965);
      simpleNode0.dump("O*E;r=)rQ/m'A'Q", stringWriter0);
      assertEquals("<PackageDeclaration>\n  <identifier>*amp</identifier>\n</PackageDeclaration>\n", stringWriter0.toString());
      
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "L2}z/j6>nZ365-q&oI]");
      String string0 = simpleNode0.toString();
      assertEquals("PackageDeclaration :  : &", string0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.2438228280066395
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      SimpleNode simpleNode0 = new SimpleNode(9);
      simpleNode0.setIdentifier(">=");
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.spliterator();
      StringWriter stringWriter0 = new StringWriter();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Fwm@`%+#+x1C^#c6");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ">=");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "r'9_cKBUO");
      simpleNode0.dump("import", stringWriter0);
      assertEquals("<EnumBody>\n  <identifier>*ge</identifier>\n</EnumBody>\n", stringWriter0.toString());
      
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "f04c_u");
      SystemInUtil.addInputLine("\"++\"");
      String string0 = simpleNode0.toString("import");
      assertEquals("importEnumBody : >=", string0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.394714983677679
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      int int0 = 1887;
      SimpleNode simpleNode0 = new SimpleNode(1887);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node[] nodeArray0 = new Node[0];
      simpleNode0.children = nodeArray0;
      simpleNode0.jjtGetParent();
      simpleNode0.id = (-1106552649);
      simpleNode0.jjtAddChild((Node) null, 818);
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild((Node) null, (-508));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -508
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.4048159937786893
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      StringWriter stringWriter0 = new StringWriter(0);
      char[] charArray0 = new char[0];
      JavaParser javaParser0 = new JavaParser("A{g5u0K");
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 0);
      simpleNode0.jjtAddChild(simpleNode1, 0);
      simpleNode0.jjtAddChild(simpleNode1, 473);
      StringWriter stringWriter1 = new StringWriter();
      StringWriter stringWriter2 = null;
      try {
        stringWriter2 = new StringWriter((-4393));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative buffer size
         //
         verifyException("java.io.StringWriter", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.9407933597059963
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(24);
      simpleNode0.toString();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      arrayList0.listIterator();
      simpleNode0.identifiers = arrayList0;
      simpleNode0.setIdentifier("implements");
      arrayList0.spliterator();
      simpleNode0.parent = (Node) simpleNode0;
      arrayList0.addAll(1, (Collection<? extends String>) simpleNode0.identifiers);
      arrayList0.addAll(1, (Collection<? extends String>) simpleNode0.identifiers);
      simpleNode0.setIdentifier("");
      simpleNode0.jjtSetParent((Node) null);
      simpleNode0.jjtGetParent();
      simpleNode0.jjtAddChild((Node) null, 1);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      simpleNode0.jjtSetParent((Node) null);
      simpleNode0.toString("implements");
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtGetParent();
      simpleNode0.jjtSetParent((Node) null);
      simpleNode0.setIdentifier("implements");
      simpleNode0.jjtOpen();
      simpleNode0.jjtSetParent((Node) null);
      simpleNode0.toString("");
      simpleNode0.jjtSetParent((Node) null);
      simpleNode0.toString();
      StringWriter stringWriter0 = new StringWriter(718);
      simpleNode0.dump("", stringWriter0);
      simpleNode0.toString();
      simpleNode0.dump("FormalParameter : implements : implements : implements : implements :  : implements", stringWriter0);
      simpleNode0.jjtGetParent();
      simpleNode0.jjtAddChild((Node) null, 2);
      simpleNode0.jjtGetChild(2);
      assertEquals(3, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      SimpleNode simpleNode0 = new SimpleNode((-41));
      simpleNode0.setIdentifier(">=");
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add(">=");
      StringWriter stringWriter0 = new StringWriter();
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ">=");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "K@RpCRxKJ6p9yWK");
      String string0 = "G";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "G");
      StringWriter stringWriter1 = new StringWriter();
      stringWriter0.write((-41));
      // Undeclared exception!
      try { 
        simpleNode0.dump("G", stringWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -41
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.7039917864324614
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      int int0 = 0;
      SimpleNode simpleNode0 = new SimpleNode(0);
      String string0 = "A{g5u0K";
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter(0);
      StringWriter stringWriter2 = stringWriter0.append('*');
      StringWriter stringWriter3 = stringWriter2.append('*');
      char[] charArray0 = new char[0];
      int int1 = 0;
      JavaParser javaParser0 = new JavaParser("A{g5u0K");
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 0);
      simpleNode0.jjtAddChild(simpleNode1, 0);
      stringWriter2.append((CharSequence) "A{g5u0K");
      simpleNode0.jjtAddChild(simpleNode1, 0);
      stringWriter0.write(charArray0, 0, 0);
      int int2 = 81;
      StringWriter stringWriter4 = new StringWriter(81);
      stringWriter3.append('*');
      stringWriter1.flush();
      StringBuffer stringBuffer0 = new StringBuffer(0);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(6);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.0974033676362451
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.setIdentifier(":");
      ArrayList<String> arrayList0 = new ArrayList<String>();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList0.sort(comparator0);
      arrayList0.trimToSize();
      arrayList0.spliterator();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      StringWriter stringWriter0 = new StringWriter();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "3eq");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "qV!");
      StringWriter stringWriter1 = new StringWriter();
      stringWriter0.write(4850);
      simpleNode0.dump("3eq", stringWriter1);
      assertEquals("<CompilationUnit>\n  <identifier>:</identifier>\n</CompilationUnit>\n", stringWriter1.toString());
      
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "#sxhy^E8y\"");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "53V");
      simpleNode0.toString();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ":");
      SystemInUtil.addInputLine("3");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "53V");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "V,*ssx.a$$");
      String string0 = simpleNode0.toString();
      assertEquals("CompilationUnit : :", string0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.087302357535235
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(2);
      simpleNode0.setIdentifier("h");
      ArrayList<String> arrayList0 = new ArrayList<String>();
      arrayList0.spliterator();
      StringReader stringReader0 = new StringReader(".rCJ[E0D9 22#wZ3K]");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager((JavaCharStream) null);
      char[] charArray0 = new char[7];
      charArray0[0] = '$';
      charArray0[1] = 'T';
      charArray0[2] = 'F';
      charArray0[2] = '6';
      charArray0[4] = ' ';
      charArray0[5] = '(';
      charArray0[6] = 'J';
      javaCharStream0.buffer = charArray0;
      javaCharStream0.ReadByte();
      JavaParser javaParser0 = new JavaParser("o'S&");
      JavaParser javaParser1 = new JavaParser(javaParserTokenManager0);
      StringWriter stringWriter0 = new StringWriter('T');
      simpleNode0.dump("O*E;r=)rQ/m'A'Q", stringWriter0);
      assertEquals("<ImportDeclaration>\n  <identifier>h</identifier>\n</ImportDeclaration>\n", stringWriter0.toString());
      
      String string0 = simpleNode0.toString();
      assertEquals("ImportDeclaration : h", string0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SystemInUtil.addInputLine("[mv");
      PipedInputStream pipedInputStream0 = new PipedInputStream(479);
      JavaParser javaParser0 = new JavaParser(pipedInputStream0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 479);
      Node node0 = simpleNode0.jjtGetParent();
      assertNull(node0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      StringReader stringReader0 = new StringReader("uJ5@*/");
      stringReader0.reset();
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 10);
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 10);
      simpleNode0.jjtAddChild(simpleNode1, 21);
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(22, int0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SystemInUtil.addInputLine("<");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      SimpleNode simpleNode0 = null;
      try {
        simpleNode0 = new SimpleNode((JavaParser) null, 11);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.3214729516181478
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      int int0 = 0;
      SimpleNode simpleNode0 = new SimpleNode(0);
      String string0 = "A{g5u0K";
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter(0);
      StringWriter stringWriter2 = stringWriter0.append('*');
      stringWriter2.append('*');
      char[] charArray0 = new char[0];
      int int1 = 4338;
      JavaParser javaParser0 = new JavaParser("A{g5u0K");
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 0);
      simpleNode0.jjtAddChild(simpleNode1, 0);
      StringWriter stringWriter3 = stringWriter2.append((CharSequence) "A{g5u0K");
      simpleNode0.dump("A{g5u0K", stringWriter3);
      simpleNode0.jjtAddChild(simpleNode1, 4338);
      stringWriter0.write(charArray0, 0, 0);
      int int2 = 81;
      StringWriter stringWriter4 = new StringWriter(81);
      StringWriter stringWriter5 = null;
      try {
        stringWriter5 = new StringWriter((-4393));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative buffer size
         //
         verifyException("java.io.StringWriter", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.104396374629252
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.setIdentifier(":");
      ArrayList<String> arrayList0 = new ArrayList<String>();
      arrayList0.trimToSize();
      arrayList0.spliterator();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      StringWriter stringWriter0 = new StringWriter();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "3eq");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "qV!");
      StringWriter stringWriter1 = new StringWriter();
      stringWriter0.write(4850);
      simpleNode0.dump("3eq", stringWriter1);
      assertEquals("<CompilationUnit>\n  <identifier>:</identifier>\n</CompilationUnit>\n", stringWriter1.toString());
      
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "#sxhy^E8y\"");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "53V");
      simpleNode0.toString();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ":");
      SystemInUtil.addInputLine("3");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "^");
      simpleNode0.toString();
      String string0 = simpleNode0.toString();
      assertEquals("CompilationUnit : :", string0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.3214729516181478
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      int int0 = 0;
      SimpleNode simpleNode0 = new SimpleNode(0);
      String string0 = "A{g5u0K";
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter(0);
      StringWriter stringWriter2 = stringWriter0.append('*');
      stringWriter2.append('*');
      char[] charArray0 = new char[1];
      int int1 = 0;
      JavaParser javaParser0 = new JavaParser("A{g5u0K");
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 0);
      simpleNode0.jjtAddChild(simpleNode1, 0);
      StringWriter stringWriter3 = stringWriter2.append((CharSequence) "A{g5u0K");
      simpleNode0.dump("A{g5u0K", stringWriter3);
      simpleNode0.jjtAddChild(simpleNode1, 0);
      stringWriter0.write(charArray0, 0, 0);
      int int2 = 81;
      StringWriter stringWriter4 = new StringWriter(81);
      StringWriter stringWriter5 = null;
      try {
        stringWriter5 = new StringWriter((-4393));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative buffer size
         //
         verifyException("java.io.StringWriter", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.2248830687452414
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringWriter stringWriter0 = new StringWriter();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ">=");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "K@RpCRxKJ6p9yWK");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "G");
      StringWriter stringWriter1 = new StringWriter();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "G");
      SystemInUtil.addInputLine("*gt");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "K@RpCRxKJ6p9yWK");
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      JavaParser javaParser0 = new JavaParser(mockFileInputStream0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 1776);
      simpleNode0.dump("K@RpCRxKJ6p9yWK", stringWriter1);
      assertEquals(0, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter(718);
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 1, 1, 718);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      javaCharStream0.bufline = javaParserTokenManager0.jjnewLexState;
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 1);
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild((Node) null, (-4266));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.04718085483299
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      simpleNode0.jjtAddChild((Node) null, 1);
      arrayList0.add("xc!5cocj5h3*hpA&6h");
      arrayList0.spliterator();
      StringWriter stringWriter0 = new StringWriter(1);
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtGetParent();
      simpleNode0.jjtSetParent((Node) null);
      simpleNode0.jjtOpen();
      simpleNode0.jjtSetParent((Node) null);
      simpleNode0.dump(".&", stringWriter0);
      simpleNode0.jjtGetParent();
      simpleNode0.jjtAddChild((Node) null, 1);
      simpleNode0.jjtAddChild((Node) null, 4683);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild((-1073741822));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1073741822
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-2194));
      // Undeclared exception!
      try { 
        simpleNode0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2194
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("*lt");
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 93);
      String string0 = simpleNode0.toString("*lt");
      assertEquals("*ltRUNSIGNEDSHIFT", string0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null, 1865);
      JavaParser javaParser0 = new JavaParser(bufferedInputStream0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, (-232));
      // Undeclared exception!
      try { 
        simpleNode0.toString("'m'5=DQ/");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -232
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(685);
      simpleNode0.jjtClose();
      assertEquals(0, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser((JavaParserTokenManager) null);
      javaParser0.token_source = null;
      // Undeclared exception!
      try { 
        javaParser0.VariableDeclarator();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1181);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      PipedInputStream pipedInputStream1 = new PipedInputStream(pipedOutputStream1, 357);
      JavaParser javaParser0 = new JavaParser(pipedInputStream1);
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 108);
      simpleNode0.setIdentifier("}");
      assertNotSame(simpleNode0, simpleNode1);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-1688));
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(0, int0);
  }
}
