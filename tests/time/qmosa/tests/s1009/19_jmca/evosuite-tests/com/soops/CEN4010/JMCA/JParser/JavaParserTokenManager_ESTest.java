/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 20:24:05 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager;
import com.soops.CEN4010.JMCA.JParser.Token;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.FileDescriptor;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.SequenceInputStream;
import java.io.StringReader;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JavaParserTokenManager_ESTest extends JavaParserTokenManager_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0524392116832186
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StringReader stringReader0 = new StringReader("[2@'~bHR6IolgBA");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 4415, 175, 110);
      StringReader stringReader1 = new StringReader("&BO9AtwIw3&s");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(175, javaCharStream0.getBeginColumn());
      assertEquals("[", token0.toString());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.020911626861479
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StringReader stringReader0 = new StringReader("fnllj");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 1459, 75);
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0, (-1), (-1251), 21);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream2);
      Token token0 = javaParserTokenManager0.getNextToken();
      StringReader stringReader1 = new StringReader("%");
      JavaCharStream javaCharStream3 = new JavaCharStream(stringReader1, 4, 2293, 13);
      JavaCharStream javaCharStream4 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token0);
      assertEquals(4, javaCharStream2.bufpos);
      assertEquals((-1247), javaCharStream2.getEndColumn());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.4570397655638638
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"<\"");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      char[] charArray0 = new char[2];
      charArray0[0] = '\\';
      charArray0[1] = '(';
      stringReader0.read(charArray0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 120);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 90, 3, 3);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = new Token();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-717), (-717));
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      // Undeclared exception!
      try { 
        javaParserTokenManager1.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line -717, column -716.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.356320484438739
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\">>\"");
      char[] charArray0 = new char[9];
      charArray0[0] = 'z';
      charArray0[1] = 'P';
      charArray0[2] = 'U';
      charArray0[3] = '$';
      charArray0[4] = 'P';
      charArray0[5] = 'Z';
      charArray0[6] = 'E';
      charArray0[7] = 'U';
      charArray0[8] = 'Z';
      stringReader0.read(charArray0);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)11;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "\">>\"");
      byteArray0[1] = (byte)11;
      byteArray0[2] = (byte)11;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager1.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 1.  Encountered: \"\\u000b\" (11), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.6636260808592254
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\">>\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1459, 1459);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.input_stream = javaCharStream0;
      javaCharStream0.tokenBegin = (-1);
      Token token0 = javaParserTokenManager0.getNextToken();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token token1 = token_GTToken0.specialToken;
      token0.specialToken = null;
      javaParserTokenManager0.SkipLexicalActions(token0);
      MockPrintStream mockPrintStream0 = new MockPrintStream(javaParserTokenManager0.debugStream, false);
      javaParserTokenManager0.setDebugStream(mockPrintStream0);
      javaParserTokenManager0.MoreLexicalActions();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals(1462, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\">>\"");
      char[] charArray0 = new char[6];
      charArray0[0] = 'a';
      charArray0[1] = 'k';
      charArray0[2] = 'k';
      charArray0[3] = 'N';
      charArray0[4] = 'k';
      charArray0[5] = 'a';
      stringReader0.read(charArray0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = null;
      try {
        javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 4);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 4. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.8158237206343162
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"<\"");
      StringReader stringReader1 = new StringReader(">>=");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 1470, 1470);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token0);
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals(1472, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.4078164692513457
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StringReader stringReader0 = new StringReader("[2@'~bHR6IolgBA");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 4415, 175, 110);
      StringReader stringReader1 = new StringReader("&BO9AtwIw3&s");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.curLexState = 4415;
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.jjFillToken();
      assertEquals("", token0.toString());
      assertEquals(0, token0.kind);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.948720592834763
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      pipedInputStream0.mark(0);
      char[] charArray0 = new char[1];
      char char0 = 'w';
      charArray0[0] = 'w';
      javaCharStream0.nextCharBuf = charArray0;
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token token0 = new Token();
      javaParserTokenManager0.TokenLexicalActions(token0);
      javaParserTokenManager0.ReInit(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.559495439506937
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StringReader stringReader0 = new StringReader("&6{\"-u:{yQuG(K!");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      char[] charArray0 = new char[1];
      charArray0[0] = '\\';
      stringReader0.read(charArray0);
      javaParserTokenManager0.getNextToken();
      Token token0 = new Token();
      StringReader stringReader1 = new StringReader("HP~{M4HVF");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-2117), (-2117));
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token token1 = javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.getBeginColumn());
      assertEquals(79, token1.kind);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.9994597147848636
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StringReader stringReader0 = new StringReader("&6{\"-u:{yQuG(K!");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      char[] charArray0 = new char[0];
      stringReader0.read(charArray0);
      javaParserTokenManager0.getNextToken();
      Token token0 = new Token();
      StringReader stringReader1 = new StringReader("&6{\"-u:{yQuG(K!");
      StringReader stringReader2 = new StringReader("rZr");
      token0.endColumn = 0;
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader2, (-1486), 39);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-24);
      byteArray0[1] = (byte)51;
      byteArray0[2] = (byte)73;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1, 0);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager2.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager2.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line -1486, column 40.  Encountered: \"\\u007f\" (127), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.319904429847949
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String string0 = "\">>\"";
      StringReader stringReader0 = new StringReader("\">>\"");
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null, 1459);
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = Token.newToken((-1));
      javaParserTokenManager0.TokenLexicalActions(token0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.ReInit(javaCharStream0, 0);
      javaParserTokenManager0.SkipLexicalActions(token0);
      javaParserTokenManager0.SwitchTo(0);
      ByteArrayOutputStream byteArrayOutputStream0 = null;
      try {
        byteArrayOutputStream0 = new ByteArrayOutputStream((-2414));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative initial size: -2414
         //
         verifyException("java.io.ByteArrayOutputStream", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"<\"");
      StringReader stringReader1 = new StringReader(">>=");
      stringReader1.skip(1082);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 27, 1082, 18);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.4329372245069916
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StringReader stringReader0 = new StringReader("finally");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      char[] charArray0 = new char[5];
      token0.beginColumn = 0;
      Token token1 = new Token();
      token0.next = token1;
      Token.newToken(0);
      charArray0[0] = 'a';
      token1.beginLine = 0;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Zb4wFxw9@p(G:eR#s");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 32, 0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      Token token2 = javaParserTokenManager2.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(0, token2.kind);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      JavaCharStream javaCharStream0 = null;
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.jjFillToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.9775005220767727
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"<\"");
      char[] charArray0 = new char[8];
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      charArray0[0] = '$';
      stringReader0.read(charArray0);
      stringReader0.reset();
      StringReader stringReader1 = new StringReader("!'B)");
      char[] charArray1 = new char[4];
      charArray1[0] = '\"';
      charArray1[1] = '\\';
      charArray1[2] = '%';
      charArray1[3] = 'd';
      stringReader1.read(charArray1);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedInputStream0, '\'', 3648);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token token0 = token_GTToken0.next;
      javaParserTokenManager0.TokenLexicalActions((Token) null);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.jjFillToken();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"<\"");
      char[] charArray0 = new char[8];
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      charArray0[0] = '$';
      charArray0[1] = 'z';
      charArray0[2] = 'P';
      charArray0[3] = 'U';
      charArray0[4] = 'f';
      charArray0[5] = '.';
      charArray0[6] = 'Z';
      charArray0[7] = 'E';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 175);
      javaCharStream0.buffer = null;
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 0);
      javaParserTokenManager0.MoreLexicalActions();
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      javaParserTokenManager0.input_stream = null;
      // Undeclared exception!
      try { 
        javaParserTokenManager0.SwitchTo(963);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 963. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.290664210654739
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      pipedInputStream0.mark(0);
      char[] charArray0 = new char[1];
      charArray0[0] = 'w';
      javaCharStream0.nextCharBuf = charArray0;
      Token.GTToken token_GTToken0 = new Token.GTToken();
      token_GTToken0.image = "";
      javaParserTokenManager0.TokenLexicalActions(token_GTToken0);
      token_GTToken0.endColumn = (-1);
      javaParserTokenManager0.ReInit(javaCharStream0, 0);
      javaParserTokenManager0.SkipLexicalActions(token_GTToken0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.SwitchTo((-2414));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -2414. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"<\"");
      char[] charArray0 = new char[8];
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      charArray0[0] = '$';
      stringReader0.read(charArray0);
      stringReader0.reset();
      StringReader stringReader1 = new StringReader("!'B)");
      char[] charArray1 = new char[4];
      charArray1[0] = '\"';
      charArray1[1] = '\\';
      charArray1[2] = 'd';
      charArray1[3] = 'd';
      stringReader1.read(charArray1);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 4, (-649), 16);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.ReInit(javaCharStream0, (-649));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -649. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.5517398821980755
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      StringReader stringReader0 = new StringReader("&6{\"-u:{yQuG(K!");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      char[] charArray0 = new char[2];
      charArray0[0] = '\\';
      stringReader0.read(charArray0);
      javaParserTokenManager0.getNextToken();
      Token token0 = new Token();
      StringReader stringReader1 = new StringReader("vvpI");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, 0, 27);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 14.  Encountered: <EOF> after : \"\\\"-u:{yQuG(K!\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0524392116832186
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      StringReader stringReader0 = new StringReader("}Fg*2!Vm.0s");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      StringReader stringReader1 = new StringReader("");
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0, 1470, (-1));
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("}", token0.toString());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "#UZ=t!gNV/ScQnR+zb");
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = null;
      try {
        javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, (-1));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -1. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)18;
      byteArray0[1] = (byte)2;
      byteArray0[2] = (byte)27;
      byteArray0[3] = (byte)47;
      byteArray0[4] = (byte)63;
      byteArray0[5] = (byte)7;
      byteArray0[6] = (byte)24;
      byte byte0 = (byte)82;
      byteArray0[7] = (byte)82;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, dataInputStream0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0, (-2087), 77, (byte)18);
      JavaParserTokenManager javaParserTokenManager0 = null;
      try {
        javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, (byte)82);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 82. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }
}
