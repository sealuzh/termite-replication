/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 20:37:48 GMT 2019
 */

package weka.experiment;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import weka.experiment.ResultMatrix;
import weka.experiment.ResultMatrixCSV;
import weka.experiment.ResultMatrixGnuPlot;
import weka.experiment.ResultMatrixHTML;
import weka.experiment.ResultMatrixLatex;
import weka.experiment.ResultMatrixPlainText;
import weka.experiment.ResultMatrixSignificance;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ResultMatrix_ESTest extends ResultMatrix_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.880031286164663
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.RIGHT_PARENTHESES = "T1@";
      resultMatrixPlainText0.padString("T1@", 1175);
      resultMatrixPlainText0.LEFT_PARENTHESES = "T1@";
      resultMatrixPlainText0.toStringKey();
      int[][] intArray0 = new int[2][9];
      int[] intArray1 = new int[1];
      intArray0[0] = intArray1;
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setSignificance((-2218), (-994), 0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getSummaryTitle(1);
      resultMatrixLatex0.toStringMatrix();
      resultMatrixGnuPlot0.setRowOrder(intArray1);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixGnuPlot0);
      resultMatrixGnuPlot1.setPrintRowNames(true);
      resultMatrixGnuPlot0.getDisplayName();
      resultMatrixLatex0.enumerateColNamesTipText();
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.8230476785477574
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.m_MeanWidth = 1;
      String string0 = "\tWhether to remove the classname package prefixes from the\n\tfilter names in datasets.\n\t(default: no)";
      resultMatrixPlainText0.WIN_STRING = "\tWhether to remove the classname package prefixes from the\n\tfilter names in datasets.\n\t(default: no)";
      int int0 = 217;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(217, 10);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixSignificance0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixSignificance0);
      resultMatrixCSV0.toStringKey();
      resultMatrixSignificance0.getAverage(2292);
      resultMatrixCSV0.getOptions();
      int int1 = (-4295);
      int int2 = 4818;
      // Undeclared exception!
      resultMatrixSignificance0.toStringSummary();
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.4248047914345148
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.RIGHT_PARENTHESES = "T1@";
      resultMatrixPlainText0.padString("T1@", 1175);
      resultMatrixPlainText0.LEFT_PARENTHESES = "T1@";
      resultMatrixPlainText0.toStringKey();
      int[][] intArray0 = new int[2][9];
      int[] intArray1 = new int[0];
      intArray0[0] = intArray1;
      int[] intArray2 = new int[0];
      intArray0[1] = intArray2;
      int[][] intArray3 = new int[8][1];
      intArray3[0] = intArray2;
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.m_MeanWidth = 2;
      resultMatrixPlainText0.assign(resultMatrixLatex0);
      intArray3[1] = intArray1;
      intArray3[2] = intArray2;
      intArray3[3] = intArray1;
      resultMatrixLatex0.setRowOrder(intArray2);
      ResultMatrixSignificance resultMatrixSignificance0 = null;
      try {
        resultMatrixSignificance0 = new ResultMatrixSignificance((-3427), 655);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.3858907777235494
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      resultMatrixLatex0.getDisplayRow(0);
      int[][] intArray0 = new int[8][5];
      int[] intArray1 = new int[3];
      intArray1[1] = 1;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[4];
      intArray2[1] = 2;
      intArray2[2] = 1;
      intArray2[3] = 0;
      intArray0[4] = intArray2;
      int[] intArray3 = new int[3];
      intArray3[0] = 2;
      resultMatrixLatex0.setMeanWidth(1);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixLatex0);
      resultMatrixGnuPlot0.setMeanPrec((-2006));
      assertEquals(1, resultMatrixGnuPlot0.getMeanWidth());
      
      resultMatrixLatex0.setRowOrder(intArray1);
      assertEquals(1, resultMatrixLatex0.getMeanWidth());
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(2, 1448);
      resultMatrixSignificance0.getSummaryTitle(1448);
      resultMatrixSignificance0.getDefaultShowStdDev();
      assertEquals(1448, resultMatrixSignificance0.getRowCount());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.8884463999631023
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.toStringKey();
      resultMatrixLatex0.setColNameWidth(589);
      resultMatrixLatex0.setEnumerateColNames(false);
      resultMatrixLatex0.removeFilterName("\begin{table}[thb]\ncaption{label{labelname}Table Caption (Key)}\nscriptsize\n{centering\n\begin{tabular}{cl}\\\n(1) & col0 \\\nend{tabular}\n}\nend{table}\n");
      resultMatrixLatex0.setRowNameWidth(589);
      resultMatrixLatex0.getDefaultShowStdDev();
      resultMatrixLatex0.setSignificance(729, 1, 25);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getSummaryTitle(3598);
      resultMatrixLatex0.toStringMatrix();
      int[] intArray0 = new int[3];
      intArray0[0] = 3598;
      intArray0[1] = 1;
      intArray0[2] = 15;
      resultMatrixGnuPlot0.setRowOrder(intArray0);
      // Undeclared exception!
      try { 
        resultMatrixLatex0.setRanking((int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.9149406524467345
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.toStringKey();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      resultMatrixLatex1.setColNameWidth(2);
      resultMatrixLatex0.setEnumerateColNames(false);
      resultMatrixLatex0.removeFilterName("-unsupervised..*");
      resultMatrixLatex0.clearRanking();
      resultMatrixLatex0.setRowNameWidth(1);
      resultMatrixLatex0.getDefaultShowStdDev();
      ResultMatrixLatex resultMatrixLatex2 = new ResultMatrixLatex();
      resultMatrixLatex2.setSignificance((-2218), 589, 0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getSummaryTitle(1136);
      resultMatrixLatex1.toStringMatrix();
      int[] intArray0 = new int[9];
      intArray0[0] = 2;
      intArray0[1] = 1;
      resultMatrixGnuPlot0.setRowOrder(intArray0);
      resultMatrixGnuPlot0.setPrintRowNames(false);
      resultMatrixGnuPlot0.getDisplayName();
      assertTrue(resultMatrixGnuPlot0.getEnumerateRowNames());
      
      resultMatrixLatex2.enumerateColNamesTipText();
      resultMatrixLatex2.getDisplayName();
      assertFalse(resultMatrixLatex2.getRemoveFilterName());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.4658406218756275
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      resultMatrixLatex0.getDisplayRow(0);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      resultMatrixLatex1.setStdDevPrec(2);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(694, 2);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV1);
      resultMatrixGnuPlot0.setSignificanceWidth(2645);
      resultMatrixLatex1.setMeanWidth((-112));
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot1.setMeanPrec(0);
      int[] intArray0 = new int[7];
      intArray0[0] = 2645;
      intArray0[1] = 2;
      intArray0[2] = 2;
      intArray0[3] = 495;
      intArray0[4] = 0;
      intArray0[5] = 495;
      intArray0[6] = 0;
      resultMatrixLatex1.setRowOrder(intArray0);
      ResultMatrixSignificance resultMatrixSignificance0 = null;
      try {
        resultMatrixSignificance0 = new ResultMatrixSignificance(0, (-2217));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.9270211795500867
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.colNameWidthTipText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDefaultPrintColNames();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(748, 1);
      resultMatrixSignificance0.WIN_STRING = "]";
      resultMatrixPlainText0.m_RemoveFilterName = true;
      resultMatrixSignificance0.padString(")", 0, true);
      resultMatrixSignificance0.setPrintColNames(false);
      resultMatrixSignificance0.setMeanPrec(0);
      resultMatrixSignificance0.toStringRanking();
      resultMatrixSignificance0.getRowCount();
      resultMatrixCSV0.setMeanPrec(748);
      resultMatrixCSV0.isStdDev(2);
      resultMatrixCSV0.getDefaultRowNameWidth();
      resultMatrixPlainText0.setPrintColNames(false);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "]";
      stringArray0[1] = "";
      stringArray0[2] = "\tWhether to output column names or just numbers representing them.\n\t(default: no)";
      stringArray0[3] = ")";
      stringArray0[4] = "v";
      stringArray0[5] = "]";
      stringArray0[6] = "The maximum width of the column names (0 = optimal).";
      stringArray0[7] = " ";
      stringArray0[8] = "(";
      resultMatrixPlainText0.setOptions(stringArray0);
      resultMatrixSignificance0.getSignificanceCount(11, 769);
      resultMatrixSignificance0.removeFilterName("$");
      assertEquals(0, resultMatrixSignificance0.getMeanPrec());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.504505883571225
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.colNameWidthTipText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDefaultPrintColNames();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(748, 1);
      resultMatrixSignificance0.WIN_STRING = "]";
      resultMatrixPlainText0.m_RemoveFilterName = true;
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixSignificance0);
      resultMatrixCSV1.toStringKey();
      resultMatrixSignificance0.getAverage((-1017));
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 0);
      resultMatrixLatex0.setCountWidth(1);
      resultMatrixCSV1.setRowHidden(702, true);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixLatex0);
      resultMatrixGnuPlot0.getDefaultRowNameWidth();
      resultMatrixGnuPlot0.getDisplayName();
      assertEquals(1, resultMatrixLatex0.getCountWidth());
      
      resultMatrixSignificance0.getRemoveFilterName();
      assertEquals(748, resultMatrixSignificance0.getVisibleColCount());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.902677081564727
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      String string0 = resultMatrixPlainText0.doubleToString(3214.78123, 0);
      assertEquals("3215.", string0);
      
      resultMatrixPlainText0.setPrintColNames(false);
      resultMatrixPlainText0.getRevision();
      assertEquals(1, resultMatrixPlainText0.getVisibleColCount());
      assertTrue(resultMatrixPlainText0.getDefaultEnumerateColNames());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2, 2);
      String string1 = resultMatrixGnuPlot0.toStringMatrix();
      assertEquals("\n##################\n# file: plot.dat #\n##################\n# generated by WEKA 3.7.7\n# contains the data for the plot\n\n# key for the x-axis\n# 1 - row0\n# 2 - row1\n\n# data for the plot\n1 '' ''\n2 '' ''\n#######\n# end #\n#######\n\n##################\n# file: plot.scr #\n##################\n# generated by WEKA 3.7.7\n# script to plot the data\n\n# display it in a window:\nset terminal x11\nset output\n\n# to display all data rows:\nset xrange [0:3]\n\n# axis labels, e.g.:\n#set xlabel \"Datasets\"\n#set ylabel \"Accuracy in %\"\n\n# the plot commands\nplot \"plot.dat\" using 1:2 with lines title \"col0\"\nreplot \"plot.dat\" using 1:3 with lines title \"col1\"\n\n# generate ps:\n#set terminal postscript\n#set output \"plot.ps\"\n#replot\n\n# generate png:\n#set terminal png size 800,600\n#set output \"plot.png\"\n#replot\n\n# wait for user to hit <Return>\npause -1\n#######\n# end #\n#######\n", string1);
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(2, 0);
      String string2 = resultMatrixLatex0.toStringMatrix();
      assertEquals("\\begin{table}[thb]\n\\caption{\\label{labelname}Table Caption}\n\\footnotesize\n{\\centering \\begin{tabular}{lrr@{\\hspace{0.1cm}}c}\n\\\\\n\\hline\nDataset & (1)& (2) & \\\\\n\\hline\n\\hline\n\\multicolumn{4}{c}{$\\circ$, $\\bullet$ statistically significant improvement or degradation}\\\\\n\\end{tabular} \\footnotesize \\par}\n\\end{table}\n", string2);
      
      resultMatrixGnuPlot0.setRowOrder((int[]) null);
      resultMatrixGnuPlot0.setPrintRowNames(false);
      resultMatrixGnuPlot0.getDisplayName();
      assertEquals(50, resultMatrixGnuPlot0.getColNameWidth());
      
      resultMatrixLatex0.enumerateColNamesTipText();
      assertEquals(0, resultMatrixLatex0.getColNameWidth());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.344816011892555
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      resultMatrixLatex0.getDisplayRow(0);
      int[][] intArray0 = new int[8][5];
      int[] intArray1 = new int[2];
      intArray1[1] = 1;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[4];
      intArray2[1] = 2;
      intArray2[2] = 1;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.padString("[", 0, true);
      resultMatrixSignificance0.setPrintColNames(true);
      resultMatrixSignificance0.setMeanPrec(2);
      resultMatrixSignificance0.toStringRanking();
      resultMatrixSignificance0.getRowCount();
      int int0 = (-2257);
      ResultMatrixCSV resultMatrixCSV1 = null;
      try {
        resultMatrixCSV1 = new ResultMatrixCSV((-2257), 2498);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=4.042311929151454
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ResultMatrixLatex.main((String[]) null);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      assertEquals(0, resultMatrixLatex0.getCountWidth());
      
      resultMatrixLatex0.m_CountWidth = 2;
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      resultMatrixLatex0.assign(resultMatrixPlainText0);
      resultMatrixLatex0.toStringKey();
      resultMatrixLatex0.setColNameWidth((-717));
      resultMatrixLatex0.m_PrintColNames = false;
      resultMatrixLatex0.setEnumerateColNames(false);
      resultMatrixLatex0.removeFilterName(" ");
      resultMatrixLatex0.setRowNameWidth((-717));
      resultMatrixLatex0.getDefaultShowStdDev();
      resultMatrixLatex0.setSignificance(3, 3, 3);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getSummaryTitle(0);
      int[] intArray0 = new int[8];
      intArray0[0] = 1;
      intArray0[1] = 2;
      intArray0[2] = 2;
      intArray0[4] = 1;
      intArray0[5] = 3;
      intArray0[6] = 0;
      intArray0[7] = 0;
      resultMatrixGnuPlot0.setRowOrder(intArray0);
      resultMatrixGnuPlot0.setPrintRowNames(true);
      resultMatrixGnuPlot0.getDisplayName();
      resultMatrixLatex0.enumerateColNamesTipText();
      resultMatrixPlainText0.getMeanPrec();
      resultMatrixPlainText0.significanceWidthTipText();
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.2910358629127177
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.toStringRanking();
      resultMatrixHTML0.doubleToString((-3345.0238309384), 0);
      // Undeclared exception!
      try { 
        resultMatrixHTML0.assign((ResultMatrix) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.8253140657622517
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.colNameWidthTipText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDefaultPrintColNames();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(748, 1);
      resultMatrixSignificance0.WIN_STRING = "]";
      resultMatrixPlainText0.m_RemoveFilterName = true;
      resultMatrixSignificance0.padString(")", 0, true);
      resultMatrixSignificance0.setPrintColNames(false);
      resultMatrixSignificance0.setMeanPrec(0);
      resultMatrixSignificance0.toStringRanking();
      resultMatrixSignificance0.getRowCount();
      resultMatrixCSV0.setMeanPrec(748);
      resultMatrixCSV0.isStdDev(2);
      resultMatrixCSV0.getDefaultRowNameWidth();
      resultMatrixPlainText0.setPrintColNames(false);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "]";
      stringArray0[1] = "";
      stringArray0[2] = "\tWhether to output column names or just numbers representing them.\n\t(default: no)";
      stringArray0[3] = ")";
      stringArray0[4] = "v";
      stringArray0[5] = "]";
      stringArray0[6] = "The maximum width of the column names (0 = optimal).";
      stringArray0[7] = " ";
      stringArray0[8] = "(";
      resultMatrixPlainText0.setOptions(stringArray0);
      resultMatrixCSV0.isStdDev(733);
      assertEquals(748, resultMatrixCSV0.getMeanPrec());
      
      resultMatrixSignificance0.getRowOrder();
      assertEquals(0, resultMatrixSignificance0.getDefaultCountWidth());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.279131424005105
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixSignificance0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      String[] stringArray0 = new String[5];
      stringArray0[0] = ")";
      stringArray0[1] = " ";
      stringArray0[2] = " ";
      stringArray0[3] = "*";
      stringArray0[4] = "v";
      resultMatrixCSV0.m_RowNames = stringArray0;
      resultMatrixCSV0.toStringSummary();
      resultMatrixSignificance0.getAverage(0);
      resultMatrixSignificance0.setSize(30, 55);
      ResultMatrixLatex resultMatrixLatex0 = null;
      try {
        resultMatrixLatex0 = new ResultMatrixLatex((-707), 0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.275945590235711
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(2, 2);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText1);
      resultMatrixLatex0.listOptions();
      resultMatrixPlainText1.padString(" ", 6, false);
      // Undeclared exception!
      resultMatrixLatex0.setSize(97, 596);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.4306640524586234
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixSignificance0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      resultMatrixCSV0.toStringKey();
      resultMatrixSignificance0.getAverage(0);
      int int0 = (-707);
      ResultMatrixLatex resultMatrixLatex0 = null;
      try {
        resultMatrixLatex0 = new ResultMatrixLatex((-707), 0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.6268889319862456
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(32, 5);
      resultMatrixPlainText0.m_RemoveFilterName = false;
      int[] intArray0 = new int[5];
      intArray0[0] = 5;
      intArray0[1] = 5;
      intArray0[2] = 1820;
      intArray0[3] = 1;
      intArray0[4] = 0;
      resultMatrixPlainText0.m_RowOrder = intArray0;
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      resultMatrixLatex0.listOptions();
      resultMatrixLatex0.setSize(0, 596);
      resultMatrixLatex0.getDefaultEnumerateColNames();
      // Undeclared exception!
      try { 
        resultMatrixLatex0.toStringMatrix();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.76432283758651
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.toStringRanking();
      resultMatrixLatex0.isSignificance(0);
      resultMatrixLatex0.getDefaultMeanPrec();
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
      
      String string0 = resultMatrixLatex0.toStringMatrix();
      assertEquals("\\begin{table}[thb]\n\\caption{\\label{labelname}Table Caption}\n\\footnotesize\n{\\centering \\begin{tabular}{lr}\n\\\\\n\\hline\nDataset & (1)\\\\\n\\hline\nrow0 &    \\\\\n\\hline\n\\multicolumn{2}{c}{$\\circ$, $\\bullet$ statistically significant improvement or degradation}\\\\\n\\end{tabular} \\footnotesize \\par}\n\\end{table}\n", string0);
      
      resultMatrixLatex0.getDefaultShowAverage();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixLatex0);
      resultMatrixGnuPlot0.getDefaultEnumerateColNames();
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      assertEquals(0, resultMatrixGnuPlot0.getColNameWidth());
      assertEquals(0, resultMatrixGnuPlot0.getRowNameWidth());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.073291247675771
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(3, 3);
      int[] intArray0 = new int[1];
      resultMatrixGnuPlot0.toStringSummary();
      resultMatrixGnuPlot0.getSummaryTitle((-790));
      String[] stringArray0 = new String[6];
      stringArray0[0] = "v";
      stringArray0[1] = "W";
      stringArray0[2] = "";
      stringArray0[3] = "-summary data not set-";
      stringArray0[4] = "";
      stringArray0[5] = "Inf";
      resultMatrixGnuPlot0.m_RowNames = stringArray0;
      intArray0[0] = 3;
      String[] stringArray1 = new String[5];
      stringArray1[0] = "";
      stringArray1[1] = "";
      stringArray1[2] = "";
      stringArray1[3] = "*";
      stringArray1[4] = " ";
      resultMatrixGnuPlot0.m_RowNames = stringArray1;
      resultMatrixGnuPlot0.getSummaryTitle((-3286));
      resultMatrixGnuPlot0.m_RowOrder = intArray0;
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.setSummary((int[][]) null, (int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.5092410971022305
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.m_MeanWidth = 1;
      resultMatrixPlainText0.WIN_STRING = "\tWhether to remove the classname package prefixes from the\n\tfilter names in datasets.\n\t(default: no)";
      resultMatrixPlainText0.getDefaultCountWidth();
      resultMatrixPlainText0.getDefaultPrintColNames();
      resultMatrixPlainText0.getPrintColNames();
      resultMatrixPlainText0.getDisplayRow(97);
      resultMatrixPlainText0.getSummaryTitle(0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      resultMatrixPlainText0.padString("\".2-p\"e", 1, true);
      resultMatrixPlainText0.getRowName(0);
      resultMatrixSignificance0.clear();
      resultMatrixSignificance0.m_ShowStdDev = true;
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.doubleToString((-3345.0238309384), (-5263));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.549416238000993
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getDefaultCountWidth();
      resultMatrixPlainText0.getDefaultPrintColNames();
      resultMatrixPlainText0.getPrintColNames();
      resultMatrixPlainText0.getDisplayRow(1321);
      resultMatrixPlainText0.getSummaryTitle(97);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      assertEquals(25, resultMatrixSignificance0.getRowNameWidth());
      
      resultMatrixPlainText0.padString("\t", 37, true);
      resultMatrixPlainText0.getRowName(4);
      resultMatrixSignificance0.clear();
      resultMatrixSignificance0.doubleToString(5, 1);
      resultMatrixSignificance0.globalInfo();
      resultMatrixSignificance0.setCountWidth((-5263));
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(1, 0);
      resultMatrixPlainText1.globalInfo();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.toStringRanking();
      resultMatrixPlainText0.doubleToString(1, 1);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixLatex0.clear();
      resultMatrixPlainText1.toStringSummary();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(0, 2972);
      boolean boolean0 = resultMatrixHTML1.getEnumerateColNames();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.4222132679272725
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.m_PrintColNames = true;
      resultMatrixSignificance0.getDefaultShowAverage();
      int[][] intArray0 = new int[1][9];
      int[] intArray1 = new int[6];
      intArray1[0] = 2;
      resultMatrixSignificance0.m_RemoveFilterName = true;
      intArray1[1] = 0;
      intArray1[2] = 1;
      intArray1[3] = 2;
      intArray1[4] = 0;
      intArray1[5] = 2;
      resultMatrixSignificance0.listOptions();
      intArray0[0] = intArray1;
      resultMatrixSignificance0.setSummary(intArray0, intArray0);
      resultMatrixSignificance0.setShowAverage(false);
      resultMatrixSignificance0.m_StdDevWidth = 2;
      resultMatrixSignificance0.doubleToString(10.0, 0);
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.padString((String) null, 2, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.411662555400875
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.toStringSummary();
      resultMatrixLatex0.setStdDevPrec(1075);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixLatex0);
      resultMatrixGnuPlot0.setSignificanceWidth(495);
      double[][] doubleArray0 = new double[3][4];
      double[] doubleArray1 = new double[0];
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[1];
      doubleArray2[0] = (double) 2;
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[8];
      doubleArray3[0] = 1.0;
      doubleArray3[1] = (double) 0;
      doubleArray3[2] = (double) 495;
      doubleArray3[3] = (double) 2;
      doubleArray3[4] = (double) 2;
      doubleArray3[5] = (double) 495;
      doubleArray3[6] = (double) 495;
      doubleArray3[7] = (double) 2;
      doubleArray0[2] = doubleArray3;
      resultMatrixGnuPlot0.m_StdDev = doubleArray0;
      resultMatrixLatex0.setMeanWidth(2);
      resultMatrixGnuPlot0.setMeanPrec(1389);
      int[] intArray0 = new int[5];
      intArray0[0] = 2;
      intArray0[1] = 1;
      intArray0[2] = 1075;
      intArray0[3] = (-2217);
      intArray0[4] = (-1950);
      resultMatrixLatex0.setRowOrder(intArray0);
      assertEquals(2, resultMatrixLatex0.getMeanWidth());
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(1089, 0);
      resultMatrixSignificance0.getSummaryTitle((-1));
      resultMatrixSignificance0.getDefaultShowStdDev();
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.7794375926014068
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(5, 5);
      int[] intArray0 = new int[1];
      resultMatrixHTML0.setMeanWidth(5);
      intArray0[0] = 0;
      resultMatrixHTML0.m_RowOrder = intArray0;
      resultMatrixHTML0.setEnumerateColNames(false);
      resultMatrixHTML0.m_ColNameWidth = 0;
      resultMatrixHTML0.getDisplayName();
      resultMatrixHTML0.setMeanPrec(5);
      resultMatrixHTML0.showAverageTipText();
      resultMatrixHTML0.getColNameWidth();
      assertEquals(5, resultMatrixHTML0.getMeanWidth());
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      String string0 = resultMatrixLatex0.toStringMatrix();
      assertEquals("\\begin{table}[thb]\n\\caption{\\label{labelname}Table Caption}\n\\footnotesize\n{\\centering \\begin{tabular}{lr}\n\\\\\n\\hline\nDataset & (1)\\\\\n\\hline\nrow0 &    \\\\\n\\hline\n\\multicolumn{2}{c}{$\\circ$, $\\bullet$ statistically significant improvement or degradation}\\\\\n\\end{tabular} \\footnotesize \\par}\n\\end{table}\n", string0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.4275616102525968
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.RIGHT_PARENTHESES = "T1@";
      resultMatrixPlainText0.padString("T1@", 1175);
      resultMatrixPlainText0.LEFT_PARENTHESES = "T1@";
      resultMatrixPlainText0.toStringKey();
      int[][] intArray0 = new int[2][9];
      int[] intArray1 = new int[0];
      intArray0[0] = intArray1;
      int[] intArray2 = new int[0];
      intArray0[1] = intArray2;
      int[][] intArray3 = new int[8][1];
      intArray3[0] = intArray2;
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.m_MeanWidth = 2;
      resultMatrixPlainText0.assign(resultMatrixLatex0);
      intArray3[1] = intArray1;
      intArray3[2] = intArray2;
      intArray3[3] = intArray1;
      intArray3[4] = intArray2;
      int[] intArray4 = new int[1];
      intArray4[0] = 1;
      intArray3[5] = intArray4;
      intArray3[6] = intArray2;
      intArray3[7] = intArray2;
      resultMatrixPlainText0.setSummary(intArray0, intArray3);
      resultMatrixPlainText0.getDefaultRemoveFilterName();
      assertEquals(2, resultMatrixPlainText0.getMeanWidth());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.3152739318325937
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.toStringSummary();
      resultMatrixLatex0.getDefaultPrintColNames();
      resultMatrixLatex0.getSummaryTitle(1972);
      int[][] intArray0 = new int[6][7];
      int[] intArray1 = new int[9];
      intArray1[0] = 2;
      intArray1[1] = 0;
      intArray1[2] = 2;
      intArray1[3] = 1972;
      intArray1[4] = 1;
      intArray1[5] = 1972;
      intArray1[6] = 0;
      intArray1[7] = 0;
      intArray1[8] = 1972;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[3];
      intArray2[0] = 1;
      intArray2[1] = 0;
      intArray2[2] = 1;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[1];
      intArray3[0] = 0;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[9];
      intArray4[0] = 1;
      intArray4[1] = 0;
      intArray4[2] = 0;
      intArray4[3] = 1972;
      intArray4[4] = 2;
      intArray4[5] = 2;
      intArray4[6] = 1;
      intArray4[7] = 0;
      intArray4[8] = 0;
      intArray0[3] = intArray4;
      int[] intArray5 = new int[1];
      intArray5[0] = 0;
      intArray0[4] = intArray5;
      int[] intArray6 = new int[4];
      intArray6[0] = 1972;
      intArray6[1] = 1;
      intArray6[2] = 1972;
      intArray6[3] = 2;
      intArray0[5] = intArray6;
      // Undeclared exception!
      try { 
        resultMatrixLatex0.setSummary(intArray0, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.4275616102525968
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.RIGHT_PARENTHESES = "T1@";
      resultMatrixPlainText0.padString("T1@", 1175);
      resultMatrixPlainText0.LEFT_PARENTHESES = "T1@";
      resultMatrixPlainText0.toStringKey();
      int[][] intArray0 = new int[2][9];
      int[] intArray1 = new int[0];
      intArray0[0] = intArray1;
      int[] intArray2 = new int[0];
      intArray0[1] = intArray2;
      int[][] intArray3 = new int[8][1];
      intArray3[0] = intArray2;
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.m_MeanWidth = 2;
      double[][] doubleArray0 = new double[1][5];
      double[] doubleArray1 = new double[5];
      doubleArray1[0] = (double) 1;
      doubleArray1[1] = 1404.2;
      doubleArray1[2] = (double) 2;
      doubleArray1[3] = (double) 0;
      doubleArray1[4] = (double) 2;
      doubleArray0[0] = doubleArray1;
      resultMatrixPlainText0.m_StdDev = doubleArray0;
      resultMatrixPlainText0.assign(resultMatrixLatex0);
      intArray3[1] = intArray1;
      intArray3[2] = intArray2;
      intArray3[3] = intArray1;
      intArray3[4] = intArray2;
      int[] intArray4 = new int[1];
      intArray4[0] = 1;
      intArray3[5] = intArray4;
      intArray3[6] = intArray2;
      intArray3[7] = intArray2;
      resultMatrixPlainText0.setSummary(intArray0, intArray3);
      resultMatrixPlainText0.getDefaultRemoveFilterName();
      assertEquals(0, resultMatrixPlainText0.getCountWidth());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.43289740664448
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.removeFilterName("");
      resultMatrixSignificance0.getSummaryTitle(0);
      resultMatrixSignificance0.getDisplayCol(0);
      resultMatrixSignificance0.getDefaultMeanWidth();
      resultMatrixSignificance0.getColOrder();
      resultMatrixSignificance0.getDefaultShowStdDev();
      ResultMatrixLatex resultMatrixLatex0 = null;
      try {
        resultMatrixLatex0 = new ResultMatrixLatex(523, (-1066));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.664099334678681
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.toStringKey();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      resultMatrixLatex1.setColNameWidth(2);
      resultMatrixLatex0.setEnumerateColNames(false);
      resultMatrixLatex0.removeFilterName("-unsupervised..*");
      resultMatrixLatex0.clearRanking();
      resultMatrixLatex0.setRowNameWidth(1);
      assertEquals(1, resultMatrixLatex0.getRowNameWidth());
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getDisplayCol(2);
      int int0 = ResultMatrix.SIGNIFICANCE_TIE;
      resultMatrixSignificance0.getColOrder();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance();
      resultMatrixSignificance1.getDefaultPrintColNames();
      assertEquals(1, resultMatrixSignificance1.getVisibleRowCount());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=3.9361010380988595
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      String[] stringArray0 = new String[9];
      stringArray0[0] = " ";
      resultMatrixCSV0.setMeanWidth(0);
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      
      stringArray0[1] = "v";
      stringArray0[2] = "fq3td^JZmnW5";
      stringArray0[3] = " ";
      stringArray0[4] = "plot";
      stringArray0[5] = "*";
      stringArray0[6] = "[";
      stringArray0[7] = "v";
      stringArray0[8] = "[";
      ResultMatrixCSV.main(stringArray0);
      resultMatrixCSV0.m_PrintRowNames = false;
      resultMatrixCSV0.getRevision();
      resultMatrixCSV0.getColOrder();
      resultMatrixCSV0.toStringRanking();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      resultMatrixSignificance0.setCountWidth(1);
      resultMatrixSignificance0.getDefaultRowNameWidth();
      resultMatrixSignificance0.getCountWidth();
      resultMatrixSignificance0.getDefaultPrintColNames();
      resultMatrixSignificance0.getDefaultEnumerateRowNames();
      resultMatrixCSV0.setStdDevPrec((-1950));
      String[][] stringArray1 = new String[9][7];
      stringArray1[0] = stringArray0;
      String[] stringArray2 = new String[9];
      stringArray2[0] = " ";
      stringArray2[1] = "[";
      stringArray2[2] = "]couGS9'&";
      stringArray2[3] = "*";
      stringArray2[4] = "v";
      stringArray2[5] = "fq3td^JZmnW5";
      stringArray2[6] = "fq3td^JZmnW5";
      stringArray2[7] = "[";
      stringArray2[8] = " ";
      stringArray1[1] = stringArray2;
      stringArray1[2] = stringArray0;
      stringArray1[3] = stringArray0;
      stringArray1[4] = stringArray0;
      stringArray1[5] = stringArray0;
      stringArray1[6] = stringArray0;
      String[] stringArray3 = new String[2];
      stringArray3[0] = "v";
      stringArray3[1] = "# display it in a window:\n";
      stringArray1[7] = stringArray3;
      stringArray1[8] = stringArray0;
      resultMatrixSignificance0.getColSize(stringArray1, 1448, true, true);
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      assertEquals(1, resultMatrixCSV0.getRowCount());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=4.171017851343439
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(3598, 0);
      String[] stringArray0 = new String[3];
      stringArray0[0] = " ";
      stringArray0[1] = " ";
      resultMatrixLatex0.m_RowNameWidth = 0;
      resultMatrixLatex0.m_RemoveFilterName = true;
      assertEquals(3598, resultMatrixLatex0.getVisibleColCount());
      
      stringArray0[2] = " ";
      resultMatrixLatex0.setOptions(stringArray0);
      ResultMatrixSignificance.main(stringArray0);
      resultMatrixLatex0.getShowAverage();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2, 0);
      resultMatrixGnuPlot0.getRevision();
      resultMatrixLatex0.setMeanWidth(0);
      assertEquals(0, resultMatrixLatex0.getRowNameWidth());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.284884854181267
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setRowNameWidth(3);
      int int0 = 2;
      resultMatrixPlainText0.clearHeader();
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.setSize(2, (-1131));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.3833116586462486
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      int int0 = 0;
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 0);
      resultMatrixHTML0.addHeader("z)pb34~", "z)pb34~");
      int int1 = (-1169);
      resultMatrixHTML0.m_RowNameWidth = (-1169);
      String[] stringArray0 = new String[0];
      resultMatrixHTML0.m_ColNames = stringArray0;
      resultMatrixHTML0.toStringKey();
      resultMatrixHTML0.toStringKey();
      resultMatrixHTML0.enumerateColNamesTipText();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.padString("weka.experiment.ResultMatrixGnuPlot", 0);
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=4.002576922745925
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ResultMatrixLatex.main((String[]) null);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.m_CountWidth = 29;
      resultMatrixLatex0.toStringKey();
      resultMatrixLatex0.setColNameWidth((-717));
      resultMatrixLatex0.m_PrintColNames = false;
      resultMatrixLatex0.setEnumerateColNames(false);
      resultMatrixLatex0.removeFilterName("pBY+1*q\"F");
      resultMatrixLatex0.setRowNameWidth((-717));
      resultMatrixLatex0.getDefaultShowStdDev();
      resultMatrixLatex0.setSignificance(3, 3, 3);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getSummaryTitle(1);
      int[] intArray0 = new int[8];
      intArray0[0] = 1;
      intArray0[1] = 2;
      intArray0[2] = 2;
      intArray0[3] = 1;
      intArray0[4] = 1;
      intArray0[5] = 3;
      intArray0[6] = 1;
      String string0 = resultMatrixLatex0.toStringMatrix();
      assertEquals("\\begin{table}[thb]\n\\caption{\\label{labelname}Table Caption}\n\\footnotesize\n{\\centering \\begin{tabular}{lr}\n\\\\\n\\hline\nDataset & \\\\\n\\hline\nrow0 & \\\\\n\\hline\n\\multicolumn{2}{c}{$\\circ$, $\\bullet$ statistically significant improvement or degradation}\\\\\n\\end{tabular} \\footnotesize \\par}\n\\end{table}\n", string0);
      
      intArray0[7] = 1;
      resultMatrixGnuPlot0.setRowOrder(intArray0);
      resultMatrixGnuPlot0.setPrintRowNames(true);
      resultMatrixGnuPlot0.getDisplayName();
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
      
      resultMatrixLatex0.enumerateColNamesTipText();
      assertFalse(resultMatrixLatex0.getEnumerateRowNames());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=3.329154639477423
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixHTML0);
      resultMatrixHTML0.m_EnumerateRowNames = true;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      resultMatrixSignificance0.meanWidthTipText();
      resultMatrixGnuPlot0.globalInfo();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      String string0 = resultMatrixPlainText0.toStringKey();
      assertEquals("Key:\n(1) col0\n", string0);
      
      resultMatrixHTML0.getDefaultRowNameWidth();
      assertFalse(resultMatrixHTML0.getRemoveFilterName());
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(25, resultMatrixHTML0.getRowNameWidth());
      assertTrue(resultMatrixHTML0.getPrintRowNames());
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
      assertEquals(1, resultMatrixCSV0.getRowCount());
      assertEquals(0, resultMatrixHTML0.getDefaultColNameWidth());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.3976033235452654
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.m_EnumerateColNames = false;
      Vector<Vector<Object>> vector0 = new Vector<Vector<Object>>();
      vector0.iterator();
      resultMatrixLatex0.m_HeaderKeys = vector0;
      boolean boolean0 = resultMatrixLatex0.isMean(0);
      assertFalse(boolean0);
      
      resultMatrixLatex0.getSignificanceWidth();
      assertEquals(0, resultMatrixLatex0.getDefaultRowNameWidth());
      assertEquals(0, resultMatrixLatex0.getColNameWidth());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.m_StdDev = null;
      resultMatrixGnuPlot0.getRevision();
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultStdDevPrec());
      assertFalse(resultMatrixGnuPlot0.getDefaultRemoveFilterName());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.90229329273182
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      String string0 = resultMatrixSignificance0.getSummaryTitle(0);
      assertEquals("a", string0);
      
      int int0 = resultMatrixSignificance0.getDisplayCol(0);
      assertEquals(0, int0);
      assertEquals(1, resultMatrixSignificance0.getColCount());
      assertEquals(1, resultMatrixSignificance0.getRowCount());
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      resultMatrixPlainText0.setPrintColNames(false);
      resultMatrixPlainText0.getRevision();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2, 1);
      String string1 = resultMatrixGnuPlot0.toStringMatrix();
      assertEquals("\n##################\n# file: plot.dat #\n##################\n# generated by WEKA 3.7.7\n# contains the data for the plot\n\n# key for the x-axis\n# 1 - row0\n\n# data for the plot\n1 '' ''\n#######\n# end #\n#######\n\n##################\n# file: plot.scr #\n##################\n# generated by WEKA 3.7.7\n# script to plot the data\n\n# display it in a window:\nset terminal x11\nset output\n\n# to display all data rows:\nset xrange [0:2]\n\n# axis labels, e.g.:\n#set xlabel \"Datasets\"\n#set ylabel \"Accuracy in %\"\n\n# the plot commands\nplot \"plot.dat\" using 1:2 with lines title \"col0\"\nreplot \"plot.dat\" using 1:3 with lines title \"col1\"\n\n# generate ps:\n#set terminal postscript\n#set output \"plot.ps\"\n#replot\n\n# generate png:\n#set terminal png size 800,600\n#set output \"plot.png\"\n#replot\n\n# wait for user to hit <Return>\npause -1\n#######\n# end #\n#######\n", string1);
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(1, 278);
      resultMatrixCSV0.toStringMatrix();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      resultMatrixHTML0.getColName(1);
      String[] stringArray0 = resultMatrixHTML0.getOptions();
      assertEquals(18, stringArray0.length);
      
      resultMatrixHTML0.globalInfo();
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(50, resultMatrixHTML0.getRowNameWidth());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
      
      resultMatrixCSV0.setRowHidden(1, false);
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.8142706218228692
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.doubleToString(3214.78123, 0);
      resultMatrixPlainText0.setPrintColNames(false);
      resultMatrixPlainText0.getRevision();
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2, 2);
      assertEquals(2, resultMatrixGnuPlot0.getVisibleColCount());
      
      resultMatrixGnuPlot0.toStringMatrix();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(1, 3);
      resultMatrixCSV0.toStringMatrix();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      resultMatrixHTML0.globalInfo();
      resultMatrixCSV0.setRowHidden(0, true);
      resultMatrixHTML0.setCount(34, 2);
      resultMatrixCSV0.stdDevWidthTipText();
      assertEquals(2, resultMatrixCSV0.getVisibleRowCount());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=3.8429794209290957
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "(";
      stringArray0[1] = "v";
      stringArray0[2] = ")";
      stringArray0[3] = "v";
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 2;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = (double) 1;
      doubleArray0[4] = (double) 2;
      Vector<Vector<Object>> vector0 = new Vector<Vector<Object>>();
      resultMatrixPlainText0.m_HeaderKeys = vector0;
      resultMatrixPlainText0.clearSummary();
      doubleArray0[5] = (double) 1;
      doubleArray0[6] = (double) 2;
      doubleArray0[7] = (double) 2;
      resultMatrixPlainText0.m_Counts = doubleArray0;
      stringArray0[4] = "*";
      stringArray0[5] = "(";
      Vector<Object> vector1 = new Vector<Object>();
      vector0.add(vector1);
      stringArray0[6] = "(";
      stringArray0[7] = ")";
      resultMatrixPlainText0.listOptions();
      resultMatrixPlainText0.setOptions(stringArray0);
      resultMatrixPlainText0.padString(")", (-1863), true);
      boolean boolean0 = resultMatrixPlainText0.getShowAverage();
      assertFalse(resultMatrixPlainText0.getEnumerateColNames());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.339433260402604
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "(";
      stringArray0[1] = "v";
      stringArray0[2] = ")";
      stringArray0[3] = "v";
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 2;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = (double) 1;
      doubleArray0[4] = (double) 2;
      Vector<Vector<Object>> vector0 = new Vector<Vector<Object>>();
      resultMatrixPlainText0.m_HeaderKeys = vector0;
      resultMatrixPlainText0.clearSummary();
      doubleArray0[5] = (double) 1;
      doubleArray0[6] = (double) 2;
      doubleArray0[7] = (double) 2;
      resultMatrixPlainText0.m_Counts = doubleArray0;
      stringArray0[4] = "*";
      stringArray0[5] = "(";
      Vector<Object> vector1 = new Vector<Object>();
      vector0.add(vector1);
      resultMatrixPlainText0.listOptions();
      try { 
        resultMatrixPlainText0.setOptions(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.4384569066223696
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getSummaryTitle(0);
      resultMatrixSignificance0.getDisplayCol(0);
      int int0 = ResultMatrix.SIGNIFICANCE_TIE;
      resultMatrixSignificance0.getColOrder();
      resultMatrixSignificance0.getDefaultPrintColNames();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 1);
      resultMatrixCSV0.toStringKey();
      resultMatrixLatex0.getCount(0);
      // Undeclared exception!
      try { 
        resultMatrixLatex0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=3.3438660264490183
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      String string0 = resultMatrixSignificance0.getSummaryTitle(1);
      assertEquals("b", string0);
      
      int int0 = resultMatrixSignificance0.getDisplayCol(1);
      assertEquals((-1), int0);
      
      int int1 = ResultMatrix.SIGNIFICANCE_TIE;
      resultMatrixSignificance0.getColOrder();
      resultMatrixSignificance0.getDefaultPrintColNames();
      assertEquals(1, resultMatrixSignificance0.getRowCount());
      assertEquals(0, resultMatrixSignificance0.getColNameWidth());
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertEquals(1, resultMatrixSignificance0.getVisibleColCount());
      assertEquals(2, resultMatrixSignificance0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=3.5976992723173513
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      resultMatrixPlainText0.getDefaultCountWidth();
      resultMatrixPlainText0.getDefaultPrintColNames();
      resultMatrixPlainText0.getPrintColNames();
      resultMatrixPlainText0.getDisplayRow(1);
      resultMatrixPlainText0.getSummaryTitle(1035);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixSignificance0);
      int[][] intArray0 = new int[2][7];
      int[] intArray1 = new int[7];
      intArray1[0] = 2;
      intArray1[1] = 1;
      intArray1[2] = 2;
      intArray1[3] = 0;
      intArray1[4] = 1;
      intArray1[5] = 0;
      intArray1[6] = (-1);
      intArray0[0] = intArray1;
      int[] intArray2 = new int[3];
      intArray2[0] = (-1);
      intArray2[1] = 2;
      intArray2[2] = 1;
      intArray0[1] = intArray2;
      resultMatrixSignificance1.m_NonSigWins = intArray0;
      resultMatrixPlainText0.padString("(", 0, false);
      resultMatrixPlainText0.getRowName(5);
      resultMatrixSignificance1.clear();
      resultMatrixSignificance1.doubleToString(1, 1);
      ResultMatrixSignificance resultMatrixSignificance2 = new ResultMatrixSignificance();
      resultMatrixSignificance2.globalInfo();
      resultMatrixSignificance0.getDefaultMeanWidth();
      resultMatrixSignificance2.setCountWidth(2);
      resultMatrixPlainText0.globalInfo();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.toStringRanking();
      resultMatrixHTML0.getColName(0);
      resultMatrixPlainText0.doubleToString(5, 1457);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      assertEquals(25, resultMatrixLatex0.getRowNameWidth());
      
      resultMatrixLatex0.clear();
      resultMatrixPlainText0.toStringSummary();
      assertEquals(1, resultMatrixSignificance0.getColCount());
      
      resultMatrixHTML0.getEnumerateColNames();
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=3.489961496669003
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 0);
      resultMatrixCSV0.LOSS_STRING = "";
      resultMatrixCSV0.setCountWidth(0);
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      
      resultMatrixCSV0.clear();
      resultMatrixCSV0.m_StdDevWidth = 0;
      resultMatrixCSV0.m_EnumerateRowNames = false;
      resultMatrixCSV0.m_ColHidden = null;
      int[][] intArray0 = new int[5][1];
      int[] intArray1 = new int[4];
      intArray1[0] = 0;
      intArray1[1] = 0;
      intArray1[2] = 0;
      intArray1[3] = 2;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[2];
      intArray2[0] = 2;
      intArray2[1] = 0;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[9];
      intArray3[0] = 1;
      intArray3[1] = 0;
      intArray3[2] = 1;
      intArray3[3] = 1;
      intArray3[4] = 0;
      intArray3[5] = 0;
      intArray3[6] = 1;
      intArray3[7] = 0;
      intArray3[8] = 2612;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[5];
      intArray4[0] = 0;
      intArray4[1] = 1;
      intArray4[2] = 0;
      intArray4[3] = 2;
      intArray4[4] = 50;
      intArray0[3] = intArray4;
      int[] intArray5 = new int[7];
      intArray5[0] = 2;
      intArray5[1] = 2612;
      intArray5[2] = 2612;
      intArray5[3] = (-903);
      intArray5[4] = 0;
      intArray5[5] = 1;
      intArray5[6] = 0;
      intArray0[4] = intArray5;
      resultMatrixCSV0.m_NonSigWins = intArray0;
      resultMatrixCSV0.m_EnumerateRowNames = false;
      resultMatrixCSV0.listOptions();
      resultMatrixCSV0.m_ShowStdDev = true;
      resultMatrixCSV0.m_ColNameWidth = 0;
      resultMatrixCSV0.getRevision();
      String string0 = resultMatrixCSV0.getSummaryTitle(0);
      assertEquals("a", string0);
      
      resultMatrixCSV0.getColNameWidth();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 0);
      resultMatrixGnuPlot0.getDefaultEnumerateRowNames();
      assertEquals(50, resultMatrixGnuPlot0.getColNameWidth());
      assertEquals(0, resultMatrixGnuPlot0.getRowCount());
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getDefaultRowNameWidth();
      assertEquals(1, resultMatrixPlainText0.getColCount());
      assertTrue(resultMatrixPlainText0.getDefaultEnumerateColNames());
      assertEquals(2, resultMatrixPlainText0.getDefaultMeanPrec());
      assertEquals(0, resultMatrixPlainText0.getDefaultSignificanceWidth());
      assertEquals(2, resultMatrixPlainText0.getDefaultStdDevPrec());
      assertFalse(resultMatrixPlainText0.getRemoveFilterName());
      assertFalse(resultMatrixPlainText0.getEnumerateRowNames());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=3.7515156074442144
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setStdDevWidth(0);
      resultMatrixLatex0.m_PrintRowNames = false;
      resultMatrixLatex0.setRemoveFilterName(true);
      resultMatrixLatex0.toArray();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(2, 2);
      resultMatrixLatex0.assign(resultMatrixHTML0);
      resultMatrixHTML0.setMeanPrec(2);
      resultMatrixHTML0.isStdDev((-1007));
      resultMatrixLatex0.setMeanPrec(527);
      // Undeclared exception!
      try { 
        resultMatrixHTML0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=3.4626285638925767
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.RIGHT_PARENTHESES = "T1@";
      resultMatrixPlainText0.padString("T1@", 1175);
      resultMatrixPlainText0.LEFT_PARENTHESES = "T1@";
      resultMatrixPlainText0.toStringKey();
      int[][] intArray0 = new int[2][9];
      int[] intArray1 = new int[0];
      intArray0[0] = intArray1;
      int[] intArray2 = new int[0];
      intArray0[1] = intArray2;
      int[][] intArray3 = new int[8][1];
      intArray3[0] = intArray2;
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.m_MeanWidth = 2;
      resultMatrixPlainText0.assign(resultMatrixLatex0);
      intArray3[1] = intArray1;
      intArray3[2] = intArray2;
      intArray3[3] = intArray1;
      intArray3[4] = intArray2;
      int[] intArray4 = new int[1];
      intArray4[0] = 1;
      intArray3[5] = intArray4;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.getColSize((String[][]) null, 1, true, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=3.37188661584283
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.colNameWidthTipText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDefaultPrintColNames();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(748, 1);
      resultMatrixSignificance0.WIN_STRING = "]";
      resultMatrixPlainText0.m_RemoveFilterName = true;
      resultMatrixSignificance0.padString(")", 0, true);
      resultMatrixSignificance0.setPrintColNames(false);
      resultMatrixSignificance0.setMeanPrec(0);
      resultMatrixSignificance0.toStringRanking();
      resultMatrixSignificance0.getRowCount();
      resultMatrixCSV0.setMeanPrec(748);
      resultMatrixCSV0.isStdDev(2);
      resultMatrixCSV0.getDefaultRowNameWidth();
      assertEquals(748, resultMatrixCSV0.getMeanPrec());
      
      resultMatrixPlainText0.setPrintColNames(false);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "]";
      String[][] stringArray1 = new String[5][9];
      stringArray1[0] = stringArray0;
      stringArray1[1] = stringArray0;
      stringArray1[2] = stringArray0;
      stringArray1[3] = stringArray0;
      stringArray1[4] = stringArray0;
      int int0 = resultMatrixSignificance0.getColSize(stringArray1, 0, false, true);
      assertEquals(1, int0);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=3.9615027209991602
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setStdDevWidth((-2));
      resultMatrixLatex0.m_PrintRowNames = false;
      resultMatrixLatex0.setRemoveFilterName(true);
      resultMatrixLatex0.toArray();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(2, 2);
      resultMatrixLatex0.assign(resultMatrixHTML0);
      resultMatrixHTML0.setMeanPrec(2);
      resultMatrixHTML0.isStdDev((-1007));
      String[] stringArray0 = new String[0];
      ResultMatrixGnuPlot.main(stringArray0);
      assertEquals(0, stringArray0.length);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=3.70491008718964
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(16, 16);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "v";
      stringArray0[1] = "hline\nmulticolumn{";
      stringArray0[2] = "*";
      stringArray0[3] = " ";
      resultMatrixSignificance0.m_RowNames = stringArray0;
      resultMatrixSignificance0.getDefaultEnumerateRowNames();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixSignificance1);
      Vector<String> vector0 = new Vector<String>();
      resultMatrixSignificance1.m_HeaderKeys = vector0;
      resultMatrixCSV0.toStringMatrix();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance1);
      resultMatrixLatex0.getDefaultEnumerateColNames();
      resultMatrixCSV0.printRowNamesTipText();
      resultMatrixSignificance1.setEnumerateRowNames(true);
      resultMatrixCSV0.toStringKey();
      // Undeclared exception!
      try { 
        resultMatrixLatex0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=4.171017851343439
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(3598, 0);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "$\bullet$";
      stringArray0[1] = " ";
      resultMatrixLatex0.m_RowNameWidth = 0;
      resultMatrixLatex0.m_RemoveFilterName = true;
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      
      stringArray0[2] = " ";
      resultMatrixLatex0.setOptions(stringArray0);
      ResultMatrixSignificance.main(stringArray0);
      resultMatrixLatex0.getShowAverage();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2, 0);
      resultMatrixGnuPlot0.getRevision();
      resultMatrixLatex0.setMeanWidth(0);
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=3.42468969227607
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getSummaryTitle(0);
      resultMatrixSignificance0.getDisplayCol(1);
      int int0 = ResultMatrix.SIGNIFICANCE_LOSS;
      resultMatrixSignificance0.getColOrder();
      resultMatrixSignificance0.getDefaultPrintColNames();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 1);
      resultMatrixCSV0.toStringKey();
      resultMatrixLatex0.getCount((-1));
      // Undeclared exception!
      try { 
        resultMatrixLatex0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=4.011072672321425
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 0);
      resultMatrixHTML0.getDefaultPrintRowNames();
      String[] stringArray0 = new String[6];
      stringArray0[0] = ")";
      stringArray0[1] = ")";
      stringArray0[2] = " ";
      stringArray0[3] = "*";
      stringArray0[4] = ")";
      stringArray0[5] = "(";
      ResultMatrixGnuPlot.main(stringArray0);
      ResultMatrixHTML.main(stringArray0);
      assertEquals(6, stringArray0.length);
  }
}
