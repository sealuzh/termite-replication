/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 21:02:34 GMT 2019
 */

package org.pdfsam.guiclient.commons.models;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Dialog;
import java.awt.RenderingHints;
import java.awt.geom.AffineTransform;
import java.awt.image.AffineTransformOp;
import java.awt.image.ImagingOpException;
import java.awt.image.IndexColorModel;
import java.awt.image.RenderedImage;
import java.awt.image.renderable.ParameterBlock;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Collection;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.PriorityQueue;
import java.util.Stack;
import java.util.TreeSet;
import java.util.Vector;
import java.util.function.Function;
import java.util.function.UnaryOperator;
import javax.media.jai.OperationRegistry;
import javax.media.jai.RemoteImage;
import javax.media.jai.TiledImage;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.table.DefaultTableModel;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.pdfsam.guiclient.commons.models.VisualListModel;
import org.pdfsam.guiclient.dto.VisualPageListItem;
import sun.awt.SunHints;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class VisualListModel_ESTest extends VisualListModel_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.2623477045221727
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getElements();
      visualListModel0.getValidElements();
      int int0 = 1508;
      int int1 = 1305;
      visualListModel0.removeElements(1508, 1305, true);
      int[] intArray0 = new int[0];
      visualListModel0.getElements();
      visualListModel0.getListDataListeners();
      visualListModel0.undeleteElements(intArray0);
      int[] intArray1 = new int[1];
      visualListModel0.addElement((VisualPageListItem) null);
      intArray1[0] = 30000;
      try { 
        visualListModel0.reverseElements(intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 30000
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.6999267696231979
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[5];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel0.setData(visualPageListItemArray0);
      int[] intArray0 = new int[4];
      intArray0[1] = 1446;
      intArray0[2] = 1446;
      visualListModel0.removeElements(intArray0, true);
      intArray0[3] = 0;
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)26;
      byteArray0[1] = (byte) (-77);
      byteArray0[2] = (byte)26;
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel((-671), 1446, byteArray0, byteArray0, byteArray0, byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Number of pixel bits must be > 0
         //
         verifyException("java.awt.image.ColorModel", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.243385473982151
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualListModel visualListModel1 = new VisualListModel();
      int[] intArray0 = new int[1];
      intArray0[0] = 0;
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      Vector<Integer> vector0 = new Vector<Integer>();
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>(stack0);
      VisualPageListItem visualPageListItem0 = null;
      linkedList0.containsAll(stack0);
      linkedList0.add((VisualPageListItem) null);
      linkedList0.add((VisualPageListItem) null);
      visualListModel1.prependAllElements(linkedList0);
      visualListModel1.subList(0, 0, true);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.subList(0, (-1261), true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(0) > toIndex(-1261)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.4620975966507315
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveUpIndex(715);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[13];
      visualListModel0.subList(0, 993);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) null);
      visualListModel0.setData(visualPageListItemArray0);
      int[] intArray0 = new int[5];
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.5459405090421
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveUpIndex(715);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[13];
      Collection<VisualPageListItem> collection0 = new ArrayList<VisualPageListItem>();
      visualListModel0.addAllElements(collection0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.getValidElements();
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      visualListModel1.addAllElements((Collection<VisualPageListItem>) null);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.setData(visualPageListItemArray0);
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      visualListModel1.prependAllElements((Collection<VisualPageListItem>) null);
      VisualListModel visualListModel3 = new VisualListModel();
      visualListModel3.getElements();
      visualListModel1.setData(visualPageListItemArray0);
      int[] intArray0 = new int[1];
      intArray0[0] = 715;
      try { 
        visualListModel2.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 715
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.756422685805818
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      visualListModel0.prependAllElements(linkedList0);
      visualListModel0.moveUpIndex(715);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[13];
      int int0 = (-995);
      visualListModel0.subList(0, 993);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) null);
      visualListModel0.setData(visualPageListItemArray0);
      JComboBox<VisualPageListItem> jComboBox0 = new JComboBox<VisualPageListItem>();
      jComboBox0.getItemCount();
      visualListModel0.removeListDataListener(jComboBox0);
      visualListModel0.removeElements(1934, 993, true);
      visualListModel0.removeElements(49, 49, false);
      int[] intArray0 = new int[10];
      intArray0[0] = 715;
      visualListModel0.getElementAt(49);
      // Undeclared exception!
      try { 
        visualListModel0.removeElements(intArray0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(715) > toIndex(1)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.780443886125738
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveUpIndex(715);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[13];
      int int0 = 0;
      int int1 = 993;
      visualListModel0.subList(0, 993);
      visualListModel0.moveDownIndex(715);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) null);
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.setData(visualPageListItemArray0);
      int[] intArray0 = new int[5];
      visualListModel0.reverseElements(intArray0);
      visualListModel0.removeElements(715, 715, false);
      visualListModel0.removeElements(715, 24, false);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.getElementAt(24);
      // Undeclared exception!
      try { 
        visualListModel0.removeElements(intArray0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.133133739559716
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveUpIndex(709);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[13];
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
      visualListModel0.setData(visualPageListItemArray0);
      int[] intArray0 = new int[5];
      intArray0[0] = 191;
      intArray0[1] = 0;
      intArray0[3] = 42;
      try { 
        visualListModel0.reverseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 191
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.9226853935616632
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveUpIndex(709);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[13];
      int int0 = 993;
      visualListModel0.setData(visualPageListItemArray0);
      int[] intArray0 = new int[5];
      intArray0[0] = 191;
      intArray0[1] = 0;
      int int1 = (-1009);
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 191
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.659334098393565
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[5];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.setData(visualPageListItemArray0);
      int int0 = 191;
      int int1 = 42;
      // Undeclared exception!
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[6];
      intArray0[0] = (-3630);
      intArray0[1] = 1;
      visualListModel0.getListDataListeners();
      intArray0[2] = 1;
      intArray0[3] = 1;
      visualListModel0.moveDownIndexes(intArray0);
      int int0 = (-1104);
      int[] intArray1 = null;
      // Undeclared exception!
      try { 
        visualListModel0.moveUpIndexes((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.885150328612323
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.clearData();
      visualListModel0.elementChanged((VisualPageListItem) null);
      VisualListModel visualListModel1 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[8];
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[5] = null;
      visualPageListItemArray0[6] = null;
      visualPageListItemArray0[7] = null;
      visualListModel0.setData(visualPageListItemArray0);
      int[] intArray0 = new int[7];
      intArray0[0] = 0;
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      int[] intArray0 = new int[1];
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.moveDownIndexes((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.133133739559716
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveUpIndex(709);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[13];
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
      visualListModel0.setData(visualPageListItemArray0);
      int[] intArray0 = new int[5];
      intArray0[0] = 191;
      intArray0[1] = 0;
      intArray0[3] = 42;
      try { 
        visualListModel0.moveUpIndexes(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 190
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.2962664515510975
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.clearData();
      visualListModel0.elementChanged((VisualPageListItem) null);
      VisualListModel visualListModel1 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[8];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[5] = null;
      visualPageListItemArray0[6] = null;
      visualPageListItemArray0[7] = null;
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel1.subList(0, 0);
      VisualListModel visualListModel2 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel2.removeElementAt(34, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 34
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[7];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = null;
      // Undeclared exception!
      try { 
        visualListModel0.reverseElements((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.337364197867316
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[9];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getValidElements();
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      treeSet0.floor(visualPageListItemArray0[2]);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) treeSet0);
      visualListModel0.setData(visualPageListItemArray0);
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      visualListModel0.prependAllElements((Collection<VisualPageListItem>) null);
      visualListModel0.setData(visualPageListItemArray0);
      int int0 = visualListModel0.getSize();
      assertEquals(9, int0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.1346568241817123
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[5];
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel0.setData(visualPageListItemArray0);
      int[] intArray0 = new int[4];
      visualListModel0.prependAllElements(vector0);
      intArray0[3] = 1446;
      intArray0[2] = 1446;
      visualListModel0.moveDownIndexes(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.4897372225048104
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveUpIndex(709);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[13];
      visualListModel0.subList(0, 993);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) null);
      visualListModel0.setData(visualPageListItemArray0);
      int[] intArray0 = new int[5];
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.moveDownIndexes(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.8323649625844873
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[5];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getValidElements();
      visualListModel0.setData(visualPageListItemArray0);
      int[] intArray0 = new int[4];
      intArray0[1] = 1446;
      intArray0[2] = 1446;
      intArray0[3] = 0;
      try { 
        visualListModel0.moveDownIndexes(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 1446
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.786724494755577
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 715;
      visualListModel0.moveUpIndex(715);
      int int1 = (-1045);
      VisualListModel visualListModel1 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel1.setData((Vector<VisualPageListItem>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.578939790844478
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveUpIndex(715);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[13];
      visualListModel0.subList(0, 993);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) null);
      int[] intArray0 = new int[4];
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.addElement((VisualPageListItem) null);
      intArray0[0] = (-1045);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.setData(visualPageListItemArray0);
      assertEquals(13, visualListModel0.getSize());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.9193618394362675
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      VisualPageListItem visualPageListItem0 = null;
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[6];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.getElementAt(191);
      String string0 = "log4j.configDebug";
      int int0 = 2417;
      int int1 = 125;
      VisualPageListItem visualPageListItem1 = null;
      try {
        visualPageListItem1 = new VisualPageListItem(42);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.659334098393565
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[13];
      int[] intArray0 = new int[4];
      visualListModel0.setData(visualPageListItemArray0);
      // Undeclared exception!
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.138526235860879
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.clearData();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.addAllElements(50, (Collection<VisualPageListItem>) linkedHashSet0);
      visualListModel0.getValidElements();
      visualListModel0.data = null;
      int[] intArray0 = new int[0];
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      VisualPageListItem[] visualPageListItemArray0 = visualListModel0.getElements();
      assertNull(visualPageListItemArray0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.04776041683849
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[3];
      intArray0[1] = 932;
      intArray0[2] = (-1459);
      visualListModel0.moveDownIndexes(intArray0);
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      int[] intArray1 = new int[9];
      intArray1[0] = 472;
      intArray1[1] = 472;
      intArray1[2] = 932;
      intArray1[3] = 472;
      intArray1[4] = (-1459);
      intArray1[5] = 472;
      intArray1[6] = (-1459);
      intArray1[7] = (-1459);
      intArray1[8] = 932;
      visualListModel0.reverseElements(intArray1);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.rotateAnticlockwiseElements(intArray0);
      visualListModel1.undeleteElements(intArray0);
      int[] intArray2 = null;
      // Undeclared exception!
      try { 
        visualListModel1.rotateAnticlockwiseElements((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      int[] intArray0 = new int[0];
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.571831599661383
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.clearData();
      visualListModel0.elementChanged((VisualPageListItem) null);
      int[] intArray0 = new int[0];
      visualListModel0.reverseElements(intArray0);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.addAllElements(50, (Collection<VisualPageListItem>) linkedHashSet0);
      visualListModel0.getElementAt(901);
      visualListModel0.getValidElements();
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.data = null;
      // Undeclared exception!
      try { 
        visualListModel0.removeElements(50, (-1488), true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      vector0.removeAllElements();
      int int0 = 8;
      VisualPageListItem visualPageListItem0 = null;
      visualListModel0.addAllElements(8, (Collection<VisualPageListItem>) vector0);
      visualListModel0.addElement((VisualPageListItem) null);
      VisualPageListItem visualPageListItem1 = null;
      try {
        visualPageListItem1 = new VisualPageListItem(8);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.856882596414008
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[7];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[5] = null;
      visualPageListItemArray0[6] = null;
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add(visualPageListItemArray0[0]);
      AffineTransform.getScaleInstance(1.0, 914.9111);
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElementAt(visualPageListItemArray0[5], (-1));
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel0.moveUpIndex((-1));
      VisualListModel visualListModel2 = new VisualListModel();
      VisualListModel visualListModel3 = new VisualListModel();
      visualListModel3.updateElementAt((-1), visualPageListItemArray0[6]);
      VisualListModel visualListModel4 = new VisualListModel();
      assertEquals(0, visualListModel4.getSize());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[6];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[2] = null;
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = new Stack<VisualPageListItem>();
      visualListModel0.addAllElements((-3505), (Collection<VisualPageListItem>) vector0);
      assertEquals(10, vector0.capacity());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex((-1847));
      Object object0 = visualListModel0.getElementAt(0);
      assertNull(object0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.moveDownIndexes(intArray0);
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      float[] floatArray0 = new float[1];
      floatArray0[0] = 3343.0F;
      visualListModel0.removeElements(intArray0, false);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.undeleteElements(intArray0);
      AffineTransform affineTransform0 = new AffineTransform(0.0F, 0.0F, 0.0F, (-699.2145F), 3343.0F, 16.883394F);
      affineTransform0.setToQuadrantRotation((-3765), (double) 16.883394F, 1.0);
      AffineTransform affineTransform1 = AffineTransform.getRotateInstance((double) (-699.2145F), (double) 0.0F, 32.08875206681731, (double) (-3765));
      affineTransform1.setToQuadrantRotation((-3765), 1.0, (double) (-3765));
      AffineTransform affineTransform2 = new AffineTransform((-699.2145F), 1828.48016376233, (-1046.2618), (-3765), 0.0F, 32.08875206681731);
      AffineTransform.getRotateInstance((-1090.31709));
      AffineTransform affineTransform3 = new AffineTransform(0.0F, 1289.61F, 3343.0F, (-699.2145F), 0.0F, 3343.0F);
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (double) (-699.2145F);
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) 3343.0F;
      doubleArray0[3] = 1.0;
      doubleArray0[4] = (double) 0;
      doubleArray0[5] = (double) 0;
      doubleArray0[6] = (double) 0.0F;
      affineTransform3.transform(floatArray0, 0, doubleArray0, 0, (-2048));
      AffineTransformOp affineTransformOp0 = null;
      try {
        affineTransformOp0 = new AffineTransformOp(affineTransform3, (-3765));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown interpolation type: -3765
         //
         verifyException("java.awt.image.AffineTransformOp", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.4428352147175594
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[7];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[5] = null;
      visualPageListItemArray0[6] = null;
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add(visualPageListItemArray0[3]);
      linkedHashSet0.add(visualPageListItemArray0[0]);
      AffineTransform.getScaleInstance(1.0, 914.9111);
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElementAt(visualPageListItemArray0[5], (-1));
      VisualPageListItem[] visualPageListItemArray1 = visualListModel0.getElements();
      visualListModel0.getValidElements();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      visualListModel0.updateElementAt((-1), (VisualPageListItem) null);
      visualListModel0.setData(visualPageListItemArray1);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.0343946195677223
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Dialog.ModalExclusionType[] dialog_ModalExclusionTypeArray0 = new Dialog.ModalExclusionType[4];
      Dialog.ModalExclusionType dialog_ModalExclusionType0 = Dialog.ModalExclusionType.NO_EXCLUDE;
      dialog_ModalExclusionTypeArray0[0] = dialog_ModalExclusionType0;
      Dialog.ModalExclusionType dialog_ModalExclusionType1 = Dialog.ModalExclusionType.TOOLKIT_EXCLUDE;
      dialog_ModalExclusionTypeArray0[1] = dialog_ModalExclusionType1;
      Dialog.ModalExclusionType dialog_ModalExclusionType2 = Dialog.ModalExclusionType.APPLICATION_EXCLUDE;
      dialog_ModalExclusionTypeArray0[2] = dialog_ModalExclusionType2;
      Dialog.ModalExclusionType dialog_ModalExclusionType3 = Dialog.ModalExclusionType.NO_EXCLUDE;
      dialog_ModalExclusionTypeArray0[3] = dialog_ModalExclusionType3;
      DefaultComboBoxModel<Dialog.ModalExclusionType> defaultComboBoxModel0 = new DefaultComboBoxModel<Dialog.ModalExclusionType>(dialog_ModalExclusionTypeArray0);
      JComboBox<Dialog.ModalExclusionType> jComboBox0 = new JComboBox<Dialog.ModalExclusionType>(defaultComboBoxModel0);
      visualListModel0.addListDataListener(jComboBox0);
      visualListModel0.moveUpIndex(1);
      VisualListModel visualListModel1 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel1.undeleteElements(intArray0);
      ParameterBlock parameterBlock0 = new ParameterBlock();
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.updateElementAt(110, (VisualPageListItem) null);
      visualListModel1.elementChanged((VisualPageListItem) null);
      VisualListModel visualListModel3 = new VisualListModel();
      visualListModel3.updateElementAt((-1795), (VisualPageListItem) null);
      assertFalse(visualListModel3.equals((Object)visualListModel1));
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.042632211710285
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.reverseElements(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.rotateAnticlockwiseElements(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      // Undeclared exception!
      try { 
        visualListModel1.getElementAt((-2851));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2851
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.3847257578340364
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[7];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getValidElements();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) null);
      visualListModel0.setData(visualPageListItemArray0);
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      visualListModel0.prependAllElements(priorityQueue0);
      AffineTransform.getScaleInstance(914.9111, 914.9111);
      VisualListModel visualListModel1 = new VisualListModel();
      int int0 = (-1);
      visualListModel0.addElementAt(visualPageListItemArray0[2], (-1971));
      visualListModel0.getElements();
      // Undeclared exception!
      try { 
        visualListModel0.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.3842713196839629
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = (-19);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(linkedHashSet0);
      // Undeclared exception!
      try { 
        visualListModel0.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(1194, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 1194
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 1008;
      int int1 = 1;
      // Undeclared exception!
      try { 
        visualListModel0.subList(1, (-1721), true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(1) > toIndex(-1721)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.2248830687452417
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      int int0 = 0;
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      Vector<Integer> vector0 = new Vector<Integer>();
      VisualPageListItem visualPageListItem0 = null;
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      linkedList0.containsAll(stack0);
      linkedList0.add((VisualPageListItem) null);
      visualListModel0.subList(0, 0, true);
      int int1 = (-1261);
      visualListModel0.getSize();
      VisualPageListItem visualPageListItem1 = null;
      try {
        visualPageListItem1 = new VisualPageListItem(0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.218456332760875
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = (-1469);
      int int1 = 2943;
      visualListModel0.getValidElements();
      visualListModel0.removeElements((-1469), 2943, false);
      visualListModel0.getElements();
      visualListModel0.prependAllElements((Collection<VisualPageListItem>) null);
      visualListModel0.elementsChanged();
      int int2 = 727;
      visualListModel0.removeElements(727, (-1469), false);
      int int3 = (-1);
      // Undeclared exception!
      try { 
        visualListModel0.subList(727, (-1), false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(727) > toIndex(-1)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.removeElements((-25), 12, false);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[6];
      intArray0[0] = (-3630);
      intArray0[1] = 1;
      visualListModel0.getListDataListeners();
      intArray0[2] = 1;
      intArray0[3] = 1;
      intArray0[4] = (-1104);
      intArray0[5] = 1;
      visualListModel0.moveUpIndexes(intArray0);
      int[] intArray1 = new int[2];
      intArray1[0] = 1;
      intArray1[1] = 1;
      visualListModel0.reverseElements(intArray1);
      AffineTransform affineTransform0 = AffineTransform.getRotateInstance((-3015.8323));
      AffineTransform affineTransform1 = new AffineTransform((-2246.6763F), 4009.0F, (float) 1, (float) 1, (float) (-1104), 0.95F);
      AffineTransformOp affineTransformOp0 = null;
      try {
        affineTransformOp0 = new AffineTransformOp(affineTransform0, (-1104));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown interpolation type: -1104
         //
         verifyException("java.awt.image.AffineTransformOp", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.5137801058392384
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem visualPageListItem0 = null;
      visualListModel0.addElementAt((VisualPageListItem) null, 18);
      visualListModel0.getValidElements();
      visualListModel0.addAllElements(18, (Collection<VisualPageListItem>) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      JComboBox<VisualPageListItem> jComboBox0 = new JComboBox<VisualPageListItem>(stack0);
      visualListModel0.removeListDataListener(jComboBox0);
      visualListModel0.elementChanged((VisualPageListItem) null);
      Stack<VisualPageListItem> stack1 = new Stack<VisualPageListItem>();
      UnaryOperator<VisualPageListItem> unaryOperator0 = UnaryOperator.identity();
      Function<Object, String> function0 = (Function<Object, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      unaryOperator0.andThen((Function<? super VisualPageListItem, ? extends String>) function0);
      unaryOperator0.apply((VisualPageListItem) null);
      stack1.replaceAll(unaryOperator0);
      stack1.add((VisualPageListItem) null);
      visualListModel0.setData((Vector<VisualPageListItem>) stack1);
      visualListModel0.updateElementAt(18, (VisualPageListItem) null);
      Object object0 = new Object();
      VisualPageListItem visualPageListItem1 = null;
      try {
        visualPageListItem1 = new VisualPageListItem((-818), "log4j.configDebug");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) priorityQueue0);
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte)93;
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel(49, 49, byteArray0, byteArray0, byteArray0, byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Number of bits must be between 1 and 16.
         //
         verifyException("java.awt.image.IndexColorModel", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.214534764133424
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Dialog.ModalExclusionType[] dialog_ModalExclusionTypeArray0 = new Dialog.ModalExclusionType[4];
      Dialog.ModalExclusionType dialog_ModalExclusionType0 = Dialog.ModalExclusionType.NO_EXCLUDE;
      dialog_ModalExclusionTypeArray0[0] = dialog_ModalExclusionType0;
      Dialog.ModalExclusionType dialog_ModalExclusionType1 = Dialog.ModalExclusionType.TOOLKIT_EXCLUDE;
      dialog_ModalExclusionTypeArray0[1] = dialog_ModalExclusionType1;
      Dialog.ModalExclusionType dialog_ModalExclusionType2 = Dialog.ModalExclusionType.APPLICATION_EXCLUDE;
      dialog_ModalExclusionTypeArray0[2] = dialog_ModalExclusionType2;
      Dialog.ModalExclusionType dialog_ModalExclusionType3 = Dialog.ModalExclusionType.NO_EXCLUDE;
      dialog_ModalExclusionTypeArray0[3] = dialog_ModalExclusionType3;
      DefaultComboBoxModel<Dialog.ModalExclusionType> defaultComboBoxModel0 = new DefaultComboBoxModel<Dialog.ModalExclusionType>(dialog_ModalExclusionTypeArray0);
      JComboBox<Dialog.ModalExclusionType> jComboBox0 = new JComboBox<Dialog.ModalExclusionType>(defaultComboBoxModel0);
      visualListModel0.addListDataListener(jComboBox0);
      visualListModel0.moveUpIndex(1);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel0.subList((-4014), 1);
      visualListModel1.prependAllElements((Collection<VisualPageListItem>) null);
      int[] intArray0 = new int[0];
      visualListModel1.undeleteElements(intArray0);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)102;
      byteArray0[1] = (byte)102;
      byteArray0[2] = (byte)102;
      byteArray0[3] = (byte)102;
      byteArray0[4] = (byte)102;
      byteArray0[5] = (byte)102;
      byteArray0[6] = (byte)102;
      byteArray0[7] = (byte)102;
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel((-1506), 3286, byteArray0, byteArray0, byteArray0, byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Number of pixel bits must be > 0
         //
         verifyException("java.awt.image.ColorModel", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = (-10);
      visualListModel0.moveUpIndex((-10));
      visualListModel0.moveDownIndex((-10));
      visualListModel0.clearData();
      int[] intArray0 = null;
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        visualListModel0.removeElements((int[]) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualListModel visualListModel1 = new VisualListModel();
      int[] intArray0 = new int[1];
      intArray0[0] = 1156;
      visualListModel1.removeElements(intArray0, false);
      int int0 = 1232;
      AffineTransform affineTransform0 = AffineTransform.getScaleInstance(1232, (-613.79214307));
      affineTransform0.setToQuadrantRotation(647, 1146.0, (double) 647);
      AffineTransformOp affineTransformOp0 = null;
      try {
        affineTransformOp0 = new AffineTransformOp(affineTransform0, 976);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown interpolation type: 976
         //
         verifyException("java.awt.image.AffineTransformOp", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.977500522076773
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[7];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getValidElements();
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      treeSet0.floor(visualPageListItemArray0[2]);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) treeSet0);
      visualListModel0.setData(visualPageListItemArray0);
      int int0 = 0;
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      TiledImage tiledImage0 = null;
      try {
        tiledImage0 = new TiledImage((RenderedImage) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.media.jai.TiledImage", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.6868977693384444
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      LinkedHashSet<VisualPageListItem> linkedHashSet1 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet1.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet1);
      int[] intArray0 = new int[6];
      intArray0[0] = (-19);
      intArray0[1] = (-19);
      intArray0[2] = (-19);
      intArray0[3] = (-19);
      intArray0[4] = (-19);
      intArray0[5] = (-19);
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel0.clearData();
      int int0 = visualListModel0.getSize();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.removeElements(0, 0, true);
      int int0 = 0;
      visualListModel0.moveUpIndex(0);
      visualListModel0.moveDownIndex(0);
      visualListModel0.clearData();
      int[] intArray0 = null;
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem(0, "org.pdfsam.guiclient.commons.models.VisualListModel", "(/d.Aq=O/N");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.removeElements(0, 12, true);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[5];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.removeElements(49, (-1755), true);
      intArray0[0] = (-1011);
      AffineTransform.getRotateInstance((-1446.1937), (-1446.1937), 1.0);
      AffineTransform affineTransform0 = AffineTransform.getRotateInstance((double) (-1011), (double) 4, 4069.43902, 4069.43902);
      affineTransform0.setToQuadrantRotation(4, 0.0, 162.4178);
      AffineTransform.getShearInstance(1.0, 0.0);
      AffineTransform.getRotateInstance(4069.43902);
      AffineTransform affineTransform1 = new AffineTransform((-2060.35F), (float) (-1011), (float) (-1011), (float) (-1011), 0.0F, (float) 4);
      AffineTransformOp affineTransformOp0 = null;
      try {
        affineTransformOp0 = new AffineTransformOp(affineTransform1, (-1755));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown interpolation type: -1755
         //
         verifyException("java.awt.image.AffineTransformOp", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.appendAllElements(vector0);
      assertEquals(10, vector0.capacity());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.8063294488351005
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[13];
      int[] intArray0 = new int[5];
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      OperationRegistry.getThreadSafeOperationRegistry();
      ParameterBlock parameterBlock0 = new ParameterBlock();
      parameterBlock0.clone();
      Vector<Object> vector0 = parameterBlock0.getSources();
      ParameterBlock parameterBlock1 = new ParameterBlock(vector0);
      Vector<Object> vector1 = parameterBlock1.getSources();
      ParameterBlock parameterBlock2 = new ParameterBlock(vector1, vector0);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_DITHERING;
      RenderingHints renderingHints0 = new RenderingHints(sunHints_Key0, parameterBlock1);
      BigInteger bigInteger0 = BigInteger.ONE;
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel(715, (-599), intArray0, (-599), 715, bigInteger0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Number of bits must be between 1 and 16.
         //
         verifyException("java.awt.image.IndexColorModel", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.6574520104243486
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 2;
      visualListModel0.moveUpIndex(2);
      int int1 = (-1755);
      // Undeclared exception!
      try { 
        visualListModel0.subList(2, (-1755));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(2) > toIndex(-1755)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Collection<VisualPageListItem> collection0 = visualListModel0.subList(0, 46, false);
      assertNull(collection0);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      visualListModel0.prependAllElements(linkedHashSet0);
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      visualListModel0.elementsChanged();
      AffineTransform affineTransform0 = AffineTransform.getScaleInstance(1034, 0.0);
      AffineTransformOp affineTransformOp0 = null;
      try {
        affineTransformOp0 = new AffineTransformOp(affineTransform0, 1);
        fail("Expecting exception: ImagingOpException");
      
      } catch(ImagingOpException e) {
         //
         // Unable to invert transform AffineTransform[[1034.0, 0.0, 0.0], [0.0, 0.0, 0.0]]
         //
         verifyException("java.awt.image.AffineTransformOp", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      DefaultTableModel[] defaultTableModelArray0 = new DefaultTableModel[1];
      Object[][] objectArray0 = new Object[9][6];
      objectArray0[0] = (Object[]) defaultTableModelArray0;
      objectArray0[1] = (Object[]) defaultTableModelArray0;
      objectArray0[2] = (Object[]) defaultTableModelArray0;
      Object[] objectArray1 = new Object[3];
      objectArray1[0] = (Object) visualListModel0;
      objectArray1[1] = (Object) visualListModel0;
      objectArray1[2] = (Object) visualListModel0;
      objectArray0[3] = objectArray1;
      Object[] objectArray2 = new Object[1];
      objectArray2[0] = (Object) visualListModel0;
      objectArray0[4] = objectArray2;
      objectArray0[5] = (Object[]) defaultTableModelArray0;
      objectArray0[6] = (Object[]) defaultTableModelArray0;
      objectArray0[7] = (Object[]) defaultTableModelArray0;
      objectArray0[8] = (Object[]) defaultTableModelArray0;
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(objectArray0, objectArray0[1]);
      defaultTableModelArray0[0] = defaultTableModel0;
      JComboBox<DefaultTableModel> jComboBox0 = new JComboBox<DefaultTableModel>(defaultTableModelArray0);
      visualListModel0.removeListDataListener(jComboBox0);
      Collection<VisualPageListItem> collection0 = visualListModel0.subList((-3447), 10, true);
      assertNull(collection0);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.7741057932992024
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 2;
      visualListModel0.moveUpIndex(2);
      int int1 = 13;
      visualListModel0.subList(13, 13);
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      int int2 = (-1469);
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem((-1469), ")VM%-?%Mj:", ")VM%-?%Mj:");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      int[] intArray0 = new int[1];
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      VisualListModel visualListModel1 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel1.setData((VisualPageListItem[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[6];
      intArray0[0] = (-3630);
      intArray0[1] = 1;
      visualListModel0.getListDataListeners();
      intArray0[2] = 1;
      intArray0[3] = 1;
      visualListModel0.moveDownIndexes(intArray0);
      intArray0[4] = (-1104);
      intArray0[5] = 1;
      visualListModel0.moveUpIndexes(intArray0);
      int[] intArray1 = new int[2];
      intArray1[0] = 1;
      intArray1[1] = 1;
      RemoteImage remoteImage0 = null;
      try {
        remoteImage0 = new RemoteImage("K:ca-#a?w", (RenderedImage) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Source parameter may not be null.
         //
         verifyException("javax.media.jai.RemoteImage", e);
      }
  }
}
