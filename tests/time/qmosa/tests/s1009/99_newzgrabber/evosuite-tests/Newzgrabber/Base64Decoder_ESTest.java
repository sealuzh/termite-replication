/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 29 21:48:23 GMT 2020
 */

package Newzgrabber;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import Newzgrabber.Base64Decoder;
import Newzgrabber.BufferedCustomInputStream;
import Newzgrabber.Newzgrabber;
import java.io.File;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Base64Decoder_ESTest extends Base64Decoder_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      mockFile0.delete();
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      Base64Decoder base64Decoder0 = new Base64Decoder((BufferedCustomInputStream) null, mockPrintStream0);
      // Undeclared exception!
      try { 
        base64Decoder0.decodeStream();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Newzgrabber.Base64Decoder", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.11690684913753106
  */
  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("*i}oJ%]D{0");
      MockFile mockFile0 = new MockFile("");
      File file0 = MockFile.createTempFile("*i}oJ%]D{", "", (File) mockFile0);
      MockPrintStream mockPrintStream0 = new MockPrintStream("*i}oJ%]D{");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "eEJ+d");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "FQh@2?@Dym");
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(mockFileInputStream0);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, mockPrintStream0);
      base64Decoder0.decodeStream();
      assertEquals(1L, base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.30463609734923813
  */
  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("*i}oJ%]D{0");
      MockFile mockFile0 = new MockFile("");
      File file0 = MockFile.createTempFile("*i}oJ%]D{", "", (File) mockFile0);
      MockPrintStream mockPrintStream0 = new MockPrintStream("*i}oJ%]D{");
      byte[] byteArray0 = new byte[1];
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "");
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(mockFileInputStream0);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, mockPrintStream0);
      base64Decoder0.decodeStream();
      //  // Unstable assertion: assertEquals((-9999), mockFileInputStream0.available());
      //  // Unstable assertion: assertEquals(1L, base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.37677016125643675
  */
  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      mockFile0.delete();
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/99_newzgrabber");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, ".");
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream("");
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(mockFileInputStream0);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, mockPrintStream0);
      base64Decoder0.decodeStream();
      assertEquals((-1), mockFileInputStream0.available());
      assertEquals(1L, base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.34883209584303193
  */
  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("*i}oJ%]D{0");
      MockFile mockFile0 = new MockFile("");
      File file0 = MockFile.createTempFile("*i}oJ%]D{", "", (File) mockFile0);
      MockPrintStream mockPrintStream0 = new MockPrintStream("*i}oJ%]D{");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "");
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(mockFileInputStream0);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, mockPrintStream0);
      Newzgrabber.IsBatch = true;
      base64Decoder0.decodeStream();
      assertEquals((-10000), mockFileInputStream0.available());
      assertEquals(0L, base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.2868359830561607
  */
  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("*i}oJ%]D{0");
      MockFile mockFile0 = new MockFile("");
      File file0 = MockFile.createTempFile("*i}oJ%]D{", "", (File) mockFile0);
      MockPrintStream mockPrintStream0 = new MockPrintStream("*i}oJ%]D{");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "FQh@2?@Dym");
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(mockFileInputStream0);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, mockPrintStream0);
      Newzgrabber.verbose = true;
      base64Decoder0.decodeStream();
      //  // Unstable assertion: assertEquals((-9990), mockFileInputStream0.available());
      //  // Unstable assertion: assertEquals(1L, base64Decoder0.getLineCount());
  }
}
