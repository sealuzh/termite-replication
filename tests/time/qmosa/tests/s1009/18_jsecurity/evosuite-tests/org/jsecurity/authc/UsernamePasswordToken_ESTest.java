/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 20:45:46 GMT 2019
 */

package org.jsecurity.authc;

import org.junit.Test;
import static org.junit.Assert.*;
import java.net.InetAddress;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.net.MockInetAddress;
import org.jsecurity.authc.UsernamePasswordToken;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class UsernamePasswordToken_ESTest extends UsernamePasswordToken_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      InetAddress inetAddress0 = MockInetAddress.getLoopbackAddress();
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken(" (", (String) null, inetAddress0);
      assertFalse(usernamePasswordToken0.isRememberMe());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      char[] charArray0 = new char[9];
      charArray0[1] = 'k';
      charArray0[2] = 'C';
      charArray0[3] = 'C';
      charArray0[4] = '+';
      charArray0[5] = '=';
      charArray0[7] = 'f';
      charArray0[8] = ')';
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken("3Iq\"aj\"RPJ", (String) null);
      String string0 = usernamePasswordToken0.toString();
      assertEquals("org.jsecurity.authc.UsernamePasswordToken - 3Iq\"aj\"RPJ, rememberMe=false", string0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.3072109573039925
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken();
      usernamePasswordToken0.toString();
      char[] charArray0 = new char[8];
      charArray0[0] = 'W';
      charArray0[1] = 'U';
      charArray0[2] = 'Y';
      charArray0[3] = 'i';
      charArray0[4] = 'K';
      charArray0[5] = 'p';
      charArray0[6] = '%';
      charArray0[2] = '7';
      usernamePasswordToken0.setPassword(charArray0);
      usernamePasswordToken0.toString();
      UsernamePasswordToken usernamePasswordToken1 = new UsernamePasswordToken("Md(D4hwL%$jH^", "", false, (InetAddress) null);
      usernamePasswordToken0.clear();
      usernamePasswordToken1.getPassword();
      String string0 = usernamePasswordToken1.toString();
      assertEquals("org.jsecurity.authc.UsernamePasswordToken - Md(D4hwL%$jH^, rememberMe=false", string0);
      
      usernamePasswordToken0.toString();
      assertFalse(usernamePasswordToken0.isRememberMe());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      char[] charArray0 = new char[7];
      charArray0[0] = '>';
      charArray0[1] = 'L';
      charArray0[2] = '3';
      charArray0[3] = 'K';
      charArray0[5] = 'V';
      charArray0[6] = ';';
      InetAddress inetAddress0 = MockInetAddress.getLoopbackAddress();
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken((String) null, charArray0, true, inetAddress0);
      usernamePasswordToken0.getInetAddress();
      assertTrue(usernamePasswordToken0.isRememberMe());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MockInetAddress.getLocalHost();
      MockInetAddress.getByName("9,bq?(ks5m 'Etz3uOB");
      InetAddress inetAddress0 = MockInetAddress.anyLocalAddress();
      char[] charArray0 = new char[3];
      charArray0[2] = 'Q';
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken("9,bq?(ks5m 'Etz3uOB", charArray0, false, inetAddress0);
      String string0 = usernamePasswordToken0.toString();
      assertEquals("org.jsecurity.authc.UsernamePasswordToken - 9,bq?(ks5m 'Etz3uOB, rememberMe=false (/192.168.1.42)", string0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      char[] charArray0 = new char[9];
      charArray0[0] = '}';
      charArray0[1] = '_';
      charArray0[2] = 'p';
      charArray0[3] = '*';
      charArray0[4] = 'y';
      charArray0[5] = 'e';
      charArray0[6] = 'R';
      charArray0[7] = 'K';
      charArray0[8] = '_';
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken("1^#JF<>Nq]ErjUotG!,", charArray0);
      usernamePasswordToken0.clear();
      assertArrayEquals(new char[] {'\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000'}, charArray0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      InetAddress inetAddress0 = MockInetAddress.getLocalHost();
      MockInetAddress.getByName("9,bq?(ks5m 'Etz3uOB");
      MockInetAddress.anyLocalAddress();
      char[] charArray0 = new char[5];
      charArray0[0] = 'P';
      charArray0[1] = 'P';
      charArray0[2] = 'P';
      charArray0[3] = 'y';
      charArray0[4] = 'Q';
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken((String) null, charArray0, inetAddress0);
      usernamePasswordToken0.getInetAddress();
      assertFalse(usernamePasswordToken0.isRememberMe());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.2295488300275705
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken("", "", false, (InetAddress) null);
      usernamePasswordToken0.toString();
      char[] charArray0 = new char[8];
      charArray0[1] = 'U';
      usernamePasswordToken0.getUsername();
      String string0 = usernamePasswordToken0.toString();
      assertEquals("org.jsecurity.authc.UsernamePasswordToken - , rememberMe=false", string0);
      
      usernamePasswordToken0.clear();
      usernamePasswordToken0.clear();
      UsernamePasswordToken usernamePasswordToken1 = new UsernamePasswordToken("org.jsecurity.authc.UsernamePasswordToken - , rememberMe=false", "", false);
      usernamePasswordToken1.clear();
      usernamePasswordToken0.setPassword(charArray0);
      usernamePasswordToken1.clear();
      usernamePasswordToken0.clear();
      assertFalse(usernamePasswordToken0.isRememberMe());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MockInetAddress.getLocalHost();
      MockInetAddress.getByName("9,bq?(ks5m 'Etz3uOB");
      MockInetAddress.anyLocalAddress();
      char[] charArray0 = new char[3];
      charArray0[2] = 'Q';
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte)36;
      byteArray0[2] = (byte)36;
      byteArray0[3] = (byte) (-67);
      InetAddress inetAddress0 = MockInetAddress.getByAddress("%YA>[KFt='^uJ8", byteArray0);
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken("9,bq?(ks5m 'Etz3uOB", charArray0, inetAddress0);
      usernamePasswordToken0.getInetAddress();
      assertFalse(usernamePasswordToken0.isRememberMe());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.913820010008589
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      char[] charArray0 = new char[1];
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken();
      usernamePasswordToken0.setUsername((String) null);
      usernamePasswordToken0.toString();
      UsernamePasswordToken usernamePasswordToken1 = new UsernamePasswordToken("N1aX)X]GACw~>[|YKm", (String) null, false);
      usernamePasswordToken0.getPrincipal();
      usernamePasswordToken0.getCredentials();
      usernamePasswordToken0.getUsername();
      String string0 = usernamePasswordToken0.toString();
      assertEquals("org.jsecurity.authc.UsernamePasswordToken - null, rememberMe=false", string0);
      
      usernamePasswordToken0.getUsername();
      usernamePasswordToken1.setUsername("N1aX)X]GACw~>[|YKm");
      usernamePasswordToken1.getInetAddress();
      UsernamePasswordToken usernamePasswordToken2 = new UsernamePasswordToken("[prB,2XQl){>r^", "Cd6aD>R_yPiZAs");
      usernamePasswordToken2.clear();
      usernamePasswordToken0.clear();
      usernamePasswordToken1.clear();
      usernamePasswordToken1.setPassword(charArray0);
      assertFalse(usernamePasswordToken1.isRememberMe());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      char[] charArray0 = new char[1];
      charArray0[0] = '%';
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken("P4hqLmVu", charArray0);
      usernamePasswordToken0.clear();
      assertArrayEquals(new char[] {'\u0000'}, charArray0);
      assertFalse(usernamePasswordToken0.isRememberMe());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken();
      String string0 = usernamePasswordToken0.toString();
      assertEquals("org.jsecurity.authc.UsernamePasswordToken - null, rememberMe=false", string0);
      
      usernamePasswordToken0.getPassword();
      usernamePasswordToken0.setUsername("[prB,2XQl){>r^");
      usernamePasswordToken0.clear();
      usernamePasswordToken0.getUsername();
      usernamePasswordToken0.setPassword((char[]) null);
      assertFalse(usernamePasswordToken0.isRememberMe());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.3200862559959092
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken("", "", false, (InetAddress) null);
      String string0 = usernamePasswordToken0.toString();
      assertEquals("org.jsecurity.authc.UsernamePasswordToken - , rememberMe=false", string0);
      
      usernamePasswordToken0.clear();
      usernamePasswordToken0.isRememberMe();
      UsernamePasswordToken usernamePasswordToken1 = new UsernamePasswordToken("", (String) null, false, (InetAddress) null);
      usernamePasswordToken1.clear();
      usernamePasswordToken1.setInetAddress((InetAddress) null);
      usernamePasswordToken1.clear();
      usernamePasswordToken1.toString();
      usernamePasswordToken0.toString();
      usernamePasswordToken0.clear();
      usernamePasswordToken1.clear();
      usernamePasswordToken1.getInetAddress();
      usernamePasswordToken0.toString();
      String string1 = usernamePasswordToken1.toString();
      assertEquals("org.jsecurity.authc.UsernamePasswordToken - null, rememberMe=false", string1);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      InetAddress inetAddress0 = MockInetAddress.getByName("f [_wSnUnq6t");
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken((String) null, "", false, inetAddress0);
      usernamePasswordToken0.clear();
      Object object0 = usernamePasswordToken0.getCredentials();
      assertNull(object0);
      assertFalse(usernamePasswordToken0.isRememberMe());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      InetAddress inetAddress0 = MockInetAddress.getLocalHost();
      MockInetAddress.getByName("%YA>[KFt='^uJ8");
      char[] charArray0 = new char[2];
      charArray0[0] = 'M';
      MockInetAddress.anyLocalAddress();
      MockInetAddress.anyLocalAddress();
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken("9XD\"EKoU$h", charArray0, inetAddress0);
      usernamePasswordToken0.clear();
      assertArrayEquals(new char[] {'\u0000', '\u0000'}, charArray0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[0] = 'J';
      charArray0[1] = 'q';
      charArray0[2] = 'q';
      charArray0[3] = 'O';
      charArray0[4] = 'v';
      InetAddress inetAddress0 = MockInetAddress.getLoopbackAddress();
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken(" (", charArray0, true, inetAddress0);
      boolean boolean0 = usernamePasswordToken0.isRememberMe();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.3823452227303257
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken();
      usernamePasswordToken0.toString();
      char[] charArray0 = new char[8];
      charArray0[0] = 'W';
      charArray0[1] = 'U';
      charArray0[2] = 'Y';
      charArray0[3] = 'i';
      charArray0[4] = 'K';
      charArray0[5] = 'p';
      charArray0[6] = '%';
      charArray0[2] = '7';
      usernamePasswordToken0.setPassword(charArray0);
      usernamePasswordToken0.toString();
      UsernamePasswordToken usernamePasswordToken1 = new UsernamePasswordToken("Md(D4hwL%$jH^", "", false, (InetAddress) null);
      usernamePasswordToken1.clear();
      char[] charArray1 = usernamePasswordToken1.getPassword();
      assertNull(charArray1);
      
      usernamePasswordToken1.toString();
      assertFalse(usernamePasswordToken1.isRememberMe());
      
      String string0 = usernamePasswordToken0.toString();
      assertEquals("org.jsecurity.authc.UsernamePasswordToken - null, rememberMe=false", string0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      MockInetAddress.getLocalHost();
      MockInetAddress.getByName("9,bq?(ks5m 'Etz3uOB");
      MockInetAddress.anyLocalAddress();
      char[] charArray0 = new char[3];
      charArray0[0] = 'Q';
      byte[] byteArray0 = new byte[4];
      MockInetAddress.getByAddress(" (", byteArray0);
      InetAddress inetAddress0 = MockInetAddress.getLoopbackAddress();
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken("9,bq?(ks5m 'Etz3uOB", charArray0, inetAddress0);
      usernamePasswordToken0.clear();
      assertArrayEquals(new char[] {'\u0000', '\u0000', '\u0000'}, charArray0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.574464215715726
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      InetAddress inetAddress0 = MockInetAddress.anyLocalAddress();
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken("[prB,2XQl){>r^", "[prB,2XQl){>r^", inetAddress0);
      usernamePasswordToken0.setInetAddress(inetAddress0);
      char[] charArray0 = usernamePasswordToken0.getPassword();
      usernamePasswordToken0.setUsername("[prB,2XQl){>r^");
      usernamePasswordToken0.clear();
      usernamePasswordToken0.getUsername();
      usernamePasswordToken0.setPassword(charArray0);
      usernamePasswordToken0.getPrincipal();
      assertFalse(usernamePasswordToken0.isRememberMe());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      MockInetAddress.getLocalHost();
      MockInetAddress.getByName("9,bq?(ks5m 'Etz3uOB");
      MockInetAddress.anyLocalAddress();
      char[] charArray0 = new char[3];
      charArray0[0] = 'Q';
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte)36;
      byteArray0[2] = (byte)36;
      byteArray0[3] = (byte) (-67);
      InetAddress inetAddress0 = MockInetAddress.getByAddress("%YA>[KFt='^uJ8", byteArray0);
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken("9,bq?(ks5m 'Etz3uOB", charArray0, inetAddress0);
      String string0 = usernamePasswordToken0.toString();
      assertEquals("org.jsecurity.authc.UsernamePasswordToken - 9,bq?(ks5m 'Etz3uOB, rememberMe=false (%YA>[KFt='^uJ8/0.36.36.189)", string0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      char[] charArray0 = new char[9];
      charArray0[1] = 'k';
      charArray0[2] = 'C';
      charArray0[3] = 'C';
      charArray0[4] = '+';
      charArray0[5] = '=';
      charArray0[7] = 'f';
      charArray0[8] = ')';
      char[] charArray1 = new char[2];
      charArray1[0] = ')';
      charArray1[1] = '+';
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken("m/v'c0biiX=)B$iV]h&", charArray1, false);
      String string0 = usernamePasswordToken0.toString();
      assertEquals("org.jsecurity.authc.UsernamePasswordToken - m/v'c0biiX=)B$iV]h&, rememberMe=false", string0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      char[] charArray0 = new char[4];
      charArray0[0] = '\"';
      charArray0[1] = '\"';
      charArray0[2] = '8';
      charArray0[3] = 'p';
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken("m(+=i)RA4R$~S&IWn.w", charArray0);
      assertFalse(usernamePasswordToken0.isRememberMe());
      
      usernamePasswordToken0.setRememberMe(true);
      assertTrue(usernamePasswordToken0.isRememberMe());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      char[] charArray0 = new char[1];
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken("", charArray0, false);
      usernamePasswordToken0.getCredentials();
      assertFalse(usernamePasswordToken0.isRememberMe());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken(";u:m%fo5qzX_;EG2^B{", ";D<Q63", true);
      usernamePasswordToken0.getPrincipal();
      usernamePasswordToken0.getCredentials();
      usernamePasswordToken0.getUsername();
      char[] charArray0 = new char[5];
      charArray0[0] = 'r';
      charArray0[1] = ';';
      charArray0[2] = 'B';
      usernamePasswordToken0.setUsername(">Q$nf6WO}>iM");
      assertTrue(usernamePasswordToken0.isRememberMe());
  }
}
