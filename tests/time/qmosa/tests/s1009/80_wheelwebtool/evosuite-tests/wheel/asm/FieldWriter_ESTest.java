/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 20:40:22 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.SequenceInputStream;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassReader;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;
import wheel.asm.Item;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.4804779276453799
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-581));
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "SynOh!etic";
      stringArray0[3] = "";
      stringArray0[4] = "SynOh!etic";
      stringArray0[5] = "";
      stringArray0[6] = "";
      stringArray0[7] = "";
      classWriter0.visit((-1694), (-1694), "", "SynOh!etic", "", stringArray0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-581), "SynOh!etic", "SynOh!etic", "SynOh!etic", (Object) null);
      fieldWriter0.getSize();
      ByteVector byteVector0 = classWriter0.pool;
      ByteVector byteVector1 = byteVector0.put12(1, (-581));
      ByteVector byteVector2 = byteVector0.putByte(2);
      byteVector1.putUTF8(";X\r\"0y");
      byteVector2.putLong((-1981L));
      fieldWriter0.put(byteVector0);
      AnnotationVisitor annotationVisitor0 = fieldWriter0.visitAnnotation("DE0Ezu`=", false);
      assertNotNull(annotationVisitor0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.4895424853149775
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Attribute attribute0 = new Attribute("5!#U");
      Attribute attribute1 = attribute0.next;
      ClassWriter classWriter0 = new ClassWriter((-1218));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "Signature", "Signature", "", (Object) null);
      fieldWriter0.getSize();
      ByteVector byteVector0 = classWriter0.pool;
      ByteVector byteVector1 = byteVector0.putByte((-1218));
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector2 = byteVector1.putInt(1);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.8505612088663046
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-581));
      FileSystemHandling.shouldAllThrowIOExceptions();
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "Synthetic", "Synthetic", "Synthetic", (Object) null);
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.putUTF8("Synthetic");
      ByteVector byteVector2 = byteVector1.put12(131072, 2);
      ByteVector byteVector3 = byteVector2.putShort(2);
      byteVector3.putShort(8);
      byteVector3.put12(2230, 2230);
      byteVector3.putUTF8("Synthetic");
      Attribute attribute0 = new Attribute("<LDp%M3l^1N");
      Attribute attribute1 = attribute0.next;
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-59);
      byteArray0[1] = (byte)37;
      byteArray0[2] = (byte)5;
      byteArray0[3] = (byte) (-88);
      byteArray0[4] = (byte)7;
      byteArray0[5] = (byte)74;
      byteVector1.data = byteArray0;
      sequenceInputStream0.close();
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.5305417951003921
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-618));
      FileSystemHandling.shouldAllThrowIOExceptions();
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "Synthetic", "Synthetic", "Synthetic", (Object) null);
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.putShort(1);
      byteVector0.putLong(2);
      ByteVector byteVector2 = new ByteVector();
      ByteVector byteVector3 = byteVector0.putLong(1L);
      byteVector3.put11((-618), 328);
      fieldWriter0.put(byteVector3);
      fieldWriter0.getSize();
      FieldWriter fieldWriter1 = classWriter0.lastField;
      FieldWriter fieldWriter2 = classWriter0.lastField;
      FieldWriter fieldWriter3 = classWriter0.lastField;
      byteVector1.put12(1, (-686));
      fieldWriter3.visitAnnotation("Synthetic", true);
      FieldWriter fieldWriter4 = classWriter0.lastField;
      fieldWriter4.put(byteVector0);
      fieldWriter0.visitAnnotation("Synthetic", false);
      fieldWriter3.visitAnnotation("Synthetic", false);
      fieldWriter0.visitAnnotation("Synthetic", false);
      fieldWriter3.put(byteVector1);
      assertSame(fieldWriter3, fieldWriter0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0414408810333782
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-581));
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-581), "_:}Xl@vVR'&)w)", "}qdj#qkE>+y", (String) null, "");
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.putShort(1);
      ByteVector byteVector2 = byteVector0.putLong(1);
      byteVector2.putUTF8("_:}Xl@vVR'&)w)");
      byteVector1.putShort((-719));
      byteVector2.put12((-1), 1);
      ByteVector byteVector3 = byteVector1.putShort(11);
      byteVector3.putUTF8("org.apache.commons.io.filefilter.WildcardFilter");
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      Enumeration<InputStream> enumeration1 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration1).hasMoreElements();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(enumeration1);
      sequenceInputStream1.close();
      fieldWriter0.put(byteVector2);
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0108643020548935
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-581));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 703, "", "T_v ;'Tm-h", (String) null, "Syntheic");
      fieldWriter0.getSize();
      Attribute attribute0 = new Attribute("");
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader("");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.5087598483524394
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-581));
      FileSystemHandling.shouldAllThrowIOExceptions();
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "Synthetic", "Synthetic", "Synthetic", (Object) null);
      ByteVector byteVector0 = classWriter0.pool;
      ByteVector byteVector1 = byteVector0.putUTF8("Synthetic");
      byteVector1.put11(2, (-2284));
      ByteVector byteVector2 = byteVector1.putLong(1);
      byteVector2.putUTF8("S|+_{");
      fieldWriter0.put(byteVector0);
      fieldWriter0.visitAnnotation("P%'", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(28, int0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.2525306450725109
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-581));
      String string0 = "Synthetic";
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "Synthetic", "Synthetic", "Synthetic", (Object) null);
      Attribute attribute0 = new Attribute("Synthetic");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.5087598483524394
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ClassWriter classWriter0 = new ClassWriter(49);
      Item[] itemArray0 = new Item[8];
      Item item0 = classWriter0.newLong((-1L));
      itemArray0[0] = item0;
      item0.strVal3 = null;
      Item item1 = classWriter0.newDouble(3597.6852467852236);
      itemArray0[1] = item1;
      Item item2 = classWriter0.key;
      itemArray0[2] = item2;
      Item item3 = classWriter0.key3;
      itemArray0[3] = item3;
      Item item4 = classWriter0.newMethodItem("[TQaS]", "[TQaS]", "fWs3|c{z\"\"lWx[25px", false);
      itemArray0[4] = item4;
      Item item5 = classWriter0.key3;
      itemArray0[5] = item5;
      Item item6 = new Item(0);
      itemArray0[6] = item6;
      Item item7 = classWriter0.newFloat(0);
      itemArray0[7] = item7;
      classWriter0.typeTable = itemArray0;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1696, "The wildcard array must not be null", "The wildcard array must not be null", "The wildcard array must not be null", "9Z6<~YSGH4");
      fieldWriter0.visitAnnotation("fWs3|c{z\"\"lWx[25px", false);
      fieldWriter0.getSize();
      ByteVector byteVector0 = new ByteVector(4068);
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-581));
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      AnnotationVisitor annotationVisitor0 = classWriter0.visitAnnotation("", true);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-581), "_:}Xl@vVR'&)w)", "}qdj#qkE>+y", (String) null, "");
      classWriter0.thisName = null;
      AnnotationVisitor annotationVisitor1 = fieldWriter0.visitAnnotation("wheel.asm.FieldWriter", true);
      assertNotSame(annotationVisitor1, annotationVisitor0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.2885387096069334
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-581));
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1173, "Synthetic", "Synthetic", "Synthetic", "");
      fieldWriter0.getSize();
      fieldWriter0.visitEnd();
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.9859526183035509
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-581));
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-581), "SynOhetic", "SynOhetic", "SynOhetic", (Object) null);
      fieldWriter0.getSize();
      ByteVector byteVector0 = classWriter0.pool;
      ByteVector byteVector1 = byteVector0.putLong(20L);
      byteVector0.put12(1, (-581));
      byteVector1.putByte(638);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      BufferedInputStream bufferedInputStream0 = null;
      try {
        bufferedInputStream0 = new BufferedInputStream(pipedInputStream0, (-459));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Buffer size <= 0
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.1077646945629542
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-581));
      FileSystemHandling.shouldAllThrowIOExceptions();
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "Synthetic", "Synthetic", "Synthetic", (Object) null);
      ByteVector byteVector0 = new ByteVector();
      byteVector0.putUTF8("Synthetic");
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 131072, "", "Synthetic", (String) null, (Object) null);
      fieldWriter0.getSize();
      ClassWriter classWriter1 = new ClassWriter(16);
      ByteVector byteVector1 = classWriter1.pool;
      ByteVector byteVector2 = byteVector0.putLong(0L);
      int int0 = 1537;
      ByteVector byteVector3 = byteVector2.put12(1537, 1);
      byteVector3.putByte(131072);
      byteVector3.putUTF8("Synthetic");
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 131072);
      PipedOutputStream pipedOutputStream1 = null;
      try {
        pipedOutputStream1 = new PipedOutputStream(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-581));
      FileSystemHandling.shouldAllThrowIOExceptions();
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 333, "P!%.3b", "P!%.3b", "org.apache.commons.io.filefilter.TrueFileFilter", "Synthetic");
      Attribute attribute0 = new Attribute("pYTW");
      Attribute attribute1 = attribute0.next;
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.9289738521096165
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-581));
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "xDGg'&");
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "xDGg'&", "xDGg'&", "xDGg'&", "Rhs\"pWp<A'M");
      Attribute attribute0 = new Attribute("Rhs\"pWp<A'M");
      fieldWriter0.visitAttribute(attribute0);
      String string0 = "Synthetic";
      FieldWriter fieldWriter1 = null;
      try {
        fieldWriter1 = new FieldWriter(classWriter0, (-581), "Synthetic", "Synthetic", "Synthetic", classWriter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.ClassWriter@5
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.8659992569610426
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "JSR/RET are not supported with computeFrames option");
      ByteVector byteVector0 = new ByteVector(20);
      ByteVector byteVector1 = byteVector0.putShort(14);
      ClassWriter classWriter0 = new ClassWriter(8);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 3216, "Synthetic", "org.apache.commons.io.filefilter.AbstractFileFilter", (String) null, "JSR/RET are not supported with computeFrames option");
      fieldWriter0.put(byteVector0);
      assertSame(byteVector0, byteVector1);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Object object0 = new Object();
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter((ClassWriter) null, (-123), "D", "%>eV&7'1E[", "Wae|~U`aqU]RY:", object0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.9859526183035509
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-581));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 5517, "Syntheit", "", "Syntheit", "Syntheit");
      fieldWriter0.getSize();
      Attribute attribute0 = new Attribute("Syntheit");
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader("Syntheit");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }
}
